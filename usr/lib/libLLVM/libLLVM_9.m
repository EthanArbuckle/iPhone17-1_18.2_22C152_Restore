double sub_1CBD8CB80(uint64_t a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  long long v16;
  long long v17;
  long long v18;
  long long v19;
  long long v20;
  double result;
  long long v22;
  long long v23;
  long long v24;
  long long v25;
  long long v26;
  _OWORD v27[4];
  long long v28;
  long long v29;
  long long v30;
  long long v31;
  long long v32;
  int v33;

  *a3 = 57;
  v7 = *a2;
  v8 = sub_1CBDA6464(v7, 3u);
  v9 = sub_1CBDA6464(v7, 0x2Eu);
  v10 = sub_1CBDA6464(v7, 0x11u);
  v11 = sub_1CBDA6464(v7, 4u);
  v33 = 0;
  v31 = 0u;
  v32 = 0u;
  v29 = 0u;
  v30 = 0u;
  v28 = 0u;
  v26 = 0u;
  memset(v27, 0, sizeof(v27));
  v24 = 0u;
  v25 = 0u;
  v23 = 0u;
  sub_1CBD8C5F0(a1, (uint64_t)a2, v8, (uint64_t)&v23);
  v12 = *(_DWORD *)(*((void *)a2 + 2) + 16 * v9 + 8);
  LOBYTE(v24) = (v12 & 0x20) != 0;
  BYTE8(v30) = (v12 & 0x80) != 0;
  sub_1CBD85A80((_DWORD *)a1, (uint64_t)a2, v9, (BOOL *)&v32 + 12, (int8x8_t *)((char *)&v29 + 12), (uint64_t)&v30 + 12);
  sub_1CBD8C148(a1, (uint64_t)a2, v10, (uint64_t)&v25 + 4);
  sub_1CBD8C148(a1, (uint64_t)a2, v11, (uint64_t)v27);
  v13 = *(unsigned int *)a2;
  BYTE12(v24) = sub_1CBDB2780(v13, 8, 0) == 19;
  v14 = *(_DWORD *)a1;
  if (*(_DWORD *)a1 >= 5u)
  {
    v33 = 1;
    if ((*(unsigned char *)(*(void *)(a1 + 8) + 196) & 2) != 0)
    {
      v15 = sub_1CBE52E8C(v13);
      if ((v15 & 0xFF00000000) == 0 || v15 != 47) {
        v33 = 0;
      }
    }
  }
  *(void *)((char *)&v27[2] + 4) = 0x200000000;
  *(void *)((char *)&v27[1] + 12) = 0;
  memset((char *)&v27[2] + 12, 0, 20);
  v28 = 0x200000000uLL;
  DWORD1(v30) = 0;
  LODWORD(v29) = 0;
  if (v14 >= 4)
  {
    if ((DWORD2(v23) - 2) <= 3) {
      DWORD1(v29) = dword_1CDF53620[DWORD2(v23) - 2];
    }
    DWORD2(v29) = 62;
  }
  v16 = v31;
  *(_OWORD *)(a4 + 160) = v30;
  *(_OWORD *)(a4 + 176) = v16;
  *(_OWORD *)(a4 + 192) = v32;
  *(_DWORD *)(a4 + 208) = v33;
  v17 = v27[3];
  *(_OWORD *)(a4 + 96) = v27[2];
  *(_OWORD *)(a4 + 112) = v17;
  v18 = v29;
  *(_OWORD *)(a4 + 128) = v28;
  *(_OWORD *)(a4 + 144) = v18;
  v19 = v26;
  *(_OWORD *)(a4 + 32) = v25;
  *(_OWORD *)(a4 + 48) = v19;
  v20 = v27[1];
  *(_OWORD *)(a4 + 64) = v27[0];
  *(_OWORD *)(a4 + 80) = v20;
  result = *(double *)&v23;
  v22 = v24;
  *(_OWORD *)a4 = v23;
  *(_OWORD *)(a4 + 16) = v22;
  return result;
}

__n128 sub_1CBD8CDB8(uint64_t a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 50;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x11u);
  unsigned int v11 = sub_1CBDA6464(v7, 4u);
  unsigned int v12 = sub_1CBDA6464(v7, 0x14u);
  long long v33 = 0u;
  memset(v34, 0, 60);
  long long v31 = 0u;
  long long v32 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  __n128 v26 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  sub_1CBD8C5F0(a1, (uint64_t)a2, v8, (uint64_t)&v23);
  LOBYTE(v24) = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80((_DWORD *)a1, (uint64_t)a2, v9, (BOOL *)&v34[3] + 4, (int8x8_t *)v34 + 1, (uint64_t)&v34[1] + 4);
  sub_1CBD8C148(a1, (uint64_t)a2, v10, (uint64_t)&v25 + 4);
  sub_1CBD8C148(a1, (uint64_t)a2, v11, (uint64_t)&v27);
  sub_1CBD8C148(a1, (uint64_t)a2, v12, (uint64_t)&v28 + 12);
  uint64_t v13 = *(unsigned int *)a2;
  BYTE12(v24) = sub_1CBDB2780(v13, 8, 0) == 19;
  unsigned int v14 = *(_DWORD *)a1;
  if (*(_DWORD *)a1 >= 5u)
  {
    DWORD2(v34[3]) = 1;
    if ((*(unsigned char *)(*(void *)(a1 + 8) + 196) & 2) != 0)
    {
      uint64_t v22 = sub_1CBE52E8C(v13);
      if ((v22 & 0xFF00000000) == 0 || v22 != 47) {
        DWORD2(v34[3]) = 0;
      }
    }
  }
  *((void *)&v30 + 1) = 0;
  long long v31 = 0x200000000uLL;
  long long v32 = 0uLL;
  long long v33 = 2uLL;
  LODWORD(v34[1]) = 0;
  if (v14 >= 4)
  {
    if ((DWORD2(v23) - 2) <= 3) {
      LODWORD(v34[0]) = dword_1CDF53620[DWORD2(v23) - 2];
    }
    DWORD1(v34[0]) = 55;
  }
  long long v15 = v34[2];
  *(_OWORD *)(a4 + 192) = v34[1];
  *(_OWORD *)(a4 + 208) = v15;
  *(_OWORD *)(a4 + 220) = *(_OWORD *)((char *)&v34[2] + 12);
  long long v16 = v32;
  *(_OWORD *)(a4 + 128) = v31;
  *(_OWORD *)(a4 + 144) = v16;
  long long v17 = v34[0];
  *(_OWORD *)(a4 + 160) = v33;
  *(_OWORD *)(a4 + 176) = v17;
  long long v18 = v28;
  *(_OWORD *)(a4 + 64) = v27;
  *(_OWORD *)(a4 + 80) = v18;
  long long v19 = v30;
  *(_OWORD *)(a4 + 96) = v29;
  *(_OWORD *)(a4 + 112) = v19;
  long long v20 = v24;
  *(_OWORD *)a4 = v23;
  *(_OWORD *)(a4 + 16) = v20;
  __n128 result = v26;
  *(_OWORD *)(a4 + 32) = v25;
  *(__n128 *)(a4 + 48) = result;
  return result;
}

double sub_1CBD8D010(uint64_t a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 59;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x11u);
  uint64_t v28 = 0;
  long long v26 = 0u;
  long long v27 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v19 = 0u;
  sub_1CBD8C5F0(a1, (uint64_t)a2, v8, (uint64_t)&v19);
  LOBYTE(v20) = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80((_DWORD *)a1, (uint64_t)a2, v9, (BOOL *)&v28, (int8x8_t *)((char *)&v25 + 4), (uint64_t)&v26);
  sub_1CBD8C148(a1, (uint64_t)a2, v10, (uint64_t)&v21 + 4);
  uint64_t v11 = *(unsigned int *)a2;
  BYTE12(v20) = sub_1CBDB2780(v11, 8, 0) == 19;
  unsigned int v12 = *(_DWORD *)a1;
  if (*(_DWORD *)a1 >= 5u)
  {
    HIDWORD(v28) = 1;
    if ((*(unsigned char *)(*(void *)(a1 + 8) + 196) & 2) != 0)
    {
      uint64_t v18 = sub_1CBE52E8C(v11);
      if ((v18 & 0xFF00000000) == 0 || v18 != 47) {
        HIDWORD(v28) = 0;
      }
    }
  }
  *(void *)&long long v23 = 0;
  *((void *)&v23 + 1) = 0x200000000;
  *(void *)&long long v24 = 0;
  HIDWORD(v25) = 0;
  DWORD2(v24) = 0;
  if (v12 >= 4)
  {
    if ((DWORD2(v19) - 2) <= 3) {
      HIDWORD(v24) = dword_1CDF53620[DWORD2(v19) - 2];
    }
    LODWORD(v25) = 64;
  }
  long long v13 = v26;
  *(_OWORD *)(a4 + 96) = v25;
  *(_OWORD *)(a4 + 112) = v13;
  *(_OWORD *)(a4 + 128) = v27;
  *(void *)(a4 + 144) = v28;
  long long v14 = v22;
  *(_OWORD *)(a4 + 32) = v21;
  *(_OWORD *)(a4 + 48) = v14;
  long long v15 = v24;
  *(_OWORD *)(a4 + 64) = v23;
  *(_OWORD *)(a4 + 80) = v15;
  double result = *(double *)&v19;
  long long v17 = v20;
  *(_OWORD *)a4 = v19;
  *(_OWORD *)(a4 + 16) = v17;
  return result;
}

double sub_1CBD8D1F8(uint64_t a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 59;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x11u);
  unsigned int v11 = sub_1CBDA6464(v7, 0x1Cu);
  uint64_t v30 = 0;
  long long v28 = 0u;
  long long v29 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v21 = 0u;
  sub_1CBD8C5F0(a1, (uint64_t)a2, v8, (uint64_t)&v21);
  LOBYTE(v22) = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80((_DWORD *)a1, (uint64_t)a2, v9, (BOOL *)&v30, (int8x8_t *)((char *)&v27 + 4), (uint64_t)&v28);
  sub_1CBD8C148(a1, (uint64_t)a2, v10, (uint64_t)&v23 + 4);
  uint64_t v12 = *((void *)a2 + 2);
  if (*(unsigned char *)(v12 + 16 * v11) == 1)
  {
    sub_1CBD8BD54(a1, a2, v11, (uint64_t)&v25);
  }
  else
  {
    LOBYTE(v25) = *(unsigned char *)(v12 + 16 * v11 + 8) & 0x7F;
    *((void *)&v25 + 1) = 0x200000006;
    LOBYTE(v26) = 0;
  }
  uint64_t v13 = *(unsigned int *)a2;
  BYTE12(v22) = sub_1CBDB2780(v13, 8, 0) == 19;
  int v14 = *(_DWORD *)a1;
  if (*(_DWORD *)a1 >= 5u)
  {
    HIDWORD(v30) = 1;
    if ((*(unsigned char *)(*(void *)(a1 + 8) + 196) & 2) != 0)
    {
      uint64_t v15 = sub_1CBE52E8C(v13);
      if ((v15 & 0xFF00000000) == 0 || v15 != 47) {
        HIDWORD(v30) = 0;
      }
    }
    HIDWORD(v27) = 1;
  }
  else
  {
    HIDWORD(v27) = 1;
    if (v14 != 4) {
      goto LABEL_14;
    }
  }
  if ((DWORD2(v21) - 2) <= 3) {
    HIDWORD(v26) = dword_1CDF53620[DWORD2(v21) - 2];
  }
  LODWORD(v27) = 64;
LABEL_14:
  long long v16 = v28;
  *(_OWORD *)(a4 + 96) = v27;
  *(_OWORD *)(a4 + 112) = v16;
  *(_OWORD *)(a4 + 128) = v29;
  *(void *)(a4 + 144) = v30;
  long long v17 = v24;
  *(_OWORD *)(a4 + 32) = v23;
  *(_OWORD *)(a4 + 48) = v17;
  long long v18 = v26;
  *(_OWORD *)(a4 + 64) = v25;
  *(_OWORD *)(a4 + 80) = v18;
  double result = *(double *)&v21;
  long long v20 = v22;
  *(_OWORD *)a4 = v21;
  *(_OWORD *)(a4 + 16) = v20;
  return result;
}

double sub_1CBD8D430(uint64_t a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 59;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x11u);
  uint64_t v28 = 0;
  long long v26 = 0u;
  long long v27 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v19 = 0u;
  sub_1CBD8C5F0(a1, (uint64_t)a2, v8, (uint64_t)&v19);
  LOBYTE(v20) = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80((_DWORD *)a1, (uint64_t)a2, v9, (BOOL *)&v28, (int8x8_t *)((char *)&v25 + 4), (uint64_t)&v26);
  sub_1CBD8C148(a1, (uint64_t)a2, v10, (uint64_t)&v21 + 4);
  uint64_t v11 = *(unsigned int *)a2;
  BYTE12(v20) = sub_1CBDB2780(v11, 8, 0) == 19;
  unsigned int v12 = *(_DWORD *)a1;
  if (*(_DWORD *)a1 >= 5u)
  {
    HIDWORD(v28) = 1;
    if ((*(unsigned char *)(*(void *)(a1 + 8) + 196) & 2) != 0)
    {
      uint64_t v13 = sub_1CBE52E8C(v11);
      if ((v13 & 0xFF00000000) == 0 || v13 != 47) {
        HIDWORD(v28) = 0;
      }
    }
  }
  *(void *)&long long v23 = 0;
  *((void *)&v23 + 1) = 0x200000000;
  *(void *)&long long v24 = 0;
  HIDWORD(v25) = 0;
  DWORD2(v24) = 0;
  if (v12 >= 4)
  {
    if ((DWORD2(v19) - 2) <= 3) {
      HIDWORD(v24) = dword_1CDF53620[DWORD2(v19) - 2];
    }
    LODWORD(v25) = 64;
  }
  long long v14 = v26;
  *(_OWORD *)(a4 + 96) = v25;
  *(_OWORD *)(a4 + 112) = v14;
  *(_OWORD *)(a4 + 128) = v27;
  *(void *)(a4 + 144) = v28;
  long long v15 = v22;
  *(_OWORD *)(a4 + 32) = v21;
  *(_OWORD *)(a4 + 48) = v15;
  long long v16 = v24;
  *(_OWORD *)(a4 + 64) = v23;
  *(_OWORD *)(a4 + 80) = v16;
  double result = *(double *)&v19;
  long long v18 = v20;
  *(_OWORD *)a4 = v19;
  *(_OWORD *)(a4 + 16) = v18;
  return result;
}

__n128 sub_1CBD8D614(uint64_t a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 58;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x11u);
  unsigned int v11 = sub_1CBDA6464(v7, 4u);
  unsigned int v19 = sub_1CBDA6464(v7, 0x14u);
  long long v29 = 0u;
  long long v30 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  __n128 v23 = 0u;
  long long v24 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v20 = 0u;
  sub_1CBD8C5F0(a1, (uint64_t)a2, v8, (uint64_t)&v20);
  LOBYTE(v21) = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80((_DWORD *)a1, (uint64_t)a2, v9, (BOOL *)&v30 + 8, (int8x8_t *)&v28, (uint64_t)&v28 + 8);
  sub_1CBD8C148(a1, (uint64_t)a2, v10, (uint64_t)&v25 + 12);
  sub_1CBD8C148(a1, (uint64_t)a2, v11, (uint64_t)&v22 + 4);
  sub_1CBD8C148(a1, (uint64_t)a2, v19, (uint64_t)&v24);
  uint64_t v12 = *(unsigned int *)a2;
  BYTE12(v21) = sub_1CBDB2780(v12, 8, 0) == 19;
  if (*(_DWORD *)a1 >= 5u)
  {
    HIDWORD(v30) = 1;
    if ((*(unsigned char *)(*(void *)(a1 + 8) + 196) & 2) != 0)
    {
      uint64_t v13 = sub_1CBE52E8C(v12);
      if ((v13 & 0xFF00000000) == 0 || v13 != 47) {
        HIDWORD(v30) = 0;
      }
    }
  }
  else if (*(_DWORD *)a1 != 4)
  {
    goto LABEL_11;
  }
  if ((DWORD2(v20) - 2) <= 3) {
    DWORD2(v27) = dword_1CDF53620[DWORD2(v20) - 2];
  }
  HIDWORD(v27) = 63;
LABEL_11:
  long long v14 = v29;
  *(_OWORD *)(a4 + 128) = v28;
  *(_OWORD *)(a4 + 144) = v14;
  *(_OWORD *)(a4 + 160) = v30;
  long long v15 = v25;
  *(_OWORD *)(a4 + 64) = v24;
  *(_OWORD *)(a4 + 80) = v15;
  long long v16 = v27;
  *(_OWORD *)(a4 + 96) = v26;
  *(_OWORD *)(a4 + 112) = v16;
  long long v17 = v21;
  *(_OWORD *)a4 = v20;
  *(_OWORD *)(a4 + 16) = v17;
  __n128 result = v23;
  *(_OWORD *)(a4 + 32) = v22;
  *(__n128 *)(a4 + 48) = result;
  return result;
}

double sub_1CBD8D82C(uint64_t a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 61;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x11u);
  uint64_t v24 = 0;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v17 = 0u;
  sub_1CBD8C5F0(a1, (uint64_t)a2, v8, (uint64_t)&v17);
  LOBYTE(v18) = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80((_DWORD *)a1, (uint64_t)a2, v9, (BOOL *)&v24, (int8x8_t *)&v21 + 1, (uint64_t)&v22);
  sub_1CBD8C148(a1, (uint64_t)a2, v10, (uint64_t)&v19 + 4);
  uint64_t v11 = *(unsigned int *)a2;
  BYTE12(v18) = sub_1CBDB2780(v11, 8, 0) == 19;
  if (*(_DWORD *)a1 >= 5u)
  {
    HIDWORD(v24) = 1;
    if ((*(unsigned char *)(*(void *)(a1 + 8) + 196) & 2) != 0)
    {
      uint64_t v12 = sub_1CBE52E8C(v11);
      if ((v12 & 0xFF00000000) == 0 || v12 != 47) {
        HIDWORD(v24) = 0;
      }
    }
  }
  else if (*(_DWORD *)a1 != 4)
  {
    goto LABEL_11;
  }
  if ((DWORD2(v17) - 2) <= 3) {
    LODWORD(v21) = dword_1CDF53620[DWORD2(v17) - 2];
  }
  DWORD1(v21) = 66;
LABEL_11:
  long long v13 = v22;
  *(_OWORD *)(a4 + 64) = v21;
  *(_OWORD *)(a4 + 80) = v13;
  *(_OWORD *)(a4 + 96) = v23;
  *(void *)(a4 + 112) = v24;
  long long v14 = v18;
  *(_OWORD *)a4 = v17;
  *(_OWORD *)(a4 + 16) = v14;
  double result = *(double *)&v19;
  long long v16 = v20;
  *(_OWORD *)(a4 + 32) = v19;
  *(_OWORD *)(a4 + 48) = v16;
  return result;
}

double sub_1CBD8D9F0(uint64_t a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 54;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x11u);
  uint64_t v24 = 0;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v17 = 0u;
  sub_1CBD8C5F0(a1, (uint64_t)a2, v8, (uint64_t)&v17);
  LOBYTE(v18) = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80((_DWORD *)a1, (uint64_t)a2, v9, (BOOL *)&v24, (int8x8_t *)&v21 + 1, (uint64_t)&v22);
  sub_1CBD8C148(a1, (uint64_t)a2, v10, (uint64_t)&v19 + 4);
  uint64_t v11 = *(unsigned int *)a2;
  BYTE12(v18) = sub_1CBDB2780(v11, 8, 0) == 19;
  if (*(_DWORD *)a1 >= 5u)
  {
    HIDWORD(v24) = 1;
    if ((*(unsigned char *)(*(void *)(a1 + 8) + 196) & 2) != 0)
    {
      uint64_t v12 = sub_1CBE52E8C(v11);
      if ((v12 & 0xFF00000000) == 0 || v12 != 47) {
        HIDWORD(v24) = 0;
      }
    }
  }
  else if (*(_DWORD *)a1 != 4)
  {
    goto LABEL_11;
  }
  if ((DWORD2(v17) - 2) <= 3) {
    LODWORD(v21) = dword_1CDF53620[DWORD2(v17) - 2];
  }
  DWORD1(v21) = 59;
LABEL_11:
  long long v13 = v22;
  *(_OWORD *)(a4 + 64) = v21;
  *(_OWORD *)(a4 + 80) = v13;
  *(_OWORD *)(a4 + 96) = v23;
  *(void *)(a4 + 112) = v24;
  long long v14 = v18;
  *(_OWORD *)a4 = v17;
  *(_OWORD *)(a4 + 16) = v14;
  double result = *(double *)&v19;
  long long v16 = v20;
  *(_OWORD *)(a4 + 32) = v19;
  *(_OWORD *)(a4 + 48) = v16;
  return result;
}

double sub_1CBD8DBB4(uint64_t a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 47;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x11u);
  uint64_t v24 = 0;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v17 = 0u;
  sub_1CBD8C5F0(a1, (uint64_t)a2, v8, (uint64_t)&v17);
  LOBYTE(v18) = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80((_DWORD *)a1, (uint64_t)a2, v9, (BOOL *)&v24, (int8x8_t *)&v21 + 1, (uint64_t)&v22);
  sub_1CBD8C148(a1, (uint64_t)a2, v10, (uint64_t)&v19 + 4);
  uint64_t v11 = *(unsigned int *)a2;
  BYTE12(v18) = sub_1CBDB2780(v11, 8, 0) == 19;
  if (*(_DWORD *)a1 >= 5u)
  {
    HIDWORD(v24) = 1;
    if ((*(unsigned char *)(*(void *)(a1 + 8) + 196) & 2) != 0)
    {
      uint64_t v12 = sub_1CBE52E8C(v11);
      if ((v12 & 0xFF00000000) == 0 || v12 != 47) {
        HIDWORD(v24) = 0;
      }
    }
  }
  else if (*(_DWORD *)a1 != 4)
  {
    goto LABEL_11;
  }
  if ((DWORD2(v17) - 2) <= 3) {
    LODWORD(v21) = dword_1CDF53620[DWORD2(v17) - 2];
  }
  DWORD1(v21) = 52;
LABEL_11:
  long long v13 = v22;
  *(_OWORD *)(a4 + 64) = v21;
  *(_OWORD *)(a4 + 80) = v13;
  *(_OWORD *)(a4 + 96) = v23;
  *(void *)(a4 + 112) = v24;
  long long v14 = v18;
  *(_OWORD *)a4 = v17;
  *(_OWORD *)(a4 + 16) = v14;
  double result = *(double *)&v19;
  long long v16 = v20;
  *(_OWORD *)(a4 + 32) = v19;
  *(_OWORD *)(a4 + 48) = v16;
  return result;
}

double sub_1CBD8DD78(uint64_t a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 63;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x11u);
  uint64_t v24 = 0;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v17 = 0u;
  sub_1CBD8C5F0(a1, (uint64_t)a2, v8, (uint64_t)&v17);
  LOBYTE(v18) = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80((_DWORD *)a1, (uint64_t)a2, v9, (BOOL *)&v24, (int8x8_t *)&v21 + 1, (uint64_t)&v22);
  sub_1CBD8C148(a1, (uint64_t)a2, v10, (uint64_t)&v19 + 4);
  uint64_t v11 = *(unsigned int *)a2;
  BYTE12(v18) = sub_1CBDB2780(v11, 8, 0) == 19;
  if (*(_DWORD *)a1 >= 5u)
  {
    HIDWORD(v24) = 1;
    if ((*(unsigned char *)(*(void *)(a1 + 8) + 196) & 2) != 0)
    {
      uint64_t v12 = sub_1CBE52E8C(v11);
      if ((v12 & 0xFF00000000) == 0 || v12 != 47) {
        HIDWORD(v24) = 0;
      }
    }
  }
  else if (*(_DWORD *)a1 != 4)
  {
    goto LABEL_11;
  }
  if ((DWORD2(v17) - 2) <= 3) {
    LODWORD(v21) = dword_1CDF53620[DWORD2(v17) - 2];
  }
  DWORD1(v21) = 68;
LABEL_11:
  long long v13 = v22;
  *(_OWORD *)(a4 + 64) = v21;
  *(_OWORD *)(a4 + 80) = v13;
  *(_OWORD *)(a4 + 96) = v23;
  *(void *)(a4 + 112) = v24;
  long long v14 = v18;
  *(_OWORD *)a4 = v17;
  *(_OWORD *)(a4 + 16) = v14;
  double result = *(double *)&v19;
  long long v16 = v20;
  *(_OWORD *)(a4 + 32) = v19;
  *(_OWORD *)(a4 + 48) = v16;
  return result;
}

double sub_1CBD8DF3C(uint64_t a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 62;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x11u);
  uint64_t v24 = 0;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v17 = 0u;
  sub_1CBD8C5F0(a1, (uint64_t)a2, v8, (uint64_t)&v17);
  LOBYTE(v18) = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80((_DWORD *)a1, (uint64_t)a2, v9, (BOOL *)&v24, (int8x8_t *)&v21 + 1, (uint64_t)&v22);
  sub_1CBD8C148(a1, (uint64_t)a2, v10, (uint64_t)&v19 + 4);
  uint64_t v11 = *(unsigned int *)a2;
  BYTE12(v18) = sub_1CBDB2780(v11, 8, 0) == 19;
  if (*(_DWORD *)a1 >= 5u)
  {
    HIDWORD(v24) = 1;
    if ((*(unsigned char *)(*(void *)(a1 + 8) + 196) & 2) != 0)
    {
      uint64_t v12 = sub_1CBE52E8C(v11);
      if ((v12 & 0xFF00000000) == 0 || v12 != 47) {
        HIDWORD(v24) = 0;
      }
    }
  }
  else if (*(_DWORD *)a1 != 4)
  {
    goto LABEL_10;
  }
  if ((DWORD2(v17) - 2) <= 3) {
    LODWORD(v21) = dword_1CDF53620[DWORD2(v17) - 2];
  }
  DWORD1(v21) = 67;
LABEL_10:
  long long v13 = v22;
  *(_OWORD *)(a4 + 64) = v21;
  *(_OWORD *)(a4 + 80) = v13;
  *(_OWORD *)(a4 + 96) = v23;
  *(void *)(a4 + 112) = v24;
  long long v14 = v18;
  *(_OWORD *)a4 = v17;
  *(_OWORD *)(a4 + 16) = v14;
  double result = *(double *)&v19;
  long long v16 = v20;
  *(_OWORD *)(a4 + 32) = v19;
  *(_OWORD *)(a4 + 48) = v16;
  return result;
}

double sub_1CBD8E104(uint64_t a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 44;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x11u);
  uint64_t v24 = 0;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v17 = 0u;
  sub_1CBD8C5F0(a1, (uint64_t)a2, v8, (uint64_t)&v17);
  LOBYTE(v18) = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80((_DWORD *)a1, (uint64_t)a2, v9, (BOOL *)&v24, (int8x8_t *)&v21 + 1, (uint64_t)&v22);
  sub_1CBD8C148(a1, (uint64_t)a2, v10, (uint64_t)&v19 + 4);
  uint64_t v11 = *(unsigned int *)a2;
  BYTE12(v18) = sub_1CBDB2780(v11, 8, 0) == 19;
  if (*(_DWORD *)a1 >= 5u)
  {
    HIDWORD(v24) = 1;
    if ((*(unsigned char *)(*(void *)(a1 + 8) + 196) & 2) != 0)
    {
      uint64_t v12 = sub_1CBE52E8C(v11);
      if ((v12 & 0xFF00000000) == 0 || v12 != 47) {
        HIDWORD(v24) = 0;
      }
    }
  }
  else if (*(_DWORD *)a1 != 4)
  {
    goto LABEL_11;
  }
  if ((DWORD2(v17) - 2) <= 3) {
    LODWORD(v21) = dword_1CDF53620[DWORD2(v17) - 2];
  }
  DWORD1(v21) = 49;
LABEL_11:
  long long v13 = v22;
  *(_OWORD *)(a4 + 64) = v21;
  *(_OWORD *)(a4 + 80) = v13;
  *(_OWORD *)(a4 + 96) = v23;
  *(void *)(a4 + 112) = v24;
  long long v14 = v18;
  *(_OWORD *)a4 = v17;
  *(_OWORD *)(a4 + 16) = v14;
  double result = *(double *)&v19;
  long long v16 = v20;
  *(_OWORD *)(a4 + 32) = v19;
  *(_OWORD *)(a4 + 48) = v16;
  return result;
}

double sub_1CBD8E2C8(uint64_t a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 45;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x11u);
  uint64_t v24 = 0;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v17 = 0u;
  sub_1CBD8C5F0(a1, (uint64_t)a2, v8, (uint64_t)&v17);
  LOBYTE(v18) = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80((_DWORD *)a1, (uint64_t)a2, v9, (BOOL *)&v24, (int8x8_t *)&v21 + 1, (uint64_t)&v22);
  sub_1CBD8C148(a1, (uint64_t)a2, v10, (uint64_t)&v19 + 4);
  uint64_t v11 = *(unsigned int *)a2;
  BYTE12(v18) = sub_1CBDB2780(v11, 8, 0) == 19;
  if (*(_DWORD *)a1 >= 5u)
  {
    HIDWORD(v24) = 1;
    if ((*(unsigned char *)(*(void *)(a1 + 8) + 196) & 2) != 0)
    {
      uint64_t v12 = sub_1CBE52E8C(v11);
      if ((v12 & 0xFF00000000) == 0 || v12 != 47) {
        HIDWORD(v24) = 0;
      }
    }
  }
  else if (*(_DWORD *)a1 != 4)
  {
    goto LABEL_11;
  }
  if ((DWORD2(v17) - 2) <= 3) {
    LODWORD(v21) = dword_1CDF53620[DWORD2(v17) - 2];
  }
  DWORD1(v21) = 50;
LABEL_11:
  long long v13 = v22;
  *(_OWORD *)(a4 + 64) = v21;
  *(_OWORD *)(a4 + 80) = v13;
  *(_OWORD *)(a4 + 96) = v23;
  *(void *)(a4 + 112) = v24;
  long long v14 = v18;
  *(_OWORD *)a4 = v17;
  *(_OWORD *)(a4 + 16) = v14;
  double result = *(double *)&v19;
  long long v16 = v20;
  *(_OWORD *)(a4 + 32) = v19;
  *(_OWORD *)(a4 + 48) = v16;
  return result;
}

double sub_1CBD8E48C(uint64_t a1, unsigned __int16 *a2, _DWORD *a3, _OWORD *a4)
{
  *a3 = 60;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x11u);
  long long v20 = 0u;
  memset(v21, 0, 60);
  long long v18 = 0u;
  long long v19 = 0u;
  long long v17 = 0u;
  sub_1CBD8C5F0(a1, (uint64_t)a2, v8, (uint64_t)&v17);
  LOBYTE(v18) = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80((_DWORD *)a1, (uint64_t)a2, v9, (BOOL *)&v21[3] + 4, (int8x8_t *)v21 + 1, (uint64_t)&v21[1] + 4);
  sub_1CBD8C148(a1, (uint64_t)a2, v10, (uint64_t)&v19 + 4);
  int v11 = *(_DWORD *)a2;
  BYTE12(v18) = sub_1CBDB2780(*(unsigned int *)a2, 8, 0) == 19;
  if (*(_DWORD *)a1 >= 5u)
  {
    DWORD2(v21[3]) = 1;
    if ((*(unsigned char *)(*(void *)(a1 + 8) + 196) & 2) != 0)
    {
      uint64_t v16 = sub_1CBE52E8C(v11);
      if ((v16 & 0xFF00000000) == 0 || v16 != 47) {
        DWORD2(v21[3]) = 0;
      }
    }
  }
  sub_1CBD8E654((unsigned int *)a2, (uint64_t)&v17);
  if (*(_DWORD *)a1 >= 4u)
  {
    if ((DWORD2(v17) - 2) <= 3) {
      LODWORD(v21[0]) = dword_1CDF53620[DWORD2(v17) - 2];
    }
    DWORD1(v21[0]) = 65;
  }
  long long v12 = v21[1];
  a4[4] = v21[0];
  a4[5] = v12;
  a4[6] = v21[2];
  *(_OWORD *)((char *)a4 + 108) = *(_OWORD *)((char *)&v21[2] + 12);
  long long v13 = v18;
  *a4 = v17;
  a4[1] = v13;
  double result = *(double *)&v19;
  long long v15 = v20;
  a4[2] = v19;
  a4[3] = v15;
  return result;
}

uint64_t sub_1CBD8E654(unsigned int *a1, uint64_t a2)
{
  uint64_t result = sub_1CBDB2780(*a1, 15, 0);
  if ((int)result > 28)
  {
    if (result == 29)
    {
      int v4 = 3;
    }
    else
    {
      if (result != 30) {
        goto LABEL_11;
      }
      int v4 = 2;
    }
  }
  else if (result == 20)
  {
    int v4 = 1;
  }
  else
  {
    int v4 = 0;
    if (result != 28) {
LABEL_11:
    }
      llvm::report_fatal_error((llvm *)"Expecting rounding mode for RndParamValue", (const llvm::Twine *)1);
  }
  *(_DWORD *)(a2 + 80) = v4;
  return result;
}

double sub_1CBD8E6DC(uint64_t a1, unsigned __int16 *a2, _DWORD *a3, _OWORD *a4)
{
  *a3 = 60;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x11u);
  long long v20 = 0u;
  memset(v21, 0, 60);
  long long v18 = 0u;
  long long v19 = 0u;
  long long v17 = 0u;
  sub_1CBD8C5F0(a1, (uint64_t)a2, v8, (uint64_t)&v17);
  LOBYTE(v18) = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80((_DWORD *)a1, (uint64_t)a2, v9, (BOOL *)&v21[3] + 4, (int8x8_t *)v21 + 1, (uint64_t)&v21[1] + 4);
  sub_1CBD8C148(a1, (uint64_t)a2, v10, (uint64_t)&v19 + 4);
  int v11 = *(_DWORD *)a2;
  BYTE12(v18) = sub_1CBDB2780(*(unsigned int *)a2, 8, 0) == 19;
  if (*(_DWORD *)a1 >= 5u)
  {
    DWORD2(v21[3]) = 1;
    if ((*(unsigned char *)(*(void *)(a1 + 8) + 196) & 2) != 0)
    {
      uint64_t v16 = sub_1CBE52E8C(v11);
      if ((v16 & 0xFF00000000) == 0 || v16 != 47) {
        DWORD2(v21[3]) = 0;
      }
    }
  }
  sub_1CBD8E654((unsigned int *)a2, (uint64_t)&v17);
  if (*(_DWORD *)a1 >= 4u)
  {
    if ((DWORD2(v17) - 2) <= 3) {
      LODWORD(v21[0]) = dword_1CDF53620[DWORD2(v17) - 2];
    }
    DWORD1(v21[0]) = 65;
  }
  long long v12 = v21[1];
  a4[4] = v21[0];
  a4[5] = v12;
  a4[6] = v21[2];
  *(_OWORD *)((char *)a4 + 108) = *(_OWORD *)((char *)&v21[2] + 12);
  long long v13 = v18;
  *a4 = v17;
  a4[1] = v13;
  double result = *(double *)&v19;
  long long v15 = v20;
  a4[2] = v19;
  a4[3] = v15;
  return result;
}

double sub_1CBD8E8A0(uint64_t a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 43;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x11u);
  unsigned int v11 = sub_1CBDA6464(v7, 4u);
  int v29 = 0;
  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v20 = 0u;
  sub_1CBD8C5F0(a1, (uint64_t)a2, v8, (uint64_t)&v20);
  LOBYTE(v21) = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80((_DWORD *)a1, (uint64_t)a2, v9, (BOOL *)&v28 + 12, (int8x8_t *)((char *)&v26 + 4), (uint64_t)&v26 + 12);
  sub_1CBD8C148(a1, (uint64_t)a2, v10, (uint64_t)&v22 + 4);
  sub_1CBD8C148(a1, (uint64_t)a2, v11, (uint64_t)&v24);
  uint64_t v12 = *(unsigned int *)a2;
  BYTE12(v21) = sub_1CBDB2780(v12, 8, 0) == 19;
  int v13 = *(_DWORD *)a1;
  if (*(_DWORD *)a1 >= 5u)
  {
    int v29 = 1;
    if ((*(unsigned char *)(*(void *)(a1 + 8) + 196) & 2) != 0)
    {
      uint64_t v14 = sub_1CBE52E8C(v12);
      if ((v14 & 0xFF00000000) == 0 || v14 != 47) {
        int v29 = 0;
      }
    }
    sub_1CBDB2780(v12, 15, 0);
    LODWORD(v22) = 1;
  }
  else
  {
    sub_1CBDB2780(v12, 15, 0);
    LODWORD(v22) = 1;
    if (v13 != 4) {
      goto LABEL_12;
    }
  }
  if ((DWORD2(v20) - 2) <= 3) {
    HIDWORD(v25) = dword_1CDF53620[DWORD2(v20) - 2];
  }
  LODWORD(v26) = 48;
LABEL_12:
  long long v15 = v27;
  *(_OWORD *)(a4 + 96) = v26;
  *(_OWORD *)(a4 + 112) = v15;
  *(_OWORD *)(a4 + 128) = v28;
  *(_DWORD *)(a4 + 144) = v29;
  long long v16 = v23;
  *(_OWORD *)(a4 + 32) = v22;
  *(_OWORD *)(a4 + 48) = v16;
  long long v17 = v25;
  *(_OWORD *)(a4 + 64) = v24;
  *(_OWORD *)(a4 + 80) = v17;
  double result = *(double *)&v20;
  long long v19 = v21;
  *(_OWORD *)a4 = v20;
  *(_OWORD *)(a4 + 16) = v19;
  return result;
}

void sub_1CBD8EABC(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  sub_1CBDA0424(a1, (unsigned __int16 *)a2, a3, a4, 1);
  uint64_t v7 = *(void *)(a2 + 16);
  if (*(unsigned char *)(v7 + 16 * a3) != 2 && (*(unsigned char *)(v7 + 16 * (a3 + 1) + 9) & 8) != 0) {
    *(_DWORD *)(a4 + 12) = 4;
  }

  sub_1CBD9FB50((long long *)a2, a3, a4);
}

uint64_t sub_1CBD8EB3C(uint64_t result, unsigned __int16 *a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = a3;
  uint64_t v7 = *((void *)a2 + 2);
  unsigned int v8 = (unsigned __int8 *)(v7 + 16 * a3);
  if (*v8 == 5)
  {
    uint64_t v9 = *(void *)(v7 + 16 * a3 + 8);
    if (v9) {
      uint64_t v10 = v9 - 8;
    }
    else {
      uint64_t v10 = 0;
    }
    if (!*(_DWORD *)(v10 + 24))
    {
      if (*(_DWORD *)(v10 + 40) == 8) {
        int v11 = 2;
      }
      else {
        int v11 = 1;
      }
      *(_DWORD *)(a4 + 8) = 3;
      *(_DWORD *)(a4 + 12) = v11;
      *(_WORD *)a4 = *(_WORD *)(*(void *)(v10 + 32) + 16) & 0x1FF;
    }
    uint64_t v12 = a3 + 1;
    *(_DWORD *)(a4 + 20) = (*(_DWORD *)(v7 + 16 * v12 + 8) >> 20) & 0xF;
    goto LABEL_20;
  }
  uint64_t v14 = result;
  int v15 = (__int16)word_1CDF77000[dword_1CDF6DEF0[*a2] + (unsigned __int16)a3];
  if (v15 == 62)
  {
    *(_DWORD *)(a4 + 8) = 4;
LABEL_16:
    *(_DWORD *)(a4 + 12) = sub_1CBD9FCC8((unsigned int *)a2);
    uint64_t v19 = *(void *)(v14 + 24);
    int v18 = *(_DWORD *)(a4 + 8);
LABEL_17:
    *(void *)a4 = sub_1CBD9FA40(v19, v8, v18);
    goto LABEL_18;
  }
  long long v16 = *(void **)(result + 24);
  uint64_t v17 = sub_1CBDA014C(v16, (unsigned __int8 *)(v7 + 16 * a3));
  *(_DWORD *)(a4 + 8) = v17;
  if (v17 == 4) {
    goto LABEL_16;
  }
  int v18 = v17;
  if (v17 != 1)
  {
    char v23 = v15 + 117;
    if ((v15 - 139) <= 0x25)
    {
      if (((1 << v23) & 0x1600015) != 0)
      {
        int v24 = 1;
LABEL_30:
        *(_DWORD *)(a4 + 12) = v24;
        uint64_t v19 = (uint64_t)v16;
        goto LABEL_17;
      }
      if (((1 << v23) & 0x3400000000) != 0)
      {
        int v24 = 2;
        goto LABEL_30;
      }
    }
    int v24 = ((uint64_t (*)(uint64_t, unsigned __int8 *, uint64_t))loc_1CBD9FDCC)(v14, v8, v17);
    long long v16 = *(void **)(v14 + 24);
    int v18 = *(_DWORD *)(a4 + 8);
    goto LABEL_30;
  }
  *(_WORD *)a4 = *(void *)(v7 + 16 * v6 + 8);
  *(_DWORD *)(a4 + 12) = 1;
LABEL_18:
  double result = sub_1CBDA00E4((uint64_t)a2, (uint64_t)v8, a3, a4);
  uint64_t v7 = *((void *)a2 + 2);
  if (*(unsigned char *)(v7 + 16 * v6) == 2) {
    return result;
  }
  uint64_t v12 = a3 + 1;
LABEL_20:
  uint64_t v20 = v7 + 16 * v12;
  uint64_t v22 = *(void *)(v20 + 8);
  long long v21 = (uint64_t *)(v20 + 8);
  LOBYTE(v12) = v22;
  if ((v22 & 0x800) != 0)
  {
    *(_DWORD *)(a4 + 12) = 4;
    uint64_t v12 = *v21;
  }
  *(unsigned char *)(a4 + 25) = (v12 & 4) != 0;
  *(unsigned char *)(a4 + 26) = (v12 & 2) != 0;
  *(unsigned char *)(a4 + 27) = v12 & 1;
  return result;
}

uint64_t sub_1CBD8ED54(uint64_t result, int *a2, _DWORD *a3)
{
  if (a3[11] == 1) {
    a3[12] = 2;
  }
  if (a3[18] == 1) {
    a3[19] = 2;
  }
  if (a3[25] == 1) {
    a3[26] = 2;
  }
  if (*(_DWORD *)result >= 5u)
  {
    a3[43] = 1;
    if ((*(unsigned char *)(*(void *)(result + 8) + 196) & 2) != 0)
    {
      double result = sub_1CBE52E8C(*a2);
      if ((result & 0xFF00000000) == 0 || result != 47) {
        a3[43] = 0;
      }
    }
  }
  return result;
}

__n128 sub_1CBD8EDF0(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 56;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x11u);
  unsigned int v11 = sub_1CBDA6464(v7, 4u);
  unsigned int v17 = sub_1CBDA6464(v7, 0x14u);
  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  __n128 v21 = 0u;
  long long v22 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v18 = 0u;
  sub_1CBD8EABC((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v18);
  LOBYTE(v19) = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, (BOOL *)&v28 + 8, (int8x8_t *)&v26, (uint64_t)&v26 + 8);
  sub_1CBD8EB3C((uint64_t)a1, a2, v10, (uint64_t)&v20 + 4);
  sub_1CBD8EB3C((uint64_t)a1, a2, v11, (uint64_t)&v22);
  sub_1CBD8EB3C((uint64_t)a1, a2, v17, (uint64_t)&v23 + 12);
  BYTE12(v19) = sub_1CBDB2780(*(unsigned int *)a2, 8, 0) == 19;
  sub_1CBD8ED54((uint64_t)a1, (int *)a2, &v18);
  if (*a1 >= 4u)
  {
    if ((DWORD2(v18) - 2) <= 3) {
      DWORD2(v25) = dword_1CDF53620[DWORD2(v18) - 2];
    }
    HIDWORD(v25) = 61;
  }
  long long v12 = v27;
  *(_OWORD *)(a4 + 128) = v26;
  *(_OWORD *)(a4 + 144) = v12;
  *(_OWORD *)(a4 + 160) = v28;
  long long v13 = v23;
  *(_OWORD *)(a4 + 64) = v22;
  *(_OWORD *)(a4 + 80) = v13;
  long long v14 = v25;
  *(_OWORD *)(a4 + 96) = v24;
  *(_OWORD *)(a4 + 112) = v14;
  long long v15 = v19;
  *(_OWORD *)a4 = v18;
  *(_OWORD *)(a4 + 16) = v15;
  __n128 result = v21;
  *(_OWORD *)(a4 + 32) = v20;
  *(__n128 *)(a4 + 48) = result;
  return result;
}

__n128 sub_1CBD8EFD4(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 36;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x11u);
  unsigned int v11 = sub_1CBDA6464(v7, 4u);
  memset(v22, 0, 44);
  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v16 = 0u;
  __n128 v17 = 0u;
  sub_1CBD8F178((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v16);
  v17.n128_u8[0] = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, (BOOL *)&v22[2] + 8, (int8x8_t *)v22, (uint64_t)v22 + 8);
  sub_1CBD8F254((uint64_t)a1, a2, v10, (uint64_t)&v18);
  sub_1CBD8F254((uint64_t)a1, a2, v11, (uint64_t)&v19 + 12);
  v17.n128_u8[12] = sub_1CBDB2780(*(unsigned int *)a2, 8, 0) == 19;
  if (*a1 >= 4u)
  {
    if ((DWORD2(v16) - 2) <= 3) {
      DWORD2(v21) = dword_1CDF53620[DWORD2(v16) - 2];
    }
    HIDWORD(v21) = 41;
  }
  long long v12 = v22[1];
  *(_OWORD *)(a4 + 96) = v22[0];
  *(_OWORD *)(a4 + 112) = v12;
  *(_OWORD *)(a4 + 124) = *(_OWORD *)((char *)&v22[1] + 12);
  long long v13 = v19;
  *(_OWORD *)(a4 + 32) = v18;
  *(_OWORD *)(a4 + 48) = v13;
  long long v14 = v21;
  *(_OWORD *)(a4 + 64) = v20;
  *(_OWORD *)(a4 + 80) = v14;
  __n128 result = v17;
  *(_OWORD *)a4 = v16;
  *(__n128 *)(a4 + 16) = result;
  return result;
}

uint64_t sub_1CBD8F178(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  unsigned int v8 = (unsigned __int8 *)(*(void *)(a2 + 16) + 16 * a3);
  *(_DWORD *)(a4 + 24) = 0;
  if (*v8 == 1)
  {
    *(_DWORD *)(a4 + 8) = sub_1CBDA014C(*(void **)(a1 + 24), v8);
    *(_DWORD *)(a4 + 12) = ((uint64_t (*)(uint64_t, unsigned __int8 *))loc_1CBD9FDCC)(a1, v8);
    uint64_t result = sub_1CBD9FA40(*(void *)(a1 + 24), v8, *(_DWORD *)(a4 + 8));
    *(void *)a4 = result;
    *(_DWORD *)(a4 + 20) = (*(_DWORD *)(*(void *)(a2 + 16) + 16 * (a3 + 1) + 8) >> 20) & 0xF;
  }
  else
  {
    return sub_1CBDA0574(a1, a2, v8, a3, a4, 0);
  }
  return result;
}

uint64_t sub_1CBD8F254(uint64_t result, unsigned __int16 *a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = a3;
  uint64_t v7 = *((void *)a2 + 2);
  unsigned int v8 = (unsigned __int8 *)(v7 + 16 * a3);
  if (*v8 == 5)
  {
    uint64_t v9 = *(void *)(v7 + 16 * a3 + 8);
    if (v9) {
      uint64_t v10 = v9 - 8;
    }
    else {
      uint64_t v10 = 0;
    }
    if (!*(_DWORD *)(v10 + 24))
    {
      int v11 = *(_DWORD *)(v10 + 40);
      if (v11 == 2)
      {
        int v12 = 1;
      }
      else if (v11 == 4)
      {
        int v12 = 2;
      }
      else
      {
        int v12 = 3;
      }
      *(_DWORD *)(a4 + 8) = 3;
      *(_DWORD *)(a4 + 12) = v12;
      *(_WORD *)a4 = *(_WORD *)(*(void *)(v10 + 32) + 16) & 0x1FF;
    }
    uint64_t v17 = a3 + 1;
    *(_DWORD *)(a4 + 20) = (*(_DWORD *)(v7 + 16 * v17 + 8) >> 20) & 0xF;
    goto LABEL_23;
  }
  uint64_t v14 = result;
  if (word_1CDF77000[dword_1CDF6DEF0[*a2] + (unsigned __int16)a3] == 62)
  {
    *(_DWORD *)(a4 + 8) = 4;
LABEL_14:
    int v16 = sub_1CBD9FCC8((unsigned int *)a2);
LABEL_15:
    *(_DWORD *)(a4 + 12) = v16;
    *(void *)a4 = sub_1CBD9FA40(*(void *)(v14 + 24), v8, *(_DWORD *)(a4 + 8));
    goto LABEL_16;
  }
  int v15 = sub_1CBDA014C(*(void **)(result + 24), (unsigned __int8 *)(v7 + 16 * a3));
  *(_DWORD *)(a4 + 8) = v15;
  if (v15 == 4) {
    goto LABEL_14;
  }
  if (v15 != 1)
  {
    int v16 = ((uint64_t (*)(uint64_t, unsigned __int8 *))loc_1CBD9FDCC)(v14, v8);
    goto LABEL_15;
  }
  *(_WORD *)a4 = *(void *)(v7 + 16 * v6 + 8);
  *(_DWORD *)(a4 + 12) = 1;
LABEL_16:
  uint64_t result = sub_1CBDA00E4((uint64_t)a2, (uint64_t)v8, a3, a4);
  uint64_t v7 = *((void *)a2 + 2);
  if (*(unsigned char *)(v7 + 16 * v6) == 2) {
    return result;
  }
  uint64_t v17 = a3 + 1;
LABEL_23:
  char v18 = *(unsigned char *)(v7 + 16 * v17 + 8);
  *(unsigned char *)(a4 + 25) = (v18 & 4) != 0;
  *(unsigned char *)(a4 + 26) = (v18 & 2) != 0;
  *(unsigned char *)(a4 + 27) = v18 & 1;
  return result;
}

__n128 sub_1CBD8F40C(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 42;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x11u);
  unsigned int v11 = sub_1CBDA6464(v7, 4u);
  memset(v22, 0, 44);
  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v16 = 0u;
  __n128 v17 = 0u;
  sub_1CBD8F178((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v16);
  v17.n128_u8[0] = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, (BOOL *)&v22[2] + 8, (int8x8_t *)v22, (uint64_t)v22 + 8);
  sub_1CBD8F254((uint64_t)a1, a2, v10, (uint64_t)&v18);
  sub_1CBD8F254((uint64_t)a1, a2, v11, (uint64_t)&v19 + 12);
  v17.n128_u8[12] = sub_1CBDB2780(*(unsigned int *)a2, 8, 0) == 19;
  if (*a1 >= 4u)
  {
    if ((DWORD2(v16) - 2) <= 3) {
      DWORD2(v21) = dword_1CDF53620[DWORD2(v16) - 2];
    }
    HIDWORD(v21) = 47;
  }
  long long v12 = v22[1];
  *(_OWORD *)(a4 + 96) = v22[0];
  *(_OWORD *)(a4 + 112) = v12;
  *(_OWORD *)(a4 + 124) = *(_OWORD *)((char *)&v22[1] + 12);
  long long v13 = v19;
  *(_OWORD *)(a4 + 32) = v18;
  *(_OWORD *)(a4 + 48) = v13;
  long long v14 = v21;
  *(_OWORD *)(a4 + 64) = v20;
  *(_OWORD *)(a4 + 80) = v14;
  __n128 result = v17;
  *(_OWORD *)a4 = v16;
  *(__n128 *)(a4 + 16) = result;
  return result;
}

__n128 sub_1CBD8F5B0(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 37;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x11u);
  unsigned int v11 = sub_1CBDA6464(v7, 4u);
  unsigned int v12 = sub_1CBDA6464(v7, 0x14u);
  uint64_t v28 = 0;
  long long v26 = 0u;
  long long v27 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v20 = 0u;
  __n128 v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  sub_1CBD8F178((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v18);
  LOBYTE(v19) = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, (BOOL *)&v28 + 4, (int8x8_t *)((char *)&v25 + 12), (uint64_t)&v26 + 4);
  sub_1CBD8F254((uint64_t)a1, a2, v10, (uint64_t)&v20);
  sub_1CBD8F254((uint64_t)a1, a2, v11, (uint64_t)&v21.n128_i64[1] + 4);
  sub_1CBD8F254((uint64_t)a1, a2, v12, (uint64_t)&v23 + 8);
  BYTE12(v19) = sub_1CBDB2780(*(unsigned int *)a2, 8, 0) == 19;
  if (*a1 >= 4u)
  {
    if ((DWORD2(v18) - 2) <= 3) {
      DWORD1(v25) = dword_1CDF53620[DWORD2(v18) - 2];
    }
    DWORD2(v25) = 42;
  }
  long long v13 = v27;
  *(_OWORD *)(a4 + 128) = v26;
  *(_OWORD *)(a4 + 144) = v13;
  *(void *)(a4 + 160) = v28;
  long long v14 = v23;
  *(_OWORD *)(a4 + 64) = v22;
  *(_OWORD *)(a4 + 80) = v14;
  long long v15 = v25;
  *(_OWORD *)(a4 + 96) = v24;
  *(_OWORD *)(a4 + 112) = v15;
  long long v16 = v19;
  *(_OWORD *)a4 = v18;
  *(_OWORD *)(a4 + 16) = v16;
  __n128 result = v21;
  *(_OWORD *)(a4 + 32) = v20;
  *(__n128 *)(a4 + 48) = result;
  return result;
}

void sub_1CBD8F780(uint64_t a1, unsigned __int16 *a2, unsigned int a3, uint64_t a4)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  uint64_t v8 = a3;
  unsigned int v9 = (unsigned __int8 *)(*((void *)a2 + 2) + 16 * a3);
  *(_DWORD *)(a4 + 24) = 0;
  if (*v9 == 1)
  {
    unsigned int v10 = *(void **)(a1 + 24);
    int v11 = sub_1CBDA014C(v10, v9);
    *(_DWORD *)(a4 + 8) = v11;
    if (((__int16)word_1CDF77000[dword_1CDF6DEF0[*a2] + (unsigned __int16)a3] - 139) <= 0x25)
    {
      int v12 = v11;
      if (((1 << (word_1CDF77000[dword_1CDF6DEF0[*a2] + (unsigned __int16)a3] + 117)) & 0x1600015) != 0)
      {
        int v13 = 1;
LABEL_9:
        *(_DWORD *)(a4 + 12) = v13;
        *(void *)a4 = sub_1CBD9FA40((uint64_t)v10, v9, v12);
        *(_DWORD *)(a4 + 20) = (*(_DWORD *)(*((void *)a2 + 2) + 16 * (a3 + 1) + 8) >> 20) & 0xF;
        goto LABEL_10;
      }
      if (((1 << (word_1CDF77000[dword_1CDF6DEF0[*a2] + (unsigned __int16)a3] + 117)) & 0x3400000000) != 0)
      {
        int v13 = 2;
        goto LABEL_9;
      }
    }
    int v13 = ((uint64_t (*)(uint64_t, unsigned __int8 *))loc_1CBD9FDCC)(a1, v9);
    unsigned int v10 = *(void **)(a1 + 24);
    int v12 = *(_DWORD *)(a4 + 8);
    goto LABEL_9;
  }
  sub_1CBDA0574(a1, (uint64_t)a2, v9, a3, a4, 1);
LABEL_10:
  long long v17 = *(_OWORD *)a2;
  long long v18 = v20;
  uint64_t v19 = 0x800000000;
  if (&v17 == (long long *)a2 || (unsigned int v14 = *((_DWORD *)a2 + 6)) == 0)
  {
    long long v15 = v20;
  }
  else
  {
    if (v14 >= 9) {
      llvm::SmallVectorBase<unsigned int>::grow_pod();
    }
    memcpy(v20, *((const void **)a2 + 2), 16 * *((unsigned int *)a2 + 6));
    long long v15 = v18;
    LODWORD(v19) = v14;
  }
  v20[128] = *((unsigned char *)a2 + 160);
  int v16 = 1;
  if (v15[16 * v8] == 5)
  {
    if (**(unsigned char **)&v15[16 * v8 + 8] == 4) {
      int v16 = 2;
    }
    else {
      int v16 = 1;
    }
  }
  *(unsigned char *)(a4 + 28) = v15[16 * v16 + 8 + 16 * a3] & 1;
  if (v15 != v20) {
    free(v15);
  }
}

__n128 sub_1CBD8F9C4(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 41;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x11u);
  unsigned int v11 = sub_1CBDA6464(v7, 4u);
  unsigned int v12 = sub_1CBDA6464(v7, 0x14u);
  uint64_t v28 = 0;
  long long v26 = 0u;
  long long v27 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v20 = 0u;
  __n128 v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  sub_1CBD8F780((uint64_t)a1, a2, v8, (uint64_t)&v18);
  LOBYTE(v19) = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, (BOOL *)&v28 + 4, (int8x8_t *)((char *)&v25 + 12), (uint64_t)&v26 + 4);
  sub_1CBD8EB3C((uint64_t)a1, a2, v10, (uint64_t)&v20);
  sub_1CBD8EB3C((uint64_t)a1, a2, v11, (uint64_t)&v21.n128_i64[1] + 4);
  sub_1CBD8EB3C((uint64_t)a1, a2, v12, (uint64_t)&v23 + 8);
  BYTE12(v19) = sub_1CBDB2780(*(unsigned int *)a2, 8, 0) == 19;
  if (*a1 >= 4u)
  {
    if ((DWORD2(v18) - 2) <= 3) {
      DWORD1(v25) = dword_1CDF53620[DWORD2(v18) - 2];
    }
    DWORD2(v25) = 46;
  }
  long long v13 = v27;
  *(_OWORD *)(a4 + 128) = v26;
  *(_OWORD *)(a4 + 144) = v13;
  *(void *)(a4 + 160) = v28;
  long long v14 = v23;
  *(_OWORD *)(a4 + 64) = v22;
  *(_OWORD *)(a4 + 80) = v14;
  long long v15 = v25;
  *(_OWORD *)(a4 + 96) = v24;
  *(_OWORD *)(a4 + 112) = v15;
  long long v16 = v19;
  *(_OWORD *)a4 = v18;
  *(_OWORD *)(a4 + 16) = v16;
  __n128 result = v21;
  *(_OWORD *)(a4 + 32) = v20;
  *(__n128 *)(a4 + 48) = result;
  return result;
}

__n128 sub_1CBD8FB94(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 84;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Fu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x59u);
  unsigned int v11 = sub_1CBDA6464(v7, 0x5Au);
  unsigned int v12 = sub_1CBDA6464(v7, 0x3Du);
  uint64_t v35 = 0;
  long long v33 = 0u;
  long long v34 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  long long v27 = 0u;
  __n128 v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  sub_1CBD85A80(a1, (uint64_t)a2, v8, (BOOL *)&v35 + 5, (int8x8_t *)&v27 + 1, (uint64_t)&v33 + 4);
  unint64_t v13 = *(void *)(*((void *)a2 + 2) + 16 * v9 + 8);
  v28.n128_u32[0] = v13 & 7;
  v28.n128_u32[1] = (v13 >> 11) & 7;
  v28.n128_u64[1] = (v13 << 9) & 0x300000000 | (v13 >> 7) & 7;
  LODWORD(v29) = (v13 >> 5) & 3;
  DWORD2(v29) = (v13 >> 14) & 7;
  BYTE5(v29) = (v13 & 0x200000) != 0;
  BYTE4(v29) = (v13 & 0x400000) != 0;
  BYTE4(v35) = (v13 & 0x2000000) != 0;
  BOOL v15 = (v13 & 0x4000000) == 0 && *a1 > 3u;
  LOBYTE(v27) = v15;
  sub_1CBD88E08((uint64_t)a1, a2, v10, (uint64_t)&v29 + 12);
  sub_1CBD88900((uint64_t)a1, a2, v11, (uint64_t)&v31 + 8);
  DWORD2(v25) = 5;
  if (*a1 >= 4u) {
    HIDWORD(v25) = 2;
  }
  uint64_t v16 = *((void *)a2 + 2);
  uint64_t v17 = *(void *)(v16 + 16 * v12 + 8);
  if (v17) {
    uint64_t v18 = v17 - 8;
  }
  else {
    uint64_t v18 = 0;
  }
  LOWORD(v25) = *(_WORD *)(*(void *)(v18 + 32) + 16) & 0x1FFF;
  if (v12) {
    int v19 = 1;
  }
  else {
    int v19 = 2;
  }
  unsigned int v20 = *(_DWORD *)(v16 + 16 * (v19 + v12) + 8);
  if (*a1 >= 4u)
  {
    HIDWORD(v26) = 2;
    DWORD1(v27) = 86;
  }
  long long v21 = v34;
  *(_OWORD *)(a4 + 128) = v33;
  *(_OWORD *)(a4 + 144) = v21;
  *(void *)(a4 + 160) = v35;
  long long v22 = v30;
  *(_OWORD *)(a4 + 64) = v29;
  *(_OWORD *)(a4 + 80) = v22;
  long long v23 = v32;
  *(_OWORD *)(a4 + 96) = v31;
  *(_OWORD *)(a4 + 112) = v23;
  *(_OWORD *)a4 = v25;
  DWORD1(v26) = (v20 >> 20) & 0xF;
  BYTE8(v26) = (v20 & 0x10) != 0;
  *(_OWORD *)(a4 + 16) = v26;
  __n128 result = v28;
  *(_OWORD *)(a4 + 32) = v27;
  *(__n128 *)(a4 + 48) = result;
  return result;
}

__n128 sub_1CBD8FDBC(uint64_t a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 112;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 0x57u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x2Fu);
  unsigned int v11 = sub_1CBDA6464(v7, 0x6Au);
  unsigned int v22 = sub_1CBDA6464(v7, 0x6Bu);
  unsigned int v23 = sub_1CBDA6464(v7, 0x6Cu);
  unsigned int v12 = sub_1CBDA6464(v7, 0x6Du);
  unsigned int v24 = sub_1CBDA6464(v7, 0x6Eu);
  memset(v33, 0, 44);
  long long v32 = 0u;
  long long v31 = 0u;
  long long v30 = 0u;
  long long v29 = 0u;
  __n128 v28 = 0u;
  long long v27 = 0u;
  long long v26 = 0u;
  unint64_t v13 = (unsigned __int8 *)(*((void *)a2 + 2) + 16 * v8);
  DWORD2(v25) = 2;
  HIDWORD(v25) = sub_1CBD9F8B0((unsigned int *)a2, v8, *(void **)(a1 + 16));
  *(void *)&long long v25 = sub_1CBD9FA40(*(void *)(a1 + 24), v13, 2);
  uint64_t v14 = *((void *)a2 + 2);
  DWORD1(v26) = (*(_DWORD *)(v14 + 16 * (v8 + 1) + 8) >> 20) & 0xF;
  BYTE8(v26) = (*(_DWORD *)(v14 + 16 * (v8 + 1) + 8) & 0x10) != 0;
  sub_1CBD85A80((_DWORD *)a1, (uint64_t)a2, v9, (BOOL *)&v33[2] + 8, (int8x8_t *)&v27 + 1, (uint64_t)v33 + 8);
  v28.n128_u8[0] = *(unsigned char *)(v14 + 16 * v10 + 8) >> 4;
  sub_1CBD88E08(a1, a2, v11, (uint64_t)&v31 + 12);
  sub_1CBD88E08(a1, a2, v22, (uint64_t)&v30);
  sub_1CBD9004C(a1, (unsigned int *)a2, v23, (uint64_t)v28.n128_i64 + 4);
  uint64_t v15 = *((void *)a2 + 2);
  if (*(unsigned char *)(v15 + 16 * v12) == 5) {
    LOWORD(v16) = 0;
  }
  else {
    int v16 = *(unsigned __int16 *)(v15 + 16 * v12 + 8) << 21 >> 21;
  }
  WORD6(v26) = v16;
  if (*(unsigned char *)(v15 + 16 * v24) == 5) {
    LOWORD(v17) = 0;
  }
  else {
    int v17 = *(unsigned __int16 *)(v15 + 16 * v24 + 8) << 21 >> 21;
  }
  HIWORD(v26) = v17;
  if (*(_DWORD *)a1 >= 4u) {
    *(void *)&long long v27 = 0x6F00000000;
  }
  long long v18 = v33[1];
  *(_OWORD *)(a4 + 128) = v33[0];
  *(_OWORD *)(a4 + 144) = v18;
  *(_OWORD *)(a4 + 156) = *(_OWORD *)((char *)&v33[1] + 12);
  long long v19 = v30;
  *(_OWORD *)(a4 + 64) = v29;
  *(_OWORD *)(a4 + 80) = v19;
  long long v20 = v32;
  *(_OWORD *)(a4 + 96) = v31;
  *(_OWORD *)(a4 + 112) = v20;
  *(_OWORD *)a4 = v25;
  *(_OWORD *)(a4 + 16) = v26;
  __n128 result = v28;
  *(_OWORD *)(a4 + 32) = v27;
  *(__n128 *)(a4 + 48) = result;
  return result;
}

uint64_t sub_1CBD9004C(uint64_t a1, unsigned int *a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = *((void *)a2 + 2);
  uint64_t result = sub_1CBDB2780(*a2, 37, 0);
  if (result == 41)
  {
    unsigned int v10 = (unsigned __int8 *)(v8 + 16 * a3);
    unsigned int v11 = *(void **)(a1 + 24);
    int v12 = sub_1CBDA014C(v11, v10);
    *(_DWORD *)(a4 + 8) = v12;
    *(_DWORD *)(a4 + 12) = 1;
    uint64_t result = sub_1CBD9FA40((uint64_t)v11, v10, v12);
    *(void *)a4 = result;
    uint64_t v13 = *((void *)a2 + 2) + 16 * (a3 + 1);
    *(unsigned char *)(a4 + 24) = (*(unsigned char *)(v13 + 8) & 0x10) != 0;
    int v14 = (*(_DWORD *)(v13 + 8) >> 20) & 0xF;
  }
  else
  {
    int v14 = 0;
    *(void *)(a4 + 8) = 0x100000007;
    *(_DWORD *)a4 = 9;
  }
  *(_DWORD *)(a4 + 20) = v14;
  *(unsigned char *)(a4 + 16) = 0;
  return result;
}

__n128 sub_1CBD90118(uint64_t a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 111;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 0x57u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x2Fu);
  unsigned int v11 = sub_1CBDA6464(v7, 0x6Au);
  unsigned int v22 = sub_1CBDA6464(v7, 0x6Bu);
  unsigned int v23 = sub_1CBDA6464(v7, 0x6Cu);
  unsigned int v12 = sub_1CBDA6464(v7, 0x6Du);
  unsigned int v24 = sub_1CBDA6464(v7, 0x6Eu);
  memset(v33, 0, 44);
  long long v32 = 0u;
  long long v31 = 0u;
  long long v30 = 0u;
  long long v29 = 0u;
  __n128 v28 = 0u;
  long long v27 = 0u;
  uint64_t v13 = (unsigned __int8 *)(*((void *)a2 + 2) + 16 * v8);
  DWORD2(v25) = 2;
  HIDWORD(v25) = sub_1CBD9F8B0((unsigned int *)a2, v8, *(void **)(a1 + 16));
  *(void *)&long long v25 = sub_1CBD9FA40(*(void *)(a1 + 24), v13, 2);
  uint64_t v14 = *((void *)a2 + 2);
  *(void *)((char *)&v26 + 4) = (*(_DWORD *)(v14 + 16 * (v8 + 1) + 8) >> 20) & 0xFLL;
  LODWORD(v26) = (*(unsigned char *)(v14 + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80((_DWORD *)a1, (uint64_t)a2, v9, (BOOL *)&v33[2] + 8, (int8x8_t *)&v27 + 1, (uint64_t)v33 + 8);
  v28.n128_u8[0] = *(unsigned char *)(v14 + 16 * v10 + 8) >> 4;
  sub_1CBD88E08(a1, a2, v11, (uint64_t)&v31 + 12);
  sub_1CBD88E08(a1, a2, v22, (uint64_t)&v30);
  sub_1CBD9004C(a1, (unsigned int *)a2, v23, (uint64_t)v28.n128_i64 + 4);
  uint64_t v15 = *((void *)a2 + 2);
  if (*(unsigned char *)(v15 + 16 * v12) == 5) {
    LOWORD(v16) = 0;
  }
  else {
    int v16 = *(unsigned __int16 *)(v15 + 16 * v12 + 8) << 21 >> 21;
  }
  WORD6(v26) = v16;
  if (*(unsigned char *)(v15 + 16 * v24) == 5) {
    LOWORD(v17) = 0;
  }
  else {
    int v17 = *(unsigned __int16 *)(v15 + 16 * v24 + 8) << 21 >> 21;
  }
  HIWORD(v26) = v17;
  if (*(_DWORD *)a1 >= 4u) {
    *(void *)&long long v27 = 0x6E00000000;
  }
  long long v18 = v33[1];
  *(_OWORD *)(a4 + 128) = v33[0];
  *(_OWORD *)(a4 + 144) = v18;
  *(_OWORD *)(a4 + 156) = *(_OWORD *)((char *)&v33[1] + 12);
  long long v19 = v30;
  *(_OWORD *)(a4 + 64) = v29;
  *(_OWORD *)(a4 + 80) = v19;
  long long v20 = v32;
  *(_OWORD *)(a4 + 96) = v31;
  *(_OWORD *)(a4 + 112) = v20;
  *(_OWORD *)a4 = v25;
  *(_OWORD *)(a4 + 16) = v26;
  __n128 result = v28;
  *(_OWORD *)(a4 + 32) = v27;
  *(__n128 *)(a4 + 48) = result;
  return result;
}

__n128 sub_1CBD903AC(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 121;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x6Bu);
  unsigned int v11 = sub_1CBDA6464(v7, 0x6Cu);
  unsigned int v12 = sub_1CBDA6464(v7, 0x6Du);
  long long v31 = 0u;
  long long v32 = 0u;
  unsigned int v21 = sub_1CBDA6464(v7, 0x6Eu);
  long long v29 = 0u;
  long long v30 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  __n128 v25 = 0u;
  long long v26 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v22 = 0u;
  sub_1CBD85EB8((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v22);
  LOBYTE(v23) = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, (BOOL *)&v32 + 12, (int8x8_t *)&v24 + 1, (uint64_t)&v30 + 12);
  sub_1CBD88E08((uint64_t)a1, a2, v10, (uint64_t)&v27);
  sub_1CBD9004C((uint64_t)a1, (unsigned int *)a2, v11, (uint64_t)v25.n128_i64 + 4);
  uint64_t v13 = *((void *)a2 + 2);
  if (*(unsigned char *)(v13 + 16 * v12) == 5) {
    LOWORD(v14) = 0;
  }
  else {
    int v14 = *(unsigned __int16 *)(v13 + 16 * v12 + 8) << 21 >> 21;
  }
  WORD6(v23) = v14;
  if (*(unsigned char *)(v13 + 16 * v21) == 5) {
    LOWORD(v15) = 0;
  }
  else {
    int v15 = *(unsigned __int16 *)(v13 + 16 * v21 + 8) << 21 >> 21;
  }
  HIWORD(v23) = v15;
  *(void *)&long long v29 = 0;
  *(void *)&long long v30 = 0;
  DWORD2(v30) = 0;
  *((void *)&v29 + 1) = 0x100000001;
  WORD6(v28) = 256;
  if (*a1 >= 4u)
  {
    v25.n128_u8[0] = 15;
    *(void *)&long long v24 = 0x7800000000;
  }
  long long v16 = v31;
  *(_OWORD *)(a4 + 128) = v30;
  *(_OWORD *)(a4 + 144) = v16;
  *(_OWORD *)(a4 + 160) = v32;
  long long v17 = v27;
  *(_OWORD *)(a4 + 64) = v26;
  *(_OWORD *)(a4 + 80) = v17;
  long long v18 = v29;
  *(_OWORD *)(a4 + 96) = v28;
  *(_OWORD *)(a4 + 112) = v18;
  long long v19 = v23;
  *(_OWORD *)a4 = v22;
  *(_OWORD *)(a4 + 16) = v19;
  __n128 result = v25;
  *(_OWORD *)(a4 + 32) = v24;
  *(__n128 *)(a4 + 48) = result;
  return result;
}

__n128 sub_1CBD905CC(uint64_t a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 121;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x6Bu);
  unsigned int v11 = sub_1CBDA6464(v7, 0x6Cu);
  unsigned int v12 = sub_1CBDA6464(v7, 0x6Du);
  unsigned int v13 = sub_1CBDA6464(v7, 0x6Eu);
  long long v33 = 0u;
  long long v32 = 0u;
  long long v31 = 0u;
  long long v30 = 0u;
  long long v29 = 0u;
  long long v28 = 0u;
  long long v27 = 0u;
  __n128 v26 = 0u;
  long long v25 = 0u;
  int v14 = (unsigned __int8 *)(*((void *)a2 + 2) + 16 * v8);
  DWORD2(v23) = 2;
  HIDWORD(v23) = sub_1CBD9F8B0((unsigned int *)a2, v8, *(void **)(a1 + 16));
  *(void *)&long long v23 = sub_1CBD9FA40(*(void *)(a1 + 24), v14, 2);
  uint64_t v15 = *((void *)a2 + 2);
  *(void *)((char *)&v24 + 4) = (*(_DWORD *)(v15 + 16 * (v8 + 1) + 8) >> 20) & 0xFLL;
  LODWORD(v24) = (*(unsigned char *)(v15 + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80((_DWORD *)a1, (uint64_t)a2, v9, (BOOL *)&v33 + 12, (int8x8_t *)&v25 + 1, (uint64_t)&v31 + 12);
  sub_1CBD88E08(a1, a2, v10, (uint64_t)&v28);
  sub_1CBD9004C(a1, (unsigned int *)a2, v11, (uint64_t)v26.n128_i64 + 4);
  uint64_t v16 = *((void *)a2 + 2);
  if (*(unsigned char *)(v16 + 16 * v12) == 5) {
    LOWORD(v17) = 0;
  }
  else {
    int v17 = *(unsigned __int16 *)(v16 + 16 * v12 + 8) << 21 >> 21;
  }
  WORD6(v24) = v17;
  if (*(unsigned char *)(v16 + 16 * v13) == 5) {
    LOWORD(v18) = 0;
  }
  else {
    int v18 = *(unsigned __int16 *)(v16 + 16 * v13 + 8) << 21 >> 21;
  }
  HIWORD(v24) = v18;
  *(void *)&long long v30 = 0;
  *(void *)&long long v31 = 0;
  DWORD2(v31) = 0;
  *((void *)&v30 + 1) = 0x100000001;
  WORD6(v29) = 256;
  if (*(_DWORD *)a1 >= 4u)
  {
    v26.n128_u8[0] = 15;
    *(void *)&long long v25 = 0x7800000000;
  }
  long long v19 = v32;
  *(_OWORD *)(a4 + 128) = v31;
  *(_OWORD *)(a4 + 144) = v19;
  *(_OWORD *)(a4 + 160) = v33;
  long long v20 = v28;
  *(_OWORD *)(a4 + 64) = v27;
  *(_OWORD *)(a4 + 80) = v20;
  long long v21 = v30;
  *(_OWORD *)(a4 + 96) = v29;
  *(_OWORD *)(a4 + 112) = v21;
  *(_OWORD *)a4 = v23;
  *(_OWORD *)(a4 + 16) = v24;
  __n128 result = v26;
  *(_OWORD *)(a4 + 32) = v25;
  *(__n128 *)(a4 + 48) = result;
  return result;
}

__n128 sub_1CBD90838(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 179;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x11u);
  unsigned int v11 = sub_1CBDA6464(v7, 4u);
  unsigned int v12 = sub_1CBDA6464(v7, 0x14u);
  uint64_t v31 = 0;
  unsigned int v13 = sub_1CBDA6464(v7, 0x41u);
  long long v29 = 0u;
  long long v30 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v23 = 0u;
  __n128 v24 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  sub_1CBD85EB8((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v21);
  LOBYTE(v22) = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, (BOOL *)&v31 + 4, (int8x8_t *)((char *)&v28 + 12), (uint64_t)&v29 + 4);
  sub_1CBD88E08((uint64_t)a1, a2, v10, (uint64_t)&v26 + 4);
  if (HIDWORD(v26) == 1) {
    LODWORD(v27) = 2;
  }
  sub_1CBD88900((uint64_t)a1, a2, v11, (uint64_t)&v22 + 12);
  sub_1CBD88E08((uint64_t)a1, a2, v12, (uint64_t)&v24.n128_i64[1]);
  if (v25 == 1) {
    *(void *)&long long v25 = 0x200000001;
  }
  int v14 = *(_DWORD *)(*((void *)a2 + 2) + 16 * v13 + 8);
  if (v14 == 32) {
    char v15 = 0;
  }
  else {
    char v15 = v14 & 0x1F;
  }
  LOBYTE(v28) = v15;
  if (*a1 >= 4u)
  {
    if ((DWORD2(v21) - 2) <= 3) {
      DWORD1(v28) = dword_1CDF53620[DWORD2(v21) - 2];
    }
    DWORD2(v28) = 162;
  }
  long long v16 = v30;
  *(_OWORD *)(a4 + 128) = v29;
  *(_OWORD *)(a4 + 144) = v16;
  *(void *)(a4 + 160) = v31;
  long long v17 = v26;
  *(_OWORD *)(a4 + 64) = v25;
  *(_OWORD *)(a4 + 80) = v17;
  long long v18 = v28;
  *(_OWORD *)(a4 + 96) = v27;
  *(_OWORD *)(a4 + 112) = v18;
  long long v19 = v22;
  *(_OWORD *)a4 = v21;
  *(_OWORD *)(a4 + 16) = v19;
  __n128 result = v24;
  *(_OWORD *)(a4 + 32) = v23;
  *(__n128 *)(a4 + 48) = result;
  return result;
}

__n128 sub_1CBD90A3C(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 179;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x11u);
  unsigned int v11 = sub_1CBDA6464(v7, 4u);
  unsigned int v12 = sub_1CBDA6464(v7, 0x14u);
  uint64_t v31 = 0;
  unsigned int v13 = sub_1CBDA6464(v7, 0x41u);
  long long v29 = 0u;
  long long v30 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v23 = 0u;
  __n128 v24 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  sub_1CBD85EB8((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v21);
  LOBYTE(v22) = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, (BOOL *)&v31 + 4, (int8x8_t *)((char *)&v28 + 12), (uint64_t)&v29 + 4);
  sub_1CBD88E08((uint64_t)a1, a2, v10, (uint64_t)&v26 + 4);
  if (HIDWORD(v26) == 1) {
    LODWORD(v27) = 2;
  }
  sub_1CBD88900((uint64_t)a1, a2, v11, (uint64_t)&v22 + 12);
  sub_1CBD88E08((uint64_t)a1, a2, v12, (uint64_t)&v24.n128_i64[1]);
  if (v25 == 1) {
    *(void *)&long long v25 = 0x200000001;
  }
  int v14 = *(_DWORD *)(*((void *)a2 + 2) + 16 * v13 + 8);
  if (v14 == 32) {
    char v15 = 0;
  }
  else {
    char v15 = v14 & 0x1F;
  }
  LOBYTE(v28) = v15;
  if (*a1 >= 4u)
  {
    if ((DWORD2(v21) - 2) <= 3) {
      DWORD1(v28) = dword_1CDF53620[DWORD2(v21) - 2];
    }
    DWORD2(v28) = 162;
  }
  long long v16 = v30;
  *(_OWORD *)(a4 + 128) = v29;
  *(_OWORD *)(a4 + 144) = v16;
  *(void *)(a4 + 160) = v31;
  long long v17 = v26;
  *(_OWORD *)(a4 + 64) = v25;
  *(_OWORD *)(a4 + 80) = v17;
  long long v18 = v28;
  *(_OWORD *)(a4 + 96) = v27;
  *(_OWORD *)(a4 + 112) = v18;
  long long v19 = v22;
  *(_OWORD *)a4 = v21;
  *(_OWORD *)(a4 + 16) = v19;
  __n128 result = v24;
  *(_OWORD *)(a4 + 32) = v23;
  *(__n128 *)(a4 + 48) = result;
  return result;
}

__n128 sub_1CBD90C44(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 186;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x11u);
  unsigned int v11 = sub_1CBDA6464(v7, 4u);
  unsigned int v12 = sub_1CBDA6464(v7, 0x14u);
  uint64_t v31 = 0;
  unsigned int v13 = sub_1CBDA6464(v7, 0x41u);
  long long v29 = 0u;
  long long v30 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v23 = 0u;
  __n128 v24 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  sub_1CBD85EB8((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v21);
  LOBYTE(v22) = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, (BOOL *)&v31 + 4, (int8x8_t *)((char *)&v28 + 12), (uint64_t)&v29 + 4);
  sub_1CBD88E08((uint64_t)a1, a2, v10, (uint64_t)&v26 + 4);
  if (HIDWORD(v26) == 1) {
    LODWORD(v27) = 2;
  }
  sub_1CBD88900((uint64_t)a1, a2, v11, (uint64_t)&v22 + 12);
  sub_1CBD88E08((uint64_t)a1, a2, v12, (uint64_t)&v24.n128_i64[1]);
  if (v25 == 1) {
    *(void *)&long long v25 = 0x200000001;
  }
  int v14 = *(_DWORD *)(*((void *)a2 + 2) + 16 * v13 + 8);
  if (v14 == 32) {
    char v15 = 0;
  }
  else {
    char v15 = v14 & 0x1F;
  }
  LOBYTE(v28) = v15;
  if (*a1 >= 4u)
  {
    if ((DWORD2(v21) - 2) <= 3) {
      DWORD1(v28) = dword_1CDF53620[DWORD2(v21) - 2];
    }
    DWORD2(v28) = 183;
  }
  long long v16 = v30;
  *(_OWORD *)(a4 + 128) = v29;
  *(_OWORD *)(a4 + 144) = v16;
  *(void *)(a4 + 160) = v31;
  long long v17 = v26;
  *(_OWORD *)(a4 + 64) = v25;
  *(_OWORD *)(a4 + 80) = v17;
  long long v18 = v28;
  *(_OWORD *)(a4 + 96) = v27;
  *(_OWORD *)(a4 + 112) = v18;
  long long v19 = v22;
  *(_OWORD *)a4 = v21;
  *(_OWORD *)(a4 + 16) = v19;
  __n128 result = v24;
  *(_OWORD *)(a4 + 32) = v23;
  *(__n128 *)(a4 + 48) = result;
  return result;
}

__n128 sub_1CBD90E48(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 186;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x11u);
  unsigned int v11 = sub_1CBDA6464(v7, 4u);
  unsigned int v12 = sub_1CBDA6464(v7, 0x14u);
  uint64_t v31 = 0;
  unsigned int v13 = sub_1CBDA6464(v7, 0x41u);
  long long v29 = 0u;
  long long v30 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v23 = 0u;
  __n128 v24 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  sub_1CBD85EB8((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v21);
  LOBYTE(v22) = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, (BOOL *)&v31 + 4, (int8x8_t *)((char *)&v28 + 12), (uint64_t)&v29 + 4);
  sub_1CBD88E08((uint64_t)a1, a2, v10, (uint64_t)&v26 + 4);
  if (HIDWORD(v26) == 1) {
    LODWORD(v27) = 2;
  }
  sub_1CBD88900((uint64_t)a1, a2, v11, (uint64_t)&v22 + 12);
  sub_1CBD88E08((uint64_t)a1, a2, v12, (uint64_t)&v24.n128_i64[1]);
  if (v25 == 1) {
    *(void *)&long long v25 = 0x200000001;
  }
  int v14 = *(_DWORD *)(*((void *)a2 + 2) + 16 * v13 + 8);
  if (v14 == 32) {
    char v15 = 0;
  }
  else {
    char v15 = v14 & 0x1F;
  }
  LOBYTE(v28) = v15;
  if (*a1 >= 4u)
  {
    if ((DWORD2(v21) - 2) <= 3) {
      DWORD1(v28) = dword_1CDF53620[DWORD2(v21) - 2];
    }
    DWORD2(v28) = 183;
  }
  long long v16 = v30;
  *(_OWORD *)(a4 + 128) = v29;
  *(_OWORD *)(a4 + 144) = v16;
  *(void *)(a4 + 160) = v31;
  long long v17 = v26;
  *(_OWORD *)(a4 + 64) = v25;
  *(_OWORD *)(a4 + 80) = v17;
  long long v18 = v28;
  *(_OWORD *)(a4 + 96) = v27;
  *(_OWORD *)(a4 + 112) = v18;
  long long v19 = v22;
  *(_OWORD *)a4 = v21;
  *(_OWORD *)(a4 + 16) = v19;
  __n128 result = v24;
  *(_OWORD *)(a4 + 32) = v23;
  *(__n128 *)(a4 + 48) = result;
  return result;
}

__n128 sub_1CBD91050(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 180;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x11u);
  unsigned int v11 = sub_1CBDA6464(v7, 4u);
  unsigned int v12 = sub_1CBDA6464(v7, 0x14u);
  uint64_t v31 = 0;
  unsigned int v13 = sub_1CBDA6464(v7, 0x41u);
  long long v29 = 0u;
  long long v30 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v23 = 0u;
  __n128 v24 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  sub_1CBD85EB8((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v21);
  LOBYTE(v22) = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, (BOOL *)&v31 + 4, (int8x8_t *)((char *)&v28 + 12), (uint64_t)&v29 + 4);
  sub_1CBD88E08((uint64_t)a1, a2, v10, (uint64_t)&v26 + 4);
  if (HIDWORD(v26) == 1) {
    LODWORD(v27) = 2;
  }
  sub_1CBD88900((uint64_t)a1, a2, v11, (uint64_t)&v22 + 12);
  sub_1CBD88E08((uint64_t)a1, a2, v12, (uint64_t)&v24.n128_i64[1]);
  if (v25 == 1) {
    *(void *)&long long v25 = 0x200000001;
  }
  int v14 = *(_DWORD *)(*((void *)a2 + 2) + 16 * v13 + 8);
  if (v14 == 32) {
    char v15 = 0;
  }
  else {
    char v15 = v14 & 0x1F;
  }
  LOBYTE(v28) = v15;
  if (*a1 >= 4u)
  {
    if ((DWORD2(v21) - 2) <= 3) {
      DWORD1(v28) = dword_1CDF53620[DWORD2(v21) - 2];
    }
    DWORD2(v28) = 163;
  }
  long long v16 = v30;
  *(_OWORD *)(a4 + 128) = v29;
  *(_OWORD *)(a4 + 144) = v16;
  *(void *)(a4 + 160) = v31;
  long long v17 = v26;
  *(_OWORD *)(a4 + 64) = v25;
  *(_OWORD *)(a4 + 80) = v17;
  long long v18 = v28;
  *(_OWORD *)(a4 + 96) = v27;
  *(_OWORD *)(a4 + 112) = v18;
  long long v19 = v22;
  *(_OWORD *)a4 = v21;
  *(_OWORD *)(a4 + 16) = v19;
  __n128 result = v24;
  *(_OWORD *)(a4 + 32) = v23;
  *(__n128 *)(a4 + 48) = result;
  return result;
}

__n128 sub_1CBD91254(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 184;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x11u);
  unsigned int v11 = sub_1CBDA6464(v7, 4u);
  uint64_t v24 = 0;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v16 = 0u;
  __n128 v17 = 0u;
  sub_1CBD85EB8((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v16);
  v17.n128_u8[0] = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, (BOOL *)&v24 + 4, (int8x8_t *)((char *)&v21 + 12), (uint64_t)&v22 + 4);
  sub_1CBD86608((uint64_t)a1, (uint64_t)a2, v10, (uint64_t)&v17.n128_i64[1] + 4);
  sub_1CBD88E08((uint64_t)a1, a2, v11, (uint64_t)&v19 + 8);
  if (v20 == 1) {
    *(void *)&long long v20 = 0x200000001;
  }
  if (*a1 >= 4u)
  {
    if ((DWORD2(v16) - 2) <= 3) {
      DWORD1(v21) = dword_1CDF53620[DWORD2(v16) - 2];
    }
    DWORD2(v21) = 167;
  }
  long long v12 = v23;
  *(_OWORD *)(a4 + 96) = v22;
  *(_OWORD *)(a4 + 112) = v12;
  *(void *)(a4 + 128) = v24;
  long long v13 = v19;
  *(_OWORD *)(a4 + 32) = v18;
  *(_OWORD *)(a4 + 48) = v13;
  long long v14 = v21;
  *(_OWORD *)(a4 + 64) = v20;
  *(_OWORD *)(a4 + 80) = v14;
  __n128 result = v17;
  *(_OWORD *)a4 = v16;
  *(__n128 *)(a4 + 16) = result;
  return result;
}

__n128 sub_1CBD913E0(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 35;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x11u);
  unsigned int v11 = sub_1CBDA6464(v7, 4u);
  unsigned int v12 = sub_1CBDA6464(v7, 0x14u);
  uint64_t v31 = 0;
  unsigned int v13 = sub_1CBDA6464(v7, 0x41u);
  long long v29 = 0u;
  long long v30 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v23 = 0u;
  __n128 v24 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  sub_1CBD85EB8((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v21);
  LOBYTE(v22) = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, (BOOL *)&v31 + 4, (int8x8_t *)((char *)&v28 + 12), (uint64_t)&v29 + 4);
  sub_1CBD88E08((uint64_t)a1, a2, v10, (uint64_t)&v26 + 4);
  if (HIDWORD(v26) == 1) {
    LODWORD(v27) = 2;
  }
  sub_1CBD88900((uint64_t)a1, a2, v11, (uint64_t)&v22 + 12);
  sub_1CBD88E08((uint64_t)a1, a2, v12, (uint64_t)&v24.n128_i64[1]);
  if (v25 == 1) {
    *(void *)&long long v25 = 0x200000001;
  }
  int v14 = *(_DWORD *)(*((void *)a2 + 2) + 16 * v13 + 8);
  if (v14 == 32) {
    char v15 = 0;
  }
  else {
    char v15 = v14 & 0x1F;
  }
  LOBYTE(v28) = v15;
  if (*a1 >= 4u)
  {
    if ((DWORD2(v21) - 2) <= 3) {
      DWORD1(v28) = dword_1CDF53620[DWORD2(v21) - 2];
    }
    DWORD2(v28) = 40;
  }
  long long v16 = v30;
  *(_OWORD *)(a4 + 128) = v29;
  *(_OWORD *)(a4 + 144) = v16;
  *(void *)(a4 + 160) = v31;
  long long v17 = v26;
  *(_OWORD *)(a4 + 64) = v25;
  *(_OWORD *)(a4 + 80) = v17;
  long long v18 = v28;
  *(_OWORD *)(a4 + 96) = v27;
  *(_OWORD *)(a4 + 112) = v18;
  long long v19 = v22;
  *(_OWORD *)a4 = v21;
  *(_OWORD *)(a4 + 16) = v19;
  __n128 result = v24;
  *(_OWORD *)(a4 + 32) = v23;
  *(__n128 *)(a4 + 48) = result;
  return result;
}

__n128 sub_1CBD915E8(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 75;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x18u);
  memset(v18, 0, 44);
  long long v16 = 0u;
  __n128 v17 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  sub_1CBD85EB8((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v14);
  LOBYTE(v15) = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, (BOOL *)&v18[2] + 8, (int8x8_t *)v18, (uint64_t)v18 + 8);
  sub_1CBD88900((uint64_t)a1, a2, v10, (uint64_t)&v15 + 12);
  if (*a1 >= 4u)
  {
    if ((DWORD2(v14) - 2) <= 3) {
      v17.n128_u32[2] = dword_1CDF53620[DWORD2(v14) - 2];
    }
    v17.n128_u32[3] = 79;
  }
  long long v11 = v18[1];
  *(_OWORD *)(a4 + 64) = v18[0];
  *(_OWORD *)(a4 + 80) = v11;
  *(_OWORD *)(a4 + 92) = *(_OWORD *)((char *)&v18[1] + 12);
  long long v12 = v15;
  *(_OWORD *)a4 = v14;
  *(_OWORD *)(a4 + 16) = v12;
  __n128 result = v17;
  *(_OWORD *)(a4 + 32) = v16;
  *(__n128 *)(a4 + 48) = result;
  return result;
}

__n128 sub_1CBD91738(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 18;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x18u);
  memset(v18, 0, 44);
  long long v16 = 0u;
  __n128 v17 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  sub_1CBD85EB8((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v14);
  LOBYTE(v15) = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, (BOOL *)&v18[2] + 8, (int8x8_t *)v18, (uint64_t)v18 + 8);
  sub_1CBD88900((uint64_t)a1, a2, v10, (uint64_t)&v15 + 12);
  if (*a1 >= 4u)
  {
    if ((DWORD2(v14) - 2) <= 3) {
      v17.n128_u32[2] = dword_1CDF53620[DWORD2(v14) - 2];
    }
    v17.n128_u32[3] = 23;
  }
  long long v11 = v18[1];
  *(_OWORD *)(a4 + 64) = v18[0];
  *(_OWORD *)(a4 + 80) = v11;
  *(_OWORD *)(a4 + 92) = *(_OWORD *)((char *)&v18[1] + 12);
  long long v12 = v15;
  *(_OWORD *)a4 = v14;
  *(_OWORD *)(a4 + 16) = v12;
  __n128 result = v17;
  *(_OWORD *)(a4 + 32) = v16;
  *(__n128 *)(a4 + 48) = result;
  return result;
}

__n128 sub_1CBD91888(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 144;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x18u);
  memset(v18, 0, 44);
  long long v16 = 0u;
  __n128 v17 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  sub_1CBD85EB8((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v14);
  LOBYTE(v15) = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, (BOOL *)&v18[2] + 8, (int8x8_t *)v18, (uint64_t)v18 + 8);
  sub_1CBD88900((uint64_t)a1, a2, v10, (uint64_t)&v15 + 12);
  if (*a1 >= 4u)
  {
    if ((DWORD2(v14) - 2) <= 3) {
      v17.n128_u32[2] = dword_1CDF53620[DWORD2(v14) - 2];
    }
    v17.n128_u32[3] = 143;
  }
  long long v11 = v18[1];
  *(_OWORD *)(a4 + 64) = v18[0];
  *(_OWORD *)(a4 + 80) = v11;
  *(_OWORD *)(a4 + 92) = *(_OWORD *)((char *)&v18[1] + 12);
  long long v12 = v15;
  *(_OWORD *)a4 = v14;
  *(_OWORD *)(a4 + 16) = v12;
  __n128 result = v17;
  *(_OWORD *)(a4 + 32) = v16;
  *(__n128 *)(a4 + 48) = result;
  return result;
}

__n128 sub_1CBD919D8(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 170;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x18u);
  unsigned int v11 = sub_1CBDA6464(v7, 0x19u);
  uint64_t v24 = 0;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v16 = 0u;
  __n128 v17 = 0u;
  sub_1CBD85EB8((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v16);
  v17.n128_u8[0] = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, (BOOL *)&v24 + 4, (int8x8_t *)((char *)&v21 + 12), (uint64_t)&v22 + 4);
  sub_1CBD88E08((uint64_t)a1, a2, v10, (uint64_t)&v17.n128_i64[1] + 4);
  sub_1CBD88E08((uint64_t)a1, a2, v11, (uint64_t)&v19 + 8);
  if (*a1 >= 4u)
  {
    if ((DWORD2(v16) - 2) <= 3) {
      DWORD1(v21) = dword_1CDF53620[DWORD2(v16) - 2];
    }
    DWORD2(v21) = 153;
  }
  long long v12 = v23;
  *(_OWORD *)(a4 + 96) = v22;
  *(_OWORD *)(a4 + 112) = v12;
  *(void *)(a4 + 128) = v24;
  long long v13 = v19;
  *(_OWORD *)(a4 + 32) = v18;
  *(_OWORD *)(a4 + 48) = v13;
  long long v14 = v21;
  *(_OWORD *)(a4 + 64) = v20;
  *(_OWORD *)(a4 + 80) = v14;
  __n128 result = v17;
  *(_OWORD *)a4 = v16;
  *(__n128 *)(a4 + 16) = result;
  return result;
}

double sub_1CBD91B54(unsigned int *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  if (*a1 > 3)
  {
    if (sub_1CBD91EBC(a1, (unsigned int *)a2))
    {
      *(void *)&double result = sub_1CBD91F24(a1, a2, a3, a4).n128_u64[0];
    }
    else if (sub_1CBD92144(a1, (unsigned int *)a2))
    {
      *(void *)&double result = sub_1CBD921AC(a1, a2, a3, a4).n128_u64[0];
    }
    else if ((sub_1CBDA0234((unsigned int *)a2) & 1) != 0 || !sub_1CBDA0368((unsigned int *)a2))
    {
      if (sub_1CBDA0234((unsigned int *)a2)) {
        sub_1CBDA0368((unsigned int *)a2);
      }
      *(void *)&double result = sub_1CBD925E4(a1, a2, a3, a4).n128_u64[0];
    }
    else
    {
      *(void *)&double result = sub_1CBD923CC(a1, a2, a3, a4).n128_u64[0];
    }
  }
  else
  {
    *(void *)&double result = sub_1CBD91CC0(a1, (unsigned int *)a2, a3, a4).n128_u64[0];
  }
  return result;
}

__n128 sub_1CBD91CC0(_DWORD *a1, unsigned int *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 68;
  int v7 = *(unsigned __int16 *)a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x54u);
  unsigned int v11 = sub_1CBDA6464(v7, 0x11u);
  unsigned int v19 = sub_1CBDA6464(v7, 4u);
  unsigned int v12 = sub_1CBDA6464(v7, 0x14u);
  unsigned int v20 = sub_1CBDA6464(v7, 0x37u);
  long long v29 = 0u;
  memset(v30, 0, 60);
  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v21 = 0u;
  __n128 v22 = 0u;
  sub_1CBD927FC((uint64_t)a1, a2, v8, (uint64_t)&v21);
  sub_1CBD929F0(a1, (uint64_t)a2, v9, (uint64_t)&v21, (BOOL *)&v30[3] + 8, (int8x8_t *)((char *)v30 + 12), (uint64_t)&v30[1] + 8);
  DWORD1(v30[1]) = *(_DWORD *)(*((void *)a2 + 2) + 16 * v10 + 8) & 0xF;
  sub_1CBD8C148((uint64_t)a1, (uint64_t)a2, v11, (uint64_t)&v23 + 8);
  sub_1CBD8C148((uint64_t)a1, (uint64_t)a2, v19, (uint64_t)&v25 + 4);
  sub_1CBD8F254((uint64_t)a1, (unsigned __int16 *)a2, v12, (uint64_t)&v27);
  sub_1CBD8F254((uint64_t)a1, (unsigned __int16 *)a2, v20, (uint64_t)&v28 + 12);
  if (v21 <= 1)
  {
    if (DWORD2(v27) == 1) {
      HIDWORD(v27) = v22.n128_u32[0];
    }
    if (DWORD1(v29) == 1) {
      DWORD2(v29) = v22.n128_u32[0];
    }
  }
  long long v13 = v30[2];
  *(_OWORD *)(a4 + 160) = v30[1];
  *(_OWORD *)(a4 + 176) = v13;
  *(_OWORD *)(a4 + 188) = *(_OWORD *)((char *)&v30[2] + 12);
  long long v14 = v28;
  *(_OWORD *)(a4 + 96) = v27;
  *(_OWORD *)(a4 + 112) = v14;
  long long v15 = v30[0];
  *(_OWORD *)(a4 + 128) = v29;
  *(_OWORD *)(a4 + 144) = v15;
  long long v16 = v24;
  *(_OWORD *)(a4 + 32) = v23;
  *(_OWORD *)(a4 + 48) = v16;
  long long v17 = v26;
  *(_OWORD *)(a4 + 64) = v25;
  *(_OWORD *)(a4 + 80) = v17;
  __n128 result = v22;
  *(_OWORD *)a4 = v21;
  *(__n128 *)(a4 + 16) = result;
  return result;
}

BOOL sub_1CBD91EBC(_DWORD *a1, unsigned int *a2)
{
  return *a1 >= 4u
      && (sub_1CBDA0234(a2) & 1) == 0
      && (sub_1CBDA0368(a2) & 1) == 0
      && (sub_1CBDB2780(*a2, 0, 0) & 0xFFFFFFFE) != 38;
}

__n128 sub_1CBD91F24(unsigned int *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 71;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x54u);
  unsigned int v19 = sub_1CBDA6464(v7, 0x11u);
  unsigned int v20 = sub_1CBDA6464(v7, 4u);
  unsigned int v22 = sub_1CBDA6464(v7, 0x14u);
  unsigned int v21 = sub_1CBDA6464(v7, 0x37u);
  *(void *)uint64_t v35 = 0;
  long long v33 = 0u;
  long long v34 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v23 = 0u;
  __n128 v24 = 0u;
  sub_1CBD85EB8((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v23);
  uint64_t v11 = *((void *)a2 + 2);
  v24.n128_u8[0] = (*(unsigned char *)(v11 + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, v35, (int8x8_t *)((char *)&v32 + 4), (uint64_t)&v33);
  HIDWORD(v32) = *(_DWORD *)(v11 + 16 * v10 + 8) & 0xF;
  sub_1CBD8C148((uint64_t)a1, (uint64_t)a2, v19, (uint64_t)&v24.n128_i64[1] + 4);
  sub_1CBD8C148((uint64_t)a1, (uint64_t)a2, v20, (uint64_t)&v26 + 8);
  sub_1CBD88E08((uint64_t)a1, a2, v22, (uint64_t)&v28 + 4);
  sub_1CBD88E08((uint64_t)a1, a2, v21, (uint64_t)&v30);
  unsigned int v12 = *a1;
  sub_1CBD92A2C(*a1, *((void *)a1 + 1), *(_DWORD *)a2, &v23);
  if (v12 >= 4)
  {
    if ((DWORD2(v23) - 2) <= 3) {
      HIDWORD(v31) = dword_1CDF53620[DWORD2(v23) - 2];
    }
    LODWORD(v32) = 75;
  }
  long long v13 = v34;
  *(_OWORD *)(a4 + 160) = v33;
  *(_OWORD *)(a4 + 176) = v13;
  *(void *)(a4 + 192) = *(void *)v35;
  long long v14 = v30;
  *(_OWORD *)(a4 + 96) = v29;
  *(_OWORD *)(a4 + 112) = v14;
  long long v15 = v32;
  *(_OWORD *)(a4 + 128) = v31;
  *(_OWORD *)(a4 + 144) = v15;
  long long v16 = v26;
  *(_OWORD *)(a4 + 32) = v25;
  *(_OWORD *)(a4 + 48) = v16;
  long long v17 = v28;
  *(_OWORD *)(a4 + 64) = v27;
  *(_OWORD *)(a4 + 80) = v17;
  __n128 result = v24;
  *(_OWORD *)a4 = v23;
  *(__n128 *)(a4 + 16) = result;
  return result;
}

uint64_t sub_1CBD92144(_DWORD *a1, unsigned int *a2)
{
  if (*a1 >= 4u)
  {
    uint64_t result = sub_1CBDA0234(a2);
    if (!result) {
      return result;
    }
    if ((sub_1CBDA0368(a2) & 1) == 0) {
      return (sub_1CBDB2780(*a2, 0, 0) & 0xFFFFFFFE) != 38;
    }
  }
  return 0;
}

__n128 sub_1CBD921AC(unsigned int *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 72;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x54u);
  unsigned int v19 = sub_1CBDA6464(v7, 0x11u);
  unsigned int v20 = sub_1CBDA6464(v7, 4u);
  unsigned int v22 = sub_1CBDA6464(v7, 0x14u);
  unsigned int v21 = sub_1CBDA6464(v7, 0x37u);
  *(void *)uint64_t v35 = 0;
  long long v33 = 0u;
  long long v34 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v23 = 0u;
  __n128 v24 = 0u;
  sub_1CBD85EB8((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v23);
  uint64_t v11 = *((void *)a2 + 2);
  v24.n128_u8[0] = (*(unsigned char *)(v11 + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, v35, (int8x8_t *)((char *)&v32 + 4), (uint64_t)&v33);
  HIDWORD(v32) = *(_DWORD *)(v11 + 16 * v10 + 8) & 0xF;
  sub_1CBD8C148((uint64_t)a1, (uint64_t)a2, v19, (uint64_t)&v24.n128_i64[1] + 4);
  sub_1CBD8C148((uint64_t)a1, (uint64_t)a2, v20, (uint64_t)&v26 + 8);
  sub_1CBD88E08((uint64_t)a1, a2, v22, (uint64_t)&v28 + 4);
  sub_1CBD88E08((uint64_t)a1, a2, v21, (uint64_t)&v30);
  unsigned int v12 = *a1;
  sub_1CBD92AA4(*a1, *((void *)a1 + 1), *(_DWORD *)a2, &v23);
  if (v12 >= 4)
  {
    if ((DWORD2(v23) - 2) <= 3) {
      HIDWORD(v31) = dword_1CDF53620[DWORD2(v23) - 2];
    }
    LODWORD(v32) = 76;
  }
  long long v13 = v34;
  *(_OWORD *)(a4 + 160) = v33;
  *(_OWORD *)(a4 + 176) = v13;
  *(void *)(a4 + 192) = *(void *)v35;
  long long v14 = v30;
  *(_OWORD *)(a4 + 96) = v29;
  *(_OWORD *)(a4 + 112) = v14;
  long long v15 = v32;
  *(_OWORD *)(a4 + 128) = v31;
  *(_OWORD *)(a4 + 144) = v15;
  long long v16 = v26;
  *(_OWORD *)(a4 + 32) = v25;
  *(_OWORD *)(a4 + 48) = v16;
  long long v17 = v28;
  *(_OWORD *)(a4 + 64) = v27;
  *(_OWORD *)(a4 + 80) = v17;
  __n128 result = v24;
  *(_OWORD *)a4 = v23;
  *(__n128 *)(a4 + 16) = result;
  return result;
}

__n128 sub_1CBD923CC(unsigned int *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 69;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x54u);
  unsigned int v11 = sub_1CBDA6464(v7, 0x11u);
  unsigned int v12 = sub_1CBDA6464(v7, 4u);
  unsigned int v21 = sub_1CBDA6464(v7, 0x14u);
  unsigned int v22 = sub_1CBDA6464(v7, 0x37u);
  long long v34 = 0u;
  long long v35 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  __n128 v24 = 0u;
  long long v25 = 0u;
  long long v23 = 0u;
  sub_1CBD8F178((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v23);
  uint64_t v13 = *((void *)a2 + 2);
  v24.n128_u8[0] = (*(unsigned char *)(v13 + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, (BOOL *)&v35 + 8, (int8x8_t *)((char *)&v32 + 12), (uint64_t)&v33 + 8);
  DWORD1(v33) = *(_DWORD *)(v13 + 16 * v10 + 8) & 0xF;
  sub_1CBD8C148((uint64_t)a1, (uint64_t)a2, v11, (uint64_t)&v25 + 4);
  sub_1CBD8C148((uint64_t)a1, (uint64_t)a2, v12, (uint64_t)&v27);
  sub_1CBD8F254((uint64_t)a1, a2, v21, (uint64_t)&v28 + 12);
  sub_1CBD8F254((uint64_t)a1, a2, v22, (uint64_t)&v30 + 8);
  unsigned int v14 = *a1;
  sub_1CBD92B24(*a1, *((void *)a1 + 1), *(_DWORD *)a2, &v23);
  if (v14 >= 4)
  {
    if ((DWORD2(v23) - 2) <= 3) {
      DWORD1(v32) = dword_1CDF53620[DWORD2(v23) - 2];
    }
    DWORD2(v32) = 73;
  }
  long long v15 = v34;
  *(_OWORD *)(a4 + 160) = v33;
  *(_OWORD *)(a4 + 176) = v15;
  *(_OWORD *)(a4 + 192) = v35;
  long long v16 = v30;
  *(_OWORD *)(a4 + 96) = v29;
  *(_OWORD *)(a4 + 112) = v16;
  long long v17 = v32;
  *(_OWORD *)(a4 + 128) = v31;
  *(_OWORD *)(a4 + 144) = v17;
  long long v18 = v26;
  *(_OWORD *)(a4 + 32) = v25;
  *(_OWORD *)(a4 + 48) = v18;
  long long v19 = v28;
  *(_OWORD *)(a4 + 64) = v27;
  *(_OWORD *)(a4 + 80) = v19;
  __n128 result = v24;
  *(_OWORD *)a4 = v23;
  *(__n128 *)(a4 + 16) = result;
  return result;
}

__n128 sub_1CBD925E4(unsigned int *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 70;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x54u);
  unsigned int v11 = sub_1CBDA6464(v7, 0x11u);
  unsigned int v12 = sub_1CBDA6464(v7, 4u);
  unsigned int v21 = sub_1CBDA6464(v7, 0x14u);
  unsigned int v22 = sub_1CBDA6464(v7, 0x37u);
  long long v34 = 0u;
  long long v35 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  __n128 v24 = 0u;
  long long v25 = 0u;
  long long v23 = 0u;
  sub_1CBD8F178((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v23);
  uint64_t v13 = *((void *)a2 + 2);
  v24.n128_u8[0] = (*(unsigned char *)(v13 + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, (BOOL *)&v35 + 8, (int8x8_t *)((char *)&v32 + 12), (uint64_t)&v33 + 8);
  DWORD1(v33) = *(_DWORD *)(v13 + 16 * v10 + 8) & 0xF;
  sub_1CBD8C148((uint64_t)a1, (uint64_t)a2, v11, (uint64_t)&v25 + 4);
  sub_1CBD8C148((uint64_t)a1, (uint64_t)a2, v12, (uint64_t)&v27);
  sub_1CBD8F254((uint64_t)a1, a2, v21, (uint64_t)&v28 + 12);
  sub_1CBD8F254((uint64_t)a1, a2, v22, (uint64_t)&v30 + 8);
  unsigned int v14 = *a1;
  sub_1CBD92B9C(*a1, *((void *)a1 + 1), *(_DWORD *)a2, &v23);
  if (v14 >= 4)
  {
    if ((DWORD2(v23) - 2) <= 3) {
      DWORD1(v32) = dword_1CDF53620[DWORD2(v23) - 2];
    }
    DWORD2(v32) = 74;
  }
  long long v15 = v34;
  *(_OWORD *)(a4 + 160) = v33;
  *(_OWORD *)(a4 + 176) = v15;
  *(_OWORD *)(a4 + 192) = v35;
  long long v16 = v30;
  *(_OWORD *)(a4 + 96) = v29;
  *(_OWORD *)(a4 + 112) = v16;
  long long v17 = v32;
  *(_OWORD *)(a4 + 128) = v31;
  *(_OWORD *)(a4 + 144) = v17;
  long long v18 = v26;
  *(_OWORD *)(a4 + 32) = v25;
  *(_OWORD *)(a4 + 48) = v18;
  long long v19 = v28;
  *(_OWORD *)(a4 + 64) = v27;
  *(_OWORD *)(a4 + 80) = v19;
  __n128 result = v24;
  *(_OWORD *)a4 = v23;
  *(__n128 *)(a4 + 16) = result;
  return result;
}

uint64_t sub_1CBD927FC(uint64_t result, unsigned int *a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = result;
  uint64_t v8 = *((void *)a2 + 2);
  if (*(unsigned char *)(v8 + 16 * a3) == 1)
  {
    uint64_t v9 = v8 + 16 * a3;
    unsigned int v12 = *(_DWORD *)(v9 + 8);
    unsigned int v10 = (int *)(v9 + 8);
    unint64_t v11 = v12;
    if (v12 <= 0x57 && ((byte_1CDEF3152[v11 >> 3] >> (v11 & 7)) & 1) != 0)
    {
      *(_DWORD *)a4 = 2;
      int v13 = *v10;
      if (v13 == 1)
      {
        char v14 = 7;
      }
      else if (v13 == 2)
      {
        char v14 = 6;
      }
      else
      {
        char v14 = (v13 + 9) & 0xF;
      }
      *(unsigned char *)(a4 + 5) = v14;
      *(unsigned char *)(a4 + 4) = 1;
      return result;
    }
  }
  uint64_t v15 = *a2;
  unsigned int v16 = sub_1CBDA6464((unsigned __int16)*a2, 0x14u);
  if (*(unsigned char *)(v8 + 16 * v16) == 2)
  {
    if (sub_1CBDB2780(v15, 13, 0) != 9) {
      goto LABEL_9;
    }
LABEL_13:
    *(_DWORD *)a4 = 1;
    goto LABEL_14;
  }
  if (*(unsigned char *)(v8 + 16 * (v16 + 1) + 8) & 4 | ((*(unsigned char *)(v8 + 16 * (v16 + 1) + 8) & 3) != 0)) {
    goto LABEL_13;
  }
LABEL_9:
  unsigned int v17 = sub_1CBDA6464((unsigned __int16)v15, 0x37u);
  if (*(unsigned char *)(v8 + 16 * v17) == 2)
  {
    int v18 = sub_1CBDB2780(v15, 22, 0);
    *(_DWORD *)a4 = v18 == 9;
    if (v18 != 9) {
      goto LABEL_18;
    }
  }
  else
  {
    int v19 = *(unsigned char *)(v8 + 16 * (v17 + 1) + 8) & 4 | ((*(unsigned char *)(v8 + 16 * (v17 + 1) + 8) & 3) != 0);
    *(_DWORD *)a4 = v19 != 0;
    if (!v19)
    {
LABEL_18:
      return sub_1CBD85EB8(v7, (uint64_t)a2, a3, a4 + 4);
    }
  }
LABEL_14:

  return sub_1CBD8F178(v7, (uint64_t)a2, a3, a4 + 4);
}

int8x8_t sub_1CBD929F0(_DWORD *a1, uint64_t a2, unsigned int a3, uint64_t a4, BOOL *a5, int8x8_t *a6, uint64_t a7)
{
  if (*(_DWORD *)a4 >= 2u)
  {
    if (*(_DWORD *)a4 != 2) {
      return result;
    }
  }
  else
  {
    *(unsigned char *)(a4 + 20) = (*(unsigned char *)(*(void *)(a2 + 16) + 16 * a3 + 8) & 0x20) != 0;
  }
  return sub_1CBD85A80(a1, a2, a3, a5, a6, a7);
}

uint64_t sub_1CBD92A2C(uint64_t result, uint64_t a2, int a3, _DWORD *a4)
{
  if (a4[23] == 1) {
    a4[24] = 1;
  }
  if (a4[30] == 1) {
    a4[31] = 1;
  }
  if (result >= 5)
  {
    a4[49] = 1;
    if ((*(unsigned char *)(a2 + 196) & 2) != 0)
    {
      int8x8_t result = sub_1CBE52E8C(a3);
      if ((result & 0xFF00000000) == 0 || result != 47) {
        a4[49] = 0;
      }
    }
  }
  return result;
}

uint64_t sub_1CBD92AA4(uint64_t result, uint64_t a2, int a3, _DWORD *a4)
{
  if (a4[23] == 1) {
    a4[24] = 2;
  }
  if (a4[30] == 1) {
    a4[31] = 2;
  }
  if (result >= 5)
  {
    a4[49] = 1;
    if ((*(unsigned char *)(a2 + 196) & 2) != 0)
    {
      int8x8_t result = sub_1CBE52E8C(a3);
      if ((result & 0xFF00000000) == 0 || result != 47) {
        a4[49] = 0;
      }
    }
  }
  return result;
}

uint64_t sub_1CBD92B24(uint64_t result, uint64_t a2, int a3, _DWORD *a4)
{
  if (a4[25] == 1) {
    a4[26] = 1;
  }
  if (a4[32] == 1) {
    a4[33] = 1;
  }
  if (result >= 5)
  {
    a4[51] = 1;
    if ((*(unsigned char *)(a2 + 196) & 2) != 0)
    {
      int8x8_t result = sub_1CBE52E8C(a3);
      if ((result & 0xFF00000000) == 0 || result != 47) {
        a4[51] = 0;
      }
    }
  }
  return result;
}

uint64_t sub_1CBD92B9C(uint64_t result, uint64_t a2, int a3, _DWORD *a4)
{
  if (a4[25] == 1) {
    a4[26] = 2;
  }
  if (a4[32] == 1) {
    a4[33] = 2;
  }
  if (result >= 5)
  {
    a4[51] = 1;
    if ((*(unsigned char *)(a2 + 196) & 2) != 0)
    {
      int8x8_t result = sub_1CBE52E8C(a3);
      if ((result & 0xFF00000000) == 0 || result != 47) {
        a4[51] = 0;
      }
    }
  }
  return result;
}

double sub_1CBD92C1C(unsigned int *a1, unsigned int *a2, _DWORD *a3, uint64_t a4)
{
  if (*a1 <= 3)
  {
    *(void *)&double result = sub_1CBD92D88(a1, a2, a3, a4).n128_u64[0];
  }
  else if (sub_1CBD91EBC(a1, a2))
  {
    *(void *)&double result = sub_1CBD91F24(a1, (unsigned __int16 *)a2, a3, a4).n128_u64[0];
  }
  else if (sub_1CBD92144(a1, a2))
  {
    *(void *)&double result = sub_1CBD921AC(a1, (unsigned __int16 *)a2, a3, a4).n128_u64[0];
  }
  else if ((sub_1CBDA0234(a2) & 1) != 0 || !sub_1CBDA0368(a2))
  {
    if (sub_1CBDA0234(a2)) {
      sub_1CBDA0368(a2);
    }
    *(void *)&double result = sub_1CBD925E4(a1, (unsigned __int16 *)a2, a3, a4).n128_u64[0];
  }
  else
  {
    *(void *)&double result = sub_1CBD923CC(a1, (unsigned __int16 *)a2, a3, a4).n128_u64[0];
  }
  return result;
}

__n128 sub_1CBD92D88(_DWORD *a1, unsigned int *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 68;
  int v7 = *(unsigned __int16 *)a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x54u);
  unsigned int v11 = sub_1CBDA6464(v7, 0x11u);
  unsigned int v19 = sub_1CBDA6464(v7, 4u);
  unsigned int v12 = sub_1CBDA6464(v7, 0x14u);
  unsigned int v20 = sub_1CBDA6464(v7, 0x37u);
  long long v29 = 0u;
  memset(v30, 0, 60);
  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v21 = 0u;
  __n128 v22 = 0u;
  sub_1CBD927FC((uint64_t)a1, a2, v8, (uint64_t)&v21);
  sub_1CBD929F0(a1, (uint64_t)a2, v9, (uint64_t)&v21, (BOOL *)&v30[3] + 8, (int8x8_t *)((char *)v30 + 12), (uint64_t)&v30[1] + 8);
  DWORD1(v30[1]) = *(_DWORD *)(*((void *)a2 + 2) + 16 * v10 + 8) & 0xF;
  sub_1CBD8C148((uint64_t)a1, (uint64_t)a2, v11, (uint64_t)&v23 + 8);
  sub_1CBD8C148((uint64_t)a1, (uint64_t)a2, v19, (uint64_t)&v25 + 4);
  sub_1CBD8F254((uint64_t)a1, (unsigned __int16 *)a2, v12, (uint64_t)&v27);
  sub_1CBD8F254((uint64_t)a1, (unsigned __int16 *)a2, v20, (uint64_t)&v28 + 12);
  if (v21 <= 1)
  {
    if (DWORD2(v27) == 1) {
      HIDWORD(v27) = v22.n128_u32[0];
    }
    if (DWORD1(v29) == 1) {
      DWORD2(v29) = v22.n128_u32[0];
    }
  }
  long long v13 = v30[2];
  *(_OWORD *)(a4 + 160) = v30[1];
  *(_OWORD *)(a4 + 176) = v13;
  *(_OWORD *)(a4 + 188) = *(_OWORD *)((char *)&v30[2] + 12);
  long long v14 = v28;
  *(_OWORD *)(a4 + 96) = v27;
  *(_OWORD *)(a4 + 112) = v14;
  long long v15 = v30[0];
  *(_OWORD *)(a4 + 128) = v29;
  *(_OWORD *)(a4 + 144) = v15;
  long long v16 = v24;
  *(_OWORD *)(a4 + 32) = v23;
  *(_OWORD *)(a4 + 48) = v16;
  long long v17 = v26;
  *(_OWORD *)(a4 + 64) = v25;
  *(_OWORD *)(a4 + 80) = v17;
  __n128 result = v22;
  *(_OWORD *)a4 = v21;
  *(__n128 *)(a4 + 16) = result;
  return result;
}

double sub_1CBD92F80(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  if (*a1 > 3u)
  {
    if (sub_1CBD93254(a1, (unsigned int *)a2))
    {
      *(void *)&double result = sub_1CBD932B0((uint64_t)a1, a2, a3, a4).n128_u64[0];
    }
    else
    {
      sub_1CBD93504(a1, (unsigned int *)a2);
      *(void *)&double result = sub_1CD438640((uint64_t)a1, a2, a3, a4).n128_u64[0];
    }
  }
  else
  {
    *(void *)&double result = sub_1CBD9305C(a1, (unsigned int *)a2, a3, a4).n128_u64[0];
  }
  return result;
}

__n128 sub_1CBD9305C(_DWORD *a1, unsigned int *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 68;
  int v7 = *(unsigned __int16 *)a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x54u);
  unsigned int v11 = sub_1CBDA6464(v7, 0x11u);
  unsigned int v19 = sub_1CBDA6464(v7, 4u);
  unsigned int v12 = sub_1CBDA6464(v7, 0x14u);
  unsigned int v20 = sub_1CBDA6464(v7, 0x37u);
  long long v29 = 0u;
  memset(v30, 0, 60);
  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v21 = 0u;
  __n128 v22 = 0u;
  sub_1CBD927FC((uint64_t)a1, a2, v8, (uint64_t)&v21);
  sub_1CBD929F0(a1, (uint64_t)a2, v9, (uint64_t)&v21, (BOOL *)&v30[3] + 8, (int8x8_t *)((char *)v30 + 12), (uint64_t)&v30[1] + 8);
  DWORD1(v30[1]) = *(_DWORD *)(*((void *)a2 + 2) + 16 * v10 + 8) & 0xF;
  sub_1CBD8C148((uint64_t)a1, (uint64_t)a2, v11, (uint64_t)&v23 + 8);
  sub_1CBD8C148((uint64_t)a1, (uint64_t)a2, v19, (uint64_t)&v25 + 4);
  sub_1CBD8F254((uint64_t)a1, (unsigned __int16 *)a2, v12, (uint64_t)&v27);
  sub_1CBD8F254((uint64_t)a1, (unsigned __int16 *)a2, v20, (uint64_t)&v28 + 12);
  if (v21 <= 1)
  {
    if (DWORD2(v27) == 1) {
      HIDWORD(v27) = v22.n128_u32[0];
    }
    if (DWORD1(v29) == 1) {
      DWORD2(v29) = v22.n128_u32[0];
    }
  }
  long long v13 = v30[2];
  *(_OWORD *)(a4 + 160) = v30[1];
  *(_OWORD *)(a4 + 176) = v13;
  *(_OWORD *)(a4 + 188) = *(_OWORD *)((char *)&v30[2] + 12);
  long long v14 = v28;
  *(_OWORD *)(a4 + 96) = v27;
  *(_OWORD *)(a4 + 112) = v14;
  long long v15 = v30[0];
  *(_OWORD *)(a4 + 128) = v29;
  *(_OWORD *)(a4 + 144) = v15;
  long long v16 = v24;
  *(_OWORD *)(a4 + 32) = v23;
  *(_OWORD *)(a4 + 48) = v16;
  long long v17 = v26;
  *(_OWORD *)(a4 + 64) = v25;
  *(_OWORD *)(a4 + 80) = v17;
  __n128 result = v22;
  *(_OWORD *)a4 = v21;
  *(__n128 *)(a4 + 16) = result;
  return result;
}

BOOL sub_1CBD93254(_DWORD *a1, unsigned int *a2)
{
  return *a1 >= 4u && (sub_1CBDA0234(a2) & 1) == 0 && (sub_1CBDB2780(*a2, 0, 0) & 0xFFFFFFFE) == 38;
}

__n128 sub_1CBD932B0(uint64_t a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 73;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v23 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v9 = sub_1CBDA6464(v7, 0x54u);
  unsigned int v10 = sub_1CBDA6464(v7, 0x11u);
  unsigned int v11 = sub_1CBDA6464(v7, 4u);
  unsigned int v12 = sub_1CBDA6464(v7, 0x14u);
  unsigned int v13 = sub_1CBDA6464(v7, 0x37u);
  long long v33 = 0u;
  long long v34 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  __n128 v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v24 = 0u;
  uint64_t v14 = *((void *)a2 + 2);
  int v15 = *(_DWORD *)(v14 + 16 * v8 + 8);
  if (v15 == 2)
  {
    char v16 = 6;
  }
  else if (v15 == 1)
  {
    char v16 = 7;
  }
  else
  {
    char v16 = (v15 + 9) & 0xF;
  }
  BYTE1(v24) = v16;
  LOBYTE(v24) = 1;
  sub_1CBD85A80((_DWORD *)a1, (uint64_t)a2, v23, (BOOL *)&v34 + 8, (int8x8_t *)((char *)&v31 + 12), (uint64_t)&v32 + 8);
  DWORD1(v32) = *(_DWORD *)(v14 + 16 * v9 + 8) & 0xF;
  sub_1CBD8C148(a1, (uint64_t)a2, v10, (uint64_t)&v24 + 4);
  sub_1CBD8C148(a1, (uint64_t)a2, v11, (uint64_t)&v26);
  sub_1CBD88E08(a1, a2, v12, (uint64_t)&v27.n128_i64[1] + 4);
  sub_1CBD88E08(a1, a2, v13, (uint64_t)&v29 + 8);
  if (DWORD1(v28) == 1) {
    *(void *)((char *)&v28 + 4) = 0x100000001;
  }
  if (v30 == 1) {
    *(void *)&long long v30 = 0x100000001;
  }
  if (*(_DWORD *)a1 >= 5u)
  {
    HIDWORD(v34) = 1;
    if ((*(unsigned char *)(*(void *)(a1 + 8) + 196) & 2) != 0)
    {
      uint64_t v17 = sub_1CBE52E8C(*(_DWORD *)a2);
      if ((v17 & 0xFF00000000) == 0 || v17 != 47) {
        HIDWORD(v34) = 0;
      }
    }
  }
  else if (*(_DWORD *)a1 != 4)
  {
    goto LABEL_16;
  }
  *(void *)((char *)&v31 + 4) = 0x4D00000003;
LABEL_16:
  long long v18 = v33;
  *(_OWORD *)(a4 + 128) = v32;
  *(_OWORD *)(a4 + 144) = v18;
  *(_OWORD *)(a4 + 160) = v34;
  long long v19 = v29;
  *(_OWORD *)(a4 + 64) = v28;
  *(_OWORD *)(a4 + 80) = v19;
  long long v20 = v31;
  *(_OWORD *)(a4 + 96) = v30;
  *(_OWORD *)(a4 + 112) = v20;
  long long v21 = v25;
  *(_OWORD *)a4 = v24;
  *(_OWORD *)(a4 + 16) = v21;
  __n128 result = v27;
  *(_OWORD *)(a4 + 32) = v26;
  *(__n128 *)(a4 + 48) = result;
  return result;
}

uint64_t sub_1CBD93504(_DWORD *a1, unsigned int *a2)
{
  if (*a1 < 4u) {
    return 0;
  }
  uint64_t result = sub_1CBDA0234(a2);
  if (result) {
    return (sub_1CBDB2780(*a2, 0, 0) & 0xFFFFFFFE) == 38;
  }
  return result;
}

double sub_1CBD93560(_DWORD *a1, unsigned int *a2, _DWORD *a3, uint64_t a4)
{
  if (*a1 <= 3u)
  {
    *(void *)&double result = sub_1CBD936CC(a1, a2, a3, a4).n128_u64[0];
  }
  else if (sub_1CBD91EBC(a1, a2))
  {
    *(void *)&double result = sub_1CBD938A8(a1, (unsigned __int16 *)a2, a3, a4).n128_u64[0];
  }
  else if (sub_1CBD92144(a1, a2))
  {
    *(void *)&double result = sub_1CBD93B6C(a1, (unsigned __int16 *)a2, a3, a4).n128_u64[0];
  }
  else if ((sub_1CBDA0234(a2) & 1) != 0 || !sub_1CBDA0368(a2))
  {
    if (sub_1CBDA0234(a2)) {
      sub_1CBDA0368(a2);
    }
    *(void *)&double result = sub_1CBD940FC(a1, (unsigned __int16 *)a2, a3, a4).n128_u64[0];
  }
  else
  {
    *(void *)&double result = sub_1CBD93E3C(a1, (unsigned __int16 *)a2, a3, a4).n128_u64[0];
  }
  return result;
}

__n128 sub_1CBD936CC(_DWORD *a1, unsigned int *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 93;
  int v7 = *(unsigned __int16 *)a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x54u);
  unsigned int v11 = sub_1CBDA6464(v7, 0x11u);
  unsigned int v19 = sub_1CBDA6464(v7, 4u);
  unsigned int v12 = sub_1CBDA6464(v7, 0x14u);
  unsigned int v20 = sub_1CBDA6464(v7, 0x37u);
  long long v29 = 0u;
  memset(v30, 0, 60);
  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v21 = 0u;
  __n128 v22 = 0u;
  sub_1CBD927FC((uint64_t)a1, a2, v8, (uint64_t)&v21);
  sub_1CBD929F0(a1, (uint64_t)a2, v9, (uint64_t)&v21, (BOOL *)&v30[3] + 8, (int8x8_t *)((char *)v30 + 12), (uint64_t)&v30[1] + 8);
  DWORD1(v30[1]) = dword_1CDF536A4[(*(void *)(*((void *)a2 + 2) + 16 * v10 + 8) & 0xFLL) - 8];
  sub_1CBD88900((uint64_t)a1, (unsigned __int16 *)a2, v11, (uint64_t)&v23 + 8);
  sub_1CBD88900((uint64_t)a1, (unsigned __int16 *)a2, v19, (uint64_t)&v25 + 4);
  sub_1CBD8F254((uint64_t)a1, (unsigned __int16 *)a2, v12, (uint64_t)&v27);
  sub_1CBD8F254((uint64_t)a1, (unsigned __int16 *)a2, v20, (uint64_t)&v28 + 12);
  sub_1CBD943C4(&v21);
  long long v13 = v30[2];
  *(_OWORD *)(a4 + 160) = v30[1];
  *(_OWORD *)(a4 + 176) = v13;
  *(_OWORD *)(a4 + 188) = *(_OWORD *)((char *)&v30[2] + 12);
  long long v14 = v28;
  *(_OWORD *)(a4 + 96) = v27;
  *(_OWORD *)(a4 + 112) = v14;
  long long v15 = v30[0];
  *(_OWORD *)(a4 + 128) = v29;
  *(_OWORD *)(a4 + 144) = v15;
  long long v16 = v24;
  *(_OWORD *)(a4 + 32) = v23;
  *(_OWORD *)(a4 + 48) = v16;
  long long v17 = v26;
  *(_OWORD *)(a4 + 64) = v25;
  *(_OWORD *)(a4 + 80) = v17;
  __n128 result = v22;
  *(_OWORD *)a4 = v21;
  *(__n128 *)(a4 + 16) = result;
  return result;
}

__n128 sub_1CBD938A8(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  v39[2] = *MEMORY[0x1E4F143B8];
  *a3 = 97;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x54u);
  unsigned int v22 = sub_1CBDA6464(v7, 0x11u);
  unsigned int v23 = sub_1CBDA6464(v7, 4u);
  unsigned int v25 = sub_1CBDA6464(v7, 0x14u);
  unsigned int v24 = sub_1CBDA6464(v7, 0x37u);
  *(_DWORD *)v38 = 0;
  long long v36 = 0u;
  long long v37 = 0u;
  long long v34 = 0u;
  long long v35 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  long long v26 = 0u;
  __n128 v27 = 0u;
  sub_1CBD85EB8((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v26);
  uint64_t v11 = *((void *)a2 + 2);
  v27.n128_u8[0] = (*(unsigned char *)(v11 + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, v38, (int8x8_t *)((char *)&v35 + 4), (uint64_t)&v36);
  HIDWORD(v35) = dword_1CDF536A4[(*(void *)(v11 + 16 * v10 + 8) & 0xFLL) - 8];
  sub_1CBD88900((uint64_t)a1, a2, v22, (uint64_t)&v27.n128_i64[1] + 4);
  sub_1CBD88900((uint64_t)a1, a2, v23, (uint64_t)&v29 + 8);
  sub_1CBD88E08((uint64_t)a1, a2, v25, (uint64_t)&v31 + 4);
  sub_1CBD88E08((uint64_t)a1, a2, v24, (uint64_t)&v33);
  if (HIDWORD(v31) == 1) {
    LODWORD(v32) = 1;
  }
  if (DWORD2(v33) == 1) {
    *((void *)&v33 + 1) = 0x100000001;
  }
  if (HIDWORD(v35) >= 4)
  {
    char v18 = 0;
    uint64_t v19 = 0;
    v39[0] = (char *)&v27.n128_u64[1] + 4;
    v39[1] = (char *)&v29 + 8;
    do
    {
      char v20 = v18;
      uint64_t v21 = v39[v19];
      if (*(_DWORD *)(v21 + 8) != 1 && *(_DWORD *)(v21 + 12) == 1) {
        *(unsigned char *)(v21 + 25) = 1;
      }
      char v18 = 1;
      uint64_t v19 = 1;
    }
    while ((v20 & 1) == 0);
  }
  if (*a1 >= 4u)
  {
    if ((DWORD2(v26) - 2) <= 3) {
      HIDWORD(v34) = dword_1CDF53620[DWORD2(v26) - 2];
    }
    LODWORD(v35) = 96;
  }
  long long v12 = v37;
  *(_OWORD *)(a4 + 160) = v36;
  *(_OWORD *)(a4 + 176) = v12;
  *(_DWORD *)(a4 + 192) = *(_DWORD *)v38;
  long long v13 = v33;
  *(_OWORD *)(a4 + 96) = v32;
  *(_OWORD *)(a4 + 112) = v13;
  long long v14 = v35;
  *(_OWORD *)(a4 + 128) = v34;
  *(_OWORD *)(a4 + 144) = v14;
  long long v15 = v29;
  *(_OWORD *)(a4 + 32) = v28;
  *(_OWORD *)(a4 + 48) = v15;
  long long v16 = v31;
  *(_OWORD *)(a4 + 64) = v30;
  *(_OWORD *)(a4 + 80) = v16;
  __n128 result = v27;
  *(_OWORD *)a4 = v26;
  *(__n128 *)(a4 + 16) = result;
  return result;
}

__n128 sub_1CBD93B6C(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  v39[2] = *MEMORY[0x1E4F143B8];
  *a3 = 98;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x54u);
  unsigned int v22 = sub_1CBDA6464(v7, 0x11u);
  unsigned int v23 = sub_1CBDA6464(v7, 4u);
  unsigned int v25 = sub_1CBDA6464(v7, 0x14u);
  unsigned int v24 = sub_1CBDA6464(v7, 0x37u);
  *(_DWORD *)v38 = 0;
  long long v36 = 0u;
  long long v37 = 0u;
  long long v34 = 0u;
  long long v35 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  long long v26 = 0u;
  __n128 v27 = 0u;
  sub_1CBD85EB8((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v26);
  uint64_t v11 = *((void *)a2 + 2);
  v27.n128_u8[0] = (*(unsigned char *)(v11 + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, v38, (int8x8_t *)((char *)&v35 + 4), (uint64_t)&v36);
  HIDWORD(v35) = dword_1CDF536A4[(*(void *)(v11 + 16 * v10 + 8) & 0xFLL) - 8];
  sub_1CBD88900((uint64_t)a1, a2, v22, (uint64_t)&v27.n128_i64[1] + 4);
  sub_1CBD88900((uint64_t)a1, a2, v23, (uint64_t)&v29 + 8);
  sub_1CBD88E08((uint64_t)a1, a2, v25, (uint64_t)&v31 + 4);
  sub_1CBD88E08((uint64_t)a1, a2, v24, (uint64_t)&v33);
  if (HIDWORD(v31) == 1) {
    LODWORD(v32) = 2;
  }
  if (DWORD2(v33) == 1) {
    *((void *)&v33 + 1) = 0x200000001;
  }
  if (HIDWORD(v35) >= 4)
  {
    char v18 = 0;
    uint64_t v19 = 0;
    v39[0] = (char *)&v27.n128_u64[1] + 4;
    v39[1] = (char *)&v29 + 8;
    do
    {
      char v20 = v18;
      uint64_t v21 = v39[v19];
      if (*(_DWORD *)(v21 + 8) != 1 && *(_DWORD *)(v21 + 12) == 1) {
        *(unsigned char *)(v21 + 25) = 1;
      }
      char v18 = 1;
      uint64_t v19 = 1;
    }
    while ((v20 & 1) == 0);
  }
  if (*a1 >= 4u)
  {
    if ((DWORD2(v26) - 2) <= 3) {
      HIDWORD(v34) = dword_1CDF53620[DWORD2(v26) - 2];
    }
    LODWORD(v35) = 97;
  }
  long long v12 = v37;
  *(_OWORD *)(a4 + 160) = v36;
  *(_OWORD *)(a4 + 176) = v12;
  *(_DWORD *)(a4 + 192) = *(_DWORD *)v38;
  long long v13 = v33;
  *(_OWORD *)(a4 + 96) = v32;
  *(_OWORD *)(a4 + 112) = v13;
  long long v14 = v35;
  *(_OWORD *)(a4 + 128) = v34;
  *(_OWORD *)(a4 + 144) = v14;
  long long v15 = v29;
  *(_OWORD *)(a4 + 32) = v28;
  *(_OWORD *)(a4 + 48) = v15;
  long long v16 = v31;
  *(_OWORD *)(a4 + 64) = v30;
  *(_OWORD *)(a4 + 80) = v16;
  __n128 result = v27;
  *(_OWORD *)a4 = v26;
  *(__n128 *)(a4 + 16) = result;
  return result;
}

__n128 sub_1CBD93E3C(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  v36[2] = *MEMORY[0x1E4F143B8];
  *a3 = 95;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x54u);
  unsigned int v11 = sub_1CBDA6464(v7, 0x11u);
  unsigned int v12 = sub_1CBDA6464(v7, 4u);
  unsigned int v24 = sub_1CBDA6464(v7, 0x14u);
  unsigned int v25 = sub_1CBDA6464(v7, 0x37u);
  long long v34 = 0u;
  memset(v35, 0, 60);
  long long v32 = 0u;
  long long v33 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  long long v26 = 0u;
  __n128 v27 = 0u;
  sub_1CBD8F178((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v26);
  uint64_t v13 = *((void *)a2 + 2);
  v27.n128_u8[0] = (*(unsigned char *)(v13 + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, (BOOL *)&v35[3] + 8, (int8x8_t *)((char *)v35 + 12), (uint64_t)&v35[1] + 8);
  DWORD1(v35[1]) = dword_1CDF536A4[(*(void *)(v13 + 16 * v10 + 8) & 0xFLL) - 8];
  sub_1CBD88900((uint64_t)a1, a2, v11, (uint64_t)&v28 + 4);
  sub_1CBD88900((uint64_t)a1, a2, v12, (uint64_t)&v30);
  sub_1CBD8F254((uint64_t)a1, a2, v24, (uint64_t)&v31 + 12);
  sub_1CBD8F254((uint64_t)a1, a2, v25, (uint64_t)&v33 + 8);
  if (DWORD1(v32) == 1) {
    *(void *)((char *)&v32 + 4) = 0x100000001;
  }
  if (v34 == 1) {
    *(void *)&long long v34 = 0x100000001;
  }
  if (DWORD1(v35[1]) >= 4)
  {
    char v20 = 0;
    uint64_t v21 = 0;
    v36[0] = (char *)&v28 + 4;
    v36[1] = &v30;
    do
    {
      char v22 = v20;
      uint64_t v23 = v36[v21];
      if (*(_DWORD *)(v23 + 8) != 1 && *(_DWORD *)(v23 + 12) == 1) {
        *(unsigned char *)(v23 + 25) = 1;
      }
      char v20 = 1;
      uint64_t v21 = 1;
    }
    while ((v22 & 1) == 0);
  }
  if (*a1 >= 4u)
  {
    if ((DWORD2(v26) - 2) <= 3) {
      DWORD1(v35[0]) = dword_1CDF53620[DWORD2(v26) - 2];
    }
    DWORD2(v35[0]) = 94;
  }
  long long v14 = v35[2];
  *(_OWORD *)(a4 + 160) = v35[1];
  *(_OWORD *)(a4 + 176) = v14;
  *(_OWORD *)(a4 + 188) = *(_OWORD *)((char *)&v35[2] + 12);
  long long v15 = v33;
  *(_OWORD *)(a4 + 96) = v32;
  *(_OWORD *)(a4 + 112) = v15;
  long long v16 = v35[0];
  *(_OWORD *)(a4 + 128) = v34;
  *(_OWORD *)(a4 + 144) = v16;
  long long v17 = v29;
  *(_OWORD *)(a4 + 32) = v28;
  *(_OWORD *)(a4 + 48) = v17;
  long long v18 = v31;
  *(_OWORD *)(a4 + 64) = v30;
  *(_OWORD *)(a4 + 80) = v18;
  __n128 result = v27;
  *(_OWORD *)a4 = v26;
  *(__n128 *)(a4 + 16) = result;
  return result;
}

__n128 sub_1CBD940FC(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  v36[2] = *MEMORY[0x1E4F143B8];
  *a3 = 96;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x54u);
  unsigned int v24 = sub_1CBDA6464(v7, 0x11u);
  unsigned int v11 = sub_1CBDA6464(v7, 4u);
  unsigned int v25 = sub_1CBDA6464(v7, 0x14u);
  unsigned int v12 = sub_1CBDA6464(v7, 0x37u);
  long long v34 = 0u;
  memset(v35, 0, 60);
  long long v32 = 0u;
  long long v33 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  long long v26 = 0u;
  __n128 v27 = 0u;
  sub_1CBD8F178((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v26);
  uint64_t v13 = *((void *)a2 + 2);
  v27.n128_u8[0] = (*(unsigned char *)(v13 + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, (BOOL *)&v35[3] + 8, (int8x8_t *)((char *)v35 + 12), (uint64_t)&v35[1] + 8);
  DWORD1(v35[1]) = dword_1CDF536A4[(*(void *)(v13 + 16 * v10 + 8) & 0xFLL) - 8];
  sub_1CBD88900((uint64_t)a1, a2, v24, (uint64_t)&v28 + 4);
  sub_1CBD88900((uint64_t)a1, a2, v11, (uint64_t)&v30);
  sub_1CBD8F254((uint64_t)a1, a2, v25, (uint64_t)&v31 + 12);
  sub_1CBD8F254((uint64_t)a1, a2, v12, (uint64_t)&v33 + 8);
  if (DWORD1(v32) == 1) {
    *(void *)((char *)&v32 + 4) = 0x200000001;
  }
  if (v34 == 1) {
    *(void *)&long long v34 = 0x200000001;
  }
  if (DWORD1(v35[1]) >= 4)
  {
    char v20 = 0;
    uint64_t v21 = 0;
    v36[0] = (char *)&v28 + 4;
    v36[1] = &v30;
    do
    {
      char v22 = v20;
      uint64_t v23 = v36[v21];
      if (*(_DWORD *)(v23 + 8) != 1 && *(_DWORD *)(v23 + 12) == 1) {
        *(unsigned char *)(v23 + 25) = 1;
      }
      char v20 = 1;
      uint64_t v21 = 1;
    }
    while ((v22 & 1) == 0);
  }
  if (*a1 >= 4u)
  {
    if ((DWORD2(v26) - 2) <= 3) {
      DWORD1(v35[0]) = dword_1CDF53620[DWORD2(v26) - 2];
    }
    DWORD2(v35[0]) = 95;
  }
  long long v14 = v35[2];
  *(_OWORD *)(a4 + 160) = v35[1];
  *(_OWORD *)(a4 + 176) = v14;
  *(_OWORD *)(a4 + 188) = *(_OWORD *)((char *)&v35[2] + 12);
  long long v15 = v33;
  *(_OWORD *)(a4 + 96) = v32;
  *(_OWORD *)(a4 + 112) = v15;
  long long v16 = v35[0];
  *(_OWORD *)(a4 + 128) = v34;
  *(_OWORD *)(a4 + 144) = v16;
  long long v17 = v29;
  *(_OWORD *)(a4 + 32) = v28;
  *(_OWORD *)(a4 + 48) = v17;
  long long v18 = v31;
  *(_OWORD *)(a4 + 64) = v30;
  *(_OWORD *)(a4 + 80) = v18;
  __n128 result = v27;
  *(_OWORD *)a4 = v26;
  *(__n128 *)(a4 + 16) = result;
  return result;
}

_DWORD *sub_1CBD943C4(_DWORD *result)
{
  v6[2] = *MEMORY[0x1E4F143B8];
  if (*result <= 1u)
  {
    int v1 = result[4];
    if (result[26] == 1) {
      result[27] = v1;
    }
    if (result[33] == 1) {
      result[34] = v1;
    }
  }
  if (result[41] >= 4u)
  {
    char v2 = 0;
    uint64_t v3 = 0;
    v6[0] = result + 10;
    v6[1] = result + 17;
    do
    {
      char v4 = v2;
      uint64_t v5 = v6[v3];
      if (*(_DWORD *)(v5 + 8) != 1 && *(_DWORD *)(v5 + 12) == 1) {
        *(unsigned char *)(v5 + 25) = 1;
      }
      char v2 = 1;
      uint64_t v3 = 1;
    }
    while ((v4 & 1) == 0);
  }
  return result;
}

double sub_1CBD94494(_DWORD *a1, unsigned int *a2, _DWORD *a3, uint64_t a4)
{
  if (*a1 <= 3u)
  {
    *(void *)&double result = sub_1CBD936CC(a1, a2, a3, a4).n128_u64[0];
  }
  else if (sub_1CBD91EBC(a1, a2))
  {
    *(void *)&double result = sub_1CD43889C(a1, (unsigned __int16 *)a2, a3, a4).n128_u64[0];
  }
  else if (sub_1CBD92144(a1, a2))
  {
    *(void *)&double result = sub_1CBD94600(a1, (unsigned __int16 *)a2, a3, a4).n128_u64[0];
  }
  else if ((sub_1CBDA0234(a2) & 1) != 0 || !sub_1CBDA0368(a2))
  {
    if (sub_1CBDA0234(a2)) {
      sub_1CBDA0368(a2);
    }
    *(void *)&double result = sub_1CBD948D8(a1, (unsigned __int16 *)a2, a3, a4).n128_u64[0];
  }
  else
  {
    *(void *)&double result = sub_1CD438B60(a1, (unsigned __int16 *)a2, a3, a4).n128_u64[0];
  }
  return result;
}

__n128 sub_1CBD94600(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  v39[2] = *MEMORY[0x1E4F143B8];
  *a3 = 98;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x54u);
  unsigned int v22 = sub_1CBDA6464(v7, 0x11u);
  unsigned int v23 = sub_1CBDA6464(v7, 4u);
  unsigned int v25 = sub_1CBDA6464(v7, 0x14u);
  unsigned int v24 = sub_1CBDA6464(v7, 0x37u);
  *(_DWORD *)v38 = 0;
  long long v36 = 0u;
  long long v37 = 0u;
  long long v34 = 0u;
  long long v35 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  long long v26 = 0u;
  __n128 v27 = 0u;
  sub_1CBD85EB8((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v26);
  uint64_t v11 = *((void *)a2 + 2);
  v27.n128_u8[0] = (*(unsigned char *)(v11 + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, v38, (int8x8_t *)((char *)&v35 + 4), (uint64_t)&v36);
  HIDWORD(v35) = dword_1CDF536A4[(*(void *)(v11 + 16 * v10 + 8) & 0xFLL) - 8];
  sub_1CBD88900((uint64_t)a1, a2, v22, (uint64_t)&v27.n128_i64[1] + 4);
  sub_1CBD88900((uint64_t)a1, a2, v23, (uint64_t)&v29 + 8);
  sub_1CBD88E08((uint64_t)a1, a2, v25, (uint64_t)&v31 + 4);
  sub_1CBD88E08((uint64_t)a1, a2, v24, (uint64_t)&v33);
  if (HIDWORD(v31) == 1) {
    LODWORD(v32) = 2;
  }
  if (DWORD2(v33) == 1) {
    *((void *)&v33 + 1) = 0x200000001;
  }
  if (HIDWORD(v35) >= 4)
  {
    char v18 = 0;
    uint64_t v19 = 0;
    v39[0] = (char *)&v27.n128_u64[1] + 4;
    v39[1] = (char *)&v29 + 8;
    do
    {
      char v20 = v18;
      uint64_t v21 = v39[v19];
      if (*(_DWORD *)(v21 + 8) != 1 && *(_DWORD *)(v21 + 12) == 1) {
        *(unsigned char *)(v21 + 25) = 1;
      }
      char v18 = 1;
      uint64_t v19 = 1;
    }
    while ((v20 & 1) == 0);
  }
  if (*a1 >= 4u)
  {
    if ((DWORD2(v26) - 2) <= 3) {
      HIDWORD(v34) = dword_1CDF53620[DWORD2(v26) - 2];
    }
    LODWORD(v35) = 97;
  }
  long long v12 = v37;
  *(_OWORD *)(a4 + 160) = v36;
  *(_OWORD *)(a4 + 176) = v12;
  *(_DWORD *)(a4 + 192) = *(_DWORD *)v38;
  long long v13 = v33;
  *(_OWORD *)(a4 + 96) = v32;
  *(_OWORD *)(a4 + 112) = v13;
  long long v14 = v35;
  *(_OWORD *)(a4 + 128) = v34;
  *(_OWORD *)(a4 + 144) = v14;
  long long v15 = v29;
  *(_OWORD *)(a4 + 32) = v28;
  *(_OWORD *)(a4 + 48) = v15;
  long long v16 = v31;
  *(_OWORD *)(a4 + 64) = v30;
  *(_OWORD *)(a4 + 80) = v16;
  __n128 result = v27;
  *(_OWORD *)a4 = v26;
  *(__n128 *)(a4 + 16) = result;
  return result;
}

__n128 sub_1CBD948D8(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  v36[2] = *MEMORY[0x1E4F143B8];
  *a3 = 96;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x54u);
  unsigned int v11 = sub_1CBDA6464(v7, 0x11u);
  unsigned int v12 = sub_1CBDA6464(v7, 4u);
  unsigned int v24 = sub_1CBDA6464(v7, 0x14u);
  unsigned int v25 = sub_1CBDA6464(v7, 0x37u);
  long long v34 = 0u;
  memset(v35, 0, 60);
  long long v32 = 0u;
  long long v33 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  long long v26 = 0u;
  __n128 v27 = 0u;
  sub_1CBD8F178((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v26);
  uint64_t v13 = *((void *)a2 + 2);
  v27.n128_u8[0] = (*(unsigned char *)(v13 + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, (BOOL *)&v35[3] + 8, (int8x8_t *)((char *)v35 + 12), (uint64_t)&v35[1] + 8);
  DWORD1(v35[1]) = dword_1CDF536A4[(*(void *)(v13 + 16 * v10 + 8) & 0xFLL) - 8];
  sub_1CBD88900((uint64_t)a1, a2, v11, (uint64_t)&v28 + 4);
  sub_1CBD88900((uint64_t)a1, a2, v12, (uint64_t)&v30);
  sub_1CBD8F254((uint64_t)a1, a2, v24, (uint64_t)&v31 + 12);
  sub_1CBD8F254((uint64_t)a1, a2, v25, (uint64_t)&v33 + 8);
  if (DWORD1(v32) == 1) {
    *(void *)((char *)&v32 + 4) = 0x200000001;
  }
  if (v34 == 1) {
    *(void *)&long long v34 = 0x200000001;
  }
  if (DWORD1(v35[1]) >= 4)
  {
    char v20 = 0;
    uint64_t v21 = 0;
    v36[0] = (char *)&v28 + 4;
    v36[1] = &v30;
    do
    {
      char v22 = v20;
      uint64_t v23 = v36[v21];
      if (*(_DWORD *)(v23 + 8) != 1 && *(_DWORD *)(v23 + 12) == 1) {
        *(unsigned char *)(v23 + 25) = 1;
      }
      char v20 = 1;
      uint64_t v21 = 1;
    }
    while ((v22 & 1) == 0);
  }
  if (*a1 >= 4u)
  {
    if ((DWORD2(v26) - 2) <= 3) {
      DWORD1(v35[0]) = dword_1CDF53620[DWORD2(v26) - 2];
    }
    DWORD2(v35[0]) = 95;
  }
  long long v14 = v35[2];
  *(_OWORD *)(a4 + 160) = v35[1];
  *(_OWORD *)(a4 + 176) = v14;
  *(_OWORD *)(a4 + 188) = *(_OWORD *)((char *)&v35[2] + 12);
  long long v15 = v33;
  *(_OWORD *)(a4 + 96) = v32;
  *(_OWORD *)(a4 + 112) = v15;
  long long v16 = v35[0];
  *(_OWORD *)(a4 + 128) = v34;
  *(_OWORD *)(a4 + 144) = v16;
  long long v17 = v29;
  *(_OWORD *)(a4 + 32) = v28;
  *(_OWORD *)(a4 + 48) = v17;
  long long v18 = v31;
  *(_OWORD *)(a4 + 64) = v30;
  *(_OWORD *)(a4 + 80) = v18;
  __n128 result = v27;
  *(_OWORD *)a4 = v26;
  *(__n128 *)(a4 + 16) = result;
  return result;
}

double sub_1CBD94BA4(_DWORD *a1, unsigned int *a2, _DWORD *a3, uint64_t a4)
{
  if (*a1 <= 3u)
  {
    *(void *)&double result = sub_1CBD936CC(a1, a2, a3, a4).n128_u64[0];
  }
  else if (sub_1CBD93254(a1, a2))
  {
    *(void *)&double result = sub_1CBD94C80(a1, (unsigned __int16 *)a2, a3, a4).n128_u64[0];
  }
  else
  {
    sub_1CBD93504(a1, a2);
    *(void *)&double result = sub_1CD438E1C(a1, (unsigned __int16 *)a2, a3, a4).n128_u64[0];
  }
  return result;
}

__n128 sub_1CBD94C80(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  v35[2] = *MEMORY[0x1E4F143B8];
  *a3 = 99;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v26 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v9 = sub_1CBDA6464(v7, 0x54u);
  unsigned int v25 = sub_1CBDA6464(v7, 0x11u);
  unsigned int v10 = sub_1CBDA6464(v7, 4u);
  unsigned int v11 = sub_1CBDA6464(v7, 0x14u);
  unsigned int v12 = sub_1CBDA6464(v7, 0x37u);
  long long v33 = 0u;
  memset(v34, 0, 60);
  long long v31 = 0u;
  long long v32 = 0u;
  long long v29 = 0u;
  __n128 v30 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  uint64_t v13 = *((void *)a2 + 2);
  int v14 = *(_DWORD *)(v13 + 16 * v8 + 8);
  if (v14 == 2)
  {
    char v15 = 6;
  }
  else if (v14 == 1)
  {
    char v15 = 7;
  }
  else
  {
    char v15 = (v14 + 9) & 0xF;
  }
  BYTE1(v27) = v15;
  LOBYTE(v27) = 1;
  sub_1CBD85A80(a1, (uint64_t)a2, v26, (BOOL *)&v34[3] + 8, (int8x8_t *)((char *)v34 + 12), (uint64_t)&v34[1] + 8);
  DWORD1(v34[1]) = dword_1CDF536A4[(*(void *)(v13 + 16 * v9 + 8) & 0xFLL) - 8];
  sub_1CBD88900((uint64_t)a1, a2, v25, (uint64_t)&v27 + 4);
  sub_1CBD88900((uint64_t)a1, a2, v10, (uint64_t)&v29);
  sub_1CBD88E08((uint64_t)a1, a2, v11, (uint64_t)&v30.n128_i64[1] + 4);
  sub_1CBD88E08((uint64_t)a1, a2, v12, (uint64_t)&v32 + 8);
  if (DWORD1(v31) == 1) {
    *(void *)((char *)&v31 + 4) = 0x100000001;
  }
  if (v33 == 1) {
    *(void *)&long long v33 = 0x100000001;
  }
  if (DWORD1(v34[1]) >= 4)
  {
    char v21 = 0;
    uint64_t v22 = 0;
    v35[0] = (char *)&v27 + 4;
    v35[1] = &v29;
    do
    {
      char v23 = v21;
      uint64_t v24 = v35[v22];
      if (*(_DWORD *)(v24 + 8) != 1 && *(_DWORD *)(v24 + 12) == 1) {
        *(unsigned char *)(v24 + 25) = 1;
      }
      char v21 = 1;
      uint64_t v22 = 1;
    }
    while ((v23 & 1) == 0);
  }
  if (*a1 >= 4u) {
    *(void *)((char *)v34 + 4) = 0x6200000003;
  }
  long long v16 = v34[2];
  *(_OWORD *)(a4 + 128) = v34[1];
  *(_OWORD *)(a4 + 144) = v16;
  *(_OWORD *)(a4 + 156) = *(_OWORD *)((char *)&v34[2] + 12);
  long long v17 = v32;
  *(_OWORD *)(a4 + 64) = v31;
  *(_OWORD *)(a4 + 80) = v17;
  long long v18 = v34[0];
  *(_OWORD *)(a4 + 96) = v33;
  *(_OWORD *)(a4 + 112) = v18;
  long long v19 = v28;
  *(_OWORD *)a4 = v27;
  *(_OWORD *)(a4 + 16) = v19;
  __n128 result = v30;
  *(_OWORD *)(a4 + 32) = v29;
  *(__n128 *)(a4 + 48) = result;
  return result;
}

double sub_1CBD94F2C(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  if (*a1 > 3u)
  {
    if (sub_1CBD91EBC(a1, (unsigned int *)a2))
    {
      *(void *)&double result = sub_1CBD95260(a1, a2, a3, a4).n128_u64[0];
    }
    else if (sub_1CBD92144(a1, (unsigned int *)a2))
    {
      *(void *)&double result = sub_1CD4390D8(a1, a2, a3, a4).n128_u64[0];
    }
    else if ((sub_1CBDA0234((unsigned int *)a2) & 1) != 0 || !sub_1CBDA0368((unsigned int *)a2))
    {
      if (sub_1CBDA0234((unsigned int *)a2)) {
        sub_1CBDA0368((unsigned int *)a2);
      }
      return sub_1CD4394C0(a1, a2, a3, a4);
    }
    else
    {
      return sub_1CD4392C8(a1, a2, a3, a4);
    }
  }
  else
  {
    return sub_1CBD95098(a1, (unsigned int *)a2, a3, a4);
  }
  return result;
}

double sub_1CBD95098(_DWORD *a1, unsigned int *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 161;
  int v7 = *(unsigned __int16 *)a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 7u);
  unsigned int v19 = sub_1CBDA6464(v7, 0x14u);
  unsigned int v11 = sub_1CBDA6464(v7, 0x37u);
  *(_DWORD *)long long v29 = 0;
  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v20 = 0u;
  sub_1CBD927FC((uint64_t)a1, a2, v8, (uint64_t)&v20);
  sub_1CBD929F0(a1, (uint64_t)a2, v9, (uint64_t)&v20, v29, (int8x8_t *)&v26 + 1, (uint64_t)&v27);
  int v12 = *(_DWORD *)(*((void *)a2 + 2) + 16 * v10 + 8);
  if (v12 == 2)
  {
    char v13 = 6;
  }
  else if (v12 == 1)
  {
    char v13 = 7;
  }
  else
  {
    char v13 = (v12 + 9) & 0xF;
  }
  BYTE1(v26) = v13;
  sub_1CBD8F254((uint64_t)a1, (unsigned __int16 *)a2, v19, (uint64_t)&v22 + 8);
  sub_1CBD8F254((uint64_t)a1, (unsigned __int16 *)a2, v11, (uint64_t)&v24 + 4);
  if (v20 <= 1)
  {
    if (v23 == 1) {
      DWORD1(v23) = v21;
    }
    if (HIDWORD(v24) == 1) {
      LODWORD(v25) = v21;
    }
  }
  long long v14 = v27;
  *(_OWORD *)(a4 + 96) = v26;
  *(_OWORD *)(a4 + 112) = v14;
  *(_OWORD *)(a4 + 128) = v28;
  *(_DWORD *)(a4 + 144) = *(_DWORD *)v29;
  long long v15 = v23;
  *(_OWORD *)(a4 + 32) = v22;
  *(_OWORD *)(a4 + 48) = v15;
  long long v16 = v25;
  *(_OWORD *)(a4 + 64) = v24;
  *(_OWORD *)(a4 + 80) = v16;
  double result = *(double *)&v20;
  long long v18 = v21;
  *(_OWORD *)a4 = v20;
  *(_OWORD *)(a4 + 16) = v18;
  return result;
}

__n128 sub_1CBD95260(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 164;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 7u);
  unsigned int v11 = sub_1CBDA6464(v7, 0x14u);
  unsigned int v12 = sub_1CBDA6464(v7, 0x37u);
  memset(v26, 0, 44);
  long long v24 = 0u;
  long long v25 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v20 = 0u;
  __n128 v21 = 0u;
  sub_1CBD85EB8((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v20);
  uint64_t v13 = *((void *)a2 + 2);
  v21.n128_u8[0] = (*(unsigned char *)(v13 + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, (BOOL *)&v26[2] + 8, (int8x8_t *)v26, (uint64_t)v26 + 8);
  int v14 = *(_DWORD *)(v13 + 16 * v10 + 8);
  if (v14 == 2)
  {
    char v15 = 6;
  }
  else if (v14 == 1)
  {
    char v15 = 7;
  }
  else
  {
    char v15 = (v14 + 9) & 0xF;
  }
  BYTE5(v25) = v15;
  sub_1CBD88E08((uint64_t)a1, a2, v11, (uint64_t)&v21.n128_i64[1] + 4);
  sub_1CBD88E08((uint64_t)a1, a2, v12, (uint64_t)&v23 + 8);
  if (DWORD1(v22) == 1) {
    *(void *)((char *)&v22 + 4) = 0x100000001;
  }
  if (v24 == 1) {
    *(void *)&long long v24 = 0x100000001;
  }
  if (*a1 >= 4u)
  {
    if ((DWORD2(v20) - 2) <= 3) {
      DWORD2(v25) = dword_1CDF53620[DWORD2(v20) - 2];
    }
    HIDWORD(v25) = 147;
  }
  long long v16 = v26[1];
  *(_OWORD *)(a4 + 96) = v26[0];
  *(_OWORD *)(a4 + 112) = v16;
  *(_OWORD *)(a4 + 124) = *(_OWORD *)((char *)&v26[1] + 12);
  long long v17 = v23;
  *(_OWORD *)(a4 + 32) = v22;
  *(_OWORD *)(a4 + 48) = v17;
  long long v18 = v25;
  *(_OWORD *)(a4 + 64) = v24;
  *(_OWORD *)(a4 + 80) = v18;
  __n128 result = v21;
  *(_OWORD *)a4 = v20;
  *(__n128 *)(a4 + 16) = result;
  return result;
}

double sub_1CBD95448(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  if (*a1 > 3u)
  {
    if (sub_1CBD93254(a1, (unsigned int *)a2))
    {
      return sub_1CBD956F0(a1, a2, a3, a4);
    }
    else
    {
      sub_1CBD93504(a1, (unsigned int *)a2);
      return sub_1CD439BDC(a1, a2, a3, a4);
    }
  }
  else
  {
    return sub_1CBD95524(a1, (unsigned int *)a2, a3, a4);
  }
}

double sub_1CBD95524(_DWORD *a1, unsigned int *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 161;
  int v7 = *(unsigned __int16 *)a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 7u);
  unsigned int v19 = sub_1CBDA6464(v7, 0x14u);
  unsigned int v11 = sub_1CBDA6464(v7, 0x37u);
  *(_DWORD *)long long v29 = 0;
  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v20 = 0u;
  sub_1CBD927FC((uint64_t)a1, a2, v8, (uint64_t)&v20);
  sub_1CBD929F0(a1, (uint64_t)a2, v9, (uint64_t)&v20, v29, (int8x8_t *)&v26 + 1, (uint64_t)&v27);
  int v12 = *(_DWORD *)(*((void *)a2 + 2) + 16 * v10 + 8);
  if (v12 == 2)
  {
    char v13 = 6;
  }
  else if (v12 == 1)
  {
    char v13 = 7;
  }
  else
  {
    char v13 = (v12 + 9) & 0xF;
  }
  BYTE1(v26) = v13;
  sub_1CBD8F254((uint64_t)a1, (unsigned __int16 *)a2, v19, (uint64_t)&v22 + 8);
  sub_1CBD8F254((uint64_t)a1, (unsigned __int16 *)a2, v11, (uint64_t)&v24 + 4);
  if (v20 <= 1)
  {
    if (v23 == 1) {
      DWORD1(v23) = v21;
    }
    if (HIDWORD(v24) == 1) {
      LODWORD(v25) = v21;
    }
  }
  long long v14 = v27;
  *(_OWORD *)(a4 + 96) = v26;
  *(_OWORD *)(a4 + 112) = v14;
  *(_OWORD *)(a4 + 128) = v28;
  *(_DWORD *)(a4 + 144) = *(_DWORD *)v29;
  long long v15 = v23;
  *(_OWORD *)(a4 + 32) = v22;
  *(_OWORD *)(a4 + 48) = v15;
  long long v16 = v25;
  *(_OWORD *)(a4 + 64) = v24;
  *(_OWORD *)(a4 + 80) = v16;
  double result = *(double *)&v20;
  long long v18 = v21;
  *(_OWORD *)a4 = v20;
  *(_OWORD *)(a4 + 16) = v18;
  return result;
}

double sub_1CBD956F0(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 166;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 7u);
  unsigned int v11 = sub_1CBDA6464(v7, 0x14u);
  unsigned int v12 = sub_1CBDA6464(v7, 0x37u);
  *(_DWORD *)long long v29 = 0;
  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v22 = 0u;
  uint64_t v13 = *((void *)a2 + 2);
  int v14 = *(_DWORD *)(v13 + 16 * v8 + 8);
  if (v14 == 2)
  {
    char v15 = 6;
  }
  else if (v14 == 1)
  {
    char v15 = 7;
  }
  else
  {
    char v15 = (v14 + 9) & 0xF;
  }
  BYTE1(v22) = v15;
  LOBYTE(v22) = 1;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, v29, (int8x8_t *)&v26 + 1, (uint64_t)&v27);
  int v16 = *(_DWORD *)(v13 + 16 * v10 + 8);
  if (v16 == 2)
  {
    char v17 = 6;
  }
  else if (v16 == 1)
  {
    char v17 = 7;
  }
  else
  {
    char v17 = (v16 + 9) & 0xF;
  }
  BYTE13(v25) = v17;
  sub_1CBD88E08((uint64_t)a1, a2, v11, (uint64_t)&v22 + 4);
  sub_1CBD88E08((uint64_t)a1, a2, v12, (uint64_t)&v24);
  if (HIDWORD(v22) == 1) {
    LODWORD(v23) = 1;
  }
  if (DWORD2(v24) == 1) {
    *((void *)&v24 + 1) = 0x100000001;
  }
  if (*a1 >= 4u) {
    *(void *)&long long v26 = 0x9500000003;
  }
  long long v18 = v27;
  *(_OWORD *)(a4 + 64) = v26;
  *(_OWORD *)(a4 + 80) = v18;
  *(_OWORD *)(a4 + 96) = v28;
  *(_DWORD *)(a4 + 112) = *(_DWORD *)v29;
  long long v19 = v23;
  *(_OWORD *)a4 = v22;
  *(_OWORD *)(a4 + 16) = v19;
  double result = *(double *)&v24;
  long long v21 = v25;
  *(_OWORD *)(a4 + 32) = v24;
  *(_OWORD *)(a4 + 48) = v21;
  return result;
}

__n128 sub_1CBD958D0(unsigned int *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 67;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x2Fu);
  unsigned int v11 = sub_1CBDA6464(v7, 0x11u);
  long long v26 = 0u;
  long long v27 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  __n128 v20 = 0u;
  long long v21 = 0u;
  long long v19 = 0u;
  sub_1CBD85EB8((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v19);
  uint64_t v12 = *((void *)a2 + 2);
  v20.n128_u8[0] = (*(unsigned char *)(v12 + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, (BOOL *)&v27 + 12, (int8x8_t *)((char *)&v24 + 12), (uint64_t)&v25 + 12);
  DWORD1(v25) = dword_1CDF5363C[*(int *)(v12 + 16 * v10 + 8) - 4];
  sub_1CBD8C148((uint64_t)a1, (uint64_t)a2, v11, (uint64_t)&v20.n128_i64[1] + 4);
  unsigned int v13 = *a1;
  BOOL v14 = *a1 - 1 < 5;
  *((void *)&v22 + 1) = 0;
  LODWORD(v23) = 0;
  *((void *)&v23 + 1) = 0;
  LODWORD(v24) = 0;
  DWORD1(v23) = v14;
  BYTE8(v25) = 0;
  if (v13 >= 4)
  {
    if ((DWORD2(v19) - 2) <= 3) {
      DWORD1(v24) = dword_1CDF53620[DWORD2(v19) - 2];
    }
    DWORD2(v24) = 72;
  }
  long long v15 = v26;
  *(_OWORD *)(a4 + 96) = v25;
  *(_OWORD *)(a4 + 112) = v15;
  *(_OWORD *)(a4 + 128) = v27;
  long long v16 = v22;
  *(_OWORD *)(a4 + 32) = v21;
  *(_OWORD *)(a4 + 48) = v16;
  long long v17 = v24;
  *(_OWORD *)(a4 + 64) = v23;
  *(_OWORD *)(a4 + 80) = v17;
  __n128 result = v20;
  *(_OWORD *)a4 = v19;
  *(__n128 *)(a4 + 16) = result;
  return result;
}

__n128 sub_1CBD95A70(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 67;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x2Fu);
  unsigned int v11 = sub_1CBDA6464(v7, 0x11u);
  unsigned int v12 = sub_1CBDA6464(v7, 4u);
  long long v25 = 0u;
  long long v26 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  __n128 v19 = 0u;
  long long v20 = 0u;
  long long v18 = 0u;
  sub_1CBD85EB8((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v18);
  uint64_t v13 = *((void *)a2 + 2);
  v19.n128_u8[0] = (*(unsigned char *)(v13 + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, (BOOL *)&v26 + 12, (int8x8_t *)((char *)&v23 + 12), (uint64_t)&v24 + 12);
  DWORD1(v24) = dword_1CDF5363C[*(int *)(v13 + 16 * v10 + 8) - 4];
  sub_1CBD8C148((uint64_t)a1, (uint64_t)a2, v11, (uint64_t)&v19.n128_i64[1] + 4);
  sub_1CBD8C148((uint64_t)a1, (uint64_t)a2, v12, (uint64_t)&v21 + 8);
  BYTE8(v24) = 1;
  HIDWORD(v18) = dword_1CDF53350[SHIDWORD(v18) - 1];
  if (*a1 >= 4u)
  {
    if ((DWORD2(v18) - 2) <= 3) {
      DWORD1(v23) = dword_1CDF53620[DWORD2(v18) - 2];
    }
    DWORD2(v23) = 72;
  }
  long long v14 = v25;
  *(_OWORD *)(a4 + 96) = v24;
  *(_OWORD *)(a4 + 112) = v14;
  *(_OWORD *)(a4 + 128) = v26;
  long long v15 = v21;
  *(_OWORD *)(a4 + 32) = v20;
  *(_OWORD *)(a4 + 48) = v15;
  long long v16 = v23;
  *(_OWORD *)(a4 + 64) = v22;
  *(_OWORD *)(a4 + 80) = v16;
  __n128 result = v19;
  *(_OWORD *)a4 = v18;
  *(__n128 *)(a4 + 16) = result;
  return result;
}

double sub_1CBD95C3C(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, _OWORD *a4)
{
  *a3 = 116;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x2Fu);
  unsigned int v11 = sub_1CBDA6464(v7, 0x11u);
  long long v26 = 0u;
  long long v27 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  sub_1CBD8F178((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v20);
  uint64_t v12 = *((void *)a2 + 2);
  LOBYTE(v21) = (*(unsigned char *)(v12 + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, (BOOL *)&v27 + 8, (int8x8_t *)&v24 + 1, (uint64_t)&v25 + 8);
  LODWORD(v25) = dword_1CDF5363C[*(int *)(v12 + 16 * v10 + 8) - 4];
  sub_1CBD88E08((uint64_t)a1, a2, v11, (uint64_t)&v22 + 4);
  int v13 = sub_1CBDB2780(*(unsigned int *)a2, 34, 0);
  int v14 = HIDWORD(v20);
  BYTE4(v25) = v13 == 56;
  if (v13 == 56) {
    int v14 = dword_1CDF53350[HIDWORD(v20) - 1];
  }
  HIDWORD(v20) = v14;
  if (*a1 >= 5u)
  {
    HIDWORD(v27) = 1;
  }
  else if (*a1 != 4)
  {
    goto LABEL_10;
  }
  if ((DWORD2(v20) - 2) <= 3) {
    LODWORD(v24) = dword_1CDF53620[DWORD2(v20) - 2];
  }
  DWORD1(v24) = 115;
LABEL_10:
  long long v15 = v25;
  a4[4] = v24;
  a4[5] = v15;
  long long v16 = v27;
  a4[6] = v26;
  a4[7] = v16;
  long long v17 = v21;
  *a4 = v20;
  a4[1] = v17;
  double result = *(double *)&v22;
  long long v19 = v23;
  a4[2] = v22;
  a4[3] = v19;
  return result;
}

__n128 sub_1CBD95DFC(unsigned int *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 119;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x2Fu);
  unsigned int v11 = sub_1CBDA6464(v7, 0x11u);
  unsigned int v12 = sub_1CBDA6464(v7, 4u);
  unsigned int v13 = sub_1CBDA6464(v7, 0x14u);
  long long v29 = 0u;
  memset(v30, 0, 92);
  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v23 = 0u;
  __n128 v24 = 0u;
  sub_1CBD85EB8((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v23);
  uint64_t v14 = *((void *)a2 + 2);
  v24.n128_u8[0] = (*(unsigned char *)(v14 + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, (BOOL *)&v30[5] + 4, (int8x8_t *)((char *)&v30[2] + 4), (uint64_t)&v30[3] + 4);
  uint64_t v15 = *(void *)(v14 + 16 * v10 + 8);
  HIDWORD(v30[2]) = dword_1CDF53678[(int)v15 - 8];
  LODWORD(v30[3]) = (v15 & 0xFFFFFFFFFFFFFFFELL) == 14;
  sub_1CBD8C148((uint64_t)a1, (uint64_t)a2, v11, (uint64_t)&v24.n128_i64[1] + 4);
  sub_1CBD8C148((uint64_t)a1, (uint64_t)a2, v12, (uint64_t)&v26 + 8);
  sub_1CBD8C148((uint64_t)a1, (uint64_t)a2, v13, (uint64_t)&v28 + 4);
  unsigned int v16 = *a1;
  if (HIDWORD(v30[2]))
  {
    *(void *)&v30[0] = 0;
    DWORD2(v30[0]) = 0;
    *(void *)((char *)&v30[1] + 4) = 0;
    *(void *)((char *)v30 + 12) = v16 - 1 < 5;
  }
  if (v16 >= 5)
  {
    DWORD2(v30[5]) = 1;
  }
  else if (v16 != 4)
  {
    goto LABEL_10;
  }
  if ((DWORD2(v23) - 2) <= 3) {
    HIDWORD(v30[1]) = dword_1CDF53620[DWORD2(v23) - 2];
  }
  LODWORD(v30[2]) = 116;
LABEL_10:
  long long v17 = v30[4];
  *(_OWORD *)(a4 + 160) = v30[3];
  *(_OWORD *)(a4 + 176) = v17;
  *(_OWORD *)(a4 + 188) = *(_OWORD *)((char *)&v30[4] + 12);
  long long v18 = v30[0];
  *(_OWORD *)(a4 + 96) = v29;
  *(_OWORD *)(a4 + 112) = v18;
  long long v19 = v30[2];
  *(_OWORD *)(a4 + 128) = v30[1];
  *(_OWORD *)(a4 + 144) = v19;
  long long v20 = v26;
  *(_OWORD *)(a4 + 32) = v25;
  *(_OWORD *)(a4 + 48) = v20;
  long long v21 = v28;
  *(_OWORD *)(a4 + 64) = v27;
  *(_OWORD *)(a4 + 80) = v21;
  __n128 result = v24;
  *(_OWORD *)a4 = v23;
  *(__n128 *)(a4 + 16) = result;
  return result;
}

__n128 sub_1CBD96028(unsigned int *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 119;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x2Fu);
  unsigned int v11 = sub_1CBDA6464(v7, 0x11u);
  unsigned int v12 = sub_1CBDA6464(v7, 4u);
  unsigned int v23 = sub_1CBDA6464(v7, 0x14u);
  unsigned int v22 = sub_1CBDA6464(v7, 0x37u);
  long long v30 = 0u;
  memset(v31, 0, 92);
  long long v28 = 0u;
  long long v29 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  long long v24 = 0u;
  __n128 v25 = 0u;
  sub_1CBD85EB8((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v24);
  uint64_t v13 = *((void *)a2 + 2);
  v25.n128_u8[0] = (*(unsigned char *)(v13 + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, (BOOL *)&v31[5] + 4, (int8x8_t *)((char *)&v31[2] + 4), (uint64_t)&v31[3] + 4);
  uint64_t v14 = *(void *)(v13 + 16 * v10 + 8);
  HIDWORD(v31[2]) = dword_1CDF53678[(int)v14 - 8];
  LODWORD(v31[3]) = (v14 & 0xFFFFFFFFFFFFFFFELL) == 14;
  sub_1CBD8C148((uint64_t)a1, (uint64_t)a2, v11, (uint64_t)&v25.n128_i64[1] + 4);
  sub_1CBD8C148((uint64_t)a1, (uint64_t)a2, v12, (uint64_t)&v27 + 8);
  sub_1CBD8C148((uint64_t)a1, (uint64_t)a2, v23, (uint64_t)&v29 + 4);
  sub_1CBD8C148((uint64_t)a1, (uint64_t)a2, v22, (uint64_t)v31);
  unsigned int v15 = *a1;
  if (HIDWORD(v31[2]))
  {
    DWORD2(v31[0]) = 0;
    *(void *)((char *)&v31[1] + 4) = 0;
    *(void *)&v31[0] = 0;
    *(void *)((char *)v31 + 12) = v15 - 1 < 5;
  }
  if (v15 >= 5)
  {
    DWORD2(v31[5]) = 1;
  }
  else if (v15 != 4)
  {
    goto LABEL_10;
  }
  if ((DWORD2(v24) - 2) <= 3) {
    HIDWORD(v31[1]) = dword_1CDF53620[DWORD2(v24) - 2];
  }
  LODWORD(v31[2]) = 116;
LABEL_10:
  long long v16 = v31[4];
  *(_OWORD *)(a4 + 160) = v31[3];
  *(_OWORD *)(a4 + 176) = v16;
  *(_OWORD *)(a4 + 188) = *(_OWORD *)((char *)&v31[4] + 12);
  long long v17 = v31[0];
  *(_OWORD *)(a4 + 96) = v30;
  *(_OWORD *)(a4 + 112) = v17;
  long long v18 = v31[2];
  *(_OWORD *)(a4 + 128) = v31[1];
  *(_OWORD *)(a4 + 144) = v18;
  long long v19 = v27;
  *(_OWORD *)(a4 + 32) = v26;
  *(_OWORD *)(a4 + 48) = v19;
  long long v20 = v29;
  *(_OWORD *)(a4 + 64) = v28;
  *(_OWORD *)(a4 + 80) = v20;
  __n128 result = v25;
  *(_OWORD *)a4 = v24;
  *(__n128 *)(a4 + 16) = result;
  return result;
}

double sub_1CBD96280(_DWORD *a1, unsigned int *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 194;
  int v7 = *(unsigned __int16 *)a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x2Fu);
  unsigned int v11 = sub_1CBDA6464(v7, 0x11u);
  uint64_t v25 = 0;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v18 = 0u;
  sub_1CBD96410((uint64_t)a1, a2, v8, (uint64_t)&v18);
  uint64_t v12 = *((void *)a2 + 2);
  LOBYTE(v19) = (*(unsigned char *)(v12 + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, (BOOL *)&v25 + 4, (int8x8_t *)&v22 + 1, (uint64_t)&v23 + 4);
  uint64_t v13 = *(void *)(v12 + 16 * v10 + 8);
  LODWORD(v23) = dword_1CDF53678[(int)v13 - 8];
  LODWORD(v20) = (v13 & 0xFFFFFFFFFFFFFFFELL) == 14;
  sub_1CBD88E08((uint64_t)a1, (unsigned __int16 *)a2, v11, (uint64_t)&v20 + 4);
  if (*a1 >= 4u)
  {
    if ((DWORD2(v18) - 2) <= 3) {
      LODWORD(v22) = dword_1CDF53620[DWORD2(v18) - 2];
    }
    DWORD1(v22) = 191;
  }
  long long v14 = v23;
  *(_OWORD *)(a4 + 64) = v22;
  *(_OWORD *)(a4 + 80) = v14;
  *(_OWORD *)(a4 + 96) = v24;
  *(void *)(a4 + 112) = v25;
  long long v15 = v19;
  *(_OWORD *)a4 = v18;
  *(_OWORD *)(a4 + 16) = v15;
  double result = *(double *)&v20;
  long long v17 = v21;
  *(_OWORD *)(a4 + 32) = v20;
  *(_OWORD *)(a4 + 48) = v17;
  return result;
}

uint64_t sub_1CBD96410(uint64_t a1, unsigned int *a2, unsigned int a3, uint64_t a4)
{
  int v7 = (unsigned __int8 *)(*((void *)a2 + 2) + 16 * a3);
  *(_DWORD *)(a4 + 24) = 0;
  unsigned int v8 = *(void **)(a1 + 24);
  int v9 = sub_1CBDA014C(v8, v7);
  *(_DWORD *)(a4 + 8) = v9;
  if (sub_1CBDB2780(*a2, 33, 0) == 65) {
    int v10 = 1;
  }
  else {
    int v10 = 2;
  }
  *(_DWORD *)(a4 + 12) = v10;
  uint64_t result = sub_1CBD9FA40((uint64_t)v8, v7, v9);
  *(void *)a4 = result;
  *(_DWORD *)(a4 + 20) = (*(_DWORD *)(*((void *)a2 + 2) + 16 * (a3 + 1) + 8) >> 20) & 0xF;
  return result;
}

double sub_1CBD964B8(unsigned int *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 53;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x1Eu);
  uint64_t v27 = 0;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v22 = 0u;
  long long v20 = 0u;
  memset(v21, 0, sizeof(v21));
  long long v19 = 0u;
  sub_1CBD8C5F0((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v19);
  uint64_t v11 = *((void *)a2 + 2);
  LOBYTE(v20) = (*(unsigned char *)(v11 + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, (BOOL *)&v27, (int8x8_t *)((char *)&v24 + 4), (uint64_t)&v25);
  if (*(unsigned char *)(v11 + 16 * v10) == 1)
  {
    sub_1CBD8BD54((uint64_t)a1, a2, v10, (uint64_t)v21 + 4);
  }
  else
  {
    BYTE4(v21[0]) = *(unsigned char *)(v11 + 16 * v10 + 8) & 0x7F;
    *(void *)((char *)v21 + 12) = 0x200000006;
    BYTE4(v21[1]) = 0;
  }
  uint64_t v12 = *(unsigned int *)a2;
  HIDWORD(v24) = sub_1CBDB2780(v12, 16, 0) == 22;
  unsigned int v13 = *a1;
  if (v13 >= 5) {
    HIDWORD(v27) = 1;
  }
  sub_1CBDB2780(v12, 19, 0);
  *((void *)&v22 + 1) = 0x200000007;
  LODWORD(v22) = 66;
  if (v13 >= 4)
  {
    if ((DWORD2(v19) - 2) <= 3) {
      HIDWORD(v23) = dword_1CDF53620[DWORD2(v19) - 2];
    }
    LODWORD(v24) = 58;
  }
  long long v14 = v25;
  *(_OWORD *)(a4 + 96) = v24;
  *(_OWORD *)(a4 + 112) = v14;
  *(_OWORD *)(a4 + 128) = v26;
  *(void *)(a4 + 144) = v27;
  long long v15 = v21[1];
  *(_OWORD *)(a4 + 32) = v21[0];
  *(_OWORD *)(a4 + 48) = v15;
  long long v16 = v23;
  *(_OWORD *)(a4 + 64) = v22;
  *(_OWORD *)(a4 + 80) = v16;
  double result = *(double *)&v19;
  long long v18 = v20;
  *(_OWORD *)a4 = v19;
  *(_OWORD *)(a4 + 16) = v18;
  return result;
}

double sub_1CBD966B0(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 53;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x1Eu);
  unsigned int v11 = sub_1CBDA6464(v7, 0x1Fu);
  uint64_t v26 = 0;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v21 = 0u;
  long long v19 = 0u;
  memset(v20, 0, sizeof(v20));
  long long v18 = 0u;
  sub_1CBD8C5F0((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v18);
  uint64_t v12 = *((void *)a2 + 2);
  LOBYTE(v19) = (*(unsigned char *)(v12 + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, (BOOL *)&v26, (int8x8_t *)((char *)&v23 + 4), (uint64_t)&v24);
  if (*(unsigned char *)(v12 + 16 * v10) == 1)
  {
    sub_1CBD8BD54((uint64_t)a1, a2, v10, (uint64_t)v20 + 4);
    uint64_t v12 = *((void *)a2 + 2);
  }
  else
  {
    BYTE4(v20[0]) = *(unsigned char *)(v12 + 16 * v10 + 8) & 0x7F;
    *(void *)((char *)v20 + 12) = 0x200000006;
    BYTE4(v20[1]) = 0;
  }
  if (*(unsigned char *)(v12 + 16 * v11) == 2)
  {
    *((void *)&v21 + 1) = 0x200000007;
    LODWORD(v21) = 67;
    BYTE4(v21) = *(unsigned char *)(v12 + 16 * v11 + 8) & 0xF;
  }
  else
  {
    sub_1CBD88E08((uint64_t)a1, a2, v11, (uint64_t)&v21);
  }
  HIDWORD(v23) = sub_1CBDB2780(*(unsigned int *)a2, 16, 0) == 22;
  if (*a1 >= 5u)
  {
    HIDWORD(v26) = 1;
  }
  else if (*a1 != 4)
  {
    goto LABEL_12;
  }
  if ((DWORD2(v18) - 2) <= 3) {
    HIDWORD(v22) = dword_1CDF53620[DWORD2(v18) - 2];
  }
  LODWORD(v23) = 58;
LABEL_12:
  long long v13 = v24;
  *(_OWORD *)(a4 + 96) = v23;
  *(_OWORD *)(a4 + 112) = v13;
  *(_OWORD *)(a4 + 128) = v25;
  *(void *)(a4 + 144) = v26;
  long long v14 = v20[1];
  *(_OWORD *)(a4 + 32) = v20[0];
  *(_OWORD *)(a4 + 48) = v14;
  long long v15 = v22;
  *(_OWORD *)(a4 + 64) = v21;
  *(_OWORD *)(a4 + 80) = v15;
  double result = *(double *)&v18;
  long long v17 = v19;
  *(_OWORD *)a4 = v18;
  *(_OWORD *)(a4 + 16) = v17;
  return result;
}

__n128 sub_1CBD968EC(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 103;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 7u);
  long long v20 = 0u;
  long long v21 = 0u;
  __n128 v18 = 0u;
  long long v19 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v15 = 0u;
  sub_1CBD85EB8((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v15);
  LOBYTE(v16) = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, (BOOL *)&v21 + 12, (int8x8_t *)&v19, (uint64_t)&v19 + 12);
  sub_1CBD88E08((uint64_t)a1, a2, v10, (uint64_t)&v16 + 12);
  if (sub_1CBDB2780(*(unsigned int *)a2, 19, 0) == 51) {
    int v11 = 2;
  }
  else {
    int v11 = 1;
  }
  DWORD2(v19) = v11;
  if (*a1 >= 4u)
  {
    if ((DWORD2(v15) - 2) <= 3) {
      v18.n128_u32[2] = dword_1CDF53620[DWORD2(v15) - 2];
    }
    v18.n128_u32[3] = 102;
  }
  long long v12 = v20;
  *(_OWORD *)(a4 + 64) = v19;
  *(_OWORD *)(a4 + 80) = v12;
  *(_OWORD *)(a4 + 96) = v21;
  long long v13 = v16;
  *(_OWORD *)a4 = v15;
  *(_OWORD *)(a4 + 16) = v13;
  __n128 result = v18;
  *(_OWORD *)(a4 + 32) = v17;
  *(__n128 *)(a4 + 48) = result;
  return result;
}

__n128 sub_1CBD96A58(uint64_t a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 104;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 0x1Eu);
  unsigned int v9 = sub_1CBDA6464(v7, 0x57u);
  unsigned int v10 = sub_1CBDA6464(v7, 0x2Eu);
  long long v21 = 0u;
  long long v22 = 0u;
  __n128 v19 = 0u;
  long long v20 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  sub_1CBD88E08(a1, a2, v8, (uint64_t)&v17 + 12);
  int v11 = (unsigned __int8 *)(*((void *)a2 + 2) + 16 * v9);
  DWORD2(v16) = 2;
  HIDWORD(v16) = sub_1CBD9F8B0((unsigned int *)a2, v9, *(void **)(a1 + 16));
  *(void *)&long long v16 = sub_1CBD9FA40(*(void *)(a1 + 24), v11, 2);
  uint64_t v12 = *((void *)a2 + 2);
  *(void *)((char *)&v17 + 4) = (*(_DWORD *)(v12 + 16 * (v9 + 1) + 8) >> 20) & 0xFLL;
  LOBYTE(v17) = (*(unsigned char *)(v12 + 16 * v10 + 8) & 0x20) != 0;
  sub_1CBD85A80((_DWORD *)a1, (uint64_t)a2, v10, (BOOL *)&v22 + 12, (int8x8_t *)&v20, (uint64_t)&v20 + 12);
  BYTE8(v20) = 7;
  if (*(_DWORD *)a1 >= 4u) {
    v19.n128_u64[1] = 0x6700000000;
  }
  long long v13 = v21;
  *(_OWORD *)(a4 + 64) = v20;
  *(_OWORD *)(a4 + 80) = v13;
  *(_OWORD *)(a4 + 96) = v22;
  long long v14 = v17;
  *(_OWORD *)a4 = v16;
  *(_OWORD *)(a4 + 16) = v14;
  __n128 result = v19;
  *(_OWORD *)(a4 + 32) = v18;
  *(__n128 *)(a4 + 48) = result;
  return result;
}

void *sub_1CBD96BC8(uint64_t a1, unsigned __int16 *a2, _DWORD *a3, void *a4)
{
  *a3 = 181;
  int v6 = *a2;
  unsigned int v7 = sub_1CBDA6464(v6, 0x57u);
  unsigned int v8 = sub_1CBDA6464(v6, 0x2Eu);
  unsigned int v9 = sub_1CBDA6464(v6, 0x2Fu);
  unsigned int v10 = sub_1CBDA6464(v6, 0x19u);
  unsigned int v11 = sub_1CBDA6464(v6, 0x1Au);
  unsigned int v12 = sub_1CBDA6464(v6, 0x59u);
  unsigned int v23 = sub_1CBDA6464(v6, 0x5Au);
  unsigned int v24 = sub_1CBDA6464(v6, 0x74u);
  unsigned int v25 = sub_1CBDA6464(v6, 0x75u);
  unsigned int v13 = sub_1CBDA6464(v6, 0x3Du);
  memset(&__src[1], 0, 340);
  long long v14 = (unsigned __int8 *)(*((void *)a2 + 2) + 16 * v7);
  DWORD2(__src[0]) = 2;
  HIDWORD(__src[0]) = sub_1CBD9F8B0((unsigned int *)a2, v7, *(void **)(a1 + 16));
  *(void *)&__src[0] = sub_1CBD9FA40(*(void *)(a1 + 24), v14, 2);
  unsigned int v15 = v7 + 1;
  uint64_t v16 = *((void *)a2 + 2);
  *(void *)((char *)&__src[1] + 4) = (*(_DWORD *)(v16 + 16 * v15 + 8) >> 20) & 0xFLL;
  LOBYTE(__src[1]) = (*(unsigned char *)(v16 + 16 * v8 + 8) & 0x20) != 0;
  sub_1CBD85A80((_DWORD *)a1, (uint64_t)a2, v8, (BOOL *)&__src[21] + 4, (int8x8_t *)((char *)&__src[7] + 12), (uint64_t)&__src[19]);
  sub_1CBD96EE8((_DWORD *)a1, v16, v9, (_DWORD *)&__src[17] + 2, (unsigned char *)&__src[8] + 8, (uint64_t *)((char *)&__src[8] + 12), (unsigned int *)&__src[18] + 1, (unsigned int *)&__src[18] + 2, (_DWORD *)&__src[18] + 3, (uint64_t *)&__src[17], (unsigned int *)&__src[18], (unsigned int *)&__src[16] + 3, (unsigned int *)&__src[8] + 1, (unsigned int *)&__src[9] + 2, &__src[21], (_DWORD *)&__src[21] + 2);
  sub_1CBD88E08(a1, a2, v10, (uint64_t)&__src[3] + 8);
  sub_1CBD88E08(a1, a2, v11, (uint64_t)&__src[5] + 4);
  sub_1CBD88E08(a1, a2, v12, (uint64_t)&__src[9] + 12);
  sub_1CBD88900(a1, a2, v23, (uint64_t)&__src[11] + 8);
  sub_1CBD88E08(a1, a2, v24, (uint64_t)&__src[13] + 4);
  sub_1CBD88900(a1, a2, v25, (uint64_t)&__src[15]);
  DWORD1(__src[2]) = 5;
  if (*(_DWORD *)a1 >= 4u) {
    DWORD2(__src[2]) = 2;
  }
  uint64_t v17 = *((void *)a2 + 2);
  uint64_t v18 = *(void *)(v17 + 16 * v13 + 8);
  if (v18) {
    uint64_t v19 = v18 - 8;
  }
  else {
    uint64_t v19 = 0;
  }
  WORD6(__src[1]) = *(_WORD *)(*(void *)(v19 + 32) + 16) & 0x1FFF;
  if (v13) {
    int v20 = 1;
  }
  else {
    int v20 = 2;
  }
  unsigned int v21 = *(_DWORD *)(v17 + 16 * (v20 + v13) + 8);
  BYTE4(__src[3]) = (v21 & 0x10) != 0;
  LODWORD(__src[3]) = (v21 >> 20) & 0xF;
  sub_1CBD96F9C(a1, (int *)a2, (uint64_t)__src);
  if (*(_DWORD *)a1 >= 4u) {
    *(void *)((char *)&__src[7] + 4) = 0xA400000002;
  }
  return memcpy(a4, __src, 0x164uLL);
}

_DWORD *sub_1CBD96EE8(_DWORD *result, uint64_t a2, unsigned int a3, _DWORD *a4, unsigned char *a5, uint64_t *a6, unsigned int *a7, unsigned int *a8, _DWORD *a9, uint64_t *a10, unsigned int *a11, unsigned int *a12, unsigned int *a13, unsigned int *a14, _DWORD *a15, _DWORD *a16)
{
  unint64_t v16 = *(void *)(a2 + 16 * a3 + 8);
  *a4 = v16 & 3;
  *a6 = (4 * v16) & 0x300000000 | (v16 >> 2) & 7;
  *a7 = (v16 >> 5) & 1;
  *a10 = v16 & 0x300000000 | (v16 >> 7) & 7;
  *a11 = (v16 >> 10) & 1;
  *a12 = (v16 >> 11) & 1;
  *a5 = (v16 >> 13) & 0xF;
  *a8 = (v16 >> 19) & 3;
  *a13 = (v16 >> 21) & 3;
  *a14 = (v16 >> 28) & 3;
  uint64_t v17 = (v16 >> 47) & 7;
  *a15 = v17;
  *a16 = (v16 >> 50) & 3;
  if (*result <= 3u)
  {
    if (v17 <= 2) {
      *a9 = dword_1CDF53698[v17];
    }
    *a15 = 0;
  }
  return result;
}

uint64_t sub_1CBD96F9C(uint64_t a1, int *a2, uint64_t a3)
{
  int v6 = *a2;
  *(_DWORD *)(a3 + 284) = sub_1CBDB2780(*a2, 45, 0) == 75;
  uint64_t v7 = sub_1CBE52E8C(v6);
  if ((v7 & 0xFF00000000) == 0)
  {
    unsigned int v10 = "Unknown Opcode";
LABEL_14:
    llvm::report_fatal_error((llvm *)v10, (const llvm::Twine *)1);
  }
  if ((v7 - 164) >= 4)
  {
    unsigned int v10 = "Unhandled sample opcode root name.";
    goto LABEL_14;
  }
  *(_DWORD *)(a3 + 148) = dword_1CDF53610[(int)v7 - 164];
  uint64_t result = sub_1CBE53724(*(void *)(a3 + 140), *(void *)(a3 + 272), *(_DWORD *)(a3 + 280), *(_DWORD *)(a3 + 288), *(_DWORD *)a1);
  if (!(result & 0xFF0000FF0000FFLL | *(void *)&v9 & 0xFF0000))
  {
    *(void *)(a3 + 56) = 0;
    *(void *)(a3 + 64) = 0;
    *(_DWORD *)(a3 + 80) = 0;
    *(void *)(a3 + 72) = 0;
    *(_DWORD *)(a3 + 68) = 1;
  }
  if ((result & 0xFF0000FF0000FF00) == 0)
  {
    *(void *)(a3 + 92) = 0;
    *(void *)(a3 + 84) = 0;
    *(_DWORD *)(a3 + 108) = 0;
    *(void *)(a3 + 100) = 0;
    *(_DWORD *)(a3 + 96) = 1;
  }
  if (*(_DWORD *)a1 >= 5u)
  {
    *(_WORD *)(a3 + 352) = 3;
    *(_DWORD *)(a3 + 348) = 1;
    if ((*(unsigned char *)(*(void *)(a1 + 8) + 196) & 2) != 0)
    {
      uint64_t result = sub_1CBE52E8C(*a2);
      if ((result & 0xFF00000000) == 0 || result != 47) {
        *(_DWORD *)(a3 + 348) = 0;
      }
    }
  }
  return result;
}

void *sub_1CBD970F0(uint64_t a1, unsigned __int16 *a2, _DWORD *a3, void *a4)
{
  *a3 = 181;
  int v6 = *a2;
  unsigned int v7 = sub_1CBDA6464(v6, 0x57u);
  unsigned int v8 = sub_1CBDA6464(v6, 0x2Eu);
  unsigned int v9 = sub_1CBDA6464(v6, 0x2Fu);
  unsigned int v10 = sub_1CBDA6464(v6, 0x19u);
  unsigned int v11 = sub_1CBDA6464(v6, 0x1Au);
  unsigned int v12 = sub_1CBDA6464(v6, 0x59u);
  unsigned int v23 = sub_1CBDA6464(v6, 0x5Au);
  unsigned int v24 = sub_1CBDA6464(v6, 0x74u);
  unsigned int v25 = sub_1CBDA6464(v6, 0x75u);
  unsigned int v13 = sub_1CBDA6464(v6, 0x3Du);
  memset(&__src[1], 0, 340);
  long long v14 = (unsigned __int8 *)(*((void *)a2 + 2) + 16 * v7);
  DWORD2(__src[0]) = 2;
  HIDWORD(__src[0]) = sub_1CBD9F8B0((unsigned int *)a2, v7, *(void **)(a1 + 16));
  *(void *)&__src[0] = sub_1CBD9FA40(*(void *)(a1 + 24), v14, 2);
  unsigned int v15 = v7 + 1;
  uint64_t v16 = *((void *)a2 + 2);
  *(void *)((char *)&__src[1] + 4) = (*(_DWORD *)(v16 + 16 * v15 + 8) >> 20) & 0xFLL;
  LOBYTE(__src[1]) = (*(unsigned char *)(v16 + 16 * v8 + 8) & 0x20) != 0;
  sub_1CBD85A80((_DWORD *)a1, (uint64_t)a2, v8, (BOOL *)&__src[21] + 4, (int8x8_t *)((char *)&__src[7] + 12), (uint64_t)&__src[19]);
  sub_1CBD96EE8((_DWORD *)a1, v16, v9, (_DWORD *)&__src[17] + 2, (unsigned char *)&__src[8] + 8, (uint64_t *)((char *)&__src[8] + 12), (unsigned int *)&__src[18] + 1, (unsigned int *)&__src[18] + 2, (_DWORD *)&__src[18] + 3, (uint64_t *)&__src[17], (unsigned int *)&__src[18], (unsigned int *)&__src[16] + 3, (unsigned int *)&__src[8] + 1, (unsigned int *)&__src[9] + 2, &__src[21], (_DWORD *)&__src[21] + 2);
  sub_1CBD88E08(a1, a2, v10, (uint64_t)&__src[3] + 8);
  sub_1CBD88E08(a1, a2, v11, (uint64_t)&__src[5] + 4);
  sub_1CBD88E08(a1, a2, v12, (uint64_t)&__src[9] + 12);
  sub_1CBD88900(a1, a2, v23, (uint64_t)&__src[11] + 8);
  sub_1CBD88E08(a1, a2, v24, (uint64_t)&__src[13] + 4);
  sub_1CBD88900(a1, a2, v25, (uint64_t)&__src[15]);
  DWORD1(__src[2]) = 5;
  if (*(_DWORD *)a1 >= 4u) {
    DWORD2(__src[2]) = 2;
  }
  uint64_t v17 = *((void *)a2 + 2);
  uint64_t v18 = *(void *)(v17 + 16 * v13 + 8);
  if (v18) {
    uint64_t v19 = v18 - 8;
  }
  else {
    uint64_t v19 = 0;
  }
  WORD6(__src[1]) = *(_WORD *)(*(void *)(v19 + 32) + 16) & 0x1FFF;
  if (v13) {
    int v20 = 1;
  }
  else {
    int v20 = 2;
  }
  unsigned int v21 = *(_DWORD *)(v17 + 16 * (v20 + v13) + 8);
  BYTE4(__src[3]) = (v21 & 0x10) != 0;
  LODWORD(__src[3]) = (v21 >> 20) & 0xF;
  sub_1CBD96F9C(a1, (int *)a2, (uint64_t)__src);
  if (*(_DWORD *)a1 >= 4u) {
    *(void *)((char *)&__src[7] + 4) = 0xA400000002;
  }
  return memcpy(a4, __src, 0x164uLL);
}

void *sub_1CBD97418(uint64_t a1, unsigned __int16 *a2, _DWORD *a3, void *a4)
{
  *a3 = 181;
  int v6 = *a2;
  unsigned int v7 = sub_1CBDA6464(v6, 0x57u);
  unsigned int v8 = sub_1CBDA6464(v6, 0x2Eu);
  unsigned int v9 = sub_1CBDA6464(v6, 0x2Fu);
  unsigned int v10 = sub_1CBDA6464(v6, 0x19u);
  unsigned int v33 = sub_1CBDA6464(v6, 0x1Au);
  unsigned int v34 = sub_1CBDA6464(v6, 0x59u);
  unsigned int v35 = sub_1CBDA6464(v6, 0x5Au);
  unsigned int v36 = sub_1CBDA6464(v6, 0x74u);
  unsigned int v37 = sub_1CBDA6464(v6, 0x75u);
  unsigned int v11 = sub_1CBDA6464(v6, 0x3Du);
  unsigned int v12 = sub_1CBDA6464(v6, 0x5Eu);
  unsigned int v13 = sub_1CBDA6464(v6, 0x5Fu);
  memset(&__src[1], 0, 340);
  long long v14 = (unsigned __int8 *)(*((void *)a2 + 2) + 16 * v7);
  DWORD2(__src[0]) = 2;
  HIDWORD(__src[0]) = sub_1CBD9F8B0((unsigned int *)a2, v7, *(void **)(a1 + 16));
  *(void *)&__src[0] = sub_1CBD9FA40(*(void *)(a1 + 24), v14, 2);
  uint64_t v15 = *((void *)a2 + 2);
  *(void *)((char *)&__src[1] + 4) = (*(_DWORD *)(v15 + 16 * (v7 + 1) + 8) >> 20) & 0xFLL;
  LOBYTE(__src[1]) = (*(unsigned char *)(v15 + 16 * v8 + 8) & 0x20) != 0;
  sub_1CBD85A80((_DWORD *)a1, (uint64_t)a2, v8, (BOOL *)&__src[21] + 4, (int8x8_t *)((char *)&__src[7] + 12), (uint64_t)&__src[19]);
  sub_1CBD96EE8((_DWORD *)a1, v15, v9, (_DWORD *)&__src[17] + 2, (unsigned char *)&__src[8] + 8, (uint64_t *)((char *)&__src[8] + 12), (unsigned int *)&__src[18] + 1, (unsigned int *)&__src[18] + 2, (_DWORD *)&__src[18] + 3, (uint64_t *)&__src[17], (unsigned int *)&__src[18], (unsigned int *)&__src[16] + 3, (unsigned int *)&__src[8] + 1, (unsigned int *)&__src[9] + 2, &__src[21], (_DWORD *)&__src[21] + 2);
  sub_1CBD88E08(a1, a2, v10, (uint64_t)&__src[3] + 8);
  sub_1CBD88E08(a1, a2, v33, (uint64_t)&__src[5] + 4);
  sub_1CBD88E08(a1, a2, v34, (uint64_t)&__src[9] + 12);
  sub_1CBD88900(a1, a2, v35, (uint64_t)&__src[11] + 8);
  sub_1CBD88E08(a1, a2, v36, (uint64_t)&__src[13] + 4);
  sub_1CBD88900(a1, a2, v37, (uint64_t)&__src[15]);
  DWORD1(__src[2]) = 5;
  if (*(_DWORD *)a1 >= 4u) {
    DWORD2(__src[2]) = 2;
  }
  uint64_t v16 = *((void *)a2 + 2);
  uint64_t v17 = *(void *)(v16 + 16 * v11 + 8);
  if (v17) {
    uint64_t v18 = v17 - 8;
  }
  else {
    uint64_t v18 = 0;
  }
  int v19 = *(_WORD *)(*(void *)(v18 + 32) + 16) & 0x1FFF;
  WORD6(__src[1]) = v19;
  if (v11) {
    int v20 = 1;
  }
  else {
    int v20 = 2;
  }
  unsigned int v21 = *(_DWORD *)(v16 + 16 * (v20 + v11) + 8);
  BYTE4(__src[3]) = (v21 & 0x10) != 0;
  LODWORD(__src[3]) = (v21 >> 20) & 0xF;
  if (*(unsigned char *)(v16 + 16 * v12) == 2)
  {
    LOBYTE(v25) = 0;
    LOBYTE(v26) = 0;
  }
  else
  {
    uint64_t v22 = *(void *)(v16 + 16 * v12 + 8);
    if (v22) {
      uint64_t v23 = v22 - 8;
    }
    else {
      uint64_t v23 = 0;
    }
    int v24 = (*(_WORD *)(*(void *)(v23 + 32) + 16) & 0x1FFF) - v19;
    int v25 = (v24 + ((unsigned __int16)(v24 & 0x8000) >> 15)) << 24 >> 25;
    int v26 = (*(unsigned __int8 *)(v16 + 16 * (v12 + 1) + 8) >> 4) & 1;
  }
  LOBYTE(__src[7]) = v25;
  BYTE1(__src[7]) = v26;
  if (*(unsigned char *)(v16 + 16 * v13) == 2)
  {
    LOBYTE(v30) = 0;
    LOBYTE(v31) = 0;
  }
  else
  {
    uint64_t v27 = *(void *)(v16 + 16 * v13 + 8);
    if (v27) {
      uint64_t v28 = v27 - 8;
    }
    else {
      uint64_t v28 = 0;
    }
    int v29 = (*(_WORD *)(*(void *)(v28 + 32) + 16) & 0x1FFF) - v19;
    int v30 = (v29 + ((unsigned __int16)(v29 & 0x8000) >> 15)) << 24 >> 25;
    int v31 = (*(unsigned __int8 *)(v16 + 16 * (v13 + 1) + 8) >> 4) & 1;
  }
  BYTE2(__src[7]) = v30;
  BYTE3(__src[7]) = v31;
  sub_1CBD96F9C(a1, (int *)a2, (uint64_t)__src);
  if (*(_DWORD *)a1 >= 4u) {
    *(void *)((char *)&__src[7] + 4) = 0xA400000002;
  }
  return memcpy(a4, __src, 0x164uLL);
}

double sub_1CBD97828(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, _OWORD *a4)
{
  *a3 = 189;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v9 = sub_1CBDA6464(v7, 0x82u);
  long long v16 = 0u;
  memset(v17, 0, 60);
  long long v15 = 0u;
  sub_1CBD85A80(a1, (uint64_t)a2, v8, (BOOL *)&v17[3] + 8, (int8x8_t *)((char *)v17 + 12), (uint64_t)&v17[1] + 8);
  sub_1CBD85EB8((uint64_t)a1, (uint64_t)a2, v9, (uint64_t)&v15);
  uint64_t v10 = (int)sub_1CBDB2780(*(unsigned int *)a2, 46, 0) - 79;
  int v11 = dword_1CDF53698[v10];
  BYTE4(v17[1]) = 0x100u >> (8 * v10);
  HIDWORD(v16) = v11;
  if (*a1 >= 4u) {
    *(void *)((char *)v17 + 4) = 0xBA00000003;
  }
  long long v12 = v17[1];
  a4[2] = v17[0];
  a4[3] = v12;
  a4[4] = v17[2];
  *(_OWORD *)((char *)a4 + 76) = *(_OWORD *)((char *)&v17[2] + 12);
  double result = *(double *)&v15;
  long long v14 = v16;
  *a4 = v15;
  a4[1] = v14;
  return result;
}

double sub_1CBD9794C(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, _OWORD *a4)
{
  *a3 = 188;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v9 = sub_1CBDA6464(v7, 0x82u);
  long long v16 = 0u;
  memset(v17, 0, 60);
  long long v15 = 0u;
  sub_1CBD85A80(a1, (uint64_t)a2, v8, (BOOL *)&v17[3] + 8, (int8x8_t *)((char *)v17 + 12), (uint64_t)&v17[1] + 8);
  sub_1CBD88E08((uint64_t)a1, a2, v9, (uint64_t)&v15 + 8);
  uint64_t v10 = *(unsigned int *)a2;
  int v11 = sub_1CBDB2780(v10, 46, 0);
  if (v11 == 81)
  {
    BYTE4(v17[1]) = 0;
    LODWORD(v15) = 1;
  }
  else
  {
    BYTE4(v17[1]) = v11 != 79;
    LODWORD(v15) = 0;
  }
  if (sub_1CBDB2780(v10, 46, 0) - 79 >= 2) {
    DWORD1(v15) = HIDWORD(v16);
  }
  if (*a1 >= 4u) {
    *(void *)((char *)v17 + 4) = 0xB900000003;
  }
  long long v12 = v17[1];
  a4[2] = v17[0];
  a4[3] = v12;
  a4[4] = v17[2];
  *(_OWORD *)((char *)a4 + 76) = *(_OWORD *)((char *)&v17[2] + 12);
  double result = *(double *)&v15;
  long long v14 = v16;
  *a4 = v15;
  a4[1] = v14;
  return result;
}

__n128 sub_1CBD97AA4(uint64_t a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 19;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x18u);
  unsigned int v11 = sub_1CBDA6464(v7, 0x19u);
  unsigned int v12 = sub_1CBDA6464(v7, 0x1Au);
  long long v30 = 0u;
  memset(v31, 0, 60);
  long long v28 = 0u;
  long long v29 = 0u;
  long long v26 = 0u;
  __n128 v27 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  sub_1CBD85EB8(a1, (uint64_t)a2, v8, (uint64_t)&v24);
  LOBYTE(v25) = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80((_DWORD *)a1, (uint64_t)a2, v9, (BOOL *)&v31[3] + 4, (int8x8_t *)v31 + 1, (uint64_t)&v31[1] + 4);
  sub_1CBD8C148(a1, (uint64_t)a2, v10, (uint64_t)&v25 + 12);
  sub_1CBD8C148(a1, (uint64_t)a2, v11, (uint64_t)&v27.n128_i64[1]);
  sub_1CBD8C148(a1, (uint64_t)a2, v12, (uint64_t)&v29 + 4);
  uint64_t v13 = *(unsigned int *)a2;
  int v14 = sub_1CBDB2780(v13, 0, 0);
  switch(v14)
  {
    case 8:
      int v15 = 0;
      break;
    case 11:
      int v15 = 2;
      break;
    case 10:
      int v15 = 1;
      break;
    default:
      llvm::report_fatal_error((llvm *)"Unexpected variant", (const llvm::Twine *)1);
  }
  LODWORD(v31[1]) = v15;
  int v16 = *(_DWORD *)a1;
  if (*(_DWORD *)a1 <= 3u)
  {
    HIDWORD(v24) = 2;
  }
  else
  {
    if (v14 == 8) {
      int v17 = 1;
    }
    else {
      int v17 = 2;
    }
    HIDWORD(v24) = v17;
    if (v16 != 4)
    {
      DWORD2(v31[3]) = 1;
      if ((*(unsigned char *)(*(void *)(a1 + 8) + 196) & 2) != 0)
      {
        uint64_t v18 = sub_1CBE52E8C(v13);
        if ((v18 & 0xFF00000000) == 0 || v18 != 47) {
          DWORD2(v31[3]) = 0;
        }
      }
    }
    if ((DWORD2(v24) - 2) <= 3) {
      LODWORD(v31[0]) = dword_1CDF53620[DWORD2(v24) - 2];
    }
    DWORD1(v31[0]) = 24;
  }
  long long v19 = v31[2];
  *(_OWORD *)(a4 + 128) = v31[1];
  *(_OWORD *)(a4 + 144) = v19;
  *(_OWORD *)(a4 + 156) = *(_OWORD *)((char *)&v31[2] + 12);
  long long v20 = v29;
  *(_OWORD *)(a4 + 64) = v28;
  *(_OWORD *)(a4 + 80) = v20;
  long long v21 = v31[0];
  *(_OWORD *)(a4 + 96) = v30;
  *(_OWORD *)(a4 + 112) = v21;
  long long v22 = v25;
  *(_OWORD *)a4 = v24;
  *(_OWORD *)(a4 + 16) = v22;
  __n128 result = v27;
  *(_OWORD *)(a4 + 32) = v26;
  *(__n128 *)(a4 + 48) = result;
  return result;
}

double sub_1CBD97CFC(unsigned int *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 118;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v9 = sub_1CBDA6464(v7, 3u);
  unsigned int v10 = sub_1CBDA6464(v7, 0x2Fu);
  unsigned int v11 = sub_1CBDA6464(v7, 0x11u);
  unsigned int v12 = sub_1CBDA6464(v7, 4u);
  unsigned int v13 = sub_1CBDA6464(v7, 0x14u);
  *(_DWORD *)int v31 = 0;
  long long v29 = 0u;
  long long v30 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v24 = 0u;
  memset(v23, 0, sizeof(v23));
  LOBYTE(v23[1]) = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v8 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v8, v31, (int8x8_t *)&v27 + 1, (uint64_t)&v28);
  sub_1CBD85EB8((uint64_t)a1, (uint64_t)a2, v9, (uint64_t)v23);
  unsigned int v14 = *(_DWORD *)(*((void *)a2 + 2) + 16 * v10 + 8);
  LODWORD(v30) = v14 & 0xF;
  BYTE4(v30) = (v14 >> 4) & 0x1F;
  DWORD2(v30) = (v14 >> 9) & 0xF;
  BYTE12(v30) = (v14 >> 13) & 0x1F;
  sub_1CBD88E08((uint64_t)a1, a2, v11, (uint64_t)&v23[1] + 12);
  sub_1CBD88E08((uint64_t)a1, a2, v12, (uint64_t)&v23[3] + 8);
  sub_1CBD88E08((uint64_t)a1, a2, v13, (uint64_t)&v25 + 4);
  if (HIDWORD(v25) == 1) {
    LODWORD(v26) = 2;
  }
  unsigned int v15 = *a1;
  BOOL v16 = *a1 - 1 < 5;
  if (!v30)
  {
    DWORD1(v23[3]) = 0;
    DWORD1(v23[2]) = 0;
    *(void *)((char *)&v23[2] + 12) = 0;
    *(void *)((char *)&v23[1] + 12) = 0;
    DWORD2(v23[2]) = v16;
  }
  if (!DWORD2(v30))
  {
    LODWORD(v25) = 0;
    LODWORD(v24) = 0;
    *((void *)&v24 + 1) = 0;
    *((void *)&v23[3] + 1) = 0;
    DWORD1(v24) = v16;
  }
  if (v15 >= 4)
  {
    if ((DWORD2(v23[0]) - 2) <= 3) {
      LODWORD(v27) = dword_1CDF53620[DWORD2(v23[0]) - 2];
    }
    DWORD1(v27) = 119;
  }
  long long v17 = v29;
  *(_OWORD *)(a4 + 128) = v28;
  *(_OWORD *)(a4 + 144) = v17;
  *(_OWORD *)(a4 + 160) = v30;
  *(_DWORD *)(a4 + 176) = *(_DWORD *)v31;
  long long v18 = v25;
  *(_OWORD *)(a4 + 64) = v24;
  *(_OWORD *)(a4 + 80) = v18;
  long long v19 = v27;
  *(_OWORD *)(a4 + 96) = v26;
  *(_OWORD *)(a4 + 112) = v19;
  long long v20 = v23[1];
  *(_OWORD *)a4 = v23[0];
  *(_OWORD *)(a4 + 16) = v20;
  double result = *(double *)&v23[2];
  long long v22 = v23[3];
  *(_OWORD *)(a4 + 32) = v23[2];
  *(_OWORD *)(a4 + 48) = v22;
  return result;
}

double sub_1CBD97F50(unsigned int *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 118;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v9 = sub_1CBDA6464(v7, 3u);
  unsigned int v10 = sub_1CBDA6464(v7, 0x2Fu);
  unsigned int v11 = sub_1CBDA6464(v7, 0x11u);
  unsigned int v12 = sub_1CBDA6464(v7, 4u);
  unsigned int v13 = sub_1CBDA6464(v7, 0x14u);
  *(_DWORD *)int v31 = 0;
  long long v29 = 0u;
  long long v30 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v24 = 0u;
  memset(v23, 0, sizeof(v23));
  sub_1CBD85A80(a1, (uint64_t)a2, v8, v31, (int8x8_t *)&v27 + 1, (uint64_t)&v28);
  sub_1CBD85EB8((uint64_t)a1, (uint64_t)a2, v9, (uint64_t)v23);
  unsigned int v14 = *(_DWORD *)(*((void *)a2 + 2) + 16 * v10 + 8);
  LODWORD(v30) = v14 & 0xF;
  BYTE4(v30) = (v14 >> 4) & 0x1F;
  DWORD2(v30) = (v14 >> 9) & 0xF;
  BYTE12(v30) = (v14 >> 13) & 0x1F;
  sub_1CBD88E08((uint64_t)a1, a2, v11, (uint64_t)&v23[1] + 12);
  sub_1CBD88E08((uint64_t)a1, a2, v12, (uint64_t)&v23[3] + 8);
  sub_1CBD88E08((uint64_t)a1, a2, v13, (uint64_t)&v25 + 4);
  if (HIDWORD(v25) == 1) {
    LODWORD(v26) = 2;
  }
  unsigned int v15 = *a1;
  BOOL v16 = *a1 - 1 < 5;
  if (!v30)
  {
    DWORD1(v23[3]) = 0;
    DWORD1(v23[2]) = 0;
    *(void *)((char *)&v23[2] + 12) = 0;
    *(void *)((char *)&v23[1] + 12) = 0;
    DWORD2(v23[2]) = v16;
  }
  if (!DWORD2(v30))
  {
    LODWORD(v25) = 0;
    LODWORD(v24) = 0;
    *((void *)&v24 + 1) = 0;
    *((void *)&v23[3] + 1) = 0;
    DWORD1(v24) = v16;
  }
  if (v15 >= 4)
  {
    if ((DWORD2(v23[0]) - 2) <= 3) {
      LODWORD(v27) = dword_1CDF53620[DWORD2(v23[0]) - 2];
    }
    DWORD1(v27) = 119;
  }
  long long v17 = v29;
  *(_OWORD *)(a4 + 128) = v28;
  *(_OWORD *)(a4 + 144) = v17;
  *(_OWORD *)(a4 + 160) = v30;
  *(_DWORD *)(a4 + 176) = *(_DWORD *)v31;
  long long v18 = v25;
  *(_OWORD *)(a4 + 64) = v24;
  *(_OWORD *)(a4 + 80) = v18;
  long long v19 = v27;
  *(_OWORD *)(a4 + 96) = v26;
  *(_OWORD *)(a4 + 112) = v19;
  long long v20 = v23[1];
  *(_OWORD *)a4 = v23[0];
  *(_OWORD *)(a4 + 16) = v20;
  double result = *(double *)&v23[2];
  long long v22 = v23[3];
  *(_OWORD *)(a4 + 32) = v23[2];
  *(_OWORD *)(a4 + 48) = v22;
  return result;
}

double sub_1CBD98190(unsigned int *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 117;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v9 = sub_1CBDA6464(v7, 3u);
  unsigned int v10 = sub_1CBDA6464(v7, 0x2Fu);
  unsigned int v11 = sub_1CBDA6464(v7, 0x11u);
  unsigned int v12 = sub_1CBDA6464(v7, 4u);
  unsigned int v13 = sub_1CBDA6464(v7, 0x14u);
  *(_DWORD *)int v31 = 0;
  long long v29 = 0u;
  long long v30 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v24 = 0u;
  memset(v23, 0, sizeof(v23));
  LOBYTE(v23[1]) = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v8 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v8, v31, (int8x8_t *)&v27 + 1, (uint64_t)&v28);
  sub_1CBD85EB8((uint64_t)a1, (uint64_t)a2, v9, (uint64_t)v23);
  unsigned int v14 = *(_DWORD *)(*((void *)a2 + 2) + 16 * v10 + 8);
  LODWORD(v30) = v14 & 0xF;
  BYTE4(v30) = (v14 >> 4) & 0x1F;
  DWORD2(v30) = (v14 >> 9) & 0xF;
  BYTE12(v30) = (v14 >> 13) & 0x1F;
  sub_1CBD88E08((uint64_t)a1, a2, v11, (uint64_t)&v23[1] + 12);
  sub_1CBD88E08((uint64_t)a1, a2, v12, (uint64_t)&v23[3] + 8);
  sub_1CBD88E08((uint64_t)a1, a2, v13, (uint64_t)&v25 + 4);
  if (HIDWORD(v25) == 1) {
    LODWORD(v26) = 2;
  }
  unsigned int v15 = *a1;
  BOOL v16 = *a1 - 1 < 5;
  if (!v30)
  {
    DWORD1(v23[3]) = 0;
    DWORD1(v23[2]) = 0;
    *(void *)((char *)&v23[2] + 12) = 0;
    *(void *)((char *)&v23[1] + 12) = 0;
    DWORD2(v23[2]) = v16;
  }
  if (!DWORD2(v30))
  {
    LODWORD(v25) = 0;
    LODWORD(v24) = 0;
    *((void *)&v24 + 1) = 0;
    *((void *)&v23[3] + 1) = 0;
    DWORD1(v24) = v16;
  }
  if (v15 >= 4)
  {
    if ((DWORD2(v23[0]) - 2) <= 3) {
      LODWORD(v27) = dword_1CDF53620[DWORD2(v23[0]) - 2];
    }
    DWORD1(v27) = 118;
  }
  long long v17 = v29;
  *(_OWORD *)(a4 + 128) = v28;
  *(_OWORD *)(a4 + 144) = v17;
  *(_OWORD *)(a4 + 160) = v30;
  *(_DWORD *)(a4 + 176) = *(_DWORD *)v31;
  long long v18 = v25;
  *(_OWORD *)(a4 + 64) = v24;
  *(_OWORD *)(a4 + 80) = v18;
  long long v19 = v27;
  *(_OWORD *)(a4 + 96) = v26;
  *(_OWORD *)(a4 + 112) = v19;
  long long v20 = v23[1];
  *(_OWORD *)a4 = v23[0];
  *(_OWORD *)(a4 + 16) = v20;
  double result = *(double *)&v23[2];
  long long v22 = v23[3];
  *(_OWORD *)(a4 + 32) = v23[2];
  *(_OWORD *)(a4 + 48) = v22;
  return result;
}

double sub_1CBD983E4(unsigned int *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 117;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v9 = sub_1CBDA6464(v7, 3u);
  unsigned int v10 = sub_1CBDA6464(v7, 0x2Fu);
  unsigned int v11 = sub_1CBDA6464(v7, 0x11u);
  unsigned int v12 = sub_1CBDA6464(v7, 4u);
  unsigned int v13 = sub_1CBDA6464(v7, 0x14u);
  *(_DWORD *)int v31 = 0;
  long long v29 = 0u;
  long long v30 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v24 = 0u;
  memset(v23, 0, sizeof(v23));
  sub_1CBD85A80(a1, (uint64_t)a2, v8, v31, (int8x8_t *)&v27 + 1, (uint64_t)&v28);
  sub_1CBD85EB8((uint64_t)a1, (uint64_t)a2, v9, (uint64_t)v23);
  unsigned int v14 = *(_DWORD *)(*((void *)a2 + 2) + 16 * v10 + 8);
  LODWORD(v30) = v14 & 0xF;
  BYTE4(v30) = (v14 >> 4) & 0x1F;
  DWORD2(v30) = (v14 >> 9) & 0xF;
  BYTE12(v30) = (v14 >> 13) & 0x1F;
  sub_1CBD88E08((uint64_t)a1, a2, v11, (uint64_t)&v23[1] + 12);
  sub_1CBD88E08((uint64_t)a1, a2, v12, (uint64_t)&v23[3] + 8);
  sub_1CBD88E08((uint64_t)a1, a2, v13, (uint64_t)&v25 + 4);
  if (HIDWORD(v25) == 1) {
    LODWORD(v26) = 2;
  }
  unsigned int v15 = *a1;
  BOOL v16 = *a1 - 1 < 5;
  if (!v30)
  {
    DWORD1(v23[3]) = 0;
    DWORD1(v23[2]) = 0;
    *(void *)((char *)&v23[2] + 12) = 0;
    *(void *)((char *)&v23[1] + 12) = 0;
    DWORD2(v23[2]) = v16;
  }
  if (!DWORD2(v30))
  {
    LODWORD(v25) = 0;
    LODWORD(v24) = 0;
    *((void *)&v24 + 1) = 0;
    *((void *)&v23[3] + 1) = 0;
    DWORD1(v24) = v16;
  }
  if (v15 >= 4)
  {
    if ((DWORD2(v23[0]) - 2) <= 3) {
      LODWORD(v27) = dword_1CDF53620[DWORD2(v23[0]) - 2];
    }
    DWORD1(v27) = 118;
  }
  long long v17 = v29;
  *(_OWORD *)(a4 + 128) = v28;
  *(_OWORD *)(a4 + 144) = v17;
  *(_OWORD *)(a4 + 160) = v30;
  *(_DWORD *)(a4 + 176) = *(_DWORD *)v31;
  long long v18 = v25;
  *(_OWORD *)(a4 + 64) = v24;
  *(_OWORD *)(a4 + 80) = v18;
  long long v19 = v27;
  *(_OWORD *)(a4 + 96) = v26;
  *(_OWORD *)(a4 + 112) = v19;
  long long v20 = v23[1];
  *(_OWORD *)a4 = v23[0];
  *(_OWORD *)(a4 + 16) = v20;
  double result = *(double *)&v23[2];
  long long v22 = v23[3];
  *(_OWORD *)(a4 + 32) = v23[2];
  *(_OWORD *)(a4 + 48) = v22;
  return result;
}

void *sub_1CBD98628(unsigned int *a1, unsigned __int16 *a2, _DWORD *a3, void *a4)
{
  *a3 = 85;
  int v6 = *a2;
  unsigned int v7 = sub_1CBDA6464(v6, 0x2Eu);
  unsigned int v8 = sub_1CBDA6464(v6, 0x2Fu);
  unsigned int v9 = sub_1CBDA6464(v6, 0x59u);
  unsigned int v10 = sub_1CBDA6464(v6, 0x5Au);
  unsigned int v11 = sub_1CBDA6464(v6, 0x3Du);
  unsigned int v12 = sub_1CBDA6464(v6, 0x5Bu);
  unsigned int v24 = sub_1CBDA6464(v6, 0x5Cu);
  unsigned int v13 = sub_1CBDA6464(v6, 0x5Du);
  memset(__src, 0, 260);
  sub_1CBD85A80(a1, (uint64_t)a2, v7, (BOOL *)&__src[15] + 12, (int8x8_t *)((char *)&__src[7] + 12), (uint64_t)&__src[13] + 4);
  unint64_t v14 = *(void *)(*((void *)a2 + 2) + 16 * v8 + 8);
  uint32x2_t v15 = (uint32x2_t)vdup_n_s32(v14);
  *(int8x8_t *)((char *)&__src[8] + 4) = vand_s8((int8x8_t)vshl_u32(v15, (uint32x2_t)0xFFFFFFE9FFFFFFEBLL), (int8x8_t)0x700000003);
  *(void *)((char *)&__src[8] + 12) = (4 * v14) & 0x300000000 | (v14 >> 2) & 7;
  *(void *)((char *)&__src[9] + 4) = *(void *)&vshl_u32(v15, (uint32x2_t)0xFFFFFFE4FFFFFFE6) & 0xFFFFFFC3FFFFFFC3;
  BYTE4(__src[15]) = (v14 & 0x400000000) != 0;
  DWORD2(__src[15]) = (v14 >> 44) & 7;
  DWORD1(__src[2]) = (v14 >> 35) & 7;
  LODWORD(__src[4]) = (v14 >> 38) & 7;
  HIDWORD(__src[5]) = (v14 >> 41) & 7;
  sub_1CBD88E08((uint64_t)a1, a2, v9, (uint64_t)&__src[9] + 12);
  sub_1CBD88900((uint64_t)a1, a2, v10, (uint64_t)&__src[11] + 8);
  DWORD2(__src[0]) = 5;
  unsigned int v16 = *a1;
  if (*a1 >= 4) {
    HIDWORD(__src[0]) = 2;
  }
  uint64_t v17 = *((void *)a2 + 2);
  uint64_t v18 = *(void *)(v17 + 16 * v11 + 8);
  if (v18) {
    uint64_t v19 = v18 - 8;
  }
  else {
    uint64_t v19 = 0;
  }
  LOWORD(__src[0]) = *(_WORD *)(*(void *)(v19 + 32) + 16) & 0x1FFF;
  if (v11) {
    int v20 = 1;
  }
  else {
    int v20 = 2;
  }
  unsigned int v21 = *(_DWORD *)(v17 + 16 * (v20 + v11) + 8);
  BYTE8(__src[1]) = (v21 & 0x10) != 0;
  DWORD1(__src[1]) = (v21 >> 20) & 0xF;
  if (v16
    && (sub_1CBD88E08((uint64_t)a1, a2, v12, (uint64_t)&__src[1] + 12), *a1)
    && (sub_1CBD88E08((uint64_t)a1, a2, v24, (uint64_t)&__src[3] + 8), *a1))
  {
    sub_1CBD88E08((uint64_t)a1, a2, v13, (uint64_t)&__src[5] + 4);
    unsigned int v22 = *a1;
    sub_1CBD98900(a1, *(_DWORD *)a2, *((void *)a2 + 2), (uint64_t)__src);
    if (v22 > 3)
    {
      LODWORD(__src[7]) = 2;
      DWORD2(__src[7]) = 87;
    }
  }
  else
  {
    sub_1CBD98900(a1, *(_DWORD *)a2, *((void *)a2 + 2), (uint64_t)__src);
  }
  return memcpy(a4, __src, 0x104uLL);
}

_DWORD *sub_1CBD98900(_DWORD *result, unsigned __int16 a2, uint64_t a3, uint64_t a4)
{
  if (*result)
  {
    int v6 = result;
    double result = (_DWORD *)sub_1CBDA6464(a2, 0x2Fu);
    unint64_t v7 = *(void *)(a3 + 16 * result + 8);
    if (((v7 >> 41) & 7) != *(_DWORD *)(a4 + 92))
    {
      *(void *)(a4 + 92) = 0;
      *(void *)(a4 + 84) = 0;
      *(_DWORD *)(a4 + 108) = 0;
      *(void *)(a4 + 100) = 0;
      *(_DWORD *)(a4 + 96) = 1;
    }
    if (((v7 >> 35) & 7) != *(_DWORD *)(a4 + 36))
    {
      *(void *)(a4 + 36) = 0;
      *(void *)(a4 + 28) = 0;
      *(_DWORD *)(a4 + 52) = 0;
      *(void *)(a4 + 44) = 0;
      *(_DWORD *)(a4 + 40) = 1;
    }
    if (((v7 >> 38) & 7) != *(_DWORD *)(a4 + 64))
    {
      *(void *)(a4 + 56) = 0;
      *(void *)(a4 + 64) = 0;
      *(_DWORD *)(a4 + 80) = 0;
      *(void *)(a4 + 72) = 0;
      *(_DWORD *)(a4 + 68) = 1;
    }
    if (*v6 >= 5u) {
      *(_WORD *)(a4 + 254) = 3;
    }
  }
  return result;
}

void *sub_1CBD989D4(int *a1, unsigned __int16 *a2, _DWORD *a3, void *a4)
{
  *a3 = 85;
  int v6 = *a2;
  unsigned int v7 = sub_1CBDA6464(v6, 0x2Eu);
  unsigned int v8 = sub_1CBDA6464(v6, 0x2Fu);
  unsigned int v9 = sub_1CBDA6464(v6, 0x59u);
  unsigned int v10 = sub_1CBDA6464(v6, 0x5Au);
  unsigned int v11 = sub_1CBDA6464(v6, 0x3Du);
  unsigned int v37 = sub_1CBDA6464(v6, 0x5Bu);
  unsigned int v38 = sub_1CBDA6464(v6, 0x5Cu);
  unsigned int v39 = sub_1CBDA6464(v6, 0x5Du);
  unsigned int v12 = sub_1CBDA6464(v6, 0x5Eu);
  unsigned int v13 = sub_1CBDA6464(v6, 0x5Fu);
  memset(__src, 0, 260);
  sub_1CBD85A80(a1, (uint64_t)a2, v7, (BOOL *)&__src[15] + 12, (int8x8_t *)((char *)&__src[7] + 12), (uint64_t)&__src[13] + 4);
  unint64_t v14 = *(void *)(*((void *)a2 + 2) + 16 * v8 + 8);
  uint32x2_t v15 = (uint32x2_t)vdup_n_s32(v14);
  *(int8x8_t *)((char *)&__src[8] + 4) = vand_s8((int8x8_t)vshl_u32(v15, (uint32x2_t)0xFFFFFFE9FFFFFFEBLL), (int8x8_t)0x700000003);
  *(void *)((char *)&__src[8] + 12) = (4 * v14) & 0x300000000 | (v14 >> 2) & 7;
  *(void *)((char *)&__src[9] + 4) = *(void *)&vshl_u32(v15, (uint32x2_t)0xFFFFFFE4FFFFFFE6) & 0xFFFFFFC3FFFFFFC3;
  BYTE4(__src[15]) = (v14 & 0x400000000) != 0;
  DWORD2(__src[15]) = (v14 >> 44) & 7;
  DWORD1(__src[2]) = (v14 >> 35) & 7;
  LODWORD(__src[4]) = (v14 >> 38) & 7;
  HIDWORD(__src[5]) = (v14 >> 41) & 7;
  sub_1CBD88E08((uint64_t)a1, a2, v9, (uint64_t)&__src[9] + 12);
  sub_1CBD88900((uint64_t)a1, a2, v10, (uint64_t)&__src[11] + 8);
  DWORD2(__src[0]) = 5;
  int v16 = *a1;
  if (*a1 >= 4) {
    HIDWORD(__src[0]) = 2;
  }
  uint64_t v17 = *((void *)a2 + 2);
  uint64_t v18 = *(void *)(v17 + 16 * v11 + 8);
  if (v18) {
    uint64_t v19 = v18 - 8;
  }
  else {
    uint64_t v19 = 0;
  }
  LOWORD(__src[0]) = *(_WORD *)(*(void *)(v19 + 32) + 16) & 0x1FFF;
  if (v11) {
    int v20 = 1;
  }
  else {
    int v20 = 2;
  }
  unsigned int v21 = *(_DWORD *)(v17 + 16 * (v20 + v11) + 8);
  BYTE8(__src[1]) = (v21 & 0x10) != 0;
  DWORD1(__src[1]) = (v21 >> 20) & 0xF;
  if (v16)
  {
    sub_1CBD88E08((uint64_t)a1, a2, v37, (uint64_t)&__src[1] + 12);
    if (*a1)
    {
      sub_1CBD88E08((uint64_t)a1, a2, v38, (uint64_t)&__src[3] + 8);
      if (*a1) {
        sub_1CBD88E08((uint64_t)a1, a2, v39, (uint64_t)&__src[5] + 4);
      }
    }
  }
  uint64_t v22 = *((void *)a2 + 2);
  if (*(unsigned char *)(v22 + 16 * v12) == 2)
  {
    LOBYTE(v28) = 0;
    LOBYTE(v29) = 0;
  }
  else
  {
    uint64_t v23 = *(void *)(v22 + 16 * v12 + 8);
    if (v23) {
      uint64_t v24 = v23 - 8;
    }
    else {
      uint64_t v24 = 0;
    }
    int v25 = *(_DWORD *)(*(void *)(v24 + 32) + 16) & 0x1FFF;
    BOOL v26 = __OFSUB__(v25, LOWORD(__src[0]));
    int v27 = v25 - LOWORD(__src[0]);
    if (v27 < 0 != v26) {
      LOBYTE(v27) = v27 + 1;
    }
    int v28 = (char)v27 >> 1;
    int v29 = (*(unsigned __int8 *)(v22 + 16 * (v12 + 1) + 8) >> 4) & 1;
  }
  LOBYTE(__src[16]) = v28;
  BYTE1(__src[16]) = v29;
  if (*(unsigned char *)(v22 + 16 * v13) == 2)
  {
    LOBYTE(v34) = 0;
    LOBYTE(v35) = 0;
  }
  else
  {
    uint64_t v30 = *(void *)(v22 + 16 * v13 + 8);
    if (v30) {
      uint64_t v31 = v30 - 8;
    }
    else {
      uint64_t v31 = 0;
    }
    int v32 = *(_DWORD *)(*(void *)(v31 + 32) + 16) & 0x1FFF;
    BOOL v26 = __OFSUB__(v32, LOWORD(__src[0]));
    int v33 = v32 - LOWORD(__src[0]);
    if (v33 < 0 != v26) {
      LOBYTE(v33) = v33 + 1;
    }
    int v34 = (char)v33 >> 1;
    int v35 = (*(unsigned __int8 *)(v22 + 16 * (v13 + 1) + 8) >> 4) & 1;
  }
  BYTE2(__src[16]) = v34;
  BYTE3(__src[16]) = v35;
  sub_1CBD98900(a1, *(_DWORD *)a2, v22, (uint64_t)__src);
  if (*a1 >= 4)
  {
    LODWORD(__src[7]) = 2;
    DWORD2(__src[7]) = 87;
  }
  return memcpy(a4, __src, 0x104uLL);
}

double sub_1CBD98D84(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 66;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x25u);
  unsigned int v11 = sub_1CBDA6464(v7, 0x48u);
  unsigned int v12 = sub_1CBDA6464(v7, 0x11u);
  uint64_t v26 = 0;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v19 = 0u;
  sub_1CBD85EB8((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v19);
  uint64_t v13 = *((void *)a2 + 2);
  LOBYTE(v20) = (*(unsigned char *)(v13 + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, (BOOL *)&v26 + 4, (int8x8_t *)&v23, (uint64_t)&v24 + 4);
  uint64_t v14 = *(void *)(v13 + 16 * v11 + 8);
  DWORD2(v23) = *(void *)(v13 + 16 * v10 + 8);
  HIDWORD(v23) = v14;
  sub_1CBD8C148((uint64_t)a1, (uint64_t)a2, v12, (uint64_t)&v20 + 12);
  if (*a1 >= 4u)
  {
    if ((DWORD2(v19) - 2) <= 3) {
      DWORD2(v22) = dword_1CDF53620[DWORD2(v19) - 2];
    }
    HIDWORD(v22) = 71;
  }
  long long v15 = v24;
  *(_OWORD *)(a4 + 64) = v23;
  *(_OWORD *)(a4 + 80) = v15;
  *(_OWORD *)(a4 + 96) = v25;
  *(void *)(a4 + 112) = v26;
  long long v16 = v20;
  *(_OWORD *)a4 = v19;
  *(_OWORD *)(a4 + 16) = v16;
  double result = *(double *)&v21;
  long long v18 = v22;
  *(_OWORD *)(a4 + 32) = v21;
  *(_OWORD *)(a4 + 48) = v18;
  return result;
}

double sub_1CBD98F18(_DWORD *a1, unsigned int *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 90;
  int v7 = *(unsigned __int16 *)a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x48u);
  uint64_t v11 = sub_1CBDA6464(v7, 0x11u);
  uint64_t v25 = 0;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v18 = 0u;
  sub_1CBD9908C((uint64_t)a1, a2, v8, (uint64_t)&v18, (int *)&v23);
  uint64_t v12 = *((void *)a2 + 2);
  LOBYTE(v19) = (*(unsigned char *)(v12 + 16 * v9 + 8) & 0x20) != 0;
  *(int8x8_t *)&double v13 = sub_1CBD85A80(a1, (uint64_t)a2, v9, (BOOL *)&v25 + 4, (int8x8_t *)&v22 + 1, (uint64_t)&v23 + 4);
  LODWORD(v20) = *(void *)(v12 + 16 * v10 + 8);
  ((void (*)(_DWORD *, unsigned int *, uint64_t, char *, double))loc_1CBD99218)(a1, a2, v11, (char *)&v20 + 4, v13);
  if (*a1 >= 4u)
  {
    if ((DWORD2(v18) - 2) <= 3) {
      LODWORD(v22) = dword_1CDF53620[DWORD2(v18) - 2];
    }
    DWORD1(v22) = 91;
  }
  long long v14 = v23;
  *(_OWORD *)(a4 + 64) = v22;
  *(_OWORD *)(a4 + 80) = v14;
  *(_OWORD *)(a4 + 96) = v24;
  *(void *)(a4 + 112) = v25;
  long long v15 = v19;
  *(_OWORD *)a4 = v18;
  *(_OWORD *)(a4 + 16) = v15;
  double result = *(double *)&v20;
  long long v17 = v21;
  *(_OWORD *)(a4 + 32) = v20;
  *(_OWORD *)(a4 + 48) = v17;
  return result;
}

uint64_t sub_1CBD9908C(uint64_t a1, unsigned int *a2, unsigned int a3, uint64_t a4, int *a5)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  sub_1CBDA0424(a1, (unsigned __int16 *)a2, a3, a4, 0);
  long long v15 = *(_OWORD *)a2;
  long long v16 = v18;
  uint64_t v17 = 0x800000000;
  unsigned int v9 = a2[6];
  if (v9) {
    BOOL v10 = &v15 == (long long *)a2;
  }
  else {
    BOOL v10 = 1;
  }
  if (v10)
  {
    uint64_t v11 = v18;
  }
  else
  {
    if (v9 >= 9) {
      llvm::SmallVectorBase<unsigned int>::grow_pod();
    }
    memcpy(v18, *((const void **)a2 + 2), 16 * a2[6]);
    uint64_t v11 = v16;
    LODWORD(v17) = v9;
  }
  v18[128] = *((unsigned char *)a2 + 160);
  int v12 = 1;
  if (v11[16 * a3] == 5)
  {
    if (**(unsigned char **)&v11[16 * a3 + 8] == 4) {
      int v12 = 2;
    }
    else {
      int v12 = 1;
    }
  }
  *(unsigned char *)(a4 + 28) = v11[16 * v12 + 8 + 16 * a3] & 1;
  if (v11 != v18) {
    free(v11);
  }
  uint64_t result = sub_1CBDB2780(*a2, 0, 0);
  if ((int)result > 33)
  {
    if (result == 35) {
      int v14 = 3;
    }
    else {
      int v14 = 1;
    }
  }
  else
  {
    int v14 = 0;
  }
  *a5 = v14;
  return result;
}

double sub_1CBD99330(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, _OWORD *a4)
{
  *a3 = 1;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 0x57u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x2Fu);
  unsigned int v26 = sub_1CBDA6464(v7, 0x2Bu);
  unsigned int v11 = sub_1CBDA6464(v7, 0x30u);
  unsigned int v12 = sub_1CBDA6464(v7, 0x55u);
  unsigned int v28 = sub_1CBDA6464(v7, 7u);
  unsigned int v27 = sub_1CBDA6464(v7, 0x56u);
  memset((char *)v29 + 4, 0, 216);
  *((void *)&v29[0] + 1) = 0x200000004;
  uint64_t v13 = *((void *)a2 + 2);
  LODWORD(v29[0]) = *(_DWORD *)(v13 + 16 * v8 + 8) & 0x1FFFF;
  DWORD1(v29[1]) = (*(_DWORD *)(v13 + 16 * (v8 + 2) + 8) >> 20) & 0xF;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, (BOOL *)&v29[13] + 5, (int8x8_t *)((char *)&v29[9] + 10), (uint64_t)&v29[11] + 4);
  sub_1CBD99690((uint64_t)a1, (uint64_t)a2, v10, (int *)&v29[10] + 1, (unsigned char *)&v29[10] + 9, (uint64_t)&v29[3] + 8, (unsigned char *)&v29[13] + 4, (_DWORD *)&v29[13] + 2);
  sub_1CBD88E08((uint64_t)a1, a2, v26, (uint64_t)&v29[5] + 4);
  sub_1CBD88900((uint64_t)a1, a2, v11, (uint64_t)&v29[3] + 8);
  uint64_t v14 = *((void *)a2 + 2);
  if (*(unsigned char *)(v14 + 16 * v12) == 5) {
    __int16 v15 = 0;
  }
  else {
    __int16 v15 = *(_WORD *)(v14 + 16 * v12 + 8);
  }
  LOWORD(v29[11]) = v15;
  sub_1CBD88E08((uint64_t)a1, a2, v28, (uint64_t)&v29[1] + 12);
  uint64_t v16 = *(void *)(*((void *)a2 + 2) + 16 * v27 + 8);
  if (v16 == 1)
  {
    int v17 = 0;
    goto LABEL_5;
  }
  if (v16 <= 7)
  {
    if (v16 == 4)
    {
      int v17 = 2;
      goto LABEL_5;
    }
    if (v16 == 2)
    {
      int v17 = 1;
      goto LABEL_5;
    }
LABEL_25:
    llvm::report_fatal_error((llvm *)"Unhandled size for stride", (const llvm::Twine *)1);
  }
  if (v16 == 16)
  {
    int v17 = 4;
    goto LABEL_5;
  }
  if (v16 != 8) {
    goto LABEL_25;
  }
  int v17 = 3;
LABEL_5:
  HIDWORD(v29[10]) = v17;
  DWORD2(v29[2]) = 2;
  BYTE8(v29[10]) = 1;
  if (*a1 >= 4u)
  {
    char v25 = BYTE9(v29[10]);
    if (BYTE9(v29[10]) == 1)
    {
      char v25 = BYTE4(v29[10]);
      if (DWORD1(v29[10]) != 3) {
        char v25 = 1;
      }
    }
    else if (BYTE9(v29[10]) != 3)
    {
      goto LABEL_20;
    }
    BYTE8(v29[9]) = v25;
LABEL_20:
    *(void *)((char *)&v29[7] + 4) = 15;
    HIDWORD(v29[8]) = 0;
    *(void *)((char *)&v29[8] + 4) = 0;
    *(void *)((char *)&v29[7] + 12) = 0x100000001;
    LOBYTE(v29[7]) = 0;
    *(void *)&v29[9] = 0x600000000;
    goto LABEL_7;
  }
  *(void *)((char *)&v29[7] + 4) = 0;
  *(void *)((char *)&v29[7] + 12) = 0x100000000;
  *(void *)((char *)&v29[8] + 4) = 0;
  HIDWORD(v29[8]) = 0;
  LOBYTE(v29[7]) = 0;
LABEL_7:
  long long v18 = v29[11];
  a4[10] = v29[10];
  a4[11] = v18;
  a4[12] = v29[12];
  *(_OWORD *)((char *)a4 + 204) = *(_OWORD *)((char *)&v29[12] + 12);
  long long v19 = v29[7];
  a4[6] = v29[6];
  a4[7] = v19;
  long long v20 = v29[9];
  a4[8] = v29[8];
  a4[9] = v20;
  long long v21 = v29[3];
  a4[2] = v29[2];
  a4[3] = v21;
  long long v22 = v29[5];
  a4[4] = v29[4];
  a4[5] = v22;
  double result = *(double *)v29;
  long long v24 = v29[1];
  *a4 = v29[0];
  a4[1] = v24;
  return result;
}

void sub_1CBD99690(uint64_t a1, uint64_t a2, unsigned int a3, int *a4, unsigned char *a5, uint64_t a6, unsigned char *a7, _DWORD *a8)
{
  uint64_t v11 = *(void *)(*(void *)(a2 + 16) + 16 * a3 + 8);
  char v12 = 1;
  *a5 = 1;
  int v13 = 0;
  char v14 = 1;
  switch(v11 & 0xF)
  {
    case 0:
      goto LABEL_14;
    case 1:
      int v13 = 1;
      goto LABEL_14;
    case 2:
      char v12 = 0;
      int v13 = 2;
      goto LABEL_14;
    case 3:
      char v12 = 0;
      int v13 = 3;
      goto LABEL_14;
    case 4:
      int v13 = 4;
      goto LABEL_14;
    case 5:
      int v13 = 5;
      goto LABEL_14;
    case 6:
      int v13 = 6;
      goto LABEL_14;
    case 7:
      int v13 = 7;
      goto LABEL_14;
    case 8:
      int v13 = 8;
      goto LABEL_14;
    case 9:
      int v13 = 9;
      goto LABEL_14;
    case 0xALL:
      int v13 = 10;
      goto LABEL_14;
    case 0xBLL:
      goto LABEL_15;
    case 0xCLL:
      unsigned int v15 = *(_DWORD *)a1;
      if ((*(_DWORD *)a1 - 3) < 3)
      {
        char v14 = 0;
        char v12 = 1;
        int v13 = 11;
LABEL_14:
        *a4 = v13;
        goto LABEL_15;
      }
      char v12 = 1;
      if (v15 == 2)
      {
        int v13 = 12;
        goto LABEL_14;
      }
      if (v15 <= 1)
      {
        long long v21 = "F32ADD not supported.";
        goto LABEL_39;
      }
LABEL_15:
      *(unsigned char *)(a6 + 25) = (v11 & 0x200) == 0;
      unsigned int v16 = *(_DWORD *)a1;
      if (*(_DWORD *)a1 < 4u) {
        return;
      }
      if ((v11 & 0x1000) != 0) {
        char v17 = 0;
      }
      else {
        char v17 = v12;
      }
      if ((v17 & 1) == 0)
      {
        *a7 = 1;
        return;
      }
      uint64_t v18 = sub_1CBE52E8C(*(_DWORD *)a2);
      if ((v18 & 0xFF00000000) == 0)
      {
        long long v21 = "Unknown Opcode";
LABEL_39:
        llvm::report_fatal_error((llvm *)v21, (const llvm::Twine *)1);
      }
      if ((v18 - 61) > 0x20) {
        goto LABEL_33;
      }
      if (((1 << (v18 - 61)) & 0x18000000CLL) == 0)
      {
        if (v18 == 61)
        {
          char v19 = v16 < 5;
          goto LABEL_24;
        }
LABEL_33:
        if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1EBCC2890, memory_order_acquire) & 1) == 0
          && __cxa_guard_acquire(&qword_1EBCC2890))
        {
          byte_1EBCC2880 = 1;
          __cxa_guard_release(&qword_1EBCC2890);
        }
        char v19 = byte_1EBCC2880 ^ 1;
        goto LABEL_24;
      }
      char v19 = 1;
LABEL_24:
      *a7 = v19 & 1;
      if (*(_DWORD *)a1 < 5u) {
        char v20 = 1;
      }
      else {
        char v20 = v14;
      }
      if ((v20 & 1) == 0) {
        *a8 = (*(void *)(*(void *)(a1 + 8) + 192) & 0x200000000) == 0;
      }
      return;
    default:
      char v14 = 1;
      goto LABEL_15;
  }
}

double sub_1CBD998E8(uint64_t a1, unsigned __int16 *a2, _DWORD *a3, _OWORD *a4)
{
  *a3 = 1;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 0x57u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x2Fu);
  unsigned int v27 = sub_1CBDA6464(v7, 0x2Bu);
  unsigned int v11 = sub_1CBDA6464(v7, 0x30u);
  unsigned int v12 = sub_1CBDA6464(v7, 0x55u);
  unsigned int v29 = sub_1CBDA6464(v7, 7u);
  unsigned int v28 = sub_1CBDA6464(v7, 0x56u);
  memset(v37, 0, 108);
  long long v36 = 0u;
  long long v35 = 0u;
  long long v34 = 0u;
  long long v33 = 0u;
  long long v32 = 0u;
  long long v31 = 0u;
  int v13 = (unsigned __int8 *)(*((void *)a2 + 2) + 16 * v8);
  DWORD2(v30) = 2;
  HIDWORD(v30) = sub_1CBD9F8B0((unsigned int *)a2, v8, *(void **)(a1 + 16));
  *(void *)&long long v30 = sub_1CBD9FA40(*(void *)(a1 + 24), v13, 2);
  uint64_t v14 = *((void *)a2 + 2);
  *(void *)((char *)&v31 + 4) = (*(_DWORD *)(v14 + 16 * (v8 + 1) + 8) >> 20) & 0xFLL;
  LOBYTE(v31) = (*(unsigned char *)(v14 + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80((_DWORD *)a1, (uint64_t)a2, v9, (BOOL *)&v37[6] + 5, (int8x8_t *)((char *)&v37[2] + 10), (uint64_t)&v37[4] + 4);
  sub_1CBD99690(a1, (uint64_t)a2, v10, (int *)&v37[3] + 1, (unsigned char *)&v37[3] + 9, (uint64_t)&v33 + 8, (unsigned char *)&v37[6] + 4, (_DWORD *)&v37[6] + 2);
  sub_1CBD88E08(a1, a2, v27, (uint64_t)&v35 + 4);
  sub_1CBD88900(a1, a2, v11, (uint64_t)&v33 + 8);
  uint64_t v15 = *((void *)a2 + 2);
  if (*(unsigned char *)(v15 + 16 * v12) == 5) {
    __int16 v16 = 0;
  }
  else {
    __int16 v16 = *(_WORD *)(v15 + 16 * v12 + 8);
  }
  LOWORD(v37[4]) = v16;
  sub_1CBD88E08(a1, a2, v29, (uint64_t)&v31 + 12);
  uint64_t v17 = *(void *)(*((void *)a2 + 2) + 16 * v28 + 8);
  if (v17 == 1)
  {
    int v18 = 0;
    goto LABEL_5;
  }
  if (v17 <= 7)
  {
    if (v17 == 4)
    {
      int v18 = 2;
      goto LABEL_5;
    }
    if (v17 == 2)
    {
      int v18 = 1;
      goto LABEL_5;
    }
LABEL_25:
    llvm::report_fatal_error((llvm *)"Unhandled size for stride", (const llvm::Twine *)1);
  }
  if (v17 == 16)
  {
    int v18 = 4;
    goto LABEL_5;
  }
  if (v17 != 8) {
    goto LABEL_25;
  }
  int v18 = 3;
LABEL_5:
  HIDWORD(v37[3]) = v18;
  DWORD2(v32) = 2;
  BYTE8(v37[3]) = 1;
  if (*(_DWORD *)a1 < 4u)
  {
    HIDWORD(v37[0]) = 0;
    *(void *)((char *)v37 + 4) = 0;
    v37[1] = 1uLL;
    LOBYTE(v37[0]) = 0;
    goto LABEL_11;
  }
  BYTE9(v37[2]) = 1;
  char v19 = BYTE9(v37[3]);
  if (BYTE9(v37[3]) == 1)
  {
    char v19 = BYTE4(v37[3]);
    if (DWORD1(v37[3]) != 3) {
      char v19 = 1;
    }
  }
  else if (BYTE9(v37[3]) != 3)
  {
    goto LABEL_10;
  }
  BYTE8(v37[2]) = v19;
LABEL_10:
  *(void *)((char *)v37 + 4) = 15;
  HIDWORD(v37[1]) = 0;
  *(void *)((char *)&v37[1] + 4) = 0;
  *(void *)((char *)v37 + 12) = 0x100000001;
  LOBYTE(v37[0]) = 0;
  *(void *)&v37[2] = 0x600000000;
LABEL_11:
  long long v20 = v37[4];
  a4[10] = v37[3];
  a4[11] = v20;
  a4[12] = v37[5];
  *(_OWORD *)((char *)a4 + 204) = *(_OWORD *)((char *)&v37[5] + 12);
  long long v21 = v37[0];
  a4[6] = v36;
  a4[7] = v21;
  long long v22 = v37[2];
  a4[8] = v37[1];
  a4[9] = v22;
  long long v23 = v33;
  a4[2] = v32;
  a4[3] = v23;
  long long v24 = v35;
  a4[4] = v34;
  a4[5] = v24;
  double result = *(double *)&v30;
  long long v26 = v31;
  *a4 = v30;
  a4[1] = v26;
  return result;
}

double sub_1CBD99C84(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, _OWORD *a4)
{
  *a3 = 1;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Fu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x2Bu);
  unsigned int v11 = sub_1CBDA6464(v7, 0x30u);
  unsigned int v12 = sub_1CBDA6464(v7, 0x55u);
  unsigned int v26 = sub_1CBDA6464(v7, 7u);
  unsigned int v13 = sub_1CBDA6464(v7, 0x56u);
  memset(v34, 0, 108);
  long long v32 = 0u;
  long long v33 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  sub_1CBD85A80(a1, (uint64_t)a2, v8, (BOOL *)&v34[6] + 5, (int8x8_t *)((char *)&v34[2] + 10), (uint64_t)&v34[4] + 4);
  sub_1CBD99690((uint64_t)a1, (uint64_t)a2, v9, (int *)&v34[3] + 1, (unsigned char *)&v34[3] + 9, (uint64_t)&v30 + 8, (unsigned char *)&v34[6] + 4, (_DWORD *)&v34[6] + 2);
  sub_1CBD88E08((uint64_t)a1, a2, v10, (uint64_t)&v32 + 4);
  sub_1CBD88900((uint64_t)a1, a2, v11, (uint64_t)&v30 + 8);
  uint64_t v14 = *((void *)a2 + 2);
  if (*(unsigned char *)(v14 + 16 * v12) == 5) {
    __int16 v15 = 0;
  }
  else {
    __int16 v15 = *(_WORD *)(v14 + 16 * v12 + 8);
  }
  LOWORD(v34[4]) = v15;
  sub_1CBD88E08((uint64_t)a1, a2, v26, (uint64_t)&v28 + 12);
  uint64_t v16 = *(void *)(*((void *)a2 + 2) + 16 * v13 + 8);
  if (v16 == 1)
  {
    int v17 = 0;
    goto LABEL_5;
  }
  if (v16 > 15)
  {
    if (v16 == 16)
    {
      int v17 = 4;
      goto LABEL_5;
    }
LABEL_25:
    llvm::report_fatal_error((llvm *)"Unhandled size for stride", (const llvm::Twine *)1);
  }
  switch(v16)
  {
    case 4:
      int v17 = 2;
      break;
    case 8:
      int v17 = 3;
      break;
    case 2:
      int v17 = 1;
      break;
    default:
      goto LABEL_25;
  }
LABEL_5:
  HIDWORD(v34[3]) = v17;
  BYTE8(v34[3]) = 0;
  *(void *)&long long v27 = 0;
  *((void *)&v27 + 1) = 0x200000000;
  *(void *)&long long v28 = 0;
  DWORD2(v29) = 2;
  DWORD2(v28) = 0;
  if (*a1 >= 4u)
  {
    char v25 = BYTE9(v34[3]);
    if (BYTE9(v34[3]) == 1)
    {
      char v25 = BYTE4(v34[3]);
      if (DWORD1(v34[3]) != 3) {
        char v25 = 1;
      }
    }
    else if (BYTE9(v34[3]) != 3)
    {
      goto LABEL_12;
    }
    BYTE8(v34[2]) = v25;
LABEL_12:
    *(void *)((char *)v34 + 4) = 15;
    HIDWORD(v34[1]) = 0;
    *(void *)((char *)&v34[1] + 4) = 0;
    *(void *)((char *)v34 + 12) = 0x100000001;
    LOBYTE(v34[0]) = 0;
    *(void *)&v34[2] = 0x600000000;
    goto LABEL_7;
  }
  HIDWORD(v34[0]) = 0;
  *(void *)((char *)v34 + 4) = 0;
  v34[1] = 1uLL;
  LOBYTE(v34[0]) = 0;
LABEL_7:
  long long v18 = v34[4];
  a4[10] = v34[3];
  a4[11] = v18;
  a4[12] = v34[5];
  *(_OWORD *)((char *)a4 + 204) = *(_OWORD *)((char *)&v34[5] + 12);
  long long v19 = v34[0];
  a4[6] = v33;
  a4[7] = v19;
  long long v20 = v34[2];
  a4[8] = v34[1];
  a4[9] = v20;
  long long v21 = v30;
  a4[2] = v29;
  a4[3] = v21;
  long long v22 = v32;
  a4[4] = v31;
  a4[5] = v22;
  double result = *(double *)&v27;
  long long v24 = v28;
  *a4 = v27;
  a4[1] = v24;
  return result;
}

double sub_1CBD99F78(uint64_t a1, unsigned __int16 *a2, _DWORD *a3, _OWORD *a4)
{
  *a3 = 2;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 0x57u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x2Fu);
  unsigned int v27 = sub_1CBDA6464(v7, 0x2Bu);
  unsigned int v11 = sub_1CBDA6464(v7, 0x30u);
  unsigned int v12 = sub_1CBDA6464(v7, 0x55u);
  unsigned int v29 = sub_1CBDA6464(v7, 7u);
  unsigned int v28 = sub_1CBDA6464(v7, 0x56u);
  memset(v37, 0, 108);
  long long v36 = 0u;
  long long v35 = 0u;
  long long v34 = 0u;
  long long v33 = 0u;
  long long v32 = 0u;
  long long v31 = 0u;
  unsigned int v13 = (unsigned __int8 *)(*((void *)a2 + 2) + 16 * v8);
  DWORD2(v30) = 2;
  HIDWORD(v30) = sub_1CBD9F8B0((unsigned int *)a2, v8, *(void **)(a1 + 16));
  *(void *)&long long v30 = sub_1CBD9FA40(*(void *)(a1 + 24), v13, 2);
  uint64_t v14 = *((void *)a2 + 2);
  *(void *)((char *)&v31 + 4) = (*(_DWORD *)(v14 + 16 * (v8 + 1) + 8) >> 20) & 0xFLL;
  LOBYTE(v31) = (*(unsigned char *)(v14 + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80((_DWORD *)a1, (uint64_t)a2, v9, (BOOL *)&v37[6] + 5, (int8x8_t *)((char *)&v37[2] + 10), (uint64_t)&v37[4] + 4);
  sub_1CBD99690(a1, (uint64_t)a2, v10, (int *)&v37[3] + 1, (unsigned char *)&v37[3] + 9, (uint64_t)&v33 + 8, (unsigned char *)&v37[6] + 4, (_DWORD *)&v37[6] + 2);
  sub_1CBD88E08(a1, a2, v27, (uint64_t)&v35 + 4);
  sub_1CBD88900(a1, a2, v11, (uint64_t)&v33 + 8);
  uint64_t v15 = *((void *)a2 + 2);
  if (*(unsigned char *)(v15 + 16 * v12) == 5) {
    __int16 v16 = 0;
  }
  else {
    __int16 v16 = *(_WORD *)(v15 + 16 * v12 + 8);
  }
  LOWORD(v37[4]) = v16;
  sub_1CBD88E08(a1, a2, v29, (uint64_t)&v31 + 12);
  uint64_t v17 = *(void *)(*((void *)a2 + 2) + 16 * v28 + 8);
  if (v17 == 1)
  {
    int v18 = 0;
    goto LABEL_5;
  }
  if (v17 <= 7)
  {
    if (v17 == 4)
    {
      int v18 = 2;
      goto LABEL_5;
    }
    if (v17 == 2)
    {
      int v18 = 1;
      goto LABEL_5;
    }
LABEL_25:
    llvm::report_fatal_error((llvm *)"Unhandled size for stride", (const llvm::Twine *)1);
  }
  if (v17 == 8)
  {
    int v18 = 3;
    goto LABEL_5;
  }
  if (v17 != 16) {
    goto LABEL_25;
  }
  int v18 = 4;
LABEL_5:
  HIDWORD(v37[3]) = v18;
  DWORD2(v32) = 2;
  BYTE8(v37[3]) = 1;
  if (*(_DWORD *)a1 >= 4u)
  {
    BYTE9(v37[2]) = 1;
    char v26 = BYTE9(v37[3]);
    if (BYTE9(v37[3]) == 1)
    {
      char v26 = BYTE4(v37[3]);
      if (DWORD1(v37[3]) != 3) {
        char v26 = 1;
      }
    }
    else if (BYTE9(v37[3]) != 3)
    {
      goto LABEL_12;
    }
    BYTE8(v37[2]) = v26;
LABEL_12:
    *(void *)((char *)v37 + 4) = 15;
    HIDWORD(v37[1]) = 0;
    *(void *)((char *)&v37[1] + 4) = 0;
    *(void *)((char *)v37 + 12) = 0x100000001;
    LOBYTE(v37[0]) = 0;
    *(void *)&v37[2] = 0x700000000;
    goto LABEL_7;
  }
  HIDWORD(v37[0]) = 0;
  *(void *)((char *)v37 + 4) = 0;
  v37[1] = 1uLL;
  LOBYTE(v37[0]) = 0;
LABEL_7:
  long long v19 = v37[4];
  a4[10] = v37[3];
  a4[11] = v19;
  a4[12] = v37[5];
  *(_OWORD *)((char *)a4 + 204) = *(_OWORD *)((char *)&v37[5] + 12);
  long long v20 = v37[0];
  a4[6] = v36;
  a4[7] = v20;
  long long v21 = v37[2];
  a4[8] = v37[1];
  a4[9] = v21;
  long long v22 = v33;
  a4[2] = v32;
  a4[3] = v22;
  long long v23 = v35;
  a4[4] = v34;
  a4[5] = v23;
  double result = *(double *)&v30;
  long long v25 = v31;
  *a4 = v30;
  a4[1] = v25;
  return result;
}

double sub_1CBD9A314(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, _OWORD *a4)
{
  *a3 = 2;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Fu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x2Bu);
  unsigned int v11 = sub_1CBDA6464(v7, 0x30u);
  unsigned int v12 = sub_1CBDA6464(v7, 0x55u);
  unsigned int v26 = sub_1CBDA6464(v7, 7u);
  unsigned int v13 = sub_1CBDA6464(v7, 0x56u);
  memset(v34, 0, 108);
  long long v32 = 0u;
  long long v33 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  sub_1CBD85A80(a1, (uint64_t)a2, v8, (BOOL *)&v34[6] + 5, (int8x8_t *)((char *)&v34[2] + 10), (uint64_t)&v34[4] + 4);
  sub_1CBD99690((uint64_t)a1, (uint64_t)a2, v9, (int *)&v34[3] + 1, (unsigned char *)&v34[3] + 9, (uint64_t)&v30 + 8, (unsigned char *)&v34[6] + 4, (_DWORD *)&v34[6] + 2);
  sub_1CBD88E08((uint64_t)a1, a2, v10, (uint64_t)&v32 + 4);
  sub_1CBD88900((uint64_t)a1, a2, v11, (uint64_t)&v30 + 8);
  uint64_t v14 = *((void *)a2 + 2);
  if (*(unsigned char *)(v14 + 16 * v12) == 5) {
    __int16 v15 = 0;
  }
  else {
    __int16 v15 = *(_WORD *)(v14 + 16 * v12 + 8);
  }
  LOWORD(v34[4]) = v15;
  sub_1CBD88E08((uint64_t)a1, a2, v26, (uint64_t)&v28 + 12);
  uint64_t v16 = *(void *)(*((void *)a2 + 2) + 16 * v13 + 8);
  if (v16 == 4)
  {
    int v17 = 2;
    goto LABEL_5;
  }
  if (v16 <= 1)
  {
    if (v16 == 1)
    {
      int v17 = 0;
      goto LABEL_5;
    }
LABEL_25:
    llvm::report_fatal_error((llvm *)"Unhandled size for stride", (const llvm::Twine *)1);
  }
  switch(v16)
  {
    case 8:
      int v17 = 3;
      break;
    case 2:
      int v17 = 1;
      break;
    case 16:
      int v17 = 4;
      break;
    default:
      goto LABEL_25;
  }
LABEL_5:
  HIDWORD(v34[3]) = v17;
  BYTE8(v34[3]) = 0;
  *(void *)&long long v27 = 0;
  *((void *)&v27 + 1) = 0x200000000;
  *(void *)&long long v28 = 0;
  DWORD2(v29) = 2;
  DWORD2(v28) = 0;
  if (*a1 >= 4u)
  {
    char v25 = BYTE9(v34[3]);
    if (BYTE9(v34[3]) == 1)
    {
      char v25 = BYTE4(v34[3]);
      if (DWORD1(v34[3]) != 3) {
        char v25 = 1;
      }
    }
    else if (BYTE9(v34[3]) != 3)
    {
      goto LABEL_12;
    }
    BYTE8(v34[2]) = v25;
LABEL_12:
    *(void *)((char *)v34 + 4) = 15;
    HIDWORD(v34[1]) = 0;
    *(void *)((char *)&v34[1] + 4) = 0;
    *(void *)((char *)v34 + 12) = 0x100000001;
    LOBYTE(v34[0]) = 0;
    *(void *)&v34[2] = 0x700000000;
    goto LABEL_7;
  }
  HIDWORD(v34[0]) = 0;
  *(void *)((char *)v34 + 4) = 0;
  v34[1] = 1uLL;
  LOBYTE(v34[0]) = 0;
LABEL_7:
  long long v18 = v34[4];
  a4[10] = v34[3];
  a4[11] = v18;
  a4[12] = v34[5];
  *(_OWORD *)((char *)a4 + 204) = *(_OWORD *)((char *)&v34[5] + 12);
  long long v19 = v34[0];
  a4[6] = v33;
  a4[7] = v19;
  long long v20 = v34[2];
  a4[8] = v34[1];
  a4[9] = v20;
  long long v21 = v30;
  a4[2] = v29;
  a4[3] = v21;
  long long v22 = v32;
  a4[4] = v31;
  a4[5] = v22;
  double result = *(double *)&v27;
  long long v24 = v28;
  *a4 = v27;
  a4[1] = v24;
  return result;
}

double sub_1CBD9A604(unsigned int *a1, unsigned __int16 *a2, _DWORD *a3, _OWORD *a4)
{
  *a3 = 123;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Fu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x70u);
  memset(v18, 0, 44);
  long long v17 = 0u;
  sub_1CBD85A80(a1, (uint64_t)a2, v8, (BOOL *)&v18[2] + 9, (int8x8_t *)v18, (uint64_t)v18 + 8);
  uint64_t v11 = *((void *)a2 + 2);
  uint64_t v12 = *(void *)(v11 + 16 * v9 + 8);
  unsigned int v13 = *a1;
  if (*a1 - 3 <= 2) {
    BYTE8(v18[2]) = (v12 & 2) != 0;
  }
  if (*(unsigned char *)(v11 + 16 * v10) == 5) {
    __int16 v14 = 0;
  }
  else {
    __int16 v14 = *(_WORD *)(v11 + 16 * v10 + 8) & 0x3FF;
  }
  LOWORD(v17) = v14;
  if (v13 >= 4) {
    *((void *)&v17 + 1) = 0x7A00000003;
  }
  long long v15 = v18[0];
  DWORD1(v17) = v12 & 1;
  *a4 = v17;
  a4[1] = v15;
  a4[2] = v18[1];
  double result = *(double *)((char *)&v18[1] + 12);
  *(_OWORD *)((char *)a4 + 44) = *(_OWORD *)((char *)&v18[1] + 12);
  return result;
}

double sub_1CBD9A734(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 122;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v9 = sub_1CBDA6464(v7, 0x70u);
  uint64_t v17 = 0;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v14 = 0u;
  sub_1CBD85A80(a1, (uint64_t)a2, v8, (BOOL *)&v17 + 4, (int8x8_t *)((unint64_t)&v14 | 0xC), (uint64_t)&v15 + 4);
  uint64_t v10 = *((void *)a2 + 2);
  if (*(unsigned char *)(v10 + 16 * v9) == 5) {
    __int16 v11 = 0;
  }
  else {
    __int16 v11 = *(_WORD *)(v10 + 16 * v9 + 8) & 0x3FF;
  }
  LOWORD(v14) = v11;
  if (*a1 >= 4u) {
    *(void *)((char *)&v14 + 4) = 0x7900000001;
  }
  long long v12 = v15;
  *(_OWORD *)a4 = v14;
  *(_OWORD *)(a4 + 16) = v12;
  double result = *(double *)&v16;
  *(_OWORD *)(a4 + 32) = v16;
  *(void *)(a4 + 48) = v17;
  return result;
}

double sub_1CBD9A830(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, _OWORD *a4)
{
  *a3 = 4;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Fu);
  long long v18 = 0u;
  long long v19 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  sub_1CBD85A80(a1, (uint64_t)a2, v8, (BOOL *)&v19 + 15, (int8x8_t *)&v16 + 1, (uint64_t)&v17 + 12);
  unint64_t v10 = *(void *)(*((void *)a2 + 2) + 16 * v9 + 8);
  LOBYTE(v17) = (v10 & 0x80) != 0;
  uint64x2_t v11 = (uint64x2_t)vdupq_n_s64(v10);
  int16x8_t v12 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v11, (uint64x2_t)xmmword_1CDF535C0), (int32x4_t)vshlq_u64(v11, (uint64x2_t)xmmword_1CDF535B0));
  *(int8x8_t *)v12.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v12), (int8x8_t)0x1000100010001);
  *(_DWORD *)((char *)&v17 + 1) = vmovn_s16(v12).u32[0];
  DWORD2(v17) = (v10 >> 1) & 7;
  BYTE12(v19) = (v10 & 0x10) != 0;
  BYTE13(v19) = (v10 & 0x20) != 0;
  BYTE14(v19) = (v10 & 0x40) != 0;
  BYTE5(v17) = 1;
  if (*a1 >= 4u) {
    *(void *)&long long v16 = 0x900000003;
  }
  long long v13 = v17;
  *a4 = v16;
  a4[1] = v13;
  double result = *(double *)&v18;
  long long v15 = v19;
  a4[2] = v18;
  a4[3] = v15;
  return result;
}

double sub_1CBD9A960(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, _OWORD *a4)
{
  *a3 = 4;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Fu);
  long long v18 = 0u;
  long long v19 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  sub_1CBD85A80(a1, (uint64_t)a2, v8, (BOOL *)&v19 + 15, (int8x8_t *)&v16 + 1, (uint64_t)&v17 + 12);
  unint64_t v10 = *(void *)(*((void *)a2 + 2) + 16 * v9 + 8);
  uint64x2_t v11 = (uint64x2_t)vdupq_n_s64(v10);
  LOBYTE(v17) = (v10 & 0x80) != 0;
  int16x8_t v12 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v11, (uint64x2_t)xmmword_1CDF535C0), (int32x4_t)vshlq_u64(v11, (uint64x2_t)xmmword_1CDF535B0));
  *(int8x8_t *)v12.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v12), (int8x8_t)0x1000100010001);
  *(_DWORD *)((char *)&v17 + 1) = vmovn_s16(v12).u32[0];
  DWORD2(v17) = (v10 >> 1) & 7;
  BYTE12(v19) = (v10 & 0x10) != 0;
  BYTE13(v19) = (v10 & 0x20) != 0;
  BYTE14(v19) = (v10 & 0x40) != 0;
  BYTE5(v17) = 0;
  if (*a1 >= 4u) {
    *(void *)&long long v16 = 0x900000003;
  }
  long long v13 = v17;
  *a4 = v16;
  a4[1] = v13;
  double result = *(double *)&v18;
  long long v15 = v19;
  a4[2] = v18;
  a4[3] = v15;
  return result;
}

double sub_1CBD9AA8C(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 113;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v9 = sub_1CBDA6464(v7, 0x3Du);
  uint64_t v22 = 0;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v17 = 0u;
  sub_1CBD85A80(a1, (uint64_t)a2, v8, (BOOL *)&v22 + 4, (int8x8_t *)&v19 + 1, (uint64_t)&v20);
  DWORD2(v17) = 5;
  if (*a1 >= 4u) {
    HIDWORD(v17) = 2;
  }
  uint64_t v10 = *((void *)a2 + 2);
  uint64_t v11 = *(void *)(v10 + 16 * v9 + 8);
  if (v11) {
    uint64_t v12 = v11 - 8;
  }
  else {
    uint64_t v12 = 0;
  }
  LOWORD(v17) = *(_WORD *)(*(void *)(v12 + 32) + 16) & 0x1FFF;
  if (v9) {
    int v13 = 1;
  }
  else {
    int v13 = 2;
  }
  unsigned int v14 = *(_DWORD *)(v10 + 16 * (v13 + v9) + 8);
  if (*a1 >= 4u)
  {
    HIDWORD(v18) = 2;
    DWORD1(v19) = 112;
  }
  long long v15 = v20;
  *(_OWORD *)(a4 + 32) = v19;
  *(_OWORD *)(a4 + 48) = v15;
  *(_OWORD *)(a4 + 64) = v21;
  *(void *)(a4 + 80) = v22;
  double result = *(double *)&v17;
  *(_OWORD *)a4 = v17;
  DWORD1(v18) = (v14 >> 20) & 0xF;
  BYTE8(v18) = (v14 & 0x10) != 0;
  *(_OWORD *)(a4 + 16) = v18;
  return result;
}

double sub_1CBD9ABD0(unsigned int *a1, uint64_t a2, _DWORD *a3, _OWORD *a4)
{
  *a3 = 32;
  int v7 = *(_DWORD *)a2;
  int v8 = (unsigned __int16)*(_DWORD *)a2;
  unsigned int v9 = sub_1CBDA6464(v8, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v8, 0x3Du);
  long long v21 = 0u;
  memset(v22, 0, 60);
  long long v20 = 0u;
  sub_1CBD85A80(a1, a2, v9, (BOOL *)&v22[3] + 8, (int8x8_t *)v22 + 1, (uint64_t)&v22[1] + 4);
  DWORD2(v20) = 5;
  unsigned int v11 = *a1;
  if (*a1 >= 4) {
    HIDWORD(v20) = 2;
  }
  uint64_t v12 = *(void *)(a2 + 16);
  uint64_t v13 = *(void *)(v12 + 16 * v10 + 8);
  if (v13) {
    uint64_t v14 = v13 - 8;
  }
  else {
    uint64_t v14 = 0;
  }
  LOWORD(v20) = *(_WORD *)(*(void *)(v14 + 32) + 16) & 0x1FFF;
  int v15 = 1;
  if (v10) {
    int v16 = 1;
  }
  else {
    int v16 = 2;
  }
  unsigned int v17 = *(_DWORD *)(v12 + 16 * (v16 + v10) + 8);
  if (v7 != 566)
  {
    if (v7 == 567)
    {
      LOWORD(v22[1]) = 257;
      if (v11 < 4) {
        goto LABEL_12;
      }
      int v15 = 3;
    }
    else
    {
      LOWORD(v22[1]) = 256;
      if (v11 < 4) {
        goto LABEL_12;
      }
      int v15 = 2;
    }
    goto LABEL_11;
  }
  LOWORD(v22[1]) = 1;
  if (v11 >= 4)
  {
LABEL_11:
    DWORD1(v22[3]) = v15;
    HIDWORD(v21) = 2;
    DWORD1(v22[0]) = 37;
  }
LABEL_12:
  long long v18 = v22[1];
  a4[2] = v22[0];
  a4[3] = v18;
  a4[4] = v22[2];
  *(_OWORD *)((char *)a4 + 76) = *(_OWORD *)((char *)&v22[2] + 12);
  double result = *(double *)&v20;
  *a4 = v20;
  DWORD1(v21) = (v17 >> 20) & 0xF;
  BYTE8(v21) = (v17 & 0x10) != 0;
  a4[1] = v21;
  return result;
}

__n128 sub_1CBD9AD60(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 174;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x54u);
  unsigned int v11 = sub_1CBDA6464(v7, 0x11u);
  unsigned int v12 = sub_1CBDA6464(v7, 4u);
  long long v26 = 0u;
  long long v27 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  __n128 v20 = 0u;
  long long v21 = 0u;
  long long v19 = 0u;
  sub_1CBD85EB8((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v19);
  uint64_t v13 = *((void *)a2 + 2);
  v20.n128_u8[0] = (*(unsigned char *)(v13 + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, (BOOL *)&v27 + 12, (int8x8_t *)((char *)&v24 + 12), (uint64_t)&v25 + 12);
  uint64_t v14 = *(void *)(v13 + 16 * v10 + 8);
  DWORD1(v25) = dword_1CDF536A4[(v14 & 0xF) - 8];
  BYTE8(v25) = (v14 & 0x10) != 0;
  sub_1CBD86608((uint64_t)a1, (uint64_t)a2, v11, (uint64_t)&v20.n128_i64[1] + 4);
  sub_1CBD86608((uint64_t)a1, (uint64_t)a2, v12, (uint64_t)&v22 + 8);
  if (*a1 >= 4u)
  {
    if ((DWORD2(v19) - 2) <= 3) {
      DWORD1(v24) = dword_1CDF53620[DWORD2(v19) - 2];
    }
    DWORD2(v24) = 157;
  }
  long long v15 = v26;
  *(_OWORD *)(a4 + 96) = v25;
  *(_OWORD *)(a4 + 112) = v15;
  *(_OWORD *)(a4 + 128) = v27;
  long long v16 = v22;
  *(_OWORD *)(a4 + 32) = v21;
  *(_OWORD *)(a4 + 48) = v16;
  long long v17 = v24;
  *(_OWORD *)(a4 + 64) = v23;
  *(_OWORD *)(a4 + 80) = v17;
  __n128 result = v20;
  *(_OWORD *)a4 = v19;
  *(__n128 *)(a4 + 16) = result;
  return result;
}

__n128 sub_1CBD9AF1C(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 176;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x42u);
  unsigned int v11 = sub_1CBDA6464(v7, 0x43u);
  unsigned int v18 = sub_1CBDA6464(v7, 0x45u);
  uint64_t v29 = 0;
  unsigned int v12 = sub_1CBDA6464(v7, 0x46u);
  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v21 = 0u;
  __n128 v22 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  sub_1CBD85EB8((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v19);
  LOBYTE(v20) = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, (BOOL *)&v29 + 4, (int8x8_t *)&v26 + 1, (uint64_t)&v27);
  sub_1CBD88E08((uint64_t)a1, a2, v10, (uint64_t)&v20 + 12);
  if (DWORD1(v21) == 1) {
    *(void *)((char *)&v21 + 4) = 0x200000001;
  }
  sub_1CBD88E08((uint64_t)a1, a2, v11, (uint64_t)&v22.n128_i64[1]);
  if (v23 == 1) {
    *(void *)&long long v23 = 0x200000001;
  }
  sub_1CBD86608((uint64_t)a1, (uint64_t)a2, v18, (uint64_t)&v24 + 4);
  if ((*(void *)(*((void *)a2 + 2) + 16 * v12 + 8) & 7uLL) - 1 <= 4) {
    LODWORD(v29) = (*(_DWORD *)(*((void *)a2 + 2) + 16 * v12 + 8) & 7) - 1;
  }
  if (*a1 >= 4u)
  {
    if ((DWORD2(v19) - 2) <= 3) {
      LODWORD(v26) = dword_1CDF53620[DWORD2(v19) - 2];
    }
    DWORD1(v26) = 159;
  }
  long long v13 = v28;
  *(_OWORD *)(a4 + 128) = v27;
  *(_OWORD *)(a4 + 144) = v13;
  *(void *)(a4 + 160) = v29;
  long long v14 = v24;
  *(_OWORD *)(a4 + 64) = v23;
  *(_OWORD *)(a4 + 80) = v14;
  long long v15 = v26;
  *(_OWORD *)(a4 + 96) = v25;
  *(_OWORD *)(a4 + 112) = v15;
  long long v16 = v20;
  *(_OWORD *)a4 = v19;
  *(_OWORD *)(a4 + 16) = v16;
  __n128 result = v22;
  *(_OWORD *)(a4 + 32) = v21;
  *(__n128 *)(a4 + 48) = result;
  return result;
}

__n128 sub_1CBD9B134(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 175;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x42u);
  unsigned int v11 = sub_1CBDA6464(v7, 0x43u);
  unsigned int v18 = sub_1CBDA6464(v7, 0x45u);
  uint64_t v29 = 0;
  unsigned int v12 = sub_1CBDA6464(v7, 0x46u);
  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v21 = 0u;
  __n128 v22 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  sub_1CBD85EB8((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v19);
  LOBYTE(v20) = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, (BOOL *)&v29 + 4, (int8x8_t *)&v26 + 1, (uint64_t)&v27);
  sub_1CBD88E08((uint64_t)a1, a2, v10, (uint64_t)&v20 + 12);
  if (DWORD1(v21) == 1) {
    *(void *)((char *)&v21 + 4) = 0x200000001;
  }
  sub_1CBD88E08((uint64_t)a1, a2, v11, (uint64_t)&v22.n128_i64[1]);
  if (v23 == 1) {
    *(void *)&long long v23 = 0x200000001;
  }
  sub_1CBD86608((uint64_t)a1, (uint64_t)a2, v18, (uint64_t)&v24 + 4);
  if ((*(void *)(*((void *)a2 + 2) + 16 * v12 + 8) & 7uLL) - 1 <= 4) {
    LODWORD(v29) = (*(_DWORD *)(*((void *)a2 + 2) + 16 * v12 + 8) & 7) - 1;
  }
  if (*a1 >= 4u)
  {
    if ((DWORD2(v19) - 2) <= 3) {
      LODWORD(v26) = dword_1CDF53620[DWORD2(v19) - 2];
    }
    DWORD1(v26) = 158;
  }
  long long v13 = v28;
  *(_OWORD *)(a4 + 128) = v27;
  *(_OWORD *)(a4 + 144) = v13;
  *(void *)(a4 + 160) = v29;
  long long v14 = v24;
  *(_OWORD *)(a4 + 64) = v23;
  *(_OWORD *)(a4 + 80) = v14;
  long long v15 = v26;
  *(_OWORD *)(a4 + 96) = v25;
  *(_OWORD *)(a4 + 112) = v15;
  long long v16 = v20;
  *(_OWORD *)a4 = v19;
  *(_OWORD *)(a4 + 16) = v16;
  __n128 result = v22;
  *(_OWORD *)(a4 + 32) = v21;
  *(__n128 *)(a4 + 48) = result;
  return result;
}

__n128 sub_1CBD9B34C(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 39;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x42u);
  unsigned int v11 = sub_1CBDA6464(v7, 0x43u);
  unsigned int v12 = sub_1CBDA6464(v7, 0x44u);
  unsigned int v22 = sub_1CBDA6464(v7, 0x45u);
  unsigned int v23 = sub_1CBDA6464(v7, 0x19u);
  unsigned int v24 = sub_1CBDA6464(v7, 0x1Au);
  uint64_t v39 = 0;
  unsigned int v13 = sub_1CBDA6464(v7, 0x46u);
  long long v37 = 0u;
  long long v38 = 0u;
  long long v35 = 0u;
  long long v36 = 0u;
  long long v33 = 0u;
  long long v34 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  long long v27 = 0u;
  __n128 v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  sub_1CBD9B5F4((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v25);
  LOBYTE(v26) = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, (BOOL *)&v39 + 4, (int8x8_t *)((char *)&v36 + 4), (uint64_t)&v36 + 12);
  sub_1CBD88E08((uint64_t)a1, a2, v10, (uint64_t)&v30 + 8);
  if (v31 == 1) {
    *(void *)&long long v31 = 0x200000001;
  }
  sub_1CBD88E08((uint64_t)a1, a2, v11, (uint64_t)&v32 + 4);
  if (HIDWORD(v32) == 1) {
    LODWORD(v33) = 2;
  }
  char v14 = *(unsigned char *)(*((void *)a2 + 2) + 16 * v12 + 8);
  BYTE12(v38) = (v14 & 4) != 0;
  BYTE13(v38) = (v14 & 2) != 0;
  BYTE14(v38) = v14 & 1;
  sub_1CBD86608((uint64_t)a1, (uint64_t)a2, v22, (uint64_t)&v34);
  sub_1CBD8F254((uint64_t)a1, a2, v23, (uint64_t)&v27);
  sub_1CBD8F254((uint64_t)a1, a2, v24, (uint64_t)&v28.n128_i64[1] + 4);
  if ((*(void *)(*((void *)a2 + 2) + 16 * v13 + 8) & 7uLL) - 1 <= 4) {
    LODWORD(v39) = (*(_DWORD *)(*((void *)a2 + 2) + 16 * v13 + 8) & 7) - 1;
  }
  if (*a1 >= 4u)
  {
    if ((DWORD2(v25) - 2) <= 3) {
      HIDWORD(v35) = dword_1CDF53620[DWORD2(v25) - 2];
    }
    LODWORD(v36) = 44;
  }
  long long v15 = v38;
  *(_OWORD *)(a4 + 192) = v37;
  *(_OWORD *)(a4 + 208) = v15;
  *(void *)(a4 + 224) = v39;
  long long v16 = v34;
  *(_OWORD *)(a4 + 128) = v33;
  *(_OWORD *)(a4 + 144) = v16;
  long long v17 = v36;
  *(_OWORD *)(a4 + 160) = v35;
  *(_OWORD *)(a4 + 176) = v17;
  long long v18 = v30;
  *(_OWORD *)(a4 + 64) = v29;
  *(_OWORD *)(a4 + 80) = v18;
  long long v19 = v32;
  *(_OWORD *)(a4 + 96) = v31;
  *(_OWORD *)(a4 + 112) = v19;
  long long v20 = v26;
  *(_OWORD *)a4 = v25;
  *(_OWORD *)(a4 + 16) = v20;
  __n128 result = v28;
  *(_OWORD *)(a4 + 32) = v27;
  *(__n128 *)(a4 + 48) = result;
  return result;
}

void sub_1CBD9B5F4(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  sub_1CBD8F178(a1, a2, a3, a4);
  long long v11 = *(_OWORD *)a2;
  unsigned int v12 = v14;
  uint64_t v13 = 0x800000000;
  unsigned int v7 = *(_DWORD *)(a2 + 24);
  if (v7) {
    BOOL v8 = &v11 == (long long *)a2;
  }
  else {
    BOOL v8 = 1;
  }
  if (v8)
  {
    unsigned int v9 = v14;
  }
  else
  {
    if (v7 >= 9) {
      llvm::SmallVectorBase<unsigned int>::grow_pod();
    }
    memcpy(v14, *(const void **)(a2 + 16), 16 * *(unsigned int *)(a2 + 24));
    unsigned int v9 = v12;
    LODWORD(v13) = v7;
  }
  v14[128] = *(unsigned char *)(a2 + 160);
  int v10 = 1;
  if (v9[16 * a3] == 5)
  {
    if (**(unsigned char **)&v9[16 * a3 + 8] == 4) {
      int v10 = 2;
    }
    else {
      int v10 = 1;
    }
  }
  *(unsigned char *)(a4 + 28) = v9[16 * v10 + 8 + 16 * a3] & 1;
  if (v9 != v14) {
    free(v9);
  }
}

__n128 sub_1CBD9B738(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 38;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x42u);
  unsigned int v11 = sub_1CBDA6464(v7, 0x43u);
  unsigned int v12 = sub_1CBDA6464(v7, 0x44u);
  unsigned int v22 = sub_1CBDA6464(v7, 0x45u);
  unsigned int v23 = sub_1CBDA6464(v7, 0x19u);
  unsigned int v24 = sub_1CBDA6464(v7, 0x1Au);
  uint64_t v39 = 0;
  unsigned int v13 = sub_1CBDA6464(v7, 0x46u);
  long long v37 = 0u;
  long long v38 = 0u;
  long long v35 = 0u;
  long long v36 = 0u;
  long long v33 = 0u;
  long long v34 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  long long v27 = 0u;
  __n128 v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  sub_1CBD9B5F4((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v25);
  LOBYTE(v26) = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, (BOOL *)&v39 + 4, (int8x8_t *)((char *)&v36 + 4), (uint64_t)&v36 + 12);
  sub_1CBD88E08((uint64_t)a1, a2, v10, (uint64_t)&v30 + 8);
  if (v31 == 1) {
    *(void *)&long long v31 = 0x200000001;
  }
  sub_1CBD88E08((uint64_t)a1, a2, v11, (uint64_t)&v32 + 4);
  if (HIDWORD(v32) == 1) {
    LODWORD(v33) = 2;
  }
  char v14 = *(unsigned char *)(*((void *)a2 + 2) + 16 * v12 + 8);
  BYTE12(v38) = (v14 & 4) != 0;
  BYTE13(v38) = (v14 & 2) != 0;
  BYTE14(v38) = v14 & 1;
  sub_1CBD86608((uint64_t)a1, (uint64_t)a2, v22, (uint64_t)&v34);
  sub_1CBD8F254((uint64_t)a1, a2, v23, (uint64_t)&v27);
  sub_1CBD8F254((uint64_t)a1, a2, v24, (uint64_t)&v28.n128_i64[1] + 4);
  if ((*(void *)(*((void *)a2 + 2) + 16 * v13 + 8) & 7uLL) - 1 <= 4) {
    LODWORD(v39) = (*(_DWORD *)(*((void *)a2 + 2) + 16 * v13 + 8) & 7) - 1;
  }
  if (*a1 >= 4u)
  {
    if ((DWORD2(v25) - 2) <= 3) {
      HIDWORD(v35) = dword_1CDF53620[DWORD2(v25) - 2];
    }
    LODWORD(v36) = 43;
  }
  long long v15 = v38;
  *(_OWORD *)(a4 + 192) = v37;
  *(_OWORD *)(a4 + 208) = v15;
  *(void *)(a4 + 224) = v39;
  long long v16 = v34;
  *(_OWORD *)(a4 + 128) = v33;
  *(_OWORD *)(a4 + 144) = v16;
  long long v17 = v36;
  *(_OWORD *)(a4 + 160) = v35;
  *(_OWORD *)(a4 + 176) = v17;
  long long v18 = v30;
  *(_OWORD *)(a4 + 64) = v29;
  *(_OWORD *)(a4 + 80) = v18;
  long long v19 = v32;
  *(_OWORD *)(a4 + 96) = v31;
  *(_OWORD *)(a4 + 112) = v19;
  long long v20 = v26;
  *(_OWORD *)a4 = v25;
  *(_OWORD *)(a4 + 16) = v20;
  __n128 result = v28;
  *(_OWORD *)(a4 + 32) = v27;
  *(__n128 *)(a4 + 48) = result;
  return result;
}

double sub_1CBD9B9E0(uint64_t a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 52;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x42u);
  unsigned int v11 = sub_1CBDA6464(v7, 0x43u);
  unsigned int v12 = sub_1CBDA6464(v7, 0x44u);
  unsigned int v27 = sub_1CBDA6464(v7, 0x45u);
  unsigned int v28 = sub_1CBDA6464(v7, 0x19u);
  unsigned int v29 = sub_1CBDA6464(v7, 0x1Au);
  unsigned int v26 = sub_1CBDA6464(v7, 0x48u);
  int v45 = 0;
  unsigned int v13 = sub_1CBDA6464(v7, 0x46u);
  long long v43 = 0u;
  long long v44 = 0u;
  long long v41 = 0u;
  long long v42 = 0u;
  long long v39 = 0u;
  long long v40 = 0u;
  long long v37 = 0u;
  long long v38 = 0u;
  long long v35 = 0u;
  long long v36 = 0u;
  long long v33 = 0u;
  long long v34 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  long long v30 = 0u;
  sub_1CBD8C5F0(a1, (uint64_t)a2, v8, (uint64_t)&v30);
  LOBYTE(v31) = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80((_DWORD *)a1, (uint64_t)a2, v9, (BOOL *)&v44 + 12, (int8x8_t *)&v41 + 1, (uint64_t)&v42 + 4);
  sub_1CBD88E08(a1, a2, v10, (uint64_t)&v35 + 12);
  if (DWORD1(v36) == 1) {
    *(void *)((char *)&v36 + 4) = 0x200000001;
  }
  sub_1CBD88E08(a1, a2, v11, (uint64_t)&v37 + 8);
  if (v38 == 1) {
    *(void *)&long long v38 = 0x200000001;
  }
  char v14 = *(unsigned char *)(*((void *)a2 + 2) + 16 * v12 + 8);
  BYTE4(v44) = (v14 & 4) != 0;
  BYTE5(v44) = (v14 & 2) != 0;
  BYTE6(v44) = v14 & 1;
  sub_1CBD86608(a1, (uint64_t)a2, v27, (uint64_t)&v39 + 4);
  sub_1CBD8C148(a1, (uint64_t)a2, v28, (uint64_t)&v32 + 4);
  sub_1CBD8C148(a1, (uint64_t)a2, v29, (uint64_t)&v34);
  uint64_t v15 = *((void *)a2 + 2);
  LODWORD(v42) = *(void *)(v15 + 16 * v26 + 8);
  unint64_t v16 = (*(void *)(v15 + 16 * v13 + 8) & 7) - 1;
  if (v16 <= 4) {
    DWORD2(v44) = v16;
  }
  if (*(_DWORD *)a1 >= 5u)
  {
    int v45 = 1;
    if ((*(unsigned char *)(*(void *)(a1 + 8) + 196) & 2) != 0)
    {
      uint64_t v17 = sub_1CBE52E8C(*(_DWORD *)a2);
      if ((v17 & 0xFF00000000) == 0 || v17 != 47) {
        int v45 = 0;
      }
    }
  }
  else if (*(_DWORD *)a1 != 4)
  {
    goto LABEL_17;
  }
  if ((DWORD2(v30) - 2) <= 3) {
    LODWORD(v41) = dword_1CDF53620[DWORD2(v30) - 2];
  }
  DWORD1(v41) = 57;
LABEL_17:
  long long v18 = v43;
  *(_OWORD *)(a4 + 192) = v42;
  *(_OWORD *)(a4 + 208) = v18;
  *(_OWORD *)(a4 + 224) = v44;
  *(_DWORD *)(a4 + 240) = v45;
  long long v19 = v39;
  *(_OWORD *)(a4 + 128) = v38;
  *(_OWORD *)(a4 + 144) = v19;
  long long v20 = v41;
  *(_OWORD *)(a4 + 160) = v40;
  *(_OWORD *)(a4 + 176) = v20;
  long long v21 = v35;
  *(_OWORD *)(a4 + 64) = v34;
  *(_OWORD *)(a4 + 80) = v21;
  long long v22 = v37;
  *(_OWORD *)(a4 + 96) = v36;
  *(_OWORD *)(a4 + 112) = v22;
  long long v23 = v31;
  *(_OWORD *)a4 = v30;
  *(_OWORD *)(a4 + 16) = v23;
  double result = *(double *)&v32;
  long long v25 = v33;
  *(_OWORD *)(a4 + 32) = v32;
  *(_OWORD *)(a4 + 48) = v25;
  return result;
}

double sub_1CBD9BCF8(uint64_t a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 51;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x42u);
  unsigned int v11 = sub_1CBDA6464(v7, 0x43u);
  unsigned int v12 = sub_1CBDA6464(v7, 0x44u);
  unsigned int v27 = sub_1CBDA6464(v7, 0x45u);
  unsigned int v28 = sub_1CBDA6464(v7, 0x19u);
  unsigned int v29 = sub_1CBDA6464(v7, 0x1Au);
  unsigned int v26 = sub_1CBDA6464(v7, 0x48u);
  int v45 = 0;
  unsigned int v13 = sub_1CBDA6464(v7, 0x46u);
  long long v43 = 0u;
  long long v44 = 0u;
  long long v41 = 0u;
  long long v42 = 0u;
  long long v39 = 0u;
  long long v40 = 0u;
  long long v37 = 0u;
  long long v38 = 0u;
  long long v35 = 0u;
  long long v36 = 0u;
  long long v33 = 0u;
  long long v34 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  long long v30 = 0u;
  sub_1CBD8C5F0(a1, (uint64_t)a2, v8, (uint64_t)&v30);
  LOBYTE(v31) = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80((_DWORD *)a1, (uint64_t)a2, v9, (BOOL *)&v44 + 12, (int8x8_t *)&v41 + 1, (uint64_t)&v42 + 4);
  sub_1CBD88E08(a1, a2, v10, (uint64_t)&v35 + 12);
  if (DWORD1(v36) == 1) {
    *(void *)((char *)&v36 + 4) = 0x200000001;
  }
  sub_1CBD88E08(a1, a2, v11, (uint64_t)&v37 + 8);
  if (v38 == 1) {
    *(void *)&long long v38 = 0x200000001;
  }
  char v14 = *(unsigned char *)(*((void *)a2 + 2) + 16 * v12 + 8);
  BYTE4(v44) = (v14 & 4) != 0;
  BYTE5(v44) = (v14 & 2) != 0;
  BYTE6(v44) = v14 & 1;
  sub_1CBD86608(a1, (uint64_t)a2, v27, (uint64_t)&v39 + 4);
  sub_1CBD8C148(a1, (uint64_t)a2, v28, (uint64_t)&v32 + 4);
  sub_1CBD8C148(a1, (uint64_t)a2, v29, (uint64_t)&v34);
  uint64_t v15 = *((void *)a2 + 2);
  LODWORD(v42) = *(void *)(v15 + 16 * v26 + 8);
  unint64_t v16 = (*(void *)(v15 + 16 * v13 + 8) & 7) - 1;
  if (v16 <= 4) {
    DWORD2(v44) = v16;
  }
  if (*(_DWORD *)a1 >= 5u)
  {
    int v45 = 1;
    if ((*(unsigned char *)(*(void *)(a1 + 8) + 196) & 2) != 0)
    {
      uint64_t v25 = sub_1CBE52E8C(*(_DWORD *)a2);
      if ((v25 & 0xFF00000000) == 0 || v25 != 47) {
        int v45 = 0;
      }
    }
  }
  else if (*(_DWORD *)a1 != 4)
  {
    goto LABEL_9;
  }
  if ((DWORD2(v30) - 2) <= 3) {
    LODWORD(v41) = dword_1CDF53620[DWORD2(v30) - 2];
  }
  DWORD1(v41) = 56;
LABEL_9:
  long long v17 = v43;
  *(_OWORD *)(a4 + 192) = v42;
  *(_OWORD *)(a4 + 208) = v17;
  *(_OWORD *)(a4 + 224) = v44;
  *(_DWORD *)(a4 + 240) = v45;
  long long v18 = v39;
  *(_OWORD *)(a4 + 128) = v38;
  *(_OWORD *)(a4 + 144) = v18;
  long long v19 = v41;
  *(_OWORD *)(a4 + 160) = v40;
  *(_OWORD *)(a4 + 176) = v19;
  long long v20 = v35;
  *(_OWORD *)(a4 + 64) = v34;
  *(_OWORD *)(a4 + 80) = v20;
  long long v21 = v37;
  *(_OWORD *)(a4 + 96) = v36;
  *(_OWORD *)(a4 + 112) = v21;
  long long v22 = v31;
  *(_OWORD *)a4 = v30;
  *(_OWORD *)(a4 + 16) = v22;
  double result = *(double *)&v32;
  long long v24 = v33;
  *(_OWORD *)(a4 + 32) = v32;
  *(_OWORD *)(a4 + 48) = v24;
  return result;
}

__n128 sub_1CBD9C010(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 138;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x42u);
  unsigned int v10 = sub_1CBDA6464(v7, 0x45u);
  unsigned int v11 = sub_1CBDA6464(v7, 0x2Eu);
  uint64_t v24 = 0;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v16 = 0u;
  __n128 v17 = 0u;
  sub_1CBD85EB8((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v16);
  sub_1CBD88E08((uint64_t)a1, a2, v9, (uint64_t)&v17.n128_i64[1] + 4);
  if (DWORD1(v18) == 1) {
    *(void *)((char *)&v18 + 4) = 0x200000001;
  }
  sub_1CBD88E08((uint64_t)a1, a2, v10, (uint64_t)&v19 + 8);
  v17.n128_u8[0] = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v11 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v11, (BOOL *)&v24 + 4, (int8x8_t *)((char *)&v21 + 12), (uint64_t)&v22 + 4);
  if (*a1 >= 4u)
  {
    if ((DWORD2(v16) - 2) <= 3) {
      DWORD1(v21) = dword_1CDF53620[DWORD2(v16) - 2];
    }
    DWORD2(v21) = 137;
  }
  long long v12 = v23;
  *(_OWORD *)(a4 + 96) = v22;
  *(_OWORD *)(a4 + 112) = v12;
  *(void *)(a4 + 128) = v24;
  long long v13 = v19;
  *(_OWORD *)(a4 + 32) = v18;
  *(_OWORD *)(a4 + 48) = v13;
  long long v14 = v21;
  *(_OWORD *)(a4 + 64) = v20;
  *(_OWORD *)(a4 + 80) = v14;
  __n128 result = v17;
  *(_OWORD *)a4 = v16;
  *(__n128 *)(a4 + 16) = result;
  return result;
}

__n128 sub_1CBD9C1A0(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 143;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x42u);
  unsigned int v10 = sub_1CBDA6464(v7, 0x45u);
  unsigned int v11 = sub_1CBDA6464(v7, 0x2Eu);
  uint64_t v24 = 0;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v16 = 0u;
  __n128 v17 = 0u;
  sub_1CBD85EB8((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v16);
  sub_1CBD88E08((uint64_t)a1, a2, v9, (uint64_t)&v17.n128_i64[1] + 4);
  if (DWORD1(v18) == 1) {
    *(void *)((char *)&v18 + 4) = 0x200000001;
  }
  sub_1CBD88E08((uint64_t)a1, a2, v10, (uint64_t)&v19 + 8);
  v17.n128_u8[0] = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v11 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v11, (BOOL *)&v24 + 4, (int8x8_t *)((char *)&v21 + 12), (uint64_t)&v22 + 4);
  if (*a1 >= 4u)
  {
    if ((DWORD2(v16) - 2) <= 3) {
      DWORD1(v21) = dword_1CDF53620[DWORD2(v16) - 2];
    }
    DWORD2(v21) = 142;
  }
  long long v12 = v23;
  *(_OWORD *)(a4 + 96) = v22;
  *(_OWORD *)(a4 + 112) = v12;
  *(void *)(a4 + 128) = v24;
  long long v13 = v19;
  *(_OWORD *)(a4 + 32) = v18;
  *(_OWORD *)(a4 + 48) = v13;
  long long v14 = v21;
  *(_OWORD *)(a4 + 64) = v20;
  *(_OWORD *)(a4 + 80) = v14;
  __n128 result = v17;
  *(_OWORD *)a4 = v16;
  *(__n128 *)(a4 + 16) = result;
  return result;
}

__n128 sub_1CBD9C330(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 171;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x42u);
  unsigned int v10 = sub_1CBDA6464(v7, 0x45u);
  unsigned int v11 = sub_1CBDA6464(v7, 0x2Eu);
  uint64_t v24 = 0;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v16 = 0u;
  __n128 v17 = 0u;
  sub_1CBD85EB8((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v16);
  sub_1CBD88E08((uint64_t)a1, a2, v9, (uint64_t)&v17.n128_i64[1] + 4);
  if (DWORD1(v18) == 1) {
    *(void *)((char *)&v18 + 4) = 0x200000001;
  }
  sub_1CBD88E08((uint64_t)a1, a2, v10, (uint64_t)&v19 + 8);
  v17.n128_u8[0] = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v11 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v11, (BOOL *)&v24 + 4, (int8x8_t *)((char *)&v21 + 12), (uint64_t)&v22 + 4);
  if (*a1 >= 4u)
  {
    if ((DWORD2(v16) - 2) <= 3) {
      DWORD1(v21) = dword_1CDF53620[DWORD2(v16) - 2];
    }
    DWORD2(v21) = 154;
  }
  long long v12 = v23;
  *(_OWORD *)(a4 + 96) = v22;
  *(_OWORD *)(a4 + 112) = v12;
  *(void *)(a4 + 128) = v24;
  long long v13 = v19;
  *(_OWORD *)(a4 + 32) = v18;
  *(_OWORD *)(a4 + 48) = v13;
  long long v14 = v21;
  *(_OWORD *)(a4 + 64) = v20;
  *(_OWORD *)(a4 + 80) = v14;
  __n128 result = v17;
  *(_OWORD *)a4 = v16;
  *(__n128 *)(a4 + 16) = result;
  return result;
}

__n128 sub_1CBD9C4C4(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 172;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x42u);
  unsigned int v10 = sub_1CBDA6464(v7, 0x45u);
  unsigned int v11 = sub_1CBDA6464(v7, 0x2Eu);
  uint64_t v24 = 0;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v16 = 0u;
  __n128 v17 = 0u;
  sub_1CBD85EB8((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v16);
  sub_1CBD88E08((uint64_t)a1, a2, v9, (uint64_t)&v17.n128_i64[1] + 4);
  if (DWORD1(v18) == 1) {
    *(void *)((char *)&v18 + 4) = 0x200000001;
  }
  sub_1CBD88E08((uint64_t)a1, a2, v10, (uint64_t)&v19 + 8);
  v17.n128_u8[0] = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v11 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v11, (BOOL *)&v24 + 4, (int8x8_t *)((char *)&v21 + 12), (uint64_t)&v22 + 4);
  if (*a1 >= 4u)
  {
    if ((DWORD2(v16) - 2) <= 3) {
      DWORD1(v21) = dword_1CDF53620[DWORD2(v16) - 2];
    }
    DWORD2(v21) = 155;
  }
  long long v12 = v23;
  *(_OWORD *)(a4 + 96) = v22;
  *(_OWORD *)(a4 + 112) = v12;
  *(void *)(a4 + 128) = v24;
  long long v13 = v19;
  *(_OWORD *)(a4 + 32) = v18;
  *(_OWORD *)(a4 + 48) = v13;
  long long v14 = v21;
  *(_OWORD *)(a4 + 64) = v20;
  *(_OWORD *)(a4 + 80) = v14;
  __n128 result = v17;
  *(_OWORD *)a4 = v16;
  *(__n128 *)(a4 + 16) = result;
  return result;
}

__n128 sub_1CBD9C654(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 178;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x42u);
  unsigned int v10 = sub_1CBDA6464(v7, 0x45u);
  unsigned int v11 = sub_1CBDA6464(v7, 0x2Eu);
  uint64_t v24 = 0;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v16 = 0u;
  __n128 v17 = 0u;
  sub_1CBD85EB8((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v16);
  sub_1CBD88E08((uint64_t)a1, a2, v9, (uint64_t)&v17.n128_i64[1] + 4);
  if (DWORD1(v18) == 1) {
    *(void *)((char *)&v18 + 4) = 0x200000001;
  }
  sub_1CBD88E08((uint64_t)a1, a2, v10, (uint64_t)&v19 + 8);
  v17.n128_u8[0] = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v11 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v11, (BOOL *)&v24 + 4, (int8x8_t *)((char *)&v21 + 12), (uint64_t)&v22 + 4);
  if (*a1 >= 4u)
  {
    if ((DWORD2(v16) - 2) <= 3) {
      DWORD1(v21) = dword_1CDF53620[DWORD2(v16) - 2];
    }
    DWORD2(v21) = 161;
  }
  long long v12 = v23;
  *(_OWORD *)(a4 + 96) = v22;
  *(_OWORD *)(a4 + 112) = v12;
  *(void *)(a4 + 128) = v24;
  long long v13 = v19;
  *(_OWORD *)(a4 + 32) = v18;
  *(_OWORD *)(a4 + 48) = v13;
  long long v14 = v21;
  *(_OWORD *)(a4 + 64) = v20;
  *(_OWORD *)(a4 + 80) = v14;
  __n128 result = v17;
  *(_OWORD *)a4 = v16;
  *(__n128 *)(a4 + 16) = result;
  return result;
}

__n128 sub_1CBD9C7E4(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 133;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x18u);
  unsigned int v10 = sub_1CBDA6464(v7, 0x2Eu);
  long long v19 = 0u;
  memset(v20, 0, 60);
  long long v17 = 0u;
  long long v18 = 0u;
  long long v15 = 0u;
  __n128 v16 = 0u;
  sub_1CBD85EB8((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v15);
  sub_1CBD86608((uint64_t)a1, (uint64_t)a2, v9, (uint64_t)&v16.n128_i64[1] + 4);
  v16.n128_u8[0] = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v10 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v10, (BOOL *)&v20[3] + 8, (int8x8_t *)((char *)v20 + 12), (uint64_t)&v20[1] + 8);
  if (DWORD1(v17) == 1) {
    DWORD2(v17) = HIDWORD(v15);
  }
  DWORD1(v20[1]) = sub_1CBDB2780(*(unsigned int *)a2, 41, 0) == 67;
  if (*a1 <= 3u)
  {
    *(void *)&long long v19 = 0x100000001;
    WORD4(v18) = 1;
  }
  else
  {
    *((void *)&v18 + 1) = 0;
    long long v19 = 0uLL;
    LODWORD(v20[0]) = 0;
    if ((DWORD2(v15) - 2) <= 3) {
      DWORD1(v20[0]) = dword_1CDF53620[DWORD2(v15) - 2];
    }
    DWORD2(v20[0]) = 130;
  }
  long long v11 = v20[2];
  *(_OWORD *)(a4 + 96) = v20[1];
  *(_OWORD *)(a4 + 112) = v11;
  *(_OWORD *)(a4 + 124) = *(_OWORD *)((char *)&v20[2] + 12);
  long long v12 = v18;
  *(_OWORD *)(a4 + 32) = v17;
  *(_OWORD *)(a4 + 48) = v12;
  long long v13 = v20[0];
  *(_OWORD *)(a4 + 64) = v19;
  *(_OWORD *)(a4 + 80) = v13;
  __n128 result = v16;
  *(_OWORD *)a4 = v15;
  *(__n128 *)(a4 + 16) = result;
  return result;
}

__n128 sub_1CBD9C990(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 156;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x18u);
  unsigned int v10 = sub_1CBDA6464(v7, 0x2Eu);
  long long v19 = 0u;
  memset(v20, 0, 60);
  long long v17 = 0u;
  long long v18 = 0u;
  long long v15 = 0u;
  __n128 v16 = 0u;
  sub_1CBD85EB8((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v15);
  sub_1CBD86608((uint64_t)a1, (uint64_t)a2, v9, (uint64_t)&v16.n128_i64[1] + 4);
  v16.n128_u8[0] = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v10 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v10, (BOOL *)&v20[3] + 8, (int8x8_t *)((char *)v20 + 12), (uint64_t)&v20[1] + 8);
  if (DWORD1(v17) == 1) {
    DWORD2(v17) = HIDWORD(v15);
  }
  DWORD1(v20[1]) = sub_1CBDB2780(*(unsigned int *)a2, 41, 0) == 67;
  if (*a1 <= 3u)
  {
    *(void *)&long long v19 = 0x100000001;
    WORD4(v18) = 1;
  }
  else
  {
    *((void *)&v18 + 1) = 0;
    long long v19 = 0uLL;
    LODWORD(v20[0]) = 0;
    if ((DWORD2(v15) - 2) <= 3) {
      DWORD1(v20[0]) = dword_1CDF53620[DWORD2(v15) - 2];
    }
    DWORD2(v20[0]) = 176;
  }
  long long v11 = v20[2];
  *(_OWORD *)(a4 + 96) = v20[1];
  *(_OWORD *)(a4 + 112) = v11;
  *(_OWORD *)(a4 + 124) = *(_OWORD *)((char *)&v20[2] + 12);
  long long v12 = v18;
  *(_OWORD *)(a4 + 32) = v17;
  *(_OWORD *)(a4 + 48) = v12;
  long long v13 = v20[0];
  *(_OWORD *)(a4 + 64) = v19;
  *(_OWORD *)(a4 + 80) = v13;
  __n128 result = v16;
  *(_OWORD *)a4 = v15;
  *(__n128 *)(a4 + 16) = result;
  return result;
}

__n128 sub_1CBD9CB3C(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 157;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x18u);
  unsigned int v10 = sub_1CBDA6464(v7, 0x2Eu);
  long long v19 = 0u;
  memset(v20, 0, 60);
  long long v17 = 0u;
  long long v18 = 0u;
  long long v15 = 0u;
  __n128 v16 = 0u;
  sub_1CBD85EB8((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v15);
  sub_1CBD86608((uint64_t)a1, (uint64_t)a2, v9, (uint64_t)&v16.n128_i64[1] + 4);
  v16.n128_u8[0] = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v10 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v10, (BOOL *)&v20[3] + 8, (int8x8_t *)((char *)v20 + 12), (uint64_t)&v20[1] + 8);
  if (DWORD1(v17) == 1) {
    DWORD2(v17) = HIDWORD(v15);
  }
  DWORD1(v20[1]) = sub_1CBDB2780(*(unsigned int *)a2, 41, 0) == 67;
  if (*a1 > 3u)
  {
    *((void *)&v18 + 1) = 0;
    long long v19 = 0uLL;
    LODWORD(v20[0]) = 0;
    if ((DWORD2(v15) - 2) <= 3) {
      DWORD1(v20[0]) = dword_1CDF53620[DWORD2(v15) - 2];
    }
    DWORD2(v20[0]) = 178;
  }
  else
  {
    *(void *)&long long v19 = 0x100000001;
    WORD4(v18) = 1;
  }
  long long v11 = v20[2];
  *(_OWORD *)(a4 + 96) = v20[1];
  *(_OWORD *)(a4 + 112) = v11;
  *(_OWORD *)(a4 + 124) = *(_OWORD *)((char *)&v20[2] + 12);
  long long v12 = v18;
  *(_OWORD *)(a4 + 32) = v17;
  *(_OWORD *)(a4 + 48) = v12;
  long long v13 = v20[0];
  *(_OWORD *)(a4 + 64) = v19;
  *(_OWORD *)(a4 + 80) = v13;
  __n128 result = v16;
  *(_OWORD *)a4 = v15;
  *(__n128 *)(a4 + 16) = result;
  return result;
}

__n128 sub_1CBD9CCE8(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 159;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x18u);
  unsigned int v10 = sub_1CBDA6464(v7, 0x2Eu);
  long long v19 = 0u;
  memset(v20, 0, 60);
  long long v17 = 0u;
  long long v18 = 0u;
  long long v15 = 0u;
  __n128 v16 = 0u;
  sub_1CBD85EB8((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v15);
  sub_1CBD88E08((uint64_t)a1, a2, v9, (uint64_t)&v16.n128_i64[1] + 4);
  if (DWORD1(v17) == 1) {
    *(void *)((char *)&v17 + 4) = 0x200000001;
  }
  v16.n128_u8[0] = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v10 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v10, (BOOL *)&v20[3] + 8, (int8x8_t *)((char *)v20 + 12), (uint64_t)&v20[1] + 8);
  if (DWORD1(v17) == 1) {
    DWORD2(v17) = HIDWORD(v15);
  }
  DWORD1(v20[1]) = sub_1CBDB2780(*(unsigned int *)a2, 41, 0) == 67;
  if (*a1 <= 3u)
  {
    *(void *)&long long v19 = 0x100000001;
    WORD4(v18) = 1;
  }
  else
  {
    *((void *)&v18 + 1) = 0;
    long long v19 = 0uLL;
    LODWORD(v20[0]) = 0;
    if ((DWORD2(v15) - 2) <= 3) {
      DWORD1(v20[0]) = dword_1CDF53620[DWORD2(v15) - 2];
    }
    DWORD2(v20[0]) = 180;
  }
  long long v11 = v20[2];
  *(_OWORD *)(a4 + 96) = v20[1];
  *(_OWORD *)(a4 + 112) = v11;
  *(_OWORD *)(a4 + 124) = *(_OWORD *)((char *)&v20[2] + 12);
  long long v12 = v18;
  *(_OWORD *)(a4 + 32) = v17;
  *(_OWORD *)(a4 + 48) = v12;
  long long v13 = v20[0];
  *(_OWORD *)(a4 + 64) = v19;
  *(_OWORD *)(a4 + 80) = v13;
  __n128 result = v16;
  *(_OWORD *)a4 = v15;
  *(__n128 *)(a4 + 16) = result;
  return result;
}

__n128 sub_1CBD9CEAC(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 158;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x18u);
  unsigned int v10 = sub_1CBDA6464(v7, 0x2Eu);
  long long v19 = 0u;
  memset(v20, 0, 60);
  long long v17 = 0u;
  long long v18 = 0u;
  long long v15 = 0u;
  __n128 v16 = 0u;
  sub_1CBD85EB8((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v15);
  sub_1CBD86608((uint64_t)a1, (uint64_t)a2, v9, (uint64_t)&v16.n128_i64[1] + 4);
  v16.n128_u8[0] = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v10 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v10, (BOOL *)&v20[3] + 8, (int8x8_t *)((char *)v20 + 12), (uint64_t)&v20[1] + 8);
  if (DWORD1(v17) == 1) {
    DWORD2(v17) = HIDWORD(v15);
  }
  DWORD1(v20[1]) = sub_1CBDB2780(*(unsigned int *)a2, 41, 0) == 67;
  if (*a1 > 3u)
  {
    *((void *)&v18 + 1) = 0;
    long long v19 = 0uLL;
    LODWORD(v20[0]) = 0;
    if ((DWORD2(v15) - 2) <= 3) {
      DWORD1(v20[0]) = dword_1CDF53620[DWORD2(v15) - 2];
    }
    DWORD2(v20[0]) = 179;
  }
  else
  {
    *(void *)&long long v19 = 0x100000001;
    WORD4(v18) = 1;
  }
  long long v11 = v20[2];
  *(_OWORD *)(a4 + 96) = v20[1];
  *(_OWORD *)(a4 + 112) = v11;
  *(_OWORD *)(a4 + 124) = *(_OWORD *)((char *)&v20[2] + 12);
  long long v12 = v18;
  *(_OWORD *)(a4 + 32) = v17;
  *(_OWORD *)(a4 + 48) = v12;
  long long v13 = v20[0];
  *(_OWORD *)(a4 + 64) = v19;
  *(_OWORD *)(a4 + 80) = v13;
  __n128 result = v16;
  *(_OWORD *)a4 = v15;
  *(__n128 *)(a4 + 16) = result;
  return result;
}

__n128 sub_1CBD9D058(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 92;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x18u);
  memset(v18, 0, 44);
  long long v16 = 0u;
  __n128 v17 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  sub_1CBD85EB8((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v14);
  LOBYTE(v15) = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, (BOOL *)&v18[2] + 8, (int8x8_t *)v18, (uint64_t)v18 + 8);
  sub_1CBD88E08((uint64_t)a1, a2, v10, (uint64_t)&v15 + 12);
  if (DWORD1(v16) == 1) {
    *(void *)((char *)&v16 + 4) = 0x200000001;
  }
  if (*a1 >= 4u)
  {
    if ((DWORD2(v14) - 2) <= 3) {
      v17.n128_u32[2] = dword_1CDF53620[DWORD2(v14) - 2];
    }
    v17.n128_u32[3] = 93;
  }
  long long v11 = v18[1];
  *(_OWORD *)(a4 + 64) = v18[0];
  *(_OWORD *)(a4 + 80) = v11;
  *(_OWORD *)(a4 + 92) = *(_OWORD *)((char *)&v18[1] + 12);
  long long v12 = v15;
  *(_OWORD *)a4 = v14;
  *(_OWORD *)(a4 + 16) = v12;
  __n128 result = v17;
  *(_OWORD *)(a4 + 32) = v16;
  *(__n128 *)(a4 + 48) = result;
  return result;
}

double sub_1CBD9D1BC(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, _OWORD *a4)
{
  *a3 = 91;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v9 = sub_1CBDA6464(v7, 0x62u);
  unsigned int v10 = sub_1CBDA6464(v7, 0x63u);
  unsigned int v11 = sub_1CBDA6464(v7, 0x64u);
  unsigned int v26 = sub_1CBDA6464(v7, 0x65u);
  unsigned int v25 = sub_1CBDA6464(v7, 0x66u);
  unsigned int v12 = sub_1CBDA6464(v7, 0x3Du);
  long long v36 = 0u;
  memset(v37, 0, 60);
  long long v34 = 0u;
  long long v35 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  long long v27 = 0u;
  sub_1CBD85A80(a1, (uint64_t)a2, v8, (BOOL *)&v37[3] + 8, (int8x8_t *)&v31, (uint64_t)&v31 + 8);
  sub_1CBD88E08((uint64_t)a1, a2, v9, (uint64_t)&v33 + 8);
  sub_1CBD88900((uint64_t)a1, a2, v10, (uint64_t)&v35 + 4);
  if (*a1 >= 4u)
  {
    DWORD2(v37[1]) = 0;
    *((void *)&v37[0] + 1) = 0x100000000;
    *(void *)&v37[1] = 0;
    *(void *)&v37[0] = 0;
    goto LABEL_15;
  }
  sub_1CBD88E08((uint64_t)a1, a2, v11, (uint64_t)v37);
  if (*a1 >= 4u)
  {
LABEL_15:
    DWORD1(v37[3]) = 0;
    *(_OWORD *)((char *)&v37[2] + 4) = 0x100000000uLL;
    *(void *)((char *)&v37[1] + 12) = 0;
LABEL_16:
    sub_1CBD88E08((uint64_t)a1, a2, v25, (uint64_t)&v29);
    DWORD2(v27) = 5;
    if (*a1 < 4u)
    {
      int v13 = 0;
    }
    else
    {
      HIDWORD(v27) = 2;
      int v13 = 1;
    }
    goto LABEL_5;
  }
  sub_1CBD88E08((uint64_t)a1, a2, v26, (uint64_t)&v37[1] + 12);
  if (*a1 > 3u) {
    goto LABEL_16;
  }
  int v13 = 0;
  long long v29 = 0uLL;
  DWORD2(v30) = 0;
  *(void *)&long long v30 = 0;
  DWORD2(v27) = 5;
LABEL_5:
  uint64_t v14 = *((void *)a2 + 2);
  uint64_t v15 = *(void *)(v14 + 16 * v12 + 8);
  if (v15) {
    uint64_t v16 = v15 - 8;
  }
  else {
    uint64_t v16 = 0;
  }
  LOWORD(v27) = *(_WORD *)(*(void *)(v16 + 32) + 16) & 0x1FFF;
  if (v12) {
    int v17 = 1;
  }
  else {
    int v17 = 2;
  }
  unsigned int v18 = *(_DWORD *)(v14 + 16 * (v17 + v12) + 8);
  if (v13)
  {
    HIDWORD(v28) = 2;
    HIDWORD(v30) = 92;
  }
  long long v19 = v37[1];
  a4[10] = v37[0];
  a4[11] = v19;
  a4[12] = v37[2];
  *(_OWORD *)((char *)a4 + 204) = *(_OWORD *)((char *)&v37[2] + 12);
  long long v20 = v34;
  a4[6] = v33;
  a4[7] = v20;
  long long v21 = v36;
  a4[8] = v35;
  a4[9] = v21;
  long long v22 = v30;
  a4[2] = v29;
  a4[3] = v22;
  long long v23 = v32;
  a4[4] = v31;
  a4[5] = v23;
  double result = *(double *)&v27;
  *a4 = v27;
  DWORD1(v28) = (v18 >> 20) & 0xF;
  BYTE8(v28) = (v18 & 0x10) != 0;
  a4[1] = v28;
  return result;
}

__n128 sub_1CBD9D478(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, _OWORD *a4)
{
  *a3 = 29;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v9 = sub_1CBDA6464(v7, 0x3Du);
  long long v19 = 0u;
  long long v20 = 0u;
  memset(v18, 0, sizeof(v18));
  long long v17 = 0u;
  sub_1CBD85A80(a1, (uint64_t)a2, v8, (BOOL *)&v20 + 12, (int8x8_t *)((char *)&v18[1] + 4), (uint64_t)&v18[1] + 12);
  DWORD2(v17) = 5;
  if (*a1 >= 4u) {
    HIDWORD(v17) = 2;
  }
  uint64_t v10 = *((void *)a2 + 2);
  uint64_t v11 = *(void *)(v10 + 16 * v9 + 8);
  if (v11) {
    uint64_t v12 = v11 - 8;
  }
  else {
    uint64_t v12 = 0;
  }
  LOWORD(v17) = *(_WORD *)(*(void *)(v12 + 32) + 16) & 0x1FFF;
  if (v9) {
    int v13 = 1;
  }
  else {
    int v13 = 2;
  }
  unsigned int v14 = *(_DWORD *)(v10 + 16 * (v13 + v9) + 8);
  BYTE8(v18[0]) = (v14 & 0x10) != 0;
  DWORD1(v18[0]) = (v14 >> 20) & 0xF;
  if (*a1 >= 4u) {
    *(void *)((char *)v18 + 12) = 0x2200000002;
  }
  long long v15 = v19;
  a4[2] = v18[1];
  a4[3] = v15;
  a4[4] = v20;
  __n128 result = (__n128)v18[0];
  *a4 = v17;
  a4[1] = v18[0];
  return result;
}

double sub_1CBD9D5AC(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, _OWORD *a4)
{
  *a3 = 33;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x3Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x40u);
  unsigned int v11 = sub_1CBDA6464(v7, 0x3Fu);
  unsigned int v12 = sub_1CBDA6464(v7, 0x2Eu);
  long long v30 = 0u;
  long long v31 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  sub_1CBD85EB8((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v20);
  sub_1CBD86608((uint64_t)a1, (uint64_t)a2, v9, (uint64_t)&v21 + 12);
  sub_1CBD86608((uint64_t)a1, (uint64_t)a2, v10, (uint64_t)&v25 + 4);
  sub_1CBD86608((uint64_t)a1, (uint64_t)a2, v11, (uint64_t)&v23 + 8);
  LOBYTE(v21) = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v12 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v12, (BOOL *)&v31 + 12, (int8x8_t *)((char *)&v29 + 4), (uint64_t)&v29 + 12);
  if (*a1 >= 4u)
  {
    if ((DWORD2(v20) - 2) <= 3) {
      HIDWORD(v28) = dword_1CDF53620[DWORD2(v20) - 2];
    }
    LODWORD(v29) = 38;
  }
  long long v13 = v29;
  a4[8] = v28;
  a4[9] = v13;
  long long v14 = v31;
  a4[10] = v30;
  a4[11] = v14;
  long long v15 = v25;
  a4[4] = v24;
  a4[5] = v15;
  long long v16 = v27;
  a4[6] = v26;
  a4[7] = v16;
  long long v17 = v21;
  *a4 = v20;
  a4[1] = v17;
  double result = *(double *)&v22;
  long long v19 = v23;
  a4[2] = v22;
  a4[3] = v19;
  return result;
}

__n128 sub_1CBD9D75C(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 20;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  long long v15 = 0u;
  long long v16 = 0u;
  __n128 v13 = 0u;
  long long v14 = 0u;
  long long v12 = 0u;
  sub_1CBD85EB8((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v12);
  v13.n128_u8[0] = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, (BOOL *)&v16 + 12, (int8x8_t *)((char *)&v14 + 4), (uint64_t)&v14 + 12);
  if (*a1 >= 4u)
  {
    if ((DWORD2(v12) - 2) <= 3) {
      v13.n128_u32[3] = dword_1CDF53620[DWORD2(v12) - 2];
    }
    LODWORD(v14) = 25;
  }
  long long v10 = v15;
  *(_OWORD *)(a4 + 32) = v14;
  *(_OWORD *)(a4 + 48) = v10;
  *(_OWORD *)(a4 + 64) = v16;
  __n128 result = v13;
  *(_OWORD *)a4 = v12;
  *(__n128 *)(a4 + 16) = result;
  return result;
}

__n128 sub_1CBD9D870(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 20;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  long long v15 = 0u;
  long long v16 = 0u;
  __n128 v13 = 0u;
  long long v14 = 0u;
  long long v12 = 0u;
  sub_1CBD85EB8((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v12);
  v13.n128_u8[0] = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, (BOOL *)&v16 + 12, (int8x8_t *)((char *)&v14 + 4), (uint64_t)&v14 + 12);
  if (*a1 >= 4u)
  {
    if ((DWORD2(v12) - 2) <= 3) {
      v13.n128_u32[3] = dword_1CDF53620[DWORD2(v12) - 2];
    }
    LODWORD(v14) = 25;
  }
  long long v10 = v15;
  *(_OWORD *)(a4 + 32) = v14;
  *(_OWORD *)(a4 + 48) = v10;
  *(_OWORD *)(a4 + 64) = v16;
  __n128 result = v13;
  *(_OWORD *)a4 = v12;
  *(__n128 *)(a4 + 16) = result;
  return result;
}

__n128 sub_1CBD9D980(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 64;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x11u);
  unsigned int v11 = sub_1CBDA6464(v7, 4u);
  long long v22 = 0u;
  long long v23 = 0u;
  memset(v21, 0, sizeof(v21));
  long long v19 = 0u;
  long long v20 = 0u;
  __n128 v17 = 0u;
  long long v18 = 0u;
  long long v16 = 0u;
  sub_1CBD9DAF4((uint64_t)a1, a2, v8, (uint64_t)&v16);
  BYTE12(v16) = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, (BOOL *)&v23 + 12, (int8x8_t *)((char *)&v21[1] + 4), (uint64_t)&v21[1] + 12);
  sub_1CBD9DB90((uint64_t)a1, a2, v10, (uint64_t)&v17.n128_i64[1]);
  sub_1CBD9DB90((uint64_t)a1, a2, v11, (uint64_t)&v19 + 8);
  DWORD2(v21[0]) = 1;
  sub_1CBDB2780(*(unsigned int *)a2, 13, 0);
  if (*a1 >= 4u) {
    *(void *)((char *)v21 + 12) = 0x4600000003;
  }
  long long v12 = v22;
  *(_OWORD *)(a4 + 96) = v21[1];
  *(_OWORD *)(a4 + 112) = v12;
  *(_OWORD *)(a4 + 128) = v23;
  long long v13 = v19;
  *(_OWORD *)(a4 + 32) = v18;
  *(_OWORD *)(a4 + 48) = v13;
  long long v14 = v21[0];
  *(_OWORD *)(a4 + 64) = v20;
  *(_OWORD *)(a4 + 80) = v14;
  __n128 result = v17;
  *(_OWORD *)a4 = v16;
  *(__n128 *)(a4 + 16) = result;
  return result;
}

uint64_t sub_1CBD9DAF4(uint64_t a1, unsigned __int16 *a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *((void *)a2 + 2);
  *(_DWORD *)(a4 + 4) = 2;
  int v7 = (__int16)word_1CDF77000[dword_1CDF6DEF0[*a2] + (unsigned __int16)a3];
  if (v7 == 182 || v7 == 177) {
    *(_DWORD *)(a4 + 8) = 2;
  }
  *(_WORD *)a4 = sub_1CBD9FA40(*(void *)(a1 + 24), (unsigned __int8 *)(v6 + 16 * a3), 2) & 0x1FF;
  uint64_t result = sub_1CBDB2780(*(unsigned int *)a2, 13, 0);
  *(unsigned char *)(a4 + 21) = result == 33;
  *(unsigned char *)(a4 + 20) = 0;
  return result;
}

uint64_t sub_1CBD9DB90(uint64_t a1, unsigned __int16 *a2, unsigned int a3, uint64_t a4)
{
  int v7 = (unsigned __int8 *)(*((void *)a2 + 2) + 16 * a3);
  *(_DWORD *)(a4 + 4) = 2;
  int v8 = (__int16)word_1CDF77000[dword_1CDF6DEF0[*a2] + (unsigned __int16)a3];
  if (v8 > 176)
  {
    if (v8 == 182)
    {
      int v9 = 2;
    }
    else
    {
      if (v8 != 177) {
        goto LABEL_10;
      }
      int v9 = 1;
    }
    goto LABEL_9;
  }
  int v9 = 0;
  if (v8 == 171 || v8 == 174) {
LABEL_9:
  }
    *(_DWORD *)(a4 + 8) = v9;
LABEL_10:
  *(_WORD *)a4 = sub_1CBD9FA40(*(void *)(a1 + 24), v7, 2) & 0x1FF;
  uint64_t result = sub_1CBDA0760((uint64_t)a2, (uint64_t)v7, a3, a4);
  unint64_t v11 = *(void *)(*((void *)a2 + 2) + 16 * (a3 + 1) + 8);
  if ((v11 & 0x800) != 0)
  {
    *(_DWORD *)(a4 + 8) = 4;
  }
  else if (!*(_DWORD *)(a4 + 8))
  {
    *(_DWORD *)(a4 + 28) = (HIWORD(v11) & 3) - 1;
  }
  *(_DWORD *)(a4 + 24) = (v11 >> 45) & 1;
  return result;
}

double sub_1CBD9DC98(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 77;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x11u);
  unsigned int v11 = sub_1CBDA6464(v7, 4u);
  *(_DWORD *)long long v26 = 0;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v17 = 0u;
  sub_1CBD9DAF4((uint64_t)a1, a2, v8, (uint64_t)&v17);
  BYTE12(v17) = (*(unsigned char *)(*((void *)a2 + 2) + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, v26, (int8x8_t *)&v23, (uint64_t)&v23 + 12);
  sub_1CBD9DE30((uint64_t)a1, a2, v10, (uint64_t)&v18 + 8);
  sub_1CBD9DE30((uint64_t)a1, a2, v11, (uint64_t)&v20 + 8);
  BYTE8(v23) = 0;
  HIDWORD(v25) = sub_1CBDB2780(*(unsigned int *)a2, 26, 0) == 47;
  if (*a1 >= 4u) {
    *((void *)&v22 + 1) = 0x5300000003;
  }
  long long v12 = v24;
  *(_OWORD *)(a4 + 96) = v23;
  *(_OWORD *)(a4 + 112) = v12;
  *(_OWORD *)(a4 + 128) = v25;
  *(_DWORD *)(a4 + 144) = *(_DWORD *)v26;
  long long v13 = v20;
  *(_OWORD *)(a4 + 32) = v19;
  *(_OWORD *)(a4 + 48) = v13;
  long long v14 = v22;
  *(_OWORD *)(a4 + 64) = v21;
  *(_OWORD *)(a4 + 80) = v14;
  double result = *(double *)&v17;
  long long v16 = v18;
  *(_OWORD *)a4 = v17;
  *(_OWORD *)(a4 + 16) = v16;
  return result;
}

uint64_t sub_1CBD9DE30(uint64_t a1, unsigned __int16 *a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *((void *)a2 + 2);
  *(_DWORD *)(a4 + 4) = 2;
  int v8 = (__int16)word_1CDF77000[dword_1CDF6DEF0[*a2] + (unsigned __int16)a3];
  if (v8 == 174 || v8 == 171) {
    *(_DWORD *)(a4 + 8) = 0;
  }
  unsigned int v9 = (unsigned __int8 *)(v7 + 16 * a3);
  *(_WORD *)a4 = sub_1CBD9FA40(*(void *)(a1 + 24), v9, 2) & 0x1FF;
  uint64_t result = sub_1CBDA0760((uint64_t)a2, (uint64_t)v9, a3, a4);
  unint64_t v11 = *(void *)(*((void *)a2 + 2) + 16 * (a3 + 1) + 8);
  *(_DWORD *)(a4 + 24) = (v11 >> 45) & 1;
  *(unsigned char *)(a4 + 13) = (v11 & 8) != 0;
  return result;
}

uint64_t sub_1CBD9DEF0(uint64_t a1, unsigned __int16 *a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = (unsigned __int8 *)(*((void *)a2 + 2) + 16 * a3);
  *(_DWORD *)(a4 + 4) = 2;
  int v8 = (__int16)word_1CDF77000[dword_1CDF6DEF0[*a2] + (unsigned __int16)a3];
  if (v8 <= 176)
  {
    if (v8 == 171)
    {
      int v9 = 0;
    }
    else
    {
      if (v8 != 174) {
        goto LABEL_10;
      }
      int v9 = 1;
    }
    goto LABEL_9;
  }
  if (v8 == 177 || v8 == 182)
  {
    int v9 = 2;
LABEL_9:
    *(_DWORD *)(a4 + 8) = v9;
  }
LABEL_10:
  *(_WORD *)a4 = sub_1CBD9FA40(*(void *)(a1 + 24), v7, 2) & 0x1FF;
  uint64_t result = sub_1CBDA0760((uint64_t)a2, (uint64_t)v7, a3, a4);
  unint64_t v11 = *(void *)(*((void *)a2 + 2) + 16 * (a3 + 1) + 8);
  if ((v11 & 0x800) != 0)
  {
    *(_DWORD *)(a4 + 8) = 4;
  }
  else if (!*(_DWORD *)(a4 + 8))
  {
    *(_DWORD *)(a4 + 28) = (HIWORD(v11) & 3) - 1;
  }
  *(_DWORD *)(a4 + 24) = (v11 >> 45) & 1;
  return result;
}

double sub_1CBD9DFF8(_DWORD *a1, unsigned int *a2, _DWORD *a3, uint64_t a4)
{
  if (sub_1CBDA02EC(a2))
  {
    sub_1CBDA02EC(a2);
    return sub_1CBD9E3A8(a1, (unsigned __int16 *)a2, a3, a4);
  }
  else
  {
    return sub_1CBD9E090(a1, (unsigned __int16 *)a2, a3, a4);
  }
}

double sub_1CBD9E090(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 203;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v36 = sub_1CBDA6464(v7, 0x49u);
  unsigned int v35 = sub_1CBDA6464(v7, 0x4Au);
  unsigned int v31 = sub_1CBDA6464(v7, 0x4Bu);
  unsigned int v33 = sub_1CBDA6464(v7, 0x11u);
  unsigned int v32 = sub_1CBDA6464(v7, 4u);
  unsigned int v34 = sub_1CBDA6464(v7, 0x14u);
  unsigned int v30 = sub_1CBDA6464(v7, 0x4Cu);
  unsigned int v29 = sub_1CBDA6464(v7, 0x4Du);
  unsigned int v28 = sub_1CBDA6464(v7, 0x4Eu);
  unsigned int v27 = sub_1CBDA6464(v7, 0x4Fu);
  unsigned int v26 = sub_1CBDA6464(v7, 0x50u);
  unsigned int v25 = sub_1CBDA6464(v7, 0x51u);
  unsigned int v10 = sub_1CBDA6464(v7, 0x52u);
  unsigned int v11 = sub_1CBDA6464(v7, 0x53u);
  unint64_t v50 = 0;
  long long v48 = 0u;
  long long v49 = 0u;
  long long v46 = 0u;
  long long v47 = 0u;
  long long v44 = 0u;
  long long v45 = 0u;
  long long v42 = 0u;
  long long v43 = 0u;
  long long v40 = 0u;
  long long v41 = 0u;
  long long v38 = 0u;
  long long v39 = 0u;
  long long v37 = 0u;
  sub_1CBD8C5F0((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v37);
  uint64_t v12 = *((void *)a2 + 2);
  LOBYTE(v38) = (*(unsigned char *)(v12 + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, (BOOL *)&v47 + 8, (int8x8_t *)&v45, (uint64_t)&v45 + 8);
  int v13 = *(_DWORD *)(v12 + 16 * v35 + 8) & 0xF;
  HIDWORD(v47) = *(_DWORD *)(v12 + 16 * v36 + 8) & 0xF;
  LODWORD(v48) = v13;
  DWORD1(v48) = *(_DWORD *)(v12 + 16 * v31 + 8) & 0xF;
  sub_1CBD8F254((uint64_t)a1, a2, v33, (uint64_t)&v39 + 4);
  sub_1CBD8F254((uint64_t)a1, a2, v32, (uint64_t)&v41);
  sub_1CBD8F254((uint64_t)a1, a2, v34, (uint64_t)&v42 + 12);
  uint64_t v14 = *((void *)a2 + 2);
  uint64_t v15 = *(void *)(v14 + 16 * v29 + 8);
  DWORD2(v48) = *(void *)(v14 + 16 * v30 + 8);
  HIDWORD(v48) = v15;
  uint64_t v16 = *(void *)(v14 + 16 * v27 + 8);
  LODWORD(v49) = *(void *)(v14 + 16 * v28 + 8);
  DWORD1(v49) = v16;
  uint64_t v17 = *(void *)(v14 + 16 * v25 + 8);
  DWORD2(v49) = *(void *)(v14 + 16 * v26 + 8);
  HIDWORD(v49) = v17;
  unint64_t v50 = __PAIR64__(*(void *)(v14 + 16 * v11 + 8), *(void *)(v14 + 16 * v10 + 8));
  if (*a1 >= 4u)
  {
    if ((DWORD2(v37) - 2) <= 3) {
      DWORD2(v44) = dword_1CDF53620[DWORD2(v37) - 2];
    }
    HIDWORD(v44) = 206;
  }
  long long v18 = v48;
  *(_OWORD *)(a4 + 160) = v47;
  *(_OWORD *)(a4 + 176) = v18;
  *(_OWORD *)(a4 + 192) = v49;
  *(void *)(a4 + 208) = v50;
  long long v19 = v44;
  *(_OWORD *)(a4 + 96) = v43;
  *(_OWORD *)(a4 + 112) = v19;
  long long v20 = v46;
  *(_OWORD *)(a4 + 128) = v45;
  *(_OWORD *)(a4 + 144) = v20;
  long long v21 = v40;
  *(_OWORD *)(a4 + 32) = v39;
  *(_OWORD *)(a4 + 48) = v21;
  long long v22 = v42;
  *(_OWORD *)(a4 + 64) = v41;
  *(_OWORD *)(a4 + 80) = v22;
  double result = *(double *)&v37;
  long long v24 = v38;
  *(_OWORD *)a4 = v37;
  *(_OWORD *)(a4 + 16) = v24;
  return result;
}

double sub_1CBD9E3A8(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 204;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v36 = sub_1CBDA6464(v7, 0x49u);
  unsigned int v35 = sub_1CBDA6464(v7, 0x4Au);
  unsigned int v31 = sub_1CBDA6464(v7, 0x4Bu);
  unsigned int v33 = sub_1CBDA6464(v7, 0x11u);
  unsigned int v32 = sub_1CBDA6464(v7, 4u);
  unsigned int v34 = sub_1CBDA6464(v7, 0x14u);
  unsigned int v30 = sub_1CBDA6464(v7, 0x4Cu);
  unsigned int v29 = sub_1CBDA6464(v7, 0x4Du);
  unsigned int v28 = sub_1CBDA6464(v7, 0x4Eu);
  unsigned int v27 = sub_1CBDA6464(v7, 0x4Fu);
  unsigned int v26 = sub_1CBDA6464(v7, 0x50u);
  unsigned int v25 = sub_1CBDA6464(v7, 0x51u);
  unsigned int v10 = sub_1CBDA6464(v7, 0x52u);
  unsigned int v11 = sub_1CBDA6464(v7, 0x53u);
  unint64_t v50 = 0;
  long long v48 = 0u;
  long long v49 = 0u;
  long long v46 = 0u;
  long long v47 = 0u;
  long long v44 = 0u;
  long long v45 = 0u;
  long long v42 = 0u;
  long long v43 = 0u;
  long long v40 = 0u;
  long long v41 = 0u;
  long long v38 = 0u;
  long long v39 = 0u;
  long long v37 = 0u;
  sub_1CBD8C5F0((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v37);
  uint64_t v12 = *((void *)a2 + 2);
  LOBYTE(v38) = (*(unsigned char *)(v12 + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, (BOOL *)&v47 + 8, (int8x8_t *)&v45, (uint64_t)&v45 + 8);
  int v13 = *(_DWORD *)(v12 + 16 * v35 + 8) & 0xF;
  HIDWORD(v47) = *(_DWORD *)(v12 + 16 * v36 + 8) & 0xF;
  LODWORD(v48) = v13;
  DWORD1(v48) = *(_DWORD *)(v12 + 16 * v31 + 8) & 0xF;
  sub_1CBD8C148((uint64_t)a1, (uint64_t)a2, v33, (uint64_t)&v39 + 4);
  sub_1CBD8C148((uint64_t)a1, (uint64_t)a2, v32, (uint64_t)&v41);
  sub_1CBD8C148((uint64_t)a1, (uint64_t)a2, v34, (uint64_t)&v42 + 12);
  uint64_t v14 = *((void *)a2 + 2);
  uint64_t v15 = *(void *)(v14 + 16 * v29 + 8);
  DWORD2(v48) = *(void *)(v14 + 16 * v30 + 8);
  HIDWORD(v48) = v15;
  uint64_t v16 = *(void *)(v14 + 16 * v27 + 8);
  LODWORD(v49) = *(void *)(v14 + 16 * v28 + 8);
  DWORD1(v49) = v16;
  uint64_t v17 = *(void *)(v14 + 16 * v25 + 8);
  DWORD2(v49) = *(void *)(v14 + 16 * v26 + 8);
  HIDWORD(v49) = v17;
  unint64_t v50 = __PAIR64__(*(void *)(v14 + 16 * v11 + 8), *(void *)(v14 + 16 * v10 + 8));
  if (*a1 >= 4u)
  {
    if ((DWORD2(v37) - 2) <= 3) {
      DWORD2(v44) = dword_1CDF53620[DWORD2(v37) - 2];
    }
    HIDWORD(v44) = 207;
  }
  long long v18 = v48;
  *(_OWORD *)(a4 + 160) = v47;
  *(_OWORD *)(a4 + 176) = v18;
  *(_OWORD *)(a4 + 192) = v49;
  *(void *)(a4 + 208) = v50;
  long long v19 = v44;
  *(_OWORD *)(a4 + 96) = v43;
  *(_OWORD *)(a4 + 112) = v19;
  long long v20 = v46;
  *(_OWORD *)(a4 + 128) = v45;
  *(_OWORD *)(a4 + 144) = v20;
  long long v21 = v40;
  *(_OWORD *)(a4 + 32) = v39;
  *(_OWORD *)(a4 + 48) = v21;
  long long v22 = v42;
  *(_OWORD *)(a4 + 64) = v41;
  *(_OWORD *)(a4 + 80) = v22;
  double result = *(double *)&v37;
  long long v24 = v38;
  *(_OWORD *)a4 = v37;
  *(_OWORD *)(a4 + 16) = v24;
  return result;
}

__n128 sub_1CBD9E6C0(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 205;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v35 = sub_1CBDA6464(v7, 0x49u);
  unsigned int v34 = sub_1CBDA6464(v7, 0x4Au);
  unsigned int v29 = sub_1CBDA6464(v7, 0x4Bu);
  unsigned int v31 = sub_1CBDA6464(v7, 0x11u);
  unsigned int v32 = sub_1CBDA6464(v7, 4u);
  unsigned int v33 = sub_1CBDA6464(v7, 0x14u);
  unsigned int v30 = sub_1CBDA6464(v7, 0x4Cu);
  unsigned int v28 = sub_1CBDA6464(v7, 0x4Du);
  unsigned int v27 = sub_1CBDA6464(v7, 0x4Eu);
  unsigned int v26 = sub_1CBDA6464(v7, 0x4Fu);
  unsigned int v25 = sub_1CBDA6464(v7, 0x50u);
  unsigned int v24 = sub_1CBDA6464(v7, 0x51u);
  unsigned int v10 = sub_1CBDA6464(v7, 0x52u);
  unsigned int v11 = sub_1CBDA6464(v7, 0x53u);
  long long v47 = 0u;
  long long v48 = 0u;
  long long v45 = 0u;
  long long v46 = 0u;
  long long v43 = 0u;
  long long v44 = 0u;
  long long v41 = 0u;
  long long v42 = 0u;
  long long v39 = 0u;
  long long v40 = 0u;
  __n128 v37 = 0u;
  long long v38 = 0u;
  long long v36 = 0u;
  sub_1CBD85EB8((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v36);
  uint64_t v12 = *((void *)a2 + 2);
  v37.n128_u8[0] = (*(unsigned char *)(v12 + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, (BOOL *)&v46, (int8x8_t *)&v43 + 1, (uint64_t)&v44);
  int v13 = *(_DWORD *)(v12 + 16 * v34 + 8) & 0xF;
  DWORD1(v46) = *(_DWORD *)(v12 + 16 * v35 + 8) & 0xF;
  DWORD2(v46) = v13;
  HIDWORD(v46) = *(_DWORD *)(v12 + 16 * v29 + 8) & 0xF;
  sub_1CBD8C148((uint64_t)a1, (uint64_t)a2, v31, (uint64_t)&v37.n128_i64[1] + 4);
  sub_1CBD8C148((uint64_t)a1, (uint64_t)a2, v32, (uint64_t)&v39 + 8);
  sub_1CBD8C148((uint64_t)a1, (uint64_t)a2, v33, (uint64_t)&v41 + 4);
  uint64_t v14 = *((void *)a2 + 2);
  uint64_t v15 = *(void *)(v14 + 16 * v28 + 8);
  LODWORD(v47) = *(void *)(v14 + 16 * v30 + 8);
  DWORD1(v47) = v15;
  uint64_t v16 = *(void *)(v14 + 16 * v26 + 8);
  DWORD2(v47) = *(void *)(v14 + 16 * v27 + 8);
  HIDWORD(v47) = v16;
  uint64_t v17 = *(void *)(v14 + 16 * v24 + 8);
  LODWORD(v48) = *(void *)(v14 + 16 * v25 + 8);
  DWORD1(v48) = v17;
  *((void *)&v48 + 1) = __PAIR64__(*(void *)(v14 + 16 * v11 + 8), *(void *)(v14 + 16 * v10 + 8));
  if (*a1 >= 4u)
  {
    if ((DWORD2(v36) - 2) <= 3) {
      LODWORD(v43) = dword_1CDF53620[DWORD2(v36) - 2];
    }
    DWORD1(v43) = 208;
  }
  long long v18 = v47;
  *(_OWORD *)(a4 + 160) = v46;
  *(_OWORD *)(a4 + 176) = v18;
  *(_OWORD *)(a4 + 192) = v48;
  long long v19 = v43;
  *(_OWORD *)(a4 + 96) = v42;
  *(_OWORD *)(a4 + 112) = v19;
  long long v20 = v45;
  *(_OWORD *)(a4 + 128) = v44;
  *(_OWORD *)(a4 + 144) = v20;
  long long v21 = v39;
  *(_OWORD *)(a4 + 32) = v38;
  *(_OWORD *)(a4 + 48) = v21;
  long long v22 = v41;
  *(_OWORD *)(a4 + 64) = v40;
  *(_OWORD *)(a4 + 80) = v22;
  __n128 result = v37;
  *(_OWORD *)a4 = v36;
  *(__n128 *)(a4 + 16) = result;
  return result;
}

double sub_1CBD9E9CC(_DWORD *a1, unsigned int *a2, _DWORD *a3, uint64_t a4)
{
  if (sub_1CBDA02EC(a2))
  {
    sub_1CBDA02EC(a2);
    *(void *)&double result = sub_1CBD9ED90(a1, (unsigned __int16 *)a2, a3, a4).n128_u64[0];
  }
  else
  {
    *(void *)&double result = sub_1CBD9EA64(a1, (unsigned __int16 *)a2, a3, a4).n128_u64[0];
  }
  return result;
}

__n128 sub_1CBD9EA64(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 207;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v31 = sub_1CBDA6464(v7, 0x49u);
  unsigned int v30 = sub_1CBDA6464(v7, 0x4Au);
  unsigned int v29 = sub_1CBDA6464(v7, 0x4Bu);
  unsigned int v33 = sub_1CBDA6464(v7, 0x11u);
  unsigned int v34 = sub_1CBDA6464(v7, 4u);
  unsigned int v35 = sub_1CBDA6464(v7, 0x14u);
  unsigned int v32 = sub_1CBDA6464(v7, 0x4Cu);
  unsigned int v28 = sub_1CBDA6464(v7, 0x4Du);
  unsigned int v27 = sub_1CBDA6464(v7, 0x4Eu);
  unsigned int v26 = sub_1CBDA6464(v7, 0x4Fu);
  unsigned int v25 = sub_1CBDA6464(v7, 0x50u);
  unsigned int v24 = sub_1CBDA6464(v7, 0x51u);
  unsigned int v10 = sub_1CBDA6464(v7, 0x52u);
  unsigned int v11 = sub_1CBDA6464(v7, 0x53u);
  long long v47 = 0u;
  long long v48 = 0u;
  long long v45 = 0u;
  long long v46 = 0u;
  long long v43 = 0u;
  long long v44 = 0u;
  long long v41 = 0u;
  long long v42 = 0u;
  long long v39 = 0u;
  long long v40 = 0u;
  __n128 v37 = 0u;
  long long v38 = 0u;
  long long v36 = 0u;
  sub_1CBD85EB8((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v36);
  uint64_t v12 = *((void *)a2 + 2);
  v37.n128_u8[0] = (*(unsigned char *)(v12 + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, (BOOL *)&v46, (int8x8_t *)&v43 + 1, (uint64_t)&v44);
  int v13 = dword_1CDF536A4[(*(void *)(v12 + 16 * v30 + 8) & 0xFLL) - 8];
  DWORD1(v46) = dword_1CDF536A4[(*(void *)(v12 + 16 * v31 + 8) & 0xFLL) - 8];
  DWORD2(v46) = v13;
  HIDWORD(v46) = dword_1CDF536A4[(*(void *)(v12 + 16 * v29 + 8) & 0xFLL) - 8];
  sub_1CBD86608((uint64_t)a1, (uint64_t)a2, v33, (uint64_t)&v37.n128_i64[1] + 4);
  sub_1CBD86608((uint64_t)a1, (uint64_t)a2, v34, (uint64_t)&v39 + 8);
  sub_1CBD86608((uint64_t)a1, (uint64_t)a2, v35, (uint64_t)&v41 + 4);
  uint64_t v14 = *((void *)a2 + 2);
  uint64_t v15 = *(void *)(v14 + 16 * v28 + 8);
  LODWORD(v47) = *(void *)(v14 + 16 * v32 + 8);
  DWORD1(v47) = v15;
  uint64_t v16 = *(void *)(v14 + 16 * v26 + 8);
  DWORD2(v47) = *(void *)(v14 + 16 * v27 + 8);
  HIDWORD(v47) = v16;
  uint64_t v17 = *(void *)(v14 + 16 * v24 + 8);
  LODWORD(v48) = *(void *)(v14 + 16 * v25 + 8);
  DWORD1(v48) = v17;
  *((void *)&v48 + 1) = __PAIR64__(*(void *)(v14 + 16 * v11 + 8), *(void *)(v14 + 16 * v10 + 8));
  if (*a1 >= 4u)
  {
    if ((DWORD2(v36) - 2) <= 3) {
      LODWORD(v43) = dword_1CDF53620[DWORD2(v36) - 2];
    }
    DWORD1(v43) = 210;
  }
  long long v18 = v47;
  *(_OWORD *)(a4 + 160) = v46;
  *(_OWORD *)(a4 + 176) = v18;
  *(_OWORD *)(a4 + 192) = v48;
  long long v19 = v43;
  *(_OWORD *)(a4 + 96) = v42;
  *(_OWORD *)(a4 + 112) = v19;
  long long v20 = v45;
  *(_OWORD *)(a4 + 128) = v44;
  *(_OWORD *)(a4 + 144) = v20;
  long long v21 = v39;
  *(_OWORD *)(a4 + 32) = v38;
  *(_OWORD *)(a4 + 48) = v21;
  long long v22 = v41;
  *(_OWORD *)(a4 + 64) = v40;
  *(_OWORD *)(a4 + 80) = v22;
  __n128 result = v37;
  *(_OWORD *)a4 = v36;
  *(__n128 *)(a4 + 16) = result;
  return result;
}

__n128 sub_1CBD9ED90(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, uint64_t a4)
{
  *a3 = 208;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v9 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v33 = sub_1CBDA6464(v7, 0x49u);
  unsigned int v32 = sub_1CBDA6464(v7, 0x4Au);
  unsigned int v31 = sub_1CBDA6464(v7, 0x4Bu);
  unsigned int v30 = sub_1CBDA6464(v7, 0x11u);
  unsigned int v34 = sub_1CBDA6464(v7, 4u);
  unsigned int v35 = sub_1CBDA6464(v7, 0x14u);
  unsigned int v29 = sub_1CBDA6464(v7, 0x4Cu);
  unsigned int v28 = sub_1CBDA6464(v7, 0x4Du);
  unsigned int v10 = sub_1CBDA6464(v7, 0x4Eu);
  unsigned int v27 = sub_1CBDA6464(v7, 0x4Fu);
  unsigned int v26 = sub_1CBDA6464(v7, 0x50u);
  unsigned int v25 = sub_1CBDA6464(v7, 0x51u);
  unsigned int v24 = sub_1CBDA6464(v7, 0x52u);
  unsigned int v23 = sub_1CBDA6464(v7, 0x53u);
  long long v47 = 0u;
  long long v48 = 0u;
  long long v45 = 0u;
  long long v46 = 0u;
  long long v43 = 0u;
  long long v44 = 0u;
  long long v41 = 0u;
  long long v42 = 0u;
  long long v39 = 0u;
  long long v40 = 0u;
  __n128 v37 = 0u;
  long long v38 = 0u;
  long long v36 = 0u;
  sub_1CBD85EB8((uint64_t)a1, (uint64_t)a2, v8, (uint64_t)&v36);
  uint64_t v11 = *((void *)a2 + 2);
  v37.n128_u8[0] = (*(unsigned char *)(v11 + 16 * v9 + 8) & 0x20) != 0;
  sub_1CBD85A80(a1, (uint64_t)a2, v9, (BOOL *)&v46, (int8x8_t *)&v43 + 1, (uint64_t)&v44);
  int v12 = dword_1CDF536A4[(*(void *)(v11 + 16 * v32 + 8) & 0xFLL) - 8];
  DWORD1(v46) = dword_1CDF536A4[(*(void *)(v11 + 16 * v33 + 8) & 0xFLL) - 8];
  DWORD2(v46) = v12;
  HIDWORD(v46) = dword_1CDF536A4[(*(void *)(v11 + 16 * v31 + 8) & 0xFLL) - 8];
  sub_1CBD86608((uint64_t)a1, (uint64_t)a2, v30, (uint64_t)&v37.n128_i64[1] + 4);
  if (DWORD1(v38) == 1) {
    *(void *)((char *)&v38 + 4) = 0x200000001;
  }
  sub_1CBD86608((uint64_t)a1, (uint64_t)a2, v34, (uint64_t)&v39 + 8);
  if (v40 == 1) {
    *(void *)&long long v40 = 0x200000001;
  }
  sub_1CBD86608((uint64_t)a1, (uint64_t)a2, v35, (uint64_t)&v41 + 4);
  if (HIDWORD(v41) == 1) {
    LODWORD(v42) = 2;
  }
  uint64_t v13 = *((void *)a2 + 2);
  uint64_t v14 = *(void *)(v13 + 16 * v28 + 8);
  LODWORD(v47) = *(void *)(v13 + 16 * v29 + 8);
  DWORD1(v47) = v14;
  uint64_t v15 = *(void *)(v13 + 16 * v27 + 8);
  DWORD2(v47) = *(void *)(v13 + 16 * v10 + 8);
  HIDWORD(v47) = v15;
  uint64_t v16 = *(void *)(v13 + 16 * v25 + 8);
  LODWORD(v48) = *(void *)(v13 + 16 * v26 + 8);
  DWORD1(v48) = v16;
  *((void *)&v48 + 1) = __PAIR64__(*(void *)(v13 + 16 * v23 + 8), *(void *)(v13 + 16 * v24 + 8));
  if (*a1 >= 4u)
  {
    if ((DWORD2(v36) - 2) <= 3) {
      LODWORD(v43) = dword_1CDF53620[DWORD2(v36) - 2];
    }
    DWORD1(v43) = 211;
  }
  long long v17 = v47;
  *(_OWORD *)(a4 + 160) = v46;
  *(_OWORD *)(a4 + 176) = v17;
  *(_OWORD *)(a4 + 192) = v48;
  long long v18 = v43;
  *(_OWORD *)(a4 + 96) = v42;
  *(_OWORD *)(a4 + 112) = v18;
  long long v19 = v45;
  *(_OWORD *)(a4 + 128) = v44;
  *(_OWORD *)(a4 + 144) = v19;
  long long v20 = v39;
  *(_OWORD *)(a4 + 32) = v38;
  *(_OWORD *)(a4 + 48) = v20;
  long long v21 = v41;
  *(_OWORD *)(a4 + 64) = v40;
  *(_OWORD *)(a4 + 80) = v21;
  __n128 result = v37;
  *(_OWORD *)a4 = v36;
  *(__n128 *)(a4 + 16) = result;
  return result;
}

double sub_1CBD9F148(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, _OWORD *a4)
{
  *a3 = 202;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v38 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v37 = sub_1CBDA6464(v7, 0x49u);
  unsigned int v36 = sub_1CBDA6464(v7, 0x4Au);
  unsigned int v34 = sub_1CBDA6464(v7, 0x4Bu);
  unsigned int v35 = sub_1CBDA6464(v7, 0x11u);
  unsigned int v33 = sub_1CBDA6464(v7, 4u);
  unsigned int v32 = sub_1CBDA6464(v7, 0x14u);
  unsigned int v31 = sub_1CBDA6464(v7, 0x4Cu);
  unsigned int v30 = sub_1CBDA6464(v7, 0x4Du);
  unsigned int v29 = sub_1CBDA6464(v7, 0x4Eu);
  unsigned int v9 = sub_1CBDA6464(v7, 0x4Fu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x50u);
  unsigned int v11 = sub_1CBDA6464(v7, 0x51u);
  unsigned int v12 = sub_1CBDA6464(v7, 0x52u);
  unsigned int v13 = sub_1CBDA6464(v7, 0x53u);
  long long v47 = 0u;
  long long v48 = 0u;
  long long v45 = 0u;
  long long v46 = 0u;
  long long v43 = 0u;
  long long v44 = 0u;
  long long v41 = 0u;
  long long v42 = 0u;
  long long v39 = 0u;
  long long v40 = 0u;
  uint64_t v14 = *((void *)a2 + 2);
  int v15 = *(_DWORD *)(v14 + 16 * v8 + 8);
  if (v15 == 2)
  {
    char v16 = 6;
  }
  else if (v15 == 1)
  {
    char v16 = 7;
  }
  else
  {
    char v16 = (v15 + 9) & 0xF;
  }
  BYTE5(v44) = v16;
  sub_1CBD85A80(a1, (uint64_t)a2, v38, (BOOL *)&v47 + 8, (int8x8_t *)&v45, (uint64_t)&v45 + 8);
  int v17 = *(_DWORD *)(v14 + 16 * v36 + 8) & 0xF;
  HIDWORD(v47) = *(_DWORD *)(v14 + 16 * v37 + 8) & 0xF;
  LODWORD(v48) = v17;
  DWORD1(v48) = *(_DWORD *)(v14 + 16 * v34 + 8) & 0xF;
  sub_1CBD8C148((uint64_t)a1, (uint64_t)a2, v35, (uint64_t)&v39);
  sub_1CBD8C148((uint64_t)a1, (uint64_t)a2, v33, (uint64_t)&v40 + 12);
  sub_1CBD8C148((uint64_t)a1, (uint64_t)a2, v32, (uint64_t)&v42 + 8);
  uint64_t v18 = *((void *)a2 + 2);
  v19.i64[0] = *(void *)(v18 + 16 * v31 + 8);
  v19.i64[1] = *(void *)(v18 + 16 * v30 + 8);
  v20.i64[0] = *(void *)(v18 + 16 * v29 + 8);
  v20.i64[1] = *(void *)(v18 + 16 * v9 + 8);
  v21.i64[0] = *(void *)(v18 + 16 * v10 + 8);
  v21.i64[1] = *(void *)(v18 + 16 * v11 + 8);
  v22.i64[0] = *(void *)(v18 + 16 * v12 + 8);
  v22.i64[1] = *(void *)(v18 + 16 * v13 + 8);
  *((int8x8_t *)&v48 + 1) = vand_s8(vmovn_s16((int16x8_t)vmvnq_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(v19), (int32x4_t)vceqzq_s64(v20)), (int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(v21), (int32x4_t)vceqzq_s64(v22))))), (int8x8_t)0x101010101010101);
  BYTE4(v44) = sub_1CBDB2780(*(unsigned int *)a2, 8, 0) == 31;
  if (*a1 >= 4u) {
    *((void *)&v44 + 1) = 0xCD00000003;
  }
  long long v23 = v46;
  a4[6] = v45;
  a4[7] = v23;
  long long v24 = v48;
  a4[8] = v47;
  a4[9] = v24;
  long long v25 = v42;
  a4[2] = v41;
  a4[3] = v25;
  long long v26 = v44;
  a4[4] = v43;
  a4[5] = v26;
  double result = *(double *)&v39;
  long long v28 = v40;
  *a4 = v39;
  a4[1] = v28;
  return result;
}

double sub_1CBD9F484(_DWORD *a1, unsigned __int16 *a2, _DWORD *a3, _OWORD *a4)
{
  *a3 = 206;
  int v7 = *a2;
  unsigned int v8 = sub_1CBDA6464(v7, 3u);
  unsigned int v38 = sub_1CBDA6464(v7, 0x2Eu);
  unsigned int v37 = sub_1CBDA6464(v7, 0x49u);
  unsigned int v35 = sub_1CBDA6464(v7, 0x4Au);
  unsigned int v32 = sub_1CBDA6464(v7, 0x4Bu);
  unsigned int v36 = sub_1CBDA6464(v7, 0x11u);
  unsigned int v34 = sub_1CBDA6464(v7, 4u);
  unsigned int v33 = sub_1CBDA6464(v7, 0x14u);
  unsigned int v31 = sub_1CBDA6464(v7, 0x4Cu);
  unsigned int v30 = sub_1CBDA6464(v7, 0x4Du);
  unsigned int v29 = sub_1CBDA6464(v7, 0x4Eu);
  unsigned int v9 = sub_1CBDA6464(v7, 0x4Fu);
  unsigned int v10 = sub_1CBDA6464(v7, 0x50u);
  unsigned int v11 = sub_1CBDA6464(v7, 0x51u);
  unsigned int v12 = sub_1CBDA6464(v7, 0x52u);
  unsigned int v13 = sub_1CBDA6464(v7, 0x53u);
  long long v47 = 0u;
  long long v48 = 0u;
  long long v45 = 0u;
  long long v46 = 0u;
  long long v43 = 0u;
  long long v44 = 0u;
  long long v41 = 0u;
  long long v42 = 0u;
  long long v39 = 0u;
  long long v40 = 0u;
  uint64_t v14 = *((void *)a2 + 2);
  int v15 = *(_DWORD *)(v14 + 16 * v8 + 8);
  if (v15 == 2)
  {
    char v16 = 6;
  }
  else if (v15 == 1)
  {
    char v16 = 7;
  }
  else
  {
    char v16 = (v15 + 9) & 0xF;
  }
  BYTE5(v44) = v16;
  sub_1CBD85A80(a1, (uint64_t)a2, v38, (BOOL *)&v47 + 8, (int8x8_t *)&v45, (uint64_t)&v45 + 8);
  int v17 = dword_1CDF536A4[(*(void *)(v14 + 16 * v35 + 8) & 0xFLL) - 8];
  HIDWORD(v47) = dword_1CDF536A4[(*(void *)(v14 + 16 * v37 + 8) & 0xFLL) - 8];
  LODWORD(v48) = v17;
  DWORD1(v48) = dword_1CDF536A4[(*(void *)(v14 + 16 * v32 + 8) & 0xFLL) - 8];
  sub_1CBD86608((uint64_t)a1, (uint64_t)a2, v36, (uint64_t)&v39);
  sub_1CBD86608((uint64_t)a1, (uint64_t)a2, v34, (uint64_t)&v40 + 12);
  sub_1CBD86608((uint64_t)a1, (uint64_t)a2, v33, (uint64_t)&v42 + 8);
  uint64_t v18 = *((void *)a2 + 2);
  v19.i64[0] = *(void *)(v18 + 16 * v31 + 8);
  v19.i64[1] = *(void *)(v18 + 16 * v30 + 8);
  v20.i64[0] = *(void *)(v18 + 16 * v29 + 8);
  v20.i64[1] = *(void *)(v18 + 16 * v9 + 8);
  v21.i64[0] = *(void *)(v18 + 16 * v10 + 8);
  v21.i64[1] = *(void *)(v18 + 16 * v11 + 8);
  v22.i64[0] = *(void *)(v18 + 16 * v12 + 8);
  v22.i64[1] = *(void *)(v18 + 16 * v13 + 8);
  *((int8x8_t *)&v48 + 1) = vand_s8(vmovn_s16((int16x8_t)vmvnq_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(v19), (int32x4_t)vceqzq_s64(v20)), (int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(v21), (int32x4_t)vceqzq_s64(v22))))), (int8x8_t)0x101010101010101);
  BYTE4(v44) = sub_1CBDB2780(*(unsigned int *)a2, 8, 0) == 31;
  if (*a1 >= 4u) {
    *((void *)&v44 + 1) = 0xD100000003;
  }
  long long v23 = v46;
  a4[6] = v45;
  a4[7] = v23;
  long long v24 = v48;
  a4[8] = v47;
  a4[9] = v24;
  long long v25 = v42;
  a4[2] = v41;
  a4[3] = v25;
  long long v26 = v44;
  a4[4] = v43;
  a4[5] = v26;
  double result = *(double *)&v39;
  long long v28 = v40;
  *a4 = v39;
  a4[1] = v28;
  return result;
}

uint64_t sub_1CBD9F7E4(uint64_t a1)
{
  int v2 = *(_DWORD *)a1;
  uint64_t v3 = sub_1CBE52E8C(*(_DWORD *)a1);
  if ((v3 & 0xFF00000000) == 0) {
    llvm::report_fatal_error((llvm *)"Unknown Opcode", (const llvm::Twine *)1);
  }
  if ((v3 - 66) < 0x18 && ((0x808401u >> (v3 - 66)) & 1) != 0
    || (unsigned int v4 = sub_1CBDA6464((unsigned __int16)v2, 4u), v5 = *(void *)(a1 + 16), *(unsigned char *)(v5 + 16 * v4) != 2)
    && (*(unsigned char *)(v5 + 16 * (v4 + 1) + 9) & 7) != 0
    || (uint64_t v6 = sub_1CBE04154(v2), !v7))
  {
    char v8 = 0;
  }
  else
  {
    char v8 = 0;
    uint64_t v9 = 4 * v7;
    do
    {
      int v10 = *(_DWORD *)v6;
      v6 += 4;
      v8 |= v10 == 46;
      v9 -= 4;
    }
    while (v9);
  }
  return v8 & 1;
}

uint64_t sub_1CBD9F8B0(unsigned int *a1, unsigned __int16 a2, void *a3)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a3 + 48 * v3 + 16);
  if ((v4 & 0x4000000) != 0) {
    return 2;
  }
  if ((v3 - 6495) < 8) {
    return 1;
  }
  uint64_t v7 = *(void *)(*((void *)a1 + 2) + 16 * sub_1CBDA6464((unsigned __int16)*a1, 0x2Fu) + 8);
  if ((v4 & 0x1D00) == 0x500) {
    return v7 & 0xF;
  }
  v8.i64[0] = v4 & 0x1D00;
  v8.i64[1] = v4 & 0x1E00;
  if ((vmaxv_u8((uint8x8_t)vmovn_s16(vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_s64(v8, (int64x2_t)xmmword_1CDF535D0), (int32x4_t)vceqq_s64(v8, (int64x2_t)xmmword_1CDF535E0)), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_s64(v8, (int64x2_t)xmmword_1CDF535F0), (int32x4_t)vceqq_s64(v8, (int64x2_t)xmmword_1CDF53600))))) & 1) != 0|| (v4 & 0x1E00) == 0x1600)
  {
    return v7 & 0xF;
  }
  if ((v4 & 0x2001C00) == 0x2000400 || (v4 & 0x2001C00) == 33556480) {
    return 2;
  }
  if ((v4 & 0x800000) == 0)
  {
    if (sub_1CBDB2780(v3, 33, 0) == 54) {
      return 1;
    }
    else {
      return 2;
    }
  }
  if ((v7 & 0xF) == 0) {
    return 0;
  }
  uint64_t result = 1;
  if (((1 << (word_1CDF77000[dword_1CDF6DEF0[(unsigned __int16)v3] + a2] + 117)) & 0x1E80011) == 0) {
    return 2;
  }
  return result;
}

uint64_t sub_1CBD9FA40(uint64_t result, unsigned __int8 *a2, int a3)
{
  switch(a3)
  {
    case 5:
      uint64_t v3 = *((void *)a2 + 1);
      if (v3) {
        uint64_t v4 = v3 - 8;
      }
      else {
        uint64_t v4 = 0;
      }
      LODWORD(result) = *(_DWORD *)(*(void *)(v4 + 32) + 16) & 0x1FFF;
      break;
    case 4:
      int v5 = *a2;
      if (v5 == 5)
      {
        uint64_t v7 = *((void *)a2 + 1);
        if (v7) {
          uint64_t v8 = v7 - 8;
        }
        else {
          uint64_t v8 = 0;
        }
        uint64_t v6 = (uint64_t *)(*(void *)(v8 + 32) + 16);
      }
      else
      {
        if (v5 != 2)
        {
          LODWORD(result) = *(unsigned __int16 *)(*(void *)(result + 104) + 2 * *((unsigned int *)a2 + 2));
          return result;
        }
        uint64_t v6 = (uint64_t *)(a2 + 8);
      }
      uint64_t result = *v6;
      if ((unint64_t)*v6 >= 0x20000) {
        llvm::report_fatal_error((llvm *)"The shader is out of stack registers space", (const llvm::Twine *)1);
      }
      break;
    case 2:
      LODWORD(result) = *(_WORD *)(*(void *)(result + 104) + 2 * *((unsigned int *)a2 + 2)) & 0x1FF;
      if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1EBCC2888, memory_order_acquire) & 1) == 0)
      {
        int v9 = result;
        if (__cxa_guard_acquire(&qword_1EBCC2888))
        {
          dword_1EBCC2884 = 128;
          __cxa_guard_release(&qword_1EBCC2888);
        }
        LODWORD(result) = v9;
      }
      break;
    default:
      LODWORD(result) = ((uint64_t (*)(void))loc_1CBDB20AC)(*((unsigned int *)a2 + 2));
      break;
  }
  return result;
}

void sub_1CBD9FB50(long long *a1, int a2, uint64_t a3)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  if ((sub_1CBE52E8C(*(_DWORD *)a1) & 0xFF00000000) == 0) {
    llvm::report_fatal_error((llvm *)"Unknown Opcode", (const llvm::Twine *)1);
  }
  uint64_t v6 = (a2 + 1);
  uint64_t v7 = (_DWORD *)*((void *)a1 + 2);
  *(_DWORD *)(a3 + 32) = (v7[4 * v6 + 2] >> 12) & 3;
  long long v11 = *a1;
  unsigned int v12 = v14;
  uint64_t v13 = 0x800000000;
  if (&v11 == a1 || (unsigned int v8 = *((_DWORD *)a1 + 6)) == 0)
  {
    int v9 = v14;
  }
  else
  {
    if (v8 >= 9) {
      llvm::SmallVectorBase<unsigned int>::grow_pod();
    }
    memcpy(v14, v7, 16 * *((unsigned int *)a1 + 6));
    int v9 = v12;
    LODWORD(v13) = v8;
  }
  v14[128] = *((unsigned char *)a1 + 160);
  if (v9[16 * a2] == 5)
  {
    if (**(unsigned char **)&v9[16 * a2 + 8] == 4) {
      int v10 = 2;
    }
    else {
      int v10 = 1;
    }
    uint64_t v6 = (v10 + a2);
  }
  *(unsigned char *)(a3 + 28) = v9[16 * v6 + 8] & 1;
  if (v9 != v14) {
    free(v9);
  }
}

uint64_t sub_1CBD9FCC8(unsigned int *a1)
{
  uint64_t v1 = *((void *)a1 + 2);
  if (*(unsigned char *)v1 != 5)
  {
    uint64_t v5 = *a1;
    uint64_t v6 = sub_1CBE52E8C(*a1);
    if ((v6 & 0xFF00000000) != 0)
    {
      if ((v6 - 188) < 2) {
        return 1;
      }
      if (v6 == 19 || v6 == 147)
      {
        int v7 = sub_1CBDB2780(v5, 0, 0);
        uint64_t result = 2;
        char v8 = v7 - 2;
        if ((v7 - 2) <= 0x3F)
        {
          if (((1 << v8) & 0x8000000000002001) != 0) {
            return 1;
          }
          if (((1 << v8) & 0x4000000000001000) != 0) {
            return result;
          }
        }
        if (!v7) {
          return result;
        }
        int v9 = "Invalid dst_variant";
      }
      else
      {
        int v9 = "Invalid instruction";
      }
    }
    else
    {
      int v9 = "Unknown Opcode";
    }
    llvm::report_fatal_error((llvm *)v9, (const llvm::Twine *)1);
  }
  uint64_t v2 = *(void *)(v1 + 8);
  if (v2) {
    uint64_t v3 = v2 - 8;
  }
  else {
    uint64_t v3 = 0;
  }
  if (*(_DWORD *)(v3 + 24) == 9) {
    return 1;
  }
  else {
    return 2;
  }
}

uint64_t sub_1CBDA00E4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  int v4 = *(_DWORD *)(a4 + 8);
  if (v4 == 4)
  {
    unsigned int v6 = *(_DWORD *)(*(void *)(result + 16) + 16 * (a3 + 2) + 8);
    *(unsigned char *)(a4 + 16) = 0;
LABEL_6:
    *(unsigned char *)(a4 + 24) = (v6 & 0x10) != 0;
    int v5 = (v6 >> 20) & 0xF;
    goto LABEL_7;
  }
  if (v4 != 1)
  {
    unsigned int v6 = *(_DWORD *)(*(void *)(result + 16) + 16 * (a3 + 1) + 8);
    *(unsigned char *)(a4 + 16) = (v6 & 0x20) != 0;
    goto LABEL_6;
  }
  int v5 = 0;
  *(unsigned char *)(a4 + 16) = 0;
  *(unsigned char *)(a4 + 24) = 0;
LABEL_7:
  *(_DWORD *)(a4 + 20) = v5;
  return result;
}

uint64_t sub_1CBDA014C(void *a1, unsigned __int8 *a2)
{
  int v2 = *a2;
  if (v2 == 5)
  {
    uint64_t v4 = *((void *)a2 + 1);
    if (v4) {
      uint64_t v5 = v4 - 8;
    }
    else {
      uint64_t v5 = 0;
    }
    return dword_1CDF536FC[*(int *)(v5 + 24)];
  }
  else if (v2 == 2)
  {
    return 1;
  }
  else
  {
    unsigned int v6 = *((_DWORD *)a2 + 2);
    uint64_t v7 = a1[6];
    uint64_t v8 = *(unsigned int *)(*a1 + 24 * v6 + 4);
    if (*(_WORD *)(v7 + 2 * v8))
    {
      unsigned __int16 v9 = *(_WORD *)(v7 + 2 * v8) + v6;
      int v10 = (_WORD *)(a1[10] + 2 * *(unsigned int *)(*a1 + 24 * v6 + 12));
      long long v11 = (unsigned __int16 *)(v7 + 2 * v8 + 2);
      while (*v10 != 1)
      {
        int v12 = *v11++;
        v9 += v12;
        ++v10;
        if (!v12) {
          goto LABEL_16;
        }
      }
      if (v9) {
        unsigned int v6 = v9;
      }
    }
LABEL_16:
    uint64_t v13 = a1[3];
    unint64_t v14 = (unint64_t)v6 >> 3;
    uint64_t result = 7;
    if (v14 < *(unsigned __int16 *)(v13 + 22))
    {
      if ((*(unsigned __int8 *)(*(void *)(v13 + 8) + v14) >> (v6 & 7))) {
        return 2;
      }
      else {
        return 7;
      }
    }
  }
  return result;
}

uint64_t sub_1CBDA0234(unsigned int *a1)
{
  v9[1] = *MEMORY[0x1E4F143B8];
  char v2 = sub_1CBDA02EC(a1);
  uint64_t v3 = 0;
  uint64_t v4 = *a1;
  v9[0] = 0x160000000DLL;
  do
  {
    int v5 = sub_1CBDB2780(v4, *(unsigned int *)((char *)v9 + v3), 0);
    if (v5) {
      BOOL v6 = v5 == 38;
    }
    else {
      BOOL v6 = 1;
    }
    char v7 = v6;
    v2 |= v7;
    v3 += 4;
  }
  while (v3 != 8);
  return v2 & 1;
}

BOOL sub_1CBDA02EC(unsigned int *a1)
{
  int v2 = *a1;
  int v3 = sub_1CBDB2780(*a1, 0, 0);
  if (v3 == 3)
  {
    uint64_t v4 = *(void *)(*((void *)a1 + 2) + 16 * sub_1CBDA6464((unsigned __int16)v2, 3u) + 8);
    if (v4) {
      uint64_t v5 = v4 - 8;
    }
    else {
      uint64_t v5 = 0;
    }
    return *(_DWORD *)(v5 + 40) == 4;
  }
  else
  {
    return !v3 || v3 == 38;
  }
}

uint64_t sub_1CBDA0368(unsigned int *a1)
{
  uint64_t v2 = *a1;
  int v3 = sub_1CBDB2780(v2, 13, 0);
  if (v3 != 1
    && (v3 == 9
     || (*(unsigned char *)(*((void *)a1 + 2) + 16 * (sub_1CBDA6464((unsigned __int16)v2, 0x14u) + 1) + 8) & 7) != 0))
  {
    return 1;
  }
  int v5 = sub_1CBDB2780(v2, 22, 0);
  uint64_t result = v5 == 9;
  if ((v5 | 8) != 9) {
    return (*(unsigned char *)(*((void *)a1 + 2) + 16 * (sub_1CBDA6464((unsigned __int16)v2, 0x37u) + 1) + 8) & 7) != 0;
  }
  return result;
}

uint64_t sub_1CBDA0424(uint64_t a1, unsigned __int16 *a2, unsigned int a3, uint64_t a4, int a5)
{
  unsigned __int16 v9 = (unsigned __int8 *)(*((void *)a2 + 2) + 16 * a3);
  *(_DWORD *)(a4 + 24) = 0;
  if (*v9 == 1)
  {
    int v10 = *(void **)(a1 + 24);
    int v11 = sub_1CBDA014C(v10, v9);
    *(_DWORD *)(a4 + 8) = v11;
    if (((__int16)word_1CDF77000[dword_1CDF6DEF0[*a2] + (unsigned __int16)a3] - 139) <= 0x25)
    {
      int v12 = v11;
      if (((1 << (word_1CDF77000[dword_1CDF6DEF0[*a2] + (unsigned __int16)a3] + 117)) & 0x1600015) != 0)
      {
        int v13 = 1;
LABEL_11:
        *(_DWORD *)(a4 + 12) = v13;
        uint64_t result = sub_1CBD9FA40((uint64_t)v10, v9, v12);
        *(void *)a4 = result;
        *(_DWORD *)(a4 + 20) = (*(_DWORD *)(*((void *)a2 + 2) + 16 * (a3 + 1) + 8) >> 20) & 0xF;
        return result;
      }
      if (((1 << (word_1CDF77000[dword_1CDF6DEF0[*a2] + (unsigned __int16)a3] + 117)) & 0x3400000000) != 0)
      {
        int v13 = 2;
        goto LABEL_11;
      }
    }
    int v13 = ((uint64_t (*)(uint64_t, unsigned __int8 *))loc_1CBD9FDCC)(a1, v9);
    int v10 = *(void **)(a1 + 24);
    int v12 = *(_DWORD *)(a4 + 8);
    goto LABEL_11;
  }

  return sub_1CBDA0574(a1, (uint64_t)a2, v9, a3, a4, a5);
}

uint64_t sub_1CBDA0574(uint64_t result, uint64_t a2, unsigned __int8 *a3, unsigned int a4, uint64_t a5, int a6)
{
  uint64_t v10 = result;
  int v11 = *a3;
  if (v11 != 5)
  {
    if (v11 == 2)
    {
      *(_DWORD *)(a5 + 8) = 4;
      *(_DWORD *)(a5 + 12) = sub_1CBD9FCC8((unsigned int *)a2);
      int v17 = *(_DWORD *)(a5 + 8);
LABEL_19:
      uint64_t result = sub_1CBD9FA40(*(void *)(v10 + 24), a3, v17);
      *(void *)a5 = result;
      unsigned int v18 = a4 + 2;
LABEL_47:
      uint64_t v26 = *(void *)(*(void *)(a2 + 16) + 16 * v18 + 8);
      goto LABEL_52;
    }
    goto LABEL_20;
  }
  uint64_t v12 = *((void *)a3 + 1);
  if (*(unsigned char *)v12 != 4)
  {
LABEL_20:
    uint64_t v19 = 0;
    goto LABEL_22;
  }
  if (*a3 == 2 || (*(_DWORD *)(v12 + 16) - 9) < 2)
  {
    *(_DWORD *)(a5 + 8) = 4;
    int v14 = *(_DWORD *)(v12 + 32);
    int v15 = 1;
    if (v14 != 2)
    {
      if (a6) {
        int v15 = 1;
      }
      else {
        int v15 = 2;
      }
      if (a6) {
        int v16 = 2;
      }
      else {
        int v16 = 3;
      }
      if (v14 != 4) {
        int v15 = v16;
      }
    }
    *(_DWORD *)(a5 + 12) = v15;
    int v17 = 4;
    goto LABEL_19;
  }
  uint64_t v19 = v12 - 8;
LABEL_22:
  if (!*(_DWORD *)(v19 + 24))
  {
    int v30 = *(_DWORD *)(v19 + 40);
    if (a6) {
      int v31 = 1;
    }
    else {
      int v31 = 2;
    }
    if (a6) {
      int v32 = 2;
    }
    else {
      int v32 = 3;
    }
    if (v30 != 4) {
      int v31 = v32;
    }
    if (v30 == 2) {
      int v33 = 1;
    }
    else {
      int v33 = v31;
    }
    *(_DWORD *)(a5 + 8) = 3;
    *(_DWORD *)(a5 + 12) = v33;
    *(_WORD *)a5 = *(_WORD *)(*(void *)(v19 + 32) + 16) & 0x1FF;
    unsigned int v18 = a4 + 1;
    goto LABEL_47;
  }
  uint64_t v20 = *(void *)(a2 + 16);
  uint64_t v21 = *(void *)(v20 + 16 * a4 + 8);
  if (v21) {
    uint64_t v22 = v21 - 8;
  }
  else {
    uint64_t v22 = 0;
  }
  __int16 v23 = *(_WORD *)(*(void *)(v22 + 32) + 16) & 0x1FFF;
  int v24 = 1;
  if (a4) {
    int v25 = 1;
  }
  else {
    int v25 = 2;
  }
  uint64_t v26 = *(void *)(v20 + 16 * (v25 + a4) + 8);
  *(_DWORD *)(a5 + 8) = 5;
  *(_WORD *)a5 = v23;
  uint64_t v27 = *((void *)a3 + 1);
  if (v27) {
    uint64_t v28 = v27 - 8;
  }
  else {
    uint64_t v28 = 0;
  }
  int v29 = *(_DWORD *)(v28 + 40);
  if (v29 != 2)
  {
    if (v29 != 4) {
      int v24 = 2;
    }
    if (!a6) {
      ++v24;
    }
  }
  *(_DWORD *)(a5 + 12) = v24;
  *(_DWORD *)(a5 + 24) = *(_DWORD *)(v28 + 24) - 4;
LABEL_52:
  *(_DWORD *)(a5 + 20) = (v26 >> 20) & 0xF;
  return result;
}

uint64_t sub_1CBDA0760(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  int v4 = *(_DWORD *)(a4 + 4);
  if (v4 == 4)
  {
    unsigned int v6 = *(_DWORD *)(*(void *)(result + 16) + 16 * (a3 + 2) + 8);
    *(unsigned char *)(a4 + 12) = 0;
LABEL_6:
    *(unsigned char *)(a4 + 20) = (v6 & 0x10) != 0;
    int v5 = (v6 >> 20) & 0xF;
    goto LABEL_7;
  }
  if (v4 != 1)
  {
    unsigned int v6 = *(_DWORD *)(*(void *)(result + 16) + 16 * (a3 + 1) + 8);
    *(unsigned char *)(a4 + 12) = (v6 & 0x20) != 0;
    goto LABEL_6;
  }
  int v5 = 0;
  *(unsigned char *)(a4 + 12) = 0;
  *(unsigned char *)(a4 + 20) = 0;
LABEL_7:
  *(_DWORD *)(a4 + 16) = v5;
  return result;
}

uint64_t sub_1CBDA07C8(uint64_t result, uint64_t a2, unsigned int a3, int a4, unsigned __int8 *a5, unsigned int *a6)
{
  uint64_t v6 = 64;
  if (!a4) {
    uint64_t v6 = 0;
  }
  unint64_t v7 = ((unint64_t)a5[1] << 25) | ((unint64_t)*a5 << 24) | ((unint64_t)a5[2] << 26) | ((unint64_t)a5[3] << 27) | ((unint64_t)a5[4] << 28) | ((unint64_t)a5[5] << 29) | ((unint64_t)a5[6] << 30) | ((unint64_t)a5[7] << 31) | v6;
  if (result < 4)
  {
    unint64_t v8 = ((unint64_t)a6[1] << 36) | ((unint64_t)*a6 << 32);
    unsigned __int16 v9 = a6 + 2;
    uint64_t v10 = 0x10000000000;
  }
  else
  {
    unint64_t v8 = ((unint64_t)a6[4] << 36) | ((unint64_t)a6[3] << 32) | ((unint64_t)a6[5] << 40);
    unsigned __int16 v9 = a6 + 6;
    uint64_t v10 = 0x400000000000;
  }
  unint64_t v11 = v8 | (v10 * *v9) | v7;
  uint64_t v12 = (void *)(a2 + 16 * a3);
  if (*(unsigned char *)v12 == 2)
  {
    uint64_t v12 = (void *)(a2 + 16 * a3);
    v11 |= v12[1];
  }
  else
  {
    *uint64_t v12 = 2;
  }
  v12[1] = v11;
  return result;
}

uint64_t sub_1CBDA0898(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, int a5)
{
  uint64_t result = sub_1CBDA5AE0(a1, *(_DWORD *)a2, *(void *)(a2 + 16), a3, (int *)a4, *(_DWORD *)(a4 + 8), *(unsigned int *)(a4 + 12), *(_DWORD *)(a4 + 24), a5);
  if (result)
  {
    if (*(unsigned char *)(a4 + 16)) {
      unint64_t v9 = ((unint64_t)*(unsigned int *)(a4 + 20) << 20) | 0x20;
    }
    else {
      unint64_t v9 = (unint64_t)*(unsigned int *)(a4 + 20) << 20;
    }
    int v10 = *(_DWORD *)(a4 + 8);
    if (*(_DWORD *)(a4 + 12) == 4) {
      v9 |= 0x800uLL;
    }
    unsigned int v11 = a3 + 1;
    if (v10 == 4 || !a3 && v10 == 5)
    {
      *(_OWORD *)(*(void *)(a2 + 16) + 16 * v11) = xmmword_1CD91D2D0;
      unsigned int v11 = a3 + 2;
    }
    uint64_t v12 = *(void *)(a2 + 16);
    int v13 = (void *)(v12 + 16 * v11);
    if (*(unsigned char *)v13 == 2)
    {
      *(void *)(v12 + 16 * v11 + 8) |= v9;
    }
    else
    {
      *int v13 = 2;
      v13[1] = v9;
    }
    return 3;
  }
  return result;
}

uint64_t sub_1CBDA0990(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t result = sub_1CBDA0B7C(a1, a2, a3, a4);
  if (result == 3 && *(_DWORD *)(a4 + 8) != 1)
  {
    uint64_t v8 = *(void *)(a2 + 16) + 16 * (a3 + 1);
    uint64_t v9 = *(void *)(v8 + 8);
    if (*(unsigned char *)(a4 + 25)) {
      v9 |= 8uLL;
    }
    *(void *)(v8 + 8) = v9;
  }
  return result;
}

uint64_t sub_1CBDA09FC(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, _DWORD *a5)
{
  uint64_t result = sub_1CBDA0990(a1, a2, a3, a4);
  if (result == 3)
  {
    unsigned int v9 = *a5 - 1;
    uint64_t result = v9 >= 4 ? 3 : 0;
    uint64_t v10 = *(void *)(a2 + 16);
    if (*(unsigned char *)(v10 + 16 * a3) != 2)
    {
      if (v9 >= 4) {
        unint64_t v11 = 0;
      }
      else {
        unint64_t v11 = ((unint64_t)(*a5 - 1) << 8) + 256;
      }
      *(void *)(v10 + 16 * (a3 + 1) + 8) |= v11;
      return 3;
    }
  }
  return result;
}

uint64_t sub_1CBDA0A88(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, int a5)
{
  uint64_t result = sub_1CBDA5AE0(a1, *(_DWORD *)a2, *(void *)(a2 + 16), a3, (int *)a4, *(_DWORD *)(a4 + 8), *(unsigned int *)(a4 + 12), 0, a5);
  if (result == 3)
  {
    int v9 = *(_DWORD *)(a4 + 8);
    if (v9 != 1)
    {
      if (*(unsigned char *)(a4 + 16)) {
        unint64_t v10 = ((unint64_t)*(unsigned int *)(a4 + 20) << 20) | 0x20;
      }
      else {
        unint64_t v10 = (unint64_t)*(unsigned int *)(a4 + 20) << 20;
      }
      if (*(unsigned char *)(a4 + 24)) {
        v10 |= 0x10uLL;
      }
      unsigned int v11 = a3 + 1;
      if (v9 == 4)
      {
        *(_OWORD *)(*(void *)(a2 + 16) + 16 * v11) = xmmword_1CD91D2D0;
        unsigned int v11 = a3 + 2;
      }
      uint64_t v12 = *(void *)(a2 + 16);
      int v13 = (void *)(v12 + 16 * v11);
      if (*(unsigned char *)v13 == 2)
      {
        *(void *)(v12 + 16 * v11 + 8) |= v10;
      }
      else
      {
        *int v13 = 2;
        v13[1] = v10;
      }
    }
  }
  return result;
}

uint64_t sub_1CBDA0B7C(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t result = sub_1CBDA5AE0(a1, *(_DWORD *)a2, *(void *)(a2 + 16), a3, (int *)a4, *(_DWORD *)(a4 + 8), *(unsigned int *)(a4 + 12), 0, 1);
  if (result == 3)
  {
    int v8 = *(_DWORD *)(a4 + 8);
    if (v8 != 1)
    {
      if (*(unsigned char *)(a4 + 16)) {
        unint64_t v9 = ((unint64_t)*(unsigned int *)(a4 + 20) << 20) | 0x20;
      }
      else {
        unint64_t v9 = (unint64_t)*(unsigned int *)(a4 + 20) << 20;
      }
      if (*(unsigned char *)(a4 + 24)) {
        v9 |= 0x10uLL;
      }
      unsigned int v10 = a3 + 1;
      if (v8 == 4)
      {
        *(_OWORD *)(*(void *)(a2 + 16) + 16 * v10) = xmmword_1CD91D2D0;
        unsigned int v10 = a3 + 2;
      }
      uint64_t v11 = *(void *)(a2 + 16);
      uint64_t v12 = (void *)(v11 + 16 * v10);
      if (*(unsigned char *)v12 == 2)
      {
        *(void *)(v11 + 16 * v10 + 8) |= v9;
      }
      else
      {
        *uint64_t v12 = 2;
        v12[1] = v9;
      }
    }
  }
  return result;
}

uint64_t sub_1CBDA0C6C(_DWORD *a1, unsigned __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v8 = a2;
  unsigned int v9 = sub_1CBDA6464(a2, 0x57u);
  unsigned int v10 = sub_1CBDA6464(v8, 0x2Eu);
  unsigned int v11 = sub_1CBDA6464(v8, 0x2Fu);
  unsigned int v12 = sub_1CBDA6464(v8, 0x2Bu);
  unsigned int v13 = sub_1CBDA6464(v8, 0x30u);
  unsigned int v14 = sub_1CBDA6464(v8, 0x55u);
  unsigned int v15 = sub_1CBDA6464(v8, 0x56u);
  uint64_t result = sub_1CBDA0E68((uint64_t)a1, (unsigned int *)a3, v9, a5, 0, 0);
  if (result == 3)
  {
    sub_1CBDA1040(a1, a3, v10, *(_DWORD *)(a5 + 144), *(unsigned __int8 *)(a5 + 16), *(unsigned __int8 *)(a5 + 180), (unsigned __int8 *)(a5 + 124), (unsigned int *)(a5 + 148));
    uint64_t v17 = *(unsigned int *)(a5 + 12);
    if (v17 >= 3) {
      llvm::report_fatal_error((llvm *)"Unhandled size for getStorageFormat", (const llvm::Twine *)1);
    }
    unsigned int v18 = (void *)(*(void *)(a3 + 16) + 16 * v11);
    unint64_t v19 = v17 | (16 * *(unsigned __int8 *)(a5 + 132)) | ((unint64_t)(*(unsigned char *)(a5 + 53) == 0) << 11);
    *unsigned int v18 = 2;
    v18[1] = v19;
    uint64_t result = sub_1CBDA0A88((uint64_t)a1, a3, v12, a5 + 56, 1);
    if (result == 3)
    {
      uint64_t v20 = (__int16 *)(a5 + 28);
      if (*(_DWORD *)(a5 + 36) == 1)
      {
        uint64_t v21 = *v20;
        uint64_t v22 = (void *)(*(void *)(a3 + 16) + 16 * v13);
        *uint64_t v22 = 2;
        v22[1] = v21;
      }
      else
      {
        uint64_t result = sub_1CBDA0B7C((uint64_t)a1, a3, v13, (uint64_t)v20);
        if (result != 3) {
          return result;
        }
      }
      __int16 v23 = (void *)(*(void *)(a3 + 16) + 16 * v14);
      uint64_t v24 = *(__int16 *)(a5 + 140);
      *__int16 v23 = 2;
      v23[1] = v24;
      uint64_t v25 = *(int *)(a5 + 136);
      if (v25 > 4) {
        uint64_t v26 = 0;
      }
      else {
        uint64_t v26 = qword_1CDF537E8[v25];
      }
      uint64_t v27 = (void *)(*(void *)(a3 + 16) + 16 * v15);
      *uint64_t v27 = 2;
      v27[1] = v26;
      return 3;
    }
  }
  return result;
}

uint64_t sub_1CBDA0E68(uint64_t a1, unsigned int *a2, unsigned int a3, uint64_t a4, uint64_t a5, size_t __sz)
{
  int v7 = a5;
  uint64_t v12 = *a2;
  if ((a5 & 0xFF00000000) == 0)
  {
    int v13 = sub_1CBDB2780(*a2, 34, 0);
    int v7 = 1;
    switch(v13)
    {
      case '7':
        goto LABEL_10;
      case '8':
        int v7 = 2;
        goto LABEL_10;
      case '9':
        int v7 = 3;
        goto LABEL_10;
      case ':':
        int v7 = 4;
        goto LABEL_10;
      default:
        int v14 = v13;
        if (v13 == 77)
        {
          int v7 = 6;
        }
        else
        {
          uint64_t result = 0;
          if (v14 != 78) {
            return result;
          }
          int v7 = 8;
        }
LABEL_10:
        uint64_t v16 = sub_1CBE52E8C(v12);
        if ((v16 & 0xFF00000000) != 0
          && (v16 & 0xFFFFFFFC) == 0xA4
          && sub_1CBDB2780(v12, 45, 0) == 75)
        {
          ++v7;
        }
        break;
    }
  }
  if ((__sz & 0xFF00000000) == 0)
  {
    int v21 = sub_1CBDB2780(v12, 33, 0);
    if (v21 == 54)
    {
      __sz = 1;
    }
    else
    {
      int v22 = v21;
      uint64_t result = 0;
      if (v22 != 59) {
        return result;
      }
      __sz = 2;
    }
  }
  uint64_t result = sub_1CBDA5AE0(a1, v12, *((void *)a2 + 2), a3, (int *)a4, *(_DWORD *)(a4 + 8), __sz, 0, v7);
  if (result == 3)
  {
    unint64_t v17 = (unint64_t)*(unsigned int *)(a4 + 20) << 20;
    uint64_t v18 = a3 + 1;
    uint64_t v19 = *((void *)a2 + 2);
    uint64_t v20 = (void *)(v19 + 16 * v18);
    if (*(unsigned char *)v20 == 2)
    {
      uint64_t v20 = (void *)(v19 + 16 * v18);
      v17 |= v20[1];
    }
    else
    {
      *uint64_t v20 = 2;
    }
    v20[1] = v17;
    return 3;
  }
  return result;
}

uint64_t sub_1CBDA1040(_DWORD *a1, uint64_t a2, unsigned int a3, char a4, int a5, int a6, unsigned __int8 *a7, unsigned int *a8)
{
  if (*a1 > 3u)
  {
    uint64_t v13 = 32;
    if (!a5) {
      uint64_t v13 = 0;
    }
    uint64_t v12 = a3;
    uint64_t v14 = *(void *)(a2 + 16);
    unsigned int v15 = (void *)(v14 + 16 * a3);
    if (*(unsigned char *)v15 == 2)
    {
      unsigned int v15 = (void *)(v14 + 16 * a3);
      v13 |= v15[1];
    }
    else
    {
      *unsigned int v15 = 2;
    }
    v15[1] = v13;
    uint64_t result = sub_1CBDA07C8(*a1, *(void *)(a2 + 16), a3, a6, a7, a8);
  }
  else
  {
    uint64_t result = sub_1CBDA07C8(*a1, *(void *)(a2 + 16), a3, a6, a7, a8);
    uint64_t v12 = a3;
  }
  unint64_t v16 = (unint64_t)(a4 & 7) << 42;
  unint64_t v17 = (void *)(*(void *)(a2 + 16) + 16 * v12);
  if (*(unsigned char *)v17 == 2) {
    v16 |= v17[1];
  }
  else {
    *unint64_t v17 = 2;
  }
  v17[1] = v16;
  return result;
}

uint64_t sub_1CBDA112C(_DWORD *a1, unsigned __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v8 = a2;
  unsigned int v9 = sub_1CBDA6464(a2, 0x57u);
  unsigned int v10 = sub_1CBDA6464(v8, 0x2Eu);
  unsigned int v11 = sub_1CBDA6464(v8, 0x2Fu);
  unsigned int v12 = sub_1CBDA6464(v8, 0x2Bu);
  unsigned int v13 = sub_1CBDA6464(v8, 0x30u);
  unsigned int v29 = sub_1CBDA6464(v8, 0x55u);
  unsigned int v14 = sub_1CBDA6464(v8, 0x56u);
  unsigned int v15 = sub_1CBDA6464(v8, 0x6Fu);
  uint64_t result = sub_1CBDA0E68((uint64_t)a1, (unsigned int *)a3, v9, a5, 0, 0);
  if (result == 3)
  {
    sub_1CBDA1040(a1, a3, v10, *(_DWORD *)(a5 + 144), *(unsigned __int8 *)(a5 + 16), *(unsigned __int8 *)(a5 + 180), (unsigned __int8 *)(a5 + 124), (unsigned int *)(a5 + 148));
    uint64_t v17 = *(unsigned int *)(a5 + 12);
    if (v17 >= 3) {
      llvm::report_fatal_error((llvm *)"Unhandled size for getStorageFormat", (const llvm::Twine *)1);
    }
    uint64_t v18 = (void *)(*(void *)(a3 + 16) + 16 * v11);
    unint64_t v19 = v17 | (16 * *(unsigned __int8 *)(a5 + 132)) | ((unint64_t)(*(unsigned char *)(a5 + 53) == 0) << 11);
    *uint64_t v18 = 2;
    v18[1] = v19;
    uint64_t result = sub_1CBDA0A88((uint64_t)a1, a3, v12, a5 + 56, 1);
    if (result == 3)
    {
      uint64_t v20 = (__int16 *)(a5 + 28);
      if (*(_DWORD *)(a5 + 36) == 1)
      {
        uint64_t v21 = *v20;
        int v22 = (void *)(*(void *)(a3 + 16) + 16 * v13);
        *int v22 = 2;
        v22[1] = v21;
      }
      else
      {
        uint64_t result = sub_1CBDA0B7C((uint64_t)a1, a3, v13, (uint64_t)v20);
        if (result != 3) {
          return result;
        }
      }
      __int16 v23 = (void *)(*(void *)(a3 + 16) + 16 * v29);
      uint64_t v24 = *(__int16 *)(a5 + 140);
      *__int16 v23 = 2;
      v23[1] = v24;
      uint64_t v25 = *(int *)(a5 + 136);
      if (v25 > 4) {
        uint64_t v26 = 0;
      }
      else {
        uint64_t v26 = qword_1CDF537E8[v25];
      }
      uint64_t v27 = (void *)(*(void *)(a3 + 16) + 16 * v14);
      *uint64_t v27 = 2;
      v27[1] = v26;
      uint64_t result = sub_1CBDA0A88((uint64_t)a1, a3, v15, a5 + 88, 1);
      if (result == 3)
      {
        if (*(unsigned char *)(a5 + 84)) {
          BOOL v28 = 1;
        }
        else {
          BOOL v28 = *(_DWORD *)(a5 + 96) == 1;
        }
        if (v28) {
          return 3;
        }
        else {
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t sub_1CBDA1378(_DWORD *a1, unsigned __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v8 = a2;
  unsigned int v9 = sub_1CBDA6464(a2, 0x57u);
  unsigned int v10 = sub_1CBDA6464(v8, 0x2Eu);
  unsigned int v11 = sub_1CBDA6464(v8, 0x2Fu);
  unsigned int v12 = sub_1CBDA6464(v8, 0x2Bu);
  unsigned int v13 = sub_1CBDA6464(v8, 0x30u);
  unsigned int v14 = sub_1CBDA6464(v8, 0x55u);
  unsigned int v15 = sub_1CBDA6464(v8, 0x56u);
  uint64_t result = sub_1CBDA156C((uint64_t)a1, (unsigned int *)a3, v9, a5);
  if (result == 3)
  {
    sub_1CBDA1040(a1, a3, v10, *(_DWORD *)(a5 + 144), *(unsigned __int8 *)(a5 + 16), *(unsigned __int8 *)(a5 + 180), (unsigned __int8 *)(a5 + 124), (unsigned int *)(a5 + 148));
    uint64_t v17 = *(unsigned int *)(a5 + 12);
    if (v17 >= 3) {
      llvm::report_fatal_error((llvm *)"Unhandled size for getStorageFormat", (const llvm::Twine *)1);
    }
    uint64_t v18 = (void *)(*(void *)(a3 + 16) + 16 * v11);
    unint64_t v19 = v17 | (16 * *(unsigned __int8 *)(a5 + 132)) | ((unint64_t)(*(unsigned char *)(a5 + 53) == 0) << 11);
    *uint64_t v18 = 2;
    v18[1] = v19;
    uint64_t result = sub_1CBDA0A88((uint64_t)a1, a3, v12, a5 + 56, 1);
    if (result == 3)
    {
      uint64_t v20 = (__int16 *)(a5 + 28);
      if (*(_DWORD *)(a5 + 36) == 1)
      {
        uint64_t v21 = *v20;
        int v22 = (void *)(*(void *)(a3 + 16) + 16 * v13);
        *int v22 = 2;
        v22[1] = v21;
      }
      else
      {
        uint64_t result = sub_1CBDA0B7C((uint64_t)a1, a3, v13, (uint64_t)v20);
        if (result != 3) {
          return result;
        }
      }
      __int16 v23 = (void *)(*(void *)(a3 + 16) + 16 * v14);
      uint64_t v24 = *(__int16 *)(a5 + 140);
      *__int16 v23 = 2;
      v23[1] = v24;
      uint64_t v25 = *(int *)(a5 + 136);
      if (v25 > 4) {
        uint64_t v26 = 0;
      }
      else {
        uint64_t v26 = qword_1CDF537E8[v25];
      }
      uint64_t v27 = (void *)(*(void *)(a3 + 16) + 16 * v15);
      *uint64_t v27 = 2;
      v27[1] = v26;
      return 3;
    }
  }
  return result;
}

uint64_t sub_1CBDA156C(uint64_t a1, unsigned int *a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = *a2;
  int v9 = sub_1CBDB2780(v8, 34, 0);
  int v10 = 1;
  switch(v9)
  {
    case '7':
      goto LABEL_9;
    case '8':
      int v10 = 2;
      goto LABEL_9;
    case '9':
      int v10 = 3;
      goto LABEL_9;
    case ':':
      int v10 = 4;
      goto LABEL_9;
    default:
      int v11 = v9;
      if (v9 == 77)
      {
        int v10 = 6;
      }
      else
      {
        uint64_t result = 0;
        if (v11 != 78) {
          return result;
        }
        int v10 = 8;
      }
LABEL_9:
      uint64_t v13 = sub_1CBE52E8C(v8);
      if ((v13 & 0xFF00000000) != 0 && (v13 & 0xFFFFFFFC) == 0xA4 && sub_1CBDB2780(v8, 45, 0) == 75) {
        ++v10;
      }
      int v14 = sub_1CBDB2780(v8, 33, 0);
      if (v14 == 54)
      {
        size_t v16 = 1;
      }
      else
      {
        int v15 = v14;
        uint64_t result = 0;
        if (v15 != 59) {
          return result;
        }
        size_t v16 = 2;
      }
      uint64_t result = sub_1CBDA5AE0(a1, v8, *((void *)a2 + 2), a3, (int *)a4, *(_DWORD *)(a4 + 8), v16, 0, v10);
      if (result == 3)
      {
        unint64_t v17 = (unint64_t)*(unsigned int *)(a4 + 20) << 20;
        uint64_t v18 = a3 + 1;
        uint64_t v19 = *((void *)a2 + 2);
        uint64_t v20 = (void *)(v19 + 16 * v18);
        if (*(unsigned char *)v20 == 2)
        {
          uint64_t v20 = (void *)(v19 + 16 * v18);
          v17 |= v20[1];
        }
        else
        {
          *uint64_t v20 = 2;
        }
        v20[1] = v17;
        if (*(unsigned char *)(a4 + 24))
        {
          uint64_t v21 = *((void *)a2 + 2) + 16 * v18;
          if (*(unsigned char *)v21 == 2) {
            *(void *)(v21 + 8) |= 0x10uLL;
          }
          else {
            *(_OWORD *)uint64_t v21 = xmmword_1CDF53730;
          }
        }
        return 3;
      }
      return result;
  }
}

uint64_t sub_1CBDA1754(_DWORD *a1, unsigned __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v8 = a2;
  unsigned int v9 = sub_1CBDA6464(a2, 0x57u);
  unsigned int v10 = sub_1CBDA6464(v8, 0x2Eu);
  unsigned int v11 = sub_1CBDA6464(v8, 0x2Fu);
  unsigned int v12 = sub_1CBDA6464(v8, 0x2Bu);
  unsigned int v13 = sub_1CBDA6464(v8, 0x30u);
  unsigned int v29 = sub_1CBDA6464(v8, 0x55u);
  unsigned int v14 = sub_1CBDA6464(v8, 0x56u);
  unsigned int v15 = sub_1CBDA6464(v8, 0x6Fu);
  uint64_t result = sub_1CBDA156C((uint64_t)a1, (unsigned int *)a3, v9, a5);
  if (result == 3)
  {
    sub_1CBDA1040(a1, a3, v10, *(_DWORD *)(a5 + 144), *(unsigned __int8 *)(a5 + 16), *(unsigned __int8 *)(a5 + 180), (unsigned __int8 *)(a5 + 124), (unsigned int *)(a5 + 148));
    uint64_t v17 = *(unsigned int *)(a5 + 12);
    if (v17 >= 3) {
      llvm::report_fatal_error((llvm *)"Unhandled size for getStorageFormat", (const llvm::Twine *)1);
    }
    uint64_t v18 = (void *)(*(void *)(a3 + 16) + 16 * v11);
    unint64_t v19 = v17 | (16 * *(unsigned __int8 *)(a5 + 132)) | ((unint64_t)(*(unsigned char *)(a5 + 53) == 0) << 11);
    *uint64_t v18 = 2;
    v18[1] = v19;
    uint64_t result = sub_1CBDA0A88((uint64_t)a1, a3, v12, a5 + 56, 1);
    if (result == 3)
    {
      uint64_t v20 = (__int16 *)(a5 + 28);
      if (*(_DWORD *)(a5 + 36) == 1)
      {
        uint64_t v21 = *v20;
        int v22 = (void *)(*(void *)(a3 + 16) + 16 * v13);
        *int v22 = 2;
        v22[1] = v21;
      }
      else
      {
        uint64_t result = sub_1CBDA0B7C((uint64_t)a1, a3, v13, (uint64_t)v20);
        if (result != 3) {
          return result;
        }
      }
      __int16 v23 = (void *)(*(void *)(a3 + 16) + 16 * v29);
      uint64_t v24 = *(__int16 *)(a5 + 140);
      *__int16 v23 = 2;
      v23[1] = v24;
      uint64_t v25 = *(int *)(a5 + 136);
      if (v25 > 4) {
        uint64_t v26 = 0;
      }
      else {
        uint64_t v26 = qword_1CDF537E8[v25];
      }
      uint64_t v27 = (void *)(*(void *)(a3 + 16) + 16 * v14);
      *uint64_t v27 = 2;
      v27[1] = v26;
      uint64_t result = sub_1CBDA0A88((uint64_t)a1, a3, v15, a5 + 88, 1);
      if (result == 3)
      {
        if (*(unsigned char *)(a5 + 84)) {
          BOOL v28 = 1;
        }
        else {
          BOOL v28 = *(_DWORD *)(a5 + 96) == 1;
        }
        if (v28) {
          return 3;
        }
        else {
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t sub_1CBDA1998(unsigned int *a1, unsigned __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v8 = a2;
  unsigned int v9 = sub_1CBDA6464(a2, 0x57u);
  unsigned int v10 = sub_1CBDA6464(v8, 0x2Eu);
  unsigned int v11 = sub_1CBDA6464(v8, 0x2Fu);
  unsigned int v12 = sub_1CBDA6464(v8, 0x2Bu);
  unsigned int v13 = sub_1CBDA6464(v8, 0x30u);
  unsigned int v14 = sub_1CBDA6464(v8, 0x55u);
  unsigned int v15 = sub_1CBDA6464(v8, 0x56u);
  uint64_t result = sub_1CBDA0E68((uint64_t)a1, (unsigned int *)a3, v9, a5, 0, 0);
  if (result == 3)
  {
    int v17 = *(unsigned __int8 *)(a5 + 177);
    uint64_t v18 = 32 * *(unsigned __int8 *)(a5 + 16);
    uint64_t v19 = *(void *)(a3 + 16);
    uint64_t v20 = (void *)(v19 + 16 * v10);
    if (*(unsigned char *)v20 == 2)
    {
      uint64_t v20 = (void *)(v19 + 16 * v10);
      v18 |= v20[1];
    }
    else
    {
      *uint64_t v20 = 2;
    }
    v20[1] = v18;
    sub_1CBDA07C8(*a1, *(void *)(a3 + 16), v10, v17 != 0, (unsigned __int8 *)(a5 + 124), (unsigned int *)(a5 + 144));
    uint64_t v21 = *(unsigned int *)(a5 + 12);
    if (v21 >= 3) {
      llvm::report_fatal_error((llvm *)"Unhandled size for getStorageFormat", (const llvm::Twine *)1);
    }
    int v22 = (void *)(*(void *)(a3 + 16) + 16 * v11);
    unint64_t v23 = v21 | (16 * *(unsigned __int8 *)(a5 + 132)) | ((unint64_t)(*(unsigned char *)(a5 + 53) == 0) << 11);
    *int v22 = 2;
    v22[1] = v23;
    uint64_t result = sub_1CBDA0A88((uint64_t)a1, a3, v12, a5 + 56, 1);
    if (result == 3)
    {
      uint64_t result = sub_1CBDA0B7C((uint64_t)a1, a3, v13, a5 + 28);
      if (result == 3)
      {
        uint64_t v24 = (void *)(*(void *)(a3 + 16) + 16 * v14);
        uint64_t v25 = *(__int16 *)(a5 + 140);
        *uint64_t v24 = 2;
        v24[1] = v25;
        uint64_t v26 = *(int *)(a5 + 136);
        if (v26 > 4) {
          uint64_t v27 = 0;
        }
        else {
          uint64_t v27 = qword_1CDF537E8[v26];
        }
        BOOL v28 = (void *)(*(void *)(a3 + 16) + 16 * v15);
        *BOOL v28 = 2;
        v28[1] = v27;
        return 3;
      }
    }
  }
  return result;
}

uint64_t sub_1CBDA1BA8(unsigned int *a1, unsigned __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v8 = a2;
  unsigned int v9 = sub_1CBDA6464(a2, 0x57u);
  unsigned int v10 = sub_1CBDA6464(v8, 0x2Eu);
  unsigned int v11 = sub_1CBDA6464(v8, 0x2Fu);
  unsigned int v12 = sub_1CBDA6464(v8, 0x2Bu);
  unsigned int v13 = sub_1CBDA6464(v8, 0x30u);
  unsigned int v30 = sub_1CBDA6464(v8, 0x55u);
  unsigned int v14 = sub_1CBDA6464(v8, 0x56u);
  unsigned int v15 = sub_1CBDA6464(v8, 0x6Fu);
  uint64_t result = sub_1CBDA0E68((uint64_t)a1, (unsigned int *)a3, v9, a5, 0, 0);
  if (result == 3)
  {
    int v17 = *(unsigned __int8 *)(a5 + 177);
    uint64_t v18 = 32 * *(unsigned __int8 *)(a5 + 16);
    uint64_t v19 = *(void *)(a3 + 16);
    uint64_t v20 = (void *)(v19 + 16 * v10);
    if (*(unsigned char *)v20 == 2)
    {
      uint64_t v20 = (void *)(v19 + 16 * v10);
      v18 |= v20[1];
    }
    else
    {
      *uint64_t v20 = 2;
    }
    v20[1] = v18;
    sub_1CBDA07C8(*a1, *(void *)(a3 + 16), v10, v17 != 0, (unsigned __int8 *)(a5 + 124), (unsigned int *)(a5 + 144));
    uint64_t v21 = *(unsigned int *)(a5 + 12);
    if (v21 >= 3) {
      llvm::report_fatal_error((llvm *)"Unhandled size for getStorageFormat", (const llvm::Twine *)1);
    }
    int v22 = (void *)(*(void *)(a3 + 16) + 16 * v11);
    unint64_t v23 = v21 | (16 * *(unsigned __int8 *)(a5 + 132)) | ((unint64_t)(*(unsigned char *)(a5 + 53) == 0) << 11);
    *int v22 = 2;
    v22[1] = v23;
    uint64_t result = sub_1CBDA0A88((uint64_t)a1, a3, v12, a5 + 56, 1);
    if (result == 3)
    {
      uint64_t result = sub_1CBDA0B7C((uint64_t)a1, a3, v13, a5 + 28);
      if (result == 3)
      {
        uint64_t v24 = (void *)(*(void *)(a3 + 16) + 16 * v30);
        uint64_t v25 = *(__int16 *)(a5 + 140);
        *uint64_t v24 = 2;
        v24[1] = v25;
        uint64_t v26 = *(int *)(a5 + 136);
        uint64_t v27 = v26 > 4 ? 0 : qword_1CDF537E8[v26];
        BOOL v28 = (void *)(*(void *)(a3 + 16) + 16 * v14);
        *BOOL v28 = 2;
        v28[1] = v27;
        uint64_t result = sub_1CBDA0A88((uint64_t)a1, a3, v15, a5 + 88, 1);
        if (result == 3)
        {
          if (*(unsigned char *)(a5 + 84)) {
            BOOL v29 = 1;
          }
          else {
            BOOL v29 = *(_DWORD *)(a5 + 96) == 1;
          }
          if (v29) {
            return 3;
          }
          else {
            return 0;
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1CBDA1E08(unsigned int *a1, unsigned __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v8 = a2;
  unsigned int v9 = sub_1CBDA6464(a2, 0x57u);
  unsigned int v10 = sub_1CBDA6464(v8, 0x2Eu);
  unsigned int v11 = sub_1CBDA6464(v8, 0x2Fu);
  unsigned int v12 = sub_1CBDA6464(v8, 0x2Bu);
  unsigned int v13 = sub_1CBDA6464(v8, 0x30u);
  unsigned int v14 = sub_1CBDA6464(v8, 0x55u);
  unsigned int v15 = sub_1CBDA6464(v8, 0x56u);
  uint64_t result = sub_1CBDA156C((uint64_t)a1, (unsigned int *)a3, v9, a5);
  if (result == 3)
  {
    int v17 = *(unsigned __int8 *)(a5 + 176);
    uint64_t v18 = 32 * *(unsigned __int8 *)(a5 + 16);
    uint64_t v19 = *(void *)(a3 + 16);
    uint64_t v20 = (void *)(v19 + 16 * v10);
    if (*(unsigned char *)v20 == 2)
    {
      uint64_t v20 = (void *)(v19 + 16 * v10);
      v18 |= v20[1];
    }
    else
    {
      *uint64_t v20 = 2;
    }
    v20[1] = v18;
    sub_1CBDA07C8(*a1, *(void *)(a3 + 16), v10, v17 != 0, (unsigned __int8 *)(a5 + 124), (unsigned int *)(a5 + 144));
    uint64_t v21 = *(unsigned int *)(a5 + 12);
    if (v21 >= 3) {
      llvm::report_fatal_error((llvm *)"Unhandled size for getStorageFormat", (const llvm::Twine *)1);
    }
    int v22 = (void *)(*(void *)(a3 + 16) + 16 * v11);
    unint64_t v23 = v21 | (16 * *(unsigned __int8 *)(a5 + 132)) | ((unint64_t)(*(unsigned char *)(a5 + 53) == 0) << 11);
    *int v22 = 2;
    v22[1] = v23;
    uint64_t result = sub_1CBDA0A88((uint64_t)a1, a3, v12, a5 + 56, 1);
    if (result == 3)
    {
      uint64_t result = sub_1CBDA0B7C((uint64_t)a1, a3, v13, a5 + 28);
      if (result == 3)
      {
        uint64_t v24 = (void *)(*(void *)(a3 + 16) + 16 * v14);
        uint64_t v25 = *(__int16 *)(a5 + 140);
        *uint64_t v24 = 2;
        v24[1] = v25;
        uint64_t v26 = *(int *)(a5 + 136);
        if (v26 > 4) {
          uint64_t v27 = 0;
        }
        else {
          uint64_t v27 = qword_1CDF537E8[v26];
        }
        BOOL v28 = (void *)(*(void *)(a3 + 16) + 16 * v15);
        *BOOL v28 = 2;
        v28[1] = v27;
        return 3;
      }
    }
  }
  return result;
}

uint64_t sub_1CBDA2010(unsigned int *a1, unsigned __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v8 = a2;
  unsigned int v9 = sub_1CBDA6464(a2, 0x57u);
  unsigned int v10 = sub_1CBDA6464(v8, 0x2Eu);
  unsigned int v11 = sub_1CBDA6464(v8, 0x2Fu);
  unsigned int v12 = sub_1CBDA6464(v8, 0x2Bu);
  unsigned int v13 = sub_1CBDA6464(v8, 0x30u);
  unsigned int v30 = sub_1CBDA6464(v8, 0x55u);
  unsigned int v14 = sub_1CBDA6464(v8, 0x56u);
  unsigned int v15 = sub_1CBDA6464(v8, 0x6Fu);
  uint64_t result = sub_1CBDA156C((uint64_t)a1, (unsigned int *)a3, v9, a5);
  if (result == 3)
  {
    int v17 = *(unsigned __int8 *)(a5 + 176);
    uint64_t v18 = 32 * *(unsigned __int8 *)(a5 + 16);
    uint64_t v19 = *(void *)(a3 + 16);
    uint64_t v20 = (void *)(v19 + 16 * v10);
    if (*(unsigned char *)v20 == 2)
    {
      uint64_t v20 = (void *)(v19 + 16 * v10);
      v18 |= v20[1];
    }
    else
    {
      *uint64_t v20 = 2;
    }
    v20[1] = v18;
    sub_1CBDA07C8(*a1, *(void *)(a3 + 16), v10, v17 != 0, (unsigned __int8 *)(a5 + 124), (unsigned int *)(a5 + 144));
    uint64_t v21 = *(unsigned int *)(a5 + 12);
    if (v21 >= 3) {
      llvm::report_fatal_error((llvm *)"Unhandled size for getStorageFormat", (const llvm::Twine *)1);
    }
    int v22 = (void *)(*(void *)(a3 + 16) + 16 * v11);
    unint64_t v23 = v21 | (16 * *(unsigned __int8 *)(a5 + 132)) | ((unint64_t)(*(unsigned char *)(a5 + 53) == 0) << 11);
    *int v22 = 2;
    v22[1] = v23;
    uint64_t result = sub_1CBDA0A88((uint64_t)a1, a3, v12, a5 + 56, 1);
    if (result == 3)
    {
      uint64_t result = sub_1CBDA0B7C((uint64_t)a1, a3, v13, a5 + 28);
      if (result == 3)
      {
        uint64_t v24 = (void *)(*(void *)(a3 + 16) + 16 * v30);
        uint64_t v25 = *(__int16 *)(a5 + 140);
        *uint64_t v24 = 2;
        v24[1] = v25;
        uint64_t v26 = *(int *)(a5 + 136);
        uint64_t v27 = v26 > 4 ? 0 : qword_1CDF537E8[v26];
        BOOL v28 = (void *)(*(void *)(a3 + 16) + 16 * v14);
        *BOOL v28 = 2;
        v28[1] = v27;
        uint64_t result = sub_1CBDA0A88((uint64_t)a1, a3, v15, a5 + 88, 1);
        if (result == 3)
        {
          if (*(unsigned char *)(a5 + 84)) {
            BOOL v29 = 1;
          }
          else {
            BOOL v29 = *(_DWORD *)(a5 + 96) == 1;
          }
          if (v29) {
            return 3;
          }
          else {
            return 0;
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1CBDA2268(unsigned int *a1, unsigned __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v8 = a2;
  unsigned int v9 = sub_1CBDA6464(a2, 0x57u);
  unsigned int v10 = sub_1CBDA6464(v8, 0x2Eu);
  unsigned int v11 = sub_1CBDA6464(v8, 0x2Fu);
  unsigned int v12 = sub_1CBDA6464(v8, 0x2Bu);
  unsigned int v13 = sub_1CBDA6464(v8, 0x30u);
  unsigned int v14 = sub_1CBDA6464(v8, 0x55u);
  unsigned int v15 = sub_1CBDA6464(v8, 0x56u);
  uint64_t result = sub_1CBDA0E68((uint64_t)a1, (unsigned int *)a3, v9, a5, 0, 0);
  if (result == 3)
  {
    int v17 = *(unsigned __int8 *)(a5 + 145);
    uint64_t v18 = 32 * *(unsigned __int8 *)(a5 + 16);
    uint64_t v19 = *(void *)(a3 + 16);
    uint64_t v20 = (void *)(v19 + 16 * v10);
    if (*(unsigned char *)v20 == 2)
    {
      uint64_t v20 = (void *)(v19 + 16 * v10);
      v18 |= v20[1];
    }
    else
    {
      *uint64_t v20 = 2;
    }
    v20[1] = v18;
    sub_1CBDA07C8(*a1, *(void *)(a3 + 16), v10, v17 != 0, (unsigned __int8 *)(a5 + 92), (unsigned int *)(a5 + 112));
    sub_1CBDA2470(a3, v11, *(unsigned char *)(a5 + 101), *(_DWORD *)(a5 + 12), *(unsigned char *)(a5 + 53), (unsigned int *)(a5 + 76), (unsigned __int8 *)(a5 + 100));
    uint64_t v21 = (void *)(*(void *)(a3 + 16) + 16 * v12);
    uint64_t v22 = *(unsigned __int16 *)(a5 + 56);
    *uint64_t v21 = 2;
    v21[1] = v22;
    if (*(_DWORD *)(a5 + 36) == 1)
    {
      uint64_t v23 = *(__int16 *)(a5 + 28);
      uint64_t v24 = (void *)(*(void *)(a3 + 16) + 16 * v13);
      *uint64_t v24 = 2;
      v24[1] = v23;
    }
    else
    {
      uint64_t result = sub_1CBDA0B7C((uint64_t)a1, a3, v13, a5 + 28);
      if (result != 3) {
        return result;
      }
    }
    uint64_t v25 = (void *)(*(void *)(a3 + 16) + 16 * v14);
    uint64_t v26 = *(__int16 *)(a5 + 108);
    *uint64_t v25 = 2;
    v25[1] = v26;
    uint64_t v27 = *(int *)(a5 + 104);
    if (v27 > 4) {
      uint64_t v28 = 0;
    }
    else {
      uint64_t v28 = qword_1CDF537E8[v27];
    }
    BOOL v29 = (void *)(*(void *)(a3 + 16) + 16 * v15);
    *BOOL v29 = 2;
    v29[1] = v28;
    return 3;
  }
  return result;
}

uint64_t sub_1CBDA2470(uint64_t result, unsigned int a2, unsigned __int8 a3, unsigned int a4, char a5, unsigned int *a6, unsigned __int8 *a7)
{
  if (a4 >= 3) {
    llvm::report_fatal_error((llvm *)"Unhandled size for getStorageFormat", (const llvm::Twine *)1);
  }
  int v7 = (void *)(*(void *)(result + 16) + 16 * a2);
  *int v7 = 2;
  v7[1] = a4 | (16 * a3) | ((unint64_t)(a5 == 0) << 11);
  unint64_t v8 = ((unint64_t)*a7 << 16) | ((unint64_t)*a6 << 12);
  uint64_t v9 = *(void *)(result + 16);
  unsigned int v10 = (void *)(v9 + 16 * a2);
  if (*(unsigned char *)v10 == 2)
  {
    unsigned int v10 = (void *)(v9 + 16 * a2);
    v8 |= v10[1];
  }
  else
  {
    *unsigned int v10 = 2;
  }
  v10[1] = v8;
  return result;
}

uint64_t sub_1CBDA2508(unsigned int *a1, unsigned __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v8 = a2;
  unsigned int v9 = sub_1CBDA6464(a2, 0x57u);
  unsigned int v10 = sub_1CBDA6464(v8, 0x2Eu);
  unsigned int v11 = sub_1CBDA6464(v8, 0x2Fu);
  unsigned int v12 = sub_1CBDA6464(v8, 0x2Bu);
  unsigned int v13 = sub_1CBDA6464(v8, 0x30u);
  unsigned int v14 = sub_1CBDA6464(v8, 0x55u);
  unsigned int v15 = sub_1CBDA6464(v8, 0x56u);
  uint64_t result = sub_1CBDA156C((uint64_t)a1, (unsigned int *)a3, v9, a5);
  if (result == 3)
  {
    int v17 = *(unsigned __int8 *)(a5 + 144);
    uint64_t v18 = 32 * *(unsigned __int8 *)(a5 + 16);
    uint64_t v19 = *(void *)(a3 + 16);
    uint64_t v20 = (void *)(v19 + 16 * v10);
    if (*(unsigned char *)v20 == 2)
    {
      uint64_t v20 = (void *)(v19 + 16 * v10);
      v18 |= v20[1];
    }
    else
    {
      *uint64_t v20 = 2;
    }
    v20[1] = v18;
    sub_1CBDA07C8(*a1, *(void *)(a3 + 16), v10, v17 != 0, (unsigned __int8 *)(a5 + 92), (unsigned int *)(a5 + 112));
    sub_1CBDA2470(a3, v11, *(unsigned char *)(a5 + 101), *(_DWORD *)(a5 + 12), *(unsigned char *)(a5 + 53), (unsigned int *)(a5 + 76), (unsigned __int8 *)(a5 + 100));
    uint64_t v21 = (void *)(*(void *)(a3 + 16) + 16 * v12);
    uint64_t v22 = *(unsigned __int16 *)(a5 + 56);
    *uint64_t v21 = 2;
    v21[1] = v22;
    if (*(_DWORD *)(a5 + 36) == 1)
    {
      uint64_t v23 = *(__int16 *)(a5 + 28);
      uint64_t v24 = (void *)(*(void *)(a3 + 16) + 16 * v13);
      *uint64_t v24 = 2;
      v24[1] = v23;
    }
    else
    {
      uint64_t result = sub_1CBDA0B7C((uint64_t)a1, a3, v13, a5 + 28);
      if (result != 3) {
        return result;
      }
    }
    uint64_t v25 = (void *)(*(void *)(a3 + 16) + 16 * v14);
    uint64_t v26 = *(__int16 *)(a5 + 108);
    *uint64_t v25 = 2;
    v25[1] = v26;
    uint64_t v27 = *(int *)(a5 + 104);
    if (v27 > 4) {
      uint64_t v28 = 0;
    }
    else {
      uint64_t v28 = qword_1CDF537E8[v27];
    }
    BOOL v29 = (void *)(*(void *)(a3 + 16) + 16 * v15);
    *BOOL v29 = 2;
    v29[1] = v28;
    return 3;
  }
  return result;
}

uint64_t sub_1CBDA2708(unsigned int *a1, unsigned __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v8 = a2;
  unsigned int v9 = sub_1CBDA6464(a2, 0x57u);
  unsigned int v10 = sub_1CBDA6464(v8, 0x2Eu);
  unsigned int v11 = sub_1CBDA6464(v8, 0x2Fu);
  unsigned int v12 = sub_1CBDA6464(v8, 0x2Bu);
  unsigned int v13 = sub_1CBDA6464(v8, 0x30u);
  unsigned int v14 = sub_1CBDA6464(v8, 0x55u);
  unsigned int v15 = sub_1CBDA6464(v8, 0x56u);
  uint64_t result = sub_1CBDA0E68((uint64_t)a1, (unsigned int *)a3, v9, a5, 0, 0);
  if (result == 3)
  {
    int v17 = *(unsigned __int8 *)(a5 + 177);
    uint64_t v18 = 32 * *(unsigned __int8 *)(a5 + 16);
    uint64_t v19 = *(void *)(a3 + 16);
    uint64_t v20 = (void *)(v19 + 16 * v10);
    if (*(unsigned char *)v20 == 2)
    {
      uint64_t v20 = (void *)(v19 + 16 * v10);
      v18 |= v20[1];
    }
    else
    {
      *uint64_t v20 = 2;
    }
    v20[1] = v18;
    sub_1CBDA07C8(*a1, *(void *)(a3 + 16), v10, v17 != 0, (unsigned __int8 *)(a5 + 124), (unsigned int *)(a5 + 144));
    sub_1CBDA2910(a3, v11, *(unsigned char *)(a5 + 132), *(_DWORD *)(a5 + 12), *(unsigned char *)(a5 + 53), (unsigned __int8 *)(a5 + 176));
    uint64_t result = sub_1CBDA0A88((uint64_t)a1, a3, v12, a5 + 56, 1);
    if (result == 3)
    {
      uint64_t v21 = (__int16 *)(a5 + 28);
      if (*(_DWORD *)(a5 + 36) == 1)
      {
        uint64_t v22 = *v21;
        uint64_t v23 = (void *)(*(void *)(a3 + 16) + 16 * v13);
        *uint64_t v23 = 2;
        v23[1] = v22;
      }
      else
      {
        uint64_t result = sub_1CBDA0B7C((uint64_t)a1, a3, v13, (uint64_t)v21);
        if (result != 3) {
          return result;
        }
      }
      uint64_t v24 = (void *)(*(void *)(a3 + 16) + 16 * v14);
      uint64_t v25 = *(__int16 *)(a5 + 140);
      *uint64_t v24 = 2;
      v24[1] = v25;
      uint64_t v26 = *(int *)(a5 + 136);
      if (v26 > 4) {
        uint64_t v27 = 0;
      }
      else {
        uint64_t v27 = qword_1CDF537E8[v26];
      }
      uint64_t v28 = (void *)(*(void *)(a3 + 16) + 16 * v15);
      *uint64_t v28 = 2;
      v28[1] = v27;
      return 3;
    }
  }
  return result;
}

uint64_t sub_1CBDA2910(uint64_t result, unsigned int a2, unsigned __int8 a3, unsigned int a4, char a5, unsigned __int8 *a6)
{
  if (a4 >= 3) {
    llvm::report_fatal_error((llvm *)"Unhandled size for getStorageFormat", (const llvm::Twine *)1);
  }
  uint64_t v6 = (void *)(*(void *)(result + 16) + 16 * a2);
  *uint64_t v6 = 2;
  v6[1] = a4 | (16 * a3) | ((unint64_t)(a5 == 0) << 11);
  unint64_t v7 = (unint64_t)*a6 << 17;
  uint64_t v8 = *(void *)(result + 16);
  unsigned int v9 = (void *)(v8 + 16 * a2);
  if (*(unsigned char *)v9 == 2)
  {
    unsigned int v9 = (void *)(v8 + 16 * a2);
    v7 |= v9[1];
  }
  else
  {
    *unsigned int v9 = 2;
  }
  v9[1] = v7;
  return result;
}

uint64_t sub_1CBDA29A0(unsigned int *a1, unsigned __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v8 = a2;
  unsigned int v9 = sub_1CBDA6464(a2, 0x2Eu);
  unsigned int v10 = sub_1CBDA6464(v8, 0x2Fu);
  unsigned int v11 = sub_1CBDA6464(v8, 0x2Bu);
  unsigned int v12 = sub_1CBDA6464(v8, 0x30u);
  unsigned int v13 = sub_1CBDA6464(v8, 0x55u);
  unsigned int v14 = sub_1CBDA6464(v8, 0x56u);
  int v15 = *(unsigned __int8 *)(a5 + 177);
  uint64_t v16 = 32 * *(unsigned __int8 *)(a5 + 16);
  uint64_t v17 = *(void *)(a3 + 16);
  uint64_t v18 = (void *)(v17 + 16 * v9);
  if (*(unsigned char *)v18 == 2)
  {
    uint64_t v18 = (void *)(v17 + 16 * v9);
    v16 |= v18[1];
  }
  else
  {
    *uint64_t v18 = 2;
  }
  v18[1] = v16;
  sub_1CBDA07C8(*a1, *(void *)(a3 + 16), v9, v15 != 0, (unsigned __int8 *)(a5 + 124), (unsigned int *)(a5 + 144));
  sub_1CBDA2910(a3, v10, *(unsigned char *)(a5 + 132), *(_DWORD *)(a5 + 12), *(unsigned char *)(a5 + 53), (unsigned __int8 *)(a5 + 176));
  uint64_t result = sub_1CBDA0A88((uint64_t)a1, a3, v11, a5 + 56, 1);
  if (result == 3)
  {
    uint64_t v20 = (__int16 *)(a5 + 28);
    if (*(_DWORD *)(a5 + 36) == 1)
    {
      uint64_t v21 = *v20;
      uint64_t v22 = (void *)(*(void *)(a3 + 16) + 16 * v12);
      *uint64_t v22 = 2;
      v22[1] = v21;
    }
    else
    {
      uint64_t result = sub_1CBDA0B7C((uint64_t)a1, a3, v12, (uint64_t)v20);
      if (result != 3) {
        return result;
      }
    }
    uint64_t v23 = (void *)(*(void *)(a3 + 16) + 16 * v13);
    uint64_t v24 = *(__int16 *)(a5 + 140);
    *uint64_t v23 = 2;
    v23[1] = v24;
    uint64_t v25 = *(int *)(a5 + 136);
    if (v25 > 4) {
      uint64_t v26 = 0;
    }
    else {
      uint64_t v26 = qword_1CDF537E8[v25];
    }
    uint64_t v27 = (void *)(*(void *)(a3 + 16) + 16 * v14);
    *uint64_t v27 = 2;
    v27[1] = v26;
    return 3;
  }
  return result;
}

uint64_t sub_1CBDA2B74(unsigned int *a1, unsigned __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v8 = a2;
  unsigned int v9 = sub_1CBDA6464(a2, 0x57u);
  unsigned int v10 = sub_1CBDA6464(v8, 0x2Eu);
  unsigned int v11 = sub_1CBDA6464(v8, 0x2Fu);
  unsigned int v12 = sub_1CBDA6464(v8, 0x2Bu);
  unsigned int v13 = sub_1CBDA6464(v8, 0x30u);
  unsigned int v14 = sub_1CBDA6464(v8, 0x55u);
  unsigned int v15 = sub_1CBDA6464(v8, 0x56u);
  uint64_t result = sub_1CBDA156C((uint64_t)a1, (unsigned int *)a3, v9, a5);
  if (result == 3)
  {
    int v17 = *(unsigned __int8 *)(a5 + 176);
    uint64_t v18 = 32 * *(unsigned __int8 *)(a5 + 16);
    uint64_t v19 = *(void *)(a3 + 16);
    uint64_t v20 = (void *)(v19 + 16 * v10);
    if (*(unsigned char *)v20 == 2)
    {
      uint64_t v20 = (void *)(v19 + 16 * v10);
      v18 |= v20[1];
    }
    else
    {
      *uint64_t v20 = 2;
    }
    v20[1] = v18;
    sub_1CBDA07C8(*a1, *(void *)(a3 + 16), v10, v17 != 0, (unsigned __int8 *)(a5 + 124), (unsigned int *)(a5 + 144));
    uint64_t v21 = *(unsigned int *)(a5 + 12);
    if (v21 >= 3) {
      llvm::report_fatal_error((llvm *)"Unhandled size for getStorageFormat", (const llvm::Twine *)1);
    }
    uint64_t v22 = (void *)(*(void *)(a3 + 16) + 16 * v11);
    unint64_t v23 = v21 | (16 * *(unsigned __int8 *)(a5 + 132)) | ((unint64_t)(*(unsigned char *)(a5 + 53) == 0) << 11);
    *uint64_t v22 = 2;
    v22[1] = v23;
    uint64_t result = sub_1CBDA0A88((uint64_t)a1, a3, v12, a5 + 56, 1);
    if (result == 3)
    {
      uint64_t v24 = (__int16 *)(a5 + 28);
      if (*(_DWORD *)(a5 + 36) == 1)
      {
        uint64_t v25 = *v24;
        uint64_t v26 = (void *)(*(void *)(a3 + 16) + 16 * v13);
        *uint64_t v26 = 2;
        v26[1] = v25;
      }
      else
      {
        uint64_t result = sub_1CBDA0B7C((uint64_t)a1, a3, v13, (uint64_t)v24);
        if (result != 3) {
          return result;
        }
      }
      uint64_t v27 = (void *)(*(void *)(a3 + 16) + 16 * v14);
      uint64_t v28 = *(__int16 *)(a5 + 140);
      *uint64_t v27 = 2;
      v27[1] = v28;
      uint64_t v29 = *(int *)(a5 + 136);
      if (v29 > 4) {
        uint64_t v30 = 0;
      }
      else {
        uint64_t v30 = qword_1CDF537E8[v29];
      }
      int v31 = (void *)(*(void *)(a3 + 16) + 16 * v15);
      *int v31 = 2;
      v31[1] = v30;
      return 3;
    }
  }
  return result;
}

uint64_t sub_1CBDA2DA0(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t result = sub_1CBDA0A88(a1, a2, a3, a4, 1);
  if (result == 3 && *(_DWORD *)(a4 + 8) != 1)
  {
    uint64_t v9 = a3 + 1;
    if (*(_DWORD *)(a4 + 12) == 4)
    {
      uint64_t v10 = *(void *)(a2 + 16);
      unsigned int v11 = (_OWORD *)(v10 + 16 * v9);
      if (*(unsigned char *)v11 == 2) {
        *(void *)(v10 + 16 * v9 + 8) |= 0x800uLL;
      }
      else {
        *unsigned int v11 = xmmword_1CDF53740;
      }
    }
    if (*(unsigned char *)(a4 + 26)) {
      uint64_t v12 = (4 * *(unsigned __int8 *)(a4 + 25)) | 2;
    }
    else {
      uint64_t v12 = 4 * *(unsigned __int8 *)(a4 + 25);
    }
    uint64_t v13 = v12 | *(unsigned __int8 *)(a4 + 27);
    unsigned int v14 = (void *)(*(void *)(a2 + 16) + 16 * v9);
    if (*(unsigned char *)v14 == 2) {
      v13 |= v14[1];
    }
    else {
      *unsigned int v14 = 2;
    }
    v14[1] = v13;
  }
  return result;
}

double sub_1CBDA2E7C(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  if (sub_1CBDA5AE0(a1, *(_DWORD *)a2, *(void *)(a2 + 16), a3, (int *)a4, *(_DWORD *)(a4 + 8), *(unsigned int *)(a4 + 12), *(_DWORD *)(a4 + 24), 2) == 3)
  {
    unint64_t v8 = *(unsigned __int8 *)(a4 + 28) | ((unint64_t)*(unsigned int *)(a4 + 20) << 20);
    if (*(unsigned char *)(a4 + 16)) {
      v8 |= 0x20uLL;
    }
    if (*(_DWORD *)(a4 + 12) == 4) {
      v8 |= 0x800uLL;
    }
    if ((*(_DWORD *)(a4 + 8) & 0xFFFFFFFE) == 4) {
      int v9 = 2;
    }
    else {
      int v9 = 1;
    }
    uint64_t v10 = v9 + a3;
    uint64_t v11 = *(void *)(a2 + 16);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    if (*(unsigned char *)v12 == 2)
    {
      uint64_t v12 = (void *)(v11 + 16 * v10);
      v8 |= v12[1];
    }
    else
    {
      *uint64_t v12 = 2;
    }
    v12[1] = v8;
    if ((*(_DWORD *)(a4 + 8) & 0xFFFFFFFE) == 4)
    {
      uint64_t v13 = (_OWORD *)(*(void *)(a2 + 16) + 16 * (a3 + 1));
      if (*(unsigned char *)v13 != 2)
      {
        *(void *)&double result = 2;
        *uint64_t v13 = xmmword_1CD91D2D0;
      }
    }
  }
  return result;
}

uint64_t sub_1CBDA2F8C(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t result = sub_1CBDA0A88(a1, a2, a3, a4, 2);
  if (result == 3 && *(_DWORD *)(a4 + 8) != 1)
  {
    uint64_t v9 = a3 + 1;
    if (*(_DWORD *)(a4 + 12) == 4)
    {
      uint64_t v10 = *(void *)(a2 + 16);
      uint64_t v11 = (_OWORD *)(v10 + 16 * v9);
      if (*(unsigned char *)v11 == 2) {
        *(void *)(v10 + 16 * v9 + 8) |= 0x800uLL;
      }
      else {
        *uint64_t v11 = xmmword_1CDF53740;
      }
    }
    if (*(unsigned char *)(a4 + 26)) {
      uint64_t v12 = (4 * *(unsigned __int8 *)(a4 + 25)) | 2;
    }
    else {
      uint64_t v12 = 4 * *(unsigned __int8 *)(a4 + 25);
    }
    uint64_t v13 = v12 | *(unsigned __int8 *)(a4 + 27);
    unsigned int v14 = (void *)(*(void *)(a2 + 16) + 16 * v9);
    if (*(unsigned char *)v14 == 2) {
      v13 |= v14[1];
    }
    else {
      *unsigned int v14 = 2;
    }
    v14[1] = v13;
  }
  return result;
}

uint64_t sub_1CBDA3068(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t result = sub_1CBDA5AE0(a1, *(_DWORD *)a2, *(void *)(a2 + 16), a3, (int *)a4, *(_DWORD *)(a4 + 8), *(unsigned int *)(a4 + 12), *(_DWORD *)(a4 + 24), 1);
  if (result)
  {
    if (*(unsigned char *)(a4 + 16)) {
      unint64_t v8 = ((unint64_t)*(unsigned int *)(a4 + 20) << 20) | 0x20;
    }
    else {
      unint64_t v8 = (unint64_t)*(unsigned int *)(a4 + 20) << 20;
    }
    int v9 = *(_DWORD *)(a4 + 8);
    if (*(_DWORD *)(a4 + 12) == 4) {
      v8 |= 0x800uLL;
    }
    unsigned int v10 = a3 + 1;
    if (v9 == 4 || !a3 && v9 == 5)
    {
      *(_OWORD *)(*(void *)(a2 + 16) + 16 * v10) = xmmword_1CD91D2D0;
      unsigned int v10 = a3 + 2;
    }
    uint64_t v11 = *(void *)(a2 + 16);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    if (*(unsigned char *)v12 == 2)
    {
      *(void *)(v11 + 16 * v10 + 8) |= v8;
    }
    else
    {
      *uint64_t v12 = 2;
      v12[1] = v8;
    }
    return 3;
  }
  return result;
}

uint64_t sub_1CBDA315C(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t result = sub_1CBDA5AE0(a1, *(_DWORD *)a2, *(void *)(a2 + 16), a3, (int *)a4, *(_DWORD *)(a4 + 8), *(unsigned int *)(a4 + 12), *(_DWORD *)(a4 + 24), 2);
  if (result == 3)
  {
    unint64_t v8 = *(unsigned __int8 *)(a4 + 28) | ((unint64_t)*(unsigned int *)(a4 + 20) << 20);
    if (*(unsigned char *)(a4 + 16)) {
      v8 |= 0x20uLL;
    }
    if ((*(_DWORD *)(a4 + 8) & 0xFFFFFFFE) == 4)
    {
      return 0;
    }
    else
    {
      uint64_t v9 = a3 + 1;
      uint64_t v10 = *(void *)(a2 + 16);
      uint64_t v11 = (void *)(v10 + 16 * v9);
      if (*(unsigned char *)v11 == 2)
      {
        uint64_t v11 = (void *)(v10 + 16 * v9);
        v8 |= v11[1];
      }
      else
      {
        *uint64_t v11 = 2;
      }
      v11[1] = v8;
      return 3;
    }
  }
  return result;
}

uint64_t sub_1CBDA3234(uint64_t a1, unsigned int *a2, unsigned int a3, uint64_t a4)
{
  int v8 = *a2;
  if (sub_1CBDB2780(*a2, 37, 0) == 41)
  {
    uint64_t result = sub_1CBDA5AE0(a1, v8, *((void *)a2 + 2), a3, (int *)a4, *(_DWORD *)(a4 + 8), 2uLL, 0, 1);
    if (result != 3) {
      return result;
    }
    if (*(unsigned char *)(a4 + 24)) {
      unint64_t v10 = ((unint64_t)*(unsigned int *)(a4 + 20) << 20) | 0x10;
    }
    else {
      unint64_t v10 = (unint64_t)*(unsigned int *)(a4 + 20) << 20;
    }
    uint64_t v11 = a3 + 1;
    uint64_t v12 = *((void *)a2 + 2);
    uint64_t v13 = (void *)(v12 + 16 * v11);
    if (*(unsigned char *)v13 == 2)
    {
      uint64_t v13 = (void *)(v12 + 16 * v11);
      v10 |= v13[1];
    }
    else
    {
      *uint64_t v13 = 2;
    }
    v13[1] = v10;
  }
  else
  {
    *(_OWORD *)(*((void *)a2 + 2) + 16 * a3) = xmmword_1CD91D2D0;
  }
  return 3;
}

uint64_t sub_1CBDA3344(uint64_t a1, uint64_t a2, unsigned int a3, int *a4)
{
  int v4 = *a4;
  if (*a4 == 2)
  {
    uint64_t v6 = (int64x2_t *)(*(void *)(a2 + 16) + 16 * a3);
    uint64_t v7 = *((unsigned __int8 *)a4 + 5);
    if (v7 == 7)
    {
      int64x2_t v8 = vdupq_n_s64(1uLL);
    }
    else
    {
      if (v7 != 6)
      {
        v6->i64[0] = 1;
        v6->i64[1] = v7 + 71;
        return 3;
      }
      int64x2_t v8 = (int64x2_t)xmmword_1CDF53750;
    }
    *uint64_t v6 = v8;
    return 3;
  }
  if (v4 == 1)
  {
    uint64_t v5 = (uint64_t)(a4 + 1);
    return sub_1CBDA0898(a1, a2, a3, v5, 1);
  }
  if (!v4)
  {
    uint64_t v5 = (uint64_t)(a4 + 1);
    return sub_1CBDA0898(a1, a2, a3, v5, 1);
  }
  return 0;
}

uint64_t sub_1CBDA33C8(unsigned int *a1, uint64_t a2, unsigned int a3, unsigned int a4, char a5, int a6, unsigned __int8 *a7, unsigned int *a8)
{
  if (a4 != 2)
  {
    if (a4 > 1) {
      return 0;
    }
    uint64_t v8 = 32 * (a5 != 0);
    uint64_t v9 = *(void *)(a2 + 16);
    unint64_t v10 = (void *)(v9 + 16 * a3);
    if (*(unsigned char *)v10 == 2)
    {
      unint64_t v10 = (void *)(v9 + 16 * a3);
      v8 |= v10[1];
    }
    else
    {
      *unint64_t v10 = 2;
    }
    v10[1] = v8;
  }
  sub_1CBDA07C8(*a1, *(void *)(a2 + 16), a3, a6, a7, a8);
  return 3;
}

uint64_t sub_1CBDA34C0(uint64_t a1, unsigned int *a2, unsigned int a3, uint64_t a4, int a5)
{
  int v10 = *a2;
  if (sub_1CBDB2780(*a2, 33, 0) == 65) {
    size_t v11 = 1;
  }
  else {
    size_t v11 = 2;
  }
  int v12 = 3;
  if (!a5) {
    int v12 = 4;
  }
  uint64_t result = sub_1CBDA5AE0(a1, v10, *((void *)a2 + 2), a3, (int *)a4, *(_DWORD *)(a4 + 8), v11, *(_DWORD *)(a4 + 24), v12);
  if (result == 3)
  {
    uint64_t v14 = a3 + 1;
    unint64_t v15 = (unint64_t)*(unsigned int *)(a4 + 20) << 20;
    uint64_t v16 = *((void *)a2 + 2);
    int v17 = (void *)(v16 + 16 * v14);
    if (*(unsigned char *)v17 == 2)
    {
      *(void *)(v16 + 16 * v14 + 8) |= v15;
    }
    else
    {
      *int v17 = 2;
      v17[1] = v15;
    }
  }
  return result;
}

double sub_1CBDA35A4(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  if (sub_1CBDA5AE0(a1, *(_DWORD *)a2, *(void *)(a2 + 16), a3, (int *)a4, *(_DWORD *)(a4 + 8), *(unsigned int *)(a4 + 12), *(_DWORD *)(a4 + 24), 1) == 3)
  {
    unint64_t v8 = *(unsigned __int8 *)(a4 + 28) | ((unint64_t)*(unsigned int *)(a4 + 20) << 20);
    if (*(unsigned char *)(a4 + 16)) {
      v8 |= 0x20uLL;
    }
    if (*(_DWORD *)(a4 + 12) == 4) {
      v8 |= 0x800uLL;
    }
    if ((*(_DWORD *)(a4 + 8) & 0xFFFFFFFE) == 4) {
      int v9 = 2;
    }
    else {
      int v9 = 1;
    }
    uint64_t v10 = v9 + a3;
    uint64_t v11 = *(void *)(a2 + 16);
    int v12 = (void *)(v11 + 16 * v10);
    if (*(unsigned char *)v12 == 2)
    {
      int v12 = (void *)(v11 + 16 * v10);
      v8 |= v12[1];
    }
    else
    {
      *int v12 = 2;
    }
    v12[1] = v8;
    if ((*(_DWORD *)(a4 + 8) & 0xFFFFFFFE) == 4)
    {
      uint64_t v13 = (_OWORD *)(*(void *)(a2 + 16) + 16 * (a3 + 1));
      if (*(unsigned char *)v13 != 2)
      {
        *(void *)&double result = 2;
        *uint64_t v13 = xmmword_1CD91D2D0;
      }
    }
  }
  return result;
}

uint64_t sub_1CBDA36B0(unsigned int *a1, unsigned __int16 *a2, unsigned int a3, uint64_t a4)
{
  v30[192] = *MEMORY[0x1E4F143B8];
  int v8 = sub_1CBDA6464(*a2, 0x5Eu);
  int v9 = (__int16 *)(a4 + 112);
  if (v8 != a3) {
    int v9 = (__int16 *)(a4 + 114);
  }
  __int16 v10 = *v9;
  v25[0] = 0;
  v25[1] = 0;
  uint64_t v26 = 0;
  int v27 = HIBYTE(v10);
  if (v8 == a3) {
    int v11 = 94;
  }
  else {
    int v11 = 95;
  }
  sub_1CD44F6E4(a4, *a1, v11, &v28);
  int v12 = (char *)v28;
  uint64_t v13 = (char *)v28 + 96 * v29;
  uint64_t v14 = (char *)v28;
  if (v29 >= 2)
  {
    unint64_t v15 = (char *)v28 + 96;
    uint64_t v16 = 96 * v29 - 96;
    uint64_t v14 = (char *)v28;
    do
    {
      if (*((_DWORD *)v14 + 1) < *((_DWORD *)v15 + 1)) {
        uint64_t v14 = v15;
      }
      v15 += 96;
      v16 -= 96;
    }
    while (v16);
  }
  if (v14 != v13 && *((_DWORD *)v14 + 1) != -1) {
    HIDWORD(v26) = *(_DWORD *)(a4 + 48);
  }
  LOWORD(v25[0]) = (*(_WORD *)(a4 + 28) + 2 * (char)v10) & 0x1FFF;
  if (v29 >= 2)
  {
    int v17 = (char *)v28 + 96;
    uint64_t v18 = 96 * v29 - 96;
    do
    {
      if (*((_DWORD *)v12 + 1) < *((_DWORD *)v17 + 1)) {
        int v12 = v17;
      }
      v17 += 96;
      v18 -= 96;
    }
    while (v18);
  }
  if (v12 == v13 || *((_DWORD *)v12 + 1) == -1) {
    unsigned int v19 = 0;
  }
  else {
    unsigned int v19 = sub_1CD44F41C((uint64_t *)&v28);
  }
  uint64_t v20 = sub_1CBDA6388((uint64_t)a1, (uint64_t)a2, a3, (uint64_t)v25, v19);
  uint64_t v21 = (char *)v28;
  if (v29)
  {
    uint64_t v22 = 96 * v29;
    do
    {
      unint64_t v23 = *(char **)&v21[v22 - 72];
      if (&v21[v22 - 56] != v23) {
        free(v23);
      }
      v22 -= 96;
    }
    while (v22);
    uint64_t v21 = (char *)v28;
  }
  if (v21 != (char *)v30) {
    free(v21);
  }
  return v20;
}

uint64_t sub_1CBDA38C4(unsigned int *a1, unsigned __int16 *a2, unsigned int a3, uint64_t a4)
{
  v31[192] = *MEMORY[0x1E4F143B8];
  int v8 = sub_1CBDA6464(*a2, 0x5Eu);
  __int16 v10 = (__int16 *)(a4 + 256);
  if (v8 != a3) {
    __int16 v10 = (__int16 *)(a4 + 258);
  }
  __int16 v11 = *v10;
  v26[0] = 0;
  v26[1] = 0;
  uint64_t v27 = 0;
  int v28 = HIBYTE(v11);
  if (v8 == a3) {
    int v12 = 94;
  }
  else {
    int v12 = 95;
  }
  sub_1CD44F80C(a4, *a1, v12, (uint64_t *)&v29, v9);
  uint64_t v13 = (char *)v29;
  uint64_t v14 = (char *)v29 + 96 * v30;
  unint64_t v15 = (char *)v29;
  if (v30 >= 2)
  {
    uint64_t v16 = (char *)v29 + 96;
    uint64_t v17 = 96 * v30 - 96;
    unint64_t v15 = (char *)v29;
    do
    {
      if (*((_DWORD *)v15 + 1) < *((_DWORD *)v16 + 1)) {
        unint64_t v15 = v16;
      }
      v16 += 96;
      v17 -= 96;
    }
    while (v17);
  }
  if (v15 != v14 && *((_DWORD *)v15 + 1) != -1) {
    HIDWORD(v27) = *(_DWORD *)(a4 + 20);
  }
  LOWORD(v26[0]) = (*(_WORD *)a4 + 2 * (char)v11) & 0x1FFF;
  if (v30 >= 2)
  {
    uint64_t v18 = (char *)v29 + 96;
    uint64_t v19 = 96 * v30 - 96;
    do
    {
      if (*((_DWORD *)v13 + 1) < *((_DWORD *)v18 + 1)) {
        uint64_t v13 = v18;
      }
      v18 += 96;
      v19 -= 96;
    }
    while (v19);
  }
  if (v13 == v14 || *((_DWORD *)v13 + 1) == -1) {
    unsigned int v20 = 0;
  }
  else {
    unsigned int v20 = sub_1CD44F41C((uint64_t *)&v29);
  }
  uint64_t v21 = sub_1CBDA6388((uint64_t)a1, (uint64_t)a2, a3, (uint64_t)v26, v20);
  uint64_t v22 = (char *)v29;
  if (v30)
  {
    uint64_t v23 = 96 * v30;
    do
    {
      uint64_t v24 = *(char **)&v22[v23 - 72];
      if (&v22[v23 - 56] != v24) {
        free(v24);
      }
      v23 -= 96;
    }
    while (v23);
    uint64_t v22 = (char *)v29;
  }
  if (v22 != (char *)v31) {
    free(v22);
  }
  return v21;
}

uint64_t sub_1CBDA3AD8(uint64_t a1, uint64_t a2, unsigned int a3, unsigned __int16 *a4, int a5)
{
  unsigned int v9 = a5 & 0xFFFFFFFE;
  __int16 v10 = (void *)(*(void *)(a2 + 16) + 16 * a3);
  int v11 = *((_DWORD *)a4 + 2);
  if (v11 == 3)
  {
    if (v9 == 8) {
      int v14 = 16;
    }
    else {
      int v14 = 8;
    }
    uint64_t v15 = *a4;
    uint64_t v16 = *(void *)(a1 + 16);
    *(void *)(v16 + 272) += 24;
    uint64_t v17 = *(void *)(v16 + 192);
    if (((v17 + 7) & 0xFFFFFFFFFFFFFFF8) - v17 + 24 > *(void *)(v16 + 200) - v17)
    {
      unsigned int v29 = *(_DWORD *)(v16 + 216) >> 7;
      if (v29 >= 0x1E) {
        LOBYTE(v29) = 30;
      }
      uint64_t v30 = 4096 << v29;
      unint64_t v18 = (unint64_t)operator new(4096 << v29, (std::align_val_t)8uLL);
      unsigned int v31 = *(_DWORD *)(v16 + 216);
      if (v31 >= *(_DWORD *)(v16 + 220)) {
        llvm::SmallVectorBase<unsigned int>::grow_pod();
      }
      *(void *)(*(void *)(v16 + 208) + 8 * v31) = v18;
      ++*(_DWORD *)(v16 + 216);
      *(void *)(v16 + 200) = v18 + v30;
    }
    else
    {
      unint64_t v18 = (v17 + 7) & 0xFFFFFFFFFFFFFFF8;
    }
    *(void *)(v16 + 192) = v18 + 24;
    *(unsigned char *)unint64_t v18 = 1;
    *(_DWORD *)(v18 + 1) = *(unsigned __int8 *)(v18 + 4) << 24;
    *(void *)(v18 + 8) = 0;
    *(void *)(v18 + 16) = v15;
    uint64_t v19 = *(void *)(a1 + 16);
    *(void *)(v19 + 272) += 48;
    uint64_t v20 = *(void *)(v19 + 192);
    if (((v20 + 7) & 0xFFFFFFFFFFFFFFF8) - v20 + 48 > *(void *)(v19 + 200) - v20)
    {
      unsigned int v32 = *(_DWORD *)(v19 + 216) >> 7;
      if (v32 >= 0x1E) {
        LOBYTE(v32) = 30;
      }
      uint64_t v33 = 4096 << v32;
      unint64_t v21 = (unint64_t)operator new(4096 << v32, (std::align_val_t)8uLL);
      unsigned int v34 = *(_DWORD *)(v19 + 216);
      if (v34 >= *(_DWORD *)(v19 + 220)) {
        llvm::SmallVectorBase<unsigned int>::grow_pod();
      }
      *(void *)(*(void *)(v19 + 208) + 8 * v34) = v21;
      ++*(_DWORD *)(v19 + 216);
      *(void *)(v19 + 200) = v21 + v33;
    }
    else
    {
      unint64_t v21 = (v20 + 7) & 0xFFFFFFFFFFFFFFF8;
    }
    *(void *)(v19 + 192) = v21 + 48;
    *(unsigned char *)(v21 + 8) = 4;
    *(_DWORD *)(v21 + 9) = *(unsigned __int8 *)(v21 + 12) << 24;
    *(void *)(v21 + 16) = 0;
    *(void *)unint64_t v21 = &unk_1F25FDA08;
    *(_DWORD *)(v21 + 24) = 0;
    *(void *)(v21 + 32) = v18;
    *(_DWORD *)(v21 + 40) = v14;
    *__int16 v10 = 5;
    v10[1] = v21 + 8;
  }
  else
  {
    if (v11 != 2) {
      return 0;
    }
    int v12 = v9 == 8 ? 20 : 8;
    if ((sub_1CBDA6054(v10, *a4, *(void **)(*(void *)(a1 + 8) + 24), v12) & 1) == 0) {
      return 0;
    }
  }
  uint64_t v22 = 32 * *((unsigned __int8 *)a4 + 16);
  if (*((unsigned char *)a4 + 24)) {
    uint64_t v22 = (32 * *((unsigned __int8 *)a4 + 16)) | 0x10;
  }
  uint64_t v23 = a3 + 1;
  uint64_t v24 = *(void *)(a2 + 16);
  uint64_t v25 = (void *)(v24 + 16 * v23);
  if (*(unsigned char *)v25 == 2)
  {
    uint64_t v25 = (void *)(v24 + 16 * v23);
    v22 |= v25[1];
  }
  else
  {
    *uint64_t v25 = 2;
  }
  v25[1] = v22;
  if (*((unsigned char *)a4 + 26)) {
    uint64_t v26 = (4 * *((unsigned __int8 *)a4 + 25)) | 2;
  }
  else {
    uint64_t v26 = 4 * *((unsigned __int8 *)a4 + 25);
  }
  uint64_t v27 = v26 | *((unsigned __int8 *)a4 + 27);
  int v28 = (void *)(*(void *)(a2 + 16) + 16 * v23);
  if (*(unsigned char *)v28 == 2) {
    v27 |= v28[1];
  }
  else {
    *int v28 = 2;
  }
  v28[1] = v27;
  return 3;
}

uint64_t sub_1CBDA3DF0(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, unsigned int a5)
{
  if (a5 > 3) {
    int v8 = 0;
  }
  else {
    int v8 = dword_1CDF53760[a5];
  }
  uint64_t result = sub_1CBDA0898(a1, a2, a3, a4, v8);
  if (result)
  {
    uint64_t v10 = *(unsigned __int8 *)(a4 + 28);
    uint64_t v11 = a3 + 1;
    uint64_t v12 = *(void *)(a2 + 16);
    uint64_t v13 = (void *)(v12 + 16 * v11);
    if (*(unsigned char *)v13 == 2)
    {
      uint64_t v13 = (void *)(v12 + 16 * v11);
      v10 |= v13[1];
    }
    else
    {
      *uint64_t v13 = 2;
    }
    v13[1] = v10;
    return 3;
  }
  return result;
}

uint64_t sub_1CBDA3E8C(uint64_t a1, unsigned __int16 *a2, unsigned int a3, uint64_t a4, int a5)
{
  int v9 = *(_DWORD *)(a4 + 12);
  BOOL v11 = a5 == 3 && v9 == 1;
  int v12 = *(unsigned __int8 *)(a4 + 25);
  if (v11 && v12 == 0)
  {
    uint64_t v18 = 8;
  }
  else
  {
    if (v11 && v12 != 0)
    {
      uint64_t v18 = 9;
      goto LABEL_35;
    }
    BOOL v16 = a5 == 1 && v9 == 1;
    if (v16 && v12 == 0) {
      goto LABEL_30;
    }
    if (v16 && *(unsigned char *)(a4 + 25)) {
      goto LABEL_34;
    }
    if (!v9 && !*(unsigned char *)(a4 + 25))
    {
LABEL_30:
      uint64_t v18 = 0;
      goto LABEL_35;
    }
    if (!v9 && *(unsigned char *)(a4 + 25))
    {
LABEL_34:
      uint64_t v18 = 1;
    }
    else if (v9 != 1 || *(unsigned char *)(a4 + 25))
    {
      if (v9 == 1 && *(unsigned char *)(a4 + 25))
      {
        uint64_t v18 = 3;
      }
      else if (v9 != 2 || *(unsigned char *)(a4 + 25))
      {
        if (v9 != 2 || !*(unsigned char *)(a4 + 25)) {
          llvm::report_fatal_error((llvm *)"Invalid int to float conversion.", (const llvm::Twine *)1);
        }
        uint64_t v18 = 5;
      }
      else
      {
        uint64_t v18 = 4;
      }
    }
    else
    {
      uint64_t v18 = 2;
    }
  }
LABEL_35:
  uint64_t v19 = (void *)(*((void *)a2 + 2) + 16 * sub_1CBDA6464(*a2, 0x25u));
  *uint64_t v19 = 2;
  v19[1] = v18;
  v22[0] = *(_OWORD *)a4;
  *(_OWORD *)((char *)v22 + 12) = *(_OWORD *)(a4 + 12);
  int v20 = HIDWORD(v22[0]);
  if (HIDWORD(v22[0]) <= 1) {
    int v20 = 1;
  }
  HIDWORD(v22[0]) = v20;
  return sub_1CBDA0B7C(a1, (uint64_t)a2, a3, (uint64_t)v22);
}

uint64_t sub_1CBDA3FF8(unsigned int *a1, unsigned __int16 a2, uint64_t a3, uint64_t a4, unsigned int *a5)
{
  int v8 = a2;
  unsigned int v9 = sub_1CBDA6464(a2, 0x57u);
  unsigned int v10 = sub_1CBDA6464(v8, 0x2Eu);
  uint64_t v11 = sub_1CBDA6464(v8, 0x2Fu);
  unsigned int v12 = sub_1CBDA6464(v8, 0x2Bu);
  unsigned int v13 = sub_1CBDA6464(v8, 0x30u);
  unsigned int v14 = sub_1CBDA6464(v8, 0x55u);
  unsigned int v32 = sub_1CBDA6464(v8, 7u);
  unsigned int v15 = sub_1CBDA6464(v8, 0x56u);
  BOOL v16 = (void *)(*(void *)(a3 + 16) + 16 * v9);
  uint64_t v17 = *a5;
  *BOOL v16 = 2;
  v16[1] = v17;
  uint64_t v18 = *(void *)(a3 + 16);
  uint64_t v19 = (_OWORD *)(v18 + 16 * (v9 + 1));
  if (*(unsigned char *)v19 != 2)
  {
    *uint64_t v19 = xmmword_1CD91D2D0;
    uint64_t v18 = *(void *)(a3 + 16);
  }
  unint64_t v20 = (unint64_t)a5[5] << 20;
  uint64_t v21 = v9 + 2;
  uint64_t v22 = (void *)(v18 + 16 * v21);
  if (*(unsigned char *)v22 == 2)
  {
    *(void *)(v18 + 16 * v21 + 8) |= v20;
  }
  else
  {
    *uint64_t v22 = 2;
    v22[1] = v20;
  }
  sub_1CBDA07C8(*a1, *(void *)(a3 + 16), v10, *((unsigned __int8 *)a5 + 213), (unsigned __int8 *)a5 + 154, a5 + 45);
  ((void (*)(void, uint64_t, void, void))loc_1CBDA4250)(*(void *)(a3 + 16), v11, a5[41], *((unsigned __int8 *)a5 + 81));
  uint64_t result = sub_1CBDA0A88((uint64_t)a1, a3, v12, (uint64_t)(a5 + 21), 1);
  if (result == 3)
  {
    uint64_t v24 = (__int16 *)(a5 + 14);
    if (a5[16] == 1)
    {
      uint64_t v25 = *v24;
      uint64_t v26 = (void *)(*(void *)(a3 + 16) + 16 * v13);
      *uint64_t v26 = 2;
      v26[1] = v25;
    }
    else
    {
      uint64_t result = sub_1CBDA0B7C((uint64_t)a1, a3, v13, (uint64_t)v24);
      if (result != 3) {
        return result;
      }
    }
    uint64_t v27 = (void *)(*(void *)(a3 + 16) + 16 * v14);
    uint64_t v28 = *((__int16 *)a5 + 88);
    *uint64_t v27 = 2;
    v27[1] = v28;
    v33[0] = *(_OWORD *)(a5 + 7);
    *(_OWORD *)((char *)v33 + 12) = *(_OWORD *)(a5 + 10);
    uint64_t result = sub_1CBDA4358((uint64_t)a1, a3, v32, v33, a5[41]);
    if (result == 3)
    {
      uint64_t v29 = (int)a5[43];
      if (v29 > 4) {
        uint64_t v30 = 0;
      }
      else {
        uint64_t v30 = qword_1CDF537E8[v29];
      }
      unsigned int v31 = (void *)(*(void *)(a3 + 16) + 16 * v15);
      *unsigned int v31 = 2;
      v31[1] = v30;
      return 3;
    }
  }
  return result;
}

uint64_t sub_1CBDA4358(uint64_t a1, uint64_t a2, unsigned int a3, _OWORD *a4, int a5)
{
  if (a5 == 3)
  {
    uint64_t v9 = v5;
    uint64_t v10 = v6;
    v8[0] = *a4;
    *(_OWORD *)((char *)v8 + 12) = *(_OWORD *)((char *)a4 + 12);
    HIDWORD(v8[0]) = 3;
    return sub_1CBDA0A88(a1, a2, a3, (uint64_t)v8, 1);
  }
  else
  {
    return sub_1CBDA0A88(a1, a2, a3, (uint64_t)a4, 1);
  }
}

uint64_t sub_1CBDA43B4(unsigned int *a1, unsigned __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v8 = a2;
  unsigned int v9 = sub_1CBDA6464(a2, 0x57u);
  unsigned int v10 = sub_1CBDA6464(v8, 0x2Eu);
  uint64_t v11 = sub_1CBDA6464(v8, 0x2Fu);
  unsigned int v12 = sub_1CBDA6464(v8, 0x2Bu);
  unsigned int v13 = sub_1CBDA6464(v8, 0x30u);
  unsigned int v14 = sub_1CBDA6464(v8, 0x55u);
  unsigned int v29 = sub_1CBDA6464(v8, 7u);
  unsigned int v15 = sub_1CBDA6464(v8, 0x56u);
  uint64_t result = sub_1CBDA0E68((uint64_t)a1, (unsigned int *)a3, v9, a5, 0x100000001, *(unsigned int *)(a5 + 12) | 0x100000000);
  if (result == 3)
  {
    int v17 = *(unsigned __int8 *)(a5 + 213);
    uint64_t v18 = 32 * *(unsigned __int8 *)(a5 + 16);
    uint64_t v19 = *(void *)(a3 + 16);
    unint64_t v20 = (void *)(v19 + 16 * v10);
    if (*(unsigned char *)v20 == 2)
    {
      unint64_t v20 = (void *)(v19 + 16 * v10);
      v18 |= v20[1];
    }
    else
    {
      *unint64_t v20 = 2;
    }
    v20[1] = v18;
    sub_1CBDA07C8(*a1, *(void *)(a3 + 16), v10, v17 != 0, (unsigned __int8 *)(a5 + 154), (unsigned int *)(a5 + 180));
    ((void (*)(void, uint64_t, void, void))loc_1CBDA4250)(*(void *)(a3 + 16), v11, *(unsigned int *)(a5 + 164), *(unsigned __int8 *)(a5 + 81));
    uint64_t result = sub_1CBDA0A88((uint64_t)a1, a3, v12, a5 + 84, 1);
    if (result == 3)
    {
      uint64_t v21 = (__int16 *)(a5 + 56);
      if (*(_DWORD *)(a5 + 64) == 1)
      {
        uint64_t v22 = *v21;
        uint64_t v23 = (void *)(*(void *)(a3 + 16) + 16 * v13);
        *uint64_t v23 = 2;
        v23[1] = v22;
      }
      else
      {
        uint64_t result = sub_1CBDA0B7C((uint64_t)a1, a3, v13, (uint64_t)v21);
        if (result != 3) {
          return result;
        }
      }
      uint64_t v24 = (void *)(*(void *)(a3 + 16) + 16 * v14);
      uint64_t v25 = *(__int16 *)(a5 + 176);
      *uint64_t v24 = 2;
      v24[1] = v25;
      v30[0] = *(_OWORD *)(a5 + 28);
      *(_OWORD *)((char *)v30 + 12) = *(_OWORD *)(a5 + 40);
      uint64_t result = sub_1CBDA4358((uint64_t)a1, a3, v29, v30, *(_DWORD *)(a5 + 164));
      if (result == 3)
      {
        uint64_t v26 = *(int *)(a5 + 172);
        if (v26 > 4) {
          uint64_t v27 = 0;
        }
        else {
          uint64_t v27 = qword_1CDF537E8[v26];
        }
        uint64_t v28 = (void *)(*(void *)(a3 + 16) + 16 * v15);
        *uint64_t v28 = 2;
        v28[1] = v27;
        return 3;
      }
    }
  }
  return result;
}

uint64_t sub_1CBDA4600(unsigned int *a1, unsigned __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v8 = a2;
  unsigned int v9 = sub_1CBDA6464(a2, 0x2Eu);
  uint64_t v10 = sub_1CBDA6464(v8, 0x2Fu);
  unsigned int v11 = sub_1CBDA6464(v8, 0x2Bu);
  unsigned int v12 = sub_1CBDA6464(v8, 0x30u);
  unsigned int v13 = sub_1CBDA6464(v8, 0x55u);
  unsigned int v14 = sub_1CBDA6464(v8, 7u);
  unsigned int v15 = sub_1CBDA6464(v8, 0x56u);
  sub_1CBDA07C8(*a1, *(void *)(a3 + 16), v9, *(unsigned __int8 *)(a5 + 213), (unsigned __int8 *)(a5 + 154), (unsigned int *)(a5 + 180));
  ((void (*)(void, uint64_t, void, void))loc_1CBDA4250)(*(void *)(a3 + 16), v10, *(unsigned int *)(a5 + 164), *(unsigned __int8 *)(a5 + 81));
  uint64_t result = sub_1CBDA0A88((uint64_t)a1, a3, v11, a5 + 84, 1);
  if (result == 3)
  {
    int v17 = (__int16 *)(a5 + 56);
    if (*(_DWORD *)(a5 + 64) == 1)
    {
      uint64_t v18 = *v17;
      uint64_t v19 = (void *)(*(void *)(a3 + 16) + 16 * v12);
      *uint64_t v19 = 2;
      v19[1] = v18;
    }
    else
    {
      uint64_t result = sub_1CBDA0B7C((uint64_t)a1, a3, v12, (uint64_t)v17);
      if (result != 3) {
        return result;
      }
    }
    unint64_t v20 = (void *)(*(void *)(a3 + 16) + 16 * v13);
    uint64_t v21 = *(__int16 *)(a5 + 176);
    *unint64_t v20 = 2;
    v20[1] = v21;
    v25[0] = *(_OWORD *)(a5 + 28);
    *(_OWORD *)((char *)v25 + 12) = *(_OWORD *)(a5 + 40);
    uint64_t result = sub_1CBDA4358((uint64_t)a1, a3, v14, v25, *(_DWORD *)(a5 + 164));
    if (result == 3)
    {
      uint64_t v22 = *(int *)(a5 + 172);
      if (v22 > 4) {
        uint64_t v23 = 0;
      }
      else {
        uint64_t v23 = qword_1CDF537E8[v22];
      }
      uint64_t v24 = (void *)(*(void *)(a3 + 16) + 16 * v15);
      *uint64_t v24 = 2;
      v24[1] = v23;
      return 3;
    }
  }
  return result;
}

uint64_t sub_1CBDA47D4(unsigned int *a1, unsigned __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v8 = a2;
  unsigned int v9 = sub_1CBDA6464(a2, 0x57u);
  unsigned int v10 = sub_1CBDA6464(v8, 0x2Eu);
  uint64_t v11 = sub_1CBDA6464(v8, 0x2Fu);
  unsigned int v12 = sub_1CBDA6464(v8, 0x2Bu);
  unsigned int v13 = sub_1CBDA6464(v8, 0x30u);
  unsigned int v14 = sub_1CBDA6464(v8, 0x55u);
  unsigned int v26 = sub_1CBDA6464(v8, 7u);
  unsigned int v15 = sub_1CBDA6464(v8, 0x56u);
  uint64_t result = sub_1CBDA0E68((uint64_t)a1, (unsigned int *)a3, v9, a5, 0x100000001, *(unsigned int *)(a5 + 12) | 0x100000000);
  if (result == 3)
  {
    int v17 = *(unsigned __int8 *)(a5 + 213);
    uint64_t v18 = 32 * *(unsigned __int8 *)(a5 + 16);
    uint64_t v19 = *(void *)(a3 + 16);
    unint64_t v20 = (void *)(v19 + 16 * v10);
    if (*(unsigned char *)v20 == 2)
    {
      unint64_t v20 = (void *)(v19 + 16 * v10);
      v18 |= v20[1];
    }
    else
    {
      *unint64_t v20 = 2;
    }
    v20[1] = v18;
    sub_1CBDA07C8(*a1, *(void *)(a3 + 16), v10, v17 != 0, (unsigned __int8 *)(a5 + 154), (unsigned int *)(a5 + 180));
    ((void (*)(void, uint64_t, void, void))loc_1CBDA4250)(*(void *)(a3 + 16), v11, *(unsigned int *)(a5 + 164), *(unsigned __int8 *)(a5 + 81));
    uint64_t result = sub_1CBDA0A88((uint64_t)a1, a3, v12, a5 + 84, 1);
    if (result == 3)
    {
      uint64_t result = sub_1CBDA0B7C((uint64_t)a1, a3, v13, a5 + 56);
      if (result == 3)
      {
        uint64_t v21 = (void *)(*(void *)(a3 + 16) + 16 * v14);
        uint64_t v22 = *(__int16 *)(a5 + 176);
        *uint64_t v21 = 2;
        v21[1] = v22;
        v27[0] = *(_OWORD *)(a5 + 28);
        *(_OWORD *)((char *)v27 + 12) = *(_OWORD *)(a5 + 40);
        uint64_t result = sub_1CBDA4358((uint64_t)a1, a3, v26, v27, *(_DWORD *)(a5 + 164));
        if (result == 3)
        {
          uint64_t v23 = *(int *)(a5 + 172);
          if (v23 > 4) {
            uint64_t v24 = 0;
          }
          else {
            uint64_t v24 = qword_1CDF537E8[v23];
          }
          uint64_t v25 = (void *)(*(void *)(a3 + 16) + 16 * v15);
          *uint64_t v25 = 2;
          v25[1] = v24;
          return 3;
        }
      }
    }
  }
  return result;
}

uint64_t sub_1CBDA49FC(unsigned int *a1, unsigned __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v8 = a2;
  unsigned int v9 = sub_1CBDA6464(a2, 0x2Eu);
  uint64_t v10 = sub_1CBDA6464(v8, 0x2Fu);
  unsigned int v11 = sub_1CBDA6464(v8, 0x2Bu);
  unsigned int v12 = sub_1CBDA6464(v8, 0x30u);
  unsigned int v13 = sub_1CBDA6464(v8, 0x55u);
  unsigned int v14 = sub_1CBDA6464(v8, 7u);
  unsigned int v15 = sub_1CBDA6464(v8, 0x56u);
  sub_1CBDA07C8(*a1, *(void *)(a3 + 16), v9, *(unsigned __int8 *)(a5 + 213), (unsigned __int8 *)(a5 + 154), (unsigned int *)(a5 + 180));
  ((void (*)(void, uint64_t, void, void))loc_1CBDA4250)(*(void *)(a3 + 16), v10, *(unsigned int *)(a5 + 164), *(unsigned __int8 *)(a5 + 81));
  uint64_t result = sub_1CBDA0A88((uint64_t)a1, a3, v11, a5 + 84, 1);
  if (result == 3)
  {
    uint64_t result = sub_1CBDA0B7C((uint64_t)a1, a3, v12, a5 + 56);
    if (result == 3)
    {
      int v17 = (void *)(*(void *)(a3 + 16) + 16 * v13);
      uint64_t v18 = *(__int16 *)(a5 + 176);
      *int v17 = 2;
      v17[1] = v18;
      v22[0] = *(_OWORD *)(a5 + 28);
      *(_OWORD *)((char *)v22 + 12) = *(_OWORD *)(a5 + 40);
      uint64_t result = sub_1CBDA4358((uint64_t)a1, a3, v14, v22, *(_DWORD *)(a5 + 164));
      if (result == 3)
      {
        uint64_t v19 = *(int *)(a5 + 172);
        if (v19 > 4) {
          uint64_t v20 = 0;
        }
        else {
          uint64_t v20 = qword_1CDF537E8[v19];
        }
        uint64_t v21 = (void *)(*(void *)(a3 + 16) + 16 * v15);
        *uint64_t v21 = 2;
        v21[1] = v20;
        return 3;
      }
    }
  }
  return result;
}

uint64_t sub_1CBDA4BAC(unsigned int *a1, unsigned __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v8 = a2;
  unsigned int v9 = sub_1CBDA6464(a2, 0x2Eu);
  uint64_t v10 = sub_1CBDA6464(v8, 0x2Fu);
  unsigned int v11 = sub_1CBDA6464(v8, 0x2Bu);
  unsigned int v12 = sub_1CBDA6464(v8, 0x30u);
  unsigned int v13 = sub_1CBDA6464(v8, 0x55u);
  unsigned int v14 = sub_1CBDA6464(v8, 7u);
  unsigned int v15 = sub_1CBDA6464(v8, 0x56u);
  sub_1CBDA07C8(*a1, *(void *)(a3 + 16), v9, *(unsigned __int8 *)(a5 + 213), (unsigned __int8 *)(a5 + 154), (unsigned int *)(a5 + 180));
  ((void (*)(void, uint64_t, void, void))loc_1CBDA4250)(*(void *)(a3 + 16), v10, *(unsigned int *)(a5 + 164), *(unsigned __int8 *)(a5 + 81));
  uint64_t result = sub_1CBDA0A88((uint64_t)a1, a3, v11, a5 + 84, 1);
  if (result == 3)
  {
    int v17 = (__int16 *)(a5 + 56);
    if (*(_DWORD *)(a5 + 64) == 1)
    {
      uint64_t v18 = *v17;
      uint64_t v19 = (void *)(*(void *)(a3 + 16) + 16 * v12);
      *uint64_t v19 = 2;
      v19[1] = v18;
    }
    else
    {
      uint64_t result = sub_1CBDA0B7C((uint64_t)a1, a3, v12, (uint64_t)v17);
      if (result != 3) {
        return result;
      }
    }
    uint64_t v20 = (void *)(*(void *)(a3 + 16) + 16 * v13);
    uint64_t v21 = *(__int16 *)(a5 + 176);
    *uint64_t v20 = 2;
    v20[1] = v21;
    v25[0] = *(_OWORD *)(a5 + 28);
    *(_OWORD *)((char *)v25 + 12) = *(_OWORD *)(a5 + 40);
    HIDWORD(v25[0]) = 3;
    uint64_t result = sub_1CBDA0A88((uint64_t)a1, a3, v14, (uint64_t)v25, 1);
    if (result == 3)
    {
      uint64_t v22 = *(int *)(a5 + 172);
      if (v22 > 4) {
        uint64_t v23 = 0;
      }
      else {
        uint64_t v23 = qword_1CDF537E8[v22];
      }
      uint64_t v24 = (void *)(*(void *)(a3 + 16) + 16 * v15);
      *uint64_t v24 = 2;
      v24[1] = v23;
      return 3;
    }
  }
  return result;
}

uint64_t sub_1CBDA4D88(unsigned int *a1, unsigned __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v8 = a2;
  unsigned int v9 = sub_1CBDA6464(a2, 3u);
  unsigned int v10 = sub_1CBDA6464(v8, 0x2Eu);
  unsigned int v11 = sub_1CBDA6464(v8, 0x42u);
  unsigned int v12 = sub_1CBDA6464(v8, 0x43u);
  unsigned int v13 = sub_1CBDA6464(v8, 0x45u);
  unsigned int v14 = sub_1CBDA6464(v8, 0x46u);
  uint64_t result = sub_1CBDA0898((uint64_t)a1, a3, v9, a5, 1);
  if (result == 3)
  {
    int v16 = *(unsigned __int8 *)(a5 + 164);
    uint64_t v17 = 32 * *(unsigned __int8 *)(a5 + 16);
    uint64_t v18 = *(void *)(a3 + 16);
    uint64_t v19 = (void *)(v18 + 16 * v10);
    if (*(unsigned char *)v19 == 2)
    {
      uint64_t v19 = (void *)(v18 + 16 * v10);
      v17 |= v19[1];
    }
    else
    {
      *uint64_t v19 = 2;
    }
    v19[1] = v17;
    sub_1CBDA07C8(*a1, *(void *)(a3 + 16), v10, v16 != 0, (unsigned __int8 *)(a5 + 120), (unsigned int *)(a5 + 128));
    uint64_t result = sub_1CBDA0A88((uint64_t)a1, a3, v11, a5 + 28, 1);
    if (result == 3)
    {
      uint64_t result = sub_1CBDA0A88((uint64_t)a1, a3, v12, a5 + 56, 1);
      if (result == 3)
      {
        uint64_t result = sub_1CBDA0990((uint64_t)a1, a3, v13, a5 + 84);
        if (result == 3)
        {
          uint64_t v20 = *(unsigned int *)(a5 + 160);
          if (v20 < 5) {
            uint64_t v21 = v20 + 1;
          }
          else {
            uint64_t v21 = 0;
          }
          uint64_t v22 = (void *)(*(void *)(a3 + 16) + 16 * v14);
          *uint64_t v22 = 2;
          v22[1] = v21;
        }
      }
    }
  }
  return result;
}

uint64_t sub_1CBDA4F2C(unsigned int *a1, unsigned __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v8 = a2;
  unsigned int v9 = sub_1CBDA6464(a2, 3u);
  unsigned int v10 = sub_1CBDA6464(v8, 0x2Eu);
  unsigned int v11 = sub_1CBDA6464(v8, 0x42u);
  unsigned int v12 = sub_1CBDA6464(v8, 0x43u);
  unsigned int v13 = sub_1CBDA6464(v8, 0x44u);
  unsigned int v14 = sub_1CBDA6464(v8, 0x45u);
  unsigned int v29 = sub_1CBDA6464(v8, 0x19u);
  unsigned int v28 = sub_1CBDA6464(v8, 0x1Au);
  unsigned int v15 = sub_1CBDA6464(v8, 0x46u);
  uint64_t result = sub_1CBDA5198((uint64_t)a1, a3, v9, a5);
  if (result == 3)
  {
    int v17 = *(unsigned __int8 *)(a5 + 228);
    uint64_t v18 = 32 * *(unsigned __int8 *)(a5 + 16);
    uint64_t v19 = *(void *)(a3 + 16);
    uint64_t v20 = (void *)(v19 + 16 * v10);
    if (*(unsigned char *)v20 == 2)
    {
      uint64_t v20 = (void *)(v19 + 16 * v10);
      v18 |= v20[1];
    }
    else
    {
      *uint64_t v20 = 2;
    }
    v20[1] = v18;
    sub_1CBDA07C8(*a1, *(void *)(a3 + 16), v10, v17 != 0, (unsigned __int8 *)(a5 + 180), (unsigned int *)(a5 + 188));
    uint64_t result = sub_1CBDA0A88((uint64_t)a1, a3, v11, a5 + 88, 1);
    if (result == 3)
    {
      uint64_t result = sub_1CBDA0A88((uint64_t)a1, a3, v12, a5 + 116, 1);
      if (result == 3)
      {
        uint64_t v21 = *(unsigned char *)(a5 + 221) ? (4 * *(unsigned __int8 *)(a5 + 220)) | 2 : 4 * *(unsigned __int8 *)(a5 + 220);
        uint64_t v22 = v21 | *(unsigned __int8 *)(a5 + 222);
        uint64_t v23 = *(void *)(a3 + 16);
        uint64_t v24 = (void *)(v23 + 16 * v13);
        if (*(unsigned char *)v24 == 2)
        {
          *(void *)(v23 + 16 * v13 + 8) |= v22;
        }
        else
        {
          *uint64_t v24 = 2;
          v24[1] = v22;
        }
        uint64_t result = sub_1CBDA0990((uint64_t)a1, a3, v14, a5 + 144);
        if (result == 3)
        {
          uint64_t result = sub_1CBDA2DA0((uint64_t)a1, a3, v29, a5 + 32);
          if (result == 3)
          {
            uint64_t result = sub_1CBDA2DA0((uint64_t)a1, a3, v28, a5 + 60);
            if (result == 3)
            {
              uint64_t v25 = *(unsigned int *)(a5 + 224);
              if (v25 < 5) {
                uint64_t v26 = v25 + 1;
              }
              else {
                uint64_t v26 = 0;
              }
              uint64_t v27 = (void *)(*(void *)(a3 + 16) + 16 * v15);
              *uint64_t v27 = 2;
              v27[1] = v26;
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1CBDA5198(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t result = sub_1CBDA5AE0(a1, *(_DWORD *)a2, *(void *)(a2 + 16), a3, (int *)a4, *(_DWORD *)(a4 + 8), *(unsigned int *)(a4 + 12), *(_DWORD *)(a4 + 24), 1);
  if (result == 3)
  {
    unint64_t v8 = *(unsigned __int8 *)(a4 + 28) | ((unint64_t)*(unsigned int *)(a4 + 20) << 20);
    if (*(unsigned char *)(a4 + 16)) {
      v8 |= 0x20uLL;
    }
    if ((*(_DWORD *)(a4 + 8) & 0xFFFFFFFE) == 4)
    {
      return 0;
    }
    else
    {
      uint64_t v9 = a3 + 1;
      uint64_t v10 = *(void *)(a2 + 16);
      unsigned int v11 = (void *)(v10 + 16 * v9);
      if (*(unsigned char *)v11 == 2)
      {
        unsigned int v11 = (void *)(v10 + 16 * v9);
        v8 |= v11[1];
      }
      else
      {
        *unsigned int v11 = 2;
      }
      v11[1] = v8;
      return 3;
    }
  }
  return result;
}

uint64_t sub_1CBDA526C(unsigned int *a1, unsigned __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v8 = a2;
  unsigned int v9 = sub_1CBDA6464(a2, 3u);
  unsigned int v10 = sub_1CBDA6464(v8, 0x2Eu);
  unsigned int v11 = sub_1CBDA6464(v8, 0x42u);
  unsigned int v12 = sub_1CBDA6464(v8, 0x43u);
  unsigned int v13 = sub_1CBDA6464(v8, 0x44u);
  unsigned int v14 = sub_1CBDA6464(v8, 0x45u);
  unsigned int v33 = sub_1CBDA6464(v8, 0x19u);
  unsigned int v32 = sub_1CBDA6464(v8, 0x1Au);
  unsigned int v31 = sub_1CBDA6464(v8, 0x48u);
  unsigned int v15 = sub_1CBDA6464(v8, 0x46u);
  uint64_t result = sub_1CBDA0898((uint64_t)a1, a3, v9, a5, 1);
  if (result == 3)
  {
    int v17 = *(unsigned __int8 *)(a5 + 236);
    uint64_t v18 = 32 * *(unsigned __int8 *)(a5 + 16);
    uint64_t v19 = *(void *)(a3 + 16);
    uint64_t v20 = (void *)(v19 + 16 * v10);
    if (*(unsigned char *)v20 == 2)
    {
      uint64_t v20 = (void *)(v19 + 16 * v10);
      v18 |= v20[1];
    }
    else
    {
      *uint64_t v20 = 2;
    }
    v20[1] = v18;
    sub_1CBDA07C8(*a1, *(void *)(a3 + 16), v10, v17 != 0, (unsigned __int8 *)(a5 + 184), (unsigned int *)(a5 + 196));
    uint64_t result = sub_1CBDA0A88((uint64_t)a1, a3, v11, a5 + 92, 1);
    if (result == 3)
    {
      uint64_t result = sub_1CBDA0A88((uint64_t)a1, a3, v12, a5 + 120, 1);
      if (result == 3)
      {
        uint64_t v21 = *(unsigned char *)(a5 + 229) ? (4 * *(unsigned __int8 *)(a5 + 228)) | 2 : 4 * *(unsigned __int8 *)(a5 + 228);
        uint64_t v22 = v21 | *(unsigned __int8 *)(a5 + 230);
        uint64_t v23 = *(void *)(a3 + 16);
        uint64_t v24 = (void *)(v23 + 16 * v13);
        if (*(unsigned char *)v24 == 2)
        {
          *(void *)(v23 + 16 * v13 + 8) |= v22;
        }
        else
        {
          *uint64_t v24 = 2;
          v24[1] = v22;
        }
        uint64_t result = sub_1CBDA0990((uint64_t)a1, a3, v14, a5 + 148);
        if (result == 3)
        {
          uint64_t result = sub_1CBDA2DA0((uint64_t)a1, a3, v33, a5 + 36);
          if (result == 3)
          {
            uint64_t result = sub_1CBDA2DA0((uint64_t)a1, a3, v32, a5 + 64);
            if (result == 3)
            {
              uint64_t v25 = *(unsigned int *)(a5 + 192);
              uint64_t v26 = *(void *)(a3 + 16);
              uint64_t v27 = (void *)(v26 + 16 * v31);
              if (*(unsigned char *)v27 == 2)
              {
                *(void *)(v26 + 16 * v31 + 8) |= v25;
              }
              else
              {
                *uint64_t v27 = 2;
                v27[1] = v25;
              }
              uint64_t v28 = *(unsigned int *)(a5 + 232);
              if (v28 < 5) {
                uint64_t v29 = v28 + 1;
              }
              else {
                uint64_t v29 = 0;
              }
              uint64_t v30 = (void *)(*(void *)(a3 + 16) + 16 * v15);
              *uint64_t v30 = 2;
              v30[1] = v29;
              return 3;
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1CBDA5530(uint64_t a1, uint64_t a2, unsigned int a3, unsigned __int16 *a4)
{
  uint64_t result = sub_1CBDA6054((void *)(*(void *)(a2 + 16) + 16 * a3), *a4, *(void **)(a1 + 24), dword_1CDF53810[*((int *)a4 + 2)]);
  if (result)
  {
    uint64_t v8 = a3 + 1;
    if (*((_DWORD *)a4 + 2) == 4)
    {
      uint64_t v9 = *(void *)(a2 + 16) + 16 * v8;
      if (*(unsigned char *)v9 == 2) {
        *(void *)(v9 + 8) |= 0x800uLL;
      }
      else {
        *(_OWORD *)uint64_t v9 = xmmword_1CDF53740;
      }
    }
    if (*((unsigned char *)a4 + 20)) {
      uint64_t v10 = (32 * *((unsigned __int8 *)a4 + 12)) | 0x10;
    }
    else {
      uint64_t v10 = 32 * *((unsigned __int8 *)a4 + 12);
    }
    if (*((_DWORD *)a4 + 6) == 1) {
      v10 |= 0x200000000000uLL;
    }
    if (*((_DWORD *)a4 + 2)) {
      unint64_t v11 = 0;
    }
    else {
      unint64_t v11 = ((unint64_t)*((unsigned int *)a4 + 7) << 48) + 0x1000000000000;
    }
    unint64_t v12 = v11 | v10;
    unsigned int v13 = (void *)(*(void *)(a2 + 16) + 16 * v8);
    if (*(unsigned char *)v13 == 2) {
      v12 |= v13[1];
    }
    else {
      *unsigned int v13 = 2;
    }
    v13[1] = v12;
    return 3;
  }
  return result;
}

uint64_t sub_1CBDA5640(uint64_t a1, uint64_t a2, unsigned int a3, unsigned __int16 *a4)
{
  unint64_t v4 = *a4;
  if ((v4 & 0xFFFFFE03) != 0) {
    return 0;
  }
  uint64_t v6 = *(unsigned __int16 *)(*(void *)(*(void *)(a1 + 24) + 736) + ((v4 >> 1) & 0x7FFE));
  uint64_t v7 = (void *)(*(void *)(a2 + 16) + 16 * a3);
  *uint64_t v7 = 1;
  v7[1] = v6;
  if (*((unsigned char *)a4 + 20)) {
    uint64_t v8 = (32 * *((unsigned __int8 *)a4 + 12)) | 0x10;
  }
  else {
    uint64_t v8 = 32 * *((unsigned __int8 *)a4 + 12);
  }
  if (*((_DWORD *)a4 + 6) == 1) {
    v8 |= 0x200000000000uLL;
  }
  if (*((unsigned char *)a4 + 13)) {
    v8 |= 8uLL;
  }
  uint64_t v9 = a3 + 1;
  uint64_t v10 = *(void *)(a2 + 16);
  unint64_t v11 = (void *)(v10 + 16 * v9);
  if (*(unsigned char *)v11 == 2)
  {
    unint64_t v11 = (void *)(v10 + 16 * v9);
    v8 |= v11[1];
  }
  else
  {
    *unint64_t v11 = 2;
  }
  v11[1] = v8;
  return 3;
}

double sub_1CBDA56F0(uint64_t a1, unsigned __int16 *a2, unsigned __int16 a3)
{
  unsigned int v6 = sub_1CBDA6464(*a2, 0x14u);
  if ((a3 & 0xFE0F) == 0)
  {
    uint64_t v8 = (void *)(*((void *)a2 + 2) + 16 * v6);
    uint64_t v9 = *(unsigned __int16 *)(*(void *)(*(void *)(a1 + 24) + 2880) + 2 * (a3 >> 4));
    *uint64_t v8 = 1;
    v8[1] = v9;
  }
  uint64_t v10 = (_OWORD *)(*((void *)a2 + 2) + 16 * (v6 + 1));
  if (*(unsigned char *)v10 != 2)
  {
    *(void *)&double result = 2;
    *uint64_t v10 = xmmword_1CD91D2D0;
  }
  return result;
}

uint64_t sub_1CBDA5780(uint64_t a1, uint64_t a2, unsigned int a3, unsigned __int16 *a4)
{
  uint64_t result = sub_1CBDA6054((void *)(*(void *)(a2 + 16) + 16 * a3), *a4, *(void **)(a1 + 24), dword_1CDF53824[*((int *)a4 + 2)]);
  if (result)
  {
    uint64_t v8 = a3 + 1;
    if (*((_DWORD *)a4 + 2) == 4)
    {
      uint64_t v9 = *(void *)(a2 + 16) + 16 * v8;
      if (*(unsigned char *)v9 == 2) {
        *(void *)(v9 + 8) |= 0x800uLL;
      }
      else {
        *(_OWORD *)uint64_t v9 = xmmword_1CDF53740;
      }
    }
    if (*((unsigned char *)a4 + 20)) {
      uint64_t v10 = (32 * *((unsigned __int8 *)a4 + 12)) | 0x10;
    }
    else {
      uint64_t v10 = 32 * *((unsigned __int8 *)a4 + 12);
    }
    if (*((_DWORD *)a4 + 6) == 1) {
      v10 |= 0x200000000000uLL;
    }
    if (*((_DWORD *)a4 + 2)) {
      unint64_t v11 = 0;
    }
    else {
      unint64_t v11 = ((unint64_t)*((unsigned int *)a4 + 7) << 48) + 0x1000000000000;
    }
    unint64_t v12 = v11 | v10;
    unsigned int v13 = (void *)(*(void *)(a2 + 16) + 16 * v8);
    if (*(unsigned char *)v13 == 2) {
      v12 |= v13[1];
    }
    else {
      *unsigned int v13 = 2;
    }
    v13[1] = v12;
    return 3;
  }
  return result;
}

uint64_t sub_1CBDA5890(uint64_t a1, uint64_t a2, unsigned int a3, unsigned __int16 *a4)
{
  int v4 = *a4;
  if ((v4 & 0xFFFFFF01) != 0) {
    return 0;
  }
  uint64_t v6 = *(unsigned __int16 *)(*(void *)(*(void *)(a1 + 24) + 320) + ((unsigned __int16)v4 & 0xFFFE));
  uint64_t v7 = (void *)(*(void *)(a2 + 16) + 16 * a3);
  *uint64_t v7 = 1;
  v7[1] = v6;
  if (*((unsigned char *)a4 + 20)) {
    uint64_t v8 = (32 * *((unsigned __int8 *)a4 + 12)) | 0x10;
  }
  else {
    uint64_t v8 = 32 * *((unsigned __int8 *)a4 + 12);
  }
  if (*((_DWORD *)a4 + 6) == 1) {
    v8 |= 0x200000000000uLL;
  }
  if (*((unsigned char *)a4 + 13)) {
    v8 |= 8uLL;
  }
  uint64_t v9 = a3 + 1;
  uint64_t v10 = *(void *)(a2 + 16);
  unint64_t v11 = (void *)(v10 + 16 * v9);
  if (*(unsigned char *)v11 == 2)
  {
    unint64_t v11 = (void *)(v10 + 16 * v9);
    v8 |= v11[1];
  }
  else
  {
    *unint64_t v11 = 2;
  }
  v11[1] = v8;
  return 3;
}

double sub_1CBDA593C(uint64_t a1, unsigned __int16 *a2, unsigned __int16 a3)
{
  unsigned int v6 = sub_1CBDA6464(*a2, 0x14u);
  if ((a3 & 0xFE07) == 0)
  {
    uint64_t v8 = (void *)(*((void *)a2 + 2) + 16 * v6);
    uint64_t v9 = *(unsigned __int16 *)(*(void *)(*(void *)(a1 + 24) + 1824) + 2 * (a3 >> 3));
    *uint64_t v8 = 1;
    v8[1] = v9;
  }
  uint64_t v10 = (_OWORD *)(*((void *)a2 + 2) + 16 * (v6 + 1));
  if (*(unsigned char *)v10 != 2)
  {
    *(void *)&double result = 2;
    *uint64_t v10 = xmmword_1CD91D2D0;
  }
  return result;
}

double sub_1CBDA59CC(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, char a5)
{
  int v8 = 1;
  if (a5) {
    int v8 = 2;
  }
  if (sub_1CBDA5AE0(a1, *(_DWORD *)a2, *(void *)(a2 + 16), a3, (int *)a4, *(_DWORD *)(a4 + 8), *(unsigned int *)(a4 + 12), *(_DWORD *)(a4 + 24), v8) == 3)
  {
    if (*(unsigned char *)(a4 + 16)) {
      unint64_t v10 = ((unint64_t)*(unsigned int *)(a4 + 20) << 20) | 0x20;
    }
    else {
      unint64_t v10 = (unint64_t)*(unsigned int *)(a4 + 20) << 20;
    }
    if (*(_DWORD *)(a4 + 12) == 4) {
      v10 |= 0x800uLL;
    }
    if ((*(_DWORD *)(a4 + 8) & 0xFFFFFFFE) == 4) {
      int v11 = 2;
    }
    else {
      int v11 = 1;
    }
    uint64_t v12 = v11 + a3;
    uint64_t v13 = *(void *)(a2 + 16);
    unsigned int v14 = (void *)(v13 + 16 * v12);
    if (*(unsigned char *)v14 == 2)
    {
      unsigned int v14 = (void *)(v13 + 16 * v12);
      v10 |= v14[1];
    }
    else
    {
      *unsigned int v14 = 2;
    }
    v14[1] = v10;
    if ((*(_DWORD *)(a4 + 8) & 0xFFFFFFFE) == 4)
    {
      unsigned int v15 = (_OWORD *)(*(void *)(a2 + 16) + 16 * (a3 + 1));
      if (*(unsigned char *)v15 != 2)
      {
        *(void *)&double result = 2;
        *unsigned int v15 = xmmword_1CD91D2D0;
      }
    }
  }
  return result;
}

uint64_t sub_1CBDA5AE0(uint64_t a1, int a2, uint64_t a3, unsigned int a4, int *a5, unsigned int a6, size_t __sz, unsigned int a8, int a9)
{
  int v9 = __sz;
  uint64_t v12 = (uint64_t *)(a3 + 16 * a4);
  unint64_t v13 = a6;
  uint64_t v14 = 2;
  switch(a6)
  {
    case 0u:
      goto LABEL_35;
    case 1u:
      unint64_t v13 = *(unsigned __int16 *)a5;
      goto LABEL_26;
    case 2u:
      switch(__sz)
      {
        case 3:
          LODWORD(v29) = 21;
          goto LABEL_44;
        case 2:
          int v15 = a9 - 1;
          if ((a9 - 1) >= 5) {
            return 0;
          }
          int v16 = &unk_1CDF53894;
          goto LABEL_40;
        case 1:
          int v15 = a9 - 1;
          if ((a9 - 1) >= 9) {
            return 0;
          }
          int v16 = &unk_1CDF53870;
LABEL_40:
          LODWORD(v29) = v16[v15];
          goto LABEL_44;
      }
      uint64_t v29 = 0;
      if (a9 != 1)
      {
        if (a9 != 2) {
          return v29;
        }
        LODWORD(v29) = 8;
      }
LABEL_44:
      if (sub_1CBDA6054(v12, *(unsigned __int16 *)a5, *(void **)(*(void *)(a1 + 8) + 24), v29)) {
        return 3;
      }
      else {
        return 0;
      }
    case 3u:
      if ((__sz - 1) > 3) {
        return 0;
      }
      int v17 = dword_1CDF53770[(int)__sz - 1];
      uint64_t v18 = *(unsigned __int16 *)a5;
      uint64_t v19 = *(void *)(a1 + 16);
      *(void *)(v19 + 272) += 24;
      uint64_t v20 = *(void *)(v19 + 192);
      if (((v20 + 7) & 0xFFFFFFFFFFFFFFF8) - v20 + 24 > *(void *)(v19 + 200) - v20)
      {
        unsigned int v41 = *(_DWORD *)(v19 + 216) >> 7;
        if (v41 >= 0x1E) {
          LOBYTE(v41) = 30;
        }
        uint64_t v42 = 4096 << v41;
        unint64_t v21 = (unint64_t)operator new(4096 << v41, (std::align_val_t)8uLL);
        unsigned int v43 = *(_DWORD *)(v19 + 216);
        if (v43 >= *(_DWORD *)(v19 + 220)) {
          llvm::SmallVectorBase<unsigned int>::grow_pod();
        }
        *(void *)(*(void *)(v19 + 208) + 8 * v43) = v21;
        ++*(_DWORD *)(v19 + 216);
        *(void *)(v19 + 200) = v21 + v42;
      }
      else
      {
        unint64_t v21 = (v20 + 7) & 0xFFFFFFFFFFFFFFF8;
      }
      int v22 = v17 * a9;
      *(void *)(v19 + 192) = v21 + 24;
      *(unsigned char *)unint64_t v21 = 1;
      *(_DWORD *)(v21 + 1) = *(unsigned __int8 *)(v21 + 4) << 24;
      *(void *)(v21 + 8) = 0;
      *(void *)(v21 + 16) = v18;
      uint64_t v23 = *(void *)(a1 + 16);
      *(void *)(v23 + 272) += 48;
      uint64_t v24 = *(void *)(v23 + 192);
      if (((v24 + 7) & 0xFFFFFFFFFFFFFFF8) - v24 + 48 > *(void *)(v23 + 200) - v24)
      {
        unsigned int v44 = *(_DWORD *)(v23 + 216) >> 7;
        if (v44 >= 0x1E) {
          LOBYTE(v44) = 30;
        }
        uint64_t v45 = 4096 << v44;
        unint64_t v25 = (unint64_t)operator new(4096 << v44, (std::align_val_t)8uLL);
        unsigned int v46 = *(_DWORD *)(v23 + 216);
        if (v46 >= *(_DWORD *)(v23 + 220)) {
          llvm::SmallVectorBase<unsigned int>::grow_pod();
        }
        *(void *)(*(void *)(v23 + 208) + 8 * v46) = v25;
        ++*(_DWORD *)(v23 + 216);
        *(void *)(v23 + 200) = v25 + v45;
      }
      else
      {
        unint64_t v25 = (v24 + 7) & 0xFFFFFFFFFFFFFFF8;
      }
      *(unsigned char *)(v25 + 8) = 4;
      unint64_t v13 = v25 + 8;
      *(void *)(v23 + 192) = v25 + 48;
      *(_DWORD *)(v25 + 9) = *(unsigned __int8 *)(v25 + 12) << 24;
      *(void *)(v25 + 16) = 0;
      *(void *)unint64_t v25 = &unk_1F25FDA08;
      *(_DWORD *)(v25 + 24) = 0;
      goto LABEL_34;
    case 4u:
      if (a4 || !sub_1CBE530B4(a2, *(_DWORD *)a1))
      {
        unint64_t v13 = *a5;
LABEL_26:
        uint64_t v14 = 2;
        goto LABEL_35;
      }
      uint64_t v26 = *a5;
      if (v9 == 2)
      {
        int v27 = 4;
        int v28 = 10;
      }
      else
      {
        if (v9 != 1) {
          return 0;
        }
        int v27 = 2;
        int v28 = 9;
      }
      goto LABEL_29;
    case 7u:
      unint64_t v13 = sub_1CD44F1C4(*a5);
      uint64_t v14 = 1;
      goto LABEL_35;
    default:
      if (a8 >= 5) {
        int v28 = 0;
      }
      else {
        int v28 = a8 + 4;
      }
      if (__sz == 1)
      {
        int v27 = 2;
      }
      else
      {
        uint64_t v29 = 0;
        if (__sz != 2) {
          return v29;
        }
        int v27 = 4;
      }
      uint64_t v26 = *(unsigned __int16 *)a5;
LABEL_29:
      uint64_t v30 = *(void *)(a1 + 16);
      *(void *)(v30 + 272) += 24;
      uint64_t v31 = *(void *)(v30 + 192);
      if (((v31 + 7) & 0xFFFFFFFFFFFFFFF8) - v31 + 24 > *(void *)(v30 + 200) - v31)
      {
        unsigned int v35 = *(_DWORD *)(v30 + 216) >> 7;
        if (v35 >= 0x1E) {
          LOBYTE(v35) = 30;
        }
        uint64_t v36 = 4096 << v35;
        unint64_t v21 = (unint64_t)operator new(4096 << v35, (std::align_val_t)8uLL);
        unsigned int v37 = *(_DWORD *)(v30 + 216);
        if (v37 >= *(_DWORD *)(v30 + 220)) {
          llvm::SmallVectorBase<unsigned int>::grow_pod();
        }
        *(void *)(*(void *)(v30 + 208) + 8 * v37) = v21;
        ++*(_DWORD *)(v30 + 216);
        *(void *)(v30 + 200) = v21 + v36;
      }
      else
      {
        unint64_t v21 = (v31 + 7) & 0xFFFFFFFFFFFFFFF8;
      }
      int v22 = v27 * a9;
      *(void *)(v30 + 192) = v21 + 24;
      *(unsigned char *)unint64_t v21 = 1;
      *(_DWORD *)(v21 + 1) = *(unsigned __int8 *)(v21 + 4) << 24;
      *(void *)(v21 + 8) = 0;
      *(void *)(v21 + 16) = v26;
      uint64_t v32 = *(void *)(a1 + 16);
      *(void *)(v32 + 272) += 48;
      uint64_t v33 = *(void *)(v32 + 192);
      if (((v33 + 7) & 0xFFFFFFFFFFFFFFF8) - v33 + 48 > *(void *)(v32 + 200) - v33)
      {
        unsigned int v38 = *(_DWORD *)(v32 + 216) >> 7;
        if (v38 >= 0x1E) {
          LOBYTE(v38) = 30;
        }
        uint64_t v39 = 4096 << v38;
        unint64_t v25 = (unint64_t)operator new(4096 << v38, (std::align_val_t)8uLL);
        unsigned int v40 = *(_DWORD *)(v32 + 216);
        if (v40 >= *(_DWORD *)(v32 + 220)) {
          llvm::SmallVectorBase<unsigned int>::grow_pod();
        }
        *(void *)(*(void *)(v32 + 208) + 8 * v40) = v25;
        ++*(_DWORD *)(v32 + 216);
        *(void *)(v32 + 200) = v25 + v39;
      }
      else
      {
        unint64_t v25 = (v33 + 7) & 0xFFFFFFFFFFFFFFF8;
      }
      *(unsigned char *)(v25 + 8) = 4;
      unint64_t v13 = v25 + 8;
      *(void *)(v32 + 192) = v25 + 48;
      *(_DWORD *)(v25 + 9) = *(unsigned __int8 *)(v25 + 12) << 24;
      *(void *)(v25 + 16) = 0;
      *(void *)unint64_t v25 = &unk_1F25FDA08;
      *(_DWORD *)(v25 + 24) = v28;
LABEL_34:
      *(void *)(v25 + 32) = v21;
      *(_DWORD *)(v25 + 40) = v22;
      uint64_t v14 = 5;
LABEL_35:
      *uint64_t v12 = v14;
      v12[1] = v13;
      return 3;
  }
}

uint64_t sub_1CBDA6054(void *a1, unsigned int a2, void *a3, int a4)
{
  if (a4 <= 28)
  {
    switch(a4)
    {
      case 1:
        if ((a2 & 0xFFFFFF01) != 0) {
          return 0;
        }
        a2 >>= 1;
        a3 += 4;
        break;
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 9:
      case 11:
      case 13:
      case 14:
      case 17:
      case 18:
      case 19:
      case 22:
LABEL_72:
        __break(1u);
        JUMPOUT(0x1CBDA6304);
      case 8:
        if (a2 > 0xFE) {
          return 0;
        }
        a3 += 32;
        break;
      case 10:
        if ((a2 & 0xFFFFFF01) != 0) {
          return 0;
        }
        a2 >>= 1;
        a3 += 40;
        break;
      case 12:
        if (a2 > 0xFF) {
          return 0;
        }
        a3 += 48;
        break;
      case 15:
        if (a2 > 0xFD) {
          return 0;
        }
        a3 += 60;
        break;
      case 16:
        uint64_t v4 = 0;
        if (a2 > 0xFD || (a2 & 1) != 0) {
          return v4;
        }
        a2 >>= 1;
        a3 += 64;
        break;
      case 20:
        if (a2 > 0xFC) {
          return 0;
        }
        a3 += 80;
        break;
      case 21:
        uint64_t v4 = 0;
        if (a2 > 0xFD || (a2 & 1) != 0) {
          return v4;
        }
        a2 >>= 1;
        a3 += 84;
        break;
      case 23:
        if ((a2 & 0xFFFFFE03) != 0) {
          return 0;
        }
        a2 >>= 2;
        a3 += 92;
        break;
      default:
        if (a2 < 0x100) {
          goto LABEL_70;
        }
        return 0;
    }
    goto LABEL_70;
  }
  if (a4 > 56)
  {
    if (a4 > 75)
    {
      if (a4 == 76)
      {
        uint64_t v4 = 0;
        if (a2 <= 0xF3 && (a2 & 1) == 0)
        {
          a2 >>= 1;
          a3 += 304;
          goto LABEL_70;
        }
        return v4;
      }
      if (a4 == 83)
      {
        uint64_t v4 = 0;
        if (a2 <= 0xF1 && (a2 & 1) == 0)
        {
          a2 >>= 1;
          a3 += 332;
          goto LABEL_70;
        }
        return v4;
      }
      if ((a2 & 0xFFFFFE0F) == 0)
      {
        a2 >>= 4;
        a3 += 360;
        goto LABEL_70;
      }
    }
    else
    {
      if (a4 != 57)
      {
        if (a4 == 65)
        {
          uint64_t v4 = 0;
          if (a2 <= 0xF7 && (a2 & 1) == 0)
          {
            a2 >>= 1;
            a3 += 260;
LABEL_70:
            uint64_t v5 = *(unsigned __int16 *)(*a3 + 2 * a2);
            uint64_t v4 = 1;
            *a1 = 1;
            a1[1] = v5;
            return v4;
          }
        }
        else
        {
          uint64_t v4 = 0;
          if (a2 <= 0xF5 && (a2 & 1) == 0)
          {
            a2 >>= 1;
            a3 += 280;
            goto LABEL_70;
          }
        }
        return v4;
      }
      if ((a2 & 0xFFFFFE07) == 0)
      {
        a2 >>= 3;
        a3 += 228;
        goto LABEL_70;
      }
    }
    return 0;
  }
  if (a4 <= 43)
  {
    switch(a4)
    {
      case 30:
        uint64_t v4 = 0;
        if (a2 > 0xFB || (a2 & 1) != 0) {
          return v4;
        }
        a2 >>= 1;
        a3 += 120;
        break;
      case 31:
      case 32:
      case 33:
      case 34:
      case 35:
        goto LABEL_72;
      case 36:
        if (a2 > 0xFA) {
          return 0;
        }
        a3 += 144;
        break;
      case 37:
        uint64_t v4 = 0;
        if (a2 > 0xFB || (a2 & 1) != 0) {
          return v4;
        }
        a2 >>= 1;
        a3 += 148;
        break;
      default:
        if (a2 > 0xFB) {
          return 0;
        }
        a3 += 116;
        break;
    }
    goto LABEL_70;
  }
  if (a4 == 44)
  {
    uint64_t v4 = 0;
    if (a2 <= 0xF9 && (a2 & 1) == 0)
    {
      a2 >>= 1;
      a3 += 176;
      goto LABEL_70;
    }
  }
  else
  {
    if (a4 == 50)
    {
      if (a2 <= 0xF8)
      {
        a3 += 200;
        goto LABEL_70;
      }
      return 0;
    }
    uint64_t v4 = 0;
    if (a2 <= 0xF9 && (a2 & 1) == 0)
    {
      a2 >>= 1;
      a3 += 204;
      goto LABEL_70;
    }
  }
  return v4;
}

uint64_t sub_1CBDA6388(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, unsigned int a5)
{
  if (a5 > 4) {
    LODWORD(v8) = 0;
  }
  else {
    uint64_t v8 = qword_1CDF538A8[a5];
  }
  LOWORD(v14) = *(_WORD *)a4;
  uint64_t result = sub_1CBDA5AE0(a1, *(_DWORD *)a2, *(void *)(a2 + 16), a3, &v14, 5u, 2uLL, a5, v8);
  if (result == 3)
  {
    if (*(unsigned char *)(a4 + 24)) {
      unint64_t v10 = ((unint64_t)*(unsigned int *)(a4 + 20) << 20) | 0x10;
    }
    else {
      unint64_t v10 = (unint64_t)*(unsigned int *)(a4 + 20) << 20;
    }
    uint64_t v11 = a3 + 1;
    uint64_t v12 = *(void *)(a2 + 16);
    unint64_t v13 = (void *)(v12 + 16 * v11);
    if (*(unsigned char *)v13 == 2)
    {
      unint64_t v13 = (void *)(v12 + 16 * v11);
      v10 |= v13[1];
    }
    else
    {
      *unint64_t v13 = 2;
    }
    v13[1] = v10;
  }
  return result;
}

uint64_t sub_1CBDA6464(int a1, unsigned int a2)
{
  if ((a1 - 256) >> 2 > 0x8D0)
  {
    return -1;
  }
  else
  {
    switch(a1)
    {
      case 258:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 264);
        break;
      case 259:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 792);
        break;
      case 260:
      case 261:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 55176;
        goto LABEL_4;
      case 262:
      case 270:
      case 280:
      case 281:
      case 310:
      case 314:
      case 315:
      case 333:
      case 334:
      case 357:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 30888;
        goto LABEL_4;
      case 263:
      case 264:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 58608;
        goto LABEL_4;
      case 265:
      case 266:
      case 304:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 55440;
        goto LABEL_4;
      case 267:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 33000;
        goto LABEL_4;
      case 268:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 33264;
        goto LABEL_4;
      case 269:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 34320;
        goto LABEL_4;
      case 271:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 31152;
        goto LABEL_4;
      case 272:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 1056);
        break;
      case 273:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 1584);
        break;
      case 274:
      case 275:
      case 276:
      case 277:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 2112);
        break;
      case 278:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 39336;
        goto LABEL_4;
      case 279:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 39600;
        goto LABEL_4;
      case 282:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 528);
        break;
      case 283:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 31416;
        goto LABEL_4;
      case 284:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 46464;
        goto LABEL_4;
      case 285:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 46200;
        goto LABEL_4;
      case 286:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 33528;
        goto LABEL_4;
      case 287:
      case 288:
      case 289:
      case 290:
      case 291:
      case 292:
      case 301:
      case 302:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 33792;
        goto LABEL_4;
      case 293:
      case 294:
      case 295:
      case 296:
      case 297:
      case 298:
      case 299:
      case 300:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 34056;
        goto LABEL_4;
      case 303:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 68904);
        break;
      case 305:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 69168);
        break;
      case 306:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 69696);
        break;
      case 307:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 69960);
        break;
      case 308:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 1320);
        break;
      case 309:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 54912;
        goto LABEL_4;
      case 311:
      case 312:
      case 313:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 48312;
        goto LABEL_4;
      case 316:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 58872;
        goto LABEL_4;
      case 317:
      case 318:
      case 319:
      case 320:
      case 321:
      case 322:
      case 323:
      case 324:
      case 325:
      case 326:
      case 327:
      case 328:
      case 329:
      case 330:
      case 331:
      case 332:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 68376);
        break;
      case 335:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 54648;
        goto LABEL_4;
      case 336:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 87648);
        break;
      case 337:
      case 338:
      case 339:
      case 340:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 1848);
        break;
      case 341:
      case 342:
      case 343:
      case 344:
      case 345:
      case 346:
      case 347:
      case 348:
      case 349:
      case 350:
      case 351:
      case 352:
      case 353:
      case 354:
      case 355:
      case 356:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 68640);
        break;
      case 358:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 68112);
        break;
      case 359:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 81048);
        break;
      case 360:
      case 361:
      case 362:
      case 369:
      case 370:
      case 371:
      case 387:
      case 388:
      case 389:
      case 396:
      case 397:
      case 398:
      case 707:
      case 708:
      case 715:
      case 716:
      case 795:
      case 796:
      case 803:
      case 804:
      case 817:
      case 818:
      case 819:
      case 820:
      case 833:
      case 834:
      case 835:
      case 836:
      case 849:
      case 850:
      case 851:
      case 852:
      case 865:
      case 866:
      case 867:
      case 868:
      case 881:
      case 882:
      case 883:
      case 884:
      case 913:
      case 914:
      case 915:
      case 916:
      case 929:
      case 930:
      case 931:
      case 932:
      case 945:
      case 946:
      case 947:
      case 948:
      case 961:
      case 962:
      case 963:
      case 964:
      case 977:
      case 978:
      case 979:
      case 980:
      case 993:
      case 994:
      case 995:
      case 996:
      case 1025:
      case 1026:
      case 1027:
      case 1028:
      case 2804:
      case 2805:
      case 2806:
      case 2807:
      case 2820:
      case 2821:
      case 2822:
      case 2823:
      case 2852:
      case 2853:
      case 2854:
      case 2855:
      case 2996:
      case 2997:
      case 2998:
      case 2999:
      case 3012:
      case 3013:
      case 3014:
      case 3015:
      case 3044:
      case 3045:
      case 3046:
      case 3047:
      case 4361:
      case 4362:
      case 4363:
      case 4370:
      case 4371:
      case 4372:
      case 4388:
      case 4389:
      case 4390:
      case 4391:
      case 4404:
      case 4405:
      case 4406:
      case 4413:
      case 4414:
      case 4415:
      case 5525:
      case 5526:
      case 5527:
      case 5534:
      case 5535:
      case 5536:
      case 5552:
      case 5553:
      case 5554:
      case 5555:
      case 5568:
      case 5569:
      case 5570:
      case 5577:
      case 5578:
      case 5579:
      case 6168:
      case 6169:
      case 6170:
      case 6177:
      case 6178:
      case 6179:
      case 6195:
      case 6196:
      case 6197:
      case 6204:
      case 6205:
      case 6206:
      case 6223:
      case 6224:
      case 6225:
      case 6232:
      case 6233:
      case 6234:
      case 6256:
      case 6257:
      case 6258:
      case 6265:
      case 6266:
      case 6267:
      case 6283:
      case 6284:
      case 6285:
      case 6292:
      case 6293:
      case 6294:
      case 6310:
      case 6311:
      case 6312:
      case 6319:
      case 6320:
      case 6321:
      case 8697:
      case 8698:
      case 8699:
      case 8706:
      case 8707:
      case 8708:
      case 8724:
      case 8725:
      case 8726:
      case 8733:
      case 8734:
      case 8735:
      case 9228:
      case 9229:
      case 9230:
      case 9237:
      case 9238:
      case 9239:
      case 9255:
      case 9256:
      case 9257:
      case 9264:
      case 9265:
      case 9266:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 5544;
        goto LABEL_4;
      case 363:
      case 364:
      case 365:
      case 366:
      case 367:
      case 368:
      case 372:
      case 373:
      case 374:
      case 375:
      case 376:
      case 377:
      case 390:
      case 391:
      case 392:
      case 393:
      case 394:
      case 395:
      case 399:
      case 400:
      case 401:
      case 402:
      case 403:
      case 404:
      case 705:
      case 706:
      case 713:
      case 714:
      case 793:
      case 794:
      case 801:
      case 802:
      case 809:
      case 810:
      case 811:
      case 812:
      case 813:
      case 814:
      case 815:
      case 816:
      case 821:
      case 822:
      case 823:
      case 824:
      case 825:
      case 826:
      case 827:
      case 828:
      case 829:
      case 830:
      case 831:
      case 832:
      case 837:
      case 838:
      case 839:
      case 840:
      case 841:
      case 842:
      case 843:
      case 844:
      case 845:
      case 846:
      case 847:
      case 848:
      case 853:
      case 854:
      case 855:
      case 856:
      case 857:
      case 858:
      case 859:
      case 860:
      case 861:
      case 862:
      case 863:
      case 864:
      case 869:
      case 870:
      case 871:
      case 872:
      case 873:
      case 874:
      case 875:
      case 876:
      case 877:
      case 878:
      case 879:
      case 880:
      case 885:
      case 886:
      case 887:
      case 888:
      case 905:
      case 906:
      case 907:
      case 908:
      case 909:
      case 910:
      case 911:
      case 912:
      case 917:
      case 918:
      case 919:
      case 920:
      case 921:
      case 922:
      case 923:
      case 924:
      case 925:
      case 926:
      case 927:
      case 928:
      case 933:
      case 934:
      case 935:
      case 936:
      case 937:
      case 938:
      case 939:
      case 940:
      case 941:
      case 942:
      case 943:
      case 944:
      case 949:
      case 950:
      case 951:
      case 952:
      case 953:
      case 954:
      case 955:
      case 956:
      case 957:
      case 958:
      case 959:
      case 960:
      case 965:
      case 966:
      case 967:
      case 968:
      case 969:
      case 970:
      case 971:
      case 972:
      case 973:
      case 974:
      case 975:
      case 976:
      case 981:
      case 982:
      case 983:
      case 984:
      case 985:
      case 986:
      case 987:
      case 988:
      case 989:
      case 990:
      case 991:
      case 992:
      case 997:
      case 998:
      case 999:
      case 1000:
      case 1017:
      case 1018:
      case 1019:
      case 1020:
      case 1021:
      case 1022:
      case 1023:
      case 1024:
      case 1029:
      case 1030:
      case 1031:
      case 1032:
      case 2796:
      case 2797:
      case 2798:
      case 2799:
      case 2800:
      case 2801:
      case 2802:
      case 2803:
      case 2808:
      case 2809:
      case 2810:
      case 2811:
      case 2812:
      case 2813:
      case 2814:
      case 2815:
      case 2816:
      case 2817:
      case 2818:
      case 2819:
      case 2824:
      case 2825:
      case 2826:
      case 2827:
      case 2844:
      case 2845:
      case 2846:
      case 2847:
      case 2848:
      case 2849:
      case 2850:
      case 2851:
      case 2856:
      case 2857:
      case 2858:
      case 2859:
      case 2988:
      case 2989:
      case 2990:
      case 2991:
      case 2992:
      case 2993:
      case 2994:
      case 2995:
      case 3000:
      case 3001:
      case 3002:
      case 3003:
      case 3004:
      case 3005:
      case 3006:
      case 3007:
      case 3008:
      case 3009:
      case 3010:
      case 3011:
      case 3016:
      case 3017:
      case 3018:
      case 3019:
      case 3036:
      case 3037:
      case 3038:
      case 3039:
      case 3040:
      case 3041:
      case 3042:
      case 3043:
      case 3048:
      case 3049:
      case 3050:
      case 3051:
      case 3669:
      case 3671:
      case 3673:
      case 3675:
      case 3677:
      case 3679:
      case 3681:
      case 3683:
      case 3685:
      case 3687:
      case 3689:
      case 3691:
      case 3693:
      case 3695:
      case 3697:
      case 3699:
      case 3701:
      case 3703:
      case 3705:
      case 3707:
      case 3709:
      case 3711:
      case 3713:
      case 3715:
      case 3717:
      case 3719:
      case 3721:
      case 4364:
      case 4365:
      case 4366:
      case 4367:
      case 4368:
      case 4369:
      case 4373:
      case 4374:
      case 4375:
      case 4376:
      case 4377:
      case 4378:
      case 4392:
      case 4393:
      case 4394:
      case 4395:
      case 4396:
      case 4397:
      case 4398:
      case 4399:
      case 4400:
      case 4401:
      case 4402:
      case 4403:
      case 4407:
      case 4408:
      case 4409:
      case 4410:
      case 4411:
      case 4412:
      case 4416:
      case 4417:
      case 4418:
      case 4419:
      case 4420:
      case 4421:
      case 4512:
      case 4513:
      case 4516:
      case 4517:
      case 4520:
      case 4521:
      case 4524:
      case 4525:
      case 4528:
      case 4529:
      case 4532:
      case 4533:
      case 5528:
      case 5529:
      case 5530:
      case 5531:
      case 5532:
      case 5533:
      case 5537:
      case 5538:
      case 5539:
      case 5540:
      case 5541:
      case 5542:
      case 5556:
      case 5557:
      case 5558:
      case 5559:
      case 5560:
      case 5561:
      case 5562:
      case 5563:
      case 5564:
      case 5565:
      case 5566:
      case 5567:
      case 5571:
      case 5572:
      case 5573:
      case 5574:
      case 5575:
      case 5576:
      case 5580:
      case 5581:
      case 5582:
      case 5583:
      case 5584:
      case 5585:
      case 6171:
      case 6172:
      case 6173:
      case 6174:
      case 6175:
      case 6176:
      case 6180:
      case 6181:
      case 6182:
      case 6183:
      case 6184:
      case 6185:
      case 6198:
      case 6199:
      case 6200:
      case 6201:
      case 6202:
      case 6203:
      case 6207:
      case 6208:
      case 6209:
      case 6210:
      case 6211:
      case 6212:
      case 6226:
      case 6227:
      case 6228:
      case 6229:
      case 6230:
      case 6231:
      case 6235:
      case 6236:
      case 6237:
      case 6238:
      case 6239:
      case 6240:
      case 6259:
      case 6260:
      case 6261:
      case 6262:
      case 6263:
      case 6264:
      case 6268:
      case 6269:
      case 6270:
      case 6271:
      case 6272:
      case 6273:
      case 6286:
      case 6287:
      case 6288:
      case 6289:
      case 6290:
      case 6291:
      case 6295:
      case 6296:
      case 6297:
      case 6298:
      case 6299:
      case 6300:
      case 6313:
      case 6314:
      case 6315:
      case 6316:
      case 6317:
      case 6318:
      case 6322:
      case 6323:
      case 6324:
      case 6325:
      case 6326:
      case 6327:
      case 8700:
      case 8701:
      case 8702:
      case 8703:
      case 8704:
      case 8705:
      case 8709:
      case 8710:
      case 8711:
      case 8712:
      case 8713:
      case 8714:
      case 8727:
      case 8728:
      case 8729:
      case 8730:
      case 8731:
      case 8732:
      case 8736:
      case 8737:
      case 8738:
      case 8739:
      case 8740:
      case 8741:
      case 9231:
      case 9232:
      case 9233:
      case 9234:
      case 9235:
      case 9236:
      case 9240:
      case 9241:
      case 9242:
      case 9243:
      case 9244:
      case 9245:
      case 9258:
      case 9259:
      case 9260:
      case 9261:
      case 9262:
      case 9263:
      case 9267:
      case 9268:
      case 9269:
      case 9270:
      case 9271:
      case 9272:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 8976;
        goto LABEL_4;
      case 378:
      case 379:
      case 380:
      case 405:
      case 406:
      case 407:
      case 711:
      case 712:
      case 719:
      case 720:
      case 799:
      case 800:
      case 807:
      case 808:
      case 897:
      case 898:
      case 899:
      case 900:
      case 1009:
      case 1010:
      case 1011:
      case 1012:
      case 2836:
      case 2837:
      case 2838:
      case 2839:
      case 3028:
      case 3029:
      case 3030:
      case 3031:
      case 4379:
      case 4380:
      case 4381:
      case 4422:
      case 4423:
      case 4424:
      case 4425:
      case 5543:
      case 5544:
      case 5545:
      case 5586:
      case 5587:
      case 5588:
      case 5589:
      case 6186:
      case 6187:
      case 6188:
      case 6213:
      case 6214:
      case 6215:
      case 6241:
      case 6242:
      case 6243:
      case 6274:
      case 6275:
      case 6276:
      case 6301:
      case 6302:
      case 6303:
      case 6328:
      case 6329:
      case 6330:
      case 8715:
      case 8716:
      case 8717:
      case 8742:
      case 8743:
      case 8744:
      case 9246:
      case 9247:
      case 9248:
      case 9273:
      case 9274:
      case 9275:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 15576;
        goto LABEL_4;
      case 381:
      case 382:
      case 383:
      case 384:
      case 385:
      case 386:
      case 408:
      case 409:
      case 410:
      case 411:
      case 412:
      case 413:
      case 709:
      case 710:
      case 717:
      case 718:
      case 797:
      case 798:
      case 805:
      case 806:
      case 889:
      case 890:
      case 891:
      case 892:
      case 893:
      case 894:
      case 895:
      case 896:
      case 901:
      case 902:
      case 903:
      case 904:
      case 1001:
      case 1002:
      case 1003:
      case 1004:
      case 1005:
      case 1006:
      case 1007:
      case 1008:
      case 1013:
      case 1014:
      case 1015:
      case 1016:
      case 2828:
      case 2829:
      case 2830:
      case 2831:
      case 2832:
      case 2833:
      case 2834:
      case 2835:
      case 2840:
      case 2841:
      case 2842:
      case 2843:
      case 3020:
      case 3021:
      case 3022:
      case 3023:
      case 3024:
      case 3025:
      case 3026:
      case 3027:
      case 3032:
      case 3033:
      case 3034:
      case 3035:
      case 4382:
      case 4383:
      case 4384:
      case 4385:
      case 4386:
      case 4387:
      case 4426:
      case 4427:
      case 4428:
      case 4429:
      case 4430:
      case 4431:
      case 4432:
      case 4433:
      case 4434:
      case 4435:
      case 4436:
      case 4437:
      case 5546:
      case 5547:
      case 5548:
      case 5549:
      case 5550:
      case 5551:
      case 5590:
      case 5591:
      case 5592:
      case 5593:
      case 5594:
      case 5595:
      case 5596:
      case 5597:
      case 5598:
      case 5599:
      case 5600:
      case 5601:
      case 6189:
      case 6190:
      case 6191:
      case 6192:
      case 6193:
      case 6194:
      case 6216:
      case 6217:
      case 6218:
      case 6219:
      case 6220:
      case 6221:
      case 6244:
      case 6245:
      case 6246:
      case 6247:
      case 6248:
      case 6249:
      case 6277:
      case 6278:
      case 6279:
      case 6280:
      case 6281:
      case 6282:
      case 6304:
      case 6305:
      case 6306:
      case 6307:
      case 6308:
      case 6309:
      case 6331:
      case 6332:
      case 6333:
      case 6334:
      case 6335:
      case 6336:
      case 8718:
      case 8719:
      case 8720:
      case 8721:
      case 8722:
      case 8723:
      case 8745:
      case 8746:
      case 8747:
      case 8748:
      case 8749:
      case 8750:
      case 9249:
      case 9250:
      case 9251:
      case 9252:
      case 9253:
      case 9254:
      case 9276:
      case 9277:
      case 9278:
      case 9279:
      case 9280:
      case 9281:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 22176;
        goto LABEL_4;
      case 414:
      case 6846:
      case 9187:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 73656);
        break;
      case 415:
      case 416:
      case 417:
      case 418:
      case 419:
      case 420:
      case 421:
      case 422:
      case 423:
      case 424:
      case 425:
      case 426:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 69432);
        break;
      case 427:
      case 428:
      case 429:
      case 430:
      case 431:
      case 432:
      case 4330:
      case 4331:
      case 4332:
      case 4333:
      case 4334:
      case 4335:
      case 4999:
      case 5000:
      case 5001:
      case 5002:
      case 5003:
      case 5004:
      case 6505:
      case 6506:
      case 6507:
      case 6508:
      case 6513:
      case 6514:
      case 6515:
      case 6516:
      case 6517:
      case 6518:
      case 6519:
      case 6520:
      case 6525:
      case 6526:
      case 6527:
      case 6528:
      case 6533:
      case 6534:
      case 6535:
      case 6536:
      case 6541:
      case 6542:
      case 6543:
      case 6544:
      case 6549:
      case 6550:
      case 6551:
      case 6552:
      case 6557:
      case 6558:
      case 6559:
      case 6560:
      case 6565:
      case 6566:
      case 6567:
      case 6568:
      case 6573:
      case 6574:
      case 6575:
      case 6576:
      case 6581:
      case 6582:
      case 6583:
      case 6584:
      case 6589:
      case 6590:
      case 6591:
      case 6592:
      case 6597:
      case 6598:
      case 6599:
      case 6600:
      case 6707:
      case 6708:
      case 6709:
      case 6710:
      case 6711:
      case 6712:
      case 8751:
      case 8752:
      case 8753:
      case 8754:
      case 8759:
      case 8760:
      case 8761:
      case 8762:
      case 8763:
      case 8764:
      case 8765:
      case 8766:
      case 8771:
      case 8772:
      case 8773:
      case 8774:
      case 8779:
      case 8780:
      case 8781:
      case 8782:
      case 8787:
      case 8788:
      case 8789:
      case 8790:
      case 8795:
      case 8796:
      case 8797:
      case 8798:
      case 8803:
      case 8804:
      case 8805:
      case 8806:
      case 8811:
      case 8812:
      case 8813:
      case 8814:
      case 8819:
      case 8820:
      case 8821:
      case 8822:
      case 8827:
      case 8828:
      case 8829:
      case 8830:
      case 8835:
      case 8836:
      case 8837:
      case 8838:
      case 8843:
      case 8844:
      case 8845:
      case 8846:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 41448;
        goto LABEL_4;
      case 433:
      case 434:
      case 435:
      case 4336:
      case 4337:
      case 4338:
      case 5005:
      case 5006:
      case 5007:
      case 6509:
      case 6510:
      case 6511:
      case 6512:
      case 6521:
      case 6522:
      case 6523:
      case 6524:
      case 6529:
      case 6530:
      case 6531:
      case 6532:
      case 6537:
      case 6538:
      case 6539:
      case 6540:
      case 6545:
      case 6546:
      case 6547:
      case 6548:
      case 6553:
      case 6554:
      case 6555:
      case 6556:
      case 6561:
      case 6562:
      case 6563:
      case 6564:
      case 6569:
      case 6570:
      case 6571:
      case 6572:
      case 6577:
      case 6578:
      case 6579:
      case 6580:
      case 6585:
      case 6586:
      case 6587:
      case 6588:
      case 6593:
      case 6594:
      case 6595:
      case 6596:
      case 6601:
      case 6602:
      case 6603:
      case 6604:
      case 6713:
      case 6714:
      case 6715:
      case 8755:
      case 8756:
      case 8757:
      case 8758:
      case 8767:
      case 8768:
      case 8769:
      case 8770:
      case 8775:
      case 8776:
      case 8777:
      case 8778:
      case 8783:
      case 8784:
      case 8785:
      case 8786:
      case 8791:
      case 8792:
      case 8793:
      case 8794:
      case 8799:
      case 8800:
      case 8801:
      case 8802:
      case 8807:
      case 8808:
      case 8809:
      case 8810:
      case 8815:
      case 8816:
      case 8817:
      case 8818:
      case 8823:
      case 8824:
      case 8825:
      case 8826:
      case 8831:
      case 8832:
      case 8833:
      case 8834:
      case 8839:
      case 8840:
      case 8841:
      case 8842:
      case 8847:
      case 8848:
      case 8849:
      case 8850:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 42768;
        goto LABEL_4;
      case 436:
      case 437:
      case 438:
      case 439:
      case 440:
      case 441:
      case 445:
      case 446:
      case 447:
      case 448:
      case 449:
      case 450:
      case 463:
      case 464:
      case 465:
      case 466:
      case 467:
      case 468:
      case 472:
      case 473:
      case 474:
      case 475:
      case 476:
      case 477:
      case 490:
      case 491:
      case 492:
      case 493:
      case 494:
      case 495:
      case 499:
      case 500:
      case 501:
      case 502:
      case 503:
      case 504:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 40920;
        goto LABEL_4;
      case 442:
      case 443:
      case 444:
      case 451:
      case 452:
      case 453:
      case 469:
      case 470:
      case 471:
      case 478:
      case 479:
      case 480:
      case 496:
      case 497:
      case 498:
      case 505:
      case 506:
      case 507:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 40656;
        goto LABEL_4;
      case 454:
      case 455:
      case 456:
      case 457:
      case 458:
      case 459:
      case 481:
      case 482:
      case 483:
      case 484:
      case 485:
      case 486:
      case 508:
      case 509:
      case 510:
      case 511:
      case 512:
      case 513:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 40128;
        goto LABEL_4;
      case 460:
      case 461:
      case 462:
      case 487:
      case 488:
      case 489:
      case 514:
      case 515:
      case 516:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 39864;
        goto LABEL_4;
      case 517:
      case 518:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 49104;
        goto LABEL_4;
      case 519:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 52536;
        goto LABEL_4;
      case 520:
      case 521:
      case 522:
      case 529:
      case 530:
      case 531:
      case 6834:
      case 6835:
      case 6838:
      case 6839:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 40392;
        goto LABEL_4;
      case 523:
      case 524:
      case 525:
      case 526:
      case 527:
      case 528:
      case 532:
      case 533:
      case 534:
      case 535:
      case 536:
      case 537:
      case 6836:
      case 6837:
      case 6840:
      case 6841:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 41184;
        goto LABEL_4;
      case 538:
      case 539:
      case 9206:
      case 9207:
      case 9208:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 55704;
        goto LABEL_4;
      case 540:
      case 541:
      case 542:
      case 543:
      case 545:
      case 546:
      case 548:
      case 549:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 81312);
        break;
      case 544:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 81576);
        break;
      case 547:
      case 623:
      case 6222:
      case 6716:
      case 9205:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 73392);
        break;
      case 550:
      case 566:
      case 567:
      case 568:
      case 6165:
      case 6166:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 81840);
        break;
      case 551:
      case 552:
      case 553:
      case 554:
      case 555:
      case 556:
      case 1033:
      case 1034:
      case 1035:
      case 1036:
      case 1037:
      case 1038:
      case 1039:
      case 1040:
      case 1045:
      case 1046:
      case 1047:
      case 1048:
      case 1049:
      case 1050:
      case 1051:
      case 1052:
      case 1053:
      case 1054:
      case 1055:
      case 1056:
      case 1061:
      case 1062:
      case 1063:
      case 1064:
      case 1065:
      case 1066:
      case 1067:
      case 1068:
      case 1069:
      case 1070:
      case 1071:
      case 1072:
      case 1077:
      case 1078:
      case 1079:
      case 1080:
      case 1081:
      case 1082:
      case 1083:
      case 1084:
      case 1085:
      case 1086:
      case 1087:
      case 1088:
      case 1093:
      case 1094:
      case 1095:
      case 1096:
      case 1097:
      case 1098:
      case 1099:
      case 1100:
      case 1101:
      case 1102:
      case 1103:
      case 1104:
      case 1109:
      case 1110:
      case 1111:
      case 1112:
      case 1113:
      case 1114:
      case 1115:
      case 1116:
      case 1117:
      case 1118:
      case 1119:
      case 1120:
      case 1125:
      case 1126:
      case 1127:
      case 1128:
      case 2252:
      case 2253:
      case 2254:
      case 2255:
      case 2256:
      case 2257:
      case 2258:
      case 2259:
      case 2264:
      case 2265:
      case 2266:
      case 2267:
      case 2268:
      case 2269:
      case 2270:
      case 2271:
      case 2272:
      case 2273:
      case 2274:
      case 2275:
      case 2280:
      case 2281:
      case 2282:
      case 2283:
      case 3308:
      case 3309:
      case 3310:
      case 3311:
      case 3312:
      case 3313:
      case 3314:
      case 3315:
      case 3320:
      case 3321:
      case 3322:
      case 3323:
      case 3356:
      case 3357:
      case 3358:
      case 3359:
      case 3360:
      case 3361:
      case 3362:
      case 3363:
      case 3368:
      case 3369:
      case 3370:
      case 3371:
      case 3372:
      case 3373:
      case 3374:
      case 3375:
      case 3376:
      case 3377:
      case 3378:
      case 3379:
      case 3384:
      case 3385:
      case 3386:
      case 3387:
      case 3388:
      case 3389:
      case 3390:
      case 3391:
      case 3392:
      case 3393:
      case 3394:
      case 3395:
      case 3400:
      case 3401:
      case 3402:
      case 3403:
      case 3404:
      case 3405:
      case 3406:
      case 3407:
      case 3408:
      case 3409:
      case 3410:
      case 3411:
      case 3416:
      case 3417:
      case 3418:
      case 3419:
      case 3420:
      case 3421:
      case 3422:
      case 3423:
      case 3424:
      case 3425:
      case 3426:
      case 3427:
      case 3432:
      case 3433:
      case 3434:
      case 3435:
      case 3436:
      case 3437:
      case 3438:
      case 3439:
      case 3440:
      case 3441:
      case 3442:
      case 3443:
      case 3448:
      case 3449:
      case 3450:
      case 3451:
      case 3452:
      case 3453:
      case 3454:
      case 3455:
      case 3456:
      case 3457:
      case 3458:
      case 3459:
      case 3464:
      case 3465:
      case 3466:
      case 3467:
      case 3468:
      case 3469:
      case 3470:
      case 3471:
      case 3472:
      case 3473:
      case 3474:
      case 3475:
      case 3480:
      case 3481:
      case 3482:
      case 3483:
      case 3484:
      case 3485:
      case 3486:
      case 3487:
      case 3488:
      case 3489:
      case 3490:
      case 3491:
      case 3496:
      case 3497:
      case 3498:
      case 3499:
      case 3500:
      case 3501:
      case 3502:
      case 3503:
      case 3504:
      case 3505:
      case 3506:
      case 3507:
      case 3512:
      case 3513:
      case 3514:
      case 3515:
      case 3516:
      case 3517:
      case 3518:
      case 3519:
      case 3520:
      case 3521:
      case 3522:
      case 3523:
      case 3528:
      case 3529:
      case 3530:
      case 3531:
      case 3532:
      case 3533:
      case 3534:
      case 3535:
      case 3536:
      case 3537:
      case 3538:
      case 3539:
      case 3544:
      case 3545:
      case 3546:
      case 3547:
      case 3548:
      case 3549:
      case 3550:
      case 3551:
      case 3552:
      case 3553:
      case 3554:
      case 3555:
      case 3560:
      case 3561:
      case 3562:
      case 3563:
      case 3564:
      case 3565:
      case 3566:
      case 3567:
      case 3568:
      case 3569:
      case 3570:
      case 3571:
      case 3576:
      case 3577:
      case 3578:
      case 3579:
      case 3580:
      case 3581:
      case 3582:
      case 3583:
      case 3584:
      case 3585:
      case 3586:
      case 3587:
      case 3592:
      case 3593:
      case 3594:
      case 3595:
      case 6717:
      case 6718:
      case 6719:
      case 6720:
      case 6721:
      case 6722:
      case 6723:
      case 6724:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 36168;
        goto LABEL_4;
      case 557:
      case 558:
      case 559:
      case 560:
      case 561:
      case 562:
      case 563:
      case 564:
      case 565:
      case 1041:
      case 1042:
      case 1043:
      case 1044:
      case 1057:
      case 1058:
      case 1059:
      case 1060:
      case 1073:
      case 1074:
      case 1075:
      case 1076:
      case 1089:
      case 1090:
      case 1091:
      case 1092:
      case 1105:
      case 1106:
      case 1107:
      case 1108:
      case 1121:
      case 1122:
      case 1123:
      case 1124:
      case 2260:
      case 2261:
      case 2262:
      case 2263:
      case 2276:
      case 2277:
      case 2278:
      case 2279:
      case 3316:
      case 3317:
      case 3318:
      case 3319:
      case 3364:
      case 3365:
      case 3366:
      case 3367:
      case 3380:
      case 3381:
      case 3382:
      case 3383:
      case 3396:
      case 3397:
      case 3398:
      case 3399:
      case 3412:
      case 3413:
      case 3414:
      case 3415:
      case 3428:
      case 3429:
      case 3430:
      case 3431:
      case 3444:
      case 3445:
      case 3446:
      case 3447:
      case 3460:
      case 3461:
      case 3462:
      case 3463:
      case 3476:
      case 3477:
      case 3478:
      case 3479:
      case 3492:
      case 3493:
      case 3494:
      case 3495:
      case 3508:
      case 3509:
      case 3510:
      case 3511:
      case 3524:
      case 3525:
      case 3526:
      case 3527:
      case 3540:
      case 3541:
      case 3542:
      case 3543:
      case 3556:
      case 3557:
      case 3558:
      case 3559:
      case 3572:
      case 3573:
      case 3574:
      case 3575:
      case 3588:
      case 3589:
      case 3590:
      case 3591:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 38280;
        goto LABEL_4;
      case 569:
      case 572:
      case 575:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 49368;
        goto LABEL_4;
      case 570:
      case 571:
      case 573:
      case 574:
      case 576:
      case 577:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 49632;
        goto LABEL_4;
      case 578:
      case 581:
      case 584:
      case 587:
      case 590:
      case 593:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 49896;
        goto LABEL_4;
      case 579:
      case 580:
      case 582:
      case 583:
      case 585:
      case 586:
      case 588:
      case 589:
      case 591:
      case 592:
      case 594:
      case 595:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 50160;
        goto LABEL_4;
      case 596:
      case 599:
      case 602:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 52800;
        goto LABEL_4;
      case 597:
      case 598:
      case 600:
      case 601:
      case 603:
      case 604:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 53064;
        goto LABEL_4;
      case 605:
      case 608:
      case 611:
      case 614:
      case 617:
      case 620:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 53328;
        goto LABEL_4;
      case 606:
      case 607:
      case 609:
      case 610:
      case 612:
      case 613:
      case 615:
      case 616:
      case 618:
      case 619:
      case 621:
      case 622:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 53592;
        goto LABEL_4;
      case 624:
      case 651:
      case 6997:
      case 7024:
      case 7078:
      case 7105:
      case 8851:
      case 8878:
      case 8932:
      case 8959:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 3168);
        break;
      case 625:
      case 626:
      case 652:
      case 653:
      case 6998:
      case 6999:
      case 7025:
      case 7026:
      case 7079:
      case 7080:
      case 7106:
      case 7107:
      case 8852:
      case 8853:
      case 8879:
      case 8880:
      case 8933:
      case 8934:
      case 8960:
      case 8961:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 3432);
        break;
      case 627:
      case 630:
      case 654:
      case 657:
      case 7000:
      case 7003:
      case 7027:
      case 7030:
      case 7081:
      case 7084:
      case 7108:
      case 7111:
      case 8854:
      case 8857:
      case 8881:
      case 8884:
      case 8935:
      case 8938:
      case 8962:
      case 8965:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 4488;
        goto LABEL_4;
      case 628:
      case 629:
      case 631:
      case 632:
      case 655:
      case 656:
      case 658:
      case 659:
      case 7001:
      case 7002:
      case 7004:
      case 7005:
      case 7028:
      case 7029:
      case 7031:
      case 7032:
      case 7082:
      case 7083:
      case 7085:
      case 7086:
      case 7109:
      case 7110:
      case 7112:
      case 7113:
      case 8855:
      case 8856:
      case 8858:
      case 8859:
      case 8882:
      case 8883:
      case 8885:
      case 8886:
      case 8936:
      case 8937:
      case 8939:
      case 8940:
      case 8963:
      case 8964:
      case 8966:
      case 8967:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 4752;
        goto LABEL_4;
      case 633:
      case 642:
      case 660:
      case 669:
      case 7006:
      case 7015:
      case 7033:
      case 7042:
      case 7087:
      case 7096:
      case 7114:
      case 7123:
      case 8860:
      case 8869:
      case 8887:
      case 8896:
      case 8941:
      case 8950:
      case 8968:
      case 8977:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 6600;
        goto LABEL_4;
      case 634:
      case 635:
      case 643:
      case 644:
      case 661:
      case 662:
      case 670:
      case 671:
      case 7007:
      case 7008:
      case 7016:
      case 7017:
      case 7034:
      case 7035:
      case 7043:
      case 7044:
      case 7088:
      case 7089:
      case 7097:
      case 7098:
      case 7115:
      case 7116:
      case 7124:
      case 7125:
      case 8861:
      case 8862:
      case 8870:
      case 8871:
      case 8888:
      case 8889:
      case 8897:
      case 8898:
      case 8942:
      case 8943:
      case 8951:
      case 8952:
      case 8969:
      case 8970:
      case 8978:
      case 8979:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 6864;
        goto LABEL_4;
      case 636:
      case 639:
      case 645:
      case 648:
      case 663:
      case 666:
      case 672:
      case 675:
      case 7009:
      case 7012:
      case 7018:
      case 7021:
      case 7036:
      case 7039:
      case 7045:
      case 7048:
      case 7090:
      case 7093:
      case 7099:
      case 7102:
      case 7117:
      case 7120:
      case 7126:
      case 7129:
      case 8863:
      case 8866:
      case 8872:
      case 8875:
      case 8890:
      case 8893:
      case 8899:
      case 8902:
      case 8944:
      case 8947:
      case 8953:
      case 8956:
      case 8971:
      case 8974:
      case 8980:
      case 8983:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 7920;
        goto LABEL_4;
      case 637:
      case 638:
      case 640:
      case 641:
      case 646:
      case 647:
      case 649:
      case 650:
      case 664:
      case 665:
      case 667:
      case 668:
      case 673:
      case 674:
      case 676:
      case 677:
      case 7010:
      case 7011:
      case 7013:
      case 7014:
      case 7019:
      case 7020:
      case 7022:
      case 7023:
      case 7037:
      case 7038:
      case 7040:
      case 7041:
      case 7046:
      case 7047:
      case 7049:
      case 7050:
      case 7091:
      case 7092:
      case 7094:
      case 7095:
      case 7100:
      case 7101:
      case 7103:
      case 7104:
      case 7118:
      case 7119:
      case 7121:
      case 7122:
      case 7127:
      case 7128:
      case 7130:
      case 7131:
      case 8864:
      case 8865:
      case 8867:
      case 8868:
      case 8873:
      case 8874:
      case 8876:
      case 8877:
      case 8891:
      case 8892:
      case 8894:
      case 8895:
      case 8900:
      case 8901:
      case 8903:
      case 8904:
      case 8945:
      case 8946:
      case 8948:
      case 8949:
      case 8954:
      case 8955:
      case 8957:
      case 8958:
      case 8972:
      case 8973:
      case 8975:
      case 8976:
      case 8981:
      case 8982:
      case 8984:
      case 8985:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 8184;
        goto LABEL_4;
      case 678:
      case 7051:
      case 7132:
      case 8905:
      case 8986:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 11352;
        goto LABEL_4;
      case 679:
      case 680:
      case 7052:
      case 7053:
      case 7133:
      case 7134:
      case 8906:
      case 8907:
      case 8987:
      case 8988:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 11616;
        goto LABEL_4;
      case 681:
      case 684:
      case 7054:
      case 7057:
      case 7135:
      case 7138:
      case 8908:
      case 8911:
      case 8989:
      case 8992:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 13992;
        goto LABEL_4;
      case 682:
      case 683:
      case 685:
      case 686:
      case 7055:
      case 7056:
      case 7058:
      case 7059:
      case 7136:
      case 7137:
      case 7139:
      case 7140:
      case 8909:
      case 8910:
      case 8912:
      case 8913:
      case 8990:
      case 8991:
      case 8993:
      case 8994:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 14256;
        goto LABEL_4;
      case 687:
      case 696:
      case 7060:
      case 7069:
      case 7141:
      case 7150:
      case 8914:
      case 8923:
      case 8995:
      case 9004:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 17952;
        goto LABEL_4;
      case 688:
      case 689:
      case 697:
      case 698:
      case 7061:
      case 7062:
      case 7070:
      case 7071:
      case 7142:
      case 7143:
      case 7151:
      case 7152:
      case 8915:
      case 8916:
      case 8924:
      case 8925:
      case 8996:
      case 8997:
      case 9005:
      case 9006:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 18216;
        goto LABEL_4;
      case 690:
      case 693:
      case 699:
      case 702:
      case 7063:
      case 7066:
      case 7072:
      case 7075:
      case 7144:
      case 7147:
      case 7153:
      case 7156:
      case 8917:
      case 8920:
      case 8926:
      case 8929:
      case 8998:
      case 9001:
      case 9007:
      case 9010:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 20592;
        goto LABEL_4;
      case 691:
      case 692:
      case 694:
      case 695:
      case 700:
      case 701:
      case 703:
      case 704:
      case 7064:
      case 7065:
      case 7067:
      case 7068:
      case 7073:
      case 7074:
      case 7076:
      case 7077:
      case 7145:
      case 7146:
      case 7148:
      case 7149:
      case 7154:
      case 7155:
      case 7157:
      case 7158:
      case 8918:
      case 8919:
      case 8921:
      case 8922:
      case 8927:
      case 8928:
      case 8930:
      case 8931:
      case 8999:
      case 9000:
      case 9002:
      case 9003:
      case 9008:
      case 9009:
      case 9011:
      case 9012:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 20856;
        goto LABEL_4;
      case 721:
      case 722:
      case 737:
      case 738:
      case 761:
      case 762:
      case 777:
      case 778:
      case 1129:
      case 1130:
      case 1131:
      case 1132:
      case 1133:
      case 1134:
      case 1135:
      case 1136:
      case 1141:
      case 1142:
      case 1143:
      case 1144:
      case 1145:
      case 1146:
      case 1147:
      case 1148:
      case 1149:
      case 1150:
      case 1151:
      case 1152:
      case 1157:
      case 1158:
      case 1159:
      case 1160:
      case 1177:
      case 1178:
      case 1179:
      case 1180:
      case 1181:
      case 1182:
      case 1183:
      case 1184:
      case 1189:
      case 1190:
      case 1191:
      case 1192:
      case 1193:
      case 1194:
      case 1195:
      case 1196:
      case 1197:
      case 1198:
      case 1199:
      case 1200:
      case 1205:
      case 1206:
      case 1207:
      case 1208:
      case 1209:
      case 1210:
      case 1211:
      case 1212:
      case 1213:
      case 1214:
      case 1215:
      case 1216:
      case 1221:
      case 1222:
      case 1223:
      case 1224:
      case 1241:
      case 1242:
      case 1243:
      case 1244:
      case 1245:
      case 1246:
      case 1247:
      case 1248:
      case 1253:
      case 1254:
      case 1255:
      case 1256:
      case 1321:
      case 1322:
      case 1323:
      case 1324:
      case 1325:
      case 1326:
      case 1327:
      case 1328:
      case 1333:
      case 1334:
      case 1335:
      case 1336:
      case 1337:
      case 1338:
      case 1339:
      case 1340:
      case 1341:
      case 1342:
      case 1343:
      case 1344:
      case 1349:
      case 1350:
      case 1351:
      case 1352:
      case 1369:
      case 1370:
      case 1371:
      case 1372:
      case 1373:
      case 1374:
      case 1375:
      case 1376:
      case 1381:
      case 1382:
      case 1383:
      case 1384:
      case 1897:
      case 1898:
      case 1899:
      case 1900:
      case 1901:
      case 1902:
      case 1903:
      case 1904:
      case 1909:
      case 1910:
      case 1911:
      case 1912:
      case 1913:
      case 1914:
      case 1915:
      case 1916:
      case 1917:
      case 1918:
      case 1919:
      case 1920:
      case 1925:
      case 1926:
      case 1927:
      case 1928:
      case 1945:
      case 1946:
      case 1947:
      case 1948:
      case 1949:
      case 1950:
      case 1951:
      case 1952:
      case 1957:
      case 1958:
      case 1959:
      case 1960:
      case 1961:
      case 1962:
      case 1963:
      case 1964:
      case 1965:
      case 1966:
      case 1967:
      case 1968:
      case 1973:
      case 1974:
      case 1975:
      case 1976:
      case 1977:
      case 1978:
      case 1979:
      case 1980:
      case 1981:
      case 1982:
      case 1983:
      case 1984:
      case 1989:
      case 1990:
      case 1991:
      case 1992:
      case 2009:
      case 2010:
      case 2011:
      case 2012:
      case 2013:
      case 2014:
      case 2015:
      case 2016:
      case 2021:
      case 2022:
      case 2023:
      case 2024:
      case 2089:
      case 2090:
      case 2091:
      case 2092:
      case 2093:
      case 2094:
      case 2095:
      case 2096:
      case 2101:
      case 2102:
      case 2103:
      case 2104:
      case 2105:
      case 2106:
      case 2107:
      case 2108:
      case 2109:
      case 2110:
      case 2111:
      case 2112:
      case 2117:
      case 2118:
      case 2119:
      case 2120:
      case 2137:
      case 2138:
      case 2139:
      case 2140:
      case 2141:
      case 2142:
      case 2143:
      case 2144:
      case 2149:
      case 2150:
      case 2151:
      case 2152:
      case 2284:
      case 2285:
      case 2286:
      case 2287:
      case 2288:
      case 2289:
      case 2290:
      case 2291:
      case 2296:
      case 2297:
      case 2298:
      case 2299:
      case 2300:
      case 2301:
      case 2302:
      case 2303:
      case 2304:
      case 2305:
      case 2306:
      case 2307:
      case 2312:
      case 2313:
      case 2314:
      case 2315:
      case 2332:
      case 2333:
      case 2334:
      case 2335:
      case 2336:
      case 2337:
      case 2338:
      case 2339:
      case 2344:
      case 2345:
      case 2346:
      case 2347:
      case 2348:
      case 2349:
      case 2350:
      case 2351:
      case 2352:
      case 2353:
      case 2354:
      case 2355:
      case 2360:
      case 2361:
      case 2362:
      case 2363:
      case 2364:
      case 2365:
      case 2366:
      case 2367:
      case 2368:
      case 2369:
      case 2370:
      case 2371:
      case 2376:
      case 2377:
      case 2378:
      case 2379:
      case 2396:
      case 2397:
      case 2398:
      case 2399:
      case 2400:
      case 2401:
      case 2402:
      case 2403:
      case 2408:
      case 2409:
      case 2410:
      case 2411:
      case 2476:
      case 2477:
      case 2478:
      case 2479:
      case 2480:
      case 2481:
      case 2482:
      case 2483:
      case 2488:
      case 2489:
      case 2490:
      case 2491:
      case 2492:
      case 2493:
      case 2494:
      case 2495:
      case 2496:
      case 2497:
      case 2498:
      case 2499:
      case 2504:
      case 2505:
      case 2506:
      case 2507:
      case 2518:
      case 2524:
      case 2525:
      case 2526:
      case 2527:
      case 2528:
      case 2529:
      case 2530:
      case 2531:
      case 2534:
      case 2536:
      case 2537:
      case 2538:
      case 2539:
      case 2540:
      case 2541:
      case 2542:
      case 2543:
      case 2544:
      case 2545:
      case 2546:
      case 2547:
      case 2552:
      case 2553:
      case 2554:
      case 2555:
      case 2556:
      case 2557:
      case 2558:
      case 2559:
      case 2560:
      case 2561:
      case 2562:
      case 2563:
      case 2568:
      case 2569:
      case 2570:
      case 2571:
      case 2588:
      case 2589:
      case 2590:
      case 2591:
      case 2592:
      case 2593:
      case 2594:
      case 2595:
      case 2600:
      case 2601:
      case 2602:
      case 2603:
      case 2604:
      case 2605:
      case 2606:
      case 2607:
      case 2608:
      case 2609:
      case 2610:
      case 2611:
      case 2616:
      case 2617:
      case 2618:
      case 2619:
      case 2620:
      case 2621:
      case 2622:
      case 2623:
      case 2624:
      case 2625:
      case 2626:
      case 2627:
      case 2632:
      case 2633:
      case 2634:
      case 2635:
      case 2652:
      case 2653:
      case 2654:
      case 2655:
      case 2656:
      case 2657:
      case 2658:
      case 2659:
      case 2664:
      case 2665:
      case 2666:
      case 2667:
      case 2732:
      case 2733:
      case 2734:
      case 2735:
      case 2736:
      case 2737:
      case 2738:
      case 2739:
      case 2744:
      case 2745:
      case 2746:
      case 2747:
      case 2748:
      case 2749:
      case 2750:
      case 2751:
      case 2752:
      case 2753:
      case 2754:
      case 2755:
      case 2760:
      case 2761:
      case 2762:
      case 2763:
      case 2774:
      case 2780:
      case 2781:
      case 2782:
      case 2783:
      case 2784:
      case 2785:
      case 2786:
      case 2787:
      case 2790:
      case 2792:
      case 2793:
      case 2794:
      case 2795:
      case 3052:
      case 3053:
      case 3054:
      case 3055:
      case 3058:
      case 3059:
      case 3060:
      case 3061:
      case 3062:
      case 3063:
      case 3066:
      case 3067:
      case 3076:
      case 3077:
      case 3078:
      case 3079:
      case 3082:
      case 3083:
      case 3084:
      case 3085:
      case 3086:
      case 3087:
      case 3090:
      case 3091:
      case 3092:
      case 3093:
      case 3094:
      case 3095:
      case 3098:
      case 3099:
      case 3108:
      case 3109:
      case 3110:
      case 3111:
      case 3114:
      case 3115:
      case 3148:
      case 3149:
      case 3150:
      case 3151:
      case 3154:
      case 3155:
      case 3156:
      case 3157:
      case 3158:
      case 3159:
      case 3162:
      case 3163:
      case 3172:
      case 3173:
      case 3174:
      case 3175:
      case 3178:
      case 3179:
      case 3180:
      case 3181:
      case 3182:
      case 3183:
      case 3186:
      case 3187:
      case 3188:
      case 3189:
      case 3190:
      case 3191:
      case 3194:
      case 3195:
      case 3204:
      case 3205:
      case 3206:
      case 3207:
      case 3210:
      case 3211:
      case 3212:
      case 3213:
      case 3214:
      case 3215:
      case 3218:
      case 3219:
      case 3220:
      case 3221:
      case 3222:
      case 3223:
      case 3226:
      case 3227:
      case 3236:
      case 3237:
      case 3238:
      case 3239:
      case 3242:
      case 3243:
      case 3276:
      case 3277:
      case 3278:
      case 3279:
      case 3282:
      case 3283:
      case 3284:
      case 3285:
      case 3286:
      case 3287:
      case 3290:
      case 3291:
      case 3300:
      case 3301:
      case 3302:
      case 3303:
      case 3306:
      case 3307:
      case 3668:
      case 3670:
      case 3672:
      case 3674:
      case 3676:
      case 3678:
      case 3680:
      case 3682:
      case 3684:
      case 3686:
      case 3688:
      case 3690:
      case 3692:
      case 3694:
      case 3696:
      case 3698:
      case 3700:
      case 3702:
      case 3704:
      case 3706:
      case 3708:
      case 3710:
      case 3712:
      case 3714:
      case 3716:
      case 3718:
      case 3720:
      case 4510:
      case 4511:
      case 4514:
      case 4515:
      case 4518:
      case 4519:
      case 4522:
      case 4523:
      case 4526:
      case 4527:
      case 4530:
      case 4531:
      case 4546:
      case 4547:
      case 4548:
      case 4549:
      case 4550:
      case 4551:
      case 4555:
      case 4556:
      case 4557:
      case 4558:
      case 4559:
      case 4560:
      case 4573:
      case 4574:
      case 4575:
      case 4576:
      case 4577:
      case 4578:
      case 4582:
      case 4583:
      case 4584:
      case 4585:
      case 4586:
      case 4587:
      case 4631:
      case 4632:
      case 4633:
      case 4634:
      case 4635:
      case 4636:
      case 4637:
      case 4638:
      case 4643:
      case 4644:
      case 4645:
      case 4646:
      case 4647:
      case 4648:
      case 4649:
      case 4650:
      case 4663:
      case 4664:
      case 4665:
      case 4666:
      case 4667:
      case 4668:
      case 4672:
      case 4673:
      case 4674:
      case 4675:
      case 4676:
      case 4677:
      case 4690:
      case 4691:
      case 4692:
      case 4693:
      case 4694:
      case 4695:
      case 4699:
      case 4700:
      case 4701:
      case 4702:
      case 4703:
      case 4704:
      case 4787:
      case 4788:
      case 4789:
      case 4790:
      case 4791:
      case 4792:
      case 4796:
      case 4797:
      case 4798:
      case 4799:
      case 4800:
      case 4801:
      case 4814:
      case 4815:
      case 4816:
      case 4817:
      case 4818:
      case 4819:
      case 4823:
      case 4824:
      case 4825:
      case 4826:
      case 4827:
      case 4828:
      case 4872:
      case 4873:
      case 4874:
      case 4875:
      case 4876:
      case 4877:
      case 4878:
      case 4879:
      case 4884:
      case 4885:
      case 4886:
      case 4887:
      case 4888:
      case 4889:
      case 4890:
      case 4891:
      case 4904:
      case 4905:
      case 4906:
      case 4907:
      case 4908:
      case 4909:
      case 4913:
      case 4914:
      case 4915:
      case 4916:
      case 4917:
      case 4918:
      case 4931:
      case 4932:
      case 4933:
      case 4934:
      case 4935:
      case 4936:
      case 4940:
      case 4941:
      case 4942:
      case 4943:
      case 4944:
      case 4945:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 7656;
        goto LABEL_4;
      case 723:
      case 724:
      case 739:
      case 740:
      case 763:
      case 764:
      case 779:
      case 780:
      case 1137:
      case 1138:
      case 1139:
      case 1140:
      case 1153:
      case 1154:
      case 1155:
      case 1156:
      case 1185:
      case 1186:
      case 1187:
      case 1188:
      case 1201:
      case 1202:
      case 1203:
      case 1204:
      case 1217:
      case 1218:
      case 1219:
      case 1220:
      case 1249:
      case 1250:
      case 1251:
      case 1252:
      case 1329:
      case 1330:
      case 1331:
      case 1332:
      case 1345:
      case 1346:
      case 1347:
      case 1348:
      case 1377:
      case 1378:
      case 1379:
      case 1380:
      case 1905:
      case 1906:
      case 1907:
      case 1908:
      case 1921:
      case 1922:
      case 1923:
      case 1924:
      case 1953:
      case 1954:
      case 1955:
      case 1956:
      case 1969:
      case 1970:
      case 1971:
      case 1972:
      case 1985:
      case 1986:
      case 1987:
      case 1988:
      case 2017:
      case 2018:
      case 2019:
      case 2020:
      case 2097:
      case 2098:
      case 2099:
      case 2100:
      case 2113:
      case 2114:
      case 2115:
      case 2116:
      case 2145:
      case 2146:
      case 2147:
      case 2148:
      case 2292:
      case 2293:
      case 2294:
      case 2295:
      case 2308:
      case 2309:
      case 2310:
      case 2311:
      case 2340:
      case 2341:
      case 2342:
      case 2343:
      case 2356:
      case 2357:
      case 2358:
      case 2359:
      case 2372:
      case 2373:
      case 2374:
      case 2375:
      case 2404:
      case 2405:
      case 2406:
      case 2407:
      case 2484:
      case 2485:
      case 2486:
      case 2487:
      case 2500:
      case 2501:
      case 2502:
      case 2503:
      case 2532:
      case 2533:
      case 2535:
      case 2548:
      case 2549:
      case 2550:
      case 2551:
      case 2564:
      case 2565:
      case 2566:
      case 2567:
      case 2596:
      case 2597:
      case 2598:
      case 2599:
      case 2612:
      case 2613:
      case 2614:
      case 2615:
      case 2628:
      case 2629:
      case 2630:
      case 2631:
      case 2660:
      case 2661:
      case 2662:
      case 2663:
      case 2740:
      case 2741:
      case 2742:
      case 2743:
      case 2756:
      case 2757:
      case 2758:
      case 2759:
      case 2788:
      case 2789:
      case 2791:
      case 3056:
      case 3057:
      case 3064:
      case 3065:
      case 3080:
      case 3081:
      case 3088:
      case 3089:
      case 3096:
      case 3097:
      case 3112:
      case 3113:
      case 3152:
      case 3153:
      case 3160:
      case 3161:
      case 3176:
      case 3177:
      case 3184:
      case 3185:
      case 3192:
      case 3193:
      case 3208:
      case 3209:
      case 3216:
      case 3217:
      case 3224:
      case 3225:
      case 3240:
      case 3241:
      case 3280:
      case 3281:
      case 3288:
      case 3289:
      case 3304:
      case 3305:
      case 4543:
      case 4544:
      case 4545:
      case 4552:
      case 4553:
      case 4554:
      case 4570:
      case 4571:
      case 4572:
      case 4579:
      case 4580:
      case 4581:
      case 4627:
      case 4628:
      case 4629:
      case 4630:
      case 4639:
      case 4640:
      case 4641:
      case 4642:
      case 4660:
      case 4661:
      case 4662:
      case 4669:
      case 4670:
      case 4671:
      case 4687:
      case 4688:
      case 4689:
      case 4696:
      case 4697:
      case 4698:
      case 4784:
      case 4785:
      case 4786:
      case 4793:
      case 4794:
      case 4795:
      case 4811:
      case 4812:
      case 4813:
      case 4820:
      case 4821:
      case 4822:
      case 4868:
      case 4869:
      case 4870:
      case 4871:
      case 4880:
      case 4881:
      case 4882:
      case 4883:
      case 4901:
      case 4902:
      case 4903:
      case 4910:
      case 4911:
      case 4912:
      case 4928:
      case 4929:
      case 4930:
      case 4937:
      case 4938:
      case 4939:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 6336;
        goto LABEL_4;
      case 725:
      case 726:
      case 741:
      case 742:
      case 765:
      case 766:
      case 781:
      case 782:
      case 1161:
      case 1162:
      case 1163:
      case 1164:
      case 1165:
      case 1166:
      case 1167:
      case 1168:
      case 1173:
      case 1174:
      case 1175:
      case 1176:
      case 1225:
      case 1226:
      case 1227:
      case 1228:
      case 1229:
      case 1230:
      case 1231:
      case 1232:
      case 1237:
      case 1238:
      case 1239:
      case 1240:
      case 1353:
      case 1354:
      case 1355:
      case 1356:
      case 1357:
      case 1358:
      case 1359:
      case 1360:
      case 1365:
      case 1366:
      case 1367:
      case 1368:
      case 1929:
      case 1930:
      case 1931:
      case 1932:
      case 1933:
      case 1934:
      case 1935:
      case 1936:
      case 1941:
      case 1942:
      case 1943:
      case 1944:
      case 1993:
      case 1994:
      case 1995:
      case 1996:
      case 1997:
      case 1998:
      case 1999:
      case 2000:
      case 2005:
      case 2006:
      case 2007:
      case 2008:
      case 2121:
      case 2122:
      case 2123:
      case 2124:
      case 2125:
      case 2126:
      case 2127:
      case 2128:
      case 2133:
      case 2134:
      case 2135:
      case 2136:
      case 2316:
      case 2317:
      case 2318:
      case 2319:
      case 2320:
      case 2321:
      case 2322:
      case 2323:
      case 2328:
      case 2329:
      case 2330:
      case 2331:
      case 2380:
      case 2381:
      case 2382:
      case 2383:
      case 2384:
      case 2385:
      case 2386:
      case 2387:
      case 2392:
      case 2393:
      case 2394:
      case 2395:
      case 2508:
      case 2509:
      case 2510:
      case 2511:
      case 2512:
      case 2513:
      case 2514:
      case 2515:
      case 2520:
      case 2521:
      case 2522:
      case 2523:
      case 2572:
      case 2573:
      case 2574:
      case 2575:
      case 2576:
      case 2577:
      case 2578:
      case 2579:
      case 2584:
      case 2585:
      case 2586:
      case 2587:
      case 2636:
      case 2637:
      case 2638:
      case 2639:
      case 2640:
      case 2641:
      case 2642:
      case 2643:
      case 2648:
      case 2649:
      case 2650:
      case 2651:
      case 2764:
      case 2765:
      case 2766:
      case 2767:
      case 2768:
      case 2769:
      case 2770:
      case 2771:
      case 2776:
      case 2777:
      case 2778:
      case 2779:
      case 3068:
      case 3069:
      case 3070:
      case 3071:
      case 3074:
      case 3075:
      case 3100:
      case 3101:
      case 3102:
      case 3103:
      case 3106:
      case 3107:
      case 3164:
      case 3165:
      case 3166:
      case 3167:
      case 3170:
      case 3171:
      case 3196:
      case 3197:
      case 3198:
      case 3199:
      case 3202:
      case 3203:
      case 3228:
      case 3229:
      case 3230:
      case 3231:
      case 3234:
      case 3235:
      case 3292:
      case 3293:
      case 3294:
      case 3295:
      case 3298:
      case 3299:
      case 4537:
      case 4538:
      case 4539:
      case 4540:
      case 4541:
      case 4542:
      case 4564:
      case 4565:
      case 4566:
      case 4567:
      case 4568:
      case 4569:
      case 4619:
      case 4620:
      case 4621:
      case 4622:
      case 4623:
      case 4624:
      case 4625:
      case 4626:
      case 4654:
      case 4655:
      case 4656:
      case 4657:
      case 4658:
      case 4659:
      case 4681:
      case 4682:
      case 4683:
      case 4684:
      case 4685:
      case 4686:
      case 4778:
      case 4779:
      case 4780:
      case 4781:
      case 4782:
      case 4783:
      case 4805:
      case 4806:
      case 4807:
      case 4808:
      case 4809:
      case 4810:
      case 4860:
      case 4861:
      case 4862:
      case 4863:
      case 4864:
      case 4865:
      case 4866:
      case 4867:
      case 4895:
      case 4896:
      case 4897:
      case 4898:
      case 4899:
      case 4900:
      case 4922:
      case 4923:
      case 4924:
      case 4925:
      case 4926:
      case 4927:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 4224;
        goto LABEL_4;
      case 727:
      case 728:
      case 743:
      case 744:
      case 767:
      case 768:
      case 783:
      case 784:
      case 1169:
      case 1170:
      case 1171:
      case 1172:
      case 1233:
      case 1234:
      case 1235:
      case 1236:
      case 1361:
      case 1362:
      case 1363:
      case 1364:
      case 1937:
      case 1938:
      case 1939:
      case 1940:
      case 2001:
      case 2002:
      case 2003:
      case 2004:
      case 2129:
      case 2130:
      case 2131:
      case 2132:
      case 2324:
      case 2325:
      case 2326:
      case 2327:
      case 2388:
      case 2389:
      case 2390:
      case 2391:
      case 2516:
      case 2517:
      case 2519:
      case 2580:
      case 2581:
      case 2582:
      case 2583:
      case 2644:
      case 2645:
      case 2646:
      case 2647:
      case 2772:
      case 2773:
      case 2775:
      case 3072:
      case 3073:
      case 3104:
      case 3105:
      case 3168:
      case 3169:
      case 3200:
      case 3201:
      case 3232:
      case 3233:
      case 3296:
      case 3297:
      case 4534:
      case 4535:
      case 4536:
      case 4561:
      case 4562:
      case 4563:
      case 4615:
      case 4616:
      case 4617:
      case 4618:
      case 4651:
      case 4652:
      case 4653:
      case 4678:
      case 4679:
      case 4680:
      case 4775:
      case 4776:
      case 4777:
      case 4802:
      case 4803:
      case 4804:
      case 4856:
      case 4857:
      case 4858:
      case 4859:
      case 4892:
      case 4893:
      case 4894:
      case 4919:
      case 4920:
      case 4921:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 2904);
        break;
      case 729:
      case 730:
      case 745:
      case 746:
      case 769:
      case 770:
      case 785:
      case 786:
      case 1257:
      case 1258:
      case 1259:
      case 1260:
      case 1261:
      case 1262:
      case 1263:
      case 1264:
      case 1269:
      case 1270:
      case 1271:
      case 1272:
      case 1273:
      case 1274:
      case 1275:
      case 1276:
      case 1277:
      case 1278:
      case 1279:
      case 1280:
      case 1285:
      case 1286:
      case 1287:
      case 1288:
      case 1305:
      case 1306:
      case 1307:
      case 1308:
      case 1309:
      case 1310:
      case 1311:
      case 1312:
      case 1317:
      case 1318:
      case 1319:
      case 1320:
      case 2025:
      case 2026:
      case 2027:
      case 2028:
      case 2029:
      case 2030:
      case 2031:
      case 2032:
      case 2037:
      case 2038:
      case 2039:
      case 2040:
      case 2041:
      case 2042:
      case 2043:
      case 2044:
      case 2045:
      case 2046:
      case 2047:
      case 2048:
      case 2053:
      case 2054:
      case 2055:
      case 2056:
      case 2073:
      case 2074:
      case 2075:
      case 2076:
      case 2077:
      case 2078:
      case 2079:
      case 2080:
      case 2085:
      case 2086:
      case 2087:
      case 2088:
      case 2412:
      case 2413:
      case 2414:
      case 2415:
      case 2416:
      case 2417:
      case 2418:
      case 2419:
      case 2424:
      case 2425:
      case 2426:
      case 2427:
      case 2428:
      case 2429:
      case 2430:
      case 2431:
      case 2432:
      case 2433:
      case 2434:
      case 2435:
      case 2440:
      case 2441:
      case 2442:
      case 2443:
      case 2460:
      case 2461:
      case 2462:
      case 2463:
      case 2464:
      case 2465:
      case 2466:
      case 2467:
      case 2472:
      case 2473:
      case 2474:
      case 2475:
      case 2668:
      case 2669:
      case 2670:
      case 2671:
      case 2672:
      case 2673:
      case 2674:
      case 2675:
      case 2680:
      case 2681:
      case 2682:
      case 2683:
      case 2684:
      case 2685:
      case 2686:
      case 2687:
      case 2688:
      case 2689:
      case 2690:
      case 2691:
      case 2696:
      case 2697:
      case 2698:
      case 2699:
      case 2716:
      case 2717:
      case 2718:
      case 2719:
      case 2720:
      case 2721:
      case 2722:
      case 2723:
      case 2728:
      case 2729:
      case 2730:
      case 2731:
      case 3116:
      case 3117:
      case 3118:
      case 3119:
      case 3122:
      case 3123:
      case 3124:
      case 3125:
      case 3126:
      case 3127:
      case 3130:
      case 3131:
      case 3140:
      case 3141:
      case 3142:
      case 3143:
      case 3146:
      case 3147:
      case 3244:
      case 3245:
      case 3246:
      case 3247:
      case 3250:
      case 3251:
      case 3252:
      case 3253:
      case 3254:
      case 3255:
      case 3258:
      case 3259:
      case 3268:
      case 3269:
      case 3270:
      case 3271:
      case 3274:
      case 3275:
      case 4600:
      case 4601:
      case 4602:
      case 4603:
      case 4604:
      case 4605:
      case 4609:
      case 4610:
      case 4611:
      case 4612:
      case 4613:
      case 4614:
      case 4721:
      case 4722:
      case 4723:
      case 4724:
      case 4725:
      case 4726:
      case 4727:
      case 4728:
      case 4733:
      case 4734:
      case 4735:
      case 4736:
      case 4737:
      case 4738:
      case 4739:
      case 4740:
      case 4841:
      case 4842:
      case 4843:
      case 4844:
      case 4845:
      case 4846:
      case 4850:
      case 4851:
      case 4852:
      case 4853:
      case 4854:
      case 4855:
      case 4962:
      case 4963:
      case 4964:
      case 4965:
      case 4966:
      case 4967:
      case 4968:
      case 4969:
      case 4974:
      case 4975:
      case 4976:
      case 4977:
      case 4978:
      case 4979:
      case 4980:
      case 4981:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 20328;
        goto LABEL_4;
      case 731:
      case 732:
      case 747:
      case 748:
      case 771:
      case 772:
      case 787:
      case 788:
      case 1265:
      case 1266:
      case 1267:
      case 1268:
      case 1281:
      case 1282:
      case 1283:
      case 1284:
      case 1313:
      case 1314:
      case 1315:
      case 1316:
      case 2033:
      case 2034:
      case 2035:
      case 2036:
      case 2049:
      case 2050:
      case 2051:
      case 2052:
      case 2081:
      case 2082:
      case 2083:
      case 2084:
      case 2420:
      case 2421:
      case 2422:
      case 2423:
      case 2436:
      case 2437:
      case 2438:
      case 2439:
      case 2468:
      case 2469:
      case 2470:
      case 2471:
      case 2676:
      case 2677:
      case 2678:
      case 2679:
      case 2692:
      case 2693:
      case 2694:
      case 2695:
      case 2724:
      case 2725:
      case 2726:
      case 2727:
      case 3120:
      case 3121:
      case 3128:
      case 3129:
      case 3144:
      case 3145:
      case 3248:
      case 3249:
      case 3256:
      case 3257:
      case 3272:
      case 3273:
      case 4597:
      case 4598:
      case 4599:
      case 4606:
      case 4607:
      case 4608:
      case 4717:
      case 4718:
      case 4719:
      case 4720:
      case 4729:
      case 4730:
      case 4731:
      case 4732:
      case 4838:
      case 4839:
      case 4840:
      case 4847:
      case 4848:
      case 4849:
      case 4958:
      case 4959:
      case 4960:
      case 4961:
      case 4970:
      case 4971:
      case 4972:
      case 4973:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 17688;
        goto LABEL_4;
      case 733:
      case 734:
      case 749:
      case 750:
      case 773:
      case 774:
      case 789:
      case 790:
      case 1289:
      case 1290:
      case 1291:
      case 1292:
      case 1293:
      case 1294:
      case 1295:
      case 1296:
      case 1301:
      case 1302:
      case 1303:
      case 1304:
      case 2057:
      case 2058:
      case 2059:
      case 2060:
      case 2061:
      case 2062:
      case 2063:
      case 2064:
      case 2069:
      case 2070:
      case 2071:
      case 2072:
      case 2444:
      case 2445:
      case 2446:
      case 2447:
      case 2448:
      case 2449:
      case 2450:
      case 2451:
      case 2456:
      case 2457:
      case 2458:
      case 2459:
      case 2700:
      case 2701:
      case 2702:
      case 2703:
      case 2704:
      case 2705:
      case 2706:
      case 2707:
      case 2712:
      case 2713:
      case 2714:
      case 2715:
      case 3132:
      case 3133:
      case 3134:
      case 3135:
      case 3138:
      case 3139:
      case 3260:
      case 3261:
      case 3262:
      case 3263:
      case 3266:
      case 3267:
      case 4591:
      case 4592:
      case 4593:
      case 4594:
      case 4595:
      case 4596:
      case 4709:
      case 4710:
      case 4711:
      case 4712:
      case 4713:
      case 4714:
      case 4715:
      case 4716:
      case 4832:
      case 4833:
      case 4834:
      case 4835:
      case 4836:
      case 4837:
      case 4950:
      case 4951:
      case 4952:
      case 4953:
      case 4954:
      case 4955:
      case 4956:
      case 4957:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 13728;
        goto LABEL_4;
      case 735:
      case 736:
      case 751:
      case 752:
      case 775:
      case 776:
      case 791:
      case 792:
      case 1297:
      case 1298:
      case 1299:
      case 1300:
      case 2065:
      case 2066:
      case 2067:
      case 2068:
      case 2452:
      case 2453:
      case 2454:
      case 2455:
      case 2708:
      case 2709:
      case 2710:
      case 2711:
      case 3136:
      case 3137:
      case 3264:
      case 3265:
      case 4588:
      case 4589:
      case 4590:
      case 4705:
      case 4706:
      case 4707:
      case 4708:
      case 4829:
      case 4830:
      case 4831:
      case 4946:
      case 4947:
      case 4948:
      case 4949:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 11088;
        goto LABEL_4;
      case 753:
      case 757:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 43824;
        goto LABEL_4;
      case 754:
      case 758:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 43560;
        goto LABEL_4;
      case 755:
      case 759:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 43296;
        goto LABEL_4;
      case 756:
      case 760:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 43032;
        goto LABEL_4;
      case 1385:
      case 1386:
      case 1388:
      case 1389:
      case 1390:
      case 1392:
      case 1397:
      case 1398:
      case 1400:
      case 1401:
      case 1402:
      case 1404:
      case 1405:
      case 1406:
      case 1408:
      case 1413:
      case 1414:
      case 1416:
      case 1433:
      case 1434:
      case 1436:
      case 1437:
      case 1438:
      case 1440:
      case 1445:
      case 1446:
      case 1448:
      case 1449:
      case 1450:
      case 1452:
      case 1453:
      case 1454:
      case 1456:
      case 1461:
      case 1462:
      case 1464:
      case 1465:
      case 1466:
      case 1468:
      case 1469:
      case 1470:
      case 1472:
      case 1477:
      case 1478:
      case 1480:
      case 1497:
      case 1498:
      case 1500:
      case 1501:
      case 1502:
      case 1504:
      case 1509:
      case 1510:
      case 1512:
      case 1577:
      case 1578:
      case 1580:
      case 1581:
      case 1582:
      case 1584:
      case 1589:
      case 1590:
      case 1592:
      case 1593:
      case 1594:
      case 1596:
      case 1597:
      case 1598:
      case 1600:
      case 1605:
      case 1606:
      case 1608:
      case 1625:
      case 1626:
      case 1628:
      case 1629:
      case 1630:
      case 1632:
      case 1637:
      case 1638:
      case 1640:
      case 1641:
      case 1642:
      case 1644:
      case 1645:
      case 1646:
      case 1648:
      case 1653:
      case 1654:
      case 1656:
      case 1657:
      case 1658:
      case 1660:
      case 1661:
      case 1662:
      case 1664:
      case 1669:
      case 1670:
      case 1672:
      case 1689:
      case 1690:
      case 1692:
      case 1693:
      case 1694:
      case 1696:
      case 1701:
      case 1702:
      case 1704:
      case 1705:
      case 1706:
      case 1708:
      case 1709:
      case 1710:
      case 1712:
      case 1717:
      case 1718:
      case 1720:
      case 1721:
      case 1722:
      case 1724:
      case 1725:
      case 1726:
      case 1728:
      case 1733:
      case 1734:
      case 1736:
      case 1753:
      case 1754:
      case 1756:
      case 1757:
      case 1758:
      case 1760:
      case 1765:
      case 1766:
      case 1768:
      case 1833:
      case 1834:
      case 1836:
      case 1837:
      case 1838:
      case 1840:
      case 1845:
      case 1846:
      case 1848:
      case 1849:
      case 1850:
      case 1852:
      case 1853:
      case 1854:
      case 1856:
      case 1861:
      case 1862:
      case 1864:
      case 1881:
      case 1882:
      case 1884:
      case 1885:
      case 1886:
      case 1888:
      case 1893:
      case 1894:
      case 1896:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 7392;
        goto LABEL_4;
      case 1387:
      case 1391:
      case 1399:
      case 1403:
      case 1407:
      case 1415:
      case 1435:
      case 1439:
      case 1447:
      case 1451:
      case 1455:
      case 1463:
      case 1467:
      case 1471:
      case 1479:
      case 1499:
      case 1503:
      case 1511:
      case 1579:
      case 1583:
      case 1591:
      case 1595:
      case 1599:
      case 1607:
      case 1627:
      case 1631:
      case 1639:
      case 1643:
      case 1647:
      case 1655:
      case 1659:
      case 1663:
      case 1671:
      case 1691:
      case 1695:
      case 1703:
      case 1707:
      case 1711:
      case 1719:
      case 1723:
      case 1727:
      case 1735:
      case 1755:
      case 1759:
      case 1767:
      case 1835:
      case 1839:
      case 1847:
      case 1851:
      case 1855:
      case 1863:
      case 1883:
      case 1887:
      case 1895:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 7128;
        goto LABEL_4;
      case 1393:
      case 1394:
      case 1396:
      case 1409:
      case 1410:
      case 1412:
      case 1441:
      case 1442:
      case 1444:
      case 1457:
      case 1458:
      case 1460:
      case 1473:
      case 1474:
      case 1476:
      case 1505:
      case 1506:
      case 1508:
      case 1585:
      case 1586:
      case 1588:
      case 1601:
      case 1602:
      case 1604:
      case 1633:
      case 1634:
      case 1636:
      case 1649:
      case 1650:
      case 1652:
      case 1665:
      case 1666:
      case 1668:
      case 1697:
      case 1698:
      case 1700:
      case 1713:
      case 1714:
      case 1716:
      case 1729:
      case 1730:
      case 1732:
      case 1761:
      case 1762:
      case 1764:
      case 1841:
      case 1842:
      case 1844:
      case 1857:
      case 1858:
      case 1860:
      case 1889:
      case 1890:
      case 1892:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 6072;
        goto LABEL_4;
      case 1395:
      case 1411:
      case 1443:
      case 1459:
      case 1475:
      case 1507:
      case 1587:
      case 1603:
      case 1635:
      case 1651:
      case 1667:
      case 1699:
      case 1715:
      case 1731:
      case 1763:
      case 1843:
      case 1859:
      case 1891:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 5808;
        goto LABEL_4;
      case 1417:
      case 1418:
      case 1420:
      case 1421:
      case 1422:
      case 1424:
      case 1429:
      case 1430:
      case 1432:
      case 1481:
      case 1482:
      case 1484:
      case 1485:
      case 1486:
      case 1488:
      case 1493:
      case 1494:
      case 1496:
      case 1609:
      case 1610:
      case 1612:
      case 1613:
      case 1614:
      case 1616:
      case 1621:
      case 1622:
      case 1624:
      case 1673:
      case 1674:
      case 1676:
      case 1677:
      case 1678:
      case 1680:
      case 1685:
      case 1686:
      case 1688:
      case 1737:
      case 1738:
      case 1740:
      case 1741:
      case 1742:
      case 1744:
      case 1749:
      case 1750:
      case 1752:
      case 1865:
      case 1866:
      case 1868:
      case 1869:
      case 1870:
      case 1872:
      case 1877:
      case 1878:
      case 1880:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 3960);
        break;
      case 1419:
      case 1423:
      case 1431:
      case 1483:
      case 1487:
      case 1495:
      case 1611:
      case 1615:
      case 1623:
      case 1675:
      case 1679:
      case 1687:
      case 1739:
      case 1743:
      case 1751:
      case 1867:
      case 1871:
      case 1879:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 3696);
        break;
      case 1425:
      case 1426:
      case 1428:
      case 1489:
      case 1490:
      case 1492:
      case 1617:
      case 1618:
      case 1620:
      case 1681:
      case 1682:
      case 1684:
      case 1745:
      case 1746:
      case 1748:
      case 1873:
      case 1874:
      case 1876:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 2640);
        break;
      case 1427:
      case 1491:
      case 1619:
      case 1683:
      case 1747:
      case 1875:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 2376);
        break;
      case 1513:
      case 1514:
      case 1516:
      case 1517:
      case 1518:
      case 1520:
      case 1525:
      case 1526:
      case 1528:
      case 1529:
      case 1530:
      case 1532:
      case 1533:
      case 1534:
      case 1536:
      case 1541:
      case 1542:
      case 1544:
      case 1561:
      case 1562:
      case 1564:
      case 1565:
      case 1566:
      case 1568:
      case 1573:
      case 1574:
      case 1576:
      case 1769:
      case 1770:
      case 1772:
      case 1773:
      case 1774:
      case 1776:
      case 1781:
      case 1782:
      case 1784:
      case 1785:
      case 1786:
      case 1788:
      case 1789:
      case 1790:
      case 1792:
      case 1797:
      case 1798:
      case 1800:
      case 1817:
      case 1818:
      case 1820:
      case 1821:
      case 1822:
      case 1824:
      case 1829:
      case 1830:
      case 1832:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 18744;
        goto LABEL_4;
      case 1515:
      case 1519:
      case 1527:
      case 1531:
      case 1535:
      case 1543:
      case 1563:
      case 1567:
      case 1575:
      case 1771:
      case 1775:
      case 1783:
      case 1787:
      case 1791:
      case 1799:
      case 1819:
      case 1823:
      case 1831:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 18480;
        goto LABEL_4;
      case 1521:
      case 1522:
      case 1524:
      case 1537:
      case 1538:
      case 1540:
      case 1569:
      case 1570:
      case 1572:
      case 1777:
      case 1778:
      case 1780:
      case 1793:
      case 1794:
      case 1796:
      case 1825:
      case 1826:
      case 1828:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 16104;
        goto LABEL_4;
      case 1523:
      case 1539:
      case 1571:
      case 1779:
      case 1795:
      case 1827:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 15840;
        goto LABEL_4;
      case 1545:
      case 1546:
      case 1548:
      case 1549:
      case 1550:
      case 1552:
      case 1557:
      case 1558:
      case 1560:
      case 1801:
      case 1802:
      case 1804:
      case 1805:
      case 1806:
      case 1808:
      case 1813:
      case 1814:
      case 1816:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 12144;
        goto LABEL_4;
      case 1547:
      case 1551:
      case 1559:
      case 1803:
      case 1807:
      case 1815:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 11880;
        goto LABEL_4;
      case 1553:
      case 1554:
      case 1556:
      case 1809:
      case 1810:
      case 1812:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 9504;
        goto LABEL_4;
      case 1555:
      case 1811:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 9240;
        goto LABEL_4;
      case 2153:
      case 2154:
      case 2155:
      case 2156:
      case 2159:
      case 2160:
      case 2161:
      case 2162:
      case 2189:
      case 2190:
      case 2191:
      case 2192:
      case 2195:
      case 2196:
      case 2197:
      case 2198:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 44880;
        goto LABEL_4;
      case 2157:
      case 2158:
      case 2163:
      case 2164:
      case 2193:
      case 2194:
      case 2199:
      case 2200:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 44616;
        goto LABEL_4;
      case 2165:
      case 2166:
      case 2167:
      case 2168:
      case 2201:
      case 2202:
      case 2203:
      case 2204:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 44352;
        goto LABEL_4;
      case 2169:
      case 2170:
      case 2205:
      case 2206:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 44088;
        goto LABEL_4;
      case 2171:
      case 2172:
      case 2173:
      case 2174:
      case 2177:
      case 2178:
      case 2179:
      case 2180:
      case 2207:
      case 2208:
      case 2209:
      case 2210:
      case 2213:
      case 2214:
      case 2215:
      case 2216:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 45936;
        goto LABEL_4;
      case 2175:
      case 2176:
      case 2181:
      case 2182:
      case 2211:
      case 2212:
      case 2217:
      case 2218:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 45672;
        goto LABEL_4;
      case 2183:
      case 2184:
      case 2185:
      case 2186:
      case 2219:
      case 2220:
      case 2221:
      case 2222:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 45408;
        goto LABEL_4;
      case 2187:
      case 2188:
      case 2223:
      case 2224:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 45144;
        goto LABEL_4;
      case 2225:
      case 2227:
      case 2228:
      case 2230:
      case 2234:
      case 2236:
      case 2240:
      case 2242:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 46728;
        goto LABEL_4;
      case 2226:
      case 2229:
      case 2235:
      case 2238:
      case 2241:
      case 2244:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 47256;
        goto LABEL_4;
      case 2231:
      case 2233:
      case 2246:
      case 2248:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 47520;
        goto LABEL_4;
      case 2232:
      case 2247:
      case 2250:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 48048;
        goto LABEL_4;
      case 2237:
      case 2239:
      case 2243:
      case 2245:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 46992;
        goto LABEL_4;
      case 2249:
      case 2251:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 47784;
        goto LABEL_4;
      case 2860:
      case 2861:
      case 2863:
      case 2864:
      case 2865:
      case 2867:
      case 2872:
      case 2873:
      case 2875:
      case 2876:
      case 2877:
      case 2879:
      case 2880:
      case 2881:
      case 2883:
      case 2888:
      case 2889:
      case 2891:
      case 2908:
      case 2909:
      case 2911:
      case 2912:
      case 2913:
      case 2915:
      case 2920:
      case 2921:
      case 2923:
      case 2924:
      case 2925:
      case 2927:
      case 2928:
      case 2929:
      case 2931:
      case 2936:
      case 2937:
      case 2939:
      case 2940:
      case 2941:
      case 2943:
      case 2944:
      case 2945:
      case 2947:
      case 2952:
      case 2953:
      case 2955:
      case 2972:
      case 2973:
      case 2975:
      case 2976:
      case 2977:
      case 2979:
      case 2984:
      case 2985:
      case 2987:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 8712;
        goto LABEL_4;
      case 2862:
      case 2866:
      case 2874:
      case 2878:
      case 2882:
      case 2890:
      case 2910:
      case 2914:
      case 2922:
      case 2926:
      case 2930:
      case 2938:
      case 2942:
      case 2946:
      case 2954:
      case 2974:
      case 2978:
      case 2986:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 8448;
        goto LABEL_4;
      case 2868:
      case 2869:
      case 2871:
      case 2884:
      case 2885:
      case 2887:
      case 2916:
      case 2917:
      case 2919:
      case 2932:
      case 2933:
      case 2935:
      case 2948:
      case 2949:
      case 2951:
      case 2980:
      case 2981:
      case 2983:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 5280;
        goto LABEL_4;
      case 2870:
      case 2886:
      case 2918:
      case 2934:
      case 2950:
      case 2982:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 5016;
        goto LABEL_4;
      case 2892:
      case 2893:
      case 2895:
      case 2896:
      case 2897:
      case 2899:
      case 2904:
      case 2905:
      case 2907:
      case 2956:
      case 2957:
      case 2959:
      case 2960:
      case 2961:
      case 2963:
      case 2968:
      case 2969:
      case 2971:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 21384;
        goto LABEL_4;
      case 2894:
      case 2898:
      case 2906:
      case 2958:
      case 2962:
      case 2970:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 21120;
        goto LABEL_4;
      case 2900:
      case 2901:
      case 2903:
      case 2964:
      case 2965:
      case 2967:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 14784;
        goto LABEL_4;
      case 2902:
      case 2966:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 14520;
        goto LABEL_4;
      case 3324:
      case 3325:
      case 3327:
      case 3328:
      case 3329:
      case 3331:
      case 3336:
      case 3337:
      case 3339:
      case 3340:
      case 3341:
      case 3343:
      case 3344:
      case 3345:
      case 3347:
      case 3352:
      case 3353:
      case 3355:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 35904;
        goto LABEL_4;
      case 3326:
      case 3330:
      case 3338:
      case 3342:
      case 3346:
      case 3354:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 35640;
        goto LABEL_4;
      case 3332:
      case 3333:
      case 3335:
      case 3348:
      case 3349:
      case 3351:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 37752;
        goto LABEL_4;
      case 3334:
      case 3350:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 37488;
        goto LABEL_4;
      case 3596:
      case 3597:
      case 3599:
      case 3600:
      case 3605:
      case 3606:
      case 3608:
      case 3609:
      case 3623:
      case 3624:
      case 3626:
      case 3627:
      case 3632:
      case 3633:
      case 3635:
      case 3636:
      case 3759:
      case 3767:
      case 3790:
      case 3791:
      case 3793:
      case 3794:
      case 3799:
      case 3800:
      case 3802:
      case 3803:
      case 4451:
      case 4452:
      case 4454:
      case 4455:
      case 4460:
      case 4461:
      case 4463:
      case 4464:
      case 4478:
      case 4479:
      case 4481:
      case 4482:
      case 4487:
      case 4488:
      case 4490:
      case 4491:
      case 5015:
      case 5023:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 28512;
        goto LABEL_4;
      case 3598:
      case 3601:
      case 3607:
      case 3610:
      case 3625:
      case 3628:
      case 3634:
      case 3637:
      case 3760:
      case 3768:
      case 3792:
      case 3795:
      case 3801:
      case 3804:
      case 4450:
      case 4453:
      case 4459:
      case 4462:
      case 4477:
      case 4480:
      case 4486:
      case 4489:
      case 5014:
      case 5022:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 28248;
        goto LABEL_4;
      case 3602:
      case 3603:
      case 3611:
      case 3612:
      case 3629:
      case 3630:
      case 3638:
      case 3639:
      case 3761:
      case 3769:
      case 3796:
      case 3797:
      case 3805:
      case 3806:
      case 4448:
      case 4449:
      case 4457:
      case 4458:
      case 4475:
      case 4476:
      case 4484:
      case 4485:
      case 5013:
      case 5021:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 27984;
        goto LABEL_4;
      case 3604:
      case 3613:
      case 3631:
      case 3640:
      case 3762:
      case 3770:
      case 3798:
      case 3807:
      case 4447:
      case 4456:
      case 4474:
      case 4483:
      case 5012:
      case 5020:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 27720;
        goto LABEL_4;
      case 3614:
      case 3615:
      case 3617:
      case 3618:
      case 3641:
      case 3642:
      case 3644:
      case 3645:
      case 3763:
      case 3771:
      case 3808:
      case 3809:
      case 3811:
      case 3812:
      case 4442:
      case 4443:
      case 4445:
      case 4446:
      case 4469:
      case 4470:
      case 4472:
      case 4473:
      case 5011:
      case 5019:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 27456;
        goto LABEL_4;
      case 3616:
      case 3619:
      case 3643:
      case 3646:
      case 3764:
      case 3772:
      case 3810:
      case 3813:
      case 4441:
      case 4444:
      case 4468:
      case 4471:
      case 5010:
      case 5018:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 27192;
        goto LABEL_4;
      case 3620:
      case 3621:
      case 3647:
      case 3648:
      case 3765:
      case 3773:
      case 3814:
      case 3815:
      case 4439:
      case 4440:
      case 4466:
      case 4467:
      case 5009:
      case 5017:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 26928;
        goto LABEL_4;
      case 3622:
      case 3649:
      case 3766:
      case 3774:
      case 3816:
      case 4438:
      case 4465:
      case 5008:
      case 5016:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 26664;
        goto LABEL_4;
      case 3650:
      case 3651:
      case 3652:
      case 3653:
      case 3654:
      case 3655:
      case 3656:
      case 3657:
      case 3658:
      case 3659:
      case 3660:
      case 3661:
      case 4495:
      case 4496:
      case 4497:
      case 4498:
      case 4499:
      case 4500:
      case 4504:
      case 4505:
      case 4506:
      case 4507:
      case 4508:
      case 4509:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 42240;
        goto LABEL_4;
      case 3662:
      case 3663:
      case 3664:
      case 3665:
      case 3666:
      case 3667:
      case 4492:
      case 4493:
      case 4494:
      case 4501:
      case 4502:
      case 4503:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 41712;
        goto LABEL_4;
      case 3722:
      case 3723:
      case 3724:
      case 3725:
      case 3726:
      case 3727:
      case 3728:
      case 3729:
      case 3734:
      case 3736:
      case 4983:
      case 4984:
      case 4985:
      case 4986:
      case 4987:
      case 4988:
      case 4989:
      case 4990:
      case 4991:
      case 4992:
      case 4993:
      case 4994:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 38544;
        goto LABEL_4;
      case 3730:
      case 3731:
      case 3732:
      case 3733:
      case 3735:
      case 3737:
      case 4995:
      case 4996:
      case 4997:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 39072;
        goto LABEL_4;
      case 3738:
      case 3742:
      case 3746:
      case 6250:
      case 6251:
      case 6252:
      case 6253:
      case 6254:
      case 6255:
      case 9188:
      case 9189:
      case 9190:
      case 9191:
      case 9196:
      case 9197:
      case 9198:
      case 9199:
      case 9200:
      case 9201:
      case 9202:
      case 9203:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 38016;
        goto LABEL_4;
      case 3739:
      case 3740:
      case 3741:
      case 3743:
      case 3744:
      case 3745:
      case 3750:
      case 3751:
      case 3752:
      case 3753:
      case 3754:
      case 3755:
      case 6337:
      case 6338:
      case 6339:
      case 6340:
      case 6341:
      case 6342:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 21648;
        goto LABEL_4;
      case 3747:
      case 3748:
      case 3749:
      case 3756:
      case 3757:
      case 3758:
      case 6343:
      case 6344:
      case 6345:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 15048;
        goto LABEL_4;
      case 3775:
      case 3779:
      case 3817:
      case 3818:
      case 3820:
      case 3821:
      case 3826:
      case 3827:
      case 3829:
      case 3830:
      case 5034:
      case 5038:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 30624;
        goto LABEL_4;
      case 3776:
      case 3780:
      case 3819:
      case 3822:
      case 3828:
      case 3831:
      case 5033:
      case 5037:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 30360;
        goto LABEL_4;
      case 3777:
      case 3781:
      case 3823:
      case 3824:
      case 3832:
      case 3833:
      case 5032:
      case 5036:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 30096;
        goto LABEL_4;
      case 3778:
      case 3782:
      case 3825:
      case 3834:
      case 5031:
      case 5035:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 29832;
        goto LABEL_4;
      case 3783:
      case 3785:
      case 3835:
      case 3836:
      case 3838:
      case 3839:
      case 5028:
      case 5030:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 29568;
        goto LABEL_4;
      case 3784:
      case 3786:
      case 3837:
      case 3840:
      case 5027:
      case 5029:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 29304;
        goto LABEL_4;
      case 3787:
      case 3788:
      case 3841:
      case 3842:
      case 5025:
      case 5026:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 29040;
        goto LABEL_4;
      case 3789:
      case 3843:
      case 5024:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 28776;
        goto LABEL_4;
      case 3844:
      case 3845:
      case 3846:
      case 3850:
      case 3851:
      case 3852:
      case 3862:
      case 3863:
      case 3864:
      case 3868:
      case 3869:
      case 3870:
      case 3898:
      case 3899:
      case 3900:
      case 3904:
      case 3905:
      case 3906:
      case 3916:
      case 3917:
      case 3918:
      case 3922:
      case 3923:
      case 3924:
      case 3952:
      case 3953:
      case 3954:
      case 3963:
      case 3964:
      case 3965:
      case 3966:
      case 3967:
      case 3968:
      case 3977:
      case 3978:
      case 3979:
      case 3994:
      case 3995:
      case 3996:
      case 4005:
      case 4006:
      case 4007:
      case 4008:
      case 4009:
      case 4010:
      case 4019:
      case 4020:
      case 4021:
      case 4078:
      case 4079:
      case 4080:
      case 4089:
      case 4090:
      case 4091:
      case 4092:
      case 4093:
      case 4094:
      case 4103:
      case 4104:
      case 4105:
      case 4120:
      case 4121:
      case 4122:
      case 4131:
      case 4132:
      case 4133:
      case 4134:
      case 4135:
      case 4136:
      case 4145:
      case 4146:
      case 4147:
      case 5063:
      case 5064:
      case 5065:
      case 5069:
      case 5070:
      case 5071:
      case 5081:
      case 5082:
      case 5083:
      case 5087:
      case 5088:
      case 5089:
      case 5117:
      case 5118:
      case 5119:
      case 5123:
      case 5124:
      case 5125:
      case 5135:
      case 5136:
      case 5137:
      case 5141:
      case 5142:
      case 5143:
      case 5203:
      case 5204:
      case 5205:
      case 5214:
      case 5215:
      case 5216:
      case 5217:
      case 5218:
      case 5219:
      case 5228:
      case 5229:
      case 5230:
      case 5245:
      case 5246:
      case 5247:
      case 5256:
      case 5257:
      case 5258:
      case 5259:
      case 5260:
      case 5261:
      case 5270:
      case 5271:
      case 5272:
      case 5329:
      case 5330:
      case 5331:
      case 5340:
      case 5341:
      case 5342:
      case 5343:
      case 5344:
      case 5345:
      case 5354:
      case 5355:
      case 5356:
      case 5371:
      case 5372:
      case 5373:
      case 5382:
      case 5383:
      case 5384:
      case 5385:
      case 5386:
      case 5387:
      case 5396:
      case 5397:
      case 5398:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 19800;
        goto LABEL_4;
      case 3847:
      case 3848:
      case 3849:
      case 3853:
      case 3854:
      case 3855:
      case 3865:
      case 3866:
      case 3867:
      case 3871:
      case 3872:
      case 3873:
      case 3901:
      case 3902:
      case 3903:
      case 3907:
      case 3908:
      case 3909:
      case 3919:
      case 3920:
      case 3921:
      case 3925:
      case 3926:
      case 3927:
      case 3955:
      case 3956:
      case 3957:
      case 3958:
      case 3959:
      case 3960:
      case 3961:
      case 3962:
      case 3969:
      case 3970:
      case 3971:
      case 3972:
      case 3973:
      case 3974:
      case 3975:
      case 3976:
      case 3997:
      case 3998:
      case 3999:
      case 4000:
      case 4001:
      case 4002:
      case 4003:
      case 4004:
      case 4011:
      case 4012:
      case 4013:
      case 4014:
      case 4015:
      case 4016:
      case 4017:
      case 4018:
      case 4081:
      case 4082:
      case 4083:
      case 4084:
      case 4085:
      case 4086:
      case 4087:
      case 4088:
      case 4095:
      case 4096:
      case 4097:
      case 4098:
      case 4099:
      case 4100:
      case 4101:
      case 4102:
      case 4123:
      case 4124:
      case 4125:
      case 4126:
      case 4127:
      case 4128:
      case 4129:
      case 4130:
      case 4137:
      case 4138:
      case 4139:
      case 4140:
      case 4141:
      case 4142:
      case 4143:
      case 4144:
      case 5066:
      case 5067:
      case 5068:
      case 5072:
      case 5073:
      case 5074:
      case 5084:
      case 5085:
      case 5086:
      case 5090:
      case 5091:
      case 5092:
      case 5120:
      case 5121:
      case 5122:
      case 5126:
      case 5127:
      case 5128:
      case 5138:
      case 5139:
      case 5140:
      case 5144:
      case 5145:
      case 5146:
      case 5206:
      case 5207:
      case 5208:
      case 5209:
      case 5210:
      case 5211:
      case 5212:
      case 5213:
      case 5220:
      case 5221:
      case 5222:
      case 5223:
      case 5224:
      case 5225:
      case 5226:
      case 5227:
      case 5248:
      case 5249:
      case 5250:
      case 5251:
      case 5252:
      case 5253:
      case 5254:
      case 5255:
      case 5262:
      case 5263:
      case 5264:
      case 5265:
      case 5266:
      case 5267:
      case 5268:
      case 5269:
      case 5332:
      case 5333:
      case 5334:
      case 5335:
      case 5336:
      case 5337:
      case 5338:
      case 5339:
      case 5346:
      case 5347:
      case 5348:
      case 5349:
      case 5350:
      case 5351:
      case 5352:
      case 5353:
      case 5374:
      case 5375:
      case 5376:
      case 5377:
      case 5378:
      case 5379:
      case 5380:
      case 5381:
      case 5388:
      case 5389:
      case 5390:
      case 5391:
      case 5392:
      case 5393:
      case 5394:
      case 5395:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 20064;
        goto LABEL_4;
      case 3856:
      case 3857:
      case 3858:
      case 3874:
      case 3875:
      case 3876:
      case 3910:
      case 3911:
      case 3912:
      case 3928:
      case 3929:
      case 3930:
      case 3980:
      case 3981:
      case 3982:
      case 3991:
      case 3992:
      case 3993:
      case 4022:
      case 4023:
      case 4024:
      case 4033:
      case 4034:
      case 4035:
      case 4106:
      case 4107:
      case 4108:
      case 4117:
      case 4118:
      case 4119:
      case 4148:
      case 4149:
      case 4150:
      case 4159:
      case 4160:
      case 4161:
      case 5057:
      case 5058:
      case 5059:
      case 5075:
      case 5076:
      case 5077:
      case 5111:
      case 5112:
      case 5113:
      case 5129:
      case 5130:
      case 5131:
      case 5189:
      case 5190:
      case 5191:
      case 5200:
      case 5201:
      case 5202:
      case 5231:
      case 5232:
      case 5233:
      case 5242:
      case 5243:
      case 5244:
      case 5315:
      case 5316:
      case 5317:
      case 5326:
      case 5327:
      case 5328:
      case 5357:
      case 5358:
      case 5359:
      case 5368:
      case 5369:
      case 5370:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 17160;
        goto LABEL_4;
      case 3859:
      case 3860:
      case 3861:
      case 3877:
      case 3878:
      case 3879:
      case 3913:
      case 3914:
      case 3915:
      case 3931:
      case 3932:
      case 3933:
      case 3983:
      case 3984:
      case 3985:
      case 3986:
      case 3987:
      case 3988:
      case 3989:
      case 3990:
      case 4025:
      case 4026:
      case 4027:
      case 4028:
      case 4029:
      case 4030:
      case 4031:
      case 4032:
      case 4109:
      case 4110:
      case 4111:
      case 4112:
      case 4113:
      case 4114:
      case 4115:
      case 4116:
      case 4151:
      case 4152:
      case 4153:
      case 4154:
      case 4155:
      case 4156:
      case 4157:
      case 4158:
      case 5060:
      case 5061:
      case 5062:
      case 5078:
      case 5079:
      case 5080:
      case 5114:
      case 5115:
      case 5116:
      case 5132:
      case 5133:
      case 5134:
      case 5192:
      case 5193:
      case 5194:
      case 5195:
      case 5196:
      case 5197:
      case 5198:
      case 5199:
      case 5234:
      case 5235:
      case 5236:
      case 5237:
      case 5238:
      case 5239:
      case 5240:
      case 5241:
      case 5318:
      case 5319:
      case 5320:
      case 5321:
      case 5322:
      case 5323:
      case 5324:
      case 5325:
      case 5360:
      case 5361:
      case 5362:
      case 5363:
      case 5364:
      case 5365:
      case 5366:
      case 5367:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 17424;
        goto LABEL_4;
      case 3880:
      case 3881:
      case 3882:
      case 3886:
      case 3887:
      case 3888:
      case 3934:
      case 3935:
      case 3936:
      case 3940:
      case 3941:
      case 3942:
      case 4036:
      case 4037:
      case 4038:
      case 4047:
      case 4048:
      case 4049:
      case 4050:
      case 4051:
      case 4052:
      case 4061:
      case 4062:
      case 4063:
      case 4162:
      case 4163:
      case 4164:
      case 4173:
      case 4174:
      case 4175:
      case 4176:
      case 4177:
      case 4178:
      case 4187:
      case 4188:
      case 4189:
      case 5045:
      case 5046:
      case 5047:
      case 5051:
      case 5052:
      case 5053:
      case 5099:
      case 5100:
      case 5101:
      case 5105:
      case 5106:
      case 5107:
      case 5161:
      case 5162:
      case 5163:
      case 5172:
      case 5173:
      case 5174:
      case 5175:
      case 5176:
      case 5177:
      case 5186:
      case 5187:
      case 5188:
      case 5287:
      case 5288:
      case 5289:
      case 5298:
      case 5299:
      case 5300:
      case 5301:
      case 5302:
      case 5303:
      case 5312:
      case 5313:
      case 5314:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 13200;
        goto LABEL_4;
      case 3883:
      case 3884:
      case 3885:
      case 3889:
      case 3890:
      case 3891:
      case 3937:
      case 3938:
      case 3939:
      case 3943:
      case 3944:
      case 3945:
      case 4039:
      case 4040:
      case 4041:
      case 4042:
      case 4043:
      case 4044:
      case 4045:
      case 4046:
      case 4053:
      case 4054:
      case 4055:
      case 4056:
      case 4057:
      case 4058:
      case 4059:
      case 4060:
      case 4165:
      case 4166:
      case 4167:
      case 4168:
      case 4169:
      case 4170:
      case 4171:
      case 4172:
      case 4179:
      case 4180:
      case 4181:
      case 4182:
      case 4183:
      case 4184:
      case 4185:
      case 4186:
      case 5048:
      case 5049:
      case 5050:
      case 5054:
      case 5055:
      case 5056:
      case 5102:
      case 5103:
      case 5104:
      case 5108:
      case 5109:
      case 5110:
      case 5164:
      case 5165:
      case 5166:
      case 5167:
      case 5168:
      case 5169:
      case 5170:
      case 5171:
      case 5178:
      case 5179:
      case 5180:
      case 5181:
      case 5182:
      case 5183:
      case 5184:
      case 5185:
      case 5290:
      case 5291:
      case 5292:
      case 5293:
      case 5294:
      case 5295:
      case 5296:
      case 5297:
      case 5304:
      case 5305:
      case 5306:
      case 5307:
      case 5308:
      case 5309:
      case 5310:
      case 5311:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 13464;
        goto LABEL_4;
      case 3892:
      case 3893:
      case 3894:
      case 3946:
      case 3947:
      case 3948:
      case 4064:
      case 4065:
      case 4066:
      case 4075:
      case 4076:
      case 4077:
      case 4190:
      case 4191:
      case 4192:
      case 4201:
      case 4202:
      case 4203:
      case 5039:
      case 5040:
      case 5041:
      case 5093:
      case 5094:
      case 5095:
      case 5147:
      case 5148:
      case 5149:
      case 5158:
      case 5159:
      case 5160:
      case 5273:
      case 5274:
      case 5275:
      case 5284:
      case 5285:
      case 5286:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 10560;
        goto LABEL_4;
      case 3895:
      case 3896:
      case 3897:
      case 3949:
      case 3950:
      case 3951:
      case 4067:
      case 4068:
      case 4069:
      case 4070:
      case 4071:
      case 4072:
      case 4073:
      case 4074:
      case 4193:
      case 4194:
      case 4195:
      case 4196:
      case 4197:
      case 4198:
      case 4199:
      case 4200:
      case 5042:
      case 5043:
      case 5044:
      case 5096:
      case 5097:
      case 5098:
      case 5150:
      case 5151:
      case 5152:
      case 5153:
      case 5154:
      case 5155:
      case 5156:
      case 5157:
      case 5276:
      case 5277:
      case 5278:
      case 5279:
      case 5280:
      case 5281:
      case 5282:
      case 5283:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 10824;
        goto LABEL_4;
      case 4204:
      case 4205:
      case 4206:
      case 4215:
      case 4216:
      case 4217:
      case 4218:
      case 4219:
      case 4220:
      case 4229:
      case 4230:
      case 4231:
      case 4246:
      case 4247:
      case 4248:
      case 4257:
      case 4258:
      case 4259:
      case 4260:
      case 4261:
      case 4262:
      case 4271:
      case 4272:
      case 4273:
      case 5455:
      case 5456:
      case 5457:
      case 5466:
      case 5467:
      case 5468:
      case 5469:
      case 5470:
      case 5471:
      case 5480:
      case 5481:
      case 5482:
      case 5497:
      case 5498:
      case 5499:
      case 5508:
      case 5509:
      case 5510:
      case 5511:
      case 5512:
      case 5513:
      case 5522:
      case 5523:
      case 5524:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 25608;
        goto LABEL_4;
      case 4207:
      case 4208:
      case 4209:
      case 4210:
      case 4211:
      case 4212:
      case 4213:
      case 4214:
      case 4221:
      case 4222:
      case 4223:
      case 4224:
      case 4225:
      case 4226:
      case 4227:
      case 4228:
      case 4249:
      case 4250:
      case 4251:
      case 4252:
      case 4253:
      case 4254:
      case 4255:
      case 4256:
      case 4263:
      case 4264:
      case 4265:
      case 4266:
      case 4267:
      case 4268:
      case 4269:
      case 4270:
      case 5458:
      case 5459:
      case 5460:
      case 5461:
      case 5462:
      case 5463:
      case 5464:
      case 5465:
      case 5472:
      case 5473:
      case 5474:
      case 5475:
      case 5476:
      case 5477:
      case 5478:
      case 5479:
      case 5500:
      case 5501:
      case 5502:
      case 5503:
      case 5504:
      case 5505:
      case 5506:
      case 5507:
      case 5514:
      case 5515:
      case 5516:
      case 5517:
      case 5518:
      case 5519:
      case 5520:
      case 5521:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 25872;
        goto LABEL_4;
      case 4232:
      case 4233:
      case 4234:
      case 4243:
      case 4244:
      case 4245:
      case 4274:
      case 4275:
      case 4276:
      case 4285:
      case 4286:
      case 4287:
      case 5441:
      case 5442:
      case 5443:
      case 5452:
      case 5453:
      case 5454:
      case 5483:
      case 5484:
      case 5485:
      case 5494:
      case 5495:
      case 5496:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 24816;
        goto LABEL_4;
      case 4235:
      case 4236:
      case 4237:
      case 4238:
      case 4239:
      case 4240:
      case 4241:
      case 4242:
      case 4277:
      case 4278:
      case 4279:
      case 4280:
      case 4281:
      case 4282:
      case 4283:
      case 4284:
      case 5444:
      case 5445:
      case 5446:
      case 5447:
      case 5448:
      case 5449:
      case 5450:
      case 5451:
      case 5486:
      case 5487:
      case 5488:
      case 5489:
      case 5490:
      case 5491:
      case 5492:
      case 5493:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 25080;
        goto LABEL_4;
      case 4288:
      case 4289:
      case 4290:
      case 4299:
      case 4300:
      case 4301:
      case 4302:
      case 4303:
      case 4304:
      case 4313:
      case 4314:
      case 4315:
      case 5413:
      case 5414:
      case 5415:
      case 5424:
      case 5425:
      case 5426:
      case 5427:
      case 5428:
      case 5429:
      case 5438:
      case 5439:
      case 5440:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 23496;
        goto LABEL_4;
      case 4291:
      case 4292:
      case 4293:
      case 4294:
      case 4295:
      case 4296:
      case 4297:
      case 4298:
      case 4305:
      case 4306:
      case 4307:
      case 4308:
      case 4309:
      case 4310:
      case 4311:
      case 4312:
      case 5416:
      case 5417:
      case 5418:
      case 5419:
      case 5420:
      case 5421:
      case 5422:
      case 5423:
      case 5430:
      case 5431:
      case 5432:
      case 5433:
      case 5434:
      case 5435:
      case 5436:
      case 5437:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 23760;
        goto LABEL_4;
      case 4316:
      case 4317:
      case 4318:
      case 4327:
      case 4328:
      case 4329:
      case 5399:
      case 5400:
      case 5401:
      case 5410:
      case 5411:
      case 5412:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 22704;
        goto LABEL_4;
      case 4319:
      case 4320:
      case 4321:
      case 4322:
      case 4323:
      case 4324:
      case 4325:
      case 4326:
      case 5402:
      case 5403:
      case 5404:
      case 5405:
      case 5406:
      case 5407:
      case 5408:
      case 5409:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 22968;
        goto LABEL_4;
      case 4339:
      case 4340:
      case 4342:
      case 4343:
      case 4344:
      case 4345:
      case 5608:
      case 5609:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 57024;
        goto LABEL_4;
      case 4341:
      case 4346:
      case 4347:
      case 5610:
      case 5611:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 56496;
        goto LABEL_4;
      case 4348:
      case 4349:
      case 4350:
      case 4351:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 58344;
        goto LABEL_4;
      case 4352:
      case 4353:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 58080;
        goto LABEL_4;
      case 4354:
      case 4355:
      case 4356:
      case 4357:
      case 5616:
      case 5617:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 57816;
        goto LABEL_4;
      case 4358:
      case 4359:
      case 5618:
      case 5619:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 57552;
        goto LABEL_4;
      case 4360:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 51216;
        goto LABEL_4;
      case 4741:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 73920);
        break;
      case 4742:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 77352);
        break;
      case 4743:
      case 4744:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 74184);
        break;
      case 4745:
      case 4746:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 74976);
        break;
      case 4747:
      case 4748:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 75768);
        break;
      case 4749:
      case 4750:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 76560);
        break;
      case 4751:
      case 4752:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 77616);
        break;
      case 4753:
      case 4754:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 78408);
        break;
      case 4755:
      case 4756:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 79200);
        break;
      case 4757:
      case 4758:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 79992);
        break;
      case 4759:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 74448);
        break;
      case 4760:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 74712);
        break;
      case 4761:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 75240);
        break;
      case 4762:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 75504);
        break;
      case 4763:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 76032);
        break;
      case 4764:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 76296);
        break;
      case 4765:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 76824);
        break;
      case 4766:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 77088);
        break;
      case 4767:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 77880);
        break;
      case 4768:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 78144);
        break;
      case 4769:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 78672);
        break;
      case 4770:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 78936);
        break;
      case 4771:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 79464);
        break;
      case 4772:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 79728);
        break;
      case 4773:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 80256);
        break;
      case 4774:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 80520);
        break;
      case 4982:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 83160);
        break;
      case 4998:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 82632);
        break;
      case 5602:
      case 5603:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 32208;
        goto LABEL_4;
      case 5604:
      case 5605:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 56232;
        goto LABEL_4;
      case 5606:
      case 5607:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 55968;
        goto LABEL_4;
      case 5612:
      case 5613:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 57288;
        goto LABEL_4;
      case 5614:
      case 5615:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 56760;
        goto LABEL_4;
      case 5620:
      case 5621:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 67848);
        break;
      case 5622:
      case 5623:
      case 5625:
      case 5626:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 48576;
        goto LABEL_4;
      case 5624:
      case 5627:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 48840;
        goto LABEL_4;
      case 5628:
      case 5629:
      case 5634:
      case 5635:
      case 5640:
      case 5641:
      case 5646:
      case 5647:
      case 5652:
      case 5653:
      case 5658:
      case 5659:
      case 5664:
      case 5665:
      case 5670:
      case 5671:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 70488);
        break;
      case 5630:
      case 5636:
      case 5642:
      case 5648:
      case 5654:
      case 5660:
      case 5666:
      case 5672:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 70224);
        break;
      case 5631:
      case 5632:
      case 5637:
      case 5638:
      case 5643:
      case 5644:
      case 5649:
      case 5650:
      case 5655:
      case 5656:
      case 5661:
      case 5662:
      case 5667:
      case 5668:
      case 5673:
      case 5674:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 71016);
        break;
      case 5633:
      case 5639:
      case 5645:
      case 5651:
      case 5657:
      case 5663:
      case 5669:
      case 5675:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 70752);
        break;
      case 5676:
      case 5677:
      case 5682:
      case 5683:
      case 5688:
      case 5689:
      case 5694:
      case 5695:
      case 5700:
      case 5701:
      case 5706:
      case 5707:
      case 5712:
      case 5713:
      case 5718:
      case 5719:
      case 5725:
      case 5726:
      case 5728:
      case 5729:
      case 5731:
      case 5732:
      case 5734:
      case 5735:
      case 5737:
      case 5738:
      case 5740:
      case 5741:
      case 5743:
      case 5744:
      case 5746:
      case 5747:
      case 5813:
      case 5825:
      case 5837:
      case 5849:
      case 5861:
      case 5873:
      case 5885:
      case 5897:
      case 6069:
      case 6081:
      case 6093:
      case 6105:
      case 6117:
      case 6129:
      case 6141:
      case 6153:
      case 9115:
      case 9116:
      case 9121:
      case 9122:
      case 9127:
      case 9128:
      case 9133:
      case 9134:
      case 9139:
      case 9140:
      case 9145:
      case 9146:
      case 9151:
      case 9152:
      case 9157:
      case 9158:
      case 9163:
      case 9164:
      case 9166:
      case 9167:
      case 9169:
      case 9170:
      case 9172:
      case 9173:
      case 9175:
      case 9176:
      case 9178:
      case 9179:
      case 9181:
      case 9182:
      case 9184:
      case 9185:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 71808);
        break;
      case 5678:
      case 5684:
      case 5690:
      case 5696:
      case 5702:
      case 5708:
      case 5714:
      case 5720:
      case 5727:
      case 5730:
      case 5733:
      case 5736:
      case 5739:
      case 5742:
      case 5745:
      case 5748:
      case 5816:
      case 5828:
      case 5840:
      case 5852:
      case 5864:
      case 5876:
      case 5888:
      case 5900:
      case 6072:
      case 6084:
      case 6096:
      case 6108:
      case 6120:
      case 6132:
      case 6144:
      case 6156:
      case 9117:
      case 9123:
      case 9129:
      case 9135:
      case 9141:
      case 9147:
      case 9153:
      case 9159:
      case 9165:
      case 9168:
      case 9171:
      case 9174:
      case 9177:
      case 9180:
      case 9183:
      case 9186:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 71280);
        break;
      case 5679:
      case 5680:
      case 5685:
      case 5686:
      case 5691:
      case 5692:
      case 5697:
      case 5698:
      case 5703:
      case 5704:
      case 5709:
      case 5710:
      case 5715:
      case 5716:
      case 5721:
      case 5722:
      case 5819:
      case 5831:
      case 5843:
      case 5855:
      case 5867:
      case 5879:
      case 5891:
      case 5903:
      case 5909:
      case 5912:
      case 5918:
      case 5921:
      case 5927:
      case 5930:
      case 5936:
      case 5939:
      case 5945:
      case 5948:
      case 5954:
      case 5957:
      case 5963:
      case 5966:
      case 5972:
      case 5975:
      case 5981:
      case 5982:
      case 5984:
      case 5985:
      case 5987:
      case 5988:
      case 5990:
      case 5991:
      case 5993:
      case 5994:
      case 5996:
      case 5997:
      case 5999:
      case 6000:
      case 6002:
      case 6003:
      case 6075:
      case 6087:
      case 6099:
      case 6111:
      case 6123:
      case 6135:
      case 6147:
      case 6159:
      case 9019:
      case 9022:
      case 9028:
      case 9031:
      case 9037:
      case 9040:
      case 9046:
      case 9049:
      case 9055:
      case 9058:
      case 9064:
      case 9067:
      case 9073:
      case 9076:
      case 9082:
      case 9085:
      case 9091:
      case 9092:
      case 9094:
      case 9095:
      case 9097:
      case 9098:
      case 9100:
      case 9101:
      case 9103:
      case 9104:
      case 9106:
      case 9107:
      case 9109:
      case 9110:
      case 9112:
      case 9113:
      case 9118:
      case 9119:
      case 9124:
      case 9125:
      case 9130:
      case 9131:
      case 9136:
      case 9137:
      case 9142:
      case 9143:
      case 9148:
      case 9149:
      case 9154:
      case 9155:
      case 9160:
      case 9161:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 72864);
        break;
      case 5681:
      case 5687:
      case 5693:
      case 5699:
      case 5705:
      case 5711:
      case 5717:
      case 5723:
      case 5822:
      case 5834:
      case 5846:
      case 5858:
      case 5870:
      case 5882:
      case 5894:
      case 5906:
      case 5915:
      case 5924:
      case 5933:
      case 5942:
      case 5951:
      case 5960:
      case 5969:
      case 5978:
      case 5983:
      case 5986:
      case 5989:
      case 5992:
      case 5995:
      case 5998:
      case 6001:
      case 6004:
      case 6078:
      case 6090:
      case 6102:
      case 6114:
      case 6126:
      case 6138:
      case 6150:
      case 6162:
      case 9025:
      case 9034:
      case 9043:
      case 9052:
      case 9061:
      case 9070:
      case 9079:
      case 9088:
      case 9093:
      case 9096:
      case 9099:
      case 9102:
      case 9105:
      case 9108:
      case 9111:
      case 9114:
      case 9120:
      case 9126:
      case 9132:
      case 9138:
      case 9144:
      case 9150:
      case 9156:
      case 9162:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 72336);
        break;
      case 5724:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 83688);
        break;
      case 5749:
      case 5757:
      case 5765:
      case 5773:
      case 5781:
      case 5789:
      case 5797:
      case 5805:
      case 6005:
      case 6013:
      case 6021:
      case 6029:
      case 6037:
      case 6045:
      case 6053:
      case 6061:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 85272);
        break;
      case 5750:
      case 5758:
      case 5766:
      case 5774:
      case 5782:
      case 5790:
      case 5798:
      case 5806:
      case 6006:
      case 6014:
      case 6022:
      case 6030:
      case 6038:
      case 6046:
      case 6054:
      case 6062:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 85536);
        break;
      case 5751:
      case 5759:
      case 5767:
      case 5775:
      case 5783:
      case 5791:
      case 5799:
      case 5807:
      case 6007:
      case 6015:
      case 6023:
      case 6031:
      case 6039:
      case 6047:
      case 6055:
      case 6063:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 85800);
        break;
      case 5752:
      case 5760:
      case 5768:
      case 5776:
      case 5784:
      case 5792:
      case 5800:
      case 5808:
      case 6008:
      case 6016:
      case 6024:
      case 6032:
      case 6040:
      case 6048:
      case 6056:
      case 6064:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 86064);
        break;
      case 5753:
      case 5761:
      case 5769:
      case 5777:
      case 5785:
      case 5793:
      case 5801:
      case 5809:
      case 6009:
      case 6017:
      case 6025:
      case 6033:
      case 6041:
      case 6049:
      case 6057:
      case 6065:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 86328);
        break;
      case 5754:
      case 5762:
      case 5770:
      case 5778:
      case 5786:
      case 5794:
      case 5802:
      case 5810:
      case 6010:
      case 6018:
      case 6026:
      case 6034:
      case 6042:
      case 6050:
      case 6058:
      case 6066:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 86592);
        break;
      case 5755:
      case 5763:
      case 5771:
      case 5779:
      case 5787:
      case 5795:
      case 5803:
      case 5811:
      case 6011:
      case 6019:
      case 6027:
      case 6035:
      case 6043:
      case 6051:
      case 6059:
      case 6067:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 86856);
        break;
      case 5756:
      case 5764:
      case 5772:
      case 5780:
      case 5788:
      case 5796:
      case 5804:
      case 5812:
      case 6012:
      case 6020:
      case 6028:
      case 6036:
      case 6044:
      case 6052:
      case 6060:
      case 6068:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 87120);
        break;
      case 5814:
      case 5815:
      case 5826:
      case 5827:
      case 5838:
      case 5839:
      case 5850:
      case 5851:
      case 5862:
      case 5863:
      case 5874:
      case 5875:
      case 5886:
      case 5887:
      case 5898:
      case 5899:
      case 6070:
      case 6071:
      case 6082:
      case 6083:
      case 6094:
      case 6095:
      case 6106:
      case 6107:
      case 6118:
      case 6119:
      case 6130:
      case 6131:
      case 6142:
      case 6143:
      case 6154:
      case 6155:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 72072);
        break;
      case 5817:
      case 5818:
      case 5829:
      case 5830:
      case 5841:
      case 5842:
      case 5853:
      case 5854:
      case 5865:
      case 5866:
      case 5877:
      case 5878:
      case 5889:
      case 5890:
      case 5901:
      case 5902:
      case 6073:
      case 6074:
      case 6085:
      case 6086:
      case 6097:
      case 6098:
      case 6109:
      case 6110:
      case 6121:
      case 6122:
      case 6133:
      case 6134:
      case 6145:
      case 6146:
      case 6157:
      case 6158:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 71544);
        break;
      case 5820:
      case 5821:
      case 5832:
      case 5833:
      case 5844:
      case 5845:
      case 5856:
      case 5857:
      case 5868:
      case 5869:
      case 5880:
      case 5881:
      case 5892:
      case 5893:
      case 5904:
      case 5905:
      case 5910:
      case 5911:
      case 5913:
      case 5914:
      case 5919:
      case 5920:
      case 5922:
      case 5923:
      case 5928:
      case 5929:
      case 5931:
      case 5932:
      case 5937:
      case 5938:
      case 5940:
      case 5941:
      case 5946:
      case 5947:
      case 5949:
      case 5950:
      case 5955:
      case 5956:
      case 5958:
      case 5959:
      case 5964:
      case 5965:
      case 5967:
      case 5968:
      case 5973:
      case 5974:
      case 5976:
      case 5977:
      case 6076:
      case 6077:
      case 6088:
      case 6089:
      case 6100:
      case 6101:
      case 6112:
      case 6113:
      case 6124:
      case 6125:
      case 6136:
      case 6137:
      case 6148:
      case 6149:
      case 6160:
      case 6161:
      case 9020:
      case 9021:
      case 9023:
      case 9024:
      case 9029:
      case 9030:
      case 9032:
      case 9033:
      case 9038:
      case 9039:
      case 9041:
      case 9042:
      case 9047:
      case 9048:
      case 9050:
      case 9051:
      case 9056:
      case 9057:
      case 9059:
      case 9060:
      case 9065:
      case 9066:
      case 9068:
      case 9069:
      case 9074:
      case 9075:
      case 9077:
      case 9078:
      case 9083:
      case 9084:
      case 9086:
      case 9087:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 73128);
        break;
      case 5823:
      case 5824:
      case 5835:
      case 5836:
      case 5847:
      case 5848:
      case 5859:
      case 5860:
      case 5871:
      case 5872:
      case 5883:
      case 5884:
      case 5895:
      case 5896:
      case 5907:
      case 5908:
      case 5916:
      case 5917:
      case 5925:
      case 5926:
      case 5934:
      case 5935:
      case 5943:
      case 5944:
      case 5952:
      case 5953:
      case 5961:
      case 5962:
      case 5970:
      case 5971:
      case 5979:
      case 5980:
      case 6079:
      case 6080:
      case 6091:
      case 6092:
      case 6103:
      case 6104:
      case 6115:
      case 6116:
      case 6127:
      case 6128:
      case 6139:
      case 6140:
      case 6151:
      case 6152:
      case 6163:
      case 6164:
      case 9026:
      case 9027:
      case 9035:
      case 9036:
      case 9044:
      case 9045:
      case 9053:
      case 9054:
      case 9062:
      case 9063:
      case 9071:
      case 9072:
      case 9080:
      case 9081:
      case 9089:
      case 9090:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 72600);
        break;
      case 6167:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 82896);
        break;
      case 6346:
      case 6347:
      case 6348:
      case 6349:
      case 6350:
      case 6351:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 26136;
        goto LABEL_4;
      case 6352:
      case 6353:
      case 6354:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 24024;
        goto LABEL_4;
      case 6355:
      case 6359:
      case 6363:
      case 6367:
      case 6371:
      case 6375:
      case 6391:
      case 6395:
      case 6399:
      case 6403:
      case 6407:
      case 6411:
      case 6469:
      case 6470:
      case 6485:
      case 6486:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 19008;
        goto LABEL_4;
      case 6356:
      case 6357:
      case 6358:
      case 6360:
      case 6361:
      case 6362:
      case 6368:
      case 6369:
      case 6370:
      case 6372:
      case 6373:
      case 6374:
      case 6392:
      case 6393:
      case 6394:
      case 6396:
      case 6397:
      case 6398:
      case 6404:
      case 6405:
      case 6406:
      case 6408:
      case 6409:
      case 6410:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 19536;
        goto LABEL_4;
      case 6364:
      case 6365:
      case 6366:
      case 6376:
      case 6377:
      case 6378:
      case 6400:
      case 6401:
      case 6402:
      case 6412:
      case 6413:
      case 6414:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 19272;
        goto LABEL_4;
      case 6379:
      case 6383:
      case 6387:
      case 6415:
      case 6419:
      case 6423:
      case 6467:
      case 6468:
      case 6483:
      case 6484:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 16368;
        goto LABEL_4;
      case 6380:
      case 6381:
      case 6382:
      case 6384:
      case 6385:
      case 6386:
      case 6416:
      case 6417:
      case 6418:
      case 6420:
      case 6421:
      case 6422:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 16896;
        goto LABEL_4;
      case 6388:
      case 6389:
      case 6390:
      case 6424:
      case 6425:
      case 6426:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 16632;
        goto LABEL_4;
      case 6427:
      case 6431:
      case 6435:
      case 6439:
      case 6443:
      case 6447:
      case 6465:
      case 6466:
      case 6481:
      case 6482:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 12408;
        goto LABEL_4;
      case 6428:
      case 6429:
      case 6430:
      case 6432:
      case 6433:
      case 6434:
      case 6440:
      case 6441:
      case 6442:
      case 6444:
      case 6445:
      case 6446:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 12936;
        goto LABEL_4;
      case 6436:
      case 6437:
      case 6438:
      case 6448:
      case 6449:
      case 6450:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 12672;
        goto LABEL_4;
      case 6451:
      case 6455:
      case 6459:
      case 6463:
      case 6464:
      case 6479:
      case 6480:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 9768;
        goto LABEL_4;
      case 6452:
      case 6453:
      case 6454:
      case 6456:
      case 6457:
      case 6458:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 10296;
        goto LABEL_4;
      case 6460:
      case 6461:
      case 6462:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 10032;
        goto LABEL_4;
      case 6471:
      case 6472:
      case 6487:
      case 6488:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 22440;
        goto LABEL_4;
      case 6473:
      case 6474:
      case 6489:
      case 6490:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 23232;
        goto LABEL_4;
      case 6475:
      case 6476:
      case 6491:
      case 6492:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 24552;
        goto LABEL_4;
      case 6477:
      case 6478:
      case 6493:
      case 6494:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 25344;
        goto LABEL_4;
      case 6495:
      case 6499:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 51480;
        goto LABEL_4;
      case 6496:
      case 6500:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 51744;
        goto LABEL_4;
      case 6497:
      case 6501:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 52008;
        goto LABEL_4;
      case 6498:
      case 6502:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 52272;
        goto LABEL_4;
      case 6503:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 83952);
        break;
      case 6504:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 80784);
        break;
      case 6605:
      case 6606:
      case 6607:
      case 6608:
      case 6609:
      case 6610:
      case 6611:
      case 6612:
      case 6671:
      case 6672:
      case 6673:
      case 6674:
      case 6675:
      case 6676:
      case 6677:
      case 6678:
      case 6683:
      case 6684:
      case 6685:
      case 6686:
      case 6687:
      case 6688:
      case 6689:
      case 6690:
      case 6695:
      case 6696:
      case 6697:
      case 6698:
      case 6699:
      case 6700:
      case 6701:
      case 6702:
      case 6847:
      case 6848:
      case 6849:
      case 6850:
      case 6851:
      case 6852:
      case 6853:
      case 6854:
      case 6859:
      case 6860:
      case 6861:
      case 6862:
      case 6863:
      case 6864:
      case 6865:
      case 6866:
      case 6973:
      case 6974:
      case 6975:
      case 6976:
      case 6977:
      case 6978:
      case 6979:
      case 6980:
      case 6985:
      case 6986:
      case 6987:
      case 6988:
      case 6989:
      case 6990:
      case 6991:
      case 6992:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 50952;
        goto LABEL_4;
      case 6613:
      case 6614:
      case 6615:
      case 6616:
      case 6679:
      case 6680:
      case 6681:
      case 6682:
      case 6691:
      case 6692:
      case 6693:
      case 6694:
      case 6703:
      case 6704:
      case 6705:
      case 6706:
      case 6855:
      case 6856:
      case 6857:
      case 6858:
      case 6867:
      case 6868:
      case 6869:
      case 6870:
      case 6981:
      case 6982:
      case 6983:
      case 6984:
      case 6993:
      case 6994:
      case 6995:
      case 6996:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 54384;
        goto LABEL_4;
      case 6617:
      case 6618:
      case 6619:
      case 6620:
      case 6621:
      case 6622:
      case 6626:
      case 6627:
      case 6628:
      case 6629:
      case 6630:
      case 6631:
      case 6647:
      case 6648:
      case 6649:
      case 6650:
      case 6651:
      case 6652:
      case 6656:
      case 6657:
      case 6658:
      case 6659:
      case 6660:
      case 6661:
      case 6871:
      case 6872:
      case 6873:
      case 6874:
      case 6875:
      case 6876:
      case 6880:
      case 6881:
      case 6882:
      case 6883:
      case 6884:
      case 6885:
      case 6901:
      case 6902:
      case 6903:
      case 6904:
      case 6905:
      case 6906:
      case 6910:
      case 6911:
      case 6912:
      case 6913:
      case 6914:
      case 6915:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 21912;
        goto LABEL_4;
      case 6623:
      case 6624:
      case 6625:
      case 6632:
      case 6633:
      case 6634:
      case 6644:
      case 6645:
      case 6646:
      case 6653:
      case 6654:
      case 6655:
      case 6877:
      case 6878:
      case 6879:
      case 6886:
      case 6887:
      case 6888:
      case 6898:
      case 6899:
      case 6900:
      case 6907:
      case 6908:
      case 6909:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 15312;
        goto LABEL_4;
      case 6635:
      case 6636:
      case 6637:
      case 6638:
      case 6639:
      case 6640:
      case 6665:
      case 6666:
      case 6667:
      case 6668:
      case 6669:
      case 6670:
      case 6889:
      case 6890:
      case 6891:
      case 6892:
      case 6893:
      case 6894:
      case 6919:
      case 6920:
      case 6921:
      case 6922:
      case 6923:
      case 6924:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 26400;
        goto LABEL_4;
      case 6641:
      case 6642:
      case 6643:
      case 6662:
      case 6663:
      case 6664:
      case 6895:
      case 6896:
      case 6897:
      case 6916:
      case 6917:
      case 6918:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 24288;
        goto LABEL_4;
      case 6725:
      case 6726:
      case 6727:
      case 6731:
      case 6732:
      case 6733:
      case 6737:
      case 6738:
      case 6739:
      case 6743:
      case 6744:
      case 6745:
      case 6749:
      case 6750:
      case 6751:
      case 6760:
      case 6761:
      case 6762:
      case 6771:
      case 6772:
      case 6773:
      case 6774:
      case 6775:
      case 6776:
      case 6777:
      case 6778:
      case 6779:
      case 6788:
      case 6789:
      case 6790:
      case 6799:
      case 6800:
      case 6801:
      case 6802:
      case 6803:
      case 6804:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 31680;
        goto LABEL_4;
      case 6728:
      case 6729:
      case 6730:
      case 6734:
      case 6735:
      case 6736:
      case 6740:
      case 6741:
      case 6742:
      case 6746:
      case 6747:
      case 6748:
      case 6752:
      case 6753:
      case 6754:
      case 6755:
      case 6756:
      case 6757:
      case 6758:
      case 6759:
      case 6763:
      case 6764:
      case 6765:
      case 6766:
      case 6767:
      case 6768:
      case 6769:
      case 6770:
      case 6780:
      case 6781:
      case 6782:
      case 6783:
      case 6784:
      case 6785:
      case 6786:
      case 6787:
      case 6791:
      case 6792:
      case 6793:
      case 6794:
      case 6795:
      case 6796:
      case 6797:
      case 6798:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 31944;
        goto LABEL_4;
      case 6805:
      case 6806:
      case 6807:
      case 6816:
      case 6817:
      case 6818:
      case 6827:
      case 6828:
      case 6829:
      case 6830:
      case 6831:
      case 6832:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 32472;
        goto LABEL_4;
      case 6808:
      case 6809:
      case 6810:
      case 6811:
      case 6812:
      case 6813:
      case 6814:
      case 6815:
      case 6819:
      case 6820:
      case 6821:
      case 6822:
      case 6823:
      case 6824:
      case 6825:
      case 6826:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 32736;
        goto LABEL_4;
      case 6833:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 84216);
        break;
      case 6842:
      case 6843:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 41976;
        goto LABEL_4;
      case 6844:
      case 6845:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 42504;
        goto LABEL_4;
      case 6925:
      case 6927:
      case 6929:
      case 6931:
      case 6937:
      case 6939:
      case 6941:
      case 6943:
      case 6949:
      case 6951:
      case 6953:
      case 6955:
      case 6961:
      case 6963:
      case 6965:
      case 6967:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 50424;
        goto LABEL_4;
      case 6926:
      case 6928:
      case 6930:
      case 6932:
      case 6938:
      case 6940:
      case 6942:
      case 6944:
      case 6950:
      case 6952:
      case 6954:
      case 6956:
      case 6962:
      case 6964:
      case 6966:
      case 6968:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 50688;
        goto LABEL_4;
      case 6933:
      case 6935:
      case 6945:
      case 6947:
      case 6957:
      case 6959:
      case 6969:
      case 6971:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 53856;
        goto LABEL_4;
      case 6934:
      case 6936:
      case 6946:
      case 6948:
      case 6958:
      case 6960:
      case 6970:
      case 6972:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 54120;
        goto LABEL_4;
      case 7159:
      case 7160:
      case 7191:
      case 7192:
      case 7223:
      case 7224:
      case 7255:
      case 7256:
      case 7287:
      case 7288:
      case 7319:
      case 7320:
      case 7351:
      case 7352:
      case 7383:
      case 7384:
      case 7415:
      case 7416:
      case 7447:
      case 7448:
      case 7479:
      case 7480:
      case 7511:
      case 7512:
      case 7927:
      case 7928:
      case 7959:
      case 7960:
      case 7991:
      case 7992:
      case 8023:
      case 8024:
      case 8055:
      case 8056:
      case 8087:
      case 8088:
      case 8119:
      case 8120:
      case 8151:
      case 8152:
      case 8183:
      case 8184:
      case 8215:
      case 8216:
      case 8247:
      case 8248:
      case 8279:
      case 8280:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 59664;
        goto LABEL_4;
      case 7161:
      case 7162:
      case 7193:
      case 7194:
      case 7225:
      case 7226:
      case 7257:
      case 7258:
      case 7289:
      case 7290:
      case 7321:
      case 7322:
      case 7353:
      case 7354:
      case 7385:
      case 7386:
      case 7417:
      case 7418:
      case 7449:
      case 7450:
      case 7481:
      case 7482:
      case 7513:
      case 7514:
      case 7929:
      case 7930:
      case 7961:
      case 7962:
      case 7993:
      case 7994:
      case 8025:
      case 8026:
      case 8057:
      case 8058:
      case 8089:
      case 8090:
      case 8121:
      case 8122:
      case 8153:
      case 8154:
      case 8185:
      case 8186:
      case 8217:
      case 8218:
      case 8249:
      case 8250:
      case 8281:
      case 8282:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 60456;
        goto LABEL_4;
      case 7163:
      case 7164:
      case 7195:
      case 7196:
      case 7227:
      case 7228:
      case 7259:
      case 7260:
      case 7291:
      case 7292:
      case 7323:
      case 7324:
      case 7355:
      case 7356:
      case 7387:
      case 7388:
      case 7419:
      case 7420:
      case 7451:
      case 7452:
      case 7483:
      case 7484:
      case 7515:
      case 7516:
      case 7931:
      case 7932:
      case 7963:
      case 7964:
      case 7995:
      case 7996:
      case 8027:
      case 8028:
      case 8059:
      case 8060:
      case 8091:
      case 8092:
      case 8123:
      case 8124:
      case 8155:
      case 8156:
      case 8187:
      case 8188:
      case 8219:
      case 8220:
      case 8251:
      case 8252:
      case 8283:
      case 8284:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 60720;
        goto LABEL_4;
      case 7165:
      case 7166:
      case 7197:
      case 7198:
      case 7229:
      case 7230:
      case 7261:
      case 7262:
      case 7293:
      case 7294:
      case 7325:
      case 7326:
      case 7357:
      case 7358:
      case 7389:
      case 7390:
      case 7421:
      case 7422:
      case 7453:
      case 7454:
      case 7485:
      case 7486:
      case 7517:
      case 7518:
      case 7933:
      case 7934:
      case 7965:
      case 7966:
      case 7997:
      case 7998:
      case 8029:
      case 8030:
      case 8061:
      case 8062:
      case 8093:
      case 8094:
      case 8125:
      case 8126:
      case 8157:
      case 8158:
      case 8189:
      case 8190:
      case 8221:
      case 8222:
      case 8253:
      case 8254:
      case 8285:
      case 8286:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 61776;
        goto LABEL_4;
      case 7167:
      case 7168:
      case 7199:
      case 7200:
      case 7231:
      case 7232:
      case 7263:
      case 7264:
      case 7295:
      case 7296:
      case 7327:
      case 7328:
      case 7359:
      case 7360:
      case 7391:
      case 7392:
      case 7423:
      case 7424:
      case 7455:
      case 7456:
      case 7487:
      case 7488:
      case 7519:
      case 7520:
      case 7935:
      case 7936:
      case 7967:
      case 7968:
      case 7999:
      case 8000:
      case 8031:
      case 8032:
      case 8063:
      case 8064:
      case 8095:
      case 8096:
      case 8127:
      case 8128:
      case 8159:
      case 8160:
      case 8191:
      case 8192:
      case 8223:
      case 8224:
      case 8255:
      case 8256:
      case 8287:
      case 8288:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 61248;
        goto LABEL_4;
      case 7169:
      case 7170:
      case 7201:
      case 7202:
      case 7233:
      case 7234:
      case 7265:
      case 7266:
      case 7297:
      case 7298:
      case 7329:
      case 7330:
      case 7361:
      case 7362:
      case 7393:
      case 7394:
      case 7425:
      case 7426:
      case 7457:
      case 7458:
      case 7489:
      case 7490:
      case 7521:
      case 7522:
      case 7937:
      case 7938:
      case 7969:
      case 7970:
      case 8001:
      case 8002:
      case 8033:
      case 8034:
      case 8065:
      case 8066:
      case 8097:
      case 8098:
      case 8129:
      case 8130:
      case 8161:
      case 8162:
      case 8193:
      case 8194:
      case 8225:
      case 8226:
      case 8257:
      case 8258:
      case 8289:
      case 8290:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 62568;
        goto LABEL_4;
      case 7171:
      case 7172:
      case 7203:
      case 7204:
      case 7235:
      case 7236:
      case 7267:
      case 7268:
      case 7299:
      case 7300:
      case 7331:
      case 7332:
      case 7363:
      case 7364:
      case 7395:
      case 7396:
      case 7427:
      case 7428:
      case 7459:
      case 7460:
      case 7491:
      case 7492:
      case 7523:
      case 7524:
      case 7939:
      case 7940:
      case 7971:
      case 7972:
      case 8003:
      case 8004:
      case 8035:
      case 8036:
      case 8067:
      case 8068:
      case 8099:
      case 8100:
      case 8131:
      case 8132:
      case 8163:
      case 8164:
      case 8195:
      case 8196:
      case 8227:
      case 8228:
      case 8259:
      case 8260:
      case 8291:
      case 8292:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 62832;
        goto LABEL_4;
      case 7173:
      case 7174:
      case 7205:
      case 7206:
      case 7237:
      case 7238:
      case 7269:
      case 7270:
      case 7301:
      case 7302:
      case 7333:
      case 7334:
      case 7365:
      case 7366:
      case 7397:
      case 7398:
      case 7429:
      case 7430:
      case 7461:
      case 7462:
      case 7493:
      case 7494:
      case 7525:
      case 7526:
      case 7941:
      case 7942:
      case 7973:
      case 7974:
      case 8005:
      case 8006:
      case 8037:
      case 8038:
      case 8069:
      case 8070:
      case 8101:
      case 8102:
      case 8133:
      case 8134:
      case 8165:
      case 8166:
      case 8197:
      case 8198:
      case 8229:
      case 8230:
      case 8261:
      case 8262:
      case 8293:
      case 8294:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 63360;
        goto LABEL_4;
      case 7175:
      case 7176:
      case 7207:
      case 7208:
      case 7239:
      case 7240:
      case 7271:
      case 7272:
      case 7303:
      case 7304:
      case 7335:
      case 7336:
      case 7367:
      case 7368:
      case 7399:
      case 7400:
      case 7431:
      case 7432:
      case 7463:
      case 7464:
      case 7495:
      case 7496:
      case 7527:
      case 7528:
      case 7943:
      case 7944:
      case 7975:
      case 7976:
      case 8007:
      case 8008:
      case 8039:
      case 8040:
      case 8071:
      case 8072:
      case 8103:
      case 8104:
      case 8135:
      case 8136:
      case 8167:
      case 8168:
      case 8199:
      case 8200:
      case 8231:
      case 8232:
      case 8263:
      case 8264:
      case 8295:
      case 8296:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 63888;
        goto LABEL_4;
      case 7177:
      case 7178:
      case 7209:
      case 7210:
      case 7241:
      case 7242:
      case 7273:
      case 7274:
      case 7305:
      case 7306:
      case 7337:
      case 7338:
      case 7369:
      case 7370:
      case 7401:
      case 7402:
      case 7433:
      case 7434:
      case 7465:
      case 7466:
      case 7497:
      case 7498:
      case 7529:
      case 7530:
      case 7945:
      case 7946:
      case 7977:
      case 7978:
      case 8009:
      case 8010:
      case 8041:
      case 8042:
      case 8073:
      case 8074:
      case 8105:
      case 8106:
      case 8137:
      case 8138:
      case 8169:
      case 8170:
      case 8201:
      case 8202:
      case 8233:
      case 8234:
      case 8265:
      case 8266:
      case 8297:
      case 8298:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 64680;
        goto LABEL_4;
      case 7179:
      case 7180:
      case 7211:
      case 7212:
      case 7243:
      case 7244:
      case 7275:
      case 7276:
      case 7307:
      case 7308:
      case 7339:
      case 7340:
      case 7371:
      case 7372:
      case 7403:
      case 7404:
      case 7435:
      case 7436:
      case 7467:
      case 7468:
      case 7499:
      case 7500:
      case 7531:
      case 7532:
      case 7947:
      case 7948:
      case 7979:
      case 7980:
      case 8011:
      case 8012:
      case 8043:
      case 8044:
      case 8075:
      case 8076:
      case 8107:
      case 8108:
      case 8139:
      case 8140:
      case 8171:
      case 8172:
      case 8203:
      case 8204:
      case 8235:
      case 8236:
      case 8267:
      case 8268:
      case 8299:
      case 8300:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 64944;
        goto LABEL_4;
      case 7181:
      case 7182:
      case 7213:
      case 7214:
      case 7245:
      case 7246:
      case 7277:
      case 7278:
      case 7309:
      case 7310:
      case 7341:
      case 7342:
      case 7373:
      case 7374:
      case 7405:
      case 7406:
      case 7437:
      case 7438:
      case 7469:
      case 7470:
      case 7501:
      case 7502:
      case 7533:
      case 7534:
      case 7949:
      case 7950:
      case 7981:
      case 7982:
      case 8013:
      case 8014:
      case 8045:
      case 8046:
      case 8077:
      case 8078:
      case 8109:
      case 8110:
      case 8141:
      case 8142:
      case 8173:
      case 8174:
      case 8205:
      case 8206:
      case 8237:
      case 8238:
      case 8269:
      case 8270:
      case 8301:
      case 8302:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 66000);
        break;
      case 7183:
      case 7184:
      case 7215:
      case 7216:
      case 7247:
      case 7248:
      case 7279:
      case 7280:
      case 7311:
      case 7312:
      case 7343:
      case 7344:
      case 7375:
      case 7376:
      case 7407:
      case 7408:
      case 7439:
      case 7440:
      case 7471:
      case 7472:
      case 7503:
      case 7504:
      case 7535:
      case 7536:
      case 7951:
      case 7952:
      case 7983:
      case 7984:
      case 8015:
      case 8016:
      case 8047:
      case 8048:
      case 8079:
      case 8080:
      case 8111:
      case 8112:
      case 8143:
      case 8144:
      case 8175:
      case 8176:
      case 8207:
      case 8208:
      case 8239:
      case 8240:
      case 8271:
      case 8272:
      case 8303:
      case 8304:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 65472;
        goto LABEL_4;
      case 7185:
      case 7186:
      case 7217:
      case 7218:
      case 7249:
      case 7250:
      case 7281:
      case 7282:
      case 7313:
      case 7314:
      case 7345:
      case 7346:
      case 7377:
      case 7378:
      case 7409:
      case 7410:
      case 7441:
      case 7442:
      case 7473:
      case 7474:
      case 7505:
      case 7506:
      case 7537:
      case 7538:
      case 7953:
      case 7954:
      case 7985:
      case 7986:
      case 8017:
      case 8018:
      case 8049:
      case 8050:
      case 8081:
      case 8082:
      case 8113:
      case 8114:
      case 8145:
      case 8146:
      case 8177:
      case 8178:
      case 8209:
      case 8210:
      case 8241:
      case 8242:
      case 8273:
      case 8274:
      case 8305:
      case 8306:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 66792);
        break;
      case 7187:
      case 7188:
      case 7219:
      case 7220:
      case 7251:
      case 7252:
      case 7283:
      case 7284:
      case 7315:
      case 7316:
      case 7347:
      case 7348:
      case 7379:
      case 7380:
      case 7411:
      case 7412:
      case 7443:
      case 7444:
      case 7475:
      case 7476:
      case 7507:
      case 7508:
      case 7539:
      case 7540:
      case 7955:
      case 7956:
      case 7987:
      case 7988:
      case 8019:
      case 8020:
      case 8051:
      case 8052:
      case 8083:
      case 8084:
      case 8115:
      case 8116:
      case 8147:
      case 8148:
      case 8179:
      case 8180:
      case 8211:
      case 8212:
      case 8243:
      case 8244:
      case 8275:
      case 8276:
      case 8307:
      case 8308:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 67056);
        break;
      case 7189:
      case 7190:
      case 7221:
      case 7222:
      case 7253:
      case 7254:
      case 7285:
      case 7286:
      case 7317:
      case 7318:
      case 7349:
      case 7350:
      case 7381:
      case 7382:
      case 7413:
      case 7414:
      case 7445:
      case 7446:
      case 7477:
      case 7478:
      case 7509:
      case 7510:
      case 7541:
      case 7542:
      case 7957:
      case 7958:
      case 7989:
      case 7990:
      case 8021:
      case 8022:
      case 8053:
      case 8054:
      case 8085:
      case 8086:
      case 8117:
      case 8118:
      case 8149:
      case 8150:
      case 8181:
      case 8182:
      case 8213:
      case 8214:
      case 8245:
      case 8246:
      case 8277:
      case 8278:
      case 8309:
      case 8310:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 67584);
        break;
      case 7543:
      case 7544:
      case 7575:
      case 7576:
      case 7607:
      case 7608:
      case 7639:
      case 7640:
      case 7671:
      case 7672:
      case 7703:
      case 7704:
      case 7735:
      case 7736:
      case 7767:
      case 7768:
      case 7799:
      case 7800:
      case 7831:
      case 7832:
      case 7863:
      case 7864:
      case 7895:
      case 7896:
      case 8311:
      case 8312:
      case 8343:
      case 8344:
      case 8375:
      case 8376:
      case 8407:
      case 8408:
      case 8439:
      case 8440:
      case 8471:
      case 8472:
      case 8503:
      case 8504:
      case 8535:
      case 8536:
      case 8567:
      case 8568:
      case 8599:
      case 8600:
      case 8631:
      case 8632:
      case 8663:
      case 8664:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 59400;
        goto LABEL_4;
      case 7545:
      case 7546:
      case 7577:
      case 7578:
      case 7609:
      case 7610:
      case 7641:
      case 7642:
      case 7673:
      case 7674:
      case 7705:
      case 7706:
      case 7737:
      case 7738:
      case 7769:
      case 7770:
      case 7801:
      case 7802:
      case 7833:
      case 7834:
      case 7865:
      case 7866:
      case 7897:
      case 7898:
      case 8313:
      case 8314:
      case 8345:
      case 8346:
      case 8377:
      case 8378:
      case 8409:
      case 8410:
      case 8441:
      case 8442:
      case 8473:
      case 8474:
      case 8505:
      case 8506:
      case 8537:
      case 8538:
      case 8569:
      case 8570:
      case 8601:
      case 8602:
      case 8633:
      case 8634:
      case 8665:
      case 8666:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 59928;
        goto LABEL_4;
      case 7547:
      case 7548:
      case 7579:
      case 7580:
      case 7611:
      case 7612:
      case 7643:
      case 7644:
      case 7675:
      case 7676:
      case 7707:
      case 7708:
      case 7739:
      case 7740:
      case 7771:
      case 7772:
      case 7803:
      case 7804:
      case 7835:
      case 7836:
      case 7867:
      case 7868:
      case 7899:
      case 7900:
      case 8315:
      case 8316:
      case 8347:
      case 8348:
      case 8379:
      case 8380:
      case 8411:
      case 8412:
      case 8443:
      case 8444:
      case 8475:
      case 8476:
      case 8507:
      case 8508:
      case 8539:
      case 8540:
      case 8571:
      case 8572:
      case 8603:
      case 8604:
      case 8635:
      case 8636:
      case 8667:
      case 8668:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 60192;
        goto LABEL_4;
      case 7549:
      case 7550:
      case 7581:
      case 7582:
      case 7613:
      case 7614:
      case 7645:
      case 7646:
      case 7677:
      case 7678:
      case 7709:
      case 7710:
      case 7741:
      case 7742:
      case 7773:
      case 7774:
      case 7805:
      case 7806:
      case 7837:
      case 7838:
      case 7869:
      case 7870:
      case 7901:
      case 7902:
      case 8317:
      case 8318:
      case 8349:
      case 8350:
      case 8381:
      case 8382:
      case 8413:
      case 8414:
      case 8445:
      case 8446:
      case 8477:
      case 8478:
      case 8509:
      case 8510:
      case 8541:
      case 8542:
      case 8573:
      case 8574:
      case 8605:
      case 8606:
      case 8637:
      case 8638:
      case 8669:
      case 8670:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 61512;
        goto LABEL_4;
      case 7551:
      case 7552:
      case 7583:
      case 7584:
      case 7615:
      case 7616:
      case 7647:
      case 7648:
      case 7679:
      case 7680:
      case 7711:
      case 7712:
      case 7743:
      case 7744:
      case 7775:
      case 7776:
      case 7807:
      case 7808:
      case 7839:
      case 7840:
      case 7871:
      case 7872:
      case 7903:
      case 7904:
      case 8319:
      case 8320:
      case 8351:
      case 8352:
      case 8383:
      case 8384:
      case 8415:
      case 8416:
      case 8447:
      case 8448:
      case 8479:
      case 8480:
      case 8511:
      case 8512:
      case 8543:
      case 8544:
      case 8575:
      case 8576:
      case 8607:
      case 8608:
      case 8639:
      case 8640:
      case 8671:
      case 8672:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 60984;
        goto LABEL_4;
      case 7553:
      case 7554:
      case 7585:
      case 7586:
      case 7617:
      case 7618:
      case 7649:
      case 7650:
      case 7681:
      case 7682:
      case 7713:
      case 7714:
      case 7745:
      case 7746:
      case 7777:
      case 7778:
      case 7809:
      case 7810:
      case 7841:
      case 7842:
      case 7873:
      case 7874:
      case 7905:
      case 7906:
      case 8321:
      case 8322:
      case 8353:
      case 8354:
      case 8385:
      case 8386:
      case 8417:
      case 8418:
      case 8449:
      case 8450:
      case 8481:
      case 8482:
      case 8513:
      case 8514:
      case 8545:
      case 8546:
      case 8577:
      case 8578:
      case 8609:
      case 8610:
      case 8641:
      case 8642:
      case 8673:
      case 8674:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 62040;
        goto LABEL_4;
      case 7555:
      case 7556:
      case 7587:
      case 7588:
      case 7619:
      case 7620:
      case 7651:
      case 7652:
      case 7683:
      case 7684:
      case 7715:
      case 7716:
      case 7747:
      case 7748:
      case 7779:
      case 7780:
      case 7811:
      case 7812:
      case 7843:
      case 7844:
      case 7875:
      case 7876:
      case 7907:
      case 7908:
      case 8323:
      case 8324:
      case 8355:
      case 8356:
      case 8387:
      case 8388:
      case 8419:
      case 8420:
      case 8451:
      case 8452:
      case 8483:
      case 8484:
      case 8515:
      case 8516:
      case 8547:
      case 8548:
      case 8579:
      case 8580:
      case 8611:
      case 8612:
      case 8643:
      case 8644:
      case 8675:
      case 8676:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 62304;
        goto LABEL_4;
      case 7557:
      case 7558:
      case 7589:
      case 7590:
      case 7621:
      case 7622:
      case 7653:
      case 7654:
      case 7685:
      case 7686:
      case 7717:
      case 7718:
      case 7749:
      case 7750:
      case 7781:
      case 7782:
      case 7813:
      case 7814:
      case 7845:
      case 7846:
      case 7877:
      case 7878:
      case 7909:
      case 7910:
      case 8325:
      case 8326:
      case 8357:
      case 8358:
      case 8389:
      case 8390:
      case 8421:
      case 8422:
      case 8453:
      case 8454:
      case 8485:
      case 8486:
      case 8517:
      case 8518:
      case 8549:
      case 8550:
      case 8581:
      case 8582:
      case 8613:
      case 8614:
      case 8645:
      case 8646:
      case 8677:
      case 8678:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 63096;
        goto LABEL_4;
      case 7559:
      case 7560:
      case 7591:
      case 7592:
      case 7623:
      case 7624:
      case 7655:
      case 7656:
      case 7687:
      case 7688:
      case 7719:
      case 7720:
      case 7751:
      case 7752:
      case 7783:
      case 7784:
      case 7815:
      case 7816:
      case 7847:
      case 7848:
      case 7879:
      case 7880:
      case 7911:
      case 7912:
      case 8327:
      case 8328:
      case 8359:
      case 8360:
      case 8391:
      case 8392:
      case 8423:
      case 8424:
      case 8455:
      case 8456:
      case 8487:
      case 8488:
      case 8519:
      case 8520:
      case 8551:
      case 8552:
      case 8583:
      case 8584:
      case 8615:
      case 8616:
      case 8647:
      case 8648:
      case 8679:
      case 8680:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 63624;
        goto LABEL_4;
      case 7561:
      case 7562:
      case 7593:
      case 7594:
      case 7625:
      case 7626:
      case 7657:
      case 7658:
      case 7689:
      case 7690:
      case 7721:
      case 7722:
      case 7753:
      case 7754:
      case 7785:
      case 7786:
      case 7817:
      case 7818:
      case 7849:
      case 7850:
      case 7881:
      case 7882:
      case 7913:
      case 7914:
      case 8329:
      case 8330:
      case 8361:
      case 8362:
      case 8393:
      case 8394:
      case 8425:
      case 8426:
      case 8457:
      case 8458:
      case 8489:
      case 8490:
      case 8521:
      case 8522:
      case 8553:
      case 8554:
      case 8585:
      case 8586:
      case 8617:
      case 8618:
      case 8649:
      case 8650:
      case 8681:
      case 8682:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 64152;
        goto LABEL_4;
      case 7563:
      case 7564:
      case 7595:
      case 7596:
      case 7627:
      case 7628:
      case 7659:
      case 7660:
      case 7691:
      case 7692:
      case 7723:
      case 7724:
      case 7755:
      case 7756:
      case 7787:
      case 7788:
      case 7819:
      case 7820:
      case 7851:
      case 7852:
      case 7883:
      case 7884:
      case 7915:
      case 7916:
      case 8331:
      case 8332:
      case 8363:
      case 8364:
      case 8395:
      case 8396:
      case 8427:
      case 8428:
      case 8459:
      case 8460:
      case 8491:
      case 8492:
      case 8523:
      case 8524:
      case 8555:
      case 8556:
      case 8587:
      case 8588:
      case 8619:
      case 8620:
      case 8651:
      case 8652:
      case 8683:
      case 8684:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 64416;
        goto LABEL_4;
      case 7565:
      case 7566:
      case 7597:
      case 7598:
      case 7629:
      case 7630:
      case 7661:
      case 7662:
      case 7693:
      case 7694:
      case 7725:
      case 7726:
      case 7757:
      case 7758:
      case 7789:
      case 7790:
      case 7821:
      case 7822:
      case 7853:
      case 7854:
      case 7885:
      case 7886:
      case 7917:
      case 7918:
      case 8333:
      case 8334:
      case 8365:
      case 8366:
      case 8397:
      case 8398:
      case 8429:
      case 8430:
      case 8461:
      case 8462:
      case 8493:
      case 8494:
      case 8525:
      case 8526:
      case 8557:
      case 8558:
      case 8589:
      case 8590:
      case 8621:
      case 8622:
      case 8653:
      case 8654:
      case 8685:
      case 8686:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 65736);
        break;
      case 7567:
      case 7568:
      case 7599:
      case 7600:
      case 7631:
      case 7632:
      case 7663:
      case 7664:
      case 7695:
      case 7696:
      case 7727:
      case 7728:
      case 7759:
      case 7760:
      case 7791:
      case 7792:
      case 7823:
      case 7824:
      case 7855:
      case 7856:
      case 7887:
      case 7888:
      case 7919:
      case 7920:
      case 8335:
      case 8336:
      case 8367:
      case 8368:
      case 8399:
      case 8400:
      case 8431:
      case 8432:
      case 8463:
      case 8464:
      case 8495:
      case 8496:
      case 8527:
      case 8528:
      case 8559:
      case 8560:
      case 8591:
      case 8592:
      case 8623:
      case 8624:
      case 8655:
      case 8656:
      case 8687:
      case 8688:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 65208;
        goto LABEL_4;
      case 7569:
      case 7570:
      case 7601:
      case 7602:
      case 7633:
      case 7634:
      case 7665:
      case 7666:
      case 7697:
      case 7698:
      case 7729:
      case 7730:
      case 7761:
      case 7762:
      case 7793:
      case 7794:
      case 7825:
      case 7826:
      case 7857:
      case 7858:
      case 7889:
      case 7890:
      case 7921:
      case 7922:
      case 8337:
      case 8338:
      case 8369:
      case 8370:
      case 8401:
      case 8402:
      case 8433:
      case 8434:
      case 8465:
      case 8466:
      case 8497:
      case 8498:
      case 8529:
      case 8530:
      case 8561:
      case 8562:
      case 8593:
      case 8594:
      case 8625:
      case 8626:
      case 8657:
      case 8658:
      case 8689:
      case 8690:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 66264);
        break;
      case 7571:
      case 7572:
      case 7603:
      case 7604:
      case 7635:
      case 7636:
      case 7667:
      case 7668:
      case 7699:
      case 7700:
      case 7731:
      case 7732:
      case 7763:
      case 7764:
      case 7795:
      case 7796:
      case 7827:
      case 7828:
      case 7859:
      case 7860:
      case 7891:
      case 7892:
      case 7923:
      case 7924:
      case 8339:
      case 8340:
      case 8371:
      case 8372:
      case 8403:
      case 8404:
      case 8435:
      case 8436:
      case 8467:
      case 8468:
      case 8499:
      case 8500:
      case 8531:
      case 8532:
      case 8563:
      case 8564:
      case 8595:
      case 8596:
      case 8627:
      case 8628:
      case 8659:
      case 8660:
      case 8691:
      case 8692:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 66528);
        break;
      case 7573:
      case 7574:
      case 7605:
      case 7606:
      case 7637:
      case 7638:
      case 7669:
      case 7670:
      case 7701:
      case 7702:
      case 7733:
      case 7734:
      case 7765:
      case 7766:
      case 7797:
      case 7798:
      case 7829:
      case 7830:
      case 7861:
      case 7862:
      case 7893:
      case 7894:
      case 7925:
      case 7926:
      case 8341:
      case 8342:
      case 8373:
      case 8374:
      case 8405:
      case 8406:
      case 8437:
      case 8438:
      case 8469:
      case 8470:
      case 8501:
      case 8502:
      case 8533:
      case 8534:
      case 8565:
      case 8566:
      case 8597:
      case 8598:
      case 8629:
      case 8630:
      case 8661:
      case 8662:
      case 8693:
      case 8694:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 67320);
        break;
      case 8695:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 84480);
        break;
      case 8696:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 84744);
        break;
      case 9013:
      case 9014:
      case 9015:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 85008);
        break;
      case 9016:
      case 9017:
      case 9018:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 87384);
        break;
      case 9192:
      case 9193:
      case 9194:
      case 9195:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 38808;
        goto LABEL_4;
      case 9204:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 83424);
        break;
      case 9209:
      case 9210:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 82104);
        break;
      case 9211:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2 + 82368);
        break;
      case 9212:
      case 9213:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 34584;
        goto LABEL_4;
      case 9214:
      case 9215:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 34848;
        goto LABEL_4;
      case 9216:
      case 9217:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 35112;
        goto LABEL_4;
      case 9218:
      case 9219:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 35376;
        goto LABEL_4;
      case 9220:
      case 9221:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 36432;
        goto LABEL_4;
      case 9222:
      case 9223:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 36696;
        goto LABEL_4;
      case 9224:
      case 9225:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 36960;
        goto LABEL_4;
      case 9226:
      case 9227:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 37224;
        goto LABEL_4;
      case 9282:
      case 9283:
        uint64_t v2 = (char *)&unk_1CDF538D0 + 2 * a2;
        uint64_t v3 = 59136;
LABEL_4:
        uint64_t v4 = (__int16 *)&v2[v3];
        break;
      default:
        uint64_t v4 = (__int16 *)((char *)&unk_1CDF538D0 + 2 * a2);
        break;
    }
    return *v4;
  }
}

uint64_t sub_1CBDB0D0C(uint64_t result, uint64_t a2, unsigned int a3)
{
  switch((int)result)
  {
    case 2178:
    case 2181:
      goto LABEL_143;
    case 2179:
    case 2180:
      goto LABEL_148;
    case 2182:
    case 2183:
      goto LABEL_155;
    case 2185:
    case 2196:
      goto LABEL_160;
    case 2186:
    case 2189:
      goto LABEL_163;
    case 2187:
    case 2188:
      goto LABEL_168;
    case 2190:
    case 2191:
      goto LABEL_179;
    case 2192:
    case 2195:
      goto LABEL_184;
    case 2193:
    case 2194:
      goto LABEL_191;
    case 2197:
    case 2200:
      goto LABEL_196;
    case 2198:
    case 2199:
      goto LABEL_206;
    case 2201:
    case 2208:
      goto LABEL_213;
    case 2202:
    case 2205:
      goto LABEL_218;
    case 2203:
    case 2204:
      goto LABEL_225;
    case 2206:
    case 2207:
      goto LABEL_234;
    case 2209:
    case 2220:
      goto LABEL_2;
    case 2210:
    case 2213:
      goto LABEL_243;
    case 2211:
    case 2212:
      goto LABEL_42;
    case 2214:
    case 2215:
      goto LABEL_24;
    case 2216:
    case 2219:
      goto LABEL_123;
    case 2217:
    case 2218:
      goto LABEL_128;
    case 2221:
    case 2224:
      goto LABEL_135;
    case 2222:
    case 2223:
      goto LABEL_35;
    case 2225:
    case 2232:
      goto LABEL_56;
    case 2226:
    case 2229:
      goto LABEL_63;
    case 2227:
    case 2228:
      goto LABEL_72;
    case 2230:
    case 2231:
      goto LABEL_83;
    case 2233:
    case 2240:
      goto LABEL_93;
    case 2234:
    case 2237:
      goto LABEL_100;
    case 2235:
    case 2236:
      goto LABEL_107;
    case 2238:
    case 2239:
      goto LABEL_116;
    case 2241:
    case 2248:
      int v33 = *(unsigned __int8 *)(a2 + 52);
      *(_DWORD *)(a2 + 48) = 6;
      if (!v33) {
        *(unsigned char *)(a2 + 52) = 1;
      }
      goto LABEL_140;
    case 2242:
    case 2245:
      int v36 = *(unsigned __int8 *)(a2 + 52);
      *(_DWORD *)(a2 + 48) = 7;
      if (!v36) {
        *(unsigned char *)(a2 + 52) = 1;
      }
LABEL_143:
      *(_OWORD *)a2 = xmmword_1CDB0CFA0;
      *(void *)(a2 + 16) = 0;
      if (!*(unsigned char *)(a2 + 36)) {
        *(unsigned char *)(a2 + 36) = 1;
      }
      int v3 = 0;
      char v12 = 0;
      int v5 = 0;
      int v7 = 0;
      int v4 = 6;
      *(_DWORD *)(a2 + 32) = 6;
      *(void *)(a2 + 24) = 0;
      *(void *)(a2 + 40) = 0;
      *(void *)(a2 + 56) = 0x100000001;
      char v11 = 1;
      *(_WORD *)(a2 + 64) = 1;
      BOOL v24 = (result & 0xFFFFFFBF) == 2181;
      goto LABEL_199;
    case 2243:
    case 2244:
      int v37 = *(unsigned __int8 *)(a2 + 52);
      *(_DWORD *)(a2 + 48) = 8;
      if (!v37) {
        *(unsigned char *)(a2 + 52) = 1;
      }
LABEL_148:
      *(_OWORD *)a2 = xmmword_1CDB0CFA0;
      *(void *)(a2 + 16) = 0;
      if (!*(unsigned char *)(a2 + 36)) {
        *(unsigned char *)(a2 + 36) = 1;
      }
      *(_DWORD *)(a2 + 32) = 6;
      *(void *)(a2 + 24) = 0;
      if (!*(unsigned char *)(a2 + 44)) {
        *(unsigned char *)(a2 + 44) = 1;
      }
      char v11 = 0;
      char v12 = 0;
      int v5 = 0;
      int v7 = 0;
      int v3 = 7;
      *(_DWORD *)(a2 + 40) = 7;
      *(void *)(a2 + 56) = 0x100000001;
      char v13 = 1;
      *(_WORD *)(a2 + 64) = 1;
      BOOL v38 = (result & 0xFFFFFFBF) == 2180;
      goto LABEL_173;
    case 2246:
    case 2247:
      int v39 = *(unsigned __int8 *)(a2 + 52);
      *(_DWORD *)(a2 + 48) = 7;
      if (!v39) {
        *(unsigned char *)(a2 + 52) = 1;
      }
LABEL_155:
      *(_OWORD *)a2 = xmmword_1CDB0CFA0;
      *(void *)(a2 + 24) = 0;
      *(void *)(a2 + 32) = 0;
      *(void *)(a2 + 16) = 0;
      if (!*(unsigned char *)(a2 + 44)) {
        *(unsigned char *)(a2 + 44) = 1;
      }
      char v11 = 0;
      int v4 = 0;
      int v5 = 0;
      int v7 = 0;
      int v3 = 6;
      *(_DWORD *)(a2 + 40) = 6;
      *(void *)(a2 + 56) = 1;
      char v12 = 1;
      *(_WORD *)(a2 + 64) = 1;
      BOOL v24 = (result & 0xFFFFFFBF) == 2183;
      goto LABEL_199;
    case 2249:
    case 2260:
      int v40 = *(unsigned __int8 *)(a2 + 52);
      *(_DWORD *)(a2 + 48) = 6;
      if (!v40) {
        *(unsigned char *)(a2 + 52) = 1;
      }
LABEL_160:
      int v3 = 0;
      int v4 = 0;
      int v5 = 0;
      int v7 = 0;
      *(_OWORD *)a2 = xmmword_1CDB0CFA0;
      *(_OWORD *)(a2 + 16) = 0u;
      *(_OWORD *)(a2 + 32) = 0u;
      uint64_t v34 = 0x200000002;
      char v11 = 1;
      BOOL v35 = (result & 0xFFFFFFBF) == 2196;
      goto LABEL_185;
    case 2250:
    case 2253:
      int v41 = *(unsigned __int8 *)(a2 + 52);
      *(_DWORD *)(a2 + 48) = 7;
      if (!v41) {
        *(unsigned char *)(a2 + 52) = 1;
      }
LABEL_163:
      *(_OWORD *)a2 = xmmword_1CDB0CFA0;
      *(void *)(a2 + 16) = 0;
      if (!*(unsigned char *)(a2 + 36)) {
        *(unsigned char *)(a2 + 36) = 1;
      }
      int v3 = 0;
      char v12 = 0;
      int v5 = 0;
      int v7 = 0;
      int v4 = 6;
      *(_DWORD *)(a2 + 32) = 6;
      *(void *)(a2 + 24) = 0;
      *(void *)(a2 + 40) = 0;
      *(void *)(a2 + 56) = 0x300000002;
      char v11 = 1;
      *(_WORD *)(a2 + 64) = 1;
      BOOL v24 = (result & 0xFFFFFFBF) == 2189;
      goto LABEL_199;
    case 2251:
    case 2252:
      int v42 = *(unsigned __int8 *)(a2 + 52);
      *(_DWORD *)(a2 + 48) = 8;
      if (!v42) {
        *(unsigned char *)(a2 + 52) = 1;
      }
LABEL_168:
      *(_OWORD *)a2 = xmmword_1CDB0CFA0;
      *(void *)(a2 + 16) = 0;
      if (!*(unsigned char *)(a2 + 36)) {
        *(unsigned char *)(a2 + 36) = 1;
      }
      *(_DWORD *)(a2 + 32) = 6;
      *(void *)(a2 + 24) = 0;
      if (!*(unsigned char *)(a2 + 44)) {
        *(unsigned char *)(a2 + 44) = 1;
      }
      char v11 = 0;
      char v12 = 0;
      int v5 = 0;
      int v7 = 0;
      int v3 = 7;
      *(_DWORD *)(a2 + 40) = 7;
      *(void *)(a2 + 56) = 0x300000002;
      char v13 = 1;
      *(_WORD *)(a2 + 64) = 1;
      BOOL v38 = (result & 0xFFFFFFBF) == 2188;
LABEL_173:
      BOOL v10 = v38;
      int v4 = 6;
      goto LABEL_203;
    case 2254:
    case 2255:
      int v43 = *(unsigned __int8 *)(a2 + 52);
      *(_DWORD *)(a2 + 48) = 7;
      if (!v43) {
        *(unsigned char *)(a2 + 52) = 1;
      }
LABEL_179:
      *(_OWORD *)a2 = xmmword_1CDB0CFA0;
      *(void *)(a2 + 24) = 0;
      *(void *)(a2 + 32) = 0;
      *(void *)(a2 + 16) = 0;
      if (!*(unsigned char *)(a2 + 44)) {
        *(unsigned char *)(a2 + 44) = 1;
      }
      char v11 = 0;
      int v4 = 0;
      int v5 = 0;
      int v7 = 0;
      int v3 = 6;
      *(_DWORD *)(a2 + 40) = 6;
      *(void *)(a2 + 56) = 0x200000002;
      char v12 = 1;
      *(_WORD *)(a2 + 64) = 1;
      BOOL v24 = (result & 0xFFFFFFBF) == 2191;
      goto LABEL_199;
    case 2256:
    case 2259:
      int v44 = *(unsigned __int8 *)(a2 + 52);
      *(_DWORD *)(a2 + 48) = 6;
      if (!v44) {
        *(unsigned char *)(a2 + 52) = 1;
      }
LABEL_184:
      int v3 = 0;
      int v4 = 0;
      int v5 = 0;
      int v7 = 0;
      *(_OWORD *)a2 = xmmword_1CDB0CFA0;
      *(_OWORD *)(a2 + 16) = 0u;
      *(_OWORD *)(a2 + 32) = 0u;
      uint64_t v34 = 0x400000002;
      char v11 = 1;
      BOOL v35 = (result & 0xFFFFFFBF) == 2195;
      goto LABEL_185;
    case 2257:
    case 2258:
      int v45 = *(unsigned __int8 *)(a2 + 52);
      *(_DWORD *)(a2 + 48) = 7;
      if (!v45) {
        *(unsigned char *)(a2 + 52) = 1;
      }
LABEL_191:
      *(_OWORD *)a2 = xmmword_1CDB0CFA0;
      *(void *)(a2 + 16) = 0;
      if (!*(unsigned char *)(a2 + 36)) {
        *(unsigned char *)(a2 + 36) = 1;
      }
      int v3 = 0;
      char v12 = 0;
      int v5 = 0;
      int v7 = 0;
      int v4 = 6;
      *(_DWORD *)(a2 + 32) = 6;
      *(void *)(a2 + 24) = 0;
      *(void *)(a2 + 40) = 0;
      *(void *)(a2 + 56) = 0x800000002;
      char v11 = 1;
      *(_WORD *)(a2 + 64) = 1;
      BOOL v24 = (result & 0xFFFFFFBF) == 2194;
      goto LABEL_199;
    case 2261:
    case 2264:
      int v46 = *(unsigned __int8 *)(a2 + 52);
      *(_DWORD *)(a2 + 48) = 7;
      if (!v46) {
        *(unsigned char *)(a2 + 52) = 1;
      }
LABEL_196:
      *(_OWORD *)a2 = xmmword_1CDB0CFA0;
      *(void *)(a2 + 16) = 0;
      if (!*(unsigned char *)(a2 + 36)) {
        *(unsigned char *)(a2 + 36) = 1;
      }
      int v3 = 0;
      char v12 = 0;
      int v5 = 0;
      int v7 = 0;
      int v4 = 6;
      *(_DWORD *)(a2 + 32) = 6;
      *(void *)(a2 + 24) = 0;
      *(void *)(a2 + 40) = 0;
      *(void *)(a2 + 56) = 0x500000002;
      char v11 = 1;
      *(_WORD *)(a2 + 64) = 1;
      BOOL v24 = (result & 0xFFFFFFBF) == 2200;
      goto LABEL_199;
    case 2262:
    case 2263:
      int v47 = *(unsigned __int8 *)(a2 + 52);
      *(_DWORD *)(a2 + 48) = 8;
      if (!v47) {
        *(unsigned char *)(a2 + 52) = 1;
      }
LABEL_206:
      *(_OWORD *)a2 = xmmword_1CDB0CFA0;
      if (!*(unsigned char *)(a2 + 20)) {
        *(unsigned char *)(a2 + 20) = 1;
      }
      *(_DWORD *)(a2 + 16) = 6;
      *(void *)(a2 + 24) = 0;
      *(void *)(a2 + 32) = 0;
      if (!*(unsigned char *)(a2 + 44)) {
        *(unsigned char *)(a2 + 44) = 1;
      }
      char v11 = 0;
      int v4 = 0;
      int v5 = 0;
      char v6 = 0;
      int v3 = 7;
      *(_DWORD *)(a2 + 40) = 7;
      *(void *)(a2 + 56) = 0x500000003;
      char v12 = 1;
      *(_WORD *)(a2 + 64) = 1;
      BOOL v10 = (result & 0xFFFFFFBF) == 2199;
      int v7 = 6;
      goto LABEL_10;
    case 2265:
    case 2272:
      int v48 = *(unsigned __int8 *)(a2 + 52);
      *(_DWORD *)(a2 + 48) = 7;
      if (!v48) {
        *(unsigned char *)(a2 + 52) = 1;
      }
LABEL_213:
      *(_OWORD *)a2 = xmmword_1CDB0CFA0;
      if (!*(unsigned char *)(a2 + 20)) {
        *(unsigned char *)(a2 + 20) = 1;
      }
      int v3 = 0;
      int v4 = 0;
      int v5 = 0;
      char v6 = 0;
      int v7 = 6;
      *(_DWORD *)(a2 + 16) = 6;
      *(void *)(a2 + 32) = 0;
      *(void *)(a2 + 40) = 0;
      *(void *)(a2 + 24) = 0;
      uint64_t v8 = 1;
      BOOL v9 = (result & 0xFFFFFFBF) == 2208;
      goto LABEL_5;
    case 2266:
    case 2269:
      int v49 = *(unsigned __int8 *)(a2 + 52);
      *(_DWORD *)(a2 + 48) = 8;
      if (!v49) {
        *(unsigned char *)(a2 + 52) = 1;
      }
LABEL_218:
      *(_OWORD *)a2 = xmmword_1CDB0CFA0;
      if (!*(unsigned char *)(a2 + 20)) {
        *(unsigned char *)(a2 + 20) = 1;
      }
      *(_DWORD *)(a2 + 16) = 6;
      if (!*(unsigned char *)(a2 + 36)) {
        *(unsigned char *)(a2 + 36) = 1;
      }
      int v3 = 0;
      char v12 = 0;
      int v5 = 0;
      char v6 = 0;
      int v4 = 7;
      *(_DWORD *)(a2 + 32) = 7;
      *(void *)(a2 + 24) = 0;
      *(void *)(a2 + 40) = 0;
      uint64_t v30 = 0x100000001;
      BOOL v31 = (result & 0xFFFFFFBF) == 2205;
      goto LABEL_248;
    case 2267:
    case 2268:
      int v50 = *(unsigned __int8 *)(a2 + 52);
      *(_DWORD *)(a2 + 48) = 9;
      if (!v50) {
        *(unsigned char *)(a2 + 52) = 1;
      }
LABEL_225:
      *(_OWORD *)a2 = xmmword_1CDB0CFA0;
      if (!*(unsigned char *)(a2 + 20)) {
        *(unsigned char *)(a2 + 20) = 1;
      }
      *(_DWORD *)(a2 + 16) = 6;
      if (!*(unsigned char *)(a2 + 36)) {
        *(unsigned char *)(a2 + 36) = 1;
      }
      *(_DWORD *)(a2 + 32) = 7;
      *(void *)(a2 + 24) = 0;
      if (!*(unsigned char *)(a2 + 44)) {
        *(unsigned char *)(a2 + 44) = 1;
      }
      char v11 = 0;
      char v12 = 0;
      int v5 = 0;
      char v6 = 0;
      int v3 = 8;
      *(_DWORD *)(a2 + 40) = 8;
      *(void *)(a2 + 56) = 0x100000001;
      BOOL v18 = (result & 0xFFFFFFBF) == 2204;
      goto LABEL_49;
    case 2270:
    case 2271:
      int v51 = *(unsigned __int8 *)(a2 + 52);
      *(_DWORD *)(a2 + 48) = 8;
      if (!v51) {
        *(unsigned char *)(a2 + 52) = 1;
      }
LABEL_234:
      *(_OWORD *)a2 = xmmword_1CDB0CFA0;
      if (!*(unsigned char *)(a2 + 20)) {
        *(unsigned char *)(a2 + 20) = 1;
      }
      *(_DWORD *)(a2 + 16) = 6;
      *(void *)(a2 + 24) = 0;
      *(void *)(a2 + 32) = 0;
      if (!*(unsigned char *)(a2 + 44)) {
        *(unsigned char *)(a2 + 44) = 1;
      }
      char v11 = 0;
      int v4 = 0;
      int v5 = 0;
      char v6 = 0;
      int v3 = 7;
      *(_DWORD *)(a2 + 40) = 7;
      *(void *)(a2 + 56) = 1;
      BOOL v15 = (result & 0xFFFFFFBF) == 2207;
      goto LABEL_29;
    case 2273:
    case 2284:
      int v52 = *(unsigned __int8 *)(a2 + 52);
      *(_DWORD *)(a2 + 48) = 7;
      if (!v52) {
        *(unsigned char *)(a2 + 52) = 1;
      }
LABEL_2:
      *(_OWORD *)a2 = xmmword_1CDB0CFA0;
      if (!*(unsigned char *)(a2 + 20)) {
        *(unsigned char *)(a2 + 20) = 1;
      }
      int v3 = 0;
      int v4 = 0;
      int v5 = 0;
      char v6 = 0;
      int v7 = 6;
      *(_DWORD *)(a2 + 16) = 6;
      *(void *)(a2 + 32) = 0;
      *(void *)(a2 + 40) = 0;
      *(void *)(a2 + 24) = 0;
      uint64_t v8 = 0x200000002;
      BOOL v9 = (result & 0xFFFFFFBF) == 2220;
      goto LABEL_5;
    case 2274:
    case 2277:
      int v53 = *(unsigned __int8 *)(a2 + 52);
      *(_DWORD *)(a2 + 48) = 8;
      if (!v53) {
        *(unsigned char *)(a2 + 52) = 1;
      }
LABEL_243:
      *(_OWORD *)a2 = xmmword_1CDB0CFA0;
      if (!*(unsigned char *)(a2 + 20)) {
        *(unsigned char *)(a2 + 20) = 1;
      }
      *(_DWORD *)(a2 + 16) = 6;
      if (!*(unsigned char *)(a2 + 36)) {
        *(unsigned char *)(a2 + 36) = 1;
      }
      int v3 = 0;
      char v12 = 0;
      int v5 = 0;
      char v6 = 0;
      int v4 = 7;
      *(_DWORD *)(a2 + 32) = 7;
      *(void *)(a2 + 24) = 0;
      *(void *)(a2 + 40) = 0;
      uint64_t v30 = 0x300000002;
      BOOL v31 = (result & 0xFFFFFFBF) == 2213;
      goto LABEL_248;
    case 2275:
    case 2276:
      int v17 = *(unsigned __int8 *)(a2 + 52);
      *(_DWORD *)(a2 + 48) = 9;
      if (!v17) {
        *(unsigned char *)(a2 + 52) = 1;
      }
LABEL_42:
      *(_OWORD *)a2 = xmmword_1CDB0CFA0;
      if (!*(unsigned char *)(a2 + 20)) {
        *(unsigned char *)(a2 + 20) = 1;
      }
      *(_DWORD *)(a2 + 16) = 6;
      if (!*(unsigned char *)(a2 + 36)) {
        *(unsigned char *)(a2 + 36) = 1;
      }
      *(_DWORD *)(a2 + 32) = 7;
      *(void *)(a2 + 24) = 0;
      if (!*(unsigned char *)(a2 + 44)) {
        *(unsigned char *)(a2 + 44) = 1;
      }
      char v11 = 0;
      char v12 = 0;
      int v5 = 0;
      char v6 = 0;
      int v3 = 8;
      *(_DWORD *)(a2 + 40) = 8;
      *(void *)(a2 + 56) = 0x300000002;
      BOOL v18 = (result & 0xFFFFFFBF) == 2212;
LABEL_49:
      *(_WORD *)(a2 + 64) = 0;
      BOOL v10 = v18;
      int v7 = 6;
      char v13 = 1;
      goto LABEL_53;
    case 2278:
    case 2279:
      int v14 = *(unsigned __int8 *)(a2 + 52);
      *(_DWORD *)(a2 + 48) = 8;
      if (!v14) {
        *(unsigned char *)(a2 + 52) = 1;
      }
LABEL_24:
      *(_OWORD *)a2 = xmmword_1CDB0CFA0;
      if (!*(unsigned char *)(a2 + 20)) {
        *(unsigned char *)(a2 + 20) = 1;
      }
      *(_DWORD *)(a2 + 16) = 6;
      *(void *)(a2 + 24) = 0;
      *(void *)(a2 + 32) = 0;
      if (!*(unsigned char *)(a2 + 44)) {
        *(unsigned char *)(a2 + 44) = 1;
      }
      char v11 = 0;
      int v4 = 0;
      int v5 = 0;
      char v6 = 0;
      int v3 = 7;
      *(_DWORD *)(a2 + 40) = 7;
      *(void *)(a2 + 56) = 0x200000002;
      BOOL v15 = (result & 0xFFFFFFBF) == 2215;
      goto LABEL_29;
    case 2280:
    case 2283:
      int v28 = *(unsigned __int8 *)(a2 + 52);
      *(_DWORD *)(a2 + 48) = 7;
      if (!v28) {
        *(unsigned char *)(a2 + 52) = 1;
      }
LABEL_123:
      *(_OWORD *)a2 = xmmword_1CDB0CFA0;
      if (!*(unsigned char *)(a2 + 20)) {
        *(unsigned char *)(a2 + 20) = 1;
      }
      int v3 = 0;
      int v4 = 0;
      int v5 = 0;
      char v6 = 0;
      int v7 = 6;
      *(_DWORD *)(a2 + 16) = 6;
      *(void *)(a2 + 32) = 0;
      *(void *)(a2 + 40) = 0;
      *(void *)(a2 + 24) = 0;
      uint64_t v8 = 0x400000002;
      BOOL v9 = (result & 0xFFFFFFBF) == 2219;
      goto LABEL_5;
    case 2281:
    case 2282:
      int v29 = *(unsigned __int8 *)(a2 + 52);
      *(_DWORD *)(a2 + 48) = 8;
      if (!v29) {
        *(unsigned char *)(a2 + 52) = 1;
      }
LABEL_128:
      *(_OWORD *)a2 = xmmword_1CDB0CFA0;
      if (!*(unsigned char *)(a2 + 20)) {
        *(unsigned char *)(a2 + 20) = 1;
      }
      *(_DWORD *)(a2 + 16) = 6;
      if (!*(unsigned char *)(a2 + 36)) {
        *(unsigned char *)(a2 + 36) = 1;
      }
      int v3 = 0;
      char v12 = 0;
      int v5 = 0;
      char v6 = 0;
      int v4 = 7;
      *(_DWORD *)(a2 + 32) = 7;
      *(void *)(a2 + 24) = 0;
      *(void *)(a2 + 40) = 0;
      uint64_t v30 = 0x800000002;
      BOOL v31 = (result & 0xFFFFFFBF) == 2218;
LABEL_248:
      *(void *)(a2 + 56) = v30;
      *(_WORD *)(a2 + 64) = 0;
      BOOL v10 = v31;
      int v7 = 6;
      char v11 = 1;
      goto LABEL_10;
    case 2285:
    case 2288:
      int v32 = *(unsigned __int8 *)(a2 + 52);
      *(_DWORD *)(a2 + 48) = 7;
      if (!v32) {
        *(unsigned char *)(a2 + 52) = 1;
      }
LABEL_135:
      *(_OWORD *)a2 = xmmword_1CDB0CFA0;
      if (!*(unsigned char *)(a2 + 20)) {
        *(unsigned char *)(a2 + 20) = 1;
      }
      int v3 = 0;
      int v4 = 0;
      int v5 = 0;
      char v6 = 0;
      int v7 = 6;
      *(_DWORD *)(a2 + 16) = 6;
      *(void *)(a2 + 32) = 0;
      *(void *)(a2 + 40) = 0;
      *(void *)(a2 + 24) = 0;
      uint64_t v8 = 0x500000003;
      BOOL v9 = (result & 0xFFFFFFBF) == 2224;
LABEL_5:
      *(void *)(a2 + 56) = v8;
      *(_WORD *)(a2 + 64) = 0;
      BOOL v10 = v9;
      char v11 = 1;
      goto LABEL_9;
    case 2286:
    case 2287:
      int v16 = *(unsigned __int8 *)(a2 + 52);
      *(_DWORD *)(a2 + 48) = 8;
      if (!v16) {
        *(unsigned char *)(a2 + 52) = 1;
      }
LABEL_35:
      *(_OWORD *)a2 = xmmword_1CDB0CFA0;
      if (!*(unsigned char *)(a2 + 20)) {
        *(unsigned char *)(a2 + 20) = 1;
      }
      *(_DWORD *)(a2 + 16) = 6;
      *(void *)(a2 + 24) = 0;
      *(void *)(a2 + 32) = 0;
      if (!*(unsigned char *)(a2 + 44)) {
        *(unsigned char *)(a2 + 44) = 1;
      }
      char v11 = 0;
      int v4 = 0;
      int v5 = 0;
      char v6 = 0;
      int v3 = 7;
      *(_DWORD *)(a2 + 40) = 7;
      *(void *)(a2 + 56) = 0x500000003;
      BOOL v15 = (result & 0xFFFFFFBF) == 2223;
LABEL_29:
      *(_WORD *)(a2 + 64) = 0;
      BOOL v10 = v15;
      int v7 = 6;
LABEL_9:
      char v12 = 1;
LABEL_10:
      char v13 = 1;
      goto LABEL_11;
    case 2289:
    case 2296:
      int v19 = *(unsigned __int8 *)(a2 + 52);
      *(_DWORD *)(a2 + 48) = 8;
      if (!v19) {
        *(unsigned char *)(a2 + 52) = 1;
      }
LABEL_56:
      *(_OWORD *)a2 = xmmword_1CDB0CFA0;
      if (!*(unsigned char *)(a2 + 20)) {
        *(unsigned char *)(a2 + 20) = 1;
      }
      *(_DWORD *)(a2 + 16) = 6;
      *(void *)(a2 + 32) = 0;
      if (!*(unsigned char *)(a2 + 28)) {
        *(unsigned char *)(a2 + 28) = 1;
      }
      int v3 = 0;
      int v4 = 0;
      char v13 = 0;
      char v6 = 0;
      int v5 = 7;
      *(_DWORD *)(a2 + 24) = 7;
      *(void *)(a2 + 40) = 0;
      *(void *)(a2 + 56) = 0x600000002;
      *(_WORD *)(a2 + 64) = 0;
      BOOL v10 = (result & 0xFFFFFFBF) == 2232;
      int v7 = 6;
      char v11 = 1;
      goto LABEL_90;
    case 2290:
    case 2293:
      int v20 = *(unsigned __int8 *)(a2 + 52);
      *(_DWORD *)(a2 + 48) = 9;
      if (!v20) {
        *(unsigned char *)(a2 + 52) = 1;
      }
LABEL_63:
      *(_OWORD *)a2 = xmmword_1CDB0CFA0;
      if (!*(unsigned char *)(a2 + 20)) {
        *(unsigned char *)(a2 + 20) = 1;
      }
      *(_DWORD *)(a2 + 16) = 6;
      if (!*(unsigned char *)(a2 + 36)) {
        *(unsigned char *)(a2 + 36) = 1;
      }
      *(_DWORD *)(a2 + 32) = 8;
      if (!*(unsigned char *)(a2 + 28)) {
        *(unsigned char *)(a2 + 28) = 1;
      }
      int v3 = 0;
      char v12 = 0;
      char v13 = 0;
      char v6 = 0;
      int v5 = 7;
      *(_DWORD *)(a2 + 24) = 7;
      *(void *)(a2 + 40) = 0;
      *(void *)(a2 + 56) = 0x700000002;
      *(_WORD *)(a2 + 64) = 0;
      BOOL v10 = (result & 0xFFFFFFBF) == 2229;
      int v7 = 6;
      int v4 = 8;
      char v11 = 1;
      goto LABEL_11;
    case 2291:
    case 2292:
      int v21 = *(unsigned __int8 *)(a2 + 52);
      *(_DWORD *)(a2 + 48) = 10;
      if (!v21) {
        *(unsigned char *)(a2 + 52) = 1;
      }
LABEL_72:
      *(_OWORD *)a2 = xmmword_1CDB0CFA0;
      if (!*(unsigned char *)(a2 + 20)) {
        *(unsigned char *)(a2 + 20) = 1;
      }
      *(_DWORD *)(a2 + 16) = 6;
      if (!*(unsigned char *)(a2 + 36)) {
        *(unsigned char *)(a2 + 36) = 1;
      }
      *(_DWORD *)(a2 + 32) = 8;
      if (!*(unsigned char *)(a2 + 28)) {
        *(unsigned char *)(a2 + 28) = 1;
      }
      *(_DWORD *)(a2 + 24) = 7;
      if (!*(unsigned char *)(a2 + 44)) {
        *(unsigned char *)(a2 + 44) = 1;
      }
      char v11 = 0;
      char v12 = 0;
      char v13 = 0;
      char v6 = 0;
      int v3 = 9;
      *(_DWORD *)(a2 + 40) = 9;
      *(void *)(a2 + 56) = 0x700000002;
      *(_WORD *)(a2 + 64) = 0;
      BOOL v10 = (result & 0xFFFFFFBF) == 2228;
      int v7 = 6;
      int v5 = 7;
      int v4 = 8;
      goto LABEL_11;
    case 2294:
    case 2295:
      int v22 = *(unsigned __int8 *)(a2 + 52);
      *(_DWORD *)(a2 + 48) = 9;
      if (!v22) {
        *(unsigned char *)(a2 + 52) = 1;
      }
LABEL_83:
      *(_OWORD *)a2 = xmmword_1CDB0CFA0;
      if (!*(unsigned char *)(a2 + 20)) {
        *(unsigned char *)(a2 + 20) = 1;
      }
      *(_DWORD *)(a2 + 16) = 6;
      *(void *)(a2 + 32) = 0;
      if (!*(unsigned char *)(a2 + 28)) {
        *(unsigned char *)(a2 + 28) = 1;
      }
      *(_DWORD *)(a2 + 24) = 7;
      if (!*(unsigned char *)(a2 + 44)) {
        *(unsigned char *)(a2 + 44) = 1;
      }
      char v11 = 0;
      int v4 = 0;
      char v13 = 0;
      char v6 = 0;
      int v3 = 8;
      *(_DWORD *)(a2 + 40) = 8;
      *(void *)(a2 + 56) = 0x600000002;
      *(_WORD *)(a2 + 64) = 0;
      BOOL v10 = (result & 0xFFFFFFBF) == 2231;
      int v7 = 6;
      int v5 = 7;
LABEL_90:
      char v12 = 1;
      goto LABEL_11;
    case 2297:
    case 2304:
      int v23 = *(unsigned __int8 *)(a2 + 52);
      *(_DWORD *)(a2 + 48) = 7;
      if (!v23) {
        *(unsigned char *)(a2 + 52) = 1;
      }
LABEL_93:
      *(_OWORD *)a2 = xmmword_1CDB0CFA0;
      *(void *)(a2 + 16) = 0;
      if (!*(unsigned char *)(a2 + 36)) {
        *(unsigned char *)(a2 + 36) = 1;
      }
      int v3 = 0;
      char v12 = 0;
      int v5 = 0;
      int v7 = 0;
      int v4 = 6;
      *(_DWORD *)(a2 + 32) = 6;
      *(void *)(a2 + 24) = 0;
      *(void *)(a2 + 40) = 0;
      *(void *)(a2 + 56) = 0x600000002;
      char v11 = 1;
      *(_WORD *)(a2 + 64) = 1;
      BOOL v24 = result == 2304 || result == 2240;
LABEL_199:
      BOOL v10 = v24;
      goto LABEL_202;
    case 2298:
    case 2301:
      int v25 = *(unsigned __int8 *)(a2 + 52);
      *(_DWORD *)(a2 + 48) = 8;
      if (!v25) {
        *(unsigned char *)(a2 + 52) = 1;
      }
LABEL_100:
      *(_OWORD *)a2 = xmmword_1CDB0CFA0;
      *(void *)(a2 + 16) = 0;
      if (!*(unsigned char *)(a2 + 36)) {
        *(unsigned char *)(a2 + 36) = 1;
      }
      *(_DWORD *)(a2 + 32) = 7;
      if (!*(unsigned char *)(a2 + 28)) {
        *(unsigned char *)(a2 + 28) = 1;
      }
      int v3 = 0;
      char v12 = 0;
      char v13 = 0;
      int v7 = 0;
      int v5 = 6;
      *(_DWORD *)(a2 + 24) = 6;
      *(void *)(a2 + 40) = 0;
      *(void *)(a2 + 56) = 0x700000002;
      char v11 = 1;
      *(_WORD *)(a2 + 64) = 1;
      BOOL v10 = (result & 0xFFFFFFBF) == 2237;
      int v4 = 7;
      goto LABEL_203;
    case 2299:
    case 2300:
      int v26 = *(unsigned __int8 *)(a2 + 52);
      *(_DWORD *)(a2 + 48) = 9;
      if (!v26) {
        *(unsigned char *)(a2 + 52) = 1;
      }
LABEL_107:
      *(_OWORD *)a2 = xmmword_1CDB0CFA0;
      *(void *)(a2 + 16) = 0;
      if (!*(unsigned char *)(a2 + 36)) {
        *(unsigned char *)(a2 + 36) = 1;
      }
      *(_DWORD *)(a2 + 32) = 7;
      if (!*(unsigned char *)(a2 + 28)) {
        *(unsigned char *)(a2 + 28) = 1;
      }
      *(_DWORD *)(a2 + 24) = 6;
      if (!*(unsigned char *)(a2 + 44)) {
        *(unsigned char *)(a2 + 44) = 1;
      }
      char v11 = 0;
      char v12 = 0;
      char v13 = 0;
      int v7 = 0;
      int v3 = 8;
      *(_DWORD *)(a2 + 40) = 8;
      *(void *)(a2 + 56) = 0x700000002;
      char v6 = 1;
      *(_WORD *)(a2 + 64) = 1;
      BOOL v10 = (result & 0xFFFFFFBF) == 2236;
      int v5 = 6;
LABEL_53:
      int v4 = 7;
      goto LABEL_11;
    case 2302:
    case 2303:
      int v27 = *(unsigned __int8 *)(a2 + 52);
      *(_DWORD *)(a2 + 48) = 8;
      if (!v27) {
        *(unsigned char *)(a2 + 52) = 1;
      }
LABEL_116:
      *(_OWORD *)a2 = xmmword_1CDB0CFA0;
      *(void *)(a2 + 16) = 0;
      *(void *)(a2 + 32) = 0;
      if (!*(unsigned char *)(a2 + 28)) {
        *(unsigned char *)(a2 + 28) = 1;
      }
      *(_DWORD *)(a2 + 24) = 6;
      if (!*(unsigned char *)(a2 + 44)) {
        *(unsigned char *)(a2 + 44) = 1;
      }
      char v11 = 0;
      int v4 = 0;
      char v13 = 0;
      int v7 = 0;
      int v3 = 7;
      *(_DWORD *)(a2 + 40) = 7;
      *(void *)(a2 + 56) = 0x600000002;
      char v12 = 1;
      *(_WORD *)(a2 + 64) = 1;
      BOOL v10 = (result & 0xFFFFFFBF) == 2239;
      int v5 = 6;
      goto LABEL_203;
    default:
LABEL_140:
      int v3 = 0;
      int v4 = 0;
      int v5 = 0;
      int v7 = 0;
      *(_OWORD *)(a2 + 16) = 0u;
      *(_OWORD *)(a2 + 32) = 0u;
      uint64_t v34 = 1;
      char v11 = 1;
      BOOL v35 = (result & 0xFFFFFFBF) == 2184;
LABEL_185:
      *(void *)(a2 + 56) = v34;
      *(_WORD *)(a2 + 64) = 1;
      BOOL v10 = v35;
      char v12 = 1;
LABEL_202:
      char v13 = 1;
LABEL_203:
      char v6 = 1;
LABEL_11:
      *(unsigned char *)(a2 + 66) = v10;
      *(int32x4_t *)a2 = vaddq_s32(vdupq_n_s32(a3), (int32x4_t)xmmword_1CDB0CFA0);
      if ((v6 & 1) == 0) {
        *(_DWORD *)(a2 + 16) = v7 + a3;
      }
      if ((v13 & 1) == 0) {
        *(_DWORD *)(a2 + 24) = v5 + a3;
      }
      if ((v12 & 1) == 0) {
        *(_DWORD *)(a2 + 32) = v4 + a3;
      }
      if ((v11 & 1) == 0) {
        *(_DWORD *)(a2 + 40) = v3 + a3;
      }
      if (*(unsigned char *)(a2 + 52)) {
        *(_DWORD *)(a2 + 48) += a3;
      }
      return result;
  }
}

uint64_t sub_1CBDB241C(uint64_t result)
{
  switch((int)result)
  {
    case 7:
      uint64_t result = 8;
      break;
    case 8:
      uint64_t result = 9;
      break;
    case 9:
      uint64_t result = 10;
      break;
    case 10:
      uint64_t result = 12;
      break;
    case 11:
      uint64_t result = 13;
      break;
    case 12:
      uint64_t result = 14;
      break;
    case 13:
      uint64_t result = 15;
      break;
    case 14:
      uint64_t result = 25;
      break;
    case 15:
    case 38:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 58:
      __break(1u);
      goto LABEL_48;
    case 16:
LABEL_48:
      uint64_t result = 32;
      break;
    case 17:
      uint64_t result = 48;
      break;
    case 18:
      uint64_t result = 49;
      break;
    case 19:
      uint64_t result = 50;
      break;
    case 20:
      uint64_t result = 51;
      break;
    case 21:
      uint64_t result = 52;
      break;
    case 22:
      uint64_t result = 53;
      break;
    case 23:
      uint64_t result = 56;
      break;
    case 24:
      uint64_t result = 57;
      break;
    case 25:
      uint64_t result = 58;
      break;
    case 26:
      uint64_t result = 59;
      break;
    case 27:
      uint64_t result = 60;
      break;
    case 28:
      uint64_t result = 124;
      break;
    case 29:
      uint64_t result = 62;
      break;
    case 30:
      uint64_t result = 63;
      break;
    case 31:
      uint64_t result = 76;
      break;
    case 32:
      uint64_t result = 77;
      break;
    case 33:
      uint64_t result = 78;
      break;
    case 34:
      uint64_t result = 79;
      break;
    case 35:
      uint64_t result = 80;
      break;
    case 36:
      uint64_t result = 81;
      break;
    case 37:
      uint64_t result = 82;
      break;
    case 39:
      uint64_t result = 17;
      break;
    case 40:
      uint64_t result = 18;
      break;
    case 41:
      uint64_t result = 19;
      break;
    case 42:
      uint64_t result = 20;
      break;
    case 43:
      uint64_t result = 21;
      break;
    case 44:
      uint64_t result = 24;
      break;
    case 52:
      uint64_t result = 28;
      break;
    case 53:
      uint64_t result = 30;
      break;
    case 54:
      uint64_t result = 31;
      break;
    case 55:
      uint64_t result = 96;
      break;
    case 56:
      uint64_t result = 97;
      break;
    case 57:
      uint64_t result = 98;
      break;
    case 59:
      uint64_t result = 146;
      break;
    case 60:
      uint64_t result = 147;
      break;
    case 61:
      uint64_t result = 144;
      break;
    case 62:
      uint64_t result = 118;
      break;
    case 63:
      uint64_t result = 119;
      break;
    case 64:
      uint64_t result = 116;
      break;
    case 65:
      uint64_t result = 115;
      break;
    case 66:
      uint64_t result = 113;
      break;
    case 67:
      uint64_t result = 114;
      break;
    case 68:
      uint64_t result = 104;
      break;
    case 69:
      uint64_t result = 105;
      break;
    case 70:
      uint64_t result = 112;
      break;
    case 71:
      uint64_t result = 23;
      break;
    case 72:
      uint64_t result = 100;
      break;
    case 73:
      uint64_t result = 101;
      break;
    case 74:
      uint64_t result = 102;
      break;
    case 75:
      uint64_t result = 103;
      break;
    case 76:
      uint64_t result = 117;
      break;
    case 77:
      uint64_t result = 120;
      break;
    case 78:
      uint64_t result = 121;
      break;
    case 79:
      uint64_t result = 54;
      break;
    default:
      return result;
  }
  return result;
}

#error "1CBDB2780: too big function (funcsize=0)"

char *sub_1CBE04154(int a1)
{
  return (char *)&unk_1CDFA0C64 + 4 * qword_1CDFCDA08[a1 - 359];
}

#error "1CBE0418C: too big function (funcsize=0)"

#error "1CBE1DE3C: too big function (funcsize=0)"

uint64_t sub_1CBE52E5C(int a1)
{
  uint64_t result = sub_1CBE52E8C(a1);
  if ((result & 0xFF00000000) == 0) {
    llvm::report_fatal_error((llvm *)"Unknown Opcode", (const llvm::Twine *)1);
  }
  return result;
}

uint64_t sub_1CBE52E8C(int a1)
{
  if ((a1 - 359) > 0x22DC) {
    return 0;
  }
  else {
    return qword_1CDFF3660[a1 - 359] | 0x100000000;
  }
}

uint64_t sub_1CBE52EB8(int a1, uint64_t a2, int a3)
{
  v12[8] = *MEMORY[0x1E4F143B8];
  int v5 = sub_1CBE1DE3C();
  char v6 = sub_1CBE04154(a1);
  v11[0] = v12;
  v11[1] = 0x1000000000;
  sub_1CBE559EC((unsigned int *)v11, v6, &v6[4 * v7]);
  uint64_t v8 = (void *)v11[0];
  *(_DWORD *)(v11[0] + 4 * v5) = a3;
  if ((sub_1CBE52E8C(a1) & 0xFF00000000) == 0) {
    llvm::report_fatal_error((llvm *)"Unknown Opcode", (const llvm::Twine *)1);
  }
  uint64_t result = sub_1CBE0418C();
  if (v8 != v12)
  {
    uint64_t v10 = result;
    free(v8);
    return v10;
  }
  return result;
}

uint64_t sub_1CBE52FAC(int a1)
{
  uint64_t v1 = sub_1CBE52E8C(a1);
  if ((v1 & 0xFF00000000) == 0) {
    llvm::report_fatal_error((llvm *)"Unknown Opcode", (const llvm::Twine *)1);
  }
  return (v1 < 0x2A) & (0x30030000000uLL >> v1);
}

uint64_t sub_1CBE52FF4(int a1)
{
  if (a1 <= 63)
  {
    if (a1 != 32) {
      goto LABEL_13;
    }
    return 14;
  }
  else
  {
    if (a1 <= 127)
    {
      if (a1 == 64) {
        return 28;
      }
LABEL_13:
      llvm::report_fatal_error((llvm *)"Invalid size", (const llvm::Twine *)1);
    }
    switch(a1)
    {
      case 128:
        return 64;
      case 256:
        return 105;
      case 512:
        return 127;
      default:
        goto LABEL_13;
    }
  }
}

BOOL sub_1CBE53070(int a1)
{
  return (a1 - 14) <= 0x32 && ((1 << (a1 - 14)) & 0x4000000004001) != 0
      || a1 == 105
      || a1 == 127;
}

BOOL sub_1CBE530B4(int a1, unsigned int a2)
{
  uint64_t v4 = sub_1CBE52E8C(a1);
  if ((v4 & 0xFF00000000) == 0) {
    return a1 == 19 || a1 == 263;
  }
  int v5 = v4 - 1;
  BOOL result = 1;
  switch(v5)
  {
    case 0:
    case 1:
    case 6:
    case 8:
    case 22:
    case 23:
    case 24:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 53:
    case 58:
    case 59:
    case 65:
    case 66:
    case 75:
    case 76:
    case 80:
    case 81:
    case 83:
    case 85:
    case 87:
    case 88:
    case 89:
    case 94:
    case 95:
    case 108:
    case 109:
    case 111:
    case 113:
    case 114:
    case 115:
    case 116:
    case 118:
    case 119:
    case 124:
    case 127:
    case 128:
    case 129:
    case 130:
    case 131:
    case 132:
    case 133:
    case 134:
    case 135:
    case 136:
    case 137:
    case 138:
    case 139:
    case 140:
    case 141:
    case 142:
    case 143:
    case 144:
    case 147:
    case 149:
    case 151:
    case 152:
    case 153:
    case 154:
    case 155:
    case 156:
    case 157:
    case 158:
    case 159:
    case 160:
    case 161:
    case 162:
    case 169:
    case 170:
    case 171:
    case 174:
    case 175:
    case 176:
    case 177:
    case 178:
    case 179:
    case 180:
    case 181:
    case 182:
    case 183:
    case 184:
    case 185:
    case 186:
    case 194:
    case 200:
    case 201:
    case 202:
      return result;
    case 27:
    case 28:
    case 39:
    case 40:
      BOOL result = a2 < 4;
      break;
    default:
      return a1 == 19 || a1 == 263;
  }
  return result;
}

uint64_t *sub_1CBE53460@<X0>(uint64_t *result@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  switch(a2)
  {
    case 9:
    case 20:
    case 30:
    case 59:
    case 60:
      uint64_t v3 = *result;
      goto LABEL_3;
    case 10:
      long long v16 = *((_OWORD *)result + 70);
      *(_OWORD *)a3 = *((_OWORD *)result + 69);
      *(_OWORD *)(a3 + 16) = v16;
      uint64_t v5 = result[142];
      goto LABEL_6;
    case 11:
    case 21:
    case 31:
    case 57:
      long long v8 = *((_OWORD *)result + 12);
      *(_OWORD *)a3 = *((_OWORD *)result + 11);
      *(_OWORD *)(a3 + 16) = v8;
      uint64_t v5 = result[26];
      goto LABEL_6;
    case 12:
      long long v19 = *((_OWORD *)result + 65);
      *(_OWORD *)a3 = *((_OWORD *)result + 64);
      *(_OWORD *)(a3 + 16) = v19;
      uint64_t v5 = result[132];
      goto LABEL_6;
    case 13:
      char v13 = result + 133;
      uint64_t v14 = result[137];
      goto LABEL_14;
    case 14:
      long long v20 = *((_OWORD *)result + 60);
      *(_OWORD *)a3 = *((_OWORD *)result + 59);
      *(_OWORD *)(a3 + 16) = v20;
      uint64_t v5 = result[122];
      goto LABEL_6;
    case 15:
      char v13 = result + 123;
      uint64_t v14 = result[127];
      goto LABEL_14;
    case 16:
    case 26:
    case 33:
    case 61:
      long long v10 = *((_OWORD *)result + 44);
      *(_OWORD *)a3 = *((_OWORD *)result + 43);
      *(_OWORD *)(a3 + 16) = v10;
      uint64_t v5 = result[90];
      goto LABEL_6;
    case 17:
    case 27:
    case 34:
    case 62:
      uint64_t v6 = *result;
      goto LABEL_5;
    case 18:
    case 28:
    case 35:
    case 64:
      uint64_t v11 = *result;
      goto LABEL_11;
    case 19:
    case 29:
    case 32:
    case 65:
      char v13 = result + 143;
      uint64_t v14 = result[147];
      goto LABEL_14;
    case 22:
    case 36:
      uint64_t v3 = result[96];
      goto LABEL_3;
    case 23:
    case 37:
      uint64_t v6 = result[96];
      goto LABEL_5;
    case 24:
    case 38:
      uint64_t v11 = result[96];
      goto LABEL_11;
    case 25:
    case 39:
      uint64_t v17 = result[96];
      goto LABEL_20;
    case 54:
      uint64_t v3 = result[64];
      goto LABEL_3;
    case 55:
      uint64_t v6 = result[64];
      goto LABEL_5;
    case 56:
      uint64_t v11 = result[64];
      goto LABEL_11;
    case 58:
      long long v9 = *(_OWORD *)(result + 29);
      *(_OWORD *)a3 = *(_OWORD *)(result + 27);
      *(_OWORD *)(a3 + 16) = v9;
      uint64_t v5 = result[31];
      goto LABEL_6;
    case 63:
      char v13 = result + 91;
      uint64_t v14 = result[95];
      goto LABEL_14;
    case 66:
      uint64_t v3 = result[32];
LABEL_3:
      long long v4 = *(_OWORD *)(v3 + 16);
      *(_OWORD *)a3 = *(_OWORD *)v3;
      *(_OWORD *)(a3 + 16) = v4;
      uint64_t v5 = *(void *)(v3 + 32);
      goto LABEL_6;
    case 67:
      uint64_t v6 = result[32];
LABEL_5:
      long long v7 = *(_OWORD *)(v6 + 56);
      *(_OWORD *)a3 = *(_OWORD *)(v6 + 40);
      *(_OWORD *)(a3 + 16) = v7;
      uint64_t v5 = *(void *)(v6 + 72);
      goto LABEL_6;
    case 68:
      uint64_t v11 = result[32];
LABEL_11:
      long long v12 = *(_OWORD *)(v11 + 96);
      *(_OWORD *)a3 = *(_OWORD *)(v11 + 80);
      *(_OWORD *)(a3 + 16) = v12;
      uint64_t v5 = *(void *)(v11 + 112);
      goto LABEL_6;
    case 69:
      uint64_t v17 = result[32];
LABEL_20:
      long long v18 = *(_OWORD *)(v17 + 136);
      *(_OWORD *)a3 = *(_OWORD *)(v17 + 120);
      *(_OWORD *)(a3 + 16) = v18;
      uint64_t v5 = *(void *)(v17 + 152);
      goto LABEL_6;
    case 70:
      uint64_t v21 = result[32];
      long long v22 = *(_OWORD *)(v21 + 176);
      *(_OWORD *)a3 = *(_OWORD *)(v21 + 160);
      *(_OWORD *)(a3 + 16) = v22;
      uint64_t v5 = *(void *)(v21 + 192);
      goto LABEL_6;
    case 71:
      uint64_t v23 = result[32];
      long long v24 = *(_OWORD *)(v23 + 216);
      *(_OWORD *)a3 = *(_OWORD *)(v23 + 200);
      *(_OWORD *)(a3 + 16) = v24;
      uint64_t v5 = *(void *)(v23 + 232);
LABEL_6:
      *(void *)(a3 + 32) = v5;
      break;
    case 72:
      char v13 = result + 81;
      uint64_t v14 = result[85];
LABEL_14:
      *(void *)(a3 + 32) = v14;
      long long v15 = v13[1];
      *(_OWORD *)a3 = *v13;
      *(_OWORD *)(a3 + 16) = v15;
      break;
    default:
      *(unsigned char *)a3 = 0;
      *(unsigned char *)(a3 + 32) = 0;
      break;
  }
  return result;
}

uint64_t sub_1CBE53724(unint64_t a1, uint64_t a2, int a3, int a4, unsigned int a5)
{
  int v6 = a2;
  uint64_t v18 = a2;
  unint64_t v19 = a1;
  int v16 = a4;
  int v17 = a3;
  if (a5 == 5) {
    uint64_t v8 = 4;
  }
  else {
    uint64_t v8 = a5;
  }
  memset(v20, 0, 13);
  uint64_t v9 = v8 | 0x100000000;
  unint64_t v10 = HIDWORD(a1);
  if (v8 > 3)
  {
    if (v8 != 4)
    {
      sub_1CBE57D30(v9, (int *)&v19, (int *)&v18, &v16, &v17, v20);
      BYTE1(v20[1]) = 1;
      goto LABEL_22;
    }
    if (a3 == 1)
    {
      HIBYTE(v20[0]) = 1;
    }
    else if (a3 == 2)
    {
      LOBYTE(v20[1]) = 1;
    }
    if ((a2 - 1) >= 2)
    {
      if (!a2 || a2 == 5 || (a2 - 3) > 1)
      {
LABEL_12:
        sub_1CBE57D30(v9, (int *)&v19, (int *)&v18, &v16, &v17, v20);
        BYTE1(v20[1]) = 1;
        if (v10 == 1) {
          goto LABEL_21;
        }
        goto LABEL_22;
      }
      uint64_t v11 = (char *)v20 + 2;
    }
    else
    {
      uint64_t v11 = v20;
      if (v10)
      {
        if (v10 == 1)
        {
          uint64_t v11 = (char *)v20 + 1;
        }
        else if (v10 != 2)
        {
          sub_1CBE57D30(v9, (int *)&v19, (int *)&v18, &v16, &v17, v20);
          long long v15 = (char *)&v20[1] + 1;
          goto LABEL_44;
        }
      }
    }
    *uint64_t v11 = 1;
    goto LABEL_12;
  }
  if (a3 == 1)
  {
    HIBYTE(v20[0]) = 1;
  }
  else if (a3 == 2)
  {
    LOBYTE(v20[1]) = 1;
  }
  if ((a2 - 1) >= 2)
  {
    if (a2 && a2 != 5 && (a2 - 3) <= 1)
    {
      long long v12 = (char *)v20 + 2;
      goto LABEL_19;
    }
  }
  else
  {
    long long v12 = v20;
    switch(v10)
    {
      case 0:
LABEL_19:
        *long long v12 = 1;
        break;
      case 1:
        long long v12 = (char *)v20 + 1;
        goto LABEL_19;
      case 2:
        goto LABEL_19;
    }
  }
  sub_1CBE57BBC(v9, (int *)&v19, (int *)&v18, &v16, &v17, v20);
  BYTE1(v20[1]) = 1;
  if (HIDWORD(v19) == 1) {
LABEL_21:
  }
    BYTE2(v20[1]) = 1;
LABEL_22:
  BOOL v13 = v8 == 4;
  if (v6 != 5) {
    goto LABEL_23;
  }
  if (v8 < 4)
  {
    BYTE3(v20[1]) = 1;
    if (a4 != 1) {
      return v20[0];
    }
LABEL_51:
    BYTE4(v20[1]) = 1;
    return v20[0];
  }
  if (v8 != 4)
  {
    BOOL v13 = 0;
    goto LABEL_23;
  }
  long long v15 = (char *)&v20[1] + 3;
LABEL_44:
  BOOL v13 = 1;
  *long long v15 = 1;
LABEL_23:
  if (v8 < 4) {
    BOOL v13 = 1;
  }
  if (a4 == 1 && v13) {
    goto LABEL_51;
  }
  return v20[0];
}

void sub_1CBE539B8(int a1@<W0>, int a2@<W1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, unsigned char *a6@<X5>, unsigned int a7@<W6>, int a8@<W7>, void *a9@<X8>, __n128 a10@<Q0>)
{
  v40[192] = *MEMORY[0x1E4F143B8];
  if ((a3 - 1) < 2 && a6[2] == 0) {
    int v12 = 0;
  }
  else {
    int v12 = a3;
  }
  if (a6[5]) {
    int v13 = HIDWORD(a3);
  }
  else {
    int v13 = 0;
  }
  if (!a6[8]) {
    a4 = 0;
  }
  if (a2 == 2 && v12 | a5 | a4 | v13) {
    llvm::report_fatal_error((llvm *)"No sampler flags can be used with 2DMSAA samples", (const llvm::Twine *)1);
  }
  *a9 = a9 + 2;
  a10.n128_u64[0] = 0x1000000000;
  a9[1] = 0x1000000000;
  if (a7 <= 4)
  {
    sub_1CBE59A24();
    sub_1CBE545D0((uint64_t)a9, (uint64_t)&v38);
    uint64_t v14 = (char *)v38;
    if (!v39) {
      goto LABEL_20;
    }
    uint64_t v15 = 96 * v39;
    do
    {
      int v16 = *(char **)&v14[v15 - 72];
      if (&v14[v15 - 56] != v16)
      {
        uint64_t v34 = v14;
        free(v16);
        uint64_t v14 = v34;
      }
      v15 -= 96;
    }
    while (v15);
    goto LABEL_19;
  }
  if (a8 == 94)
  {
    sub_1CBE5ABB0();
    sub_1CBE545D0((uint64_t)a9, (uint64_t)&v38);
    uint64_t v14 = (char *)v38;
    if (v39)
    {
      uint64_t v25 = 96 * v39;
      do
      {
        int v26 = *(char **)&v14[v25 - 72];
        if (&v14[v25 - 56] != v26)
        {
          BOOL v35 = v14;
          free(v26);
          uint64_t v14 = v35;
        }
        v25 -= 96;
      }
      while (v25);
LABEL_19:
      uint64_t v14 = (char *)v38;
    }
  }
  else if (a8 == 61)
  {
    if (a1) {
      unsigned int v28 = 2;
    }
    else {
      unsigned int v28 = 1;
    }
    sub_1CBE5A8FC((uint64_t)a6, a2, v12, v28, (uint64_t *)&v38, a10);
    sub_1CBE545D0((uint64_t)a9, (uint64_t)&v38);
    uint64_t v14 = (char *)v38;
    if (v39)
    {
      uint64_t v29 = 96 * v39;
      do
      {
        uint64_t v30 = *(char **)&v14[v29 - 72];
        if (&v14[v29 - 56] != v30)
        {
          int v36 = v14;
          free(v30);
          uint64_t v14 = v36;
        }
        v29 -= 96;
      }
      while (v29);
      goto LABEL_19;
    }
  }
  else
  {
    sub_1CBE5AF74((uint64_t)a6, a2, v12, (uint64_t *)&v38, a10);
    sub_1CBE545D0((uint64_t)a9, (uint64_t)&v38);
    uint64_t v14 = (char *)v38;
    if (v39)
    {
      uint64_t v31 = 96 * v39;
      do
      {
        int v32 = *(char **)&v14[v31 - 72];
        if (&v14[v31 - 56] != v32)
        {
          int v37 = v14;
          free(v32);
          uint64_t v14 = v37;
        }
        v31 -= 96;
      }
      while (v31);
      goto LABEL_19;
    }
  }
LABEL_20:
  if (v14 != (char *)v40) {
    free(v14);
  }
  if (v13 != 2)
  {
    uint64_t v17 = *a9;
    uint64_t v18 = *((unsigned int *)a9 + 2);
    if (v18)
    {
      uint64_t v19 = 0;
      uint64_t v20 = v17 + 96 * v18;
      uint64_t v21 = 96 * v18;
      while (*(_DWORD *)(v17 + v19) != 1
           || *(_DWORD *)(v17 + v19 + 32) != 1
           || *(_DWORD *)(*(void *)(v17 + v19 + 24) + 8) != 1)
      {
        v19 += 96;
        if (v21 == v19) {
          goto LABEL_47;
        }
      }
      uint64_t v20 = v17 + v19;
      if (v21 - 96 != v19)
      {
        long long v22 = (long long *)(v20 + 96);
        uint64_t v23 = v21 - v19 - 96;
        do
        {
          if (*(_DWORD *)v22 != 1 || *((_DWORD *)v22 + 8) != 1 || *(_DWORD *)(*((void *)v22 + 3) + 8) != 1)
          {
            long long v24 = *v22;
            *(void *)(v20 + 16) = *((void *)v22 + 2);
            *(_OWORD *)uint64_t v20 = v24;
            sub_1CBB40240(v20 + 24, (uint64_t)v22 + 24);
            v20 += 96;
          }
          v22 += 6;
          v23 -= 96;
        }
        while (v23);
        uint64_t v17 = *a9;
        LODWORD(v18) = *((_DWORD *)a9 + 2);
      }
    }
    else
    {
      uint64_t v20 = *a9;
    }
LABEL_47:
    uint64_t v27 = v17 + 96 * v18;
    if (v27 != v20)
    {
      do
      {
        int v33 = *(void **)(v27 - 72);
        if ((void *)(v27 - 56) != v33) {
          free(v33);
        }
        v27 -= 96;
      }
      while (v27 != v20);
      uint64_t v17 = *a9;
    }
    *((_DWORD *)a9 + 2) = -1431655765 * ((unint64_t)(v20 - v17) >> 5);
  }
}

void sub_1CBE53DB4(unint64_t *a1@<X0>, unsigned int a2@<W1>, int a3@<W2>, uint64_t *a4@<X8>, __n128 a5@<Q0>)
{
  unint64_t v5 = *a1;
  sub_1CBE53DE4((4 * *a1) & 0x300000000 | (*a1 >> 2) & 7, (v5 >> 26) & 3, (v5 >> 23) & 7, (v5 >> 44) & 7, (v5 >> 38) & 7, (v5 >> 41) & 7, a2, a3, a4, a5);
}

void sub_1CBE53DE4(unint64_t a1@<X0>, unsigned int a2@<W1>, unsigned int a3@<W2>, unsigned int a4@<W3>, unsigned int a5@<W4>, unsigned int a6@<W5>, unsigned int a7@<W6>, int a8@<W7>, uint64_t *a9@<X8>, __n128 a10@<Q0>)
{
  unint64_t v13 = HIDWORD(a1);
  if (!(a1 | a2))
  {
    if (!a6)
    {
      char v14 = 0;
      int v16 = 1;
      goto LABEL_12;
    }
LABEL_10:
    int v16 = 0;
    char v14 = 1;
    goto LABEL_12;
  }
  char v14 = 0;
  BOOL v15 = a1 != 4 && a1 > 1;
  int v16 = 1;
  if (!v15 && HIDWORD(a1) == 2 && a6) {
    goto LABEL_10;
  }
LABEL_12:
  unsigned int v17 = a7 - 1;
  unsigned int v18 = a4 & 0xFFFFFF00;
  unsigned int v19 = a5 >> 8;
  if (a1 == 4) {
    unsigned __int8 v20 = a5;
  }
  else {
    unsigned __int8 v20 = 0;
  }
  if (a1 == 3) {
    int v21 = 0;
  }
  else {
    int v21 = HIDWORD(a1);
  }
  BOOL v22 = v17 > 4;
  if (v17 <= 4) {
    unsigned __int8 v23 = a6;
  }
  else {
    unsigned __int8 v23 = 0;
  }
  if (v17 <= 4) {
    unsigned int v24 = a6 >> 8;
  }
  else {
    unsigned int v24 = v16;
  }
  uint64_t v25 = !v22 && a1 == 4;
  if (v22) {
    unsigned __int8 v26 = 0;
  }
  else {
    unsigned __int8 v26 = v20;
  }
  if (v22)
  {
    unsigned int v19 = v16;
    int v27 = 0;
  }
  else
  {
    int v27 = a4;
  }
  if (v22) {
    unsigned int v18 = 0;
  }
  else {
    LODWORD(v13) = v21;
  }
  uint64_t v28 = v22 || a1 != 3;
  if (a7 <= 4)
  {
    ((void (*)(void))loc_1CBE5E850)();
    sub_1CBE54974(v14, a9);
LABEL_56:
    sub_1CBE54C6C(a4, a9);
    return;
  }
  if (a7 == 5)
  {
    if (a8 != 61)
    {
      if (a8 != 94)
      {
        if (a8 == 95)
        {
          unsigned __int8 v23 = 0;
          unsigned int v24 = 0;
          uint64_t v25 = 0;
        }
        else
        {
          uint64_t v25 = v25;
        }
        if (a8 == 95)
        {
          unsigned __int8 v26 = 0;
          unsigned int v19 = 0;
          LODWORD(v13) = 0;
          uint64_t v28 = 0;
        }
        else
        {
          uint64_t v28 = v28;
        }
        goto LABEL_55;
      }
      if (a1 == 4) {
        uint64_t v25 = v25;
      }
      else {
        uint64_t v25 = 1;
      }
      if (a1 != 4)
      {
        unsigned __int8 v26 = 1;
        unsigned int v19 = 0;
      }
      if (a1 == 3) {
        uint64_t v28 = 1;
      }
      else {
        uint64_t v28 = v28;
      }
      if (a1 == 3) {
        LODWORD(v13) = 0;
      }
      goto LABEL_69;
    }
  }
  else
  {
    if (a8 == 94)
    {
LABEL_69:
      int v29 = v23 | (v24 << 8);
      if (v16) {
        unsigned int v30 = v29;
      }
      else {
        unsigned int v30 = 0;
      }
      sub_1CBE5CCBC(a1, v13 | (unint64_t)(v28 << 32), a2, v26 | ((*(void *)&v19 & 0xFFFFFFLL) << 8) | (v25 << 32), v30, 3u, a9);
      sub_1CBE54974(v14, a9);
      return;
    }
    if (a8 != 61)
    {
LABEL_55:
      sub_1CBE5D238(0, v13 | (unint64_t)(v28 << 32), 0, a3, v18 | v27, v26 | ((*(void *)&v19 & 0xFFFFFFLL) << 8) | (v25 << 32), v23 | (v24 << 8), 3u, a9);
      goto LABEL_56;
    }
  }

  sub_1CBE5CBAC(a2, a9, a10);
}

uint64_t sub_1CBE54050(uint64_t a1, uint64_t a2, void *a3, unsigned char *a4, unsigned int a5, __n128 a6, uint64_t a7, int a8)
{
  v53[192] = *MEMORY[0x1E4F143B8];
  int v9 = *(_DWORD *)(a2 + 92);
  *(void *)(a1 + 8) = a1 + 24;
  unint64_t v10 = (void **)(a1 + 8);
  a6.n128_u64[0] = 0x1000000000;
  *(void *)(a1 + 16) = 0x1000000000;
  int v51 = v53;
  uint64_t v52 = 0x1000000000;
  *(unsigned char *)a1 = v9 != -1;
  if (v9 == -1)
  {
    sub_1CBE539B8(*(unsigned __int8 *)(a2 + 2), (*a3 >> 2) & 7, *a3 & 0x300000000 | (*a3 >> 7) & 7, *a3 & 3, (*a3 >> 10) & 1, a4, a5, a8, &v48, a6);
    sub_1CBE545D0((uint64_t)&v51, (uint64_t)&v48);
    uint64_t v11 = (char *)v48;
    if (!v49) {
      goto LABEL_9;
    }
    uint64_t v12 = 96 * v49;
    do
    {
      unint64_t v13 = *(char **)&v11[v12 - 72];
      if (&v11[v12 - 56] != v13) {
        free(v13);
      }
      v12 -= 96;
    }
    while (v12);
    goto LABEL_8;
  }
  sub_1CBE53DE4((4 * *a3) & 0x300000000 | (*a3 >> 2) & 7, (*a3 >> 26) & 3, (*a3 >> 23) & 7, (*a3 >> 44) & 7, (*a3 >> 38) & 7, (*a3 >> 41) & 7, a5, a8, (uint64_t *)&v48, a6);
  sub_1CBE545D0((uint64_t)&v51, (uint64_t)&v48);
  uint64_t v11 = (char *)v48;
  if (v49)
  {
    uint64_t v34 = 96 * v49;
    do
    {
      BOOL v35 = *(char **)&v11[v34 - 72];
      if (&v11[v34 - 56] != v35) {
        free(v35);
      }
      v34 -= 96;
    }
    while (v34);
LABEL_8:
    uint64_t v11 = (char *)v48;
  }
LABEL_9:
  if (v11 != (char *)&v50) {
    free(v11);
  }
  unsigned int v14 = v52;
  if (v10 != &v51)
  {
    uint64_t v15 = *(unsigned int *)(a1 + 16);
    if (v15 >= v52)
    {
      if (v52)
      {
        uint64_t v28 = (char *)*v10;
        uint64_t v44 = 96 * v52;
        int v45 = (char *)v51 + 24;
        do
        {
          long long v46 = *(_OWORD *)(v45 - 24);
          *((void *)v28 + 2) = *((void *)v45 - 1);
          *(_OWORD *)uint64_t v28 = v46;
          sub_1CBE558F4((uint64_t)(v28 + 24), (uint64_t)v45);
          v28 += 96;
          v45 += 96;
          v44 -= 96;
        }
        while (v44);
        LODWORD(v15) = *(_DWORD *)(a1 + 16);
        int v27 = *(char **)(a1 + 8);
      }
      else
      {
        int v27 = (char *)*v10;
        uint64_t v28 = (char *)*v10;
      }
      for (i = &v27[96 * v15]; i != v28; i -= 96)
      {
        int v47 = (char *)*((void *)i - 9);
        if (i - 56 != v47) {
          free(v47);
        }
      }
    }
    else
    {
      if (*(_DWORD *)(a1 + 20) < v52)
      {
        if (v15)
        {
          int v36 = (char *)*v10;
          uint64_t v37 = 96 * v15;
          do
          {
            BOOL v38 = *(char **)&v36[v37 - 72];
            if (&v36[v37 - 56] != v38) {
              free(v38);
            }
            v37 -= 96;
          }
          while (v37);
        }
        *(_DWORD *)(a1 + 16) = 0;
        sub_1CD423078();
      }
      if (v15)
      {
        uint64_t v39 = (uint64_t)*v10 + 24;
        uint64_t v40 = *(unsigned int *)(a1 + 16);
        uint64_t v41 = 96 * v15;
        int v42 = (char *)v51 + 24;
        do
        {
          long long v43 = *(_OWORD *)(v42 - 24);
          *(void *)(v39 - 8) = *((void *)v42 - 1);
          *(_OWORD *)(v39 - 24) = v43;
          uint64_t v39 = sub_1CBE558F4(v39, (uint64_t)v42) + 96;
          v42 += 96;
          v41 -= 96;
        }
        while (v41);
        uint64_t v16 = v40;
      }
      else
      {
        uint64_t v16 = 0;
      }
      if (v16 != v52)
      {
        unsigned int v17 = (char *)v51;
        unsigned int v18 = (char *)*v10;
        uint64_t v19 = 96 * v16;
        uint64_t v20 = 96 * v52;
        do
        {
          int v21 = &v18[v19];
          BOOL v22 = &v17[v19];
          long long v23 = *(_OWORD *)&v17[v19];
          *((void *)v21 + 2) = *(void *)&v17[v19 + 16];
          *(_OWORD *)int v21 = v23;
          unsigned int v24 = &v18[v19 + 40];
          *(void *)&v18[v19 + 24] = v24;
          *((void *)v21 + 4) = 0x200000000;
          unsigned int v25 = *(_DWORD *)&v17[v19 + 32];
          if (v25) {
            BOOL v26 = v22 == v21;
          }
          else {
            BOOL v26 = 1;
          }
          if (!v26)
          {
            if (v25 >= 3) {
              llvm::SmallVectorBase<unsigned int>::grow_pod();
            }
            memcpy(v24, *((const void **)v22 + 3), 28 * *(unsigned int *)&v17[v19 + 32]);
            *((_DWORD *)v21 + 8) = v25;
          }
          v18 += 96;
          v17 += 96;
          v20 -= 96;
        }
        while (v19 != v20);
      }
    }
    *(_DWORD *)(a1 + 16) = v14;
    unsigned int v14 = v52;
  }
  unsigned int v30 = (char *)v51;
  if (v14)
  {
    uint64_t v31 = 96 * v14;
    do
    {
      int v32 = *(char **)&v30[v31 - 72];
      if (&v30[v31 - 56] != v32) {
        free(v32);
      }
      v31 -= 96;
    }
    while (v31);
    unsigned int v30 = (char *)v51;
  }
  if (v30 != (char *)v53) {
    free(v30);
  }
  return a1;
}

uint64_t sub_1CBE54498(uint64_t a1, void *a2, unsigned int a3)
{
  v17[192] = *MEMORY[0x1E4F143B8];
  *(void *)(a1 + 8) = a1 + 24;
  uint64_t v4 = a1 + 8;
  *(unsigned char *)a1 = 1;
  *(void *)(a1 + 16) = 0x1000000000;
  unsigned int v5 = (*a2 >> 5) & 3;
  uint64_t v6 = (*a2 >> 22) & 1;
  unsigned int v7 = (*a2 >> 7) & 7;
  unsigned int v8 = (*a2 >> 23) & 3;
  if (a3 == 5) {
    unsigned int v9 = 4;
  }
  else {
    unsigned int v9 = a3;
  }
  sub_1CBE5E838(v7, v8, v5, v6, (uint64_t *)&v15, v9);
  sub_1CBE545D0(v4, (uint64_t)&v15);
  unint64_t v10 = (char *)v15;
  if (v16)
  {
    uint64_t v11 = 96 * v16;
    do
    {
      uint64_t v12 = *(char **)&v10[v11 - 72];
      if (&v10[v11 - 56] != v12)
      {
        unsigned int v14 = v10;
        free(v12);
        unint64_t v10 = v14;
      }
      v11 -= 96;
    }
    while (v11);
    unint64_t v10 = (char *)v15;
  }
  if (v10 != (char *)v17) {
    free(v10);
  }
  return a1;
}

uint64_t sub_1CBE545D0(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    uint64_t v4 = *(char **)a2;
    if (*(void *)a2 == a2 + 16)
    {
      unsigned int v5 = *(_DWORD *)(a2 + 8);
      uint64_t v6 = *(unsigned int *)(a1 + 8);
      if (v6 >= v5)
      {
        long long v23 = *(char **)a1;
        if (v5)
        {
          uint64_t v37 = &v4[96 * v5];
          do
          {
            long long v38 = *(_OWORD *)v4;
            *((void *)v23 + 2) = *((void *)v4 + 2);
            *(_OWORD *)long long v23 = v38;
            sub_1CBB40240((uint64_t)(v23 + 24), (uint64_t)(v4 + 24));
            v23 += 96;
            v4 += 96;
          }
          while (v4 != v37);
          unsigned int v24 = v23;
          LODWORD(v6) = *(_DWORD *)(a1 + 8);
          long long v23 = *(char **)a1;
        }
        else
        {
          unsigned int v24 = *(char **)a1;
        }
        for (i = &v23[96 * v6]; i != v24; i -= 96)
        {
          uint64_t v39 = (char *)*((void *)i - 9);
          if (i - 56 != v39) {
            free(v39);
          }
        }
        *(_DWORD *)(a1 + 8) = v5;
        uint64_t v26 = *(unsigned int *)(a2 + 8);
        if (v26)
        {
          int v27 = *(char **)a2;
          uint64_t v28 = 96 * v26;
          do
          {
            int v29 = *(char **)&v27[v28 - 72];
            if (&v27[v28 - 56] != v29) {
              free(v29);
            }
            v28 -= 96;
          }
          while (v28);
        }
      }
      else
      {
        if (*(_DWORD *)(a1 + 12) < v5)
        {
          if (v6)
          {
            unsigned int v30 = *(char **)a1;
            uint64_t v31 = 96 * v6;
            do
            {
              int v32 = *(char **)&v30[v31 - 72];
              if (&v30[v31 - 56] != v32) {
                free(v32);
              }
              v31 -= 96;
            }
            while (v31);
          }
          *(_DWORD *)(a1 + 8) = 0;
          sub_1CD423078();
        }
        if (v6)
        {
          int v33 = &v4[96 * v6];
          uint64_t v34 = *(char **)a1;
          do
          {
            long long v35 = *(_OWORD *)v4;
            *((void *)v34 + 2) = *((void *)v4 + 2);
            *(_OWORD *)uint64_t v34 = v35;
            sub_1CBB40240((uint64_t)(v34 + 24), (uint64_t)(v4 + 24));
            v4 += 96;
            v34 += 96;
          }
          while (v4 != v33);
        }
        else
        {
          uint64_t v6 = 0;
        }
        unsigned int v7 = *(char **)a2;
        uint64_t v8 = *(unsigned int *)(a2 + 8);
        if (v6 != v8)
        {
          unsigned int v9 = *(char **)a1;
          uint64_t v10 = 96 * v6;
          uint64_t v11 = 96 * v8;
          do
          {
            uint64_t v12 = &v9[v10];
            unint64_t v13 = &v7[v10];
            long long v14 = *(_OWORD *)&v7[v10];
            *((void *)v12 + 2) = *(void *)&v7[v10 + 16];
            *(_OWORD *)uint64_t v12 = v14;
            uint64_t v15 = &v9[v10 + 40];
            *(void *)&v9[v10 + 24] = v15;
            *((void *)v12 + 4) = 0x200000000;
            unsigned int v16 = *(_DWORD *)&v7[v10 + 32];
            if (v16) {
              BOOL v17 = v13 == v12;
            }
            else {
              BOOL v17 = 1;
            }
            if (!v17)
            {
              unsigned int v18 = (char *)*((void *)v13 + 3);
              if (v13 + 40 == v18)
              {
                if (v16 >= 3) {
                  llvm::SmallVectorBase<unsigned int>::grow_pod();
                }
                memcpy(v15, v18, 28 * *(unsigned int *)&v7[v10 + 32]);
                *((_DWORD *)v12 + 8) = v16;
              }
              else
              {
                *((void *)v12 + 3) = v18;
                int v36 = *(_DWORD *)&v7[v10 + 36];
                *((_DWORD *)v12 + 8) = v16;
                *((_DWORD *)v12 + 9) = v36;
                *((void *)v13 + 3) = v13 + 40;
                *(_DWORD *)&v7[v10 + 36] = 0;
              }
              *((_DWORD *)v13 + 8) = 0;
            }
            v9 += 96;
            v7 += 96;
            v11 -= 96;
          }
          while (v10 != v11);
          unsigned int v7 = *(char **)a2;
        }
        *(_DWORD *)(a1 + 8) = v5;
        uint64_t v19 = *(unsigned int *)(a2 + 8);
        if (v19)
        {
          uint64_t v20 = 96 * v19;
          do
          {
            int v21 = *(char **)&v7[v20 - 72];
            if (&v7[v20 - 56] != v21) {
              free(v21);
            }
            v20 -= 96;
          }
          while (v20);
        }
      }
      *(_DWORD *)(a2 + 8) = 0;
    }
    else
    {
      sub_1CD44FA40((char **)a1, (char **)a2);
    }
  }
  return a1;
}

char **sub_1CBE548E8(char **result)
{
  uint64_t v1 = *result;
  uint64_t v2 = *((unsigned int *)result + 2);
  if (v2)
  {
    uint64_t v3 = 96 * v2;
    do
    {
      uint64_t v4 = *(char **)&v1[v3 - 72];
      if (&v1[v3 - 56] != v4)
      {
        unsigned int v7 = result;
        uint64_t v5 = v3;
        uint64_t v6 = v1;
        free(v4);
        uint64_t v3 = v5;
        uint64_t v1 = v6;
        BOOL result = v7;
      }
      v3 -= 96;
    }
    while (v3);
    uint64_t v1 = *result;
  }
  if (v1 != (char *)(result + 2))
  {
    uint64_t v8 = result;
    free(v1);
    return v8;
  }
  return result;
}

void sub_1CBE54974(char a1, uint64_t *a2)
{
  if (a1)
  {
    uint64_t v3 = *a2;
    uint64_t v4 = *((unsigned int *)a2 + 2);
    if (v4)
    {
      uint64_t v5 = 0;
      uint64_t v6 = v3 + 96 * v4;
      while (1)
      {
        if (*(_DWORD *)(v3 + v5) == 2 && *(_DWORD *)(v3 + v5 + 32) == 2)
        {
          uint64_t v7 = *(void *)(v3 + v5 + 24);
          if (*(_DWORD *)(v7 + 8) == 7 && !*(unsigned char *)(v7 + 52)) {
            break;
          }
          if (*(_DWORD *)(v7 + 36) == 7 && !*(unsigned char *)(v7 + 24)) {
            break;
          }
        }
        v5 += 96;
        if (96 * v4 == v5) {
          goto LABEL_13;
        }
      }
      uint64_t v9 = v3 + v5;
      if (96 * v4 - 96 == v5)
      {
        uint64_t v6 = v3 + v5;
      }
      else
      {
        uint64_t v10 = v9 + 96;
        uint64_t v11 = 96 * v4 - 96;
        uint64_t v6 = v3 + v5;
        do
        {
          uint64_t v12 = v9;
          uint64_t v9 = v10;
          uint64_t v13 = v3 + v5;
          if (*(_DWORD *)(v3 + v5 + 96) != 2
            || *(_DWORD *)(v13 + 128) != 2
            || ((uint64_t v14 = *(void *)(v3 + v5 + 120), *(_DWORD *)(v14 + 8) != 7) || *(unsigned char *)(v14 + 52))
            && (*(_DWORD *)(v14 + 36) != 7 || *(unsigned char *)(v14 + 24)))
          {
            long long v15 = *(_OWORD *)(v3 + v5 + 96);
            *(void *)(v6 + 16) = *(void *)(v3 + v5 + 112);
            *(_OWORD *)uint64_t v6 = v15;
            unsigned int v16 = (void **)(v6 + 24);
            BOOL v17 = (const void **)(v13 + 120);
            if (v13 + 120 != v6 + 24)
            {
              unsigned int v18 = *v17;
              uint64_t v19 = v3 + v5;
              uint64_t v20 = v3 + v5 + 136;
              if ((const void *)v20 == *v17)
              {
                unsigned int v23 = *(_DWORD *)(v19 + 128);
                BOOL v22 = (_DWORD *)(v19 + 128);
                uint64_t v21 = v23;
                uint64_t v24 = *(unsigned int *)(v6 + 32);
                if (v24 >= v23)
                {
                  if (v21) {
                    memmove(*v16, v18, 28 * v21);
                  }
                }
                else
                {
                  if (*(_DWORD *)(v6 + 36) < v21)
                  {
                    *(_DWORD *)(v6 + 32) = 0;
                    llvm::SmallVectorBase<unsigned int>::grow_pod();
                  }
                  if (v24)
                  {
                    memmove(*v16, v18, 28 * v24);
                    unsigned int v16 = (void **)(v6 + 24);
                  }
                  else
                  {
                    uint64_t v24 = 0;
                  }
                  uint64_t v25 = *v22;
                  if (v24 != v25) {
                    memcpy((char *)*v16 + 28 * v24, (char *)*v17 + 28 * v24, (unsigned char *)*v17 + 28 * v25 - ((unsigned char *)*v17 + 28 * v24));
                  }
                }
                *(_DWORD *)(v6 + 32) = v21;
              }
              else
              {
                uint64_t v26 = *(void **)(v6 + 24);
                if (v26 != (void *)(v6 + 40))
                {
                  free(v26);
                  unsigned int v18 = *v17;
                }
                *(void *)(v6 + 24) = v18;
                BOOL v22 = (_DWORD *)(v12 + 128);
                *(void *)(v6 + 32) = *(void *)(v3 + v5 + 128);
                *BOOL v17 = (const void *)v20;
                *(_DWORD *)(v3 + v5 + 132) = 0;
              }
              *BOOL v22 = 0;
            }
            v6 += 96;
          }
          uint64_t v10 = v9 + 96;
          v5 += 96;
        }
        while (v11 != v5);
        uint64_t v3 = *a2;
        LODWORD(v4) = *((_DWORD *)a2 + 2);
      }
    }
    else
    {
      uint64_t v6 = *a2;
    }
LABEL_13:
    uint64_t v8 = v3 + 96 * v4;
    if (v8 != v6)
    {
      do
      {
        int v27 = *(void **)(v8 - 72);
        if ((void *)(v8 - 56) != v27) {
          free(v27);
        }
        v8 -= 96;
      }
      while (v8 != v6);
      uint64_t v3 = *a2;
    }
    *((_DWORD *)a2 + 2) = -1431655765 * ((unint64_t)(v6 - v3) >> 5);
  }
}

void sub_1CBE54C6C(unsigned int a1, uint64_t *a2)
{
  v152[2] = *MEMORY[0x1E4F143B8];
  if (!a1) {
    return;
  }
  uint64_t v147 = 1;
  uint64_t v148 = -1;
  uint64_t v149 = -1;
  v150 = v152;
  uint64_t v151 = 0x400000000;
  if (a1 - 4 < 2)
  {
    int v146 = 23;
    uint64_t v3 = sub_1CB834EC4((uint64_t)&v147, (uint64_t)&v146, &v146, (_DWORD *)&v149 + 1);
    *uint64_t v3 = v146;
    if (v151 >= HIDWORD(v151)) {
      llvm::SmallVectorBase<unsigned int>::grow_pod();
    }
    *((_DWORD *)v150 + v151) = v146;
    char v4 = v147;
    LODWORD(v151) = v151 + 1;
    int v146 = 24;
    if (v147)
    {
      int v5 = 4;
      uint64_t v6 = &v148;
    }
    else
    {
      int v5 = v149;
      if (!v149)
      {
        long long v15 = 0;
        goto LABEL_19;
      }
      uint64_t v6 = (uint64_t *)v148;
    }
    int v7 = v5 - 1;
    unsigned int v8 = v7 & 0x378;
    uint64_t v9 = (_DWORD *)v6 + (v7 & 0x378);
    int v10 = *v9;
    if (*v9 == 24) {
      goto LABEL_21;
    }
    uint64_t v11 = 0;
    int v12 = 1;
    while (v10 != -1)
    {
      if (v11) {
        BOOL v13 = 0;
      }
      else {
        BOOL v13 = v10 == -2;
      }
      if (v13) {
        uint64_t v11 = v9;
      }
      unsigned int v14 = v8 + v12++;
      unsigned int v8 = v14 & v7;
      uint64_t v9 = (_DWORD *)v6 + v8;
      int v10 = *v9;
      if (*v9 == 24) {
        goto LABEL_21;
      }
    }
    if (v11) {
      long long v15 = v11;
    }
    else {
      long long v15 = v9;
    }
LABEL_19:
    unsigned int v16 = sub_1CB834EC4((uint64_t)&v147, (uint64_t)&v146, &v146, v15);
    *unsigned int v16 = v146;
    if (v151 >= HIDWORD(v151)) {
      llvm::SmallVectorBase<unsigned int>::grow_pod();
    }
    *((_DWORD *)v150 + v151) = v146;
    char v4 = v147;
    LODWORD(v151) = v151 + 1;
LABEL_21:
    int v146 = 25;
    if (v4)
    {
      int v17 = 4;
      unsigned int v18 = &v148;
    }
    else
    {
      int v17 = v149;
      if (!v149)
      {
        int v27 = 0;
        goto LABEL_36;
      }
      unsigned int v18 = (uint64_t *)v148;
    }
    int v19 = v17 - 1;
    unsigned int v20 = v19 & 0x39D;
    uint64_t v21 = (_DWORD *)v18 + (v19 & 0x39D);
    int v22 = *v21;
    if (*v21 == 25) {
      goto LABEL_38;
    }
    unsigned int v23 = 0;
    int v24 = 1;
    while (v22 != -1)
    {
      if (v23) {
        BOOL v25 = 0;
      }
      else {
        BOOL v25 = v22 == -2;
      }
      if (v25) {
        unsigned int v23 = v21;
      }
      unsigned int v26 = v20 + v24++;
      unsigned int v20 = v26 & v19;
      uint64_t v21 = (_DWORD *)v18 + v20;
      int v22 = *v21;
      if (*v21 == 25) {
        goto LABEL_38;
      }
    }
    if (v23) {
      int v27 = v23;
    }
    else {
      int v27 = v21;
    }
LABEL_36:
    uint64_t v28 = sub_1CB834EC4((uint64_t)&v147, (uint64_t)&v146, &v146, v27);
    *uint64_t v28 = v146;
    if (v151 >= HIDWORD(v151)) {
      llvm::SmallVectorBase<unsigned int>::grow_pod();
    }
    *((_DWORD *)v150 + v151) = v146;
    char v4 = v147;
    LODWORD(v151) = v151 + 1;
LABEL_38:
    int v146 = 37;
    if (v4)
    {
      int v29 = 4;
      unsigned int v30 = &v148;
    }
    else
    {
      int v29 = v149;
      if (!v149)
      {
        uint64_t v39 = 0;
        goto LABEL_53;
      }
      unsigned int v30 = (uint64_t *)v148;
    }
    int v31 = v29 - 1;
    unsigned int v32 = v31 & 0x559;
    int v33 = (_DWORD *)v30 + (v31 & 0x559);
    int v34 = *v33;
    if (*v33 == 37) {
      goto LABEL_55;
    }
    long long v35 = 0;
    int v36 = 1;
    while (v34 != -1)
    {
      if (v35) {
        BOOL v37 = 0;
      }
      else {
        BOOL v37 = v34 == -2;
      }
      if (v37) {
        long long v35 = v33;
      }
      unsigned int v38 = v32 + v36++;
      unsigned int v32 = v38 & v31;
      int v33 = (_DWORD *)v30 + v32;
      int v34 = *v33;
      if (*v33 == 37) {
        goto LABEL_55;
      }
    }
    if (v35) {
      uint64_t v39 = v35;
    }
    else {
      uint64_t v39 = v33;
    }
LABEL_53:
    uint64_t v40 = sub_1CB834EC4((uint64_t)&v147, (uint64_t)&v146, &v146, v39);
    *uint64_t v40 = v146;
    if (v151 >= HIDWORD(v151)) {
      llvm::SmallVectorBase<unsigned int>::grow_pod();
    }
    *((_DWORD *)v150 + v151) = v146;
    char v4 = v147;
    LODWORD(v151) = v151 + 1;
LABEL_55:
    int v146 = 38;
    if (v4)
    {
      int v41 = 4;
      int v42 = &v148;
    }
    else
    {
      int v41 = v149;
      if (!v149)
      {
        int v51 = 0;
        goto LABEL_70;
      }
      int v42 = (uint64_t *)v148;
    }
    int v43 = v41 - 1;
    unsigned int v44 = v43 & 0x57E;
    int v45 = (_DWORD *)v42 + (v43 & 0x57E);
    int v46 = *v45;
    if (*v45 == 38)
    {
LABEL_72:
      int v146 = 39;
      if (v4)
      {
        int v53 = 4;
        v54 = &v148;
        goto LABEL_74;
      }
      int v53 = v149;
      if (v149)
      {
        v54 = (uint64_t *)v148;
LABEL_74:
        int v55 = v53 - 1;
        unsigned int v56 = v55 & 0x5A3;
        v57 = (_DWORD *)v54 + (v55 & 0x5A3);
        int v58 = *v57;
        if (*v57 != 39)
        {
          v59 = 0;
          int v60 = 1;
          while (v58 != -1)
          {
            if (v59) {
              BOOL v61 = 0;
            }
            else {
              BOOL v61 = v58 == -2;
            }
            if (v61) {
              v59 = v57;
            }
            unsigned int v62 = v56 + v60++;
            unsigned int v56 = v62 & v55;
            v57 = (_DWORD *)v54 + v56;
            int v58 = *v57;
            if (*v57 == 39) {
              goto LABEL_164;
            }
          }
LABEL_159:
          if (v59) {
            v106 = v59;
          }
          else {
            v106 = v57;
          }
          goto LABEL_162;
        }
        goto LABEL_164;
      }
LABEL_235:
      v106 = 0;
LABEL_162:
      v107 = sub_1CB834EC4((uint64_t)&v147, (uint64_t)&v146, &v146, v106);
      _DWORD *v107 = v146;
      if (v151 >= HIDWORD(v151)) {
        llvm::SmallVectorBase<unsigned int>::grow_pod();
      }
      *((_DWORD *)v150 + v151) = v146;
      LODWORD(v151) = v151 + 1;
      goto LABEL_164;
    }
    int v47 = 0;
    int v48 = 1;
    while (v46 != -1)
    {
      if (v47) {
        BOOL v49 = 0;
      }
      else {
        BOOL v49 = v46 == -2;
      }
      if (v49) {
        int v47 = v45;
      }
      unsigned int v50 = v44 + v48++;
      unsigned int v44 = v50 & v43;
      int v45 = (_DWORD *)v42 + v44;
      int v46 = *v45;
      if (*v45 == 38) {
        goto LABEL_72;
      }
    }
    if (v47) {
      int v51 = v47;
    }
    else {
      int v51 = v45;
    }
LABEL_70:
    uint64_t v52 = sub_1CB834EC4((uint64_t)&v147, (uint64_t)&v146, &v146, v51);
    *uint64_t v52 = v146;
    if (v151 >= HIDWORD(v151)) {
      llvm::SmallVectorBase<unsigned int>::grow_pod();
    }
    *((_DWORD *)v150 + v151) = v146;
    char v4 = v147;
    LODWORD(v151) = v151 + 1;
    goto LABEL_72;
  }
  if (a1 > 7) {
    goto LABEL_164;
  }
  if (((1 << a1) & 6) == 0)
  {
    if (((1 << a1) & 0xC8) == 0) {
      goto LABEL_164;
    }
    int v146 = 24;
    v72 = sub_1CB834EC4((uint64_t)&v147, (uint64_t)&v146, &v146, &v148);
    _DWORD *v72 = v146;
    if (v151 >= HIDWORD(v151)) {
      llvm::SmallVectorBase<unsigned int>::grow_pod();
    }
    *((_DWORD *)v150 + v151) = v146;
    char v73 = v147;
    LODWORD(v151) = v151 + 1;
    int v146 = 25;
    if (v147)
    {
      int v74 = 4;
      v75 = &v148;
    }
    else
    {
      int v74 = v149;
      if (!v149)
      {
        v84 = 0;
        goto LABEL_128;
      }
      v75 = (uint64_t *)v148;
    }
    int v76 = v74 - 1;
    unsigned int v77 = v76 & 0x39D;
    v78 = (_DWORD *)v75 + (v76 & 0x39D);
    int v79 = *v78;
    if (*v78 == 25) {
      goto LABEL_130;
    }
    v80 = 0;
    int v81 = 1;
    while (v79 != -1)
    {
      if (v80) {
        BOOL v82 = 0;
      }
      else {
        BOOL v82 = v79 == -2;
      }
      if (v82) {
        v80 = v78;
      }
      unsigned int v83 = v77 + v81++;
      unsigned int v77 = v83 & v76;
      v78 = (_DWORD *)v75 + v77;
      int v79 = *v78;
      if (*v78 == 25) {
        goto LABEL_130;
      }
    }
    if (v80) {
      v84 = v80;
    }
    else {
      v84 = v78;
    }
LABEL_128:
    v85 = sub_1CB834EC4((uint64_t)&v147, (uint64_t)&v146, &v146, v84);
    _DWORD *v85 = v146;
    if (v151 >= HIDWORD(v151)) {
      llvm::SmallVectorBase<unsigned int>::grow_pod();
    }
    *((_DWORD *)v150 + v151) = v146;
    char v73 = v147;
    LODWORD(v151) = v151 + 1;
LABEL_130:
    int v146 = 38;
    if (v73)
    {
      int v86 = 4;
      v87 = &v148;
    }
    else
    {
      int v86 = v149;
      if (!v149)
      {
        v96 = 0;
        goto LABEL_145;
      }
      v87 = (uint64_t *)v148;
    }
    int v88 = v86 - 1;
    unsigned int v89 = v88 & 0x57E;
    v90 = (_DWORD *)v87 + (v88 & 0x57E);
    int v91 = *v90;
    if (*v90 == 38) {
      goto LABEL_147;
    }
    v92 = 0;
    int v93 = 1;
    while (v91 != -1)
    {
      if (v92) {
        BOOL v94 = 0;
      }
      else {
        BOOL v94 = v91 == -2;
      }
      if (v94) {
        v92 = v90;
      }
      unsigned int v95 = v89 + v93++;
      unsigned int v89 = v95 & v88;
      v90 = (_DWORD *)v87 + v89;
      int v91 = *v90;
      if (*v90 == 38) {
        goto LABEL_147;
      }
    }
    if (v92) {
      v96 = v92;
    }
    else {
      v96 = v90;
    }
LABEL_145:
    v97 = sub_1CB834EC4((uint64_t)&v147, (uint64_t)&v146, &v146, v96);
    _DWORD *v97 = v146;
    if (v151 >= HIDWORD(v151)) {
      llvm::SmallVectorBase<unsigned int>::grow_pod();
    }
    *((_DWORD *)v150 + v151) = v146;
    char v73 = v147;
    LODWORD(v151) = v151 + 1;
LABEL_147:
    int v146 = 39;
    if (v73)
    {
      int v98 = 4;
      v99 = &v148;
    }
    else
    {
      int v98 = v149;
      if (!v149) {
        goto LABEL_235;
      }
      v99 = (uint64_t *)v148;
    }
    int v100 = v98 - 1;
    unsigned int v101 = v100 & 0x5A3;
    v57 = (_DWORD *)v99 + (v100 & 0x5A3);
    int v102 = *v57;
    if (*v57 != 39)
    {
      v59 = 0;
      int v103 = 1;
      while (v102 != -1)
      {
        if (v59) {
          BOOL v104 = 0;
        }
        else {
          BOOL v104 = v102 == -2;
        }
        if (v104) {
          v59 = v57;
        }
        unsigned int v105 = v101 + v103++;
        unsigned int v101 = v105 & v100;
        v57 = (_DWORD *)v99 + v101;
        int v102 = *v57;
        if (*v57 == 39) {
          goto LABEL_164;
        }
      }
      goto LABEL_159;
    }
    goto LABEL_164;
  }
  int v146 = 25;
  v63 = sub_1CB834EC4((uint64_t)&v147, (uint64_t)&v146, &v146, (_DWORD *)&v148 + 1);
  _DWORD *v63 = v146;
  if (v151 >= HIDWORD(v151)) {
    llvm::SmallVectorBase<unsigned int>::grow_pod();
  }
  *((_DWORD *)v150 + v151) = v146;
  LODWORD(v151) = v151 + 1;
  int v146 = 39;
  if (v147)
  {
    int v64 = 4;
    v65 = &v148;
  }
  else
  {
    int v64 = v149;
    if (!v149) {
      goto LABEL_235;
    }
    v65 = (uint64_t *)v148;
  }
  int v66 = v64 - 1;
  unsigned int v67 = v66 & 0x5A3;
  v57 = (_DWORD *)v65 + (v66 & 0x5A3);
  int v68 = *v57;
  if (*v57 != 39)
  {
    v59 = 0;
    int v69 = 1;
    while (v68 != -1)
    {
      if (v59) {
        BOOL v70 = 0;
      }
      else {
        BOOL v70 = v68 == -2;
      }
      if (v70) {
        v59 = v57;
      }
      unsigned int v71 = v67 + v69++;
      unsigned int v67 = v71 & v66;
      v57 = (_DWORD *)v65 + v67;
      int v68 = *v57;
      if (*v57 == 39) {
        goto LABEL_164;
      }
    }
    goto LABEL_159;
  }
LABEL_164:
  v108 = (char *)*a2;
  unsigned int v109 = *((_DWORD *)a2 + 2);
  if (v109)
  {
    v110 = (long long *)&v108[96 * v109];
    v111 = (uint64_t *)v148;
    if (v147)
    {
      v111 = &v148;
      int v112 = 3;
    }
    else
    {
      int v112 = v149 - 1;
    }
    v113 = (long long *)*a2;
    while (1)
    {
      if (*(_DWORD *)v113) {
        BOOL v114 = 1;
      }
      else {
        BOOL v114 = (v147 & 1 | v149) == 0;
      }
      if (v114) {
        goto LABEL_173;
      }
      int v115 = *((_DWORD *)v113 + 5);
      unsigned int v116 = (37 * v115) & v112;
      int v117 = *((_DWORD *)v111 + v116);
      if (v115 == v117) {
        break;
      }
      int v118 = 1;
      while (v117 != -1)
      {
        unsigned int v119 = v116 + v118++;
        unsigned int v116 = v119 & v112;
        int v117 = *((_DWORD *)v111 + v116);
        if (v115 == v117) {
          goto LABEL_179;
        }
      }
LABEL_173:
      v113 += 6;
      if (v113 == v110)
      {
        v141 = (long long *)&v108[96 * v109];
        goto LABEL_207;
      }
    }
LABEL_179:
    v120 = v113 + 6;
    if (v113 + 6 != v110)
    {
      v145 = a2;
      v141 = v113;
      while (1)
      {
        v121 = v113;
        v113 = v120;
        if (*((_DWORD *)v121 + 24)) {
          goto LABEL_182;
        }
        if (v147)
        {
          int v132 = 4;
          v133 = &v148;
        }
        else
        {
          int v132 = v149;
          if (!v149) {
            goto LABEL_182;
          }
          v133 = (uint64_t *)v148;
        }
        int v134 = *((_DWORD *)v121 + 29);
        int v135 = v132 - 1;
        unsigned int v136 = (37 * v134) & v135;
        int v137 = *((_DWORD *)v133 + v136);
        if (v134 != v137) {
          break;
        }
LABEL_193:
        v120 = v113 + 6;
        if (v113 + 6 == v110)
        {
          a2 = v145;
          v108 = (char *)*v145;
          unsigned int v109 = *((_DWORD *)v145 + 2);
          goto LABEL_207;
        }
      }
      int v138 = 1;
      while (v137 != -1)
      {
        unsigned int v139 = v136 + v138++;
        unsigned int v136 = v139 & v135;
        int v137 = *((_DWORD *)v133 + v136);
        if (v134 == v137) {
          goto LABEL_193;
        }
      }
LABEL_182:
      long long v122 = *v113;
      *((void *)v141 + 2) = *((void *)v113 + 2);
      long long *v141 = v122;
      if (v141 != v121 + 6)
      {
        v123 = (const void **)v121 + 15;
        v124 = (char *)*((void *)v121 + 15);
        uint64_t v125 = (uint64_t)v121 + 136;
        if (v124 == (char *)v121 + 136)
        {
          v126 = (void **)v141 + 3;
          unsigned int v129 = *((_DWORD *)v121 + 32);
          v128 = (unsigned int *)(v121 + 8);
          uint64_t v127 = v129;
          uint64_t v130 = *((unsigned int *)v141 + 8);
          if (v130 >= v129)
          {
            if (v127) {
              memmove(*v126, v124, 28 * v127);
            }
          }
          else
          {
            if (*((_DWORD *)v141 + 9) < v127)
            {
              *((_DWORD *)v141 + 8) = 0;
              llvm::SmallVectorBase<unsigned int>::grow_pod();
            }
            if (v130)
            {
              memmove(*v126, v124, 28 * v130);
              v126 = (void **)v141 + 3;
            }
            else
            {
              uint64_t v130 = 0;
            }
            uint64_t v131 = *v128;
            if (v130 != v131) {
              memcpy((char *)*v126 + 28 * v130, (char *)*v123 + 28 * v130, (unsigned char *)*v123 + 28 * v131 - ((unsigned char *)*v123 + 28 * v130));
            }
          }
          *((_DWORD *)v141 + 8) = v127;
        }
        else
        {
          v142 = (char *)*((void *)v141 + 3);
          if (v142 != (char *)v141 + 40)
          {
            free(v142);
            v124 = (char *)*v123;
          }
          *((void *)v141 + 3) = v124;
          uint64_t v143 = *((void *)v121 + 16);
          v128 = (unsigned int *)(v121 + 8);
          *((void *)v141 + 4) = v143;
          *((void *)v128 - 1) = v125;
          v128[1] = 0;
        }
        unsigned int *v128 = 0;
      }
      v141 += 6;
      goto LABEL_193;
    }
    v141 = v113;
  }
  else
  {
    v141 = (long long *)*a2;
  }
LABEL_207:
  v140 = (long long *)&v108[96 * v109];
  if (v140 != v141)
  {
    do
    {
      v144 = (char *)*((void *)v140 - 9);
      if ((char *)v140 - 56 != v144) {
        free(v144);
      }
      v140 -= 6;
    }
    while (v140 != v141);
    v108 = (char *)*a2;
  }
  *((_DWORD *)a2 + 2) = -1431655765 * ((unint64_t)((char *)v141 - v108) >> 5);
  if (v150 != v152) {
    free(v150);
  }
  if ((v147 & 1) == 0) {
    MEMORY[0x1D25D9CD0](v148, 4);
  }
}

uint64_t sub_1CBE558F4(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    uint64_t v3 = *(unsigned int *)(a2 + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 8);
    if (v4 >= v3)
    {
      if (v3) {
        memmove(*(void **)a1, *(const void **)a2, 28 * v3);
      }
    }
    else
    {
      if (*(_DWORD *)(a1 + 12) < v3)
      {
        *(_DWORD *)(a1 + 8) = 0;
        llvm::SmallVectorBase<unsigned int>::grow_pod();
      }
      if (v4)
      {
        uint64_t v8 = *(unsigned int *)(a1 + 8);
        uint64_t v9 = a2;
        memmove(*(void **)a1, *(const void **)a2, 28 * v4);
        uint64_t v5 = v8;
        a2 = v9;
      }
      else
      {
        uint64_t v5 = 0;
      }
      uint64_t v6 = *(unsigned int *)(a2 + 8);
      if (v5 != v6) {
        memcpy((void *)(*(void *)a1 + 28 * v5), (const void *)(*(void *)a2 + 28 * v5), *(void *)a2 + 28 * v6 - (*(void *)a2 + 28 * v5));
      }
    }
    *(_DWORD *)(a1 + 8) = v3;
  }
  return a1;
}

unsigned int *sub_1CBE559EC(unsigned int *result, unsigned char *a2, unsigned char *a3)
{
  uint64_t v3 = result;
  size_t v4 = a3 - a2;
  uint64_t v5 = result[2];
  if (v5 + ((a3 - a2) >> 2) > (unint64_t)result[3]) {
    llvm::SmallVectorBase<unsigned int>::grow_pod();
  }
  if (a2 != a3)
  {
    BOOL result = (unsigned int *)memcpy((void *)(*(void *)result + 4 * v5), a2, v4);
    LODWORD(v5) = v3[2];
  }
  v3[2] = v5 + (v4 >> 2);
  return result;
}

uint64_t sub_1CBE55A78(unsigned int a1, uint64_t a2, unsigned int a3, uint64_t a4, void *a5, _DWORD *a6, _DWORD *a7)
{
  v75[16] = *MEMORY[0x1E4F143B8];
  uint64_t v69 = 0;
  long long v68 = 0u;
  unsigned int v14 = sub_1CBE5ECA4(a3);
  ((void (*)(uint64_t, void *))v14)(a2, v67);
  unsigned int v65 = a3;
  if ((dword_1CE0059BC[a3] & 0xFFF) == 0xFFF) {
    return 0;
  }
  long long v15 = (char *)&unk_1CE004D48 + (dword_1CE0059BC[a3] & 0xFFF);
  uint64_t v63 = 2 * a1;
  if (!v15[v63 + 1]) {
    return 0;
  }
  unsigned int v16 = a1;
  __dst = a5;
  int v17 = (unsigned __int8 *)&v15[v15[v63] + 12];
  int v64 = &v17[v15[v63 + 1]];
  int v62 = *(unsigned __int8 *)(a4 + 16);
  size_t v60 = *(void *)(a4 + 8);
  BOOL v61 = *(__int32 **)a4;
  uint64_t v59 = *(void *)a4 + 4 * v60;
  unsigned int v66 = a1;
  while (1)
  {
    int v18 = *v17;
    unint64_t v19 = v17[1];
    if (v16 < 4 || v65 > 0x10 || ((1 << v65) & 0x18008) == 0 || *v17)
    {
      if (!v62) {
        goto LABEL_12;
      }
      unsigned int v20 = wmemchr(v61, *v17, v60);
      unsigned int v16 = v66;
      uint64_t v21 = v59;
      if (v20) {
        uint64_t v21 = (uint64_t)v20;
      }
      if (v60 != (v21 - (uint64_t)v61) >> 2)
      {
LABEL_12:
        if (v19 >= 2)
        {
          if (v19 >> 1 <= 1) {
            uint64_t v22 = 1;
          }
          else {
            uint64_t v22 = v19 >> 1;
          }
          bzero(__src, 2 * v22);
          unsigned int v16 = v66;
        }
        unsigned int v23 = (char *)&unk_1CE005D38 + 4 * (dword_1CE00A15C[v65] & 0x1FFF);
        unsigned int v24 = *(_DWORD *)&v23[4 * *(unsigned int *)&v23[4 * v63] + 48 + 4 * v18];
        int v25 = sub_1CBE55F70(v16, v24, (uint64_t)v67);
        unsigned int v16 = v66;
        if (v25)
        {
          unsigned int v26 = 0;
          char v73 = (char *)v75;
          uint64_t v74 = 0x2000000000;
          unsigned int v27 = 32;
          unsigned int v28 = v24;
          while (1)
          {
            if (v26 >= v27) {
              llvm::SmallVectorBase<unsigned int>::grow_pod();
            }
            *(_DWORD *)&v73[4 * v26] = v28;
            unsigned int v26 = v74 + 1;
            LODWORD(v74) = v74 + 1;
            uint64_t v29 = word_1CE23BDD0[2 * v28];
            if (v29 == 0xFFFF) {
              break;
            }
            unsigned int v28 = dword_1CE219FC0[v29];
            unsigned int v27 = HIDWORD(v74);
          }
          if (v26)
          {
            unsigned int v30 = &v73[4 * v26 - 4];
            if (v73 < v30)
            {
              int v31 = v73 + 4;
              do
              {
                int v32 = *((_DWORD *)v31 - 1);
                *((_DWORD *)v31 - 1) = *(_DWORD *)v30;
                *(_DWORD *)unsigned int v30 = v32;
                v30 -= 4;
                BOOL v33 = v31 >= v30;
                v31 += 4;
              }
              while (!v33);
            }
          }
          char v34 = sub_1CBE562E4(v66, v24, (uint64_t)v67, (uint64_t)&v73, 0);
          int v35 = 0;
          int v36 = v73;
          if (v34)
          {
            v72[0] = 0;
            uint64_t v71 = 0;
            *(void *)((char *)v72 + 6) = 0;
            if (!v74)
            {
LABEL_47:
              int v35 = 1;
              goto LABEL_49;
            }
            BOOL v37 = (unsigned int *)&v73[4 * v74];
            unsigned int v38 = v73;
            while (1)
            {
              uint64_t v39 = dword_1CEB12150[*(unsigned int *)v38] & 0xFFFFF;
              if (v39 != 0xFFFFF)
              {
                uint64_t v40 = (char *)&unk_1CE9C6A78 + 2 * v39;
                int v41 = &v40[2 * v63];
                uint64_t v42 = *((unsigned __int16 *)v41 + 1);
                if (*((_WORD *)v41 + 1)) {
                  break;
                }
              }
LABEL_46:
              v38 += 4;
              if (v38 == (char *)v37) {
                goto LABEL_47;
              }
            }
            int v43 = &v40[2 * *(unsigned __int16 *)v41 + 24];
            unsigned int v44 = &v43[2 * v42];
            uint64_t v45 = (uint64_t)v43;
            while (2)
            {
              unsigned int v46 = *((unsigned __int16 *)v43 + 4);
              unsigned int v48 = *(unsigned __int16 *)(v45 + 10);
              v45 += 10;
              unint64_t v47 = v48;
              if (v46 <= 1)
              {
                if (((*(void *)((char *)&v68 + ((v47 >> 3) & 0x1FF8)) >> v47) & 1) == 0) {
                  unint64_t v47 = 156;
                }
                unint64_t v47 = v67[v47];
                if (*((_WORD *)v43 + 4)) {
                  unint64_t v47 = *(unsigned __int16 *)&v43[2 * v47 + 14];
                }
              }
              char v49 = *((_WORD *)v43 + 1);
              char v50 = *((_WORD *)v43 + 2);
              uint64_t v51 = *((unsigned __int16 *)v43 + 3);
              uint64_t v52 = ((v47 >> *(_WORD *)v43) & ~(-1 << v50)) << v49;
              int v53 = ~(-1 << v50);
              int v54 = (unsigned __int16)__src[v51];
              int v55 = v53 << v49;
              int v56 = *((unsigned __int16 *)&v72[-1] + v51);
              if (((v52 ^ v54) & v56 & v55) != 0)
              {
                int v35 = 0;
                break;
              }
              __src[v51] = v54 | v52;
              *((_WORD *)&v72[-1] + v51) = v56 | v55;
              if (v46 >= 2)
              {
                if (v46 == 2) {
                  goto LABEL_44;
                }
              }
              else
              {
                if (v46)
                {
                  uint64_t v45 = (uint64_t)&v43[2 * *((unsigned __int16 *)v43 + 6) + 14];
                  goto LABEL_45;
                }
LABEL_44:
                uint64_t v45 = (uint64_t)(v43 + 12);
              }
LABEL_45:
              int v43 = (char *)v45;
              if ((char *)v45 == v44) {
                goto LABEL_46;
              }
              continue;
            }
          }
LABEL_49:
          if (v36 != (char *)v75) {
            free(v36);
          }
          unsigned int v16 = v66;
          if (v35) {
            break;
          }
        }
      }
    }
    v17 += 2;
    if (v17 == v64) {
      return 0;
    }
  }
  *a6 = v18;
  *a7 = v19;
  if (v19 >= 2) {
    memcpy(__dst, __src, 2 * (v19 >> 1));
  }
  return 1;
}

uint64_t sub_1CBE55F68()
{
  return 11;
}

uint64_t sub_1CBE55F70(int a1, unsigned int a2, uint64_t a3)
{
  v42[2] = *MEMORY[0x1E4F143B8];
  uint64_t v3 = dword_1CE11B5A8[a2] & 0xFFFFF;
  if (v3 == 0xFFFFF) {
    return 1;
  }
  size_t v4 = (char *)&unk_1CE00A4D8 + 2 * v3;
  uint64_t v5 = &v4[4 * a1];
  if (!*((_WORD *)v5 + 1)) {
    return 1;
  }
  uint64_t v6 = (unsigned __int16 *)&v4[2 * *(unsigned __int16 *)v5 + 24];
  int v7 = &v6[*((unsigned __int16 *)v5 + 1)];
  uint64_t v8 = a3 + 1248;
  while (2)
  {
    unint64_t v9 = *v6;
    int v10 = v6 + 2;
    switch(v6[1])
    {
      case 1u:
        uint64_t v11 = v6[2];
        int v12 = v6 + 3;
        if (((*(void *)(v8 + ((v9 >> 3) & 0x1FF8)) >> v9) & 1) == 0) {
          unint64_t v9 = 156;
        }
        unint64_t v13 = *(void *)(a3 + 8 * v9);
        if (v11 < 0xA)
        {
          uint64_t v14 = (uint64_t)&v6[v11 + 3];
          if (!(v13 >> 16))
          {
            if (v6[2])
            {
              uint64_t v15 = 2 * v11;
              unsigned int v16 = v6 + 3;
              while (*v16 != (unsigned __int16)v13)
              {
                ++v16;
                v15 -= 2;
                if (!v15) {
                  goto LABEL_54;
                }
              }
              uint64_t v14 = (uint64_t)v16;
            }
            else
            {
              uint64_t v14 = (uint64_t)(v6 + 3);
            }
          }
LABEL_54:
          if (v11 == (v14 - (uint64_t)v12) >> 1) {
            goto LABEL_59;
          }
LABEL_55:
          v6 += v11;
          goto LABEL_56;
        }
        char v34 = v6 + 3;
        unint64_t v35 = v6[2];
        do
        {
          unint64_t v36 = v35 >> 1;
          BOOL v37 = &v34[v35 >> 1];
          unsigned int v39 = *v37;
          unsigned int v38 = v37 + 1;
          v35 += ~(v35 >> 1);
          if (v13 > v39) {
            char v34 = v38;
          }
          else {
            unint64_t v35 = v36;
          }
        }
        while (v35);
        if (v34 != &v12[v11] && v13 >= *v34) {
          goto LABEL_55;
        }
LABEL_59:
        uint64_t result = 0;
        break;
      case 2u:
        if (((*(void *)(v8 + 8 * (v9 >> 6)) >> v9) & 1) == 0) {
          unint64_t v9 = 156;
        }
        unint64_t v17 = *(void *)(a3 + 8 * v9);
        if (v17 < v6[2] || v17 > v6[3]) {
          goto LABEL_59;
        }
LABEL_24:
        int v10 = v6 + 4;
        goto LABEL_57;
      case 3u:
        if (((*(void *)(v8 + 8 * (v9 >> 6)) >> v9) & 1) == 0) {
          unint64_t v9 = 156;
        }
        if (((*(void *)(a3 + 8 * v9) >> v6[2]) & ~(-1 << v6[3])) != v6[4]) {
          goto LABEL_59;
        }
LABEL_28:
        int v10 = v6 + 5;
        goto LABEL_57;
      case 4u:
        char v19 = 0;
        unsigned int v20 = v42;
        uint64_t v21 = v6 + 2;
        uint64_t v22 = 1;
        unsigned int v23 = v6 + 2;
        do
        {
          char v24 = v19;
          *unsigned int v20 = 0;
          unsigned int v26 = *v23++;
          uint64_t v25 = v26;
          if (v26)
          {
            uint64_t v27 = 0;
            uint64_t v28 = 0;
            uint64_t v29 = 8 * v25;
            uint64_t v30 = 2 * v25 + 0x1FFFFFFFELL;
            do
            {
              unsigned int v31 = *v23++;
              v28 |= (unint64_t)v31 << v27;
              v27 += 8;
            }
            while (v29 != v27);
            unsigned int v23 = (unsigned __int16 *)((char *)v21 + (v30 & 0x1FFFFFFFELL) + 4);
            *unsigned int v20 = v28;
          }
          unsigned int v20 = &v42[v22];
          char v19 = 1;
          uint64_t v21 = v23;
          uint64_t v22 = 2;
        }
        while ((v24 & 1) == 0);
        if (((*(void *)(v8 + 8 * (v9 >> 6)) >> v9) & 1) == 0) {
          unint64_t v9 = 156;
        }
        unint64_t v32 = *(void *)(a3 + 8 * v9);
        if (v42[0] > v32 || v32 > v42[1]) {
          goto LABEL_59;
        }
        switch(v6[1])
        {
          case 0u:
            goto LABEL_56;
          case 1u:
            uint64_t v11 = *v10;
            goto LABEL_55;
          case 2u:
            goto LABEL_24;
          case 3u:
            goto LABEL_28;
          case 4u:
            uint64_t v40 = &v6[v6[2]];
            int v10 = &v40[v40[3] + 4];
            break;
          default:
            goto LABEL_57;
        }
        goto LABEL_57;
      default:
        if (((*(void *)(v8 + ((v9 >> 3) & 0x1FF8)) >> v9) & 1) == 0) {
          unint64_t v9 = 156;
        }
        if (*(void *)(a3 + 8 * v9) != *v10) {
          goto LABEL_59;
        }
LABEL_56:
        int v10 = v6 + 3;
LABEL_57:
        uint64_t v6 = v10;
        if (v10 == v7) {
          return 1;
        }
        continue;
    }
    return result;
  }
}

uint64_t sub_1CBE562E4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5 = dword_1CE44739C[a2] & 0x7FFFF;
  if (v5 == 0x7FFFF) {
    return 1;
  }
  int v7 = (char *)&unk_1CE33A7E8 + 4 * v5;
  uint64_t v8 = (2 * a1);
  unint64_t v9 = &v7[4 * v8];
  uint64_t v10 = *((unsigned int *)v9 + 1);
  if (!v10) {
    return 1;
  }
  uint64_t v11 = &v7[4 * *(unsigned int *)v9 + 48];
  uint64_t v12 = dword_1CE981B48[*(unsigned int *)v11] & 0x1FFFFF;
  if (v12 == 0x1FFFFF) {
    return 0;
  }
  uint64_t v15 = *(unsigned int *)(a4 + 8);
  unsigned int v16 = (char *)&unk_1CE545DB4 + 4 * v12;
  unint64_t v17 = &v16[4 * v8];
  uint64_t v18 = *((unsigned int *)v17 + 1);
  unsigned int v19 = *(_DWORD *)(a4 + 8);
  if (v18)
  {
    unsigned int v31 = (unsigned int *)&v11[4 * v10];
    uint64_t v21 = (a5 + 2);
    uint64_t v22 = (unsigned int *)&v16[4 * *(unsigned int *)v17 + 48];
    unsigned int v23 = &v22[v18];
    do
    {
      while (1)
      {
        uint64_t v24 = *v22;
        if (!sub_1CBE55F70(a1, *v22, a3) || !sub_1CBE562E4(a1, v24, a3, a4, v21)) {
          break;
        }
        unint64_t v25 = *(unsigned int *)(a4 + 8);
        if (v25 >= *(unsigned int *)(a4 + 12)) {
          llvm::SmallVectorBase<unsigned int>::grow_pod();
        }
        *(_DWORD *)(*(void *)a4 + 4 * v25) = v24;
        unsigned int v19 = *(_DWORD *)(a4 + 8) + 1;
        *(_DWORD *)(a4 + 8) = v19;
        v11 += 4;
        if (v11 == (char *)v31) {
          return 1;
        }
        uint64_t v26 = dword_1CE981B48[*(unsigned int *)v11] & 0x1FFFFF;
        if (v26 != 0x1FFFFF)
        {
          uint64_t v27 = (char *)&unk_1CE545DB4 + 4 * v26;
          uint64_t v28 = &v27[4 * v8];
          uint64_t v30 = *(unsigned int *)v28;
          uint64_t v29 = *((unsigned int *)v28 + 1);
          uint64_t v22 = (unsigned int *)&v27[4 * v30 + 48];
          unsigned int v23 = &v22[v29];
          if (v29) {
            continue;
          }
        }
        goto LABEL_18;
      }
      ++v22;
    }
    while (v22 != v23);
    unsigned int v19 = *(_DWORD *)(a4 + 8);
  }
LABEL_18:
  if (v19 == v15) {
    return 0;
  }
  if (v19 <= v15)
  {
    if (*(_DWORD *)(a4 + 12) < v15) {
      llvm::SmallVectorBase<unsigned int>::grow_pod();
    }
    if (v19 != v15) {
      bzero((void *)(*(void *)a4 + 4 * v19), 4 * (v15 - v19));
    }
  }
  uint64_t result = 0;
  *(_DWORD *)(a4 + 8) = v15;
  return result;
}

uint64_t sub_1CBE56520(int a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t *a5, _DWORD *a6, _DWORD *a7)
{
  uint64_t v110 = *MEMORY[0x1E4F143B8];
  unsigned int v103 = 0;
  unsigned int v105 = v107;
  unsigned int v10 = 1;
  v107[0] = 1;
  uint64_t v11 = (2 * a1);
  uint64_t v106 = 0x2000000001;
  uint64_t v12 = v107;
  unint64_t v13 = (unint64_t)&unk_1CEF32570;
  do
  {
    uint64_t v14 = v12[v10 - 1];
    LODWORD(v106) = v10 - 1;
    if (v103 >= 0x20uLL) {
      llvm::SmallVectorBase<unsigned int>::grow_pod();
    }
    v104[v103++] = v14;
    uint64_t v15 = dword_1CEDED43C[v14] & 0x7FFFF;
    if (v15 == 0x7FFFF
      || (unsigned int v16 = (char *)&unk_1CEC10B70 + 4 * v15, v17 = &v16[4 * v11], v18 = *((unsigned int *)v17 + 1), !v18))
    {
      uint64_t v12 = v105;
    }
    else
    {
      unsigned int v19 = (unsigned int *)&v16[4 * *(unsigned int *)v17 + 48];
      unsigned int v20 = &v19[v18];
      uint64_t v21 = (v18 - 1) & 0x3FFFFFFFFFFFFFFFLL;
      do
      {
        uint64_t v22 = *v19;
        LODWORD(v23) = dword_1CEEED640[v22] & 0x1FFF;
        BOOL v24 = v23 == 0x1FFF;
        if (v23 == 0x1FFF) {
          uint64_t v23 = 0xFFFFFFFFLL;
        }
        else {
          uint64_t v23 = v23;
        }
        if (v24) {
          uint64_t v25 = 0;
        }
        else {
          uint64_t v25 = dword_1CEEED640[v22] >> 13;
        }
        if (v24) {
          uint64_t v26 = 0;
        }
        else {
          uint64_t v26 = (char *)&unk_1CEEEBE54 + v23;
        }
        unint64_t v27 = 0;
        if (v25)
        {
          uint64_t v28 = &v26[v25];
          do
          {
            if (*v26)
            {
              unint64_t v29 = v26[3] << v26[1];
              if (*v26 == 1) {
                uint64_t v30 = 4;
              }
              else {
                uint64_t v30 = 1;
              }
            }
            else
            {
              unint64_t v31 = (2 * v26[4]) | 1;
              if (a3 <= v31) {
                goto LABEL_46;
              }
              unint64_t v29 = (((*(unsigned __int8 *)(a2 + 2 * v26[4]) | ((unint64_t)*(unsigned __int8 *)(a2 + v31) << 8)) >> v26[2]) & ~(-1 << v26[3])) << v26[1];
              uint64_t v30 = 5;
            }
            v26 += v30;
            v27 |= v29;
          }
          while (v26 != v28);
        }
        uint64_t v32 = dword_1CF3C20E0[v22] & 0x1FFFFF;
        if (v32 == 0x1FFFFF) {
          goto LABEL_46;
        }
        BOOL v33 = (char *)&unk_1CEF32570 + 4 * v32;
        char v34 = &v33[4 * v11];
        uint64_t v35 = *((unsigned int *)v34 + 1);
        if (!v35) {
          goto LABEL_46;
        }
        int v36 = 0;
        BOOL v37 = &v33[4 * *(unsigned int *)v34 + 48];
        unsigned int v38 = &v37[4 * v35];
        do
        {
          unsigned int v41 = *(_DWORD *)v37;
          unsigned int v39 = v37 + 4;
          uint64_t v40 = v41;
          if (v27 < v41 && v39[v27]) {
            int v36 = v39[v27];
          }
          BOOL v37 = (char *)&v39[v40];
        }
        while (v37 != v38);
        if (!v36)
        {
LABEL_46:
          int v99 = 0;
          uint64_t v12 = v105;
          goto LABEL_47;
        }
        if (v106 >= (unint64_t)HIDWORD(v106)) {
          llvm::SmallVectorBase<unsigned int>::grow_pod();
        }
        *((_DWORD *)v105 + v106) = v36;
        unsigned int v10 = v106 + 1;
        LODWORD(v106) = v106 + 1;
        ++v19;
      }
      while (v19 != v20);
      uint64_t v42 = v21;
      uint64_t v12 = v105;
      if (!v42) {
        continue;
      }
      int v43 = (char *)v105 + 4 * v10;
      unsigned int v44 = v43 - 4;
      uint64_t v45 = &v43[-4 * v42];
      do
      {
        int v46 = *((_DWORD *)v45 - 1);
        *((_DWORD *)v45 - 1) = *(_DWORD *)v44;
        *(_DWORD *)unsigned int v44 = v46;
        v44 -= 4;
        BOOL v47 = v45 >= v44;
        v45 += 4;
      }
      while (!v47);
    }
    unsigned int v10 = v106;
  }
  while (v10);
  int v99 = 1;
LABEL_47:
  if (v12 != v107) {
    free(v12);
  }
  if (!v99) {
    return 0;
  }
  uint64_t v109 = 0;
  long long v108 = 0u;
  if (v103)
  {
    unint64_t v48 = 0;
    int v49 = 0;
    int v50 = 0;
    uint64_t v51 = a4 + 1248;
    uint64_t v52 = v104;
    while (1)
    {
      uint64_t v53 = *v52;
      uint64_t v54 = dword_1CF40C20C[v53] & 0x7FFF;
      if ((dword_1CF40C20C[v53] & 0x7FFF) != 0x7FFF)
      {
        int v55 = (unsigned __int8 *)&unk_1CF407010 + v54 + v11;
        uint64_t v56 = v55[1];
        if (v55[1])
        {
          uint64_t v57 = *v55;
          int v58 = (char *)&unk_1CF407010 + v54 + v57 + v56 + 12;
          uint64_t v59 = (unsigned __int8 *)&unk_1CF407010 + v57 + v54 + 14;
          do
          {
            size_t v60 = v59 - 2;
            int v61 = *(v59 - 2);
            if (v61 == 3)
            {
              int v50 = *(v59 - 1);
            }
            else if (v61 == 2)
            {
              unint64_t v48 = *(v59 - 1) | ((unint64_t)*v59 << 32);
            }
            else
            {
              int v49 = *(v59 - 1);
            }
            v59 += 3;
          }
          while (v60 + 3 != (unsigned __int8 *)v58);
        }
      }
      uint64_t v62 = dword_1CF5D317C[v53] & 0x7FFFF;
      if (v62 != 0x7FFFF)
      {
        uint64_t v63 = (char *)&unk_1CF50AC24 + 2 * v62;
        int v64 = &v63[2 * v11];
        if (*((_WORD *)v64 + 1))
        {
          unsigned int v65 = (unsigned __int16 *)&v63[2 * *(unsigned __int16 *)v64 + 24];
          unsigned int v66 = &v65[*((unsigned __int16 *)v64 + 1)];
          do
          {
            unint64_t v67 = *v65;
            uint64_t v68 = v65[1];
            uint64_t v69 = v65[2];
            unint64_t v70 = v67 >> 6;
            uint64_t v71 = 1 << v67;
            if (((1 << v67) & *(void *)(v51 + 8 * (v67 >> 6))) == 0)
            {
              *(void *)(a4 + 8 * v67) = 0;
              *(void *)(v51 + 8 * v70) |= v71;
            }
            if ((*((void *)&v108 + v70) & v71) == 0)
            {
              *(&v105 + v67) = 0;
              *((void *)&v108 + v70) |= v71;
            }
            uint64_t v72 = v68 | (v69 << 32);
            uint64_t v73 = *(void *)(a4 + 8 * v67);
            if (((v73 ^ v72) & (unint64_t)*(&v105 + v67)) != 0) {
              return 0;
            }
            *(void *)(a4 + 8 * v67) = v73 | v72;
            *(&v105 + v67) = (void *)-1;
            v65 += 3;
          }
          while (v65 != v66);
        }
      }
      uint64_t v74 = dword_1CF6F17FC[v53] & 0x1FFFF;
      if (v74 != 0x1FFFF)
      {
        v75 = (unsigned __int8 *)&unk_1CF6D1B94 + v74 + v11;
        if (v75[1]) {
          break;
        }
      }
LABEL_95:
      if (++v52 == &v104[v103]) {
        goto LABEL_99;
      }
    }
    int v76 = (unsigned __int8 *)&unk_1CF6D1B94 + v74 + *v75 + 12;
    unsigned int v77 = &v76[v75[1]];
    while (1)
    {
      int v78 = v76[1];
      uint64_t v79 = v76[4];
      unint64_t v80 = v76[2] | ((unint64_t)v76[3] << 32);
      if (v76[1]) {
        unint64_t v13 = v13 & 0xFFFFFFFF00000000 | v79;
      }
      else {
        unint64_t v13 = v79 | ((unint64_t)v76[5] << 32);
      }
      unint64_t v81 = *v76;
      unint64_t v82 = v81 >> 6;
      uint64_t v83 = 1 << v81;
      if ((*(void *)(v51 + 8 * (v81 >> 6)) & (1 << v81)) != 0)
      {
        if (v76[1]) {
          goto LABEL_78;
        }
      }
      else
      {
        *(void *)(a4 + 8 * v81) = 0;
        *(void *)(v51 + 8 * v82) |= v83;
        if (v78)
        {
LABEL_78:
          unint64_t v84 = 0xFFFFFFFFFFFFFFFFLL >> -BYTE4(v80);
          if (!HIDWORD(v80)) {
            unint64_t v84 = 0;
          }
          if ((*((void *)&v108 + v82) & v83) == 0)
          {
            *(&v105 + v81) = 0;
            *((void *)&v108 + v82) |= v83;
          }
          uint64_t v85 = (v13 << v80);
          uint64_t v86 = *(void *)(a4 + 8 * v81);
          unint64_t v87 = v84 << v80;
          uint64_t v88 = (uint64_t)*(&v105 + v81);
          if (((v86 ^ v85) & v87 & v88) != 0) {
            return 0;
          }
          *(void *)(a4 + 8 * v81) = v86 | v85;
          *(&v105 + v81) = (void *)(v88 | v87);
          if (v78 == 1) {
            v76 += 5;
          }
          else {
            v76 += 2;
          }
          goto LABEL_94;
        }
      }
      uint64_t v89 = (v13 >> 31) & 0xFFFFFFFE;
      if (a3 <= (v89 | 1uLL)) {
        return 0;
      }
      uint64_t v90 = *(unsigned __int8 *)(a2 + v89);
      uint64_t v91 = *(unsigned __int8 *)(a2 + (v89 | 1));
      unint64_t v92 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v13;
      if (!v13) {
        unint64_t v92 = 0;
      }
      if ((*((void *)&v108 + v82) & v83) == 0)
      {
        *(&v105 + v81) = 0;
        *((void *)&v108 + v82) |= v83;
      }
      uint64_t v93 = (((v90 | (unint64_t)(v91 << 8)) >> SBYTE4(v80)) & ~(-1 << v13)) << v80;
      uint64_t v94 = *(void *)(a4 + 8 * v81);
      unint64_t v95 = v92 << v80;
      uint64_t v96 = (uint64_t)*(&v105 + v81);
      if (((v94 ^ v93) & v95 & v96) != 0) {
        return 0;
      }
      *(&v105 + v81) = (void *)(v96 | v95);
      *(void *)(a4 + 8 * v81) = v94 | v93;
      v76 += 6;
LABEL_94:
      if (v76 == v77) {
        goto LABEL_95;
      }
    }
  }
  int v50 = 0;
  int v49 = 0;
  unint64_t v48 = 0;
LABEL_99:
  if (a5) {
    *a5 = v48;
  }
  if (a7) {
    *a7 = v50;
  }
  if (a6) {
    *a6 = v49;
  }
  return 1;
}

uint64_t sub_1CBE56C98(int a1, uint64_t a2, unint64_t a3, unint64_t *a4, int *a5, uint64_t a6, _DWORD *a7)
{
  uint64_t v14 = 0;
  long long v13 = 0u;
  uint64_t v9 = sub_1CBE56520(a1, a2, a3, (uint64_t)v12, a4, a5, a7);
  if (v9)
  {
    unsigned int v10 = sub_1CBE9E168(*a5);
    ((void (*)(unsigned char *, uint64_t))v10)(v12, a6);
  }
  return v9;
}

uint64_t sub_1CBE56DB0(uint64_t result, unsigned char *a2, unsigned int a3)
{
  switch((int)result)
  {
    case 138:
    case 139:
      a2[1] |= a3 & 0x7F;
      a2[4] |= (a3 >> 6) & 0x1E;
      a2[5] |= (a3 >> 9) & 0xC;
      a2[6] |= a3 >> 13;
      a2[7] |= (a3 >> 21) & 0xF;
      a2[3] |= 2 * (a3 >> 25);
      break;
    case 140:
      a2[1] |= a3 & 3;
      a2[8] |= a3 >> 2;
      a2[9] |= a3 >> 10;
      char v3 = a2[5];
      a2[3] |= (a3 >> 14) & 0xE0;
      a2[6] |= (a3 >> 22) & 0xF;
      a2[4] |= (a3 >> 26) & 7;
      a2[5] = (a3 >> 26) & 8 | (a3 >> 11) & 0x80 | v3;
      a2[2] |= (a3 >> 26) & 0x20 | (a3 >> 28) & 4;
      break;
    default:
      a2[6] |= 4 * (_BYTE)a3;
      a2[7] |= a3 >> 6;
      a2[8] |= a3 >> 14;
      a2[9] |= a3 >> 22;
      a2[10] |= a3 >> 30;
      break;
  }
  return result;
}

uint64_t sub_1CBE56FC8(uint64_t result, uint64_t a2, unint64_t a3)
{
  switch((int)result)
  {
    case 142:
      uint64x2_t v3 = (uint64x2_t)vdupq_n_s64(a3);
      *(unsigned char *)(a2 + 3) |= a3 & 0xFE;
      int32x4_t v4 = (int32x4_t)vshlq_u64(v3, (uint64x2_t)xmmword_1CF7F0220);
      int16x8_t v5 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v3, (uint64x2_t)xmmword_1CF7F0230), v4);
      v4.i32[0] = *(_DWORD *)(a2 + 4);
      *(int8x8_t *)v5.i8 = vorr_s8((int8x8_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v4.i8), (int8x8_t)vmovn_s32((int32x4_t)v5));
      *(_DWORD *)(a2 + 4) = vmovn_s16(v5).u32[0];
      unint64_t v6 = a3 >> 40;
      goto LABEL_3;
    case 143:
      *(unsigned char *)a2 |= ((_BYTE)a3 << 6) & 0x80;
      char v11 = *(unsigned char *)(a2 + 1);
      *(unsigned char *)(a2 + 2) |= (a3 >> 3) & 8 | (a3 >> 4) & 2 | (a3 >> 2) & 0xE0;
      *(unsigned char *)(a2 + 1) = (a3 >> 10) & 0xF | (16 * ((a3 >> 2) & 7)) | v11;
      *(unsigned char *)(a2 + 3) |= ((a3 >> 30) | (a3 >> 29) | (a3 >> 31) | BYTE4(a3) | (a3 >> 33) | (a3 >> 34) | (a3 >> 35) | (a3 >> 36) | (a3 >> 37) | (a3 >> 38) | (a3 >> 39) | BYTE5(a3) | (a3 >> 41) | (a3 >> 42) | (a3 >> 43) | (a3 >> 25) | (a3 >> 10) | (a3 >> 11) | (a3 >> 12) | (a3 >> 13) | (a3 >> 14) | (a3 >> 15) | BYTE2(a3) | (a3 >> 17) | (a3 >> 18) | (a3 >> 19) | (a3 >> 20) | (a3 >> 21) | (a3 >> 22) | (a3 >> 23) | BYTE3(a3)) & 0x10;
      break;
    case 144:
      *(unsigned char *)a2 |= ((_BYTE)a3 << 6) & 0x80;
      char v7 = *(unsigned char *)(a2 + 1);
      *(unsigned char *)(a2 + 2) |= (a3 >> 3) & 8 | (a3 >> 4) & 2 | (a3 >> 2) & 0xE0;
      *(unsigned char *)(a2 + 1) = (a3 >> 10) & 0xF | (16 * ((a3 >> 2) & 7)) | v7;
      *(unsigned char *)(a2 + 3) |= (a3 >> 10) & 0x10;
      *(unsigned char *)(a2 + 4) |= (a3 >> 15) & 0x1F;
      *(unsigned char *)(a2 + 6) |= a3 >> 20;
      *(unsigned char *)(a2 + 7) |= (a3 >> 25) & 0xC0 | (a3 >> 28) & 7;
      *(unsigned char *)(a2 + 8) |= a3 >> 33;
      *(unsigned char *)(a2 + 9) |= (a3 >> 41) & 0x7F;
      break;
    default:
      *(unsigned char *)(a2 + 2) |= (_BYTE)a3 << 6;
      uint64x2_t v8 = (uint64x2_t)vdupq_n_s64(a3 << 6);
      int32x4_t v9 = (int32x4_t)vshlq_u64(v8, (uint64x2_t)xmmword_1CF7F0220);
      int16x8_t v10 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v8, (uint64x2_t)xmmword_1CF7F0230), v9);
      v9.i32[0] = *(_DWORD *)(a2 + 3);
      *(int8x8_t *)v10.i8 = vorr_s8((int8x8_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v9.i8), (int8x8_t)vmovn_s32((int32x4_t)v10));
      *(_DWORD *)(a2 + 3) = vmovn_s16(v10).u32[0];
      *(unsigned char *)(a2 + 7) |= a3 >> 34;
      unint64_t v6 = (a3 >> 42) & 0x3F;
LABEL_3:
      *(unsigned char *)(a2 + 8) |= v6;
      break;
  }
  return result;
}

uint64_t sub_1CBE572CC(int a1, int a2)
{
  switch(a1)
  {
    case 0:
      if (a2) {
        goto LABEL_7;
      }
      return 145;
    case 1:
    case 2:
    case 3:
      if (a2)
      {
LABEL_7:
        if (a2 != 1) {
LABEL_11:
        }
          llvm::report_fatal_error((llvm *)"Failed to find a valid fixup for bl", (const llvm::Twine *)1);
LABEL_3:
        uint64_t result = 148;
      }
      else
      {
        uint64_t result = 146;
      }
      break;
    case 4:
    case 5:
      if (a2 == 1) {
        goto LABEL_3;
      }
      if (a2) {
        goto LABEL_11;
      }
      uint64_t result = 147;
      break;
    default:
      goto LABEL_11;
  }
  return result;
}

uint64_t sub_1CBE5736C(uint64_t result, uint64_t a2, unint64_t a3)
{
  switch((int)result)
  {
    case 146:
      uint64x2_t v4 = (uint64x2_t)vdupq_n_s64(a3);
      *(unsigned char *)(a2 + 3) |= a3 & 0xFE;
      int32x4_t v5 = (int32x4_t)vshlq_u64(v4, (uint64x2_t)xmmword_1CF7F0220);
      int16x8_t v6 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v4, (uint64x2_t)xmmword_1CF7F0230), v5);
      v5.i32[0] = *(_DWORD *)(a2 + 4);
      *(int8x8_t *)v6.i8 = vorr_s8((int8x8_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v5.i8), (int8x8_t)vmovn_s32((int32x4_t)v6));
      *(_DWORD *)(a2 + 4) = vmovn_s16(v6).u32[0];
      unint64_t v7 = a3 >> 40;
      goto LABEL_4;
    case 147:
      *(unsigned char *)a2 |= ((_BYTE)a3 << 6) & 0x80;
      char v11 = *(unsigned char *)(a2 + 1);
      *(unsigned char *)(a2 + 2) |= (a3 >> 3) & 8 | (a3 >> 4) & 2 | (a3 >> 2) & 0xE0;
      *(unsigned char *)(a2 + 1) = (a3 >> 10) & 0xF | (16 * ((a3 >> 2) & 7)) | v11;
      *(unsigned char *)(a2 + 3) |= ((a3 >> 30) | (a3 >> 29) | (a3 >> 31) | BYTE4(a3) | (a3 >> 33) | (a3 >> 34) | (a3 >> 35) | (a3 >> 36) | (a3 >> 37) | (a3 >> 38) | (a3 >> 39) | BYTE5(a3) | (a3 >> 41) | (a3 >> 42) | (a3 >> 43) | (a3 >> 25) | (a3 >> 10) | (a3 >> 11) | (a3 >> 12) | (a3 >> 13) | (a3 >> 14) | (a3 >> 15) | BYTE2(a3) | (a3 >> 17) | (a3 >> 18) | (a3 >> 19) | (a3 >> 20) | (a3 >> 21) | (a3 >> 22) | (a3 >> 23) | BYTE3(a3)) & 0x10;
      break;
    case 148:
      *(unsigned char *)a2 |= ((_BYTE)a3 << 6) & 0x80;
      char v3 = *(unsigned char *)(a2 + 1);
      *(unsigned char *)(a2 + 2) |= (a3 >> 3) & 8 | (a3 >> 4) & 2 | (a3 >> 2) & 0xE0;
      *(unsigned char *)(a2 + 1) = (a3 >> 10) & 0xF | (16 * ((a3 >> 2) & 7)) | v3;
      *(unsigned char *)(a2 + 3) |= (a3 >> 10) & 0x10;
      *(unsigned char *)(a2 + 4) |= (a3 >> 15) & 0x1F;
      *(unsigned char *)(a2 + 6) |= a3 >> 20;
      *(unsigned char *)(a2 + 7) |= (a3 >> 25) & 0xC0 | (a3 >> 28) & 7;
      *(unsigned char *)(a2 + 8) |= a3 >> 33;
      *(unsigned char *)(a2 + 9) |= (a3 >> 41) & 0x7F;
      break;
    default:
      *(unsigned char *)(a2 + 2) |= (_BYTE)a3 << 6;
      uint64x2_t v8 = (uint64x2_t)vdupq_n_s64(a3 << 6);
      int32x4_t v9 = (int32x4_t)vshlq_u64(v8, (uint64x2_t)xmmword_1CF7F0220);
      int16x8_t v10 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v8, (uint64x2_t)xmmword_1CF7F0230), v9);
      v9.i32[0] = *(_DWORD *)(a2 + 3);
      *(int8x8_t *)v10.i8 = vorr_s8((int8x8_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v9.i8), (int8x8_t)vmovn_s32((int32x4_t)v10));
      *(_DWORD *)(a2 + 3) = vmovn_s16(v10).u32[0];
      *(unsigned char *)(a2 + 7) |= a3 >> 34;
      unint64_t v7 = (a3 >> 42) & 0x3F;
LABEL_4:
      *(unsigned char *)(a2 + 8) |= v7;
      break;
  }
  return result;
}

uint64_t sub_1CBE57710(uint64_t result, uint64_t a2, unint64_t a3)
{
  switch((int)result)
  {
    case 150:
      uint64x2_t v3 = (uint64x2_t)vdupq_n_s64(a3);
      *(unsigned char *)(a2 + 3) |= a3 & 0xFE;
      int32x4_t v4 = (int32x4_t)vshlq_u64(v3, (uint64x2_t)xmmword_1CF7F0220);
      int16x8_t v5 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v3, (uint64x2_t)xmmword_1CF7F0230), v4);
      v4.i32[0] = *(_DWORD *)(a2 + 4);
      *(int8x8_t *)v5.i8 = vorr_s8((int8x8_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v4.i8), (int8x8_t)vmovn_s32((int32x4_t)v5));
      *(_DWORD *)(a2 + 4) = vmovn_s16(v5).u32[0];
      unint64_t v6 = a3 >> 40;
      goto LABEL_3;
    case 151:
      *(unsigned char *)a2 |= ((_BYTE)a3 << 6) & 0x80;
      char v11 = *(unsigned char *)(a2 + 1);
      *(unsigned char *)(a2 + 2) |= (a3 >> 3) & 8 | (a3 >> 4) & 2 | (a3 >> 2) & 0xE0;
      *(unsigned char *)(a2 + 1) = (a3 >> 10) & 0xF | (16 * ((a3 >> 2) & 7)) | v11;
      *(unsigned char *)(a2 + 3) |= ((a3 >> 30) | (a3 >> 29) | (a3 >> 31) | BYTE4(a3) | (a3 >> 33) | (a3 >> 34) | (a3 >> 35) | (a3 >> 36) | (a3 >> 37) | (a3 >> 38) | (a3 >> 39) | BYTE5(a3) | (a3 >> 41) | (a3 >> 42) | (a3 >> 43) | (a3 >> 25) | (a3 >> 10) | (a3 >> 11) | (a3 >> 12) | (a3 >> 13) | (a3 >> 14) | (a3 >> 15) | BYTE2(a3) | (a3 >> 17) | (a3 >> 18) | (a3 >> 19) | (a3 >> 20) | (a3 >> 21) | (a3 >> 22) | (a3 >> 23) | BYTE3(a3)) & 0x10;
      break;
    case 152:
      *(unsigned char *)a2 |= ((_BYTE)a3 << 6) & 0x80;
      char v7 = *(unsigned char *)(a2 + 1);
      *(unsigned char *)(a2 + 2) |= (a3 >> 3) & 8 | (a3 >> 4) & 2 | (a3 >> 2) & 0xE0;
      *(unsigned char *)(a2 + 1) = (a3 >> 10) & 0xF | (16 * ((a3 >> 2) & 7)) | v7;
      *(unsigned char *)(a2 + 3) |= (a3 >> 10) & 0x10;
      *(unsigned char *)(a2 + 4) |= (a3 >> 15) & 0x1F;
      *(unsigned char *)(a2 + 6) |= a3 >> 20;
      *(unsigned char *)(a2 + 7) |= (a3 >> 25) & 0xC0 | (a3 >> 28) & 7;
      *(unsigned char *)(a2 + 8) |= a3 >> 33;
      *(unsigned char *)(a2 + 9) |= (a3 >> 41) & 0x7F;
      break;
    default:
      *(unsigned char *)(a2 + 2) |= (_BYTE)a3 << 6;
      uint64x2_t v8 = (uint64x2_t)vdupq_n_s64(a3 << 6);
      int32x4_t v9 = (int32x4_t)vshlq_u64(v8, (uint64x2_t)xmmword_1CF7F0220);
      int16x8_t v10 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v8, (uint64x2_t)xmmword_1CF7F0230), v9);
      v9.i32[0] = *(_DWORD *)(a2 + 3);
      *(int8x8_t *)v10.i8 = vorr_s8((int8x8_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v9.i8), (int8x8_t)vmovn_s32((int32x4_t)v10));
      *(_DWORD *)(a2 + 3) = vmovn_s16(v10).u32[0];
      *(unsigned char *)(a2 + 7) |= a3 >> 34;
      unint64_t v6 = (a3 >> 42) & 0x3F;
LABEL_3:
      *(unsigned char *)(a2 + 8) |= v6;
      break;
  }
  return result;
}

uint64_t sub_1CBE57BBC(uint64_t a1, int *a2, int *a3, int *a4, _DWORD *a5, unsigned char *a6)
{
  unsigned int v6 = a1;
  uint64_t v7 = a1 & 0xFF00000000;
  if ((a1 & 0xFF00000000) != 0 && a1 == 4 || v7 && (a1 & 0xFFFFFFFE) == 4)
  {
    uint64_t result = 1;
    goto LABEL_12;
  }
  uint64_t result = 1;
  if (!v7) {
    return result;
  }
  if (v6 > 3) {
    return result;
  }
  int v9 = a3[1];
  if (!v9) {
    return result;
  }
  if (v9 == 2)
  {
    unsigned int v10 = a2[1];
    if (v10 > 1)
    {
      if (v10 != 2) {
        return 0;
      }
      int v12 = *a2;
      int v13 = *a4;
      if (!(*a2 | *a4)) {
        goto LABEL_12;
      }
      if (v12 != 1 && v12 != 4) {
        return 0;
      }
      if (!v13) {
        goto LABEL_12;
      }
      BOOL v14 = v13 == 1;
    }
    else
    {
      int v11 = *a2;
      if (*a2 < 2) {
        goto LABEL_12;
      }
      if (v11 != 3)
      {
        if (v11 == 4) {
          goto LABEL_12;
        }
        return 0;
      }
      BOOL v14 = *a5 == 2;
      if (*a5 < 2u) {
        goto LABEL_12;
      }
    }
    if (v14)
    {
      int v15 = *a3;
      if (*a3 < 2) {
        goto LABEL_12;
      }
      if (v15 == 3)
      {
        a6[6] = 1;
        return result;
      }
      if (v15 == 5)
      {
LABEL_12:
        a6[5] = 1;
        return result;
      }
    }
    return 0;
  }
  if (v9 != 1) {
    return 0;
  }
  int v16 = a2[1];
  if (v16 != 2)
  {
    if (v16 == 1)
    {
LABEL_38:
      a6[4] = 1;
      return result;
    }
    if (v16) {
      return 0;
    }
  }
  switch(*a3)
  {
    case 0:
    case 3:
    case 5:
      a6[3] = 1;
      break;
    case 1:
      goto LABEL_38;
    default:
      return 0;
  }
  return result;
}

uint64_t sub_1CBE57D30(uint64_t a1, int *a2, int *a3, int *a4, _DWORD *a5, unsigned char *a6)
{
  uint64_t result = 1;
  if ((a1 & 0xFF00000000) == 0) {
    return result;
  }
  if (a1 != 4) {
    return result;
  }
  int v8 = a3[1];
  if (!v8) {
    return result;
  }
  if (v8 == 2)
  {
    unsigned int v9 = a2[1];
    if (v9 > 1)
    {
      if (v9 == 2)
      {
        int v11 = *a2;
        int v12 = *a4;
        if (!(*a2 | *a4)) {
          goto LABEL_8;
        }
        if (v11 == 1 || v11 == 4)
        {
          if (!v12) {
            goto LABEL_8;
          }
          BOOL v13 = v12 == 1;
          goto LABEL_14;
        }
      }
    }
    else
    {
      int v10 = *a2;
      if (*a2 < 2)
      {
LABEL_8:
        a6[5] = 1;
        return result;
      }
      if (v10 == 3)
      {
        BOOL v13 = *a5 == 2;
        if (*a5 < 2u) {
          goto LABEL_8;
        }
LABEL_14:
        if (v13)
        {
          int v14 = *a3;
          if (*a3 < 2 || v14 == 3 || v14 == 5) {
            goto LABEL_8;
          }
        }
        return 0;
      }
      if (v10 == 4) {
        goto LABEL_8;
      }
    }
    return 0;
  }
  if (v8 != 1) {
    return 0;
  }
  int v15 = a2[1];
  if (v15 != 2)
  {
    if (v15 == 1)
    {
LABEL_33:
      a6[4] = 1;
      return result;
    }
    if (v15) {
      return 0;
    }
  }
  switch(*a3)
  {
    case 0:
    case 3:
    case 5:
      a6[3] = 1;
      break;
    case 1:
      goto LABEL_33;
    default:
      return 0;
  }
  return result;
}

BOOL sub_1CBE57E7C()
{
  int v0 = MEMORY[0x1F4188790]();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  int v5 = v0;
  uint64_t v197 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = dword_1CF9451AC[(int)v1];
  v193 = v195;
  uint64_t v194 = 0x13800000000;
  unsigned int v7 = sub_1CBD854C8(v1);
  sub_1CBE58D1C(v4, v2, v7, (uint64_t)&v193, 0);
  int v8 = *((_DWORD *)v193 + 6 * v194 - 1);
  LODWORD(v194) = v194 - 1;
  uint64_t v171 = v6 | 0x100000000;
  int v172 = v194 - v8;
  int v173 = v8;
  int v174 = v8;
  uint64_t v175 = 0;
  v190 = v192;
  uint64_t v191 = 0x1000000000;
  sub_1CBE58FA8((uint64_t *)&v190, (unint64_t)&v171);
  unsigned int v9 = word_1CF7F0278[2 * v6];
  v188[0] = v189;
  v188[1] = (void *)0x1000000000;
  int v165 = v5;
  v166 = &v193;
  v167 = &v190;
  v168 = v188;
  unsigned int v169 = v9;
  LOBYTE(v170) = 0;
  BYTE4(v170) = 0;
  unsigned int v10 = v191;
  if (!v191) {
    goto LABEL_214;
  }
  int v11 = &v190;
  while (2)
  {
    if (BYTE4(v170))
    {
      int v12 = v168;
      int v13 = *((_DWORD *)v168 + 2);
      if (v13)
      {
        int v14 = (char *)*v168;
        int v15 = v170;
        do
        {
          int v16 = &v14[184 * v13];
          if (*((_DWORD *)v16 - 46) < (*((_DWORD *)v11 + 2) - 1) || v16 == (char *)176) {
            break;
          }
          if (v15 == *((_DWORD *)v16 - 44))
          {
            int v32 = *((_DWORD *)v16 - 42);
            *(_OWORD *)&v196[112] = *(_OWORD *)(v16 - 52);
            *(_OWORD *)&v196[128] = *(_OWORD *)(v16 - 36);
            *(_OWORD *)&v196[144] = *(_OWORD *)(v16 - 20);
            *(_DWORD *)&v196[160] = *((_DWORD *)v16 - 1);
            *(_OWORD *)&v196[48] = *(_OWORD *)(v16 - 116);
            *(_OWORD *)&v196[64] = *(_OWORD *)(v16 - 100);
            *(_OWORD *)&v196[80] = *(_OWORD *)(v16 - 84);
            *(_OWORD *)&v196[96] = *(_OWORD *)(v16 - 68);
            *(_OWORD *)v196 = *(_OWORD *)(v16 - 164);
            *(_OWORD *)&v196[16] = *(_OWORD *)(v16 - 148);
            *(_OWORD *)&v196[32] = *(_OWORD *)(v16 - 132);
            *((_DWORD *)v12 + 2) = v13 - 1;
            uint64_t v170 = 0;
            if (!v15)
            {
              long long v182 = *(_OWORD *)&v196[100];
              long long v183 = *(_OWORD *)&v196[116];
              long long v184 = *(_OWORD *)&v196[132];
              long long v185 = *(_OWORD *)&v196[148];
              long long v178 = *(_OWORD *)&v196[36];
              long long v179 = *(_OWORD *)&v196[52];
              long long v180 = *(_OWORD *)&v196[68];
              long long v181 = *(_OWORD *)&v196[84];
              long long v176 = *(_OWORD *)&v196[4];
              long long v177 = *(_OWORD *)&v196[20];
              BOOL v33 = *(_DWORD **)&v196[36];
              char v34 = (int *)(*(void *)&v196[12] + 8);
              if (**(_DWORD **)&v196[12] == 1)
              {
                BOOL v33 = (_DWORD *)(v178 + 16);
              }
              else if (!**(_DWORD **)&v196[12])
              {
                BOOL v33 = (_DWORD *)(v178 + 8 * (*(_DWORD *)v178 + 1));
              }
              int v132 = v176 + 1;
              if (v176 + 1 == DWORD2(v180))
              {
LABEL_166:
                LODWORD(v170) = 0;
                BYTE4(v170) = 1;
              }
              else
              {
                v133 = (void *)(*((void *)&v177 + 1) + 8 * (**((_DWORD **)&v177 + 1) + 1));
                int v134 = (_DWORD *)(v177 + 8);
                while (1)
                {
                  uint64_t v135 = *v133;
                  if (!*v133) {
                    break;
                  }
                  uint64_t v136 = 8 * v135;
                  int v137 = v133 + 1;
                  while (*v137 != v165)
                  {
                    ++v137;
                    v136 -= 8;
                    if (!v136)
                    {
                      int v137 = &v133[v135 + 1];
                      break;
                    }
                  }
                  if (v135 != v137 - (v133 + 1)) {
                    break;
                  }
                  int v139 = *v34;
                  v34 += 2;
                  int v138 = v139;
                  if (v139 == 1)
                  {
                    v33 += 4;
                  }
                  else if (!v138)
                  {
                    v33 += 2 * (*v33 + 1);
                  }
                  ++v132;
                  v133 += *v133 + 1;
                  v134 += 2;
                  if (v132 == DWORD2(v180)) {
                    goto LABEL_166;
                  }
                }
                LODWORD(v176) = v132;
                *((void *)&v176 + 1) = v34;
                *(void *)&long long v177 = v134;
                *((void *)&v177 + 1) = v133;
                *(void *)&long long v178 = v33;
                *((void *)&v178 + 1) = v34;
                *(void *)&long long v179 = v134;
                *((void *)&v179 + 1) = v133;
                *(void *)&long long v180 = v33;
                unsigned int v169 = v32 + *v134;
                sub_1CBE590BC(*((unsigned int *)v11 + 2), (uint64_t)v12, v32, &v176);
              }
            }
            goto LABEL_209;
          }
          *((_DWORD *)v12 + 2) = --v13;
        }
        while (v13);
      }
LABEL_26:
      sub_1CBE59054((uint64_t)&v165);
      goto LABEL_208;
    }
    unsigned int v18 = v169;
    unsigned int v19 = dword_1CF91ED18[v169] & 0x3FFFF;
    BOOL v20 = v19 == 0x3FFFF;
    if (v19 == 0x3FFFF) {
      unsigned int v19 = -1;
    }
    uint64_t v21 = (char *)&unk_1CF7F13A0 + 8 * v19;
    if (v20) {
      uint64_t v21 = 0;
    }
    uint64_t v22 = (uint64_t *)(v21 + 8);
    switch(*(_DWORD *)v21)
    {
      case 3:
        uint64_t v35 = *v22;
        int v36 = (unsigned int *)&v22[*v22 + 1];
        uint64_t v37 = *((void *)v36 + 2);
        unsigned int v38 = (uint64_t *)(v36 + 6);
        unsigned int v39 = &v36[2 * v37 + 6];
        uint64_t v40 = &v39[2 * v37];
        unsigned int v41 = v40;
        if (v37)
        {
          uint64_t v42 = *((void *)v36 + 2);
          unsigned int v41 = &v39[2 * v37];
          do
          {
            v41 += 2 * *v41 + 2;
            LODWORD(v42) = v42 - 1;
          }
          while (v42);
        }
        uint64_t v43 = *v36;
        if (!v35) {
          goto LABEL_130;
        }
        unsigned int v44 = v36[2];
        uint64_t v45 = v21 + 16;
        uint64_t v46 = (uint64_t)&v21[8 * v35 + 16];
        uint64_t v47 = 8 * v35;
        unint64_t v48 = v45;
        while (*(void *)v48 != v165)
        {
          v48 += 8;
          v47 -= 8;
          if (!v47)
          {
            unint64_t v48 = (char *)v46;
            break;
          }
        }
        if (v35 == (v48 - v45) >> 3)
        {
          unsigned int v49 = v169 + v44;
          goto LABEL_207;
        }
LABEL_130:
        uint64_t v112 = word_1CF941E96[v43] & 0x3FF;
        BOOL v113 = v112 == 1023;
        if (v112 == 1023) {
          uint64_t v112 = 0xFFFFFFFFLL;
        }
        BOOL v114 = (char *)&unk_1CF941B54 + v112;
        if (v113) {
          BOOL v114 = 0;
        }
        int v115 = (unsigned __int8 *)(v114 + 1);
        char v116 = *v114;
        if (*v114)
        {
          int v117 = v114[1];
          int v118 = v114[2];
          int v115 = (unsigned __int8 *)(v114 + 3);
        }
        else
        {
          int v117 = 0;
          int v118 = 0;
        }
        if ((*v114 & 2) != 0)
        {
LABEL_149:
          uint64_t v127 = 0;
          uint64_t v128 = 0;
          unint64_t v129 = 0;
          int v130 = 1;
          goto LABEL_174;
        }
        uint64_t v119 = *v115;
        v120 = *v166;
        unsigned int v121 = *((_DWORD *)*v11 + 7 * v10 - 5) + v115[1];
        if (v119 == 1)
        {
LABEL_146:
          uint64_t v125 = &v120[6 * v121];
          goto LABEL_147;
        }
        long long v122 = v115 + 2;
        uint64_t v123 = v119 - 1;
        while (2)
        {
          int v124 = v120[6 * v121 + 1];
          if (v124 == 1)
          {
            unsigned int v121 = v120[6 * v121 + 4] + *v122;
            goto LABEL_145;
          }
          if (v124 != 2)
          {
            if (!v124) {
              goto LABEL_221;
            }
LABEL_145:
            ++v122;
            if (!--v123) {
              goto LABEL_146;
            }
            continue;
          }
          break;
        }
        uint64_t v125 = &unk_1EBCC28C0;
        if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1EBCC28A0, memory_order_acquire) & 1) == 0
          && __cxa_guard_acquire(&qword_1EBCC28A0))
        {
          unk_1EBCC28C0 = 0x200000000;
          uint64_t v125 = &unk_1EBCC28C0;
          byte_1EBCC28C8 = 0;
          byte_1EBCC28CC = 0;
          __cxa_guard_release(&qword_1EBCC28A0);
        }
LABEL_147:
        int v126 = v125[1];
        if (v126)
        {
          if (v126 == 2) {
            goto LABEL_149;
          }
          v156 = "Sels should always select scalars.";
LABEL_222:
          llvm::report_fatal_error((llvm *)v156, (const llvm::Twine *)1);
        }
        int v130 = 0;
        if (v118 - v117 == -1) {
          unint64_t v140 = 0;
        }
        else {
          unint64_t v140 = 0xFFFFFFFFFFFFFFFFLL >> ~(v118 - v117);
        }
        unint64_t v141 = (*((void *)v125 + 2) >> v117) & v140;
        if ((v116 & 1) == 0) {
          unint64_t v141 = *((void *)v125 + 2);
        }
        unint64_t v129 = v141 & 0xFFFFFFFFFFFFFF00;
        uint64_t v128 = v141;
        uint64_t v127 = 1;
LABEL_174:
        unint64_t v142 = v129 | v128;
        *(void *)v196 = 0;
        *(void *)&v196[8] = v38;
        *(void *)&v196[16] = v39;
        *(void *)&v196[24] = &v39[2 * v37];
        *(void *)&v196[32] = v41;
        *(void *)&v196[40] = v38;
        *(_OWORD *)&v196[48] = __PAIR128__(*(unint64_t *)&v196[24], (unint64_t)v39);
        *(void *)&v196[64] = v41;
        *(_DWORD *)&v196[72] = v37;
        memset(&v196[76], 0, 68);
        *(void *)&v196[144] = v142;
        *(void *)&v196[152] = v127;
        int v143 = v169;
        if (v130)
        {
          v169 += *v39;
          sub_1CBE590BC(*((unsigned int *)v167 + 2), (uint64_t)v168, v143, v196);
          goto LABEL_208;
        }
        if (!v37)
        {
LABEL_204:
          LODWORD(v170) = 0;
          if (!BYTE4(v170)) {
            BYTE4(v170) = 1;
          }
          goto LABEL_208;
        }
        unsigned int v144 = 0;
        while (2)
        {
          uint64_t v145 = *(void *)v40;
          if (*(void *)v40)
          {
            uint64_t v146 = 8 * v145;
            uint64_t v147 = (char *)(v40 + 2);
            while (*(void *)v147 != v165)
            {
              v147 += 8;
              v146 -= 8;
              if (!v146)
              {
                uint64_t v147 = (char *)&v40[2 * v145 + 2];
                break;
              }
            }
            if (v145 == (v147 - (char *)(v40 + 2)) >> 3)
            {
              uint64_t v148 = *v38;
              goto LABEL_199;
            }
          }
          LODWORD(v148) = *(_DWORD *)v38;
          if (*(_DWORD *)v38)
          {
            if (*(void *)v41 <= v142 && *((void *)v41 + 1) >= v142) {
              break;
            }
            goto LABEL_199;
          }
          uint64_t v151 = v41 + 2;
          uint64_t v150 = *v41;
          if (*v41)
          {
            uint64_t v152 = 8 * v150;
            v153 = (char *)(v41 + 2);
            while (*(void *)v153 != v142)
            {
              v153 += 8;
              v152 -= 8;
              if (!v152)
              {
                v153 = (char *)&v151[2 * v150];
                break;
              }
            }
          }
          else
          {
            v153 = (char *)(v41 + 2);
          }
          if (v150 == (v153 - (char *)v151) >> 3)
          {
LABEL_199:
            if (v148 == 1)
            {
              v41 += 4;
            }
            else if (!v148)
            {
              v41 += 2 * *v41 + 2;
            }
            ++v144;
            ++v38;
            v40 += 2 * *(void *)v40 + 2;
            v39 += 2;
            if (v144 == v37) {
              goto LABEL_204;
            }
            continue;
          }
          break;
        }
        *(void *)v196 = v144;
        *(void *)&v196[8] = v38;
        *(void *)&v196[16] = v39;
        *(void *)&v196[24] = v40;
        *(void *)&v196[32] = v41;
        *(void *)&v196[40] = v38;
        *(void *)&v196[48] = v39;
        *(void *)&v196[56] = v40;
        *(void *)&v196[64] = v41;
        unsigned int v49 = v169 + *v39;
LABEL_207:
        unsigned int v169 = v49;
LABEL_208:
        int v11 = v167;
LABEL_209:
        unsigned int v10 = *((_DWORD *)v11 + 2);
        if (v10) {
          continue;
        }
LABEL_214:
        int v154 = BYTE4(v170);
        if (v188[0] != v189) {
          free(v188[0]);
        }
        if (v190 != v192) {
          free(v190);
        }
        if (v193 != v195) {
          free(v193);
        }
        return v154 == 0;
      case 4:
        uint64_t v50 = *((void *)v21 + 2);
        unsigned int v51 = *((_DWORD *)v168 + 2);
        if (v51)
        {
          unsigned int v52 = v10 - 1;
          uint64_t v53 = (uint64_t)*v168 + 184 * v51;
          BOOL v54 = *(_DWORD *)(v53 - 184) < v52 || v53 == 176;
          if (!v54 && !*(_DWORD *)(v53 - 176) && *(_DWORD *)(v53 - 168) == *((void *)v21 + 1)) {
            *((_DWORD *)v168 + 2) = v51 - 1;
          }
        }
        unsigned int v31 = v18 + v50;
        goto LABEL_50;
      case 5:
        goto LABEL_26;
      default:
        uint64_t v23 = &v22[*((void *)v21 + 1) + 1];
        uint64_t v24 = *v23;
        uint64_t v25 = *((unsigned int *)v23 + 2);
        uint64_t v26 = *((void *)v21 + 1);
        if (!*((void *)v21 + 1)) {
          goto LABEL_24;
        }
        unint64_t v27 = v21 + 16;
        uint64_t v28 = (uint64_t)&v21[8 * v26 + 16];
        uint64_t v29 = 8 * v26;
        uint64_t v30 = v27;
        do
        {
          if (*(void *)v30 == v165) {
            goto LABEL_23;
          }
          v30 += 8;
          v29 -= 8;
        }
        while (v29);
        uint64_t v30 = (char *)v28;
LABEL_23:
        if (v26 == (v30 - v27) >> 3) {
          goto LABEL_25;
        }
LABEL_24:
        if (byte_1CF93605C[v24])
        {
LABEL_25:
          unsigned int v31 = v169 + 1;
LABEL_50:
          unsigned int v169 = v31;
          goto LABEL_208;
        }
        int v55 = v166;
        unsigned int v56 = dword_1CF937868[v24] & 0xFFF;
        if (v56 == 4095) {
          unsigned int v56 = -1;
        }
        uint64_t v57 = (char *)&unk_1CF9364A6 + 2 * v56;
        if ((dword_1CF937868[v24] & 0xFFF) == 0xFFF) {
          int v58 = 0;
        }
        else {
          int v58 = (unsigned __int16 *)v57;
        }
        unsigned int v59 = dword_1CF93B56C[v25];
        unsigned int v60 = v59 & 0x1FFF;
        unsigned int v61 = v59 >> 13;
        BOOL v62 = v60 == 0x1FFF;
        if (v60 == 0x1FFF)
        {
          unsigned int v60 = -1;
          unsigned int v61 = 0;
        }
        uint64_t v63 = (char *)&unk_1CF938990 + 2 * v60;
        if (v62) {
          int v64 = 0;
        }
        else {
          int v64 = (unsigned __int16 *)v63;
        }
        unint64_t v65 = *((unsigned int *)v166 + 2);
        uint64_t v161 = v24;
        int v162 = v24;
        if (!v61)
        {
          sub_1CBE592CC((uint64_t)v166, v65);
          unsigned int v66 = 0;
          goto LABEL_151;
        }
        unsigned int v66 = 0;
        unint64_t v67 = &v64[v61];
        uint64_t v68 = v64;
        uint64_t v69 = v64;
        do
        {
          int v71 = *v69++;
          int v70 = v71;
          if (v71 == 1)
          {
            uint64_t v69 = v68 + 2;
          }
          else if (!v70)
          {
            unint64_t v72 = v68[1];
            uint64_t v73 = 2;
            if (v72) {
              uint64_t v73 = 4;
            }
            uint64_t v74 = &v68[v73];
            if ((v72 & 2) != 0) {
              v74 += *v74 + 1;
            }
            uint64_t v69 = &v74[((v72 >> 2) & 1) + 1 + v74[(v72 >> 2) & 1]];
          }
          ++v66;
          uint64_t v68 = v69;
        }
        while (v69 != v67);
        sub_1CBE592CC((uint64_t)v166, v65 + v66);
        int v76 = 0;
        unsigned int v77 = v64;
        int v163 = v65;
LABEL_73:
        int v79 = *v77++;
        int v78 = v79;
        if (v79 == 2)
        {
          char v80 = 0;
          char v81 = 0;
          int v82 = 2;
          goto LABEL_120;
        }
        if (v78 == 1)
        {
          char v80 = 0;
          char v81 = 0;
          int v82 = 0;
          unint64_t v75 = *v77;
          goto LABEL_120;
        }
        unsigned __int16 v83 = v64[1];
        if (v83)
        {
          int v84 = v64[2];
          int v85 = v64[3];
          uint64_t v86 = v64 + 4;
          if ((v83 & 2) != 0)
          {
LABEL_79:
            unint64_t v87 = v86 + 1;
            uint64_t v164 = *v86;
            v86 += v164 + 1;
            if ((v83 & 4) != 0) {
              goto LABEL_80;
            }
            goto LABEL_84;
          }
        }
        else
        {
          int v84 = 0;
          int v85 = 0;
          uint64_t v86 = v64 + 2;
          if ((v83 & 2) != 0) {
            goto LABEL_79;
          }
        }
        uint64_t v164 = 0;
        unint64_t v87 = 0;
        if ((v83 & 4) != 0)
        {
LABEL_80:
          __int16 v89 = *v86++;
          char v88 = v89;
          if ((v83 & 8) != 0)
          {
LABEL_81:
            char v80 = 0;
            char v81 = 0;
            int v82 = 2;
            goto LABEL_119;
          }
LABEL_85:
          uint64_t v90 = *v86;
          uint64_t v91 = *v55;
          unsigned int v92 = *((_DWORD *)*v167 + 7 * *((unsigned int *)v167 + 2) - 5) + v86[1];
          if (v90 == 1)
          {
LABEL_93:
            uint64_t v96 = (char *)&v91[6 * v92];
            goto LABEL_94;
          }
          uint64_t v93 = v86 + 2;
          uint64_t v94 = 2 * v90 - 2;
          while (1)
          {
            int v95 = v91[6 * v92 + 1];
            switch(v95)
            {
              case 1:
                unsigned int v92 = v91[6 * v92 + 4] + *v93;
                break;
              case 2:
                uint64_t v96 = (char *)&unk_1EBCC28A8;
                if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1EBCC2898, memory_order_acquire) & 1) == 0)
                {
                  char v157 = v88;
                  int v158 = v85;
                  int v159 = v84;
                  if (__cxa_guard_acquire(&qword_1EBCC2898))
                  {
                    unk_1EBCC28A8 = 0x200000000;
                    uint64_t v96 = (char *)&unk_1EBCC28A8;
                    byte_1EBCC28B0 = 0;
                    byte_1EBCC28B4 = 0;
                    __cxa_guard_release(&qword_1EBCC2898);
                  }
                  int v84 = v159;
                  int v85 = v158;
                  char v88 = v157;
                }
LABEL_94:
                int v97 = *((_DWORD *)v96 + 1);
                if (v97 == 2)
                {
                  char v81 = v96[8];
                  LOWORD(v176) = *(_WORD *)(v96 + 9);
                  BYTE2(v176) = v96[11];
                  char v80 = v96[12];
                  __int16 v186 = *(_WORD *)(v96 + 13);
                  char v187 = v96[15];
                  int v82 = 2;
LABEL_99:
                  unint64_t v75 = *((void *)v96 + 2);
                  goto LABEL_119;
                }
                if (v97 == 1)
                {
                  if ((v83 & 2) == 0)
                  {
                    char v81 = v96[8];
                    LOWORD(v176) = *(_WORD *)(v96 + 9);
                    BYTE2(v176) = v96[11];
                    char v80 = v96[12];
                    __int16 v186 = *(_WORD *)(v96 + 13);
                    char v187 = v96[15];
                    int v82 = 1;
                    goto LABEL_99;
                  }
                  uint64_t v160 = *((unsigned int *)v55 + 2);
                  if (v164)
                  {
                    int v103 = *((_DWORD *)v96 + 4) - 1;
                    uint64_t v104 = 2 * v164;
                    do
                    {
                      if (*v87)
                      {
                        uint64_t v105 = (uint64_t)*v55 + 24 * v103 + 24 * (unsigned __int16)*v87;
                        long long v106 = *(_OWORD *)v105;
                        *(void *)&v196[16] = *(void *)(v105 + 16);
                        *(_OWORD *)v196 = v106;
                      }
                      else
                      {
                        *(void *)v196 = 0x200000000;
                        v196[8] = 0;
                        v196[12] = 0;
                      }
                      sub_1CBC0D590((uint64_t)v55, (__n128 *)v196);
                      ++v87;
                      v104 -= 2;
                    }
                    while (v104);
                  }
                  char v80 = 0;
                  char v81 = 0;
                  unint64_t v75 = (v164 << 32) | v160;
                  int v82 = 1;
LABEL_119:
                  LODWORD(v65) = v163;
                }
                else
                {
                  LODWORD(v65) = v163;
                  char v81 = v96[8];
                  LOWORD(v176) = *(_WORD *)(v96 + 9);
                  BYTE2(v176) = v96[11];
                  char v80 = v96[12];
                  __int16 v186 = *(_WORD *)(v96 + 13);
                  char v187 = v96[15];
                  unint64_t v75 = *((void *)v96 + 2);
                  int v98 = v85 - v84;
                  unint64_t v99 = v75 >> v84;
                  unint64_t v100 = 0xFFFFFFFFFFFFFFFFLL >> ~(v85 - v84);
                  if (v98 == -1) {
                    unint64_t v101 = 0;
                  }
                  else {
                    unint64_t v101 = v100;
                  }
                  unint64_t v102 = v99 & v101;
                  if (v83) {
                    unint64_t v75 = v102;
                  }
                  if ((v83 & 4) != 0) {
                    v75 &= 0xFFFFFFFFFFFFFFFFLL >> ~v88;
                  }
                  int v82 = 0;
                }
LABEL_120:
                int v107 = *v58++;
                uint64_t v108 = (uint64_t)*v55 + 24 * (v76 + v65);
                *(_DWORD *)uint64_t v108 = v107;
                *(_DWORD *)(v108 + 4) = v82;
                *(unsigned char *)(v108 + 8) = v81;
                *(_WORD *)(v108 + 9) = v176;
                *(unsigned char *)(v108 + 11) = BYTE2(v176);
                *(unsigned char *)(v108 + 12) = v80;
                *(_WORD *)(v108 + 13) = v186;
                *(unsigned char *)(v108 + 15) = v187;
                *(void *)(v108 + 16) = v75;
                if (*v64 == 1)
                {
                  unsigned int v77 = v64 + 2;
                }
                else if (!*v64)
                {
                  unint64_t v109 = v64[1];
                  uint64_t v110 = 2;
                  if (v109) {
                    uint64_t v110 = 4;
                  }
                  v111 = &v64[v110];
                  if ((v109 & 2) != 0) {
                    v111 += *v111 + 1;
                  }
                  unsigned int v77 = &v111[((v109 >> 2) & 1) + 1 + v111[(v109 >> 2) & 1]];
                }
                ++v76;
                int v64 = v77;
                if (v77 == v67)
                {
                  unsigned int v18 = v169;
                  int v11 = v167;
LABEL_151:
                  int v131 = *((_DWORD *)v55 + 2) - v65;
                  *(void *)v196 = v161 | 0x100000000;
                  *(_DWORD *)&v196[8] = v65;
                  *(_DWORD *)&v196[12] = v66;
                  *(_DWORD *)&v196[16] = v131;
                  *(void *)&v196[20] = (v18 + 1) | 0x100000000;
                  sub_1CBE58FA8((uint64_t *)v11, (unint64_t)v196);
                  unsigned int v169 = word_1CF7F0278[2 * v162];
                  goto LABEL_208;
                }
                goto LABEL_73;
              case 0:
LABEL_221:
                v156 = "Tried to dereference the member of a scalar, which is impossible since scalars have no members.";
                goto LABEL_222;
            }
            ++v93;
            v94 -= 2;
            if (!v94) {
              goto LABEL_93;
            }
          }
        }
LABEL_84:
        char v88 = 0;
        if ((v83 & 8) != 0) {
          goto LABEL_81;
        }
        goto LABEL_85;
    }
  }
}

uint64_t sub_1CBE58D1C(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5)
{
  v31[48] = *MEMORY[0x1E4F143B8];
  __src = v31;
  uint64_t v30 = 0x1000000000;
  int v10 = sub_1CBD854D8(a3);
  if ((v10 - 2) >= 3)
  {
    if (v10 == 5) {
      llvm::report_fatal_error((llvm *)"Don't expect externs here.", (const llvm::Twine *)1);
    }
    goto LABEL_17;
  }
  unsigned int v12 = dword_1CDF512C8[a3] & 0x1FFF;
  LODWORD(v13) = dword_1CDF512C8[a3] >> 13;
  BOOL v14 = v12 == 0x1FFF;
  if (v12 == 0x1FFF)
  {
    unsigned int v12 = -1;
    uint64_t v13 = 0;
  }
  else
  {
    uint64_t v13 = v13;
  }
  int v11 = (char *)&unk_1CDF4DA98 + 2 * v12;
  if (v14) {
    int v15 = 0;
  }
  else {
    int v15 = (unsigned __int16 *)v11;
  }
  if (!v13) {
    goto LABEL_17;
  }
  uint64_t v16 = 2 * v13;
  do
  {
    unsigned int v17 = *v15++;
    a5 = sub_1CBE58D1C(a1, a2, v17, a4, a5);
    unsigned int v18 = *(_DWORD *)(a4 + 8);
    uint64_t v19 = *(void *)a4 + 24 * v18;
    BOOL v20 = *(char **)(v19 - 8);
    __n128 v27 = *(__n128 *)(v19 - 24);
    uint64_t v28 = v20;
    *(_DWORD *)(a4 + 8) = v18 - 1;
    sub_1CBC0D590((uint64_t)&__src, &v27);
    v16 -= 2;
  }
  while (v16);
  uint64_t v21 = v30;
  if (!v30)
  {
LABEL_17:
    int v24 = 2;
    if (a5 != 156)
    {
      int v11 = (char *)(a1 + 8 * (a5 >> 6));
      if (((1 << a5) & *((void *)v11 + 156)) != 0)
      {
        int v24 = 0;
        int v11 = *(char **)(a1 + 8 * a5);
      }
    }
    v27.n128_u64[0] = __PAIR64__(v24, a3);
    uint64_t v28 = v11;
    int v25 = sub_1CBD854E8(a2);
    v27.n128_u8[12] = 1;
    v27.n128_u32[2] = v25 + a5;
    a5 = (a5 + 1);
    goto LABEL_21;
  }
  uint64_t v22 = 0;
  uint64_t v23 = *(unsigned int *)(a4 + 8);
  while (*(_DWORD *)((char *)__src + v22 + 4) == 2)
  {
    v22 += 24;
    if (24 * v30 == v22)
    {
      v27.n128_u64[0] = a3 | 0x200000000;
      v27.n128_u8[8] = 0;
      v27.n128_u8[12] = 0;
      goto LABEL_21;
    }
  }
  if (v23 + (unint64_t)v30 > *(unsigned int *)(a4 + 12)) {
    llvm::SmallVectorBase<unsigned int>::grow_pod();
  }
  memcpy((void *)(*(void *)a4 + 24 * *(unsigned int *)(a4 + 8)), __src, 24 * v30);
  *(_DWORD *)(a4 + 8) += v21;
  v27.n128_u64[0] = a3 | 0x100000000;
  v27.n128_u8[8] = 0;
  v27.n128_u8[12] = 0;
  uint64_t v28 = (char *)(v23 | (v21 << 32));
LABEL_21:
  sub_1CBC0D590(a4, &v27);
  if (__src != v31) {
    free(__src);
  }
  return a5;
}

__n128 sub_1CBE58FA8(uint64_t *a1, unint64_t a2)
{
  unsigned int v2 = *((_DWORD *)a1 + 2);
  unint64_t v3 = *a1;
  if (v2 >= *((_DWORD *)a1 + 3))
  {
    unint64_t v6 = v3 + 28 * v2;
    if (v3 > a2 || v6 <= a2) {
      llvm::SmallVectorBase<unsigned int>::grow_pod();
    }
    llvm::SmallVectorBase<unsigned int>::grow_pod();
  }
  unint64_t v4 = v3 + 28 * *((unsigned int *)a1 + 2);
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(v4 + 12) = *(_OWORD *)(a2 + 12);
  *(__n128 *)unint64_t v4 = result;
  ++*((_DWORD *)a1 + 2);
  return result;
}

void sub_1CBE59054(uint64_t a1)
{
  uint64_t v2 = **(void **)(a1 + 16) + 28 * *(unsigned int *)(*(void *)(a1 + 16) + 8);
  uint64_t v3 = *(void *)(v2 - 8);
  if ((v3 & 0xFF00000000) != 0) {
    *(_DWORD *)(a1 + 32) = v3;
  }
  sub_1CBE592CC(*(void *)(a1 + 8), *(unsigned int *)(*(void *)(a1 + 8) + 8) - (unint64_t)*(unsigned int *)(v2 - 12));
  --*(_DWORD *)(*(void *)(a1 + 16) + 8);
}

uint64_t sub_1CBE590BC(uint64_t result, uint64_t a2, int a3, _OWORD *a4)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  long long v4 = a4[7];
  *(_OWORD *)&v30[100] = a4[6];
  *(_OWORD *)&v30[116] = v4;
  long long v5 = a4[9];
  *(_OWORD *)&v30[132] = a4[8];
  *(_OWORD *)&v30[148] = v5;
  long long v6 = a4[3];
  *(_OWORD *)&v30[36] = a4[2];
  *(_OWORD *)&v30[52] = v6;
  long long v7 = a4[5];
  *(_OWORD *)&v30[68] = a4[4];
  *(_OWORD *)&v30[84] = v7;
  long long v8 = a4[1];
  *(_OWORD *)&v30[4] = *a4;
  *(_OWORD *)&v30[20] = v8;
  unsigned int v9 = *(_DWORD *)(a2 + 8);
  if (v9 >= *(_DWORD *)(a2 + 12))
  {
    long long v26 = *(_OWORD *)&v30[112];
    long long v27 = *(_OWORD *)&v30[128];
    long long v28 = *(_OWORD *)&v30[144];
    long long v22 = *(_OWORD *)&v30[48];
    long long v23 = *(_OWORD *)&v30[64];
    long long v24 = *(_OWORD *)&v30[80];
    long long v25 = *(_OWORD *)&v30[96];
    long long v19 = *(_OWORD *)v30;
    long long v20 = *(_OWORD *)&v30[16];
    v18[0] = result - 1;
    _OWORD v18[2] = 0;
    v18[4] = a3;
    unint64_t v16 = *(void *)a2;
    unint64_t v17 = *(void *)a2 + 184 * v9;
    int v29 = *(_DWORD *)&v30[160];
    long long v21 = *(_OWORD *)&v30[32];
    if (v16 > (unint64_t)v18 || v17 <= (unint64_t)v18) {
      llvm::SmallVectorBase<unsigned int>::grow_pod();
    }
    llvm::SmallVectorBase<unsigned int>::grow_pod();
  }
  uint64_t v10 = *(void *)a2 + 184 * v9;
  long long v11 = *(_OWORD *)&v30[96];
  *(_OWORD *)(v10 + 132) = *(_OWORD *)&v30[112];
  long long v12 = *(_OWORD *)&v30[144];
  *(_OWORD *)(v10 + 148) = *(_OWORD *)&v30[128];
  *(_OWORD *)(v10 + 164) = v12;
  long long v13 = *(_OWORD *)&v30[32];
  *(_OWORD *)(v10 + 68) = *(_OWORD *)&v30[48];
  long long v14 = *(_OWORD *)&v30[80];
  *(_OWORD *)(v10 + 84) = *(_OWORD *)&v30[64];
  *(_OWORD *)(v10 + 100) = v14;
  *(_OWORD *)(v10 + 116) = v11;
  long long v15 = *(_OWORD *)&v30[16];
  *(_OWORD *)(v10 + 20) = *(_OWORD *)v30;
  *(_OWORD *)(v10 + 36) = v15;
  *(_DWORD *)uint64_t v10 = result - 1;
  *(_DWORD *)(v10 + 8) = 0;
  *(_DWORD *)(v10 + 16) = a3;
  *(_DWORD *)(v10 + 180) = *(_DWORD *)&v30[160];
  *(_OWORD *)(v10 + 52) = v13;
  ++*(_DWORD *)(a2 + 8);
  return result;
}

void sub_1CBE592CC(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = *(unsigned int *)(a1 + 8);
  if (v2 != a2)
  {
    int v3 = a2;
    if (v2 <= a2)
    {
      if (*(unsigned int *)(a1 + 12) < a2) {
        llvm::SmallVectorBase<unsigned int>::grow_pod();
      }
      if (v2 != a2) {
        bzero((void *)(*(void *)a1 + 24 * v2), 24 * ((-24 * v2 + 24 * a2 - 24) / 0x18) + 24);
      }
    }
    *(_DWORD *)(a1 + 8) = v3;
  }
}

uint64_t sub_1CBE59368(uint64_t *a1, int a2)
{
  char v2 = 0;
  uint64_t v3 = 0;
  v14[2] = *MEMORY[0x1E4F143B8];
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  v14[0] = &v11;
  v14[1] = &v12;
  v13[0] = (char *)&v11 + 4;
  v13[1] = (char *)&v12 + 4;
  uint64_t v4 = *a1;
  char v5 = 1;
  while (1)
  {
    char v6 = v5;
    uint64_t v7 = *((unsigned int *)a1 + 2);
    if (v7)
    {
      long long v8 = (unsigned char *)(v4 + 12);
      uint64_t v9 = 28 * v7;
      while (v3 != *((_DWORD *)v8 - 2))
      {
        v8 += 28;
        v9 -= 28;
        if (!v9) {
          goto LABEL_6;
        }
      }
      *(_DWORD *)v14[v3] = *((_DWORD *)v8 - 1);
      *(unsigned char *)v13[v3] = *v8 & 0x1F;
      uint64_t v4 = *a1;
      goto LABEL_9;
    }
LABEL_6:
    if (a2 == 0 && (v2 & 1) != 0) {
      break;
    }
LABEL_9:
    char v5 = 0;
    char v2 = 1;
    uint64_t v3 = 1;
    if ((v6 & 1) == 0) {
      return v11;
    }
  }
  *(unsigned char *)v13[v3] = 16;
  return v11;
}

void sub_1CBE59470(uint64_t *a1, unsigned int *a2)
{
  uint64_t v58 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = *((unsigned int *)a1 + 2);
  if (v4)
  {
    char v5 = 0;
    unint64_t v6 = *a1;
    uint64_t v7 = 96 * v4;
    do
    {
      if (*(_DWORD *)v6 == 1) {
        v5 |= (*(_DWORD *)(*(void *)(v6 + 24) + 8) & 0xFFFFFFFE) == 2;
      }
      v6 += 96;
      v7 -= 96;
    }
    while (v7);
    if (v5)
    {
      uint64_t v8 = a2[2];
      if (v8)
      {
        uint64_t v9 = 96 * v8;
        uint64_t v10 = (_DWORD *)(*(void *)a2 + 32);
        do
        {
          if (*(v10 - 8) == 1 && *v10 == 2)
          {
            uint64_t v11 = (long long *)*((void *)v10 - 1);
            if (*((_DWORD *)v11 + 2) == 4 && *((_DWORD *)v11 + 9) == 10)
            {
              int v55 = v57;
              uint64_t v56 = 0x200000000;
              long long v12 = *v11;
              *(_OWORD *)&v57[12] = *(long long *)((char *)v11 + 12);
              *(_OWORD *)uint64_t v57 = v12;
              LODWORD(v56) = 1;
              int v13 = *(v10 - 7);
              *(_DWORD *)unsigned int v52 = *(v10 - 8);
              *(_DWORD *)&v52[4] = v13;
              *(void *)&v52[24] = v54;
              *(_OWORD *)BOOL v54 = v12;
              *(_OWORD *)&v54[12] = *(_OWORD *)&v57[12];
              uint64_t v53 = 0x200000001;
              sub_1CBE5E8F0((uint64_t *)a2, (long long *)v52);
              if (*(unsigned char **)&v52[24] != v54) {
                free(*(void **)&v52[24]);
              }
              unsigned int v14 = *v10;
              if (*v10 != 1)
              {
                memmove(*((void **)v10 - 1), (const void *)(*((void *)v10 - 1) + 28), 28 * v14 - 28);
                unsigned int v14 = *v10;
              }
              *uint64_t v10 = v14 - 1;
              *(_DWORD *)(*((void *)v10 - 1) + 4) = 0;
              if (v55 != v57) {
                free(v55);
              }
            }
          }
          v10 += 24;
          v9 -= 96;
        }
        while (v9);
        LODWORD(v4) = *((_DWORD *)a1 + 2);
      }
    }
  }
  unsigned int v15 = a2[2];
  if (v15)
  {
    unint64_t v16 = *(void *)a2;
    uint64_t v51 = *(void *)a2 + 96 * v15;
    do
    {
      if (*(_DWORD *)v16 == 1)
      {
        unsigned int v17 = *(_DWORD *)(v16 + 32);
        if (!v17) {
          goto LABEL_74;
        }
        unsigned int v18 = *(_OWORD **)(v16 + 24);
        long long v19 = v18;
        do
        {
          if (v4)
          {
            uint64_t v20 = 0;
            unint64_t v21 = *a1;
            while (1)
            {
              long long v22 = (int *)(v21 + 96 * v20);
              int v24 = *v22;
              int v23 = v22[1];
              if (v24 == 1 && v23 == *(_DWORD *)(v16 + 4))
              {
                unint64_t v26 = v21 + 96 * v20;
                uint64_t v27 = *(unsigned int *)(v26 + 32);
                if (v27) {
                  break;
                }
              }
LABEL_39:
              if (++v20 == v4) {
                goto LABEL_40;
              }
            }
            long long v28 = (unsigned char *)(*(void *)(v26 + 24) + 24);
            uint64_t v29 = 28 * v27;
            while (*((_DWORD *)v28 - 6) != *(_DWORD *)v19
                 || *((_DWORD *)v28 - 4) != *((_DWORD *)v19 + 2)
                 || *((_DWORD *)v28 - 3) != *((_DWORD *)v19 + 3))
            {
              v28 += 28;
              v29 -= 28;
              if (!v29) {
                goto LABEL_39;
              }
            }
            if (!*v28 && *((unsigned char *)v19 + 24))
            {
              *((_DWORD *)v28 - 1) = *((_DWORD *)v19 + 5);
              *long long v28 = 1;
              unsigned int v17 = *(_DWORD *)(v16 + 32);
            }
            uint64_t v30 = (char *)v18 + 28 * v17;
            if (v30 != (char *)v19 + 28)
            {
              memmove(v19, (char *)v19 + 28, v30 - ((char *)v19 + 28));
              unsigned int v17 = *(_DWORD *)(v16 + 32);
              unsigned int v18 = *(_OWORD **)(v16 + 24);
            }
            *(_DWORD *)(v16 + 32) = --v17;
          }
          else
          {
LABEL_40:
            long long v19 = (_OWORD *)((char *)v19 + 28);
          }
        }
        while (v19 != (_OWORD *)((char *)v18 + 28 * v17));
        if (!v17) {
          goto LABEL_74;
        }
        if (v17 == 2)
        {
          unsigned int v31 = *((_DWORD *)a1 + 2);
          unsigned int v32 = *((_DWORD *)a1 + 3);
          unint64_t v33 = *a1;
        }
        else
        {
          long long v38 = *v18;
          *(_OWORD *)&v52[12] = *(_OWORD *)((char *)v18 + 12);
          *(_OWORD *)unsigned int v52 = v38;
          unint64_t v33 = *a1;
          if (v4)
          {
            unsigned int v39 = (_DWORD *)(v33 + 24);
            uint64_t v40 = v4;
            while (1)
            {
              BOOL v41 = *(v39 - 6) == 1 && *(v39 - 5) == *(_DWORD *)(v16 + 4);
              if (v41 && v39[2] == 1)
              {
                unint64_t v42 = *(void *)v39;
                if (*(_DWORD *)(*(void *)v39 + 8) != 5 || (*(_DWORD *)&v52[8] - 1) >= 3) {
                  break;
                }
              }
              v39 += 24;
              if (!--v40) {
                goto LABEL_70;
              }
            }
            if (*(_DWORD *)(v42 + 12) >= *(_DWORD *)&v52[12])
            {
              *(_DWORD *)&v52[4] = 0;
              *(_DWORD *)(v42 + 4) = 1;
              sub_1CBE5EAF0((uint64_t)v39, v42, (unint64_t)v52);
            }
            else
            {
              *(_DWORD *)&v52[4] = 1;
              if (v39[3] <= 1u)
              {
                if (v42 > (unint64_t)v52 || v42 + 28 <= (unint64_t)v52) {
                  llvm::SmallVectorBase<unsigned int>::grow_pod();
                }
                llvm::SmallVectorBase<unsigned int>::grow_pod();
              }
              unsigned int v49 = (_OWORD *)(v42 + 28 * v39[2]);
              long long v50 = *(_OWORD *)v52;
              *(_OWORD *)((char *)v49 + 12) = *(_OWORD *)&v52[12];
              *unsigned int v49 = v50;
              ++v39[2];
            }
            goto LABEL_74;
          }
LABEL_70:
          unsigned int v31 = *((_DWORD *)a1 + 2);
          unsigned int v32 = *((_DWORD *)a1 + 3);
        }
        unint64_t v35 = v16;
        if (v31 >= v32)
        {
          if (v33 <= v16 && v33 + 96 * v31 > v16) {
            goto LABEL_85;
          }
          goto LABEL_56;
        }
      }
      else
      {
        unsigned int v34 = *((_DWORD *)a1 + 2);
        unint64_t v33 = *a1;
        unint64_t v35 = v16;
        if (v34 >= *((_DWORD *)a1 + 3))
        {
          unint64_t v36 = v33 + 96 * v34;
          if (v33 <= v16 && v36 > v16) {
LABEL_85:
          }
            sub_1CD423078();
LABEL_56:
          sub_1CD423078();
        }
      }
      unint64_t v44 = v33 + 96 * *((unsigned int *)a1 + 2);
      long long v45 = *(_OWORD *)v35;
      *(void *)(v44 + 16) = *(void *)(v35 + 16);
      *(_OWORD *)unint64_t v44 = v45;
      uint64_t v46 = (void *)(v44 + 40);
      *(void *)(v44 + 32) = 0x200000000;
      *(void *)(v44 + 24) = v44 + 40;
      unint64_t v47 = v44 + 24;
      unsigned int v48 = *(_DWORD *)(v35 + 32);
      if (v48 && v47 != v35 + 24)
      {
        if (v48 >= 3)
        {
          *(_DWORD *)(v47 + 8) = 0;
          llvm::SmallVectorBase<unsigned int>::grow_pod();
        }
        memcpy(v46, *(const void **)(v35 + 24), 28 * *(unsigned int *)(v35 + 32));
        *(_DWORD *)(v47 + 8) = v48;
      }
      ++*((_DWORD *)a1 + 2);
LABEL_74:
      v16 += 96;
    }
    while (v16 != v51);
  }
}

void sub_1CBE59A24()
{
  uint64_t v0 = MEMORY[0x1F4188790]();
  int v7 = v6;
  int v9 = v8;
  uint64_t v11 = v10;
  uint64_t v12 = v1;
  int v13 = (unsigned char *)v0;
  unsigned int v14 = v4;
  v56[192] = *MEMORY[0x1E4F143B8];
  if (v3 == 5) {
    unsigned int v15 = 4;
  }
  else {
    unsigned int v15 = v3;
  }
  *uint64_t v4 = (uint64_t)(v4 + 2);
  v4[1] = 0x1000000000;
  if (*(unsigned char *)(v0 + 8))
  {
    int v32 = v2;
    sub_1CBE59E80(v1, (uint64_t *)&v54, v5);
    sub_1CBE59470(v14, (unsigned int *)&v54);
    unint64_t v33 = (char *)v54;
    if (v55)
    {
      uint64_t v34 = 96 * v55;
      do
      {
        unint64_t v35 = *(char **)&v33[v34 - 72];
        if (&v33[v34 - 56] != v35) {
          free(v35);
        }
        v34 -= 96;
      }
      while (v34);
      unint64_t v33 = (char *)v54;
    }
    int v2 = v32;
    if (v33 != (char *)v56)
    {
      free(v33);
      int v2 = v32;
    }
  }
  if (v13[2]) {
    BOOL v16 = v12 == 0;
  }
  else {
    BOOL v16 = 1;
  }
  if (!v16)
  {
    int v37 = v2;
    sub_1CBE59F90(v7, (uint64_t *)&v51, v5);
    sub_1CBE59470(v14, (unsigned int *)&v51);
    int v23 = (char *)v51;
    if (v52)
    {
      int v36 = v9;
      uint64_t v24 = 96 * v52;
      do
      {
        long long v25 = *(char **)&v23[v24 - 72];
        if (&v23[v24 - 56] != v25) {
          free(v25);
        }
        v24 -= 96;
      }
      while (v24);
      int v23 = (char *)v51;
      int v9 = v36;
    }
    int v2 = v37;
    if (v23 != (char *)&v53)
    {
      free(v23);
      int v2 = v37;
    }
  }
  if (v13[5])
  {
    sub_1CBE5A060(v12, SHIDWORD(v12), v11, SHIDWORD(v11), v2, v9, v7, (uint64_t *)&v48, v15);
    sub_1CBE59470(v14, (unsigned int *)&v48);
    uint64_t v20 = (char *)v48;
    if (v49)
    {
      uint64_t v21 = 96 * v49;
      do
      {
        long long v22 = *(char **)&v20[v21 - 72];
        if (&v20[v21 - 56] != v22) {
          free(v22);
        }
        v21 -= 96;
      }
      while (v21);
      uint64_t v20 = (char *)v48;
    }
    if (v20 != (char *)&v50) {
      free(v20);
    }
  }
  if (v13[9])
  {
    if (v15 > 4) {
      sub_1CBE5E614(v12, HIDWORD(v12), v11, HIDWORD(v11), (uint64_t *)&v45);
    }
    else {
      sub_1CBE5E2B4(v12, HIDWORD(v12), v11, HIDWORD(v11), (uint64_t *)&v45);
    }
    sub_1CBE59470(v14, (unsigned int *)&v45);
    unsigned int v17 = (char *)v45;
    if (v46)
    {
      uint64_t v18 = 96 * v46;
      do
      {
        long long v19 = *(char **)&v17[v18 - 72];
        if (&v17[v18 - 56] != v19) {
          free(v19);
        }
        v18 -= 96;
      }
      while (v18);
      unsigned int v17 = (char *)v45;
    }
    if (v17 != (char *)&v47) {
      free(v17);
    }
  }
  if (v13[11])
  {
    sub_1CBE5A070(v12, (uint64_t *)&v42, v5);
    sub_1CBE59470(v14, (unsigned int *)&v42);
    uint64_t v29 = (char *)v42;
    if (v43)
    {
      uint64_t v30 = 96 * v43;
      do
      {
        unsigned int v31 = *(char **)&v29[v30 - 72];
        if (&v29[v30 - 56] != v31) {
          free(v31);
        }
        v30 -= 96;
      }
      while (v30);
      uint64_t v29 = (char *)v42;
    }
    if (v29 != (char *)&v44) {
      free(v29);
    }
  }
  if (v13[12])
  {
    uint64_t v40 = 0x1000000000;
    v38[0] = (unsigned __int8 *)&unk_1CF96C0AA;
    v38[1] = (unsigned __int8 *)&unk_1CF96C0B0;
    unsigned int v39 = v41;
    sub_1CBE5B1C4(v38, (uint64_t *)&v39, v5);
    sub_1CBE59470(v14, (unsigned int *)&v39);
    unint64_t v26 = (char *)v39;
    if (v40)
    {
      uint64_t v27 = 96 * v40;
      do
      {
        long long v28 = *(char **)&v26[v27 - 72];
        if (&v26[v27 - 56] != v28) {
          free(v28);
        }
        v27 -= 96;
      }
      while (v27);
      unint64_t v26 = (char *)v39;
    }
    if (v26 != v41) {
      free(v26);
    }
  }
  sub_1CBE5A180((unsigned int *)v14, v12 == 3, v11 == 5);
}

double sub_1CBE59E80@<D0>(unsigned int a1@<W0>, uint64_t *a2@<X8>, __n128 a3@<Q0>)
{
  unint64_t v3 = 2;
  uint64_t v4 = (uint64_t)&dword_1CF960784;
  do
  {
    while (1)
    {
      unint64_t v5 = v3 >> 1;
      int v6 = (unsigned int *)(v4 + 4 * (v3 >> 1));
      unsigned int v7 = *v6;
      if (*v6 == -1 || v7 != -2 && v7 >= a1) {
        break;
      }
      uint64_t v4 = (uint64_t)(v6 + 1);
      v3 += ~v5;
      if (!v3) {
        goto LABEL_8;
      }
    }
    v3 >>= 1;
  }
  while (v5);
LABEL_8:
  if ((_UNKNOWN *)v4 == &unk_1CF96078C || (int v8 = *(_DWORD *)v4, *(_DWORD *)v4 == -2) || v8 != -1 && v8 != a1)
  {
    *a2 = (uint64_t)(a2 + 2);
    *(void *)&double result = 0x1000000000;
    a2[1] = 0x1000000000;
  }
  else
  {
    *a2 = (uint64_t)(a2 + 2);
    a3.n128_u64[0] = 0x1000000000;
    a2[1] = 0x1000000000;
    unsigned int v9 = word_1CF96BDAE[((unint64_t)(v4 - (void)&dword_1CF960784) >> 2)];
    LODWORD(v4) = v9 & 0x1F;
    LODWORD(v10) = v9 >> 5;
    BOOL v11 = v4 == 31;
    if (v4 == 31) {
      uint64_t v4 = 0xFFFFFFFFLL;
    }
    else {
      uint64_t v4 = v4;
    }
    if (v11) {
      uint64_t v10 = 0;
    }
    else {
      uint64_t v10 = v10;
    }
    uint64_t v12 = (unsigned __int8 *)&unk_1CF96BD82 + v4;
    if (v11) {
      uint64_t v12 = 0;
    }
    v14[0] = v12;
    v14[1] = &v12[v10];
    sub_1CBE5B1C4(v14, a2, a3);
  }
  return result;
}

uint64_t *sub_1CBE59F90@<X0>(int a1@<W0>, uint64_t *a2@<X8>, __n128 a3@<Q0>)
{
  *a2 = (uint64_t)(a2 + 2);
  a3.n128_u64[0] = 0x1000000000;
  a2[1] = 0x1000000000;
  v13[0] = (unsigned __int8 *)&unk_1CF96BDB2;
  v13[1] = (unsigned __int8 *)&unk_1CF96BDBC;
  double result = sub_1CBE5B1C4(v13, a2, a3);
  unsigned int v6 = *((_DWORD *)a2 + 2);
  if (v6)
  {
    uint64_t v7 = *a2;
    uint64_t v8 = *a2 + 96 * v6;
    if (a1) {
      int v9 = 3;
    }
    else {
      int v9 = 2;
    }
    do
    {
      if ((*(_DWORD *)v7 - 1) <= 1)
      {
        uint64_t v10 = *(unsigned int *)(v7 + 32);
        if (v10)
        {
          uint64_t v11 = 28 * v10;
          uint64_t v12 = (int *)(*(void *)(v7 + 24) + 8);
          do
          {
            if ((*v12 & 0xFFFFFFFE) == 2) {
              *uint64_t v12 = v9;
            }
            v12 += 7;
            v11 -= 28;
          }
          while (v11);
        }
      }
      v7 += 96;
    }
    while (v7 != v8);
  }
  return result;
}

double sub_1CBE5A060@<D0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, int a7@<W6>, uint64_t *a8@<X8>, unsigned int a9@<W7>)
{
  if (a9 <= 3) {
    return sub_1CBE5DCF8(a1, a2, a3, a4, a5, a6, a7, a8);
  }
  else {
    return sub_1CBE5E0DC(a1, a2, a3, a4, a5, a6, a7, a8);
  }
}

double sub_1CBE5A070@<D0>(unsigned int a1@<W0>, uint64_t *a2@<X8>, __n128 a3@<Q0>)
{
  unint64_t v3 = 3;
  uint64_t v4 = (uint64_t)&dword_1CF960F1C;
  do
  {
    while (1)
    {
      unint64_t v5 = v3 >> 1;
      unsigned int v6 = (unsigned int *)(v4 + 4 * (v3 >> 1));
      unsigned int v7 = *v6;
      if (*v6 == -1 || v7 != -2 && v7 >= a1) {
        break;
      }
      uint64_t v4 = (uint64_t)(v6 + 1);
      v3 += ~v5;
      if (!v3) {
        goto LABEL_8;
      }
    }
    v3 >>= 1;
  }
  while (v5);
LABEL_8:
  if ((_UNKNOWN *)v4 == &unk_1CF960F28 || (int v8 = *(_DWORD *)v4, *(_DWORD *)v4 == -2) || v8 != -1 && v8 != a1)
  {
    *a2 = (uint64_t)(a2 + 2);
    *(void *)&double result = 0x1000000000;
    a2[1] = 0x1000000000;
  }
  else
  {
    *a2 = (uint64_t)(a2 + 2);
    a3.n128_u64[0] = 0x1000000000;
    a2[1] = 0x1000000000;
    unsigned int v9 = word_1CF96C0A4[((unint64_t)(v4 - (void)&dword_1CF960F1C) >> 2)];
    LODWORD(v4) = v9 & 0x1F;
    LODWORD(v10) = v9 >> 5;
    BOOL v11 = v4 == 31;
    if (v4 == 31) {
      uint64_t v4 = 0xFFFFFFFFLL;
    }
    else {
      uint64_t v4 = v4;
    }
    if (v11) {
      uint64_t v10 = 0;
    }
    else {
      uint64_t v10 = v10;
    }
    uint64_t v12 = (unsigned __int8 *)&unk_1CF96C068 + v4;
    if (v11) {
      uint64_t v12 = 0;
    }
    v14[0] = v12;
    v14[1] = &v12[v10];
    sub_1CBE5B1C4(v14, a2, a3);
  }
  return result;
}

void sub_1CBE5A180(unsigned int *a1, char a2, int a3)
{
  uint64_t v67 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = a1[2];
  if (!v3) {
    return;
  }
  unsigned int v6 = a1;
  uint64_t v7 = 96 * v3;
  int v8 = (int *)(*(void *)a1 + 32);
  do
  {
    if (*(v8 - 8) == 1)
    {
      unsigned int v9 = *v8;
      uint64_t v10 = *((void *)v8 - 1);
      if (*v8 != 2 || *(_DWORD *)(v10 + 8) != 1 || *(unsigned char *)(v10 + 52) && *(_DWORD *)(v10 + 48))
      {
        if (!*(unsigned char *)(v10 + 24) || !*(_DWORD *)(v10 + 20))
        {
          *(_DWORD *)(v10 + 32) = 0;
          if (v9 != 1)
          {
            memmove((void *)v10, (const void *)(v10 + 28), 28 * v9 - 28);
            unsigned int v9 = *v8;
          }
          int v11 = v9 - 1;
          goto LABEL_17;
        }
        if (v9 == 2 && (!*(unsigned char *)(v10 + 52) || !*(_DWORD *)(v10 + 48)))
        {
          int v11 = 1;
LABEL_17:
          *int v8 = v11;
        }
      }
    }
    v8 += 24;
    v7 -= 96;
  }
  while (v7);
  uint64_t v12 = v6[2];
  if (v12)
  {
    uint64_t v13 = 96 * v12;
    unsigned int v14 = (unsigned int *)(*(void *)v6 + 24);
    unsigned int v61 = v6;
    do
    {
      if (*(v14 - 6) == 1 && v14[2] == 1 && *(_DWORD *)(*(void *)v14 + 8) == 9)
      {
        *(_OWORD *)int v64 = xmmword_1CF945530;
        *(_DWORD *)&v64[16] = 10;
        *(void *)&v64[20] = 0;
        unint64_t v15 = *(void *)v14;
        if (v14[3] <= 1)
        {
          if (v15 > (unint64_t)v64 || v15 + 28 <= (unint64_t)v64) {
            llvm::SmallVectorBase<unsigned int>::grow_pod();
          }
          llvm::SmallVectorBase<unsigned int>::grow_pod();
        }
        BOOL v16 = (_OWORD *)(v15 + 28 * v14[2]);
        long long v17 = *(_OWORD *)v64;
        *(_OWORD *)((char *)v16 + 12) = *(_OWORD *)&v64[12];
        *BOOL v16 = v17;
        ++v14[2];
      }
      v14 += 24;
      v13 -= 96;
    }
    while (v13);
    unint64_t v18 = v6[2];
    if (v18)
    {
      uint64_t v19 = *(void *)v6;
      int v59 = a3;
      char v60 = a2;
      uint64_t v20 = *(void *)v6;
      do
      {
        BOOL v21 = *(_DWORD *)v20 != 1 || v20 == v19 + 96 * v18;
        if (!v21)
        {
          uint64_t v22 = 0;
          int v23 = (void **)(v20 + 24);
          __src = (void *)(v20 + 40);
          uint64_t v24 = v20;
          do
          {
            long long v25 = (long long *)(v20 + v22);
            if (*(_DWORD *)(v20 + v22) == 1)
            {
              unint64_t v26 = (void **)(v20 + 24 + v22);
              int v27 = *(_DWORD *)(*(void *)(v20 + 24) + 8);
              int v28 = *((_DWORD *)*v26 + 2);
              if (v27 == 5 && (v28 & 0xFFFFFFFE) == 2) {
                goto LABEL_66;
              }
              if (v27 == 1 && v28 == 10) {
                goto LABEL_66;
              }
              BOOL v31 = v27 == 5;
              BOOL v33 = v27 == 1 || v27 == 10 || v27 == 5;
              if (v28 != 4) {
                BOOL v33 = 0;
              }
              if (v28 != 5) {
                BOOL v31 = 0;
              }
              if (v33 || v31) {
                goto LABEL_66;
              }
              BOOL v21 = v27 == 5;
              char v34 = v60;
              if (!v21) {
                char v34 = 1;
              }
              if ((v34 & 1) == 0 && v28 == 1)
              {
LABEL_66:
                uint64_t v35 = *(void *)(v20 + 16);
                *(_OWORD *)int v64 = *(_OWORD *)v20;
                *(void *)&v64[16] = v35;
                *(void *)&v64[24] = v66;
                unint64_t v65 = 0x200000000;
                unint64_t v36 = *(unsigned int *)(v20 + 32);
                if (v64 != (unsigned char *)v20 && *(_DWORD *)(v20 + 32))
                {
                  if (*v23 == __src)
                  {
                    if (v36 >= 3) {
                      llvm::SmallVectorBase<unsigned int>::grow_pod();
                    }
                    memcpy(v66, __src, 28 * *(unsigned int *)(v20 + 32));
                    LODWORD(v65) = v36;
                  }
                  else
                  {
                    *(void *)&v64[24] = *v23;
                    unint64_t v65 = __PAIR64__(*(_DWORD *)(v20 + 36), v36);
                    *(void *)(v20 + 24) = __src;
                    *(_DWORD *)(v20 + 36) = 0;
                  }
                  unint64_t v36 = 0;
                  *(_DWORD *)(v20 + 32) = 0;
                }
                long long v37 = *v25;
                *(void *)(v20 + 16) = *((void *)v25 + 2);
                *(_OWORD *)uint64_t v20 = v37;
                if (v22)
                {
                  long long v38 = *v26;
                  uint64_t v39 = v20 + v22;
                  uint64_t v40 = v20 + v22 + 40;
                  if ((void *)v40 == *v26)
                  {
                    unsigned int v43 = *(_DWORD *)(v39 + 32);
                    BOOL v41 = (_DWORD *)(v39 + 32);
                    unint64_t v42 = v43;
                    if (v36 >= v43)
                    {
                      if (v42) {
                        memmove(*v23, v38, 28 * v42);
                      }
                    }
                    else
                    {
                      if (*(unsigned int *)(v20 + 36) < v42)
                      {
                        *(_DWORD *)(v20 + 32) = 0;
                        llvm::SmallVectorBase<unsigned int>::grow_pod();
                      }
                      if (v36) {
                        memmove(*v23, v38, 28 * v36);
                      }
                      uint64_t v44 = *v41;
                      if (v36 != v44) {
                        memcpy((char *)*v23 + 28 * v36, (char *)*v26 + 28 * v36, (unsigned char *)*v26 + 28 * v44 - ((unsigned char *)*v26 + 28 * v36));
                      }
                    }
                    *(_DWORD *)(v20 + 32) = v42;
                  }
                  else
                  {
                    if (*v23 != __src)
                    {
                      free(*v23);
                      long long v38 = *v26;
                    }
                    *(void *)(v20 + 24) = v38;
                    BOOL v41 = (_DWORD *)(v24 + 32);
                    *(void *)(v20 + 32) = *(void *)(v20 + v22 + 32);
                    *unint64_t v26 = (void *)v40;
                    *(_DWORD *)(v20 + v22 + 36) = 0;
                  }
                  *BOOL v41 = 0;
                  unsigned int v6 = v61;
                }
                long long v45 = *(_OWORD *)v64;
                *((void *)v25 + 2) = *(void *)&v64[16];
                *long long v25 = v45;
                unsigned int v46 = *(unsigned char **)&v64[24];
                if (v25 != (long long *)v64)
                {
                  if (*(unsigned char **)&v64[24] == v66)
                  {
                    int v47 = v65;
                    uint64_t v48 = v20 + v22;
                    uint64_t v49 = *(unsigned int *)(v20 + v22 + 32);
                    if (v49 >= v65)
                    {
                      if (v65) {
                        memmove(*v26, v66, 28 * v65);
                      }
                    }
                    else
                    {
                      if (*(_DWORD *)(v48 + 36) < v65)
                      {
                        *(_DWORD *)(v48 + 32) = 0;
                        llvm::SmallVectorBase<unsigned int>::grow_pod();
                      }
                      if (v49) {
                        memmove(*v26, v66, 28 * v49);
                      }
                      else {
                        uint64_t v49 = 0;
                      }
                      if (v49 != v65) {
                        memcpy((char *)*v26 + 28 * v49, (const void *)(*(void *)&v64[24] + 28 * v49), 28 * v65 - 28 * v49);
                      }
                    }
                    *(_DWORD *)(v48 + 32) = v47;
                  }
                  else
                  {
                    if ((void *)(v20 + v22 + 40) != *v26)
                    {
                      free(*v26);
                      unsigned int v46 = *(unsigned char **)&v64[24];
                    }
                    *unint64_t v26 = v46;
                    *(void *)(v20 + v22 + 32) = v65;
                    *(void *)&v64[24] = v66;
                    HIDWORD(v65) = 0;
                    unsigned int v6 = v61;
                  }
                  LODWORD(v65) = 0;
                  unsigned int v46 = *(unsigned char **)&v64[24];
                }
                if (v46 != v66) {
                  free(v46);
                }
                uint64_t v19 = *(void *)v6;
                unint64_t v18 = v6[2];
              }
            }
            v24 += 96;
            v22 += 96;
          }
          while (v20 + v22 != v19 + 96 * v18);
        }
        v20 += 96;
      }
      while (v20 != v19 + 96 * v18);
      if (v18 && v59)
      {
        uint64_t v50 = 0;
        for (unint64_t i = 0; i < v18; ++i)
        {
          uint64_t v52 = *(void *)v6;
          if (*(_DWORD *)(*(void *)v6 + v50) == 1)
          {
            uint64_t v53 = v52 + v50;
            if (*(_DWORD *)(v52 + v50 + 32) == 2)
            {
              BOOL v54 = *(_DWORD **)(v53 + 24);
              if (v54[2] == 10 && v54[9] == 1)
              {
                v54[8] = 0;
                uint64_t v55 = *(void *)(v53 + 24);
                long long v56 = *(_OWORD *)(v55 + 28);
                *(_OWORD *)((char *)v63 + 12) = *(_OWORD *)(v55 + 40);
                v63[0] = v56;
                uint64_t v57 = (_DWORD *)(v52 + v50);
                int v58 = *(_DWORD *)(v52 + v50 + 4);
                *(_DWORD *)int v64 = *v57;
                *(_DWORD *)&v64[4] = v58;
                *(void *)&v64[24] = v66;
                *(_OWORD *)unsigned int v66 = v56;
                *(_OWORD *)&v66[12] = *(_OWORD *)((char *)v63 + 12);
                unint64_t v65 = 0x200000001;
                sub_1CBE5E8F0((uint64_t *)v6, (long long *)v64);
                if (*(unsigned char **)&v64[24] != v66) {
                  free(*(void **)&v64[24]);
                }
                --*(_DWORD *)(v53 + 32);
                unint64_t v18 = v6[2];
              }
            }
          }
          v50 += 96;
        }
      }
    }
  }
}

void sub_1CBE5A8FC(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, unsigned int a4@<W3>, uint64_t *a5@<X8>, __n128 a6@<Q0>)
{
  v16[192] = *MEMORY[0x1E4F143B8];
  *a5 = (uint64_t)(a5 + 2);
  a6.n128_u64[0] = 0x1000000000;
  a5[1] = 0x1000000000;
  if (*(unsigned char *)(a1 + 9))
  {
    sub_1CBE5AA14(a4, (uint64_t *)&v14, a6);
    sub_1CBE59470(a5, (unsigned int *)&v14);
    unsigned int v9 = (char *)v14;
    if (v15)
    {
      uint64_t v10 = 96 * v15;
      do
      {
        int v11 = *(char **)&v9[v10 - 72];
        if (&v9[v10 - 56] != v11)
        {
          uint64_t v12 = v10;
          uint64_t v13 = v9;
          free(v11);
          uint64_t v10 = v12;
          unsigned int v9 = v13;
        }
        v10 -= 96;
      }
      while (v10);
      unsigned int v9 = (char *)v14;
    }
    if (v9 != (char *)v16) {
      free(v9);
    }
  }
  sub_1CBE5A180((unsigned int *)a5, a2 == 3, a3 == 5);
}

double sub_1CBE5AA14@<D0>(unsigned int a1@<W0>, uint64_t *a2@<X8>, __n128 a3@<Q0>)
{
  unint64_t v3 = 3;
  uint64_t v4 = (uint64_t)&dword_1CF960BD0;
  do
  {
    while (1)
    {
      unint64_t v5 = v3 >> 1;
      unsigned int v6 = (unsigned int *)(v4 + 4 * (v3 >> 1));
      unsigned int v7 = *v6;
      if (*v6 == -1 || v7 != -2 && v7 >= a1) {
        break;
      }
      uint64_t v4 = (uint64_t)(v6 + 1);
      v3 += ~v5;
      if (!v3) {
        goto LABEL_8;
      }
    }
    v3 >>= 1;
  }
  while (v5);
LABEL_8:
  if ((_UNKNOWN *)v4 == &unk_1CF960BDC || (int v8 = *(_DWORD *)v4, *(_DWORD *)v4 == -2) || v8 != -1 && v8 != a1)
  {
    *a2 = (uint64_t)(a2 + 2);
    *(void *)&double result = 0x1000000000;
    a2[1] = 0x1000000000;
  }
  else
  {
    *a2 = (uint64_t)(a2 + 2);
    a3.n128_u64[0] = 0x1000000000;
    a2[1] = 0x1000000000;
    unsigned int v9 = byte_1CF96BE9A[((unint64_t)(v4 - (void)&dword_1CF960BD0) >> 2)];
    LODWORD(v4) = v9 & 7;
    LODWORD(v10) = v9 >> 3;
    BOOL v11 = v4 == 7;
    if (v4 == 7) {
      uint64_t v4 = 0xFFFFFFFFLL;
    }
    else {
      uint64_t v4 = v4;
    }
    if (v11) {
      uint64_t v10 = 0;
    }
    else {
      uint64_t v10 = v10;
    }
    uint64_t v12 = (unsigned __int8 *)&unk_1CF96BE8E + v4;
    if (v11) {
      uint64_t v12 = 0;
    }
    v14[0] = v12;
    v14[1] = &v12[v10];
    sub_1CBE5B1C4(v14, a2, a3);
  }
  return result;
}

uint64_t *sub_1CBE5AB24(uint64_t *result, unsigned int a2)
{
  uint64_t v2 = *result;
  uint64_t v3 = *((unsigned int *)result + 2);
  if (v3 >= 2)
  {
    uint64_t v7 = v2 + 96;
    uint64_t v8 = 96 * v3 - 96;
    uint64_t v4 = *result;
    do
    {
      if (*(_DWORD *)(v7 + 4) < *(_DWORD *)(v4 + 4)) {
        uint64_t v4 = v7;
      }
      v7 += 96;
      v8 -= 96;
    }
    while (v8);
  }
  else
  {
    uint64_t v4 = *result;
  }
  if (v4 != *result + 96 * v3 && v3 && *(_DWORD *)(v4 + 4) >= a2)
  {
    uint64_t v5 = 96 * v3;
    unsigned int v6 = (_DWORD *)(v2 + 4);
    do
    {
      *v6 -= a2;
      v6 += 24;
      v5 -= 96;
    }
    while (v5);
  }
  return result;
}

void sub_1CBE5ABB0()
{
  uint64_t v0 = MEMORY[0x1F4188790]();
  unsigned int v3 = v2;
  int v5 = v4;
  int v7 = v6;
  int v9 = v8;
  uint64_t v11 = v10;
  uint64_t v12 = v1;
  uint64_t v13 = (unsigned char *)v0;
  unsigned int v15 = v14;
  v51[192] = *MEMORY[0x1E4F143B8];
  *unsigned int v14 = (uint64_t)(v14 + 2);
  v16.n128_u64[0] = 0x1000000000;
  v14[1] = 0x1000000000;
  if (*(unsigned char *)(v0 + 8))
  {
    sub_1CBE59E80(v1, (uint64_t *)&v49, v16);
    sub_1CBE59470(v15, (unsigned int *)&v49);
    int v32 = (char *)v49;
    if (v50)
    {
      uint64_t v33 = 96 * v50;
      do
      {
        char v34 = *(char **)&v32[v33 - 72];
        if (&v32[v33 - 56] != v34) {
          free(v34);
        }
        v33 -= 96;
      }
      while (v33);
      int v32 = (char *)v49;
    }
    if (v32 != (char *)v51) {
      free(v32);
    }
  }
  if (v13[2]) {
    BOOL v17 = v12 == 0;
  }
  else {
    BOOL v17 = 1;
  }
  if (!v17)
  {
    sub_1CBE59F90(v5, (uint64_t *)&v46, v16);
    sub_1CBE59470(v15, (unsigned int *)&v46);
    unint64_t v26 = (char *)v46;
    if (v47)
    {
      int v36 = v9;
      uint64_t v27 = 96 * v47;
      do
      {
        int v28 = *(char **)&v26[v27 - 72];
        if (&v26[v27 - 56] != v28)
        {
          uint64_t v35 = v26;
          free(v28);
          unint64_t v26 = v35;
        }
        v27 -= 96;
      }
      while (v27);
      unint64_t v26 = (char *)v46;
      int v9 = v36;
    }
    if (v26 != (char *)&v48) {
      free(v26);
    }
  }
  if (v13[5])
  {
    sub_1CBE5A060(v12, SHIDWORD(v12), v11, SHIDWORD(v11), v7, v9, v5, (uint64_t *)&v43, v3);
    sub_1CBE59470(v15, (unsigned int *)&v43);
    int v23 = (char *)v43;
    if (v44)
    {
      uint64_t v24 = 96 * v44;
      do
      {
        long long v25 = *(char **)&v23[v24 - 72];
        if (&v23[v24 - 56] != v25) {
          free(v25);
        }
        v24 -= 96;
      }
      while (v24);
      int v23 = (char *)v43;
    }
    if (v23 != (char *)&v45) {
      free(v23);
    }
  }
  if (v12) {
    BOOL v18 = 1;
  }
  else {
    BOOL v18 = HIDWORD(v12) == 2;
  }
  int v19 = v18;
  if (v13[9] && v19)
  {
    if (v3 <= 4) {
      sub_1CBE5E2B4(v12, HIDWORD(v12), v11, HIDWORD(v11), (uint64_t *)&v40);
    }
    else {
      sub_1CBE5E614(v12, HIDWORD(v12), v11, HIDWORD(v11), (uint64_t *)&v40);
    }
    sub_1CBE59470(v15, (unsigned int *)&v40);
    uint64_t v20 = (char *)v40;
    if (v41)
    {
      uint64_t v21 = 96 * v41;
      do
      {
        uint64_t v22 = *(char **)&v20[v21 - 72];
        if (&v20[v21 - 56] != v22) {
          free(v22);
        }
        v21 -= 96;
      }
      while (v21);
      uint64_t v20 = (char *)v40;
    }
    if (v20 != (char *)&v42) {
      free(v20);
    }
  }
  if (v13[11])
  {
    sub_1CBE5A070(v12, (uint64_t *)&v37, v16);
    sub_1CBE59470(v15, (unsigned int *)&v37);
    uint64_t v29 = (char *)v37;
    if (v38)
    {
      uint64_t v30 = 96 * v38;
      do
      {
        BOOL v31 = *(char **)&v29[v30 - 72];
        if (&v29[v30 - 56] != v31) {
          free(v31);
        }
        v30 -= 96;
      }
      while (v30);
      uint64_t v29 = (char *)v37;
    }
    if (v29 != (char *)&v39) {
      free(v29);
    }
  }
  sub_1CBE5AB24(v15, 1u);
  sub_1CBE5A180((unsigned int *)v15, v12 == 3, v11 == 5);
}

void sub_1CBE5AF74(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t *a4@<X8>, __n128 a5@<Q0>)
{
  v16[192] = *MEMORY[0x1E4F143B8];
  *a4 = (uint64_t)(a4 + 2);
  a5.n128_u64[0] = 0x1000000000;
  a4[1] = 0x1000000000;
  if (*(unsigned char *)(a1 + 12))
  {
    uint64_t v15 = 0x1000000000;
    v13[0] = (unsigned __int8 *)&unk_1CF96C0AA;
    v13[1] = (unsigned __int8 *)&unk_1CF96C0B0;
    unsigned int v14 = v16;
    sub_1CBE5B1C4(v13, (uint64_t *)&v14, a5);
    sub_1CBE59470(a4, (unsigned int *)&v14);
    int v8 = (char *)v14;
    if (v15)
    {
      uint64_t v9 = 96 * v15;
      do
      {
        uint64_t v10 = *(char **)&v8[v9 - 72];
        if (&v8[v9 - 56] != v10)
        {
          uint64_t v11 = v9;
          uint64_t v12 = v8;
          free(v10);
          uint64_t v9 = v11;
          int v8 = v12;
        }
        v9 -= 96;
      }
      while (v9);
      int v8 = (char *)v14;
    }
    if (v8 != (char *)v16) {
      free(v8);
    }
  }
  sub_1CBE5AB24(a4, 2u);
  sub_1CBE5A180((unsigned int *)a4, a2 == 3, a3 == 5);
}

double sub_1CBE5B0B0(uint64_t *a1, unsigned int a2, __n128 a3)
{
  unint64_t v3 = 4;
  unint64_t v4 = (unint64_t)&dword_1CF945540;
  do
  {
    while (1)
    {
      unint64_t v5 = v3 >> 1;
      int v6 = (int *)(v4 + 4 * (v3 >> 1));
      unsigned int v7 = *v6;
      if (*v6 == -1 || v7 != -2 && v7 >= a2) {
        break;
      }
      unint64_t v4 = (unint64_t)(v6 + 1);
      v3 += ~v5;
      if (!v3) {
        goto LABEL_8;
      }
    }
    v3 >>= 1;
  }
  while (v5);
LABEL_8:
  if ((int *)v4 == &dword_1CF945550 || (int v8 = *(_DWORD *)v4, *(_DWORD *)v4 == -2) || v8 != -1 && v8 != a2)
  {
    *a1 = (uint64_t)(a1 + 2);
    *(void *)&double result = 0x1000000000;
    a1[1] = 0x1000000000;
  }
  else
  {
    *a1 = (uint64_t)(a1 + 2);
    a3.n128_u64[0] = 0x1000000000;
    a1[1] = 0x1000000000;
    unsigned int v9 = word_1CF960FE8[((v4 - (unint64_t)&dword_1CF945540) >> 2)];
    LODWORD(v4) = v9 & 0x7F;
    LODWORD(v10) = v9 >> 7;
    BOOL v11 = v4 == 127;
    if (v4 == 127) {
      unint64_t v4 = 0xFFFFFFFFLL;
    }
    else {
      unint64_t v4 = v4;
    }
    if (v11) {
      uint64_t v10 = 0;
    }
    else {
      uint64_t v10 = v10;
    }
    uint64_t v12 = (unsigned __int8 *)&unk_1CF960F28 + v4;
    if (v11) {
      uint64_t v12 = 0;
    }
    v14[0] = v12;
    v14[1] = &v12[v10];
    sub_1CBE5B1C4(v14, a1, a3);
  }
  return result;
}

uint64_t *sub_1CBE5B1C4(unsigned __int8 **a1, uint64_t *a2, __n128 a3)
{
  unint64_t v3 = a2;
  _OWORD v37[7] = *MEMORY[0x1E4F143B8];
  unint64_t v4 = *a1;
  long long v25 = a1[1];
  if (*a1 != v25)
  {
    while (1)
    {
      unsigned int v5 = *v4;
      int v6 = v4 + 2;
      unsigned int v7 = v4[1];
      if (*v4) {
        break;
      }
      unint64_t v18 = v4[4] | ((unint64_t)v4[5] << 32);
      unint64_t v19 = v4[2] | ((unint64_t)v4[3] << 32);
      LODWORD(v27) = 0;
      DWORD1(v27) = v7;
      *((void *)&v27 + 1) = v19;
      unint64_t v28 = v18;
      uint64_t v29 = v31;
      unint64_t v30 = 0x200000000;
LABEL_25:
      sub_1CBE5E8F0(v3, &v27);
      if (v29 != v31) {
        free(v29);
      }
      if (*v4 - 1 >= 2)
      {
        if (*v4) {
          uint64_t v20 = v4 + 2;
        }
        else {
          uint64_t v20 = v4 + 6;
        }
      }
      else
      {
        uint64_t v20 = v4 + 3;
        int v21 = v4[2];
        if (v4[2])
        {
          do
          {
            if (v20[5]) {
              uint64_t v22 = 7;
            }
            else {
              uint64_t v22 = 6;
            }
            v20 += v22;
            --v21;
          }
          while (v21);
        }
      }
      unint64_t v4 = v20;
      if (v20 == v25) {
        return v3;
      }
    }
    uint64_t v35 = (char *)v37;
    uint64_t v36 = 0x200000000;
    int v8 = *v6;
    if (*v6)
    {
      LODWORD(v9) = 0;
      uint64_t v10 = v4 + 3;
      do
      {
        BOOL v11 = v10;
        if (v10[5])
        {
          v10 += 7;
          uint64_t v12 = v11[6];
          uint64_t v13 = 0x100000000;
        }
        else
        {
          uint64_t v12 = 0;
          uint64_t v13 = 0;
          v10 += 6;
        }
        a3.n128_u32[0] = *(_DWORD *)v11;
        int v14 = v11[4];
        *(uint32x4_t *)unint64_t v26 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8((uint8x8_t)a3.n128_u64[0]));
        *(_DWORD *)&BOOL v26[16] = v14;
        *(void *)&v26[20] = v13 | v12;
        if (v9 >= HIDWORD(v36))
        {
          if (v35 > v26 || &v35[28 * v9] <= v26) {
            llvm::SmallVectorBase<unsigned int>::grow_pod();
          }
          llvm::SmallVectorBase<unsigned int>::grow_pod();
        }
        uint64_t v15 = &v35[28 * v36];
        a3 = *(__n128 *)v26;
        *(_OWORD *)(v15 + 12) = *(_OWORD *)&v26[12];
        *(__n128 *)uint64_t v15 = a3;
        int v16 = v36;
        uint64_t v9 = (v36 + 1);
        LODWORD(v36) = v36 + 1;
        --v8;
      }
      while (v8);
      unint64_t v3 = a2;
      int v32 = v34;
      uint64_t v33 = 0x200000000;
      if (v9)
      {
        unsigned int v17 = v16 + 1;
        if (v9 >= 3) {
          llvm::SmallVectorBase<unsigned int>::grow_pod();
        }
        memcpy(v34, v35, 28 * v17);
        LODWORD(v33) = v9;
        *(void *)&long long v27 = __PAIR64__(v7, v5);
        uint64_t v29 = v31;
        unint64_t v30 = 0x200000000;
        if (v32 == v34)
        {
          memcpy(v31, v34, 28 * v9);
          LODWORD(v30) = v9;
          LODWORD(v33) = 0;
          if (v32 != v34) {
            free(v32);
          }
        }
        else
        {
          uint64_t v29 = v32;
          unint64_t v30 = __PAIR64__(HIDWORD(v33), v9);
          int v32 = v34;
          uint64_t v33 = 0;
        }
        goto LABEL_23;
      }
    }
    else
    {
      int v32 = v34;
      uint64_t v33 = 0x200000000;
    }
    *(void *)&long long v27 = __PAIR64__(v7, v5);
    uint64_t v29 = v31;
    unint64_t v30 = 0x200000000;
LABEL_23:
    if (v35 != (char *)v37) {
      free(v35);
    }
    goto LABEL_25;
  }
  return v3;
}

double sub_1CBE5B568(uint64_t *a1, unsigned int a2, __n128 a3)
{
  unint64_t v3 = 4;
  uint64_t v4 = (uint64_t)&dword_1CF945550;
  do
  {
    while (1)
    {
      unint64_t v5 = v3 >> 1;
      int v6 = (unsigned int *)(v4 + 4 * (v3 >> 1));
      unsigned int v7 = *v6;
      if (*v6 == -1 || v7 != -2 && v7 >= a2) {
        break;
      }
      uint64_t v4 = (uint64_t)(v6 + 1);
      v3 += ~v5;
      if (!v3) {
        goto LABEL_8;
      }
    }
    v3 >>= 1;
  }
  while (v5);
LABEL_8:
  if ((_UNKNOWN *)v4 == &unk_1CF945560 || (int v8 = *(_DWORD *)v4, *(_DWORD *)v4 == -2) || v8 != -1 && v8 != a2)
  {
    *a1 = (uint64_t)(a1 + 2);
    *(void *)&double result = 0x1000000000;
    a1[1] = 0x1000000000;
  }
  else
  {
    *a1 = (uint64_t)(a1 + 2);
    a3.n128_u64[0] = 0x1000000000;
    a1[1] = 0x1000000000;
    unsigned int v9 = word_1CF960FE8[((unint64_t)(v4 - (void)&dword_1CF945550) >> 2)];
    LODWORD(v4) = v9 & 0x7F;
    LODWORD(v10) = v9 >> 7;
    BOOL v11 = v4 == 127;
    if (v4 == 127) {
      uint64_t v4 = 0xFFFFFFFFLL;
    }
    else {
      uint64_t v4 = v4;
    }
    if (v11) {
      uint64_t v10 = 0;
    }
    else {
      uint64_t v10 = v10;
    }
    uint64_t v12 = (unsigned __int8 *)&unk_1CF960F88 + v4;
    if (v11) {
      uint64_t v12 = 0;
    }
    v14[0] = v12;
    v14[1] = &v12[v10];
    sub_1CBE5B1C4(v14, a1, a3);
  }
  return result;
}

double sub_1CBE5B67C@<D0>(unsigned int a1@<W0>, unsigned int a2@<W1>, unsigned int a3@<W2>, unsigned int a4@<W3>, uint64_t *a5@<X8>)
{
  unint64_t v10 = 36;
  BOOL v11 = (int *)&unk_1CF945560;
  do
  {
    while (1)
    {
      unint64_t v12 = v10 >> 1;
      sub_1CBE5B8A4((uint64_t)&v20, &v11[4 * (v10 >> 1)]);
      if (!(_BYTE)v21)
      {
        if (BYTE4(v20)) {
          BOOL v13 = v20 >= a1;
        }
        else {
          BOOL v13 = 0;
        }
        if (!v13) {
          goto LABEL_25;
        }
        if (v20 > a1) {
          goto LABEL_23;
        }
      }
      if (!v23)
      {
        if (!v22 || HIDWORD(v21) < a2) {
          goto LABEL_25;
        }
        if (HIDWORD(v21) > a2) {
          goto LABEL_23;
        }
      }
      if (!v26) {
        break;
      }
LABEL_5:
      if (!v29 && (!v28 || v27 < a4)) {
        goto LABEL_25;
      }
LABEL_23:
      v10 >>= 1;
      if (!v12) {
        goto LABEL_26;
      }
    }
    if (v25 && v24 >= a3)
    {
      if (v24 > a3) {
        goto LABEL_23;
      }
      goto LABEL_5;
    }
LABEL_25:
    v11 += 4 * (v10 >> 1) + 4;
    v10 += ~v12;
  }
  while (v10);
LABEL_26:
  if (v11 != (int *)&unk_1CF9457A0
    && ((sub_1CBE5B8A4((uint64_t)&v20, v11), (_BYTE)v21) || BYTE4(v20) && v20 == a1)
    && (v23 || v22 && HIDWORD(v21) == a2)
    && (v26 || v25 && v24 == a3)
    && (v29 || v28 && v27 == a4))
  {
    *a5 = (uint64_t)(a5 + 2);
    v14.n128_u64[0] = 0x1000000000;
    a5[1] = 0x1000000000;
    LODWORD(v15) = dword_1CF9615BC[((unint64_t)((char *)v11 - (char *)&unk_1CF945560) >> 4)] & 0x7FF;
    LODWORD(v16) = dword_1CF9615BC[((unint64_t)((char *)v11 - (char *)&unk_1CF945560) >> 4)] >> 11;
    BOOL v17 = v15 == 2047;
    if (v15 == 2047) {
      uint64_t v15 = 0xFFFFFFFFLL;
    }
    else {
      uint64_t v15 = v15;
    }
    if (v17) {
      uint64_t v16 = 0;
    }
    else {
      uint64_t v16 = v16;
    }
    unint64_t v18 = (unsigned __int8 *)&unk_1CF960FF0 + v15;
    if (v17) {
      unint64_t v18 = 0;
    }
    uint64_t v20 = v18;
    int v21 = &v18[v16];
    sub_1CBE5B1C4(&v20, a5, v14);
  }
  else
  {
    *a5 = (uint64_t)(a5 + 2);
    *(void *)&double result = 0x1000000000;
    a5[1] = 0x1000000000;
  }
  return result;
}

uint64_t sub_1CBE5B8A4(uint64_t result, int *a2)
{
  *(unsigned char *)(result + 24) = 0;
  *(unsigned char *)(result + 28) = 0;
  *(unsigned char *)(result + 32) = 0;
  *(_WORD *)(result + 36) = 0;
  *(unsigned char *)(result + 38) = 0;
  int v2 = *a2;
  if (*a2 == -2)
  {
    char v3 = 0;
    char v4 = 0;
    *(unsigned char *)double result = 0;
  }
  else if (v2 == -1)
  {
    char v3 = 0;
    *(unsigned char *)double result = 0;
    char v4 = 1;
  }
  else
  {
    char v4 = 0;
    *(_DWORD *)double result = v2;
    char v3 = 1;
  }
  *(unsigned char *)(result + 4) = v3;
  *(unsigned char *)(result + 8) = v4;
  int v5 = a2[1];
  if (v5 == -2)
  {
    char v6 = 0;
    char v7 = 0;
    *(unsigned char *)(result + 12) = 0;
  }
  else if (v5 == -1)
  {
    char v6 = 0;
    *(unsigned char *)(result + 12) = 0;
    char v7 = 1;
  }
  else
  {
    char v7 = 0;
    *(_DWORD *)(result + 12) = v5;
    char v6 = 1;
  }
  *(unsigned char *)(result + 16) = v6;
  *(unsigned char *)(result + 20) = v7;
  int v8 = a2[2];
  if (v8 == -2)
  {
    char v9 = 0;
    char v10 = 0;
    *(unsigned char *)(result + 24) = 0;
  }
  else if (v8 == -1)
  {
    char v9 = 0;
    *(unsigned char *)(result + 24) = 0;
    char v10 = 1;
  }
  else
  {
    char v10 = 0;
    *(_DWORD *)(result + 24) = v8;
    char v9 = 1;
  }
  *(unsigned char *)(result + 28) = v9;
  *(unsigned char *)(result + 32) = v10;
  int v11 = a2[3];
  if (v11 == -1)
  {
    BOOL v12 = 0;
    char v13 = 0;
    char v14 = 1;
  }
  else if (v11 == -2)
  {
    BOOL v12 = 0;
    char v13 = 0;
    char v14 = 0;
  }
  else
  {
    char v14 = 0;
    BOOL v12 = v11 != 0;
    char v13 = 1;
  }
  *(unsigned char *)(result + 36) = v12;
  *(unsigned char *)(result + 37) = v13;
  *(unsigned char *)(result + 38) = v14;
  return result;
}

double sub_1CBE5B9E4@<D0>(unsigned int a1@<W0>, unsigned int a2@<W1>, unsigned int a3@<W2>, unsigned int a4@<W3>, uint64_t *a5@<X8>)
{
  unint64_t v10 = 36;
  int v11 = (int *)&unk_1CF9457A0;
  do
  {
    while (1)
    {
      unint64_t v12 = v10 >> 1;
      sub_1CBE5B8A4((uint64_t)&v20, &v11[4 * (v10 >> 1)]);
      if (!(_BYTE)v21)
      {
        if (BYTE4(v20)) {
          BOOL v13 = v20 >= a1;
        }
        else {
          BOOL v13 = 0;
        }
        if (!v13) {
          goto LABEL_25;
        }
        if (v20 > a1) {
          goto LABEL_23;
        }
      }
      if (!v23)
      {
        if (!v22 || HIDWORD(v21) < a2) {
          goto LABEL_25;
        }
        if (HIDWORD(v21) > a2) {
          goto LABEL_23;
        }
      }
      if (!v26) {
        break;
      }
LABEL_5:
      if (!v29 && (!v28 || v27 < a4)) {
        goto LABEL_25;
      }
LABEL_23:
      v10 >>= 1;
      if (!v12) {
        goto LABEL_26;
      }
    }
    if (v25 && v24 >= a3)
    {
      if (v24 > a3) {
        goto LABEL_23;
      }
      goto LABEL_5;
    }
LABEL_25:
    v11 += 4 * (v10 >> 1) + 4;
    v10 += ~v12;
  }
  while (v10);
LABEL_26:
  if (v11 != (int *)&unk_1CF9459E0
    && ((sub_1CBE5B8A4((uint64_t)&v20, v11), (_BYTE)v21) || BYTE4(v20) && v20 == a1)
    && (v23 || v22 && HIDWORD(v21) == a2)
    && (v26 || v25 && v24 == a3)
    && (v29 || v28 && v27 == a4))
  {
    *a5 = (uint64_t)(a5 + 2);
    v14.n128_u64[0] = 0x1000000000;
    a5[1] = 0x1000000000;
    LODWORD(v15) = dword_1CF961C80[((unint64_t)((char *)v11 - (char *)&unk_1CF9457A0) >> 4)] & 0x7FF;
    LODWORD(v16) = dword_1CF961C80[((unint64_t)((char *)v11 - (char *)&unk_1CF9457A0) >> 4)] >> 11;
    BOOL v17 = v15 == 2047;
    if (v15 == 2047) {
      uint64_t v15 = 0xFFFFFFFFLL;
    }
    else {
      uint64_t v15 = v15;
    }
    if (v17) {
      uint64_t v16 = 0;
    }
    else {
      uint64_t v16 = v16;
    }
    unint64_t v18 = (unsigned __int8 *)&unk_1CF96164C + v15;
    if (v17) {
      unint64_t v18 = 0;
    }
    uint64_t v20 = v18;
    int v21 = &v18[v16];
    sub_1CBE5B1C4(&v20, a5, v14);
  }
  else
  {
    *a5 = (uint64_t)(a5 + 2);
    *(void *)&double result = 0x1000000000;
    a5[1] = 0x1000000000;
  }
  return result;
}

double sub_1CBE5BC0C@<D0>(unsigned int a1@<W0>, unsigned int a2@<W1>, unsigned int a3@<W2>, unsigned int a4@<W3>, uint64_t *a5@<X8>)
{
  unint64_t v10 = 20;
  int v11 = (int *)&unk_1CF9459E0;
  do
  {
    while (1)
    {
      unint64_t v12 = v10 >> 1;
      sub_1CBE5B8A4((uint64_t)&v20, &v11[4 * (v10 >> 1)]);
      if (!(_BYTE)v21)
      {
        if (BYTE4(v20)) {
          BOOL v13 = v20 >= a1;
        }
        else {
          BOOL v13 = 0;
        }
        if (!v13) {
          goto LABEL_25;
        }
        if (v20 > a1) {
          goto LABEL_23;
        }
      }
      if (!v23)
      {
        if (!v22 || HIDWORD(v21) < a2) {
          goto LABEL_25;
        }
        if (HIDWORD(v21) > a2) {
          goto LABEL_23;
        }
      }
      if (!v26) {
        break;
      }
LABEL_5:
      if (!v29 && (!v28 || v27 < a4)) {
        goto LABEL_25;
      }
LABEL_23:
      v10 >>= 1;
      if (!v12) {
        goto LABEL_26;
      }
    }
    if (v25 && v24 >= a3)
    {
      if (v24 > a3) {
        goto LABEL_23;
      }
      goto LABEL_5;
    }
LABEL_25:
    v11 += 4 * (v10 >> 1) + 4;
    v10 += ~v12;
  }
  while (v10);
LABEL_26:
  if (v11 != (int *)&unk_1CF945B20
    && ((sub_1CBE5B8A4((uint64_t)&v20, v11), (_BYTE)v21) || BYTE4(v20) && v20 == a1)
    && (v23 || v22 && HIDWORD(v21) == a2)
    && (v26 || v25 && v24 == a3)
    && (v29 || v28 && v27 == a4))
  {
    *a5 = (uint64_t)(a5 + 2);
    v14.n128_u64[0] = 0x1000000000;
    a5[1] = 0x1000000000;
    LODWORD(v15) = dword_1CF962060[((unint64_t)((char *)v11 - (char *)&unk_1CF9459E0) >> 4)] & 0x3FF;
    LODWORD(v16) = dword_1CF962060[((unint64_t)((char *)v11 - (char *)&unk_1CF9459E0) >> 4)] >> 10;
    BOOL v17 = v15 == 1023;
    if (v15 == 1023) {
      uint64_t v15 = 0xFFFFFFFFLL;
    }
    else {
      uint64_t v15 = v15;
    }
    if (v17) {
      uint64_t v16 = 0;
    }
    else {
      uint64_t v16 = v16;
    }
    unint64_t v18 = (unsigned __int8 *)&unk_1CF961D10 + v15;
    if (v17) {
      unint64_t v18 = 0;
    }
    uint64_t v20 = v18;
    int v21 = &v18[v16];
    sub_1CBE5B1C4(&v20, a5, v14);
  }
  else
  {
    *a5 = (uint64_t)(a5 + 2);
    *(void *)&double result = 0x1000000000;
    a5[1] = 0x1000000000;
  }
  return result;
}

double sub_1CBE5BE34@<D0>(unsigned int a1@<W0>, unsigned int a2@<W1>, unsigned int a3@<W2>, unsigned int a4@<W3>, uint64_t *a5@<X8>)
{
  unint64_t v10 = 28;
  int v11 = (int *)&unk_1CF945B20;
  do
  {
    unint64_t v12 = v10 >> 1;
    sub_1CBE5C058(&v20, &v11[4 * (v10 >> 1)]);
    if ((_BYTE)v21) {
      goto LABEL_18;
    }
    if (BYTE4(v20)) {
      BOOL v13 = v20 >= a1;
    }
    else {
      BOOL v13 = 0;
    }
    if (!v13)
    {
LABEL_24:
      unint64_t v12 = v10 + ~v12;
      v11 += 4 * (v10 >> 1) + 4;
      goto LABEL_25;
    }
    if (v20 <= a1)
    {
LABEL_18:
      if (v23) {
        goto LABEL_22;
      }
      if (!v22 || HIDWORD(v21) < a2) {
        goto LABEL_24;
      }
      if (HIDWORD(v21) <= a2)
      {
LABEL_22:
        if (v26) {
          goto LABEL_7;
        }
        if (!v25 || v24 < a3) {
          goto LABEL_24;
        }
        if (v24 <= a3)
        {
LABEL_7:
          if (!v29 && (!v28 || v27 < a4)) {
            goto LABEL_24;
          }
        }
      }
    }
LABEL_25:
    unint64_t v10 = v12;
  }
  while (v12);
  if (v11 != (int *)&unk_1CF945CE0
    && ((sub_1CBE5C058(&v20, v11), (_BYTE)v21) || BYTE4(v20) && v20 == a1)
    && (v23 || v22 && HIDWORD(v21) == a2)
    && (v26 || v25 && v24 == a3)
    && (v29 || v28 && v27 == a4))
  {
    *a5 = (uint64_t)(a5 + 2);
    v14.n128_u64[0] = 0x1000000000;
    a5[1] = 0x1000000000;
    LODWORD(v15) = dword_1CF962704[((unint64_t)((char *)v11 - (char *)&unk_1CF945B20) >> 4)] & 0x7FF;
    LODWORD(v16) = dword_1CF962704[((unint64_t)((char *)v11 - (char *)&unk_1CF945B20) >> 4)] >> 11;
    BOOL v17 = v15 == 2047;
    if (v15 == 2047) {
      uint64_t v15 = 0xFFFFFFFFLL;
    }
    else {
      uint64_t v15 = v15;
    }
    if (v17) {
      uint64_t v16 = 0;
    }
    else {
      uint64_t v16 = v16;
    }
    unint64_t v18 = (unsigned __int8 *)&unk_1CF9620B0 + v15;
    if (v17) {
      unint64_t v18 = 0;
    }
    uint64_t v20 = v18;
    int v21 = &v18[v16];
    sub_1CBE5B1C4(&v20, a5, v14);
  }
  else
  {
    *a5 = (uint64_t)(a5 + 2);
    *(void *)&double result = 0x1000000000;
    a5[1] = 0x1000000000;
  }
  return result;
}

unsigned char *sub_1CBE5C058(unsigned char *result, int *a2)
{
  result[24] = 0;
  result[28] = 0;
  result[32] = 0;
  result[36] = 0;
  result[40] = 0;
  result[44] = 0;
  int v2 = *a2;
  if (*a2 == -2)
  {
    char v3 = 0;
    char v4 = 0;
    *double result = 0;
  }
  else if (v2 == -1)
  {
    char v3 = 0;
    *double result = 0;
    char v4 = 1;
  }
  else
  {
    char v4 = 0;
    *(_DWORD *)double result = v2;
    char v3 = 1;
  }
  result[4] = v3;
  result[8] = v4;
  int v5 = a2[1];
  if (v5 == -2)
  {
    char v6 = 0;
    char v7 = 0;
    result[12] = 0;
  }
  else if (v5 == -1)
  {
    char v6 = 0;
    result[12] = 0;
    char v7 = 1;
  }
  else
  {
    char v7 = 0;
    *((_DWORD *)result + 3) = v5;
    char v6 = 1;
  }
  result[16] = v6;
  result[20] = v7;
  int v8 = a2[2];
  if (v8 == -2)
  {
    char v9 = 0;
    char v10 = 0;
    result[24] = 0;
  }
  else if (v8 == -1)
  {
    char v9 = 0;
    result[24] = 0;
    char v10 = 1;
  }
  else
  {
    char v10 = 0;
    *((_DWORD *)result + 6) = v8;
    char v9 = 1;
  }
  result[28] = v9;
  result[32] = v10;
  int v11 = a2[3];
  if (v11 == -2)
  {
    char v12 = 0;
    char v13 = 0;
    result[36] = 0;
  }
  else if (v11 == -1)
  {
    char v12 = 0;
    result[36] = 0;
    char v13 = 1;
  }
  else
  {
    char v13 = 0;
    *((_DWORD *)result + 9) = v11;
    char v12 = 1;
  }
  result[40] = v12;
  result[44] = v13;
  return result;
}

double sub_1CBE5C194@<D0>(unsigned int a1@<W0>, uint64_t a2@<X1>, unsigned int a3@<W2>, unsigned int a4@<W3>, unsigned int a5@<W4>, uint64_t a6@<X5>, unsigned int a7@<W6>, uint64_t *a8@<X8>)
{
  int v11 = BYTE4(a2);
  int v12 = BYTE4(a6);
  char v13 = (int *)&unk_1CF945CE0;
  unint64_t v14 = 1152;
  do
  {
    unint64_t v15 = v14 >> 1;
    sub_1CBE5C578(&v30, &v13[7 * (v14 >> 1)]);
    if ((_BYTE)v31) {
      goto LABEL_3;
    }
    if (BYTE4(v30)) {
      BOOL v16 = v30 >= a1;
    }
    else {
      BOOL v16 = 0;
    }
    if (!v16)
    {
LABEL_50:
      unint64_t v15 = v14 + ~v15;
      v13 += 7 * (v14 >> 1) + 7;
      goto LABEL_51;
    }
    if (v30 <= a1)
    {
LABEL_3:
      if (!v33)
      {
        if (v32 && v11)
        {
          if (HIDWORD(v31) < a2) {
            goto LABEL_50;
          }
        }
        else if (v11 && !v32)
        {
          goto LABEL_50;
        }
        if (v11 && v32)
        {
          if (HIDWORD(v31) > a2) {
            goto LABEL_51;
          }
        }
        else if (!v11 && v32)
        {
          goto LABEL_51;
        }
      }
      if (v36) {
        goto LABEL_39;
      }
      if (!v35 || v34 < a3) {
        goto LABEL_50;
      }
      if (v34 <= a3)
      {
LABEL_39:
        if (v39) {
          goto LABEL_102;
        }
        if (!v38 || v37 < a4) {
          goto LABEL_50;
        }
        if (v37 <= a4)
        {
LABEL_102:
          if (v42) {
            goto LABEL_7;
          }
          if (!v41 || v40 < a5) {
            goto LABEL_50;
          }
          if (v40 <= a5)
          {
LABEL_7:
            if (!v45)
            {
              if (v44 && v12)
              {
                if (v43 < a6) {
                  goto LABEL_50;
                }
              }
              else if (v12 && !v44)
              {
                goto LABEL_50;
              }
              if (v12 && v44)
              {
                if (v43 > a6) {
                  goto LABEL_51;
                }
              }
              else if (!v12 && v44)
              {
                goto LABEL_51;
              }
            }
            if (!v48 && (!v47 || v46 < a7)) {
              goto LABEL_50;
            }
          }
        }
      }
    }
LABEL_51:
    unint64_t v14 = v15;
  }
  while (v15);
  if (v13 == (int *)&unk_1CF94DAE0) {
    goto LABEL_99;
  }
  sub_1CBE5C578(&v30, v13);
  if (!(_BYTE)v31 && (!BYTE4(v30) || v30 != a1)) {
    goto LABEL_99;
  }
  if (v33) {
    goto LABEL_65;
  }
  uint64_t v23 = a2 & 0xFF00000000;
  if (!v32 || !v23)
  {
    if ((v23 != 0) != (v32 == 0)) {
      goto LABEL_65;
    }
    goto LABEL_99;
  }
  if (HIDWORD(v31) != a2) {
    goto LABEL_99;
  }
  if (!v36 && (!v35 || v34 != a3) || !v39 && (!v38 || v37 != a4) || !v42 && (!v41 || v40 != a5)) {
    goto LABEL_99;
  }
LABEL_65:
  if (v45) {
    goto LABEL_75;
  }
  uint64_t v24 = a6 & 0xFF00000000;
  if (v44 && v24)
  {
    if (v43 == a6) {
      goto LABEL_75;
    }
    goto LABEL_99;
  }
  if ((v24 != 0) == (v44 == 0)) {
    goto LABEL_99;
  }
LABEL_75:
  if (v48 || v47 && v46 == a7)
  {
    *a8 = (uint64_t)(a8 + 2);
    v17.n128_u64[0] = 0x1000000000;
    a8[1] = 0x1000000000;
    LODWORD(v18) = *((_DWORD *)&unk_1CF9692A4
                   - 1227133513 * ((unint64_t)((char *)v13 - (char *)&unk_1CF945CE0) >> 2)) & 0x3FFF;
    LODWORD(v19) = *((_DWORD *)&unk_1CF9692A4
                   - 1227133513 * ((unint64_t)((char *)v13 - (char *)&unk_1CF945CE0) >> 2)) >> 14;
    BOOL v20 = v18 == 0x3FFF;
    if (v18 == 0x3FFF) {
      uint64_t v18 = 0xFFFFFFFFLL;
    }
    else {
      uint64_t v18 = v18;
    }
    if (v20) {
      uint64_t v19 = 0;
    }
    else {
      uint64_t v19 = v19;
    }
    int v21 = (unsigned __int8 *)&unk_1CF962774 + v18;
    if (v20) {
      int v21 = 0;
    }
    unint64_t v30 = v21;
    BOOL v31 = &v21[v19];
    sub_1CBE5B1C4(&v30, a8, v17);
  }
  else
  {
LABEL_99:
    *a8 = (uint64_t)(a8 + 2);
    *(void *)&double result = 0x1000000000;
    a8[1] = 0x1000000000;
  }
  return result;
}

unsigned char *sub_1CBE5C578(unsigned char *result, int *a2)
{
  *double result = 0;
  result[4] = 0;
  result[8] = 0;
  result[12] = 0;
  result[16] = 0;
  result[20] = 0;
  result[24] = 0;
  result[28] = 0;
  result[32] = 0;
  result[36] = 0;
  result[40] = 0;
  result[44] = 0;
  result[48] = 0;
  result[52] = 0;
  result[56] = 0;
  result[60] = 0;
  result[64] = 0;
  result[68] = 0;
  result[72] = 0;
  result[76] = 0;
  result[80] = 0;
  int v2 = *a2;
  if (*a2 == -2)
  {
    char v3 = 0;
    char v4 = 0;
    *double result = 0;
  }
  else if (v2 == -1)
  {
    char v3 = 0;
    *double result = 0;
    char v4 = 1;
  }
  else
  {
    char v4 = 0;
    *(_DWORD *)double result = v2;
    char v3 = 1;
  }
  result[4] = v3;
  result[8] = v4;
  int v5 = a2[1];
  if (v5 == -2)
  {
    char v6 = 0;
    char v7 = 0;
    result[12] = 0;
  }
  else if (v5 == -1)
  {
    char v6 = 0;
    result[12] = 0;
    char v7 = 1;
  }
  else
  {
    char v7 = 0;
    *((_DWORD *)result + 3) = v5;
    char v6 = 1;
  }
  result[16] = v6;
  result[20] = v7;
  int v8 = a2[2];
  if (v8 == -2)
  {
    char v9 = 0;
    char v10 = 0;
    result[24] = 0;
  }
  else if (v8 == -1)
  {
    char v9 = 0;
    result[24] = 0;
    char v10 = 1;
  }
  else
  {
    char v10 = 0;
    *((_DWORD *)result + 6) = v8;
    char v9 = 1;
  }
  result[28] = v9;
  result[32] = v10;
  int v11 = a2[3];
  if (v11 == -2)
  {
    char v12 = 0;
    char v13 = 0;
    result[36] = 0;
  }
  else if (v11 == -1)
  {
    char v12 = 0;
    result[36] = 0;
    char v13 = 1;
  }
  else
  {
    char v13 = 0;
    *((_DWORD *)result + 9) = v11;
    char v12 = 1;
  }
  result[40] = v12;
  result[44] = v13;
  int v14 = a2[4];
  if (v14 == -2)
  {
    char v15 = 0;
    char v16 = 0;
    result[48] = 0;
  }
  else if (v14 == -1)
  {
    char v15 = 0;
    result[48] = 0;
    char v16 = 1;
  }
  else
  {
    char v16 = 0;
    *((_DWORD *)result + 12) = v14;
    char v15 = 1;
  }
  result[52] = v15;
  result[56] = v16;
  int v17 = a2[5];
  if (v17 == -2)
  {
    char v18 = 0;
    char v19 = 0;
    result[60] = 0;
  }
  else if (v17 == -1)
  {
    char v18 = 0;
    result[60] = 0;
    char v19 = 1;
  }
  else
  {
    char v19 = 0;
    *((_DWORD *)result + 15) = v17;
    char v18 = 1;
  }
  result[64] = v18;
  result[68] = v19;
  int v20 = a2[6];
  if (v20 == -2)
  {
    char v21 = 0;
    char v22 = 0;
    result[72] = 0;
  }
  else if (v20 == -1)
  {
    char v21 = 0;
    result[72] = 0;
    char v22 = 1;
  }
  else
  {
    char v22 = 0;
    *((_DWORD *)result + 18) = v20;
    char v21 = 1;
  }
  result[76] = v21;
  result[80] = v22;
  return result;
}

double sub_1CBE5C7C8@<D0>(unsigned int a1@<W0>, uint64_t a2@<X1>, unsigned int a3@<W2>, unsigned int a4@<W3>, unsigned int a5@<W4>, uint64_t a6@<X5>, unsigned int a7@<W6>, uint64_t *a8@<X8>)
{
  int v11 = BYTE4(a2);
  int v12 = BYTE4(a6);
  char v13 = (int *)&unk_1CF94DAE0;
  unint64_t v14 = 1152;
  do
  {
    unint64_t v15 = v14 >> 1;
    sub_1CBE5C578(&v30, &v13[7 * (v14 >> 1)]);
    if ((_BYTE)v31) {
      goto LABEL_3;
    }
    if (BYTE4(v30)) {
      BOOL v16 = v30 >= a1;
    }
    else {
      BOOL v16 = 0;
    }
    if (!v16)
    {
LABEL_50:
      unint64_t v15 = v14 + ~v15;
      v13 += 7 * (v14 >> 1) + 7;
      goto LABEL_51;
    }
    if (v30 <= a1)
    {
LABEL_3:
      if (!v33)
      {
        if (v32 && v11)
        {
          if (HIDWORD(v31) < a2) {
            goto LABEL_50;
          }
        }
        else if (v11 && !v32)
        {
          goto LABEL_50;
        }
        if (v11 && v32)
        {
          if (HIDWORD(v31) > a2) {
            goto LABEL_51;
          }
        }
        else if (!v11 && v32)
        {
          goto LABEL_51;
        }
      }
      if (v36) {
        goto LABEL_39;
      }
      if (!v35 || v34 < a3) {
        goto LABEL_50;
      }
      if (v34 <= a3)
      {
LABEL_39:
        if (v39) {
          goto LABEL_102;
        }
        if (!v38 || v37 < a4) {
          goto LABEL_50;
        }
        if (v37 <= a4)
        {
LABEL_102:
          if (v42) {
            goto LABEL_7;
          }
          if (!v41 || v40 < a5) {
            goto LABEL_50;
          }
          if (v40 <= a5)
          {
LABEL_7:
            if (!v45)
            {
              if (v44 && v12)
              {
                if (v43 < a6) {
                  goto LABEL_50;
                }
              }
              else if (v12 && !v44)
              {
                goto LABEL_50;
              }
              if (v12 && v44)
              {
                if (v43 > a6) {
                  goto LABEL_51;
                }
              }
              else if (!v12 && v44)
              {
                goto LABEL_51;
              }
            }
            if (!v48 && (!v47 || v46 < a7)) {
              goto LABEL_50;
            }
          }
        }
      }
    }
LABEL_51:
    unint64_t v14 = v15;
  }
  while (v15);
  if (v13 == &dword_1CF9558E0) {
    goto LABEL_99;
  }
  sub_1CBE5C578(&v30, v13);
  if (!(_BYTE)v31 && (!BYTE4(v30) || v30 != a1)) {
    goto LABEL_99;
  }
  if (v33) {
    goto LABEL_65;
  }
  uint64_t v23 = a2 & 0xFF00000000;
  if (!v32 || !v23)
  {
    if ((v23 != 0) != (v32 == 0)) {
      goto LABEL_65;
    }
    goto LABEL_99;
  }
  if (HIDWORD(v31) != a2) {
    goto LABEL_99;
  }
  if (!v36 && (!v35 || v34 != a3) || !v39 && (!v38 || v37 != a4) || !v42 && (!v41 || v40 != a5)) {
    goto LABEL_99;
  }
LABEL_65:
  if (v45) {
    goto LABEL_75;
  }
  uint64_t v24 = a6 & 0xFF00000000;
  if (v44 && v24)
  {
    if (v43 == a6) {
      goto LABEL_75;
    }
    goto LABEL_99;
  }
  if ((v24 != 0) == (v44 == 0)) {
    goto LABEL_99;
  }
LABEL_75:
  if (v48 || v47 && v46 == a7)
  {
    *a8 = (uint64_t)(a8 + 2);
    v17.n128_u64[0] = 0x1000000000;
    a8[1] = 0x1000000000;
    LODWORD(v18) = *((_DWORD *)&unk_1CF9692A4
                   - 1227133513 * ((unint64_t)((char *)v13 - (char *)&unk_1CF94DAE0) >> 2)) & 0x3FFF;
    LODWORD(v19) = *((_DWORD *)&unk_1CF9692A4
                   - 1227133513 * ((unint64_t)((char *)v13 - (char *)&unk_1CF94DAE0) >> 2)) >> 14;
    BOOL v20 = v18 == 0x3FFF;
    if (v18 == 0x3FFF) {
      uint64_t v18 = 0xFFFFFFFFLL;
    }
    else {
      uint64_t v18 = v18;
    }
    if (v20) {
      uint64_t v19 = 0;
    }
    else {
      uint64_t v19 = v19;
    }
    char v21 = (unsigned __int8 *)&unk_1CF965D0C + v18;
    if (v20) {
      char v21 = 0;
    }
    unint64_t v30 = v21;
    BOOL v31 = &v21[v19];
    sub_1CBE5B1C4(&v30, a8, v17);
  }
  else
  {
LABEL_99:
    *a8 = (uint64_t)(a8 + 2);
    *(void *)&double result = 0x1000000000;
    a8[1] = 0x1000000000;
  }
  return result;
}

double sub_1CBE5CBAC@<D0>(unsigned int a1@<W0>, uint64_t *a2@<X8>, __n128 a3@<Q0>)
{
  unint64_t v3 = 3;
  uint64_t v4 = (uint64_t)&dword_1CF9558E0;
  do
  {
    while (1)
    {
      unint64_t v5 = v3 >> 1;
      char v6 = (unsigned int *)(v4 + 4 * (v3 >> 1));
      unsigned int v7 = *v6;
      if (*v6 == -1 || v7 != -2 && v7 >= a1) {
        break;
      }
      uint64_t v4 = (uint64_t)(v6 + 1);
      v3 += ~v5;
      if (!v3) {
        goto LABEL_8;
      }
    }
    v3 >>= 1;
  }
  while (v5);
LABEL_8:
  if ((_UNKNOWN *)v4 == &unk_1CF9558EC || (int v8 = *(_DWORD *)v4, *(_DWORD *)v4 == -2) || v8 != -1 && v8 != a1)
  {
    *a2 = (uint64_t)(a2 + 2);
    *(void *)&double result = 0x1000000000;
    a2[1] = 0x1000000000;
  }
  else
  {
    *a2 = (uint64_t)(a2 + 2);
    a3.n128_u64[0] = 0x1000000000;
    a2[1] = 0x1000000000;
    unsigned int v9 = byte_1CF96A4B0[((unint64_t)(v4 - (void)&dword_1CF9558E0) >> 2)];
    LODWORD(v4) = v9 & 7;
    LODWORD(v10) = v9 >> 3;
    BOOL v11 = v4 == 7;
    if (v4 == 7) {
      uint64_t v4 = 0xFFFFFFFFLL;
    }
    else {
      uint64_t v4 = v4;
    }
    if (v11) {
      uint64_t v10 = 0;
    }
    else {
      uint64_t v10 = v10;
    }
    int v12 = (unsigned __int8 *)&unk_1CF96A4A4 + v4;
    if (v11) {
      int v12 = 0;
    }
    v14[0] = v12;
    v14[1] = &v12[v10];
    sub_1CBE5B1C4(v14, a2, a3);
  }
  return result;
}

double sub_1CBE5CCBC@<D0>(unsigned int a1@<W0>, uint64_t a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X3>, unsigned int a5@<W4>, unsigned __int16 a6@<W5>, uint64_t *a7@<X8>)
{
  unsigned int v25 = a6;
  int v10 = BYTE4(a2);
  int v11 = BYTE4(a4);
  int v12 = (int *)&unk_1CF9558EC;
  unint64_t v13 = 304;
  do
  {
    unint64_t v14 = v13 >> 1;
    sub_1CBE5D054(&v28, &v12[6 * (v13 >> 1)]);
    if ((_BYTE)v29) {
      goto LABEL_3;
    }
    if (BYTE4(v28)) {
      BOOL v15 = v28 >= a1;
    }
    else {
      BOOL v15 = 0;
    }
    if (!v15)
    {
LABEL_42:
      unint64_t v14 = v13 + ~v14;
      v12 += 6 * (v13 >> 1) + 6;
      goto LABEL_43;
    }
    if (v28 <= a1)
    {
LABEL_3:
      if (!v31)
      {
        if (v30 && v10)
        {
          if (HIDWORD(v29) < a2) {
            goto LABEL_42;
          }
        }
        else if (v10 && !v30)
        {
          goto LABEL_42;
        }
        if (v10 && v30)
        {
          if (HIDWORD(v29) > a2) {
            goto LABEL_43;
          }
        }
        else if (!v10 && v30)
        {
          goto LABEL_43;
        }
      }
      if (v34) {
        goto LABEL_5;
      }
      if (!v33 || v32 < a3) {
        goto LABEL_42;
      }
      if (v32 <= a3)
      {
LABEL_5:
        if (!v37)
        {
          if (v36 && v11)
          {
            if (v35 < a4) {
              goto LABEL_42;
            }
          }
          else if (v11 && !v36)
          {
            goto LABEL_42;
          }
          if (v11 && v36)
          {
            if (v35 > a4) {
              goto LABEL_43;
            }
          }
          else if (!v11 && v36)
          {
            goto LABEL_43;
          }
        }
        if (v40) {
          goto LABEL_9;
        }
        if (!v39 || v38 < a5) {
          goto LABEL_42;
        }
        if (v38 <= a5)
        {
LABEL_9:
          if (!v43 && (!v42 || v41 < v25)) {
            goto LABEL_42;
          }
        }
      }
    }
LABEL_43:
    unint64_t v13 = v14;
  }
  while (v14);
  if (v12 == (int *)&unk_1CF95756C || (sub_1CBE5D054(&v28, v12), !(_BYTE)v29) && (!BYTE4(v28) || v28 != a1))
  {
LABEL_91:
    *a7 = (uint64_t)(a7 + 2);
    *(void *)&double result = 0x1000000000;
    a7[1] = 0x1000000000;
    return result;
  }
  if (!v31)
  {
    uint64_t v22 = a2 & 0xFF00000000;
    if (v30 && v22)
    {
      if (HIDWORD(v29) == a2) {
        goto LABEL_60;
      }
    }
    else if ((v22 != 0) != (v30 == 0))
    {
      goto LABEL_60;
    }
    goto LABEL_91;
  }
LABEL_60:
  if (!v34 && (!v33 || v32 != a3)) {
    goto LABEL_91;
  }
  if (v37) {
    goto LABEL_64;
  }
  uint64_t v23 = a4 & 0xFF00000000;
  if (v36 && v23)
  {
    if (v35 != a4) {
      goto LABEL_91;
    }
  }
  else if ((v23 != 0) == (v36 == 0))
  {
    goto LABEL_91;
  }
LABEL_64:
  if (!v40 && (!v39 || v38 != a5) || !v43 && (!v42 || v41 != v25)) {
    goto LABEL_91;
  }
  *a7 = (uint64_t)(a7 + 2);
  v16.n128_u64[0] = 0x1000000000;
  a7[1] = 0x1000000000;
  LODWORD(v17) = *((_DWORD *)&unk_1CF96AA60
                 - 1431655765 * ((unint64_t)((char *)v12 - (char *)&unk_1CF9558EC) >> 3)) & 0x7FF;
  LODWORD(v18) = *((_DWORD *)&unk_1CF96AA60
                 - 1431655765 * ((unint64_t)((char *)v12 - (char *)&unk_1CF9558EC) >> 3)) >> 11;
  BOOL v19 = v17 == 2047;
  if (v17 == 2047) {
    uint64_t v17 = 0xFFFFFFFFLL;
  }
  else {
    uint64_t v17 = v17;
  }
  if (v19) {
    uint64_t v18 = 0;
  }
  else {
    uint64_t v18 = v18;
  }
  BOOL v20 = (unsigned __int8 *)&unk_1CF96A4B3 + v17;
  if (v19) {
    BOOL v20 = 0;
  }
  char v28 = v20;
  char v29 = &v20[v18];
  sub_1CBE5B1C4(&v28, a7, v16);
  return result;
}

unsigned char *sub_1CBE5D054(unsigned char *result, int *a2)
{
  result[24] = 0;
  result[28] = 0;
  result[32] = 0;
  result[36] = 0;
  result[40] = 0;
  result[44] = 0;
  result[48] = 0;
  result[52] = 0;
  result[56] = 0;
  result[60] = 0;
  result[62] = 0;
  result[64] = 0;
  int v2 = *a2;
  if (*a2 == -2)
  {
    char v3 = 0;
    char v4 = 0;
    *double result = 0;
  }
  else if (v2 == -1)
  {
    char v3 = 0;
    *double result = 0;
    char v4 = 1;
  }
  else
  {
    char v4 = 0;
    *(_DWORD *)double result = v2;
    char v3 = 1;
  }
  result[4] = v3;
  result[8] = v4;
  int v5 = a2[1];
  if (v5 == -2)
  {
    char v6 = 0;
    char v7 = 0;
    result[12] = 0;
  }
  else if (v5 == -1)
  {
    char v6 = 0;
    result[12] = 0;
    char v7 = 1;
  }
  else
  {
    char v7 = 0;
    *((_DWORD *)result + 3) = v5;
    char v6 = 1;
  }
  result[16] = v6;
  result[20] = v7;
  int v8 = a2[2];
  if (v8 == -2)
  {
    char v9 = 0;
    char v10 = 0;
    result[24] = 0;
  }
  else if (v8 == -1)
  {
    char v9 = 0;
    result[24] = 0;
    char v10 = 1;
  }
  else
  {
    char v10 = 0;
    *((_DWORD *)result + 6) = v8;
    char v9 = 1;
  }
  result[28] = v9;
  result[32] = v10;
  int v11 = a2[3];
  if (v11 == -2)
  {
    char v12 = 0;
    char v13 = 0;
    result[36] = 0;
  }
  else if (v11 == -1)
  {
    char v12 = 0;
    result[36] = 0;
    char v13 = 1;
  }
  else
  {
    char v13 = 0;
    *((_DWORD *)result + 9) = v11;
    char v12 = 1;
  }
  result[40] = v12;
  result[44] = v13;
  int v14 = a2[4];
  if (v14 == -2)
  {
    char v15 = 0;
    char v16 = 0;
    result[48] = 0;
  }
  else if (v14 == -1)
  {
    char v15 = 0;
    result[48] = 0;
    char v16 = 1;
  }
  else
  {
    char v16 = 0;
    *((_DWORD *)result + 12) = v14;
    char v15 = 1;
  }
  result[52] = v15;
  result[56] = v16;
  int v17 = a2[5];
  if (v17 == -2)
  {
    char v18 = 0;
    char v19 = 0;
    result[60] = 0;
  }
  else if (v17 == -1)
  {
    char v18 = 0;
    result[60] = 0;
    char v19 = 1;
  }
  else
  {
    char v19 = 0;
    *((_WORD *)result + 30) = v17;
    char v18 = 1;
  }
  result[62] = v18;
  result[64] = v19;
  return result;
}

double sub_1CBE5D238@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned int a4@<W3>, unsigned int a5@<W4>, uint64_t a6@<X5>, unsigned int a7@<W6>, unsigned __int16 a8@<W7>, uint64_t *a9@<X8>)
{
  unsigned int v30 = a8;
  int v11 = BYTE4(a1);
  int v12 = BYTE4(a2);
  int v13 = BYTE4(a3);
  int v14 = BYTE4(a6);
  char v15 = (int *)&unk_1CF95756C;
  unint64_t v16 = 1168;
  do
  {
    unint64_t v17 = v16 >> 1;
    sub_1CBE5D718(&v37, &v15[8 * (v16 >> 1)]);
    if (!(_BYTE)v38)
    {
      if (BYTE4(v37)) {
        BOOL v18 = v11 == 0;
      }
      else {
        BOOL v18 = 1;
      }
      if (v18)
      {
        if (v11 && !BYTE4(v37))
        {
LABEL_73:
          unint64_t v17 = v16 + ~v17;
          v15 += 8 * (v16 >> 1) + 8;
          goto LABEL_74;
        }
      }
      else if (v37 < a1)
      {
        goto LABEL_73;
      }
      if (v11 && BYTE4(v37))
      {
        if (v37 > a1) {
          goto LABEL_74;
        }
      }
      else if (!v11 && BYTE4(v37))
      {
        goto LABEL_74;
      }
    }
    if (!v40)
    {
      if (v39 && v12)
      {
        if (HIDWORD(v38) < a2) {
          goto LABEL_73;
        }
      }
      else if (v12 && !v39)
      {
        goto LABEL_73;
      }
      if (v12 && v39)
      {
        if (HIDWORD(v38) > a2) {
          goto LABEL_74;
        }
      }
      else if (!v12 && v39)
      {
        goto LABEL_74;
      }
    }
    if (!v43)
    {
      if (v42 && v13)
      {
        if (v41 < a3) {
          goto LABEL_73;
        }
      }
      else if (v13 && !v42)
      {
        goto LABEL_73;
      }
      if (v13 && v42)
      {
        if (v41 > a3) {
          goto LABEL_74;
        }
      }
      else if (!v13 && v42)
      {
        goto LABEL_74;
      }
    }
    if (v46) {
      goto LABEL_46;
    }
    if (!v45 || v44 < a4) {
      goto LABEL_73;
    }
    if (v44 <= a4)
    {
LABEL_46:
      if (v49) {
        goto LABEL_7;
      }
      if (!v48 || v47 < a5) {
        goto LABEL_73;
      }
      if (v47 <= a5)
      {
LABEL_7:
        if (!v52)
        {
          if (v51 && v14)
          {
            if (v50 < a6) {
              goto LABEL_73;
            }
          }
          else if (v14 && !v51)
          {
            goto LABEL_73;
          }
          if (v14 && v51)
          {
            if (v50 > a6) {
              goto LABEL_74;
            }
          }
          else if (!v14 && v51)
          {
            goto LABEL_74;
          }
        }
        if (v55) {
          goto LABEL_11;
        }
        if (!v54 || v53 < a7) {
          goto LABEL_73;
        }
        if (v53 <= a7)
        {
LABEL_11:
          if (!v58 && (!v57 || v56 < v30)) {
            goto LABEL_73;
          }
        }
      }
    }
LABEL_74:
    unint64_t v16 = v17;
  }
  while (v17);
  if (v15 == &dword_1CF96076C) {
    goto LABEL_133;
  }
  sub_1CBE5D718(&v37, v15);
  if ((_BYTE)v38) {
    goto LABEL_85;
  }
  uint64_t v26 = a1 & 0xFF00000000;
  if (!BYTE4(v37) || !v26)
  {
    if ((v26 != 0) != (BYTE4(v37) == 0)) {
      goto LABEL_85;
    }
LABEL_133:
    *a9 = (uint64_t)(a9 + 2);
    *(void *)&double result = 0x1000000000;
    a9[1] = 0x1000000000;
    return result;
  }
  if (v37 != a1) {
    goto LABEL_133;
  }
LABEL_85:
  if (!v40)
  {
    uint64_t v27 = a2 & 0xFF00000000;
    if (v39 && v27)
    {
      if (HIDWORD(v38) == a2) {
        goto LABEL_86;
      }
    }
    else if ((v27 != 0) != (v39 == 0))
    {
      goto LABEL_86;
    }
    goto LABEL_133;
  }
LABEL_86:
  if (v43) {
    goto LABEL_87;
  }
  uint64_t v28 = a3 & 0xFF00000000;
  if (!v42 || !v28)
  {
    if ((v28 != 0) != (v42 == 0)) {
      goto LABEL_87;
    }
    goto LABEL_133;
  }
  if (v41 != a3) {
    goto LABEL_133;
  }
LABEL_87:
  if (!v46 && (!v45 || v44 != a4) || !v49 && (!v48 || v47 != a5)) {
    goto LABEL_133;
  }
  if (v52) {
    goto LABEL_94;
  }
  uint64_t v29 = a6 & 0xFF00000000;
  if (v51 && v29)
  {
    if (v50 != a6) {
      goto LABEL_133;
    }
  }
  else if ((v29 != 0) == (v51 == 0))
  {
    goto LABEL_133;
  }
LABEL_94:
  if (!v55 && (!v54 || v53 != a7) || !v58 && (!v57 || v56 != v30)) {
    goto LABEL_133;
  }
  *a9 = (uint64_t)(a9 + 2);
  v19.n128_u64[0] = 0x1000000000;
  a9[1] = 0x1000000000;
  unsigned int v20 = word_1CF96B3E8[((unint64_t)((char *)v15 - (char *)&unk_1CF95756C) >> 5)];
  LODWORD(v21) = v20 & 0x7FF;
  LODWORD(v22) = v20 >> 11;
  BOOL v23 = v21 == 2047;
  if (v21 == 2047) {
    uint64_t v21 = 0xFFFFFFFFLL;
  }
  else {
    uint64_t v21 = v21;
  }
  if (v23) {
    uint64_t v22 = 0;
  }
  else {
    uint64_t v22 = v22;
  }
  uint64_t v24 = (unsigned __int8 *)&unk_1CF96AF20 + v21;
  if (v23) {
    uint64_t v24 = 0;
  }
  char v37 = v24;
  unsigned int v38 = &v24[v22];
  sub_1CBE5B1C4(&v37, a9, v19);
  return result;
}

unsigned char *sub_1CBE5D718(unsigned char *result, int *a2)
{
  *double result = 0;
  result[4] = 0;
  result[8] = 0;
  result[12] = 0;
  result[16] = 0;
  result[20] = 0;
  result[24] = 0;
  result[28] = 0;
  result[32] = 0;
  result[36] = 0;
  result[40] = 0;
  result[44] = 0;
  result[48] = 0;
  result[52] = 0;
  result[56] = 0;
  result[60] = 0;
  result[64] = 0;
  result[68] = 0;
  result[72] = 0;
  result[76] = 0;
  result[80] = 0;
  result[84] = 0;
  result[86] = 0;
  result[88] = 0;
  int v2 = *a2;
  if (*a2 == -2)
  {
    char v3 = 0;
    char v4 = 0;
    *double result = 0;
  }
  else if (v2 == -1)
  {
    char v3 = 0;
    *double result = 0;
    char v4 = 1;
  }
  else
  {
    char v4 = 0;
    *(_DWORD *)double result = v2;
    char v3 = 1;
  }
  result[4] = v3;
  result[8] = v4;
  int v5 = a2[1];
  if (v5 == -2)
  {
    char v6 = 0;
    char v7 = 0;
    result[12] = 0;
  }
  else if (v5 == -1)
  {
    char v6 = 0;
    result[12] = 0;
    char v7 = 1;
  }
  else
  {
    char v7 = 0;
    *((_DWORD *)result + 3) = v5;
    char v6 = 1;
  }
  result[16] = v6;
  result[20] = v7;
  int v8 = a2[2];
  if (v8 == -2)
  {
    char v9 = 0;
    char v10 = 0;
    result[24] = 0;
  }
  else if (v8 == -1)
  {
    char v9 = 0;
    result[24] = 0;
    char v10 = 1;
  }
  else
  {
    char v10 = 0;
    *((_DWORD *)result + 6) = v8;
    char v9 = 1;
  }
  result[28] = v9;
  result[32] = v10;
  int v11 = a2[3];
  if (v11 == -2)
  {
    char v12 = 0;
    char v13 = 0;
    result[36] = 0;
  }
  else if (v11 == -1)
  {
    char v12 = 0;
    result[36] = 0;
    char v13 = 1;
  }
  else
  {
    char v13 = 0;
    *((_DWORD *)result + 9) = v11;
    char v12 = 1;
  }
  result[40] = v12;
  result[44] = v13;
  int v14 = a2[4];
  if (v14 == -2)
  {
    char v15 = 0;
    char v16 = 0;
    result[48] = 0;
  }
  else if (v14 == -1)
  {
    char v15 = 0;
    result[48] = 0;
    char v16 = 1;
  }
  else
  {
    char v16 = 0;
    *((_DWORD *)result + 12) = v14;
    char v15 = 1;
  }
  result[52] = v15;
  result[56] = v16;
  int v17 = a2[5];
  if (v17 == -2)
  {
    char v18 = 0;
    char v19 = 0;
    result[60] = 0;
  }
  else if (v17 == -1)
  {
    char v18 = 0;
    result[60] = 0;
    char v19 = 1;
  }
  else
  {
    char v19 = 0;
    *((_DWORD *)result + 15) = v17;
    char v18 = 1;
  }
  result[64] = v18;
  result[68] = v19;
  int v20 = a2[6];
  if (v20 == -2)
  {
    char v21 = 0;
    char v22 = 0;
    result[72] = 0;
  }
  else if (v20 == -1)
  {
    char v21 = 0;
    result[72] = 0;
    char v22 = 1;
  }
  else
  {
    char v22 = 0;
    *((_DWORD *)result + 18) = v20;
    char v21 = 1;
  }
  result[76] = v21;
  result[80] = v22;
  int v23 = a2[7];
  if (v23 == -2)
  {
    char v24 = 0;
    char v25 = 0;
    result[84] = 0;
  }
  else if (v23 == -1)
  {
    char v24 = 0;
    result[84] = 0;
    char v25 = 1;
  }
  else
  {
    char v25 = 0;
    *((_WORD *)result + 42) = v23;
    char v24 = 1;
  }
  result[86] = v24;
  result[88] = v25;
  return result;
}

double sub_1CBE5D9BC(uint64_t *a1, unsigned int a2, __n128 a3)
{
  unint64_t v3 = 2;
  unint64_t v4 = (unint64_t)&dword_1CF96076C;
  do
  {
    while (1)
    {
      unint64_t v5 = v3 >> 1;
      char v6 = (int *)(v4 + 4 * (v3 >> 1));
      unsigned int v7 = *v6;
      if (*v6 == -1 || v7 != -2 && v7 >= a2) {
        break;
      }
      unint64_t v4 = (unint64_t)(v6 + 1);
      v3 += ~v5;
      if (!v3) {
        goto LABEL_8;
      }
    }
    v3 >>= 1;
  }
  while (v5);
LABEL_8:
  if ((int *)v4 == &dword_1CF960774 || (int v8 = *(_DWORD *)v4, *(_DWORD *)v4 == -2) || v8 != -1 && v8 != a2)
  {
    *a1 = (uint64_t)(a1 + 2);
    *(void *)&double result = 0x1000000000;
    a1[1] = 0x1000000000;
  }
  else
  {
    *a1 = (uint64_t)(a1 + 2);
    a3.n128_u64[0] = 0x1000000000;
    a1[1] = 0x1000000000;
    unsigned int v9 = word_1CF96BD44[((v4 - (unint64_t)&dword_1CF96076C) >> 2)];
    LODWORD(v4) = v9 & 0x1F;
    LODWORD(v10) = v9 >> 5;
    BOOL v11 = v4 == 31;
    if (v4 == 31) {
      unint64_t v4 = 0xFFFFFFFFLL;
    }
    else {
      unint64_t v4 = v4;
    }
    if (v11) {
      uint64_t v10 = 0;
    }
    else {
      uint64_t v10 = v10;
    }
    char v12 = (unsigned __int8 *)&unk_1CF96BD08 + v4;
    if (v11) {
      char v12 = 0;
    }
    v14[0] = v12;
    v14[1] = &v12[v10];
    sub_1CBE5B1C4(v14, a1, a3);
  }
  return result;
}

double sub_1CBE5DAD0(uint64_t *a1, unsigned int a2, __n128 a3)
{
  unint64_t v3 = 2;
  unint64_t v4 = (unint64_t)&dword_1CF960774;
  do
  {
    while (1)
    {
      unint64_t v5 = v3 >> 1;
      char v6 = (int *)(v4 + 4 * (v3 >> 1));
      unsigned int v7 = *v6;
      if (*v6 == -1 || v7 != -2 && v7 >= a2) {
        break;
      }
      unint64_t v4 = (unint64_t)(v6 + 1);
      v3 += ~v5;
      if (!v3) {
        goto LABEL_8;
      }
    }
    v3 >>= 1;
  }
  while (v5);
LABEL_8:
  if ((int *)v4 == &dword_1CF96077C || (int v8 = *(_DWORD *)v4, *(_DWORD *)v4 == -2) || v8 != -1 && v8 != a2)
  {
    *a1 = (uint64_t)(a1 + 2);
    *(void *)&double result = 0x1000000000;
    a1[1] = 0x1000000000;
  }
  else
  {
    *a1 = (uint64_t)(a1 + 2);
    a3.n128_u64[0] = 0x1000000000;
    a1[1] = 0x1000000000;
    unsigned int v9 = word_1CF96BD44[((v4 - (unint64_t)&dword_1CF960774) >> 2)];
    LODWORD(v4) = v9 & 0x1F;
    LODWORD(v10) = v9 >> 5;
    BOOL v11 = v4 == 31;
    if (v4 == 31) {
      unint64_t v4 = 0xFFFFFFFFLL;
    }
    else {
      unint64_t v4 = v4;
    }
    if (v11) {
      uint64_t v10 = 0;
    }
    else {
      uint64_t v10 = v10;
    }
    char v12 = (unsigned __int8 *)&unk_1CF96BD26 + v4;
    if (v11) {
      char v12 = 0;
    }
    v14[0] = v12;
    v14[1] = &v12[v10];
    sub_1CBE5B1C4(v14, a1, a3);
  }
  return result;
}

double sub_1CBE5DBE4(uint64_t *a1, unsigned int a2, __n128 a3)
{
  unint64_t v3 = 2;
  unint64_t v4 = (unint64_t)&dword_1CF96077C;
  do
  {
    while (1)
    {
      unint64_t v5 = v3 >> 1;
      char v6 = (int *)(v4 + 4 * (v3 >> 1));
      unsigned int v7 = *v6;
      if (*v6 == -1 || v7 != -2 && v7 >= a2) {
        break;
      }
      unint64_t v4 = (unint64_t)(v6 + 1);
      v3 += ~v5;
      if (!v3) {
        goto LABEL_8;
      }
    }
    v3 >>= 1;
  }
  while (v5);
LABEL_8:
  if ((int *)v4 == &dword_1CF960784 || (int v8 = *(_DWORD *)v4, *(_DWORD *)v4 == -2) || v8 != -1 && v8 != a2)
  {
    *a1 = (uint64_t)(a1 + 2);
    *(void *)&double result = 0x1000000000;
    a1[1] = 0x1000000000;
  }
  else
  {
    *a1 = (uint64_t)(a1 + 2);
    a3.n128_u64[0] = 0x1000000000;
    a1[1] = 0x1000000000;
    unsigned int v9 = word_1CF96BD7E[((v4 - (unint64_t)&dword_1CF96077C) >> 2)];
    LODWORD(v4) = v9 & 0x3F;
    LODWORD(v10) = v9 >> 6;
    BOOL v11 = v4 == 63;
    if (v4 == 63) {
      unint64_t v4 = 0xFFFFFFFFLL;
    }
    else {
      unint64_t v4 = v4;
    }
    if (v11) {
      uint64_t v10 = 0;
    }
    else {
      uint64_t v10 = v10;
    }
    char v12 = (unsigned __int8 *)&unk_1CF96BD48 + v4;
    if (v11) {
      char v12 = 0;
    }
    v14[0] = v12;
    v14[1] = &v12[v10];
    sub_1CBE5B1C4(v14, a1, a3);
  }
  return result;
}

double sub_1CBE5DCF8@<D0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, int a7@<W6>, uint64_t *a8@<X8>)
{
  uint64_t v10 = 0;
  int v26 = a1;
  int v29 = a2;
  char v27 = 1;
  char v28 = 0;
  char v30 = 1;
  char v31 = 0;
  int v32 = a3;
  char v33 = 1;
  char v34 = 0;
  int v35 = a4;
  char v36 = 1;
  char v37 = 0;
  int v38 = a5;
  char v39 = 1;
  char v40 = 0;
  int v41 = a6;
  char v42 = 1;
  char v43 = 0;
  int v44 = a7;
  char v45 = 1;
  BOOL v11 = &word_1CF96BDF6;
  char v46 = 0;
  while (1)
  {
    sub_1CBE5C578(v47, (int *)((char *)&unk_1CF96078C + v10));
    if (sub_1CBE5DED0((uint64_t)v47, (uint64_t)&v26)) {
      break;
    }
    ++v11;
    v10 += 28;
    if (v10 == 504) {
      goto LABEL_27;
    }
  }
  sub_1CBE5C578(v47, (int *)((char *)&unk_1CF96078C + v10));
  if ((sub_1CBE5DED0((uint64_t)v47, (uint64_t)&v26) & 1) == 0)
  {
LABEL_27:
    *a8 = (uint64_t)(a8 + 2);
    *(void *)&double result = 0x1000000000;
    a8[1] = 0x1000000000;
    return result;
  }
  *a8 = (uint64_t)(a8 + 2);
  v12.n128_u64[0] = 0x1000000000;
  a8[1] = 0x1000000000;
  unsigned int v13 = (unsigned __int16)*v11;
  LODWORD(v14) = v13 & 0x3F;
  LODWORD(v15) = v13 >> 6;
  BOOL v16 = v14 == 63;
  if (v14 == 63) {
    uint64_t v14 = 0xFFFFFFFFLL;
  }
  else {
    uint64_t v14 = v14;
  }
  if (v16) {
    uint64_t v15 = 0;
  }
  else {
    uint64_t v15 = v15;
  }
  int v17 = (unsigned __int8 *)&unk_1CF96BDBC + v14;
  if (v16) {
    int v17 = 0;
  }
  v47[0] = v17;
  v47[1] = &v17[v15];
  sub_1CBE5B1C4(v47, a8, v12);
  unsigned int v19 = *((_DWORD *)a8 + 2);
  if (v19)
  {
    uint64_t v20 = *a8;
    uint64_t v21 = *a8 + 96 * v19;
    do
    {
      if ((*(_DWORD *)v20 - 1) <= 1)
      {
        uint64_t v22 = *(unsigned int *)(v20 + 32);
        if (v22)
        {
          uint64_t v23 = 28 * v22;
          char v24 = (int *)(*(void *)(v20 + 24) + 8);
          do
          {
            if ((*v24 & 0xFFFFFFFE) == 2)
            {
              if (a7) {
                int v25 = 3;
              }
              else {
                int v25 = 2;
              }
              *char v24 = v25;
            }
            v24 += 7;
            v23 -= 28;
          }
          while (v23);
        }
      }
      v20 += 96;
    }
    while (v20 != v21);
  }
  return result;
}

uint64_t sub_1CBE5DED0(uint64_t a1, uint64_t a2)
{
  if (!*(unsigned char *)(a1 + 8))
  {
    int v3 = *(unsigned __int8 *)(a2 + 4);
    if (*(unsigned char *)(a1 + 4)) {
      BOOL v4 = v3 == 0;
    }
    else {
      BOOL v4 = 1;
    }
    if (v4)
    {
      if ((*(unsigned char *)(a1 + 4) == 0) == (v3 != 0)) {
        return 0;
      }
    }
    else if (*(_DWORD *)a1 != *(_DWORD *)a2)
    {
      return 0;
    }
  }
  if (!*(unsigned char *)(a1 + 20))
  {
    int v5 = *(unsigned __int8 *)(a2 + 16);
    if (*(unsigned char *)(a1 + 16)) {
      BOOL v6 = v5 == 0;
    }
    else {
      BOOL v6 = 1;
    }
    if (v6)
    {
      if ((*(unsigned char *)(a1 + 16) == 0) == (v5 != 0)) {
        return 0;
      }
    }
    else if (*(_DWORD *)(a1 + 12) != *(_DWORD *)(a2 + 12))
    {
      return 0;
    }
  }
  if (!*(unsigned char *)(a1 + 32))
  {
    if (*(unsigned char *)(a1 + 28) && *(unsigned char *)(a2 + 28))
    {
      if (*(_DWORD *)(a1 + 24) != *(_DWORD *)(a2 + 24)) {
        return 0;
      }
    }
    else if ((*(unsigned char *)(a1 + 28) == 0) == (*(unsigned char *)(a2 + 28) != 0))
    {
      return 0;
    }
  }
  if (!*(unsigned char *)(a1 + 44))
  {
    if (*(unsigned char *)(a1 + 40) && *(unsigned char *)(a2 + 40))
    {
      if (*(_DWORD *)(a1 + 36) != *(_DWORD *)(a2 + 36)) {
        return 0;
      }
    }
    else if ((*(unsigned char *)(a1 + 40) == 0) == (*(unsigned char *)(a2 + 40) != 0))
    {
      return 0;
    }
  }
  if (!*(unsigned char *)(a1 + 56))
  {
    if (*(unsigned char *)(a1 + 52) && *(unsigned char *)(a2 + 52))
    {
      if (*(_DWORD *)(a1 + 48) != *(_DWORD *)(a2 + 48)) {
        return 0;
      }
    }
    else if ((*(unsigned char *)(a1 + 52) == 0) == (*(unsigned char *)(a2 + 52) != 0))
    {
      return 0;
    }
  }
  if (!*(unsigned char *)(a1 + 68))
  {
    if (*(unsigned char *)(a1 + 64) && *(unsigned char *)(a2 + 64))
    {
      if (*(_DWORD *)(a1 + 60) != *(_DWORD *)(a2 + 60)) {
        return 0;
      }
    }
    else if ((*(unsigned char *)(a1 + 64) == 0) == (*(unsigned char *)(a2 + 64) != 0))
    {
      return 0;
    }
  }
  if (*(unsigned char *)(a1 + 80)) {
    return 1;
  }
  if (*(unsigned char *)(a1 + 76) && *(unsigned char *)(a2 + 76))
  {
    if (*(_DWORD *)(a1 + 72) == *(_DWORD *)(a2 + 72)) {
      return 1;
    }
  }
  else if ((*(unsigned char *)(a1 + 76) == 0) != (*(unsigned char *)(a2 + 76) != 0))
  {
    return 1;
  }
  return 0;
}

double sub_1CBE5E0DC@<D0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, int a7@<W6>, uint64_t *a8@<X8>)
{
  uint64_t v10 = 0;
  int v26 = a1;
  int v29 = a2;
  char v27 = 1;
  char v28 = 0;
  char v30 = 1;
  char v31 = 0;
  int v32 = a3;
  char v33 = 1;
  char v34 = 0;
  int v35 = a4;
  char v36 = 1;
  char v37 = 0;
  int v38 = a5;
  char v39 = 1;
  char v40 = 0;
  int v41 = a6;
  char v42 = 1;
  char v43 = 0;
  int v44 = a7;
  char v45 = 1;
  BOOL v11 = &word_1CF96BE64;
  char v46 = 0;
  while (1)
  {
    sub_1CBE5C578(v47, (int *)((char *)&unk_1CF960984 + v10));
    if (sub_1CBE5DED0((uint64_t)v47, (uint64_t)&v26)) {
      break;
    }
    ++v11;
    v10 += 28;
    if (v10 == 588) {
      goto LABEL_27;
    }
  }
  sub_1CBE5C578(v47, (int *)((char *)&unk_1CF960984 + v10));
  if ((sub_1CBE5DED0((uint64_t)v47, (uint64_t)&v26) & 1) == 0)
  {
LABEL_27:
    *a8 = (uint64_t)(a8 + 2);
    *(void *)&double result = 0x1000000000;
    a8[1] = 0x1000000000;
    return result;
  }
  *a8 = (uint64_t)(a8 + 2);
  v12.n128_u64[0] = 0x1000000000;
  a8[1] = 0x1000000000;
  unsigned int v13 = (unsigned __int16)*v11;
  LODWORD(v14) = v13 & 0x3F;
  LODWORD(v15) = v13 >> 6;
  BOOL v16 = v14 == 63;
  if (v14 == 63) {
    uint64_t v14 = 0xFFFFFFFFLL;
  }
  else {
    uint64_t v14 = v14;
  }
  if (v16) {
    uint64_t v15 = 0;
  }
  else {
    uint64_t v15 = v15;
  }
  int v17 = (unsigned __int8 *)&unk_1CF96BE1A + v14;
  if (v16) {
    int v17 = 0;
  }
  v47[0] = v17;
  v47[1] = &v17[v15];
  sub_1CBE5B1C4(v47, a8, v12);
  unsigned int v19 = *((_DWORD *)a8 + 2);
  if (v19)
  {
    uint64_t v20 = *a8;
    uint64_t v21 = *a8 + 96 * v19;
    do
    {
      if ((*(_DWORD *)v20 - 1) <= 1)
      {
        uint64_t v22 = *(unsigned int *)(v20 + 32);
        if (v22)
        {
          uint64_t v23 = 28 * v22;
          char v24 = (int *)(*(void *)(v20 + 24) + 8);
          do
          {
            if ((*v24 & 0xFFFFFFFE) == 2)
            {
              if (a7) {
                int v25 = 3;
              }
              else {
                int v25 = 2;
              }
              *char v24 = v25;
            }
            v24 += 7;
            v23 -= 28;
          }
          while (v23);
        }
      }
      v20 += 96;
    }
    while (v20 != v21);
  }
  return result;
}

double sub_1CBE5E2B4@<D0>(unsigned int a1@<W0>, unsigned int a2@<W1>, unsigned int a3@<W2>, unsigned int a4@<W3>, uint64_t *a5@<X8>)
{
  unint64_t v10 = 27;
  BOOL v11 = (int *)&unk_1CF960BDC;
  do
  {
    unint64_t v12 = v10 >> 1;
    sub_1CBE5E4D8(&v11[4 * (v10 >> 1)], &v21);
    if ((_BYTE)v22) {
      goto LABEL_18;
    }
    if (BYTE4(v21)) {
      BOOL v13 = v21 >= a1;
    }
    else {
      BOOL v13 = 0;
    }
    if (!v13)
    {
LABEL_24:
      unint64_t v12 = v10 + ~v12;
      v11 += 4 * (v10 >> 1) + 4;
      goto LABEL_25;
    }
    if (v21 <= a1)
    {
LABEL_18:
      if (v24) {
        goto LABEL_22;
      }
      if (!v23 || HIDWORD(v22) < a2) {
        goto LABEL_24;
      }
      if (HIDWORD(v22) <= a2)
      {
LABEL_22:
        if (v27) {
          goto LABEL_7;
        }
        if (!v26 || v25 < a3) {
          goto LABEL_24;
        }
        if (v25 <= a3)
        {
LABEL_7:
          if (!v30 && (!v29 || v28 < a4)) {
            goto LABEL_24;
          }
        }
      }
    }
LABEL_25:
    unint64_t v10 = v12;
  }
  while (v12);
  if (v11 != (int *)&unk_1CF960D8C
    && ((sub_1CBE5E4D8(v11, &v21), (_BYTE)v22) || BYTE4(v21) && v21 == a1)
    && (v24 || v23 && HIDWORD(v22) == a2)
    && (v27 || v26 && v25 == a3)
    && (v30 || v29 && v28 == a4))
  {
    *a5 = (uint64_t)(a5 + 2);
    v14.n128_u64[0] = 0x1000000000;
    a5[1] = 0x1000000000;
    int v15 = word_1CF96BF6C[((unint64_t)((char *)v11 - (char *)&unk_1CF960BDC) >> 4)];
    LODWORD(v16) = HIBYTE(word_1CF96BF6C[((unint64_t)((char *)v11 - (char *)&unk_1CF960BDC) >> 4)]);
    BOOL v17 = v15 == 255;
    if (v15 == 255) {
      uint64_t v18 = 0xFFFFFFFFLL;
    }
    else {
      uint64_t v18 = word_1CF96BF6C[((unint64_t)((char *)v11 - (char *)&unk_1CF960BDC) >> 4)];
    }
    if (v17) {
      uint64_t v16 = 0;
    }
    else {
      uint64_t v16 = v16;
    }
    unsigned int v19 = (unsigned __int8 *)&unk_1CF96BE9D + v18;
    if (v17) {
      unsigned int v19 = 0;
    }
    uint64_t v21 = v19;
    uint64_t v22 = &v19[v16];
    sub_1CBE5B1C4(&v21, a5, v14);
  }
  else
  {
    *a5 = (uint64_t)(a5 + 2);
    *(void *)&double result = 0x1000000000;
    a5[1] = 0x1000000000;
  }
  return result;
}

int *sub_1CBE5E4D8@<X0>(int *result@<X0>, unsigned char *a2@<X8>)
{
  a2[24] = 0;
  a2[28] = 0;
  a2[32] = 0;
  a2[36] = 0;
  a2[40] = 0;
  a2[44] = 0;
  int v2 = *result;
  if (*result == -2)
  {
    char v3 = 0;
    char v4 = 0;
    *a2 = 0;
  }
  else if (v2 == -1)
  {
    char v3 = 0;
    *a2 = 0;
    char v4 = 1;
  }
  else
  {
    char v4 = 0;
    *(_DWORD *)a2 = v2;
    char v3 = 1;
  }
  a2[4] = v3;
  a2[8] = v4;
  int v5 = result[1];
  if (v5 == -2)
  {
    char v6 = 0;
    char v7 = 0;
    a2[12] = 0;
  }
  else if (v5 == -1)
  {
    char v6 = 0;
    a2[12] = 0;
    char v7 = 1;
  }
  else
  {
    char v7 = 0;
    *((_DWORD *)a2 + 3) = v5;
    char v6 = 1;
  }
  a2[16] = v6;
  a2[20] = v7;
  int v8 = result[2];
  if (v8 == -2)
  {
    char v9 = 0;
    char v10 = 0;
    a2[24] = 0;
  }
  else if (v8 == -1)
  {
    char v9 = 0;
    a2[24] = 0;
    char v10 = 1;
  }
  else
  {
    char v10 = 0;
    *((_DWORD *)a2 + 6) = v8;
    char v9 = 1;
  }
  a2[28] = v9;
  a2[32] = v10;
  int v11 = result[3];
  if (v11 == -2)
  {
    char v12 = 0;
    char v13 = 0;
    a2[36] = 0;
  }
  else if (v11 == -1)
  {
    char v12 = 0;
    a2[36] = 0;
    char v13 = 1;
  }
  else
  {
    char v13 = 0;
    *((_DWORD *)a2 + 9) = v11;
    char v12 = 1;
  }
  a2[40] = v12;
  a2[44] = v13;
  return result;
}

double sub_1CBE5E614@<D0>(unsigned int a1@<W0>, unsigned int a2@<W1>, unsigned int a3@<W2>, unsigned int a4@<W3>, uint64_t *a5@<X8>)
{
  unint64_t v10 = 25;
  int v11 = (int *)&unk_1CF960D8C;
  do
  {
    unint64_t v12 = v10 >> 1;
    sub_1CBE5C058(&v21, &v11[4 * (v10 >> 1)]);
    if ((_BYTE)v22) {
      goto LABEL_18;
    }
    if (BYTE4(v21)) {
      BOOL v13 = v21 >= a1;
    }
    else {
      BOOL v13 = 0;
    }
    if (!v13)
    {
LABEL_24:
      unint64_t v12 = v10 + ~v12;
      v11 += 4 * (v10 >> 1) + 4;
      goto LABEL_25;
    }
    if (v21 <= a1)
    {
LABEL_18:
      if (v24) {
        goto LABEL_22;
      }
      if (!v23 || HIDWORD(v22) < a2) {
        goto LABEL_24;
      }
      if (HIDWORD(v22) <= a2)
      {
LABEL_22:
        if (v27) {
          goto LABEL_7;
        }
        if (!v26 || v25 < a3) {
          goto LABEL_24;
        }
        if (v25 <= a3)
        {
LABEL_7:
          if (!v30 && (!v29 || v28 < a4)) {
            goto LABEL_24;
          }
        }
      }
    }
LABEL_25:
    unint64_t v10 = v12;
  }
  while (v12);
  if (v11 != &dword_1CF960F1C
    && ((sub_1CBE5C058(&v21, v11), (_BYTE)v22) || BYTE4(v21) && v21 == a1)
    && (v24 || v23 && HIDWORD(v22) == a2)
    && (v27 || v26 && v25 == a3)
    && (v30 || v29 && v28 == a4))
  {
    *a5 = (uint64_t)(a5 + 2);
    v14.n128_u64[0] = 0x1000000000;
    a5[1] = 0x1000000000;
    unsigned int v15 = word_1CF96C036[((unint64_t)((char *)v11 - (char *)&unk_1CF960D8C) >> 4)];
    LODWORD(v16) = v15 & 0x7F;
    LODWORD(v17) = v15 >> 7;
    BOOL v18 = v16 == 127;
    if (v16 == 127) {
      uint64_t v16 = 0xFFFFFFFFLL;
    }
    else {
      uint64_t v16 = v16;
    }
    if (v18) {
      uint64_t v17 = 0;
    }
    else {
      uint64_t v17 = v17;
    }
    unsigned int v19 = (unsigned __int8 *)&unk_1CF96BFA2 + v16;
    if (v18) {
      unsigned int v19 = 0;
    }
    uint64_t v21 = v19;
    uint64_t v22 = &v19[v17];
    sub_1CBE5B1C4(&v21, a5, v14);
  }
  else
  {
    *a5 = (uint64_t)(a5 + 2);
    *(void *)&double result = 0x1000000000;
    a5[1] = 0x1000000000;
  }
  return result;
}

double sub_1CBE5E838@<D0>(unsigned int a1@<W0>, unsigned int a2@<W1>, unsigned int a3@<W2>, unsigned int a4@<W3>, uint64_t *a5@<X8>, unsigned int a6@<W4>)
{
  if (a6 == 4) {
    return sub_1CBE5B9E4(a1, a2, a3, a4, a5);
  }
  if (a6 >= 4) {
    return sub_1CBE5BC0C(a1, a2, a3, a4, a5);
  }
  return sub_1CBE5B67C(a1, a2, a3, a4, a5);
}

void sub_1CBE5E8F0(uint64_t *a1, long long *a2)
{
  unsigned int v4 = *((_DWORD *)a1 + 2);
  unint64_t v5 = *a1;
  if (v4 >= *((_DWORD *)a1 + 3))
  {
    unint64_t v12 = v5 + 96 * v4;
    if (v5 > (unint64_t)a2 || v12 <= (unint64_t)a2) {
      sub_1CD423078();
    }
    sub_1CD423078();
  }
  unint64_t v6 = v5 + 96 * *((unsigned int *)a1 + 2);
  long long v7 = *a2;
  *(void *)(v6 + 16) = *((void *)a2 + 2);
  *(_OWORD *)unint64_t v6 = v7;
  int v8 = (void *)(v6 + 40);
  *(void *)(v6 + 32) = 0x200000000;
  *(void *)(v6 + 24) = v6 + 40;
  unint64_t v9 = v6 + 24;
  unsigned int v10 = *((_DWORD *)a2 + 8);
  if (v10 && (long long *)v9 != (long long *)((char *)a2 + 24))
  {
    int v11 = (char *)*((void *)a2 + 3);
    if (v11 == (char *)a2 + 40)
    {
      if (v10 >= 3)
      {
        *(_DWORD *)(v9 + 8) = 0;
        llvm::SmallVectorBase<unsigned int>::grow_pod();
      }
      memcpy(v8, v11, 28 * *((unsigned int *)a2 + 8));
      *(_DWORD *)(v9 + 8) = v10;
    }
    else
    {
      if (v8 != (void *)(v9 + 16))
      {
        free(v8);
        int v11 = (char *)*((void *)a2 + 3);
        unsigned int v10 = *((_DWORD *)a2 + 8);
      }
      *(void *)unint64_t v9 = v11;
      int v14 = *((_DWORD *)a2 + 9);
      *(_DWORD *)(v9 + 8) = v10;
      *(_DWORD *)(v9 + 12) = v14;
      *((void *)a2 + 3) = (char *)a2 + 40;
      *((_DWORD *)a2 + 9) = 0;
    }
    *((_DWORD *)a2 + 8) = 0;
  }
  ++*((_DWORD *)a1 + 2);
}

unint64_t sub_1CBE5EA64(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(unsigned int *)(a1 + 8);
  if (v3 + a3 > (unint64_t)*(unsigned int *)(a1 + 12))
  {
    unint64_t v5 = *(void *)a1 + 28 * v3;
    if (*(void *)a1 > a2 || v5 <= a2) {
      llvm::SmallVectorBase<unsigned int>::grow_pod();
    }
    llvm::SmallVectorBase<unsigned int>::grow_pod();
  }
  return a2;
}

uint64_t sub_1CBE5EAF0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3 = *(void *)a1;
  unsigned int v4 = *(_DWORD *)(a1 + 8);
  unint64_t v5 = *(void *)a1 + 28 * v4;
  if (v5 == a2)
  {
    uint64_t v16 = a1;
    uint64_t v17 = (long long *)sub_1CBE5EA64(a1, a3, 1);
    BOOL v18 = (_OWORD *)(*(void *)v16 + 28 * *(unsigned int *)(v16 + 8));
    long long v19 = *v17;
    *(_OWORD *)((char *)v18 + 12) = *(long long *)((char *)v17 + 12);
    *BOOL v18 = v19;
    LODWORD(v18) = *(_DWORD *)(v16 + 8) + 1;
    *(_DWORD *)(v16 + 8) = v18;
    return *(void *)v16 + 28 * v18 - 28;
  }
  else
  {
    if (v4 >= *(_DWORD *)(a1 + 12))
    {
      if (v3 > a3 || v5 <= a3) {
        llvm::SmallVectorBase<unsigned int>::grow_pod();
      }
      llvm::SmallVectorBase<unsigned int>::grow_pod();
    }
    unint64_t v6 = (_OWORD *)(v3 + 4 * ((uint64_t)(a2 - v3) >> 2));
    long long v7 = (_OWORD *)(v3 + 28 * *(unsigned int *)(a1 + 8));
    *long long v7 = *(_OWORD *)((char *)v7 - 28);
    *(_OWORD *)((char *)v7 + 12) = *(v7 - 1);
    unint64_t v8 = *(void *)a1;
    unsigned int v9 = *(_DWORD *)(a1 + 8);
    uint64_t v10 = *(void *)a1 + 28 * v9;
    if ((_OWORD *)(v10 - 28) != v6)
    {
      uint64_t v21 = a1;
      uint64_t v22 = v6;
      unint64_t v23 = a3;
      memmove((char *)v6 + 28, v6, v10 - 28 - (void)v6);
      unint64_t v6 = v22;
      a3 = v23;
      a1 = v21;
      unsigned int v9 = *(_DWORD *)(v21 + 8);
      unint64_t v8 = *(void *)v21;
    }
    *(_DWORD *)(a1 + 8) = v9 + 1;
    BOOL v12 = a3 >= (unint64_t)v6 && a3 < v8 + 28 * (v9 + 1);
    BOOL v13 = (long long *)(a3 + 28 * v12);
    long long v14 = *v13;
    *(_OWORD *)((char *)v6 + 12) = *(long long *)((char *)v13 + 12);
    *unint64_t v6 = v14;
  }
  return (uint64_t)v6;
}

uint64_t (*sub_1CBE5ECA4(int a1))()
{
  return off_1F25FDD38[a1];
}

__n128 sub_1CBE5ECB4(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  uint64_t v13 = *((unsigned int *)a1 + 5);
  *(void *)(a2 + 88) = a1[16];
  *(void *)(a2 + 96) = v13;
  uint64_t v14 = a1[24];
  uint64_t v15 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  *(void *)(a2 + 104) = v14;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v15 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v15 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v15;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v15 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v15;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v15 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v15;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v15 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v15;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v15 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v15;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v15 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v15;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v15 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v15 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
    }
    else
    {
      v15 |= 0x200000uLL;
    }
  }
  uint64_t v25 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v16;
  *(void *)(a2 + 192) = v25;
  uint64_t v26 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v26;
  *(void *)(a2 + 216) = a1[52];
  uint64_t v27 = *((void *)a1 + 7);
  v28.n128_u64[0] = v27;
  v28.n128_u64[1] = HIDWORD(v27);
  *(__n128 *)(a2 + 224) = v28;
  uint64_t v29 = a1[65];
  *(void *)(a2 + 240) = a1[64];
  *(void *)(a2 + 248) = v29;
  uint64_t v30 = a1[67];
  *(void *)(a2 + 256) = a1[66];
  *(void *)(a2 + 264) = v30;
  uint64_t v31 = a1[69];
  *(void *)(a2 + 272) = a1[68];
  *(void *)(a2 + 280) = v31;
  uint64_t v32 = a1[71];
  *(void *)(a2 + 288) = a1[70];
  *(void *)(a2 + 296) = v32;
  uint64_t v33 = *((void *)a1 + 9);
  uint64_t v34 = *((void *)a1 + 10);
  v28.n128_u64[0] = v33;
  v28.n128_u64[1] = HIDWORD(v33);
  __n128 v35 = v28;
  v28.n128_u64[0] = v34;
  v28.n128_u64[1] = HIDWORD(v34);
  *(__n128 *)(a2 + 304) = v35;
  *(__n128 *)(a2 + 320) = v28;
  v35.n128_u64[0] = *((void *)a1 + 11);
  uint64_t v36 = *((void *)a1 + 12);
  v28.n128_u64[0] = v35.n128_u32[0];
  v28.n128_u64[1] = v35.n128_u32[1];
  __n128 result = v28;
  v28.n128_u64[0] = v36;
  v28.n128_u64[1] = HIDWORD(v36);
  *(__n128 *)(a2 + 336) = result;
  *(__n128 *)(a2 + 352) = v28;
  uint64_t v38 = a1[104];
  *(void *)(a2 + 1248) = v15 | 0x7FFFFF800000;
  *(void *)(a2 + 368) = v38;
  return result;
}

__n128 sub_1CBE5EF7C(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = v16;
  uint64_t v26 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v25;
  *(void *)(a2 + 192) = v26;
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = a1[52];
  uint64_t v29 = v13 | 0xF800000;
  *(void *)(a2 + 1248) = v13 | 0xF800000;
  *(void *)(a2 + 216) = v28;
  unsigned int v30 = *((_DWORD *)a1 + 16);
  if (!v30)
  {
    uint64_t v31 = a1[56];
    uint64_t v29 = v13 | 0x1F800000;
    *(void *)(a2 + 1248) = v13 | 0x1F800000;
    *(void *)(a2 + 224) = v31;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 1)
  {
    uint64_t v32 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x20000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 232) = v32;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 2)
  {
    uint64_t v33 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x40000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 240) = v33;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 3)
  {
    uint64_t v34 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x80000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 248) = v34;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 4)
  {
    uint64_t v35 = *((unsigned int *)a1 + 14);
    v29 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 256) = v35;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 5)
  {
    uint64_t v36 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 264) = v36;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 6)
  {
    uint64_t v37 = a1[56];
    v29 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 272) = v37;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 7)
  {
    uint64_t v38 = *((unsigned int *)a1 + 14);
    *(void *)(a2 + 1248) = v29 | 0x800000000;
    *(void *)(a2 + 280) = v38;
    unsigned int v30 = *((_DWORD *)a1 + 16);
    if (v30 == 7)
    {
      v29 |= 0x1800000000uLL;
      *(void *)(a2 + 288) = a1[60];
    }
    else
    {
      v29 |= 0x800000000uLL;
    }
  }
  uint64_t v39 = v30;
  uint64_t v40 = *((unsigned int *)a1 + 17);
  *(void *)(a2 + 296) = v39;
  *(void *)(a2 + 304) = v40;
  uint64_t v41 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 312) = a1[72];
  *(void *)(a2 + 320) = v41;
  uint64_t v42 = a1[80];
  uint64_t v43 = a1[81];
  uint64_t v44 = v29 | 0x7E000000000;
  *(void *)(a2 + 1248) = v29 | 0x7E000000000;
  *(void *)(a2 + 328) = v42;
  *(void *)(a2 + 336) = v43;
  unsigned int v45 = *((_DWORD *)a1 + 23);
  if (!v45)
  {
    uint64_t v46 = a1[84];
    uint64_t v44 = v29 | 0xFE000000000;
    *(void *)(a2 + 1248) = v29 | 0xFE000000000;
    *(void *)(a2 + 344) = v46;
    unsigned int v45 = *((_DWORD *)a1 + 23);
  }
  if (v45 == 1)
  {
    uint64_t v47 = *((unsigned __int16 *)a1 + 42);
    v44 |= 0x100000000000uLL;
    *(void *)(a2 + 1248) = v44;
    *(void *)(a2 + 352) = v47;
    unsigned int v45 = *((_DWORD *)a1 + 23);
  }
  if (v45 == 2)
  {
    uint64_t v48 = *((unsigned __int16 *)a1 + 42);
    v44 |= 0x200000000000uLL;
    *(void *)(a2 + 1248) = v44;
    *(void *)(a2 + 360) = v48;
    unsigned int v45 = *((_DWORD *)a1 + 23);
  }
  if (v45 == 3)
  {
    uint64_t v49 = *((unsigned __int16 *)a1 + 42);
    v44 |= 0x400000000000uLL;
    *(void *)(a2 + 1248) = v44;
    *(void *)(a2 + 368) = v49;
    unsigned int v45 = *((_DWORD *)a1 + 23);
  }
  if (v45 == 4)
  {
    uint64_t v50 = *((unsigned int *)a1 + 21);
    v44 |= 0x800000000000uLL;
    *(void *)(a2 + 1248) = v44;
    *(void *)(a2 + 376) = v50;
    unsigned int v45 = *((_DWORD *)a1 + 23);
  }
  if (v45 == 5)
  {
    uint64_t v51 = *((unsigned __int16 *)a1 + 42);
    v44 |= 0x1000000000000uLL;
    *(void *)(a2 + 1248) = v44;
    *(void *)(a2 + 384) = v51;
    unsigned int v45 = *((_DWORD *)a1 + 23);
  }
  if (v45 == 6)
  {
    uint64_t v52 = a1[84];
    v44 |= 0x2000000000000uLL;
    *(void *)(a2 + 1248) = v44;
    *(void *)(a2 + 392) = v52;
    unsigned int v45 = *((_DWORD *)a1 + 23);
  }
  if (v45 == 7)
  {
    uint64_t v53 = *((unsigned int *)a1 + 21);
    *(void *)(a2 + 1248) = v44 | 0x4000000000000;
    *(void *)(a2 + 400) = v53;
    unsigned int v45 = *((_DWORD *)a1 + 23);
    if (v45 == 7)
    {
      v44 |= 0xC000000000000uLL;
      *(void *)(a2 + 408) = a1[88];
    }
    else
    {
      v44 |= 0x4000000000000uLL;
    }
  }
  uint64_t v54 = v45;
  uint64_t v55 = *((unsigned int *)a1 + 24);
  *(void *)(a2 + 416) = v54;
  *(void *)(a2 + 424) = v55;
  uint64_t v56 = *((unsigned int *)a1 + 26);
  *(void *)(a2 + 432) = a1[100];
  *(void *)(a2 + 440) = v56;
  uint64_t v57 = a1[108];
  uint64_t v58 = a1[112];
  uint64_t v59 = v44 | 0x3F0000000000000;
  *(void *)(a2 + 1248) = v44 | 0x3F0000000000000;
  *(void *)(a2 + 448) = v57;
  *(void *)(a2 + 456) = v58;
  unsigned int v60 = *((_DWORD *)a1 + 31);
  if (!v60)
  {
    uint64_t v61 = a1[116];
    uint64_t v59 = v44 | 0x7F0000000000000;
    *(void *)(a2 + 1248) = v44 | 0x7F0000000000000;
    *(void *)(a2 + 464) = v61;
    unsigned int v60 = *((_DWORD *)a1 + 31);
  }
  if (v60 == 1)
  {
    uint64_t v62 = *((unsigned __int16 *)a1 + 58);
    v59 |= 0x800000000000000uLL;
    *(void *)(a2 + 1248) = v59;
    *(void *)(a2 + 472) = v62;
    unsigned int v60 = *((_DWORD *)a1 + 31);
  }
  if (v60 == 2)
  {
    uint64_t v63 = *((unsigned __int16 *)a1 + 58);
    v59 |= 0x1000000000000000uLL;
    *(void *)(a2 + 1248) = v59;
    *(void *)(a2 + 480) = v63;
    unsigned int v60 = *((_DWORD *)a1 + 31);
  }
  if (v60 == 3)
  {
    uint64_t v64 = *((unsigned __int16 *)a1 + 58);
    v59 |= 0x2000000000000000uLL;
    *(void *)(a2 + 1248) = v59;
    *(void *)(a2 + 488) = v64;
    unsigned int v60 = *((_DWORD *)a1 + 31);
  }
  if (v60 == 4)
  {
    uint64_t v65 = *((unsigned int *)a1 + 29);
    v59 |= 0x4000000000000000uLL;
    *(void *)(a2 + 1248) = v59;
    *(void *)(a2 + 496) = v65;
    unsigned int v60 = *((_DWORD *)a1 + 31);
  }
  if (v60 == 5)
  {
    uint64_t v66 = *((unsigned __int16 *)a1 + 58);
    *(void *)(a2 + 1248) = v59 | 0x8000000000000000;
    *(void *)(a2 + 504) = v66;
    unsigned int v60 = *((_DWORD *)a1 + 31);
  }
  if (v60 == 6)
  {
    uint64_t v67 = a1[116];
    uint64_t v68 = 1;
    *(void *)(a2 + 1256) = 1;
    *(void *)(a2 + 512) = v67;
    unsigned int v60 = *((_DWORD *)a1 + 31);
  }
  else
  {
    uint64_t v68 = 0;
  }
  if (v60 == 7)
  {
    uint64_t v69 = *((unsigned int *)a1 + 29);
    *(void *)(a2 + 1256) = v68 | 2;
    *(void *)(a2 + 520) = v69;
    unsigned int v60 = *((_DWORD *)a1 + 31);
    if (v60 == 7)
    {
      v68 |= 6uLL;
      *(void *)(a2 + 528) = a1[120];
      unsigned int v60 = 7;
    }
    else
    {
      v68 |= 2uLL;
    }
  }
  *(void *)(a2 + 536) = v60;
  *(void *)(a2 + 544) = *((unsigned int *)a1 + 32);
  *(void *)(a2 + 552) = a1[132];
  *(void *)(a2 + 560) = *((unsigned int *)a1 + 34);
  *(void *)(a2 + 568) = a1[140];
  uint64_t v70 = *((void *)a1 + 18);
  *(void *)&long long v71 = v70;
  *((void *)&v71 + 1) = HIDWORD(v70);
  *(_OWORD *)(a2 + 576) = v71;
  *(void *)(a2 + 592) = a1[152];
  *(void *)(a2 + 600) = a1[153];
  *(void *)(a2 + 608) = a1[154];
  *(void *)(a2 + 616) = a1[155];
  *(void *)(a2 + 624) = a1[156];
  *(void *)(a2 + 632) = a1[157];
  *(void *)(a2 + 640) = a1[158];
  *(void *)(a2 + 648) = a1[159];
  *(void *)(a2 + 656) = a1[160];
  *(void *)(a2 + 664) = a1[161];
  *(void *)(a2 + 672) = *((unsigned int *)a1 + 41);
  *(void *)(a2 + 680) = a1[168];
  *(void *)(a2 + 688) = a1[169];
  *(void *)(a2 + 696) = *((unsigned int *)a1 + 43);
  uint64_t v72 = *((unsigned __int16 *)a1 + 88);
  if ((v72 & 0x8000u) == 0) {
    uint64_t v72 = (__int16)v72;
  }
  *(void *)(a2 + 704) = v72;
  uint64_t v73 = *(void *)(a1 + 180);
  v74.n128_u64[0] = v73;
  v74.n128_u64[1] = HIDWORD(v73);
  __n128 v75 = v74;
  uint64_t v76 = *(void *)(a1 + 188);
  v74.n128_u64[0] = v76;
  v74.n128_u64[1] = HIDWORD(v76);
  *(__n128 *)(a2 + 712) = v75;
  *(__n128 *)(a2 + 728) = v74;
  v75.n128_u64[0] = *(void *)(a1 + 196);
  v74.n128_u64[0] = v75.n128_u32[0];
  v74.n128_u64[1] = v75.n128_u32[1];
  __n128 result = v74;
  uint64_t v78 = *(void *)(a1 + 204);
  v74.n128_u64[0] = v78;
  v74.n128_u64[1] = HIDWORD(v78);
  *(__n128 *)(a2 + 744) = result;
  *(__n128 *)(a2 + 760) = v74;
  *(void *)(a2 + 776) = a1[212];
  *(void *)(a2 + 784) = a1[213];
  uint64_t v79 = *((unsigned int *)a1 + 54);
  *(void *)(a2 + 1256) = v68 | 0xFFFFFFFF8;
  *(void *)(a2 + 792) = v79;
  return result;
}

__n128 sub_1CBE5F640(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = v16;
  uint64_t v26 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v25;
  *(void *)(a2 + 192) = v26;
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = a1[52];
  uint64_t v29 = v13 | 0xF800000;
  *(void *)(a2 + 1248) = v13 | 0xF800000;
  *(void *)(a2 + 216) = v28;
  unsigned int v30 = *((_DWORD *)a1 + 16);
  if (!v30)
  {
    uint64_t v31 = a1[56];
    uint64_t v29 = v13 | 0x1F800000;
    *(void *)(a2 + 1248) = v13 | 0x1F800000;
    *(void *)(a2 + 224) = v31;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 1)
  {
    uint64_t v32 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x20000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 232) = v32;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 2)
  {
    uint64_t v33 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x40000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 240) = v33;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 3)
  {
    uint64_t v34 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x80000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 248) = v34;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 4)
  {
    uint64_t v35 = *((unsigned int *)a1 + 14);
    v29 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 256) = v35;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 5)
  {
    uint64_t v36 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 264) = v36;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 6)
  {
    uint64_t v37 = a1[56];
    v29 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 272) = v37;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 7)
  {
    uint64_t v38 = *((unsigned int *)a1 + 14);
    *(void *)(a2 + 1248) = v29 | 0x800000000;
    *(void *)(a2 + 280) = v38;
    unsigned int v30 = *((_DWORD *)a1 + 16);
    if (v30 == 7)
    {
      v29 |= 0x1800000000uLL;
      *(void *)(a2 + 288) = a1[60];
    }
    else
    {
      v29 |= 0x800000000uLL;
    }
  }
  uint64_t v39 = v30;
  uint64_t v40 = *((unsigned int *)a1 + 17);
  *(void *)(a2 + 296) = v39;
  *(void *)(a2 + 304) = v40;
  uint64_t v41 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 312) = a1[72];
  *(void *)(a2 + 320) = v41;
  uint64_t v42 = a1[80];
  uint64_t v43 = a1[81];
  uint64_t v44 = v29 | 0x7E000000000;
  *(void *)(a2 + 1248) = v29 | 0x7E000000000;
  *(void *)(a2 + 328) = v42;
  *(void *)(a2 + 336) = v43;
  unsigned int v45 = *((_DWORD *)a1 + 23);
  if (!v45)
  {
    uint64_t v46 = a1[84];
    uint64_t v44 = v29 | 0xFE000000000;
    *(void *)(a2 + 1248) = v29 | 0xFE000000000;
    *(void *)(a2 + 344) = v46;
    unsigned int v45 = *((_DWORD *)a1 + 23);
  }
  if (v45 == 1)
  {
    uint64_t v47 = *((unsigned __int16 *)a1 + 42);
    v44 |= 0x100000000000uLL;
    *(void *)(a2 + 1248) = v44;
    *(void *)(a2 + 352) = v47;
    unsigned int v45 = *((_DWORD *)a1 + 23);
  }
  if (v45 == 2)
  {
    uint64_t v48 = *((unsigned __int16 *)a1 + 42);
    v44 |= 0x200000000000uLL;
    *(void *)(a2 + 1248) = v44;
    *(void *)(a2 + 360) = v48;
    unsigned int v45 = *((_DWORD *)a1 + 23);
  }
  if (v45 == 3)
  {
    uint64_t v49 = *((unsigned __int16 *)a1 + 42);
    v44 |= 0x400000000000uLL;
    *(void *)(a2 + 1248) = v44;
    *(void *)(a2 + 368) = v49;
    unsigned int v45 = *((_DWORD *)a1 + 23);
  }
  if (v45 == 4)
  {
    uint64_t v50 = *((unsigned int *)a1 + 21);
    v44 |= 0x800000000000uLL;
    *(void *)(a2 + 1248) = v44;
    *(void *)(a2 + 376) = v50;
    unsigned int v45 = *((_DWORD *)a1 + 23);
  }
  if (v45 == 5)
  {
    uint64_t v51 = *((unsigned __int16 *)a1 + 42);
    v44 |= 0x1000000000000uLL;
    *(void *)(a2 + 1248) = v44;
    *(void *)(a2 + 384) = v51;
    unsigned int v45 = *((_DWORD *)a1 + 23);
  }
  if (v45 == 6)
  {
    uint64_t v52 = a1[84];
    v44 |= 0x2000000000000uLL;
    *(void *)(a2 + 1248) = v44;
    *(void *)(a2 + 392) = v52;
    unsigned int v45 = *((_DWORD *)a1 + 23);
  }
  if (v45 == 7)
  {
    uint64_t v53 = *((unsigned int *)a1 + 21);
    *(void *)(a2 + 1248) = v44 | 0x4000000000000;
    *(void *)(a2 + 400) = v53;
    unsigned int v45 = *((_DWORD *)a1 + 23);
    if (v45 == 7)
    {
      v44 |= 0xC000000000000uLL;
      *(void *)(a2 + 408) = a1[88];
    }
    else
    {
      v44 |= 0x4000000000000uLL;
    }
  }
  uint64_t v54 = v45;
  uint64_t v55 = *((unsigned int *)a1 + 24);
  *(void *)(a2 + 416) = v54;
  *(void *)(a2 + 424) = v55;
  uint64_t v56 = *((unsigned int *)a1 + 26);
  *(void *)(a2 + 432) = a1[100];
  *(void *)(a2 + 440) = v56;
  uint64_t v57 = a1[108];
  uint64_t v58 = a1[112];
  uint64_t v59 = v44 | 0x3F0000000000000;
  *(void *)(a2 + 1248) = v44 | 0x3F0000000000000;
  *(void *)(a2 + 448) = v57;
  *(void *)(a2 + 456) = v58;
  unsigned int v60 = *((_DWORD *)a1 + 31);
  if (!v60)
  {
    uint64_t v61 = a1[116];
    uint64_t v59 = v44 | 0x7F0000000000000;
    *(void *)(a2 + 1248) = v44 | 0x7F0000000000000;
    *(void *)(a2 + 464) = v61;
    unsigned int v60 = *((_DWORD *)a1 + 31);
  }
  if (v60 == 1)
  {
    uint64_t v62 = *((unsigned __int16 *)a1 + 58);
    v59 |= 0x800000000000000uLL;
    *(void *)(a2 + 1248) = v59;
    *(void *)(a2 + 472) = v62;
    unsigned int v60 = *((_DWORD *)a1 + 31);
  }
  if (v60 == 2)
  {
    uint64_t v63 = *((unsigned __int16 *)a1 + 58);
    v59 |= 0x1000000000000000uLL;
    *(void *)(a2 + 1248) = v59;
    *(void *)(a2 + 480) = v63;
    unsigned int v60 = *((_DWORD *)a1 + 31);
  }
  if (v60 == 3)
  {
    uint64_t v64 = *((unsigned __int16 *)a1 + 58);
    v59 |= 0x2000000000000000uLL;
    *(void *)(a2 + 1248) = v59;
    *(void *)(a2 + 488) = v64;
    unsigned int v60 = *((_DWORD *)a1 + 31);
  }
  if (v60 == 4)
  {
    uint64_t v65 = *((unsigned int *)a1 + 29);
    v59 |= 0x4000000000000000uLL;
    *(void *)(a2 + 1248) = v59;
    *(void *)(a2 + 496) = v65;
    unsigned int v60 = *((_DWORD *)a1 + 31);
  }
  if (v60 == 5)
  {
    uint64_t v66 = *((unsigned __int16 *)a1 + 58);
    *(void *)(a2 + 1248) = v59 | 0x8000000000000000;
    *(void *)(a2 + 504) = v66;
    unsigned int v60 = *((_DWORD *)a1 + 31);
  }
  if (v60 == 6)
  {
    uint64_t v67 = a1[116];
    uint64_t v68 = 1;
    *(void *)(a2 + 1256) = 1;
    *(void *)(a2 + 512) = v67;
    unsigned int v60 = *((_DWORD *)a1 + 31);
  }
  else
  {
    uint64_t v68 = 0;
  }
  if (v60 == 7)
  {
    uint64_t v69 = *((unsigned int *)a1 + 29);
    *(void *)(a2 + 1256) = v68 | 2;
    *(void *)(a2 + 520) = v69;
    unsigned int v60 = *((_DWORD *)a1 + 31);
    if (v60 == 7)
    {
      v68 |= 6uLL;
      *(void *)(a2 + 528) = a1[120];
      unsigned int v60 = 7;
    }
    else
    {
      v68 |= 2uLL;
    }
  }
  *(void *)(a2 + 536) = v60;
  *(void *)(a2 + 544) = *((unsigned int *)a1 + 32);
  *(void *)(a2 + 552) = a1[132];
  *(void *)(a2 + 560) = *((unsigned int *)a1 + 34);
  *(void *)(a2 + 568) = a1[140];
  uint64_t v70 = *((void *)a1 + 18);
  *(void *)&long long v71 = v70;
  *((void *)&v71 + 1) = HIDWORD(v70);
  *(_OWORD *)(a2 + 576) = v71;
  *(void *)(a2 + 592) = a1[152];
  *(void *)(a2 + 600) = a1[153];
  *(void *)(a2 + 608) = a1[154];
  *(void *)(a2 + 616) = a1[155];
  *(void *)(a2 + 624) = a1[156];
  *(void *)(a2 + 632) = a1[157];
  *(void *)(a2 + 640) = a1[158];
  *(void *)(a2 + 648) = a1[159];
  *(void *)(a2 + 656) = a1[160];
  *(void *)(a2 + 664) = a1[161];
  *(void *)(a2 + 672) = *((unsigned int *)a1 + 41);
  *(void *)(a2 + 680) = a1[168];
  *(void *)(a2 + 688) = a1[169];
  *(void *)(a2 + 696) = *((unsigned int *)a1 + 43);
  uint64_t v72 = *((unsigned __int16 *)a1 + 88);
  if ((v72 & 0x8000u) == 0) {
    uint64_t v72 = (__int16)v72;
  }
  *(void *)(a2 + 704) = v72;
  uint64_t v73 = *(void *)(a1 + 180);
  v74.n128_u64[0] = v73;
  v74.n128_u64[1] = HIDWORD(v73);
  __n128 v75 = v74;
  uint64_t v76 = *(void *)(a1 + 188);
  v74.n128_u64[0] = v76;
  v74.n128_u64[1] = HIDWORD(v76);
  *(__n128 *)(a2 + 712) = v75;
  *(__n128 *)(a2 + 728) = v74;
  v75.n128_u64[0] = *(void *)(a1 + 196);
  v74.n128_u64[0] = v75.n128_u32[0];
  v74.n128_u64[1] = v75.n128_u32[1];
  __n128 result = v74;
  uint64_t v78 = *(void *)(a1 + 204);
  v74.n128_u64[0] = v78;
  v74.n128_u64[1] = HIDWORD(v78);
  *(__n128 *)(a2 + 744) = result;
  *(__n128 *)(a2 + 760) = v74;
  *(void *)(a2 + 776) = a1[212];
  *(void *)(a2 + 784) = a1[213];
  uint64_t v79 = *((unsigned int *)a1 + 54);
  *(void *)(a2 + 1256) = v68 | 0xFFFFFFFF8;
  *(void *)(a2 + 792) = v79;
  return result;
}

__n128 sub_1CBE5FD04(uint64_t a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  *(void *)a2 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  v3.n128_u64[0] = v2;
  v3.n128_u64[1] = HIDWORD(v2);
  *(__n128 *)(a2 + 8) = v3;
  uint64_t v4 = *(unsigned __int8 *)(a1 + 17);
  *(void *)(a2 + 24) = *(unsigned __int8 *)(a1 + 16);
  *(void *)(a2 + 32) = v4;
  uint64_t v5 = *(unsigned __int8 *)(a1 + 19);
  *(void *)(a2 + 40) = *(unsigned __int8 *)(a1 + 18);
  *(void *)(a2 + 48) = v5;
  uint64_t v6 = *(unsigned __int8 *)(a1 + 21);
  *(void *)(a2 + 56) = *(unsigned __int8 *)(a1 + 20);
  *(void *)(a2 + 64) = v6;
  uint64_t v7 = *(unsigned __int8 *)(a1 + 23);
  *(void *)(a2 + 72) = *(unsigned __int8 *)(a1 + 22);
  *(void *)(a2 + 80) = v7;
  *(void *)(a2 + 88) = *(unsigned __int8 *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 28);
  v3.n128_u64[0] = v8;
  v3.n128_u64[1] = HIDWORD(v8);
  __n128 v9 = v3;
  uint64_t v10 = *(void *)(a1 + 36);
  v3.n128_u64[0] = v10;
  v3.n128_u64[1] = HIDWORD(v10);
  *(__n128 *)(a2 + 96) = v9;
  *(__n128 *)(a2 + 112) = v3;
  v9.n128_u64[0] = *(void *)(a1 + 44);
  v3.n128_u64[0] = v9.n128_u32[0];
  v3.n128_u64[1] = v9.n128_u32[1];
  __n128 result = v3;
  uint64_t v12 = *(void *)(a1 + 52);
  v3.n128_u64[0] = v12;
  v3.n128_u64[1] = HIDWORD(v12);
  *(__n128 *)(a2 + 128) = result;
  *(__n128 *)(a2 + 144) = v3;
  uint64_t v13 = *(unsigned __int8 *)(a1 + 60);
  *(void *)(a2 + 1248) = 0x1FFFFFLL;
  *(void *)(a2 + 160) = v13;
  return result;
}

__n128 sub_1CBE5FD98(uint64_t a1, __n128 *a2)
{
  a2[79].n128_u64[0] = 0;
  a2[78].n128_u64[1] = 0;
  v2.n128_u64[0] = *(void *)a1;
  v2.n128_u64[1] = HIDWORD(*(void *)a1);
  *a2 = v2;
  unint64_t v3 = *(unsigned __int8 *)(a1 + 9);
  a2[1].n128_u64[0] = *(unsigned __int8 *)(a1 + 8);
  a2[1].n128_u64[1] = v3;
  unint64_t v4 = *(unsigned __int8 *)(a1 + 11);
  a2[2].n128_u64[0] = *(unsigned __int8 *)(a1 + 10);
  a2[2].n128_u64[1] = v4;
  unint64_t v5 = *(unsigned __int8 *)(a1 + 13);
  a2[3].n128_u64[0] = *(unsigned __int8 *)(a1 + 12);
  a2[3].n128_u64[1] = v5;
  unint64_t v6 = *(unsigned __int8 *)(a1 + 15);
  a2[4].n128_u64[0] = *(unsigned __int8 *)(a1 + 14);
  a2[4].n128_u64[1] = v6;
  unint64_t v7 = *(unsigned __int8 *)(a1 + 17);
  a2[5].n128_u64[0] = *(unsigned __int8 *)(a1 + 16);
  a2[5].n128_u64[1] = v7;
  unint64_t v8 = *(unsigned __int8 *)(a1 + 19);
  a2[6].n128_u64[0] = *(unsigned __int8 *)(a1 + 18);
  a2[6].n128_u64[1] = v8;
  unint64_t v9 = *(unsigned __int8 *)(a1 + 21);
  a2[7].n128_u64[0] = *(unsigned __int8 *)(a1 + 20);
  a2[7].n128_u64[1] = v9;
  uint64_t v10 = *(void *)(a1 + 24);
  uint64_t v11 = *(void *)(a1 + 32);
  v2.n128_u64[0] = v10;
  v2.n128_u64[1] = HIDWORD(v10);
  __n128 v12 = v2;
  v2.n128_u64[0] = v11;
  v2.n128_u64[1] = HIDWORD(v11);
  a2[8] = v12;
  a2[9] = v2;
  v12.n128_u64[0] = *(void *)(a1 + 40);
  uint64_t v13 = *(void *)(a1 + 48);
  v2.n128_u64[0] = v12.n128_u32[0];
  v2.n128_u64[1] = v12.n128_u32[1];
  __n128 result = v2;
  v2.n128_u64[0] = v13;
  v2.n128_u64[1] = HIDWORD(v13);
  a2[10] = result;
  a2[11] = v2;
  unint64_t v15 = *(unsigned __int8 *)(a1 + 60);
  a2[12].n128_u64[0] = *(unsigned int *)(a1 + 56);
  a2[12].n128_u64[1] = v15;
  unint64_t v16 = *(unsigned __int8 *)(a1 + 62);
  a2[13].n128_u64[0] = *(unsigned __int8 *)(a1 + 61);
  a2[13].n128_u64[1] = v16;
  unint64_t v17 = *(unsigned __int8 *)(a1 + 63);
  a2[78].n128_u64[0] = 0x1FFFFFFFLL;
  a2[14].n128_u64[0] = v17;
  return result;
}

__n128 sub_1CBE5FE4C(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = v16;
  uint64_t v26 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v25;
  *(void *)(a2 + 192) = v26;
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = a1[52];
  uint64_t v29 = v13 | 0xF800000;
  *(void *)(a2 + 1248) = v13 | 0xF800000;
  *(void *)(a2 + 216) = v28;
  unsigned int v30 = *((_DWORD *)a1 + 16);
  if (!v30)
  {
    uint64_t v31 = a1[56];
    uint64_t v29 = v13 | 0x1F800000;
    *(void *)(a2 + 1248) = v13 | 0x1F800000;
    *(void *)(a2 + 224) = v31;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 1)
  {
    uint64_t v32 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x20000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 232) = v32;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 2)
  {
    uint64_t v33 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x40000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 240) = v33;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 3)
  {
    uint64_t v34 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x80000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 248) = v34;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 4)
  {
    uint64_t v35 = *((unsigned int *)a1 + 14);
    v29 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 256) = v35;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 5)
  {
    uint64_t v36 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 264) = v36;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 6)
  {
    uint64_t v37 = a1[56];
    v29 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 272) = v37;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 7)
  {
    uint64_t v38 = *((unsigned int *)a1 + 14);
    *(void *)(a2 + 1248) = v29 | 0x800000000;
    *(void *)(a2 + 280) = v38;
    unsigned int v30 = *((_DWORD *)a1 + 16);
    if (v30 == 7)
    {
      v29 |= 0x1800000000uLL;
      *(void *)(a2 + 288) = a1[60];
    }
    else
    {
      v29 |= 0x800000000uLL;
    }
  }
  uint64_t v39 = *((unsigned int *)a1 + 17);
  *(void *)(a2 + 296) = v30;
  *(void *)(a2 + 304) = v39;
  uint64_t v40 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 312) = a1[72];
  *(void *)(a2 + 320) = v40;
  *(void *)(a2 + 328) = a1[80];
  uint64_t v41 = *(void *)(a1 + 84);
  v42.n128_u64[0] = v41;
  v42.n128_u64[1] = HIDWORD(v41);
  *(__n128 *)(a2 + 336) = v42;
  uint64_t v43 = a1[93];
  *(void *)(a2 + 352) = a1[92];
  *(void *)(a2 + 360) = v43;
  uint64_t v44 = a1[95];
  *(void *)(a2 + 368) = a1[94];
  *(void *)(a2 + 376) = v44;
  uint64_t v45 = a1[97];
  *(void *)(a2 + 384) = a1[96];
  *(void *)(a2 + 392) = v45;
  uint64_t v46 = a1[99];
  *(void *)(a2 + 400) = a1[98];
  *(void *)(a2 + 408) = v46;
  uint64_t v47 = *(void *)(a1 + 100);
  v42.n128_u64[0] = v47;
  v42.n128_u64[1] = HIDWORD(v47);
  __n128 v48 = v42;
  uint64_t v49 = *(void *)(a1 + 108);
  v42.n128_u64[0] = v49;
  v42.n128_u64[1] = HIDWORD(v49);
  *(__n128 *)(a2 + 416) = v48;
  *(__n128 *)(a2 + 432) = v42;
  v48.n128_u64[0] = *(void *)(a1 + 116);
  v42.n128_u64[0] = v48.n128_u32[0];
  v42.n128_u64[1] = v48.n128_u32[1];
  __n128 result = v42;
  uint64_t v51 = *(void *)(a1 + 124);
  v42.n128_u64[0] = v51;
  v42.n128_u64[1] = HIDWORD(v51);
  *(__n128 *)(a2 + 448) = result;
  *(__n128 *)(a2 + 464) = v42;
  uint64_t v52 = a1[132];
  *(void *)(a2 + 1248) = v29 | 0x1FFFFFE000000000;
  *(void *)(a2 + 480) = v52;
  return result;
}

__n128 sub_1CBE60240(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = v16;
  uint64_t v26 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v25;
  *(void *)(a2 + 192) = v26;
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = a1[52];
  uint64_t v29 = v13 | 0xF800000;
  *(void *)(a2 + 1248) = v13 | 0xF800000;
  *(void *)(a2 + 216) = v28;
  unsigned int v30 = *((_DWORD *)a1 + 16);
  if (!v30)
  {
    uint64_t v31 = a1[56];
    uint64_t v29 = v13 | 0x1F800000;
    *(void *)(a2 + 1248) = v13 | 0x1F800000;
    *(void *)(a2 + 224) = v31;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 1)
  {
    uint64_t v32 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x20000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 232) = v32;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 2)
  {
    uint64_t v33 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x40000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 240) = v33;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 3)
  {
    uint64_t v34 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x80000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 248) = v34;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 4)
  {
    uint64_t v35 = *((unsigned int *)a1 + 14);
    v29 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 256) = v35;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 5)
  {
    uint64_t v36 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 264) = v36;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 6)
  {
    uint64_t v37 = a1[56];
    v29 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 272) = v37;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 7)
  {
    uint64_t v38 = *((unsigned int *)a1 + 14);
    *(void *)(a2 + 1248) = v29 | 0x800000000;
    *(void *)(a2 + 280) = v38;
    unsigned int v30 = *((_DWORD *)a1 + 16);
    if (v30 == 7)
    {
      v29 |= 0x1800000000uLL;
      *(void *)(a2 + 288) = a1[60];
    }
    else
    {
      v29 |= 0x800000000uLL;
    }
  }
  uint64_t v39 = *((unsigned int *)a1 + 17);
  *(void *)(a2 + 296) = v30;
  *(void *)(a2 + 304) = v39;
  uint64_t v40 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 312) = a1[72];
  *(void *)(a2 + 320) = v40;
  *(void *)(a2 + 328) = a1[80];
  uint64_t v41 = *(void *)(a1 + 84);
  v42.n128_u64[0] = v41;
  v42.n128_u64[1] = HIDWORD(v41);
  *(__n128 *)(a2 + 336) = v42;
  uint64_t v43 = a1[93];
  *(void *)(a2 + 352) = a1[92];
  *(void *)(a2 + 360) = v43;
  uint64_t v44 = a1[95];
  *(void *)(a2 + 368) = a1[94];
  *(void *)(a2 + 376) = v44;
  uint64_t v45 = a1[97];
  *(void *)(a2 + 384) = a1[96];
  *(void *)(a2 + 392) = v45;
  uint64_t v46 = a1[99];
  *(void *)(a2 + 400) = a1[98];
  *(void *)(a2 + 408) = v46;
  uint64_t v47 = *(void *)(a1 + 100);
  v42.n128_u64[0] = v47;
  v42.n128_u64[1] = HIDWORD(v47);
  __n128 v48 = v42;
  uint64_t v49 = *(void *)(a1 + 108);
  v42.n128_u64[0] = v49;
  v42.n128_u64[1] = HIDWORD(v49);
  *(__n128 *)(a2 + 416) = v48;
  *(__n128 *)(a2 + 432) = v42;
  v48.n128_u64[0] = *(void *)(a1 + 116);
  v42.n128_u64[0] = v48.n128_u32[0];
  v42.n128_u64[1] = v48.n128_u32[1];
  __n128 result = v42;
  uint64_t v51 = *(void *)(a1 + 124);
  v42.n128_u64[0] = v51;
  v42.n128_u64[1] = HIDWORD(v51);
  *(__n128 *)(a2 + 448) = result;
  *(__n128 *)(a2 + 464) = v42;
  uint64_t v52 = a1[132];
  *(void *)(a2 + 1248) = v29 | 0x1FFFFFE000000000;
  *(void *)(a2 + 480) = v52;
  return result;
}

__n128 sub_1CBE60634(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = v16;
  uint64_t v26 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v25;
  *(void *)(a2 + 192) = v26;
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = a1[52];
  uint64_t v29 = v13 | 0xF800000;
  *(void *)(a2 + 1248) = v13 | 0xF800000;
  *(void *)(a2 + 216) = v28;
  unsigned int v30 = *((_DWORD *)a1 + 16);
  if (!v30)
  {
    uint64_t v31 = a1[56];
    uint64_t v29 = v13 | 0x1F800000;
    *(void *)(a2 + 1248) = v13 | 0x1F800000;
    *(void *)(a2 + 224) = v31;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 1)
  {
    uint64_t v32 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x20000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 232) = v32;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 2)
  {
    uint64_t v33 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x40000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 240) = v33;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 3)
  {
    uint64_t v34 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x80000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 248) = v34;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 4)
  {
    uint64_t v35 = *((unsigned int *)a1 + 14);
    v29 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 256) = v35;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 5)
  {
    uint64_t v36 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 264) = v36;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 6)
  {
    uint64_t v37 = a1[56];
    v29 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 272) = v37;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 7)
  {
    uint64_t v38 = *((unsigned int *)a1 + 14);
    *(void *)(a2 + 1248) = v29 | 0x800000000;
    *(void *)(a2 + 280) = v38;
    unsigned int v30 = *((_DWORD *)a1 + 16);
    if (v30 == 7)
    {
      v29 |= 0x1800000000uLL;
      *(void *)(a2 + 288) = a1[60];
    }
    else
    {
      v29 |= 0x800000000uLL;
    }
  }
  uint64_t v39 = *((unsigned int *)a1 + 17);
  *(void *)(a2 + 296) = v30;
  *(void *)(a2 + 304) = v39;
  uint64_t v40 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 312) = a1[72];
  *(void *)(a2 + 320) = v40;
  *(void *)(a2 + 328) = a1[80];
  uint64_t v41 = *(void *)(a1 + 84);
  v42.n128_u64[0] = v41;
  v42.n128_u64[1] = HIDWORD(v41);
  *(__n128 *)(a2 + 336) = v42;
  uint64_t v43 = a1[93];
  *(void *)(a2 + 352) = a1[92];
  *(void *)(a2 + 360) = v43;
  uint64_t v44 = a1[95];
  *(void *)(a2 + 368) = a1[94];
  *(void *)(a2 + 376) = v44;
  uint64_t v45 = a1[97];
  *(void *)(a2 + 384) = a1[96];
  *(void *)(a2 + 392) = v45;
  uint64_t v46 = a1[99];
  *(void *)(a2 + 400) = a1[98];
  *(void *)(a2 + 408) = v46;
  uint64_t v47 = *(void *)(a1 + 100);
  v42.n128_u64[0] = v47;
  v42.n128_u64[1] = HIDWORD(v47);
  __n128 v48 = v42;
  uint64_t v49 = *(void *)(a1 + 108);
  v42.n128_u64[0] = v49;
  v42.n128_u64[1] = HIDWORD(v49);
  *(__n128 *)(a2 + 416) = v48;
  *(__n128 *)(a2 + 432) = v42;
  v48.n128_u64[0] = *(void *)(a1 + 116);
  v42.n128_u64[0] = v48.n128_u32[0];
  v42.n128_u64[1] = v48.n128_u32[1];
  __n128 result = v42;
  uint64_t v51 = *(void *)(a1 + 124);
  v42.n128_u64[0] = v51;
  v42.n128_u64[1] = HIDWORD(v51);
  *(__n128 *)(a2 + 448) = result;
  *(__n128 *)(a2 + 464) = v42;
  uint64_t v52 = a1[132];
  *(void *)(a2 + 1248) = v29 | 0x1FFFFFE000000000;
  *(void *)(a2 + 480) = v52;
  return result;
}

__n128 sub_1CBE60A28(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = v16;
  uint64_t v26 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v25;
  *(void *)(a2 + 192) = v26;
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = a1[52];
  uint64_t v29 = v13 | 0xF800000;
  *(void *)(a2 + 1248) = v13 | 0xF800000;
  *(void *)(a2 + 216) = v28;
  unsigned int v30 = *((_DWORD *)a1 + 16);
  if (!v30)
  {
    uint64_t v31 = a1[56];
    uint64_t v29 = v13 | 0x1F800000;
    *(void *)(a2 + 1248) = v13 | 0x1F800000;
    *(void *)(a2 + 224) = v31;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 1)
  {
    uint64_t v32 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x20000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 232) = v32;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 2)
  {
    uint64_t v33 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x40000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 240) = v33;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 3)
  {
    uint64_t v34 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x80000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 248) = v34;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 4)
  {
    uint64_t v35 = *((unsigned int *)a1 + 14);
    v29 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 256) = v35;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 5)
  {
    uint64_t v36 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 264) = v36;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 6)
  {
    uint64_t v37 = a1[56];
    v29 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 272) = v37;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 7)
  {
    uint64_t v38 = *((unsigned int *)a1 + 14);
    *(void *)(a2 + 1248) = v29 | 0x800000000;
    *(void *)(a2 + 280) = v38;
    unsigned int v30 = *((_DWORD *)a1 + 16);
    if (v30 == 7)
    {
      v29 |= 0x1800000000uLL;
      *(void *)(a2 + 288) = a1[60];
    }
    else
    {
      v29 |= 0x800000000uLL;
    }
  }
  uint64_t v39 = *((unsigned int *)a1 + 17);
  *(void *)(a2 + 296) = v30;
  *(void *)(a2 + 304) = v39;
  uint64_t v40 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 312) = a1[72];
  *(void *)(a2 + 320) = v40;
  *(void *)(a2 + 328) = a1[80];
  uint64_t v41 = *(void *)(a1 + 84);
  v42.n128_u64[0] = v41;
  v42.n128_u64[1] = HIDWORD(v41);
  *(__n128 *)(a2 + 336) = v42;
  uint64_t v43 = a1[93];
  *(void *)(a2 + 352) = a1[92];
  *(void *)(a2 + 360) = v43;
  uint64_t v44 = a1[95];
  *(void *)(a2 + 368) = a1[94];
  *(void *)(a2 + 376) = v44;
  uint64_t v45 = a1[97];
  *(void *)(a2 + 384) = a1[96];
  *(void *)(a2 + 392) = v45;
  uint64_t v46 = a1[99];
  *(void *)(a2 + 400) = a1[98];
  *(void *)(a2 + 408) = v46;
  uint64_t v47 = *(void *)(a1 + 100);
  v42.n128_u64[0] = v47;
  v42.n128_u64[1] = HIDWORD(v47);
  __n128 v48 = v42;
  uint64_t v49 = *(void *)(a1 + 108);
  v42.n128_u64[0] = v49;
  v42.n128_u64[1] = HIDWORD(v49);
  *(__n128 *)(a2 + 416) = v48;
  *(__n128 *)(a2 + 432) = v42;
  v48.n128_u64[0] = *(void *)(a1 + 116);
  v42.n128_u64[0] = v48.n128_u32[0];
  v42.n128_u64[1] = v48.n128_u32[1];
  __n128 result = v42;
  uint64_t v51 = *(void *)(a1 + 124);
  v42.n128_u64[0] = v51;
  v42.n128_u64[1] = HIDWORD(v51);
  *(__n128 *)(a2 + 448) = result;
  *(__n128 *)(a2 + 464) = v42;
  uint64_t v52 = a1[132];
  *(void *)(a2 + 1248) = v29 | 0x1FFFFFE000000000;
  *(void *)(a2 + 480) = v52;
  return result;
}

__n128 sub_1CBE60E1C(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = v16;
  uint64_t v26 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v25;
  *(void *)(a2 + 192) = v26;
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = a1[52];
  uint64_t v29 = v13 | 0xF800000;
  *(void *)(a2 + 1248) = v13 | 0xF800000;
  *(void *)(a2 + 216) = v28;
  unsigned int v30 = *((_DWORD *)a1 + 16);
  if (!v30)
  {
    uint64_t v31 = a1[56];
    uint64_t v29 = v13 | 0x1F800000;
    *(void *)(a2 + 1248) = v13 | 0x1F800000;
    *(void *)(a2 + 224) = v31;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 1)
  {
    uint64_t v32 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x20000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 232) = v32;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 2)
  {
    uint64_t v33 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x40000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 240) = v33;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 3)
  {
    uint64_t v34 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x80000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 248) = v34;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 4)
  {
    uint64_t v35 = *((unsigned int *)a1 + 14);
    v29 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 256) = v35;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 5)
  {
    uint64_t v36 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 264) = v36;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 6)
  {
    uint64_t v37 = a1[56];
    v29 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 272) = v37;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 7)
  {
    uint64_t v38 = *((unsigned int *)a1 + 14);
    *(void *)(a2 + 1248) = v29 | 0x800000000;
    *(void *)(a2 + 280) = v38;
    unsigned int v30 = *((_DWORD *)a1 + 16);
    if (v30 == 7)
    {
      v29 |= 0x1800000000uLL;
      *(void *)(a2 + 288) = a1[60];
    }
    else
    {
      v29 |= 0x800000000uLL;
    }
  }
  uint64_t v39 = *((unsigned int *)a1 + 17);
  *(void *)(a2 + 296) = v30;
  *(void *)(a2 + 304) = v39;
  uint64_t v40 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 312) = a1[72];
  *(void *)(a2 + 320) = v40;
  *(void *)(a2 + 328) = a1[80];
  uint64_t v41 = *(void *)(a1 + 84);
  v42.n128_u64[0] = v41;
  v42.n128_u64[1] = HIDWORD(v41);
  *(__n128 *)(a2 + 336) = v42;
  uint64_t v43 = a1[93];
  *(void *)(a2 + 352) = a1[92];
  *(void *)(a2 + 360) = v43;
  uint64_t v44 = a1[95];
  *(void *)(a2 + 368) = a1[94];
  *(void *)(a2 + 376) = v44;
  uint64_t v45 = a1[97];
  *(void *)(a2 + 384) = a1[96];
  *(void *)(a2 + 392) = v45;
  uint64_t v46 = a1[99];
  *(void *)(a2 + 400) = a1[98];
  *(void *)(a2 + 408) = v46;
  uint64_t v47 = *(void *)(a1 + 100);
  v42.n128_u64[0] = v47;
  v42.n128_u64[1] = HIDWORD(v47);
  __n128 v48 = v42;
  uint64_t v49 = *(void *)(a1 + 108);
  v42.n128_u64[0] = v49;
  v42.n128_u64[1] = HIDWORD(v49);
  *(__n128 *)(a2 + 416) = v48;
  *(__n128 *)(a2 + 432) = v42;
  v48.n128_u64[0] = *(void *)(a1 + 116);
  v42.n128_u64[0] = v48.n128_u32[0];
  v42.n128_u64[1] = v48.n128_u32[1];
  __n128 result = v42;
  uint64_t v51 = *(void *)(a1 + 124);
  v42.n128_u64[0] = v51;
  v42.n128_u64[1] = HIDWORD(v51);
  *(__n128 *)(a2 + 448) = result;
  *(__n128 *)(a2 + 464) = v42;
  uint64_t v52 = a1[132];
  *(void *)(a2 + 1248) = v29 | 0x1FFFFFE000000000;
  *(void *)(a2 + 480) = v52;
  return result;
}

__n128 sub_1CBE61210(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = v16;
  uint64_t v26 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v25;
  *(void *)(a2 + 192) = v26;
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = a1[52];
  uint64_t v29 = v13 | 0xF800000;
  *(void *)(a2 + 1248) = v13 | 0xF800000;
  *(void *)(a2 + 216) = v28;
  unsigned int v30 = *((_DWORD *)a1 + 16);
  if (!v30)
  {
    uint64_t v31 = a1[56];
    uint64_t v29 = v13 | 0x1F800000;
    *(void *)(a2 + 1248) = v13 | 0x1F800000;
    *(void *)(a2 + 224) = v31;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 1)
  {
    uint64_t v32 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x20000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 232) = v32;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 2)
  {
    uint64_t v33 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x40000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 240) = v33;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 3)
  {
    uint64_t v34 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x80000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 248) = v34;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 4)
  {
    uint64_t v35 = *((unsigned int *)a1 + 14);
    v29 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 256) = v35;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 5)
  {
    uint64_t v36 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 264) = v36;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 6)
  {
    uint64_t v37 = a1[56];
    v29 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 272) = v37;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 7)
  {
    uint64_t v38 = *((unsigned int *)a1 + 14);
    *(void *)(a2 + 1248) = v29 | 0x800000000;
    *(void *)(a2 + 280) = v38;
    unsigned int v30 = *((_DWORD *)a1 + 16);
    if (v30 == 7)
    {
      v29 |= 0x1800000000uLL;
      *(void *)(a2 + 288) = a1[60];
    }
    else
    {
      v29 |= 0x800000000uLL;
    }
  }
  uint64_t v39 = *((unsigned int *)a1 + 17);
  *(void *)(a2 + 296) = v30;
  *(void *)(a2 + 304) = v39;
  uint64_t v40 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 312) = a1[72];
  *(void *)(a2 + 320) = v40;
  *(void *)(a2 + 328) = a1[80];
  uint64_t v41 = *(void *)(a1 + 84);
  v42.n128_u64[0] = v41;
  v42.n128_u64[1] = HIDWORD(v41);
  *(__n128 *)(a2 + 336) = v42;
  uint64_t v43 = a1[93];
  *(void *)(a2 + 352) = a1[92];
  *(void *)(a2 + 360) = v43;
  uint64_t v44 = a1[95];
  *(void *)(a2 + 368) = a1[94];
  *(void *)(a2 + 376) = v44;
  uint64_t v45 = a1[97];
  *(void *)(a2 + 384) = a1[96];
  *(void *)(a2 + 392) = v45;
  uint64_t v46 = a1[99];
  *(void *)(a2 + 400) = a1[98];
  *(void *)(a2 + 408) = v46;
  uint64_t v47 = *(void *)(a1 + 100);
  v42.n128_u64[0] = v47;
  v42.n128_u64[1] = HIDWORD(v47);
  __n128 v48 = v42;
  uint64_t v49 = *(void *)(a1 + 108);
  v42.n128_u64[0] = v49;
  v42.n128_u64[1] = HIDWORD(v49);
  *(__n128 *)(a2 + 416) = v48;
  *(__n128 *)(a2 + 432) = v42;
  v48.n128_u64[0] = *(void *)(a1 + 116);
  v42.n128_u64[0] = v48.n128_u32[0];
  v42.n128_u64[1] = v48.n128_u32[1];
  __n128 result = v42;
  uint64_t v51 = *(void *)(a1 + 124);
  v42.n128_u64[0] = v51;
  v42.n128_u64[1] = HIDWORD(v51);
  *(__n128 *)(a2 + 448) = result;
  *(__n128 *)(a2 + 464) = v42;
  uint64_t v52 = a1[132];
  *(void *)(a2 + 1248) = v29 | 0x1FFFFFE000000000;
  *(void *)(a2 + 480) = v52;
  return result;
}

__n128 sub_1CBE61604(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = v16;
  uint64_t v26 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v25;
  *(void *)(a2 + 192) = v26;
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = a1[52];
  uint64_t v29 = v13 | 0xF800000;
  *(void *)(a2 + 1248) = v13 | 0xF800000;
  *(void *)(a2 + 216) = v28;
  unsigned int v30 = *((_DWORD *)a1 + 16);
  if (!v30)
  {
    uint64_t v31 = a1[56];
    uint64_t v29 = v13 | 0x1F800000;
    *(void *)(a2 + 1248) = v13 | 0x1F800000;
    *(void *)(a2 + 224) = v31;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 1)
  {
    uint64_t v32 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x20000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 232) = v32;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 2)
  {
    uint64_t v33 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x40000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 240) = v33;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 3)
  {
    uint64_t v34 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x80000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 248) = v34;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 4)
  {
    uint64_t v35 = *((unsigned int *)a1 + 14);
    v29 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 256) = v35;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 5)
  {
    uint64_t v36 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 264) = v36;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 6)
  {
    uint64_t v37 = a1[56];
    v29 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 272) = v37;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 7)
  {
    uint64_t v38 = *((unsigned int *)a1 + 14);
    *(void *)(a2 + 1248) = v29 | 0x800000000;
    *(void *)(a2 + 280) = v38;
    unsigned int v30 = *((_DWORD *)a1 + 16);
    if (v30 == 7)
    {
      v29 |= 0x1800000000uLL;
      *(void *)(a2 + 288) = a1[60];
    }
    else
    {
      v29 |= 0x800000000uLL;
    }
  }
  uint64_t v39 = *((unsigned int *)a1 + 17);
  *(void *)(a2 + 296) = v30;
  *(void *)(a2 + 304) = v39;
  uint64_t v40 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 312) = a1[72];
  *(void *)(a2 + 320) = v40;
  *(void *)(a2 + 328) = a1[80];
  uint64_t v41 = *(void *)(a1 + 84);
  v42.n128_u64[0] = v41;
  v42.n128_u64[1] = HIDWORD(v41);
  *(__n128 *)(a2 + 336) = v42;
  uint64_t v43 = a1[93];
  *(void *)(a2 + 352) = a1[92];
  *(void *)(a2 + 360) = v43;
  uint64_t v44 = a1[95];
  *(void *)(a2 + 368) = a1[94];
  *(void *)(a2 + 376) = v44;
  uint64_t v45 = a1[97];
  *(void *)(a2 + 384) = a1[96];
  *(void *)(a2 + 392) = v45;
  uint64_t v46 = a1[99];
  *(void *)(a2 + 400) = a1[98];
  *(void *)(a2 + 408) = v46;
  uint64_t v47 = *(void *)(a1 + 100);
  v42.n128_u64[0] = v47;
  v42.n128_u64[1] = HIDWORD(v47);
  __n128 v48 = v42;
  uint64_t v49 = *(void *)(a1 + 108);
  v42.n128_u64[0] = v49;
  v42.n128_u64[1] = HIDWORD(v49);
  *(__n128 *)(a2 + 416) = v48;
  *(__n128 *)(a2 + 432) = v42;
  v48.n128_u64[0] = *(void *)(a1 + 116);
  v42.n128_u64[0] = v48.n128_u32[0];
  v42.n128_u64[1] = v48.n128_u32[1];
  __n128 result = v42;
  uint64_t v51 = *(void *)(a1 + 124);
  v42.n128_u64[0] = v51;
  v42.n128_u64[1] = HIDWORD(v51);
  *(__n128 *)(a2 + 448) = result;
  *(__n128 *)(a2 + 464) = v42;
  uint64_t v52 = a1[132];
  *(void *)(a2 + 1248) = v29 | 0x1FFFFFE000000000;
  *(void *)(a2 + 480) = v52;
  return result;
}

__n128 sub_1CBE619F8(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = v16;
  uint64_t v26 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v25;
  *(void *)(a2 + 192) = v26;
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = a1[52];
  uint64_t v29 = v13 | 0xF800000;
  *(void *)(a2 + 1248) = v13 | 0xF800000;
  *(void *)(a2 + 216) = v28;
  unsigned int v30 = *((_DWORD *)a1 + 16);
  if (!v30)
  {
    uint64_t v31 = a1[56];
    uint64_t v29 = v13 | 0x1F800000;
    *(void *)(a2 + 1248) = v13 | 0x1F800000;
    *(void *)(a2 + 224) = v31;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 1)
  {
    uint64_t v32 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x20000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 232) = v32;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 2)
  {
    uint64_t v33 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x40000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 240) = v33;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 3)
  {
    uint64_t v34 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x80000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 248) = v34;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 4)
  {
    uint64_t v35 = *((unsigned int *)a1 + 14);
    v29 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 256) = v35;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 5)
  {
    uint64_t v36 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 264) = v36;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 6)
  {
    uint64_t v37 = a1[56];
    v29 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 272) = v37;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 7)
  {
    uint64_t v38 = *((unsigned int *)a1 + 14);
    *(void *)(a2 + 1248) = v29 | 0x800000000;
    *(void *)(a2 + 280) = v38;
    unsigned int v30 = *((_DWORD *)a1 + 16);
    if (v30 == 7)
    {
      v29 |= 0x1800000000uLL;
      *(void *)(a2 + 288) = a1[60];
    }
    else
    {
      v29 |= 0x800000000uLL;
    }
  }
  uint64_t v39 = *((unsigned int *)a1 + 17);
  *(void *)(a2 + 296) = v30;
  *(void *)(a2 + 304) = v39;
  uint64_t v40 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 312) = a1[72];
  *(void *)(a2 + 320) = v40;
  *(void *)(a2 + 328) = a1[80];
  uint64_t v41 = *(void *)(a1 + 84);
  v42.n128_u64[0] = v41;
  v42.n128_u64[1] = HIDWORD(v41);
  *(__n128 *)(a2 + 336) = v42;
  uint64_t v43 = a1[93];
  *(void *)(a2 + 352) = a1[92];
  *(void *)(a2 + 360) = v43;
  uint64_t v44 = a1[95];
  *(void *)(a2 + 368) = a1[94];
  *(void *)(a2 + 376) = v44;
  uint64_t v45 = a1[97];
  *(void *)(a2 + 384) = a1[96];
  *(void *)(a2 + 392) = v45;
  uint64_t v46 = a1[99];
  *(void *)(a2 + 400) = a1[98];
  *(void *)(a2 + 408) = v46;
  uint64_t v47 = *(void *)(a1 + 100);
  v42.n128_u64[0] = v47;
  v42.n128_u64[1] = HIDWORD(v47);
  __n128 v48 = v42;
  uint64_t v49 = *(void *)(a1 + 108);
  v42.n128_u64[0] = v49;
  v42.n128_u64[1] = HIDWORD(v49);
  *(__n128 *)(a2 + 416) = v48;
  *(__n128 *)(a2 + 432) = v42;
  v48.n128_u64[0] = *(void *)(a1 + 116);
  v42.n128_u64[0] = v48.n128_u32[0];
  v42.n128_u64[1] = v48.n128_u32[1];
  __n128 result = v42;
  uint64_t v51 = *(void *)(a1 + 124);
  v42.n128_u64[0] = v51;
  v42.n128_u64[1] = HIDWORD(v51);
  *(__n128 *)(a2 + 448) = result;
  *(__n128 *)(a2 + 464) = v42;
  uint64_t v52 = a1[132];
  *(void *)(a2 + 1248) = v29 | 0x1FFFFFE000000000;
  *(void *)(a2 + 480) = v52;
  return result;
}

__n128 sub_1CBE61DEC(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = v16;
  uint64_t v26 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v25;
  *(void *)(a2 + 192) = v26;
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = a1[52];
  uint64_t v29 = v13 | 0xF800000;
  *(void *)(a2 + 1248) = v13 | 0xF800000;
  *(void *)(a2 + 216) = v28;
  unsigned int v30 = *((_DWORD *)a1 + 16);
  if (!v30)
  {
    uint64_t v31 = a1[56];
    uint64_t v29 = v13 | 0x1F800000;
    *(void *)(a2 + 1248) = v13 | 0x1F800000;
    *(void *)(a2 + 224) = v31;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 1)
  {
    uint64_t v32 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x20000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 232) = v32;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 2)
  {
    uint64_t v33 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x40000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 240) = v33;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 3)
  {
    uint64_t v34 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x80000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 248) = v34;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 4)
  {
    uint64_t v35 = *((unsigned int *)a1 + 14);
    v29 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 256) = v35;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 5)
  {
    uint64_t v36 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 264) = v36;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 6)
  {
    uint64_t v37 = a1[56];
    v29 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 272) = v37;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 7)
  {
    uint64_t v38 = *((unsigned int *)a1 + 14);
    *(void *)(a2 + 1248) = v29 | 0x800000000;
    *(void *)(a2 + 280) = v38;
    unsigned int v30 = *((_DWORD *)a1 + 16);
    if (v30 == 7)
    {
      v29 |= 0x1800000000uLL;
      *(void *)(a2 + 288) = a1[60];
    }
    else
    {
      v29 |= 0x800000000uLL;
    }
  }
  uint64_t v39 = *((unsigned int *)a1 + 17);
  *(void *)(a2 + 296) = v30;
  *(void *)(a2 + 304) = v39;
  uint64_t v40 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 312) = a1[72];
  *(void *)(a2 + 320) = v40;
  *(void *)(a2 + 328) = a1[80];
  uint64_t v41 = *(void *)(a1 + 84);
  v42.n128_u64[0] = v41;
  v42.n128_u64[1] = HIDWORD(v41);
  *(__n128 *)(a2 + 336) = v42;
  uint64_t v43 = a1[93];
  *(void *)(a2 + 352) = a1[92];
  *(void *)(a2 + 360) = v43;
  uint64_t v44 = a1[95];
  *(void *)(a2 + 368) = a1[94];
  *(void *)(a2 + 376) = v44;
  uint64_t v45 = a1[97];
  *(void *)(a2 + 384) = a1[96];
  *(void *)(a2 + 392) = v45;
  uint64_t v46 = a1[99];
  *(void *)(a2 + 400) = a1[98];
  *(void *)(a2 + 408) = v46;
  uint64_t v47 = *(void *)(a1 + 100);
  v42.n128_u64[0] = v47;
  v42.n128_u64[1] = HIDWORD(v47);
  __n128 v48 = v42;
  uint64_t v49 = *(void *)(a1 + 108);
  v42.n128_u64[0] = v49;
  v42.n128_u64[1] = HIDWORD(v49);
  *(__n128 *)(a2 + 416) = v48;
  *(__n128 *)(a2 + 432) = v42;
  v48.n128_u64[0] = *(void *)(a1 + 116);
  v42.n128_u64[0] = v48.n128_u32[0];
  v42.n128_u64[1] = v48.n128_u32[1];
  __n128 result = v42;
  uint64_t v51 = *(void *)(a1 + 124);
  v42.n128_u64[0] = v51;
  v42.n128_u64[1] = HIDWORD(v51);
  *(__n128 *)(a2 + 448) = result;
  *(__n128 *)(a2 + 464) = v42;
  uint64_t v52 = a1[132];
  *(void *)(a2 + 1248) = v29 | 0x1FFFFFE000000000;
  *(void *)(a2 + 480) = v52;
  return result;
}

__n128 sub_1CBE621E0(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = v16;
  uint64_t v26 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v25;
  *(void *)(a2 + 192) = v26;
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = a1[52];
  uint64_t v29 = v13 | 0xF800000;
  *(void *)(a2 + 1248) = v13 | 0xF800000;
  *(void *)(a2 + 216) = v28;
  unsigned int v30 = *((_DWORD *)a1 + 16);
  if (!v30)
  {
    uint64_t v31 = a1[56];
    uint64_t v29 = v13 | 0x1F800000;
    *(void *)(a2 + 1248) = v13 | 0x1F800000;
    *(void *)(a2 + 224) = v31;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 1)
  {
    uint64_t v32 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x20000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 232) = v32;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 2)
  {
    uint64_t v33 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x40000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 240) = v33;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 3)
  {
    uint64_t v34 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x80000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 248) = v34;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 4)
  {
    uint64_t v35 = *((unsigned int *)a1 + 14);
    v29 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 256) = v35;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 5)
  {
    uint64_t v36 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 264) = v36;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 6)
  {
    uint64_t v37 = a1[56];
    v29 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 272) = v37;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 7)
  {
    uint64_t v38 = *((unsigned int *)a1 + 14);
    *(void *)(a2 + 1248) = v29 | 0x800000000;
    *(void *)(a2 + 280) = v38;
    unsigned int v30 = *((_DWORD *)a1 + 16);
    if (v30 == 7)
    {
      v29 |= 0x1800000000uLL;
      *(void *)(a2 + 288) = a1[60];
    }
    else
    {
      v29 |= 0x800000000uLL;
    }
  }
  uint64_t v39 = *((unsigned int *)a1 + 17);
  *(void *)(a2 + 296) = v30;
  *(void *)(a2 + 304) = v39;
  uint64_t v40 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 312) = a1[72];
  *(void *)(a2 + 320) = v40;
  *(void *)(a2 + 328) = a1[80];
  uint64_t v41 = *(void *)(a1 + 84);
  v42.n128_u64[0] = v41;
  v42.n128_u64[1] = HIDWORD(v41);
  *(__n128 *)(a2 + 336) = v42;
  uint64_t v43 = a1[93];
  *(void *)(a2 + 352) = a1[92];
  *(void *)(a2 + 360) = v43;
  uint64_t v44 = a1[95];
  *(void *)(a2 + 368) = a1[94];
  *(void *)(a2 + 376) = v44;
  uint64_t v45 = a1[97];
  *(void *)(a2 + 384) = a1[96];
  *(void *)(a2 + 392) = v45;
  uint64_t v46 = a1[99];
  *(void *)(a2 + 400) = a1[98];
  *(void *)(a2 + 408) = v46;
  uint64_t v47 = *(void *)(a1 + 100);
  v42.n128_u64[0] = v47;
  v42.n128_u64[1] = HIDWORD(v47);
  __n128 v48 = v42;
  uint64_t v49 = *(void *)(a1 + 108);
  v42.n128_u64[0] = v49;
  v42.n128_u64[1] = HIDWORD(v49);
  *(__n128 *)(a2 + 416) = v48;
  *(__n128 *)(a2 + 432) = v42;
  v48.n128_u64[0] = *(void *)(a1 + 116);
  v42.n128_u64[0] = v48.n128_u32[0];
  v42.n128_u64[1] = v48.n128_u32[1];
  __n128 result = v42;
  uint64_t v51 = *(void *)(a1 + 124);
  v42.n128_u64[0] = v51;
  v42.n128_u64[1] = HIDWORD(v51);
  *(__n128 *)(a2 + 448) = result;
  *(__n128 *)(a2 + 464) = v42;
  uint64_t v52 = a1[132];
  *(void *)(a2 + 1248) = v29 | 0x1FFFFFE000000000;
  *(void *)(a2 + 480) = v52;
  return result;
}

__n128 sub_1CBE625D4(uint64_t a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  *(void *)a2 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  v3.n128_u64[0] = v2;
  v3.n128_u64[1] = HIDWORD(v2);
  *(__n128 *)(a2 + 8) = v3;
  uint64_t v4 = *(unsigned __int8 *)(a1 + 17);
  *(void *)(a2 + 24) = *(unsigned __int8 *)(a1 + 16);
  *(void *)(a2 + 32) = v4;
  uint64_t v5 = *(unsigned __int8 *)(a1 + 19);
  *(void *)(a2 + 40) = *(unsigned __int8 *)(a1 + 18);
  *(void *)(a2 + 48) = v5;
  uint64_t v6 = *(unsigned __int8 *)(a1 + 21);
  *(void *)(a2 + 56) = *(unsigned __int8 *)(a1 + 20);
  *(void *)(a2 + 64) = v6;
  uint64_t v7 = *(unsigned __int8 *)(a1 + 23);
  *(void *)(a2 + 72) = *(unsigned __int8 *)(a1 + 22);
  *(void *)(a2 + 80) = v7;
  *(void *)(a2 + 88) = *(unsigned __int8 *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 28);
  v3.n128_u64[0] = v8;
  v3.n128_u64[1] = HIDWORD(v8);
  __n128 v9 = v3;
  uint64_t v10 = *(void *)(a1 + 36);
  v3.n128_u64[0] = v10;
  v3.n128_u64[1] = HIDWORD(v10);
  *(__n128 *)(a2 + 96) = v9;
  *(__n128 *)(a2 + 112) = v3;
  v9.n128_u64[0] = *(void *)(a1 + 44);
  v3.n128_u64[0] = v9.n128_u32[0];
  v3.n128_u64[1] = v9.n128_u32[1];
  __n128 result = v3;
  uint64_t v12 = *(void *)(a1 + 52);
  v3.n128_u64[0] = v12;
  v3.n128_u64[1] = HIDWORD(v12);
  *(__n128 *)(a2 + 128) = result;
  *(__n128 *)(a2 + 144) = v3;
  uint64_t v13 = *(unsigned __int8 *)(a1 + 60);
  *(void *)(a2 + 1248) = 0x1FFFFFLL;
  *(void *)(a2 + 160) = v13;
  return result;
}

__n128 sub_1CBE62668(uint64_t a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  *(void *)a2 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  v3.n128_u64[0] = v2;
  v3.n128_u64[1] = HIDWORD(v2);
  *(__n128 *)(a2 + 8) = v3;
  uint64_t v4 = *(unsigned __int8 *)(a1 + 17);
  *(void *)(a2 + 24) = *(unsigned __int8 *)(a1 + 16);
  *(void *)(a2 + 32) = v4;
  uint64_t v5 = *(unsigned __int8 *)(a1 + 19);
  *(void *)(a2 + 40) = *(unsigned __int8 *)(a1 + 18);
  *(void *)(a2 + 48) = v5;
  uint64_t v6 = *(unsigned __int8 *)(a1 + 21);
  *(void *)(a2 + 56) = *(unsigned __int8 *)(a1 + 20);
  *(void *)(a2 + 64) = v6;
  uint64_t v7 = *(unsigned __int8 *)(a1 + 23);
  *(void *)(a2 + 72) = *(unsigned __int8 *)(a1 + 22);
  *(void *)(a2 + 80) = v7;
  *(void *)(a2 + 88) = *(unsigned __int8 *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 28);
  v3.n128_u64[0] = v8;
  v3.n128_u64[1] = HIDWORD(v8);
  __n128 v9 = v3;
  uint64_t v10 = *(void *)(a1 + 36);
  v3.n128_u64[0] = v10;
  v3.n128_u64[1] = HIDWORD(v10);
  *(__n128 *)(a2 + 96) = v9;
  *(__n128 *)(a2 + 112) = v3;
  v9.n128_u64[0] = *(void *)(a1 + 44);
  v3.n128_u64[0] = v9.n128_u32[0];
  v3.n128_u64[1] = v9.n128_u32[1];
  __n128 result = v3;
  uint64_t v12 = *(void *)(a1 + 52);
  v3.n128_u64[0] = v12;
  v3.n128_u64[1] = HIDWORD(v12);
  *(__n128 *)(a2 + 128) = result;
  *(__n128 *)(a2 + 144) = v3;
  uint64_t v13 = *(unsigned __int8 *)(a1 + 60);
  *(void *)(a2 + 1248) = 0x1FFFFFLL;
  *(void *)(a2 + 160) = v13;
  return result;
}

float sub_1CBE626FC(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(void *)(a2 + 1256) = 0;
  *(void *)a2 = *a1;
  uint64_t v2 = *(void *)(a1 + 4);
  *(void *)&long long v3 = v2;
  *((void *)&v3 + 1) = HIDWORD(v2);
  *(_OWORD *)(a2 + 8) = v3;
  uint64_t v4 = a1[13];
  *(void *)(a2 + 24) = a1[12];
  *(void *)(a2 + 32) = v4;
  uint64_t v5 = a1[15];
  *(void *)(a2 + 40) = a1[14];
  *(void *)(a2 + 48) = v5;
  uint64_t v6 = a1[17];
  *(void *)(a2 + 56) = a1[16];
  *(void *)(a2 + 64) = v6;
  uint64_t v7 = a1[19];
  *(void *)(a2 + 72) = a1[18];
  *(void *)(a2 + 80) = v7;
  uint64_t v8 = *(void *)(a1 + 20);
  *(void *)&long long v3 = v8;
  *((void *)&v3 + 1) = HIDWORD(v8);
  *(_OWORD *)(a2 + 88) = v3;
  uint64_t v9 = *(void *)(a1 + 28);
  *(void *)&long long v3 = v9;
  *((void *)&v3 + 1) = HIDWORD(v9);
  *(_OWORD *)(a2 + 104) = v3;
  uint64_t v10 = *(void *)(a1 + 36);
  *(void *)&long long v3 = v10;
  *((void *)&v3 + 1) = HIDWORD(v10);
  *(_OWORD *)(a2 + 120) = v3;
  uint64_t v11 = *(void *)(a1 + 44);
  *(void *)&long long v3 = v11;
  *((void *)&v3 + 1) = HIDWORD(v11);
  *(_OWORD *)(a2 + 136) = v3;
  *(void *)(a2 + 1248) = 0x1FFFFFLL;
  uint64_t v12 = a1[53];
  *(void *)(a2 + 152) = a1[52];
  *(void *)(a2 + 160) = v12;
  return *(float *)&v11;
}

__n128 sub_1CBE62790(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
      unsigned int v16 = 7;
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v16;
  *(void *)(a2 + 192) = v25;
  uint64_t v26 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v26;
  uint64_t v27 = a1[53];
  *(void *)(a2 + 216) = a1[52];
  *(void *)(a2 + 224) = v27;
  uint64_t v28 = *((void *)a1 + 7);
  v29.n128_u64[0] = v28;
  v29.n128_u64[1] = HIDWORD(v28);
  *(__n128 *)(a2 + 232) = v29;
  uint64_t v30 = a1[65];
  *(void *)(a2 + 248) = a1[64];
  *(void *)(a2 + 256) = v30;
  uint64_t v31 = a1[67];
  *(void *)(a2 + 264) = a1[66];
  *(void *)(a2 + 272) = v31;
  uint64_t v32 = a1[69];
  *(void *)(a2 + 280) = a1[68];
  *(void *)(a2 + 288) = v32;
  uint64_t v33 = a1[71];
  *(void *)(a2 + 296) = a1[70];
  *(void *)(a2 + 304) = v33;
  uint64_t v34 = *((void *)a1 + 9);
  uint64_t v35 = *((void *)a1 + 10);
  v29.n128_u64[0] = v34;
  v29.n128_u64[1] = HIDWORD(v34);
  __n128 v36 = v29;
  v29.n128_u64[0] = v35;
  v29.n128_u64[1] = HIDWORD(v35);
  *(__n128 *)(a2 + 312) = v36;
  *(__n128 *)(a2 + 328) = v29;
  v36.n128_u64[0] = *((void *)a1 + 11);
  uint64_t v37 = *((void *)a1 + 12);
  v29.n128_u64[0] = v36.n128_u32[0];
  v29.n128_u64[1] = v36.n128_u32[1];
  __n128 result = v29;
  v29.n128_u64[0] = v37;
  v29.n128_u64[1] = HIDWORD(v37);
  *(__n128 *)(a2 + 344) = result;
  *(__n128 *)(a2 + 360) = v29;
  uint64_t v39 = a1[104];
  *(void *)(a2 + 1248) = v13 | 0xFFFFFF800000;
  *(void *)(a2 + 376) = v39;
  return result;
}

__n128 sub_1CBE62A64(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = v16;
  uint64_t v26 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v25;
  *(void *)(a2 + 192) = v26;
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = a1[53];
  *(void *)(a2 + 216) = a1[52];
  *(void *)(a2 + 224) = v28;
  uint64_t v29 = a1[54];
  uint64_t v30 = a1[55];
  uint64_t v31 = v13 | 0x7F800000;
  *(void *)(a2 + 1248) = v13 | 0x7F800000;
  *(void *)(a2 + 232) = v29;
  *(void *)(a2 + 240) = v30;
  unsigned int v32 = *((_DWORD *)a1 + 16);
  if (!v32)
  {
    uint64_t v33 = a1[56];
    uint64_t v31 = v13 | 0xFF800000;
    *(void *)(a2 + 1248) = v13 | 0xFF800000;
    *(void *)(a2 + 248) = v33;
    unsigned int v32 = *((_DWORD *)a1 + 16);
  }
  if (v32 == 1)
  {
    uint64_t v34 = *((unsigned __int16 *)a1 + 28);
    v31 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v31;
    *(void *)(a2 + 256) = v34;
    unsigned int v32 = *((_DWORD *)a1 + 16);
  }
  if (v32 == 2)
  {
    uint64_t v35 = *((unsigned __int16 *)a1 + 28);
    v31 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v31;
    *(void *)(a2 + 264) = v35;
    unsigned int v32 = *((_DWORD *)a1 + 16);
  }
  if (v32 == 3)
  {
    uint64_t v36 = *((unsigned __int16 *)a1 + 28);
    v31 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v31;
    *(void *)(a2 + 272) = v36;
    unsigned int v32 = *((_DWORD *)a1 + 16);
  }
  if (v32 == 4)
  {
    uint64_t v37 = *((unsigned int *)a1 + 14);
    v31 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v31;
    *(void *)(a2 + 280) = v37;
    unsigned int v32 = *((_DWORD *)a1 + 16);
  }
  if (v32 == 5)
  {
    uint64_t v38 = *((unsigned __int16 *)a1 + 28);
    v31 |= 0x1000000000uLL;
    *(void *)(a2 + 1248) = v31;
    *(void *)(a2 + 288) = v38;
    unsigned int v32 = *((_DWORD *)a1 + 16);
  }
  if (v32 == 6)
  {
    uint64_t v39 = a1[56];
    v31 |= 0x2000000000uLL;
    *(void *)(a2 + 1248) = v31;
    *(void *)(a2 + 296) = v39;
    unsigned int v32 = *((_DWORD *)a1 + 16);
  }
  if (v32 == 7)
  {
    uint64_t v40 = *((unsigned int *)a1 + 14);
    *(void *)(a2 + 1248) = v31 | 0x4000000000;
    *(void *)(a2 + 304) = v40;
    unsigned int v32 = *((_DWORD *)a1 + 16);
    if (v32 == 7)
    {
      v31 |= 0xC000000000uLL;
      *(void *)(a2 + 312) = a1[60];
    }
    else
    {
      v31 |= 0x4000000000uLL;
    }
  }
  uint64_t v41 = v32;
  uint64_t v42 = *((unsigned int *)a1 + 17);
  *(void *)(a2 + 320) = v41;
  *(void *)(a2 + 328) = v42;
  uint64_t v43 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 336) = a1[72];
  *(void *)(a2 + 344) = v43;
  uint64_t v44 = a1[81];
  *(void *)(a2 + 352) = a1[80];
  *(void *)(a2 + 360) = v44;
  uint64_t v45 = a1[82];
  uint64_t v46 = a1[83];
  uint64_t v47 = v31 | 0xFF0000000000;
  *(void *)(a2 + 1248) = v31 | 0xFF0000000000;
  *(void *)(a2 + 368) = v45;
  *(void *)(a2 + 376) = v46;
  unsigned int v48 = *((_DWORD *)a1 + 23);
  if (!v48)
  {
    uint64_t v49 = a1[84];
    uint64_t v47 = v31 | 0x1FF0000000000;
    *(void *)(a2 + 1248) = v31 | 0x1FF0000000000;
    *(void *)(a2 + 384) = v49;
    unsigned int v48 = *((_DWORD *)a1 + 23);
  }
  if (v48 == 1)
  {
    uint64_t v50 = *((unsigned __int16 *)a1 + 42);
    v47 |= 0x2000000000000uLL;
    *(void *)(a2 + 1248) = v47;
    *(void *)(a2 + 392) = v50;
    unsigned int v48 = *((_DWORD *)a1 + 23);
  }
  if (v48 == 2)
  {
    uint64_t v51 = *((unsigned __int16 *)a1 + 42);
    v47 |= 0x4000000000000uLL;
    *(void *)(a2 + 1248) = v47;
    *(void *)(a2 + 400) = v51;
    unsigned int v48 = *((_DWORD *)a1 + 23);
  }
  if (v48 == 3)
  {
    uint64_t v52 = *((unsigned __int16 *)a1 + 42);
    v47 |= 0x8000000000000uLL;
    *(void *)(a2 + 1248) = v47;
    *(void *)(a2 + 408) = v52;
    unsigned int v48 = *((_DWORD *)a1 + 23);
  }
  if (v48 == 4)
  {
    uint64_t v53 = *((unsigned int *)a1 + 21);
    v47 |= 0x10000000000000uLL;
    *(void *)(a2 + 1248) = v47;
    *(void *)(a2 + 416) = v53;
    unsigned int v48 = *((_DWORD *)a1 + 23);
  }
  if (v48 == 5)
  {
    uint64_t v54 = *((unsigned __int16 *)a1 + 42);
    v47 |= 0x20000000000000uLL;
    *(void *)(a2 + 1248) = v47;
    *(void *)(a2 + 424) = v54;
    unsigned int v48 = *((_DWORD *)a1 + 23);
  }
  if (v48 == 6)
  {
    uint64_t v55 = a1[84];
    v47 |= 0x40000000000000uLL;
    *(void *)(a2 + 1248) = v47;
    *(void *)(a2 + 432) = v55;
    unsigned int v48 = *((_DWORD *)a1 + 23);
  }
  if (v48 == 7)
  {
    uint64_t v56 = *((unsigned int *)a1 + 21);
    *(void *)(a2 + 1248) = v47 | 0x80000000000000;
    *(void *)(a2 + 440) = v56;
    unsigned int v48 = *((_DWORD *)a1 + 23);
    if (v48 == 7)
    {
      v47 |= 0x180000000000000uLL;
      *(void *)(a2 + 448) = a1[88];
      unsigned int v48 = 7;
    }
    else
    {
      v47 |= 0x80000000000000uLL;
    }
  }
  uint64_t v57 = *((unsigned int *)a1 + 24);
  *(void *)(a2 + 456) = v48;
  *(void *)(a2 + 464) = v57;
  uint64_t v58 = *((unsigned int *)a1 + 26);
  *(void *)(a2 + 472) = a1[100];
  *(void *)(a2 + 480) = v58;
  uint64_t v59 = a1[109];
  *(void *)(a2 + 488) = a1[108];
  *(void *)(a2 + 496) = v59;
  uint64_t v60 = a1[110];
  *(void *)(a2 + 1248) = v47 | 0xFE00000000000000;
  uint64_t v61 = a1[111];
  *(void *)(a2 + 504) = v60;
  *(void *)(a2 + 512) = v61;
  uint64_t v62 = *((void *)a1 + 14);
  v63.n128_u64[0] = v62;
  v63.n128_u64[1] = HIDWORD(v62);
  *(__n128 *)(a2 + 520) = v63;
  *(void *)(a2 + 536) = a1[120];
  *(void *)(a2 + 544) = a1[121];
  *(void *)(a2 + 552) = a1[122];
  *(void *)(a2 + 560) = a1[123];
  *(void *)(a2 + 568) = a1[124];
  *(void *)(a2 + 576) = a1[125];
  *(void *)(a2 + 584) = a1[126];
  *(void *)(a2 + 592) = a1[127];
  uint64_t v64 = *((void *)a1 + 16);
  uint64_t v65 = *((void *)a1 + 17);
  v63.n128_u64[0] = v64;
  v63.n128_u64[1] = HIDWORD(v64);
  __n128 v66 = v63;
  v63.n128_u64[0] = v65;
  v63.n128_u64[1] = HIDWORD(v65);
  *(__n128 *)(a2 + 600) = v66;
  *(__n128 *)(a2 + 616) = v63;
  v66.n128_u64[0] = *((void *)a1 + 18);
  uint64_t v67 = *((void *)a1 + 19);
  v63.n128_u64[0] = v66.n128_u32[0];
  v63.n128_u64[1] = v66.n128_u32[1];
  __n128 result = v63;
  v63.n128_u64[0] = v67;
  v63.n128_u64[1] = HIDWORD(v67);
  *(__n128 *)(a2 + 632) = result;
  *(__n128 *)(a2 + 648) = v63;
  *(void *)(a2 + 664) = *((unsigned int *)a1 + 40);
  *(void *)(a2 + 672) = a1[164];
  uint64_t v69 = *((unsigned int *)a1 + 42);
  *(void *)(a2 + 1256) = 0x3FFFFFLL;
  *(void *)(a2 + 680) = v69;
  return result;
}

__n128 sub_1CBE62FD4(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = *(void *)(a1 + 20);
  v14.n128_u64[0] = v13;
  v14.n128_u64[1] = HIDWORD(v13);
  *(__n128 *)(a2 + 96) = v14;
  uint64_t v15 = *(void *)(a1 + 28);
  v14.n128_u64[0] = v15;
  v14.n128_u64[1] = HIDWORD(v15);
  *(__n128 *)(a2 + 112) = v14;
  uint64_t v16 = a1[37];
  *(void *)(a2 + 128) = a1[36];
  *(void *)(a2 + 136) = v16;
  uint64_t v17 = a1[39];
  *(void *)(a2 + 144) = a1[38];
  *(void *)(a2 + 152) = v17;
  uint64_t v18 = a1[41];
  *(void *)(a2 + 160) = a1[40];
  *(void *)(a2 + 168) = v18;
  uint64_t v19 = a1[43];
  *(void *)(a2 + 176) = a1[42];
  *(void *)(a2 + 184) = v19;
  uint64_t v20 = *(void *)(a1 + 44);
  v14.n128_u64[0] = v20;
  v14.n128_u64[1] = HIDWORD(v20);
  __n128 v21 = v14;
  uint64_t v22 = *(void *)(a1 + 52);
  v14.n128_u64[0] = v22;
  v14.n128_u64[1] = HIDWORD(v22);
  *(__n128 *)(a2 + 192) = v21;
  *(__n128 *)(a2 + 208) = v14;
  v21.n128_u64[0] = *(void *)(a1 + 60);
  v14.n128_u64[0] = v21.n128_u32[0];
  v14.n128_u64[1] = v21.n128_u32[1];
  __n128 result = v14;
  uint64_t v24 = *(void *)(a1 + 68);
  v14.n128_u64[0] = v24;
  v14.n128_u64[1] = HIDWORD(v24);
  *(__n128 *)(a2 + 224) = result;
  *(__n128 *)(a2 + 240) = v14;
  uint64_t v25 = a1[76];
  *(void *)(a2 + 1248) = v3 | 0x1FFFFFE00;
  *(void *)(a2 + 256) = v25;
  return result;
}

__n128 sub_1CBE63180(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = v16;
  uint64_t v26 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v25;
  *(void *)(a2 + 192) = v26;
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = a1[52];
  uint64_t v29 = a1[53];
  uint64_t v30 = v13 | 0x1F800000;
  *(void *)(a2 + 1248) = v13 | 0x1F800000;
  *(void *)(a2 + 216) = v28;
  *(void *)(a2 + 224) = v29;
  unsigned int v31 = *((_DWORD *)a1 + 16);
  if (!v31)
  {
    uint64_t v32 = a1[56];
    uint64_t v30 = v13 | 0x3F800000;
    *(void *)(a2 + 1248) = v13 | 0x3F800000;
    *(void *)(a2 + 232) = v32;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 1)
  {
    uint64_t v33 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x40000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 240) = v33;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 2)
  {
    uint64_t v34 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x80000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 248) = v34;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 3)
  {
    uint64_t v35 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 256) = v35;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 4)
  {
    uint64_t v36 = *((unsigned int *)a1 + 14);
    v30 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 264) = v36;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 5)
  {
    uint64_t v37 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 272) = v37;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 6)
  {
    uint64_t v38 = a1[56];
    v30 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 280) = v38;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 7)
  {
    uint64_t v39 = *((unsigned int *)a1 + 14);
    *(void *)(a2 + 1248) = v30 | 0x1000000000;
    *(void *)(a2 + 288) = v39;
    unsigned int v31 = *((_DWORD *)a1 + 16);
    if (v31 == 7)
    {
      v30 |= 0x3000000000uLL;
      *(void *)(a2 + 296) = a1[60];
    }
    else
    {
      v30 |= 0x1000000000uLL;
    }
  }
  uint64_t v40 = *((unsigned int *)a1 + 17);
  *(void *)(a2 + 304) = v31;
  *(void *)(a2 + 312) = v40;
  uint64_t v41 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 320) = a1[72];
  *(void *)(a2 + 328) = v41;
  uint64_t v42 = a1[81];
  *(void *)(a2 + 336) = a1[80];
  *(void *)(a2 + 344) = v42;
  uint64_t v43 = *(void *)(a1 + 84);
  v44.n128_u64[0] = v43;
  v44.n128_u64[1] = HIDWORD(v43);
  *(__n128 *)(a2 + 352) = v44;
  uint64_t v45 = a1[93];
  *(void *)(a2 + 368) = a1[92];
  *(void *)(a2 + 376) = v45;
  uint64_t v46 = a1[95];
  *(void *)(a2 + 384) = a1[94];
  *(void *)(a2 + 392) = v46;
  uint64_t v47 = a1[97];
  *(void *)(a2 + 400) = a1[96];
  *(void *)(a2 + 408) = v47;
  uint64_t v48 = a1[99];
  *(void *)(a2 + 416) = a1[98];
  *(void *)(a2 + 424) = v48;
  uint64_t v49 = *(void *)(a1 + 100);
  v44.n128_u64[0] = v49;
  v44.n128_u64[1] = HIDWORD(v49);
  __n128 v50 = v44;
  uint64_t v51 = *(void *)(a1 + 108);
  v44.n128_u64[0] = v51;
  v44.n128_u64[1] = HIDWORD(v51);
  *(__n128 *)(a2 + 432) = v50;
  *(__n128 *)(a2 + 448) = v44;
  v50.n128_u64[0] = *(void *)(a1 + 116);
  v44.n128_u64[0] = v50.n128_u32[0];
  v44.n128_u64[1] = v50.n128_u32[1];
  __n128 result = v44;
  uint64_t v53 = *(void *)(a1 + 124);
  v44.n128_u64[0] = v53;
  v44.n128_u64[1] = HIDWORD(v53);
  *(__n128 *)(a2 + 464) = result;
  *(__n128 *)(a2 + 480) = v44;
  uint64_t v54 = a1[132];
  *(void *)(a2 + 1248) = v30 | 0x7FFFFFC000000000;
  *(void *)(a2 + 496) = v54;
  return result;
}

__n128 sub_1CBE6357C(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  uint64_t v13 = *((unsigned int *)a1 + 5);
  *(void *)(a2 + 88) = a1[16];
  *(void *)(a2 + 96) = v13;
  uint64_t v14 = a1[25];
  *(void *)(a2 + 104) = a1[24];
  *(void *)(a2 + 112) = v14;
  uint64_t v15 = *(void *)(a1 + 28);
  v16.n128_u64[0] = v15;
  v16.n128_u64[1] = HIDWORD(v15);
  *(__n128 *)(a2 + 120) = v16;
  uint64_t v17 = a1[37];
  *(void *)(a2 + 136) = a1[36];
  *(void *)(a2 + 144) = v17;
  uint64_t v18 = a1[39];
  *(void *)(a2 + 152) = a1[38];
  *(void *)(a2 + 160) = v18;
  uint64_t v19 = a1[41];
  *(void *)(a2 + 168) = a1[40];
  *(void *)(a2 + 176) = v19;
  uint64_t v20 = a1[43];
  *(void *)(a2 + 184) = a1[42];
  *(void *)(a2 + 192) = v20;
  *(void *)(a2 + 200) = a1[44];
  uint64_t v21 = *((void *)a1 + 6);
  uint64_t v22 = *((void *)a1 + 7);
  v16.n128_u64[0] = v21;
  v16.n128_u64[1] = HIDWORD(v21);
  __n128 v23 = v16;
  v16.n128_u64[0] = v22;
  v16.n128_u64[1] = HIDWORD(v22);
  *(__n128 *)(a2 + 208) = v23;
  *(__n128 *)(a2 + 224) = v16;
  v23.n128_u64[0] = *((void *)a1 + 8);
  uint64_t v24 = *((void *)a1 + 9);
  v16.n128_u64[0] = v23.n128_u32[0];
  v16.n128_u64[1] = v23.n128_u32[1];
  __n128 result = v16;
  v16.n128_u64[0] = v24;
  v16.n128_u64[1] = HIDWORD(v24);
  *(__n128 *)(a2 + 240) = result;
  *(__n128 *)(a2 + 256) = v16;
  uint64_t v26 = a1[80];
  *(void *)(a2 + 1248) = v3 | 0x7FFFFFE00;
  *(void *)(a2 + 272) = v26;
  return result;
}

float sub_1CBE6372C(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(void *)(a2 + 1256) = 0;
  uint64_t v2 = a1[1];
  *(void *)a2 = *a1;
  *(void *)(a2 + 8) = v2;
  uint64_t v3 = *(void *)(a1 + 4);
  *(void *)&long long v4 = v3;
  *((void *)&v4 + 1) = HIDWORD(v3);
  *(_OWORD *)(a2 + 16) = v4;
  uint64_t v5 = *((void *)a1 + 3);
  uint64_t v6 = *((void *)a1 + 4);
  *(void *)&long long v4 = v5;
  *((void *)&v4 + 1) = HIDWORD(v5);
  *(_OWORD *)(a2 + 104) = v4;
  *(void *)&long long v4 = v6;
  *((void *)&v4 + 1) = HIDWORD(v6);
  *(_OWORD *)(a2 + 120) = v4;
  uint64_t v7 = *((void *)a1 + 5);
  uint64_t v8 = *((void *)a1 + 6);
  *(void *)&long long v4 = v7;
  *((void *)&v4 + 1) = HIDWORD(v7);
  *(_OWORD *)(a2 + 136) = v4;
  uint64_t v9 = a1[13];
  *(void *)(a2 + 32) = a1[12];
  *(void *)(a2 + 40) = v9;
  uint64_t v10 = a1[15];
  *(void *)(a2 + 48) = a1[14];
  *(void *)(a2 + 56) = v10;
  uint64_t v11 = a1[17];
  *(void *)(a2 + 64) = a1[16];
  *(void *)(a2 + 72) = v11;
  uint64_t v12 = a1[19];
  *(void *)(a2 + 80) = a1[18];
  *(void *)(a2 + 88) = v12;
  *(void *)(a2 + 96) = *((unsigned __int16 *)a1 + 10);
  *(void *)&long long v4 = v8;
  *((void *)&v4 + 1) = HIDWORD(v8);
  float result = *(float *)&v8;
  *(_OWORD *)(a2 + 152) = v4;
  uint64_t v14 = a1[56];
  *(void *)(a2 + 1248) = 0x3FFFFFLL;
  *(void *)(a2 + 168) = v14;
  return result;
}

float sub_1CBE637C0(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(void *)(a2 + 1256) = 0;
  uint64_t v2 = a1[1];
  *(void *)a2 = *a1;
  *(void *)(a2 + 8) = v2;
  uint64_t v3 = *(void *)(a1 + 4);
  *(void *)&long long v4 = v3;
  *((void *)&v4 + 1) = HIDWORD(v3);
  *(_OWORD *)(a2 + 16) = v4;
  uint64_t v5 = *((void *)a1 + 3);
  uint64_t v6 = *((void *)a1 + 4);
  *(void *)&long long v4 = v5;
  *((void *)&v4 + 1) = HIDWORD(v5);
  *(_OWORD *)(a2 + 104) = v4;
  *(void *)&long long v4 = v6;
  *((void *)&v4 + 1) = HIDWORD(v6);
  *(_OWORD *)(a2 + 120) = v4;
  uint64_t v7 = *((void *)a1 + 5);
  uint64_t v8 = *((void *)a1 + 6);
  *(void *)&long long v4 = v7;
  *((void *)&v4 + 1) = HIDWORD(v7);
  *(_OWORD *)(a2 + 136) = v4;
  uint64_t v9 = a1[13];
  *(void *)(a2 + 32) = a1[12];
  *(void *)(a2 + 40) = v9;
  uint64_t v10 = a1[15];
  *(void *)(a2 + 48) = a1[14];
  *(void *)(a2 + 56) = v10;
  uint64_t v11 = a1[17];
  *(void *)(a2 + 64) = a1[16];
  *(void *)(a2 + 72) = v11;
  uint64_t v12 = a1[19];
  *(void *)(a2 + 80) = a1[18];
  *(void *)(a2 + 88) = v12;
  *(void *)(a2 + 96) = *((unsigned __int16 *)a1 + 10);
  *(void *)&long long v4 = v8;
  *((void *)&v4 + 1) = HIDWORD(v8);
  float result = *(float *)&v8;
  *(_OWORD *)(a2 + 152) = v4;
  uint64_t v14 = a1[56];
  *(void *)(a2 + 1248) = 0x3FFFFFLL;
  *(void *)(a2 + 168) = v14;
  return result;
}

float sub_1CBE63854(uint64_t a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(void *)(a2 + 1256) = 0;
  *(void *)&long long v2 = *(void *)a1;
  *((void *)&v2 + 1) = HIDWORD(*(void *)a1);
  *(_OWORD *)a2 = v2;
  uint64_t v3 = *(unsigned __int8 *)(a1 + 9);
  *(void *)(a2 + 16) = *(unsigned __int8 *)(a1 + 8);
  *(void *)(a2 + 24) = v3;
  uint64_t v4 = *(unsigned __int8 *)(a1 + 11);
  *(void *)(a2 + 32) = *(unsigned __int8 *)(a1 + 10);
  *(void *)(a2 + 40) = v4;
  uint64_t v5 = *(unsigned __int8 *)(a1 + 13);
  *(void *)(a2 + 48) = *(unsigned __int8 *)(a1 + 12);
  *(void *)(a2 + 56) = v5;
  uint64_t v6 = *(unsigned __int8 *)(a1 + 15);
  *(void *)(a2 + 64) = *(unsigned __int8 *)(a1 + 14);
  *(void *)(a2 + 72) = v6;
  *(void *)(a2 + 80) = *(unsigned __int16 *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 20);
  *(void *)&long long v2 = v7;
  *((void *)&v2 + 1) = HIDWORD(v7);
  *(_OWORD *)(a2 + 88) = v2;
  uint64_t v8 = *(void *)(a1 + 28);
  *(void *)&long long v2 = v8;
  *((void *)&v2 + 1) = HIDWORD(v8);
  *(_OWORD *)(a2 + 104) = v2;
  uint64_t v9 = *(void *)(a1 + 36);
  *(void *)&long long v2 = v9;
  *((void *)&v2 + 1) = HIDWORD(v9);
  *(_OWORD *)(a2 + 120) = v2;
  uint64_t v10 = *(void *)(a1 + 44);
  *(void *)&long long v2 = v10;
  *((void *)&v2 + 1) = HIDWORD(v10);
  *(_OWORD *)(a2 + 136) = v2;
  uint64_t v11 = *(unsigned __int8 *)(a1 + 52);
  *(void *)(a2 + 1248) = 0xFFFFFLL;
  *(void *)(a2 + 152) = v11;
  return *(float *)&v10;
}

float sub_1CBE638E4(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(void *)(a2 + 1256) = 0;
  uint64_t v2 = a1[1];
  *(void *)a2 = *a1;
  *(void *)(a2 + 8) = v2;
  uint64_t v3 = *(void *)(a1 + 4);
  *(void *)&long long v4 = v3;
  *((void *)&v4 + 1) = HIDWORD(v3);
  *(_OWORD *)(a2 + 16) = v4;
  uint64_t v5 = *((void *)a1 + 3);
  uint64_t v6 = *((void *)a1 + 4);
  *(void *)&long long v4 = v5;
  *((void *)&v4 + 1) = HIDWORD(v5);
  *(_OWORD *)(a2 + 104) = v4;
  *(void *)&long long v4 = v6;
  *((void *)&v4 + 1) = HIDWORD(v6);
  *(_OWORD *)(a2 + 120) = v4;
  uint64_t v7 = *((void *)a1 + 5);
  uint64_t v8 = *((void *)a1 + 6);
  *(void *)&long long v4 = v7;
  *((void *)&v4 + 1) = HIDWORD(v7);
  *(_OWORD *)(a2 + 136) = v4;
  uint64_t v9 = a1[13];
  *(void *)(a2 + 32) = a1[12];
  *(void *)(a2 + 40) = v9;
  uint64_t v10 = a1[15];
  *(void *)(a2 + 48) = a1[14];
  *(void *)(a2 + 56) = v10;
  uint64_t v11 = a1[17];
  *(void *)(a2 + 64) = a1[16];
  *(void *)(a2 + 72) = v11;
  uint64_t v12 = a1[19];
  *(void *)(a2 + 80) = a1[18];
  *(void *)(a2 + 88) = v12;
  *(void *)(a2 + 96) = *((unsigned __int16 *)a1 + 10);
  *(void *)&long long v4 = v8;
  *((void *)&v4 + 1) = HIDWORD(v8);
  float result = *(float *)&v8;
  *(_OWORD *)(a2 + 152) = v4;
  uint64_t v14 = a1[56];
  *(void *)(a2 + 1248) = 0x3FFFFFLL;
  *(void *)(a2 + 168) = v14;
  return result;
}

float sub_1CBE63978(uint64_t a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(void *)(a2 + 1256) = 0;
  *(void *)&long long v2 = *(void *)a1;
  *((void *)&v2 + 1) = HIDWORD(*(void *)a1);
  *(_OWORD *)a2 = v2;
  uint64_t v3 = *(unsigned __int8 *)(a1 + 9);
  *(void *)(a2 + 16) = *(unsigned __int8 *)(a1 + 8);
  *(void *)(a2 + 24) = v3;
  uint64_t v4 = *(unsigned __int8 *)(a1 + 11);
  *(void *)(a2 + 32) = *(unsigned __int8 *)(a1 + 10);
  *(void *)(a2 + 40) = v4;
  uint64_t v5 = *(unsigned __int8 *)(a1 + 13);
  *(void *)(a2 + 48) = *(unsigned __int8 *)(a1 + 12);
  *(void *)(a2 + 56) = v5;
  uint64_t v6 = *(unsigned __int8 *)(a1 + 15);
  *(void *)(a2 + 64) = *(unsigned __int8 *)(a1 + 14);
  *(void *)(a2 + 72) = v6;
  *(void *)(a2 + 80) = *(unsigned __int8 *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 20);
  *(void *)&long long v2 = v7;
  *((void *)&v2 + 1) = HIDWORD(v7);
  *(_OWORD *)(a2 + 88) = v2;
  uint64_t v8 = *(void *)(a1 + 28);
  *(void *)&long long v2 = v8;
  *((void *)&v2 + 1) = HIDWORD(v8);
  *(_OWORD *)(a2 + 104) = v2;
  uint64_t v9 = *(void *)(a1 + 36);
  *(void *)&long long v2 = v9;
  *((void *)&v2 + 1) = HIDWORD(v9);
  *(_OWORD *)(a2 + 120) = v2;
  uint64_t v10 = *(void *)(a1 + 44);
  *(void *)&long long v2 = v10;
  *((void *)&v2 + 1) = HIDWORD(v10);
  *(_OWORD *)(a2 + 136) = v2;
  uint64_t v11 = *(unsigned __int8 *)(a1 + 52);
  *(void *)(a2 + 1248) = 0xFFFFFLL;
  *(void *)(a2 + 152) = v11;
  return *(float *)&v10;
}

float sub_1CBE63A08(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(void *)(a2 + 1256) = 0;
  uint64_t v2 = a1[1];
  *(void *)a2 = *a1;
  *(void *)(a2 + 8) = v2;
  uint64_t v3 = *(void *)(a1 + 4);
  *(void *)&long long v4 = v3;
  *((void *)&v4 + 1) = HIDWORD(v3);
  *(_OWORD *)(a2 + 16) = v4;
  uint64_t v5 = *((void *)a1 + 3);
  uint64_t v6 = *((void *)a1 + 4);
  *(void *)&long long v4 = v5;
  *((void *)&v4 + 1) = HIDWORD(v5);
  *(_OWORD *)(a2 + 104) = v4;
  *(void *)&long long v4 = v6;
  *((void *)&v4 + 1) = HIDWORD(v6);
  *(_OWORD *)(a2 + 120) = v4;
  uint64_t v7 = *((void *)a1 + 5);
  uint64_t v8 = *((void *)a1 + 6);
  *(void *)&long long v4 = v7;
  *((void *)&v4 + 1) = HIDWORD(v7);
  *(_OWORD *)(a2 + 136) = v4;
  uint64_t v9 = a1[13];
  *(void *)(a2 + 32) = a1[12];
  *(void *)(a2 + 40) = v9;
  uint64_t v10 = a1[15];
  *(void *)(a2 + 48) = a1[14];
  *(void *)(a2 + 56) = v10;
  uint64_t v11 = a1[17];
  *(void *)(a2 + 64) = a1[16];
  *(void *)(a2 + 72) = v11;
  uint64_t v12 = a1[19];
  *(void *)(a2 + 80) = a1[18];
  *(void *)(a2 + 88) = v12;
  *(void *)(a2 + 96) = *((unsigned __int16 *)a1 + 10);
  *(void *)&long long v4 = v8;
  *((void *)&v4 + 1) = HIDWORD(v8);
  float result = *(float *)&v8;
  *(_OWORD *)(a2 + 152) = v4;
  uint64_t v14 = a1[56];
  *(void *)(a2 + 1248) = 0x3FFFFFLL;
  *(void *)(a2 + 168) = v14;
  return result;
}

__n128 sub_1CBE63A9C(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  uint64_t v13 = *((unsigned int *)a1 + 5);
  *(void *)(a2 + 88) = a1[16];
  *(void *)(a2 + 96) = v13;
  *(void *)(a2 + 104) = a1[24];
  uint64_t v14 = *(void *)(a1 + 28);
  v15.n128_u64[0] = v14;
  v15.n128_u64[1] = HIDWORD(v14);
  *(__n128 *)(a2 + 112) = v15;
  uint64_t v16 = a1[37];
  *(void *)(a2 + 128) = a1[36];
  *(void *)(a2 + 136) = v16;
  uint64_t v17 = a1[39];
  *(void *)(a2 + 144) = a1[38];
  *(void *)(a2 + 152) = v17;
  uint64_t v18 = a1[41];
  *(void *)(a2 + 160) = a1[40];
  *(void *)(a2 + 168) = v18;
  uint64_t v19 = a1[43];
  *(void *)(a2 + 176) = a1[42];
  *(void *)(a2 + 184) = v19;
  uint64_t v20 = *(void *)(a1 + 44);
  v15.n128_u64[0] = v20;
  v15.n128_u64[1] = HIDWORD(v20);
  __n128 v21 = v15;
  uint64_t v22 = *(void *)(a1 + 52);
  v15.n128_u64[0] = v22;
  v15.n128_u64[1] = HIDWORD(v22);
  *(__n128 *)(a2 + 192) = v21;
  *(__n128 *)(a2 + 208) = v15;
  v21.n128_u64[0] = *(void *)(a1 + 60);
  v15.n128_u64[0] = v21.n128_u32[0];
  v15.n128_u64[1] = v21.n128_u32[1];
  __n128 result = v15;
  uint64_t v24 = *(void *)(a1 + 68);
  v15.n128_u64[0] = v24;
  v15.n128_u64[1] = HIDWORD(v24);
  *(__n128 *)(a2 + 224) = result;
  *(__n128 *)(a2 + 240) = v15;
  uint64_t v25 = a1[76];
  *(void *)(a2 + 1248) = v3 | 0x1FFFFFE00;
  *(void *)(a2 + 256) = v25;
  return result;
}

__n128 sub_1CBE63C48(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v16;
  *(void *)(a2 + 192) = v25;
  uint64_t v26 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v26;
  *(void *)(a2 + 216) = a1[52];
  uint64_t v27 = *((void *)a1 + 7);
  v28.n128_u64[0] = v27;
  v28.n128_u64[1] = HIDWORD(v27);
  *(__n128 *)(a2 + 224) = v28;
  uint64_t v29 = a1[65];
  *(void *)(a2 + 240) = a1[64];
  *(void *)(a2 + 248) = v29;
  uint64_t v30 = a1[67];
  *(void *)(a2 + 256) = a1[66];
  *(void *)(a2 + 264) = v30;
  uint64_t v31 = a1[69];
  *(void *)(a2 + 272) = a1[68];
  *(void *)(a2 + 280) = v31;
  uint64_t v32 = a1[71];
  *(void *)(a2 + 288) = a1[70];
  *(void *)(a2 + 296) = v32;
  uint64_t v33 = *((void *)a1 + 9);
  uint64_t v34 = *((void *)a1 + 10);
  v28.n128_u64[0] = v33;
  v28.n128_u64[1] = HIDWORD(v33);
  __n128 v35 = v28;
  v28.n128_u64[0] = v34;
  v28.n128_u64[1] = HIDWORD(v34);
  *(__n128 *)(a2 + 304) = v35;
  *(__n128 *)(a2 + 320) = v28;
  v35.n128_u64[0] = *((void *)a1 + 11);
  uint64_t v36 = *((void *)a1 + 12);
  v28.n128_u64[0] = v35.n128_u32[0];
  v28.n128_u64[1] = v35.n128_u32[1];
  __n128 result = v28;
  v28.n128_u64[0] = v36;
  v28.n128_u64[1] = HIDWORD(v36);
  *(__n128 *)(a2 + 336) = result;
  *(__n128 *)(a2 + 352) = v28;
  uint64_t v38 = a1[104];
  *(void *)(a2 + 1248) = v13 | 0x7FFFFF800000;
  *(void *)(a2 + 368) = v38;
  return result;
}

float sub_1CBE63F10(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(void *)(a2 + 1256) = 0;
  *(void *)a2 = *a1;
  uint64_t v2 = *(void *)(a1 + 4);
  *(void *)&long long v3 = v2;
  *((void *)&v3 + 1) = HIDWORD(v2);
  *(_OWORD *)(a2 + 8) = v3;
  uint64_t v4 = a1[13];
  *(void *)(a2 + 24) = a1[12];
  *(void *)(a2 + 32) = v4;
  uint64_t v5 = a1[15];
  *(void *)(a2 + 40) = a1[14];
  *(void *)(a2 + 48) = v5;
  uint64_t v6 = a1[17];
  *(void *)(a2 + 56) = a1[16];
  *(void *)(a2 + 64) = v6;
  uint64_t v7 = a1[19];
  *(void *)(a2 + 72) = a1[18];
  *(void *)(a2 + 80) = v7;
  uint64_t v8 = *(void *)(a1 + 20);
  *(void *)&long long v3 = v8;
  *((void *)&v3 + 1) = HIDWORD(v8);
  *(_OWORD *)(a2 + 88) = v3;
  uint64_t v9 = *(void *)(a1 + 28);
  *(void *)&long long v3 = v9;
  *((void *)&v3 + 1) = HIDWORD(v9);
  *(_OWORD *)(a2 + 104) = v3;
  uint64_t v10 = *(void *)(a1 + 36);
  *(void *)&long long v3 = v10;
  *((void *)&v3 + 1) = HIDWORD(v10);
  *(_OWORD *)(a2 + 120) = v3;
  uint64_t v11 = *(void *)(a1 + 44);
  *(void *)&long long v3 = v11;
  *((void *)&v3 + 1) = HIDWORD(v11);
  *(_OWORD *)(a2 + 136) = v3;
  uint64_t v12 = a1[52];
  *(void *)(a2 + 1248) = 0xFFFFFLL;
  *(void *)(a2 + 152) = v12;
  return *(float *)&v11;
}

float sub_1CBE63FA0(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  uint64_t v13 = *((unsigned int *)a1 + 5);
  *(void *)(a2 + 88) = a1[16];
  *(void *)(a2 + 96) = v13;
  *(void *)(a2 + 104) = a1[24];
  uint64_t v14 = *(void *)(a1 + 28);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 112) = v15;
  uint64_t v16 = a1[40];
  *(void *)(a2 + 128) = *((unsigned int *)a1 + 9);
  *(void *)(a2 + 136) = v16;
  uint64_t v17 = a1[42];
  *(void *)(a2 + 144) = a1[41];
  *(void *)(a2 + 152) = v17;
  uint64_t v18 = a1[44];
  *(void *)(a2 + 160) = a1[43];
  *(void *)(a2 + 168) = v18;
  uint64_t v19 = a1[46];
  *(void *)(a2 + 176) = a1[45];
  *(void *)(a2 + 184) = v19;
  uint64_t v20 = a1[48];
  *(void *)(a2 + 192) = a1[47];
  *(void *)(a2 + 200) = v20;
  *(void *)(a2 + 208) = a1[49];
  uint64_t v21 = *(void *)(a1 + 52);
  *(void *)&long long v15 = v21;
  *((void *)&v15 + 1) = HIDWORD(v21);
  *(_OWORD *)(a2 + 216) = v15;
  uint64_t v22 = *(void *)(a1 + 60);
  *(void *)&long long v15 = v22;
  *((void *)&v15 + 1) = HIDWORD(v22);
  *(_OWORD *)(a2 + 232) = v15;
  uint64_t v23 = *(void *)(a1 + 68);
  *(void *)&long long v15 = v23;
  *((void *)&v15 + 1) = HIDWORD(v23);
  *(_OWORD *)(a2 + 248) = v15;
  uint64_t v24 = *(void *)(a1 + 76);
  *(void *)&long long v15 = v24;
  *((void *)&v15 + 1) = HIDWORD(v24);
  *(_OWORD *)(a2 + 264) = v15;
  uint64_t v25 = *((unsigned int *)a1 + 21);
  uint64_t v26 = a1[88];
  *(void *)(a2 + 1248) = v3 | 0x1FFFFFFE00;
  *(void *)(a2 + 280) = v25;
  *(void *)(a2 + 288) = v26;
  return *(float *)&v24;
}

__n128 sub_1CBE64170(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = v16;
  uint64_t v26 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v25;
  *(void *)(a2 + 192) = v26;
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = a1[52];
  uint64_t v29 = a1[53];
  uint64_t v30 = v13 | 0x1F800000;
  *(void *)(a2 + 1248) = v13 | 0x1F800000;
  *(void *)(a2 + 216) = v28;
  *(void *)(a2 + 224) = v29;
  unsigned int v31 = *((_DWORD *)a1 + 16);
  if (!v31)
  {
    uint64_t v32 = a1[56];
    uint64_t v30 = v13 | 0x3F800000;
    *(void *)(a2 + 1248) = v13 | 0x3F800000;
    *(void *)(a2 + 232) = v32;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 1)
  {
    uint64_t v33 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x40000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 240) = v33;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 2)
  {
    uint64_t v34 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x80000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 248) = v34;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 3)
  {
    uint64_t v35 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 256) = v35;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 4)
  {
    uint64_t v36 = *((unsigned int *)a1 + 14);
    v30 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 264) = v36;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 5)
  {
    uint64_t v37 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 272) = v37;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 6)
  {
    uint64_t v38 = a1[56];
    v30 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 280) = v38;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 7)
  {
    uint64_t v39 = *((unsigned int *)a1 + 14);
    *(void *)(a2 + 1248) = v30 | 0x1000000000;
    *(void *)(a2 + 288) = v39;
    unsigned int v31 = *((_DWORD *)a1 + 16);
    if (v31 == 7)
    {
      v30 |= 0x3000000000uLL;
      *(void *)(a2 + 296) = a1[60];
    }
    else
    {
      v30 |= 0x1000000000uLL;
    }
  }
  uint64_t v40 = v31;
  uint64_t v41 = *((unsigned int *)a1 + 17);
  *(void *)(a2 + 304) = v40;
  *(void *)(a2 + 312) = v41;
  uint64_t v42 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 320) = a1[72];
  *(void *)(a2 + 328) = v42;
  uint64_t v43 = a1[80];
  uint64_t v44 = a1[81];
  uint64_t v45 = v30 | 0xFC000000000;
  *(void *)(a2 + 1248) = v30 | 0xFC000000000;
  *(void *)(a2 + 336) = v43;
  *(void *)(a2 + 344) = v44;
  unsigned int v46 = *((_DWORD *)a1 + 23);
  if (!v46)
  {
    uint64_t v47 = a1[84];
    uint64_t v45 = v30 | 0x1FC000000000;
    *(void *)(a2 + 1248) = v30 | 0x1FC000000000;
    *(void *)(a2 + 352) = v47;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 1)
  {
    uint64_t v48 = *((unsigned __int16 *)a1 + 42);
    v45 |= 0x200000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 360) = v48;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 2)
  {
    uint64_t v49 = *((unsigned __int16 *)a1 + 42);
    v45 |= 0x400000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 368) = v49;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 3)
  {
    uint64_t v50 = *((unsigned __int16 *)a1 + 42);
    v45 |= 0x800000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 376) = v50;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 4)
  {
    uint64_t v51 = *((unsigned int *)a1 + 21);
    v45 |= 0x1000000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 384) = v51;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 5)
  {
    uint64_t v52 = *((unsigned __int16 *)a1 + 42);
    v45 |= 0x2000000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 392) = v52;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 6)
  {
    uint64_t v53 = a1[84];
    v45 |= 0x4000000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 400) = v53;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 7)
  {
    uint64_t v54 = *((unsigned int *)a1 + 21);
    *(void *)(a2 + 1248) = v45 | 0x8000000000000;
    *(void *)(a2 + 408) = v54;
    unsigned int v46 = *((_DWORD *)a1 + 23);
    if (v46 == 7)
    {
      v45 |= 0x18000000000000uLL;
      *(void *)(a2 + 416) = a1[88];
    }
    else
    {
      v45 |= 0x8000000000000uLL;
    }
  }
  uint64_t v55 = v46;
  uint64_t v56 = *((unsigned int *)a1 + 24);
  *(void *)(a2 + 424) = v55;
  *(void *)(a2 + 432) = v56;
  uint64_t v57 = *((unsigned int *)a1 + 26);
  *(void *)(a2 + 440) = a1[100];
  *(void *)(a2 + 448) = v57;
  uint64_t v58 = a1[108];
  uint64_t v59 = a1[109];
  uint64_t v60 = v45 | 0x7E0000000000000;
  *(void *)(a2 + 1248) = v45 | 0x7E0000000000000;
  *(void *)(a2 + 456) = v58;
  *(void *)(a2 + 464) = v59;
  unsigned int v61 = *((_DWORD *)a1 + 30);
  if (!v61)
  {
    uint64_t v62 = a1[112];
    uint64_t v60 = v45 | 0xFE0000000000000;
    *(void *)(a2 + 1248) = v45 | 0xFE0000000000000;
    *(void *)(a2 + 472) = v62;
    unsigned int v61 = *((_DWORD *)a1 + 30);
  }
  if (v61 == 1)
  {
    uint64_t v63 = *((unsigned __int16 *)a1 + 56);
    v60 |= 0x1000000000000000uLL;
    *(void *)(a2 + 1248) = v60;
    *(void *)(a2 + 480) = v63;
    unsigned int v61 = *((_DWORD *)a1 + 30);
  }
  if (v61 == 2)
  {
    uint64_t v64 = *((unsigned __int16 *)a1 + 56);
    v60 |= 0x2000000000000000uLL;
    *(void *)(a2 + 1248) = v60;
    *(void *)(a2 + 488) = v64;
    unsigned int v61 = *((_DWORD *)a1 + 30);
  }
  if (v61 == 3)
  {
    uint64_t v65 = *((unsigned __int16 *)a1 + 56);
    v60 |= 0x4000000000000000uLL;
    *(void *)(a2 + 1248) = v60;
    *(void *)(a2 + 496) = v65;
    unsigned int v61 = *((_DWORD *)a1 + 30);
  }
  if (v61 == 4)
  {
    uint64_t v66 = *((unsigned int *)a1 + 28);
    *(void *)(a2 + 1248) = v60 | 0x8000000000000000;
    *(void *)(a2 + 504) = v66;
    unsigned int v61 = *((_DWORD *)a1 + 30);
  }
  if (v61 == 5)
  {
    uint64_t v67 = *((unsigned __int16 *)a1 + 56);
    uint64_t v68 = 1;
    *(void *)(a2 + 1256) = 1;
    *(void *)(a2 + 512) = v67;
    unsigned int v61 = *((_DWORD *)a1 + 30);
  }
  else
  {
    uint64_t v68 = 0;
  }
  if (v61 == 6)
  {
    uint64_t v69 = a1[112];
    v68 |= 2uLL;
    *(void *)(a2 + 1256) = v68;
    *(void *)(a2 + 520) = v69;
    unsigned int v61 = *((_DWORD *)a1 + 30);
  }
  if (v61 == 7)
  {
    uint64_t v70 = *((unsigned int *)a1 + 28);
    *(void *)(a2 + 1256) = v68 | 4;
    *(void *)(a2 + 528) = v70;
    unsigned int v61 = *((_DWORD *)a1 + 30);
    if (v61 == 7)
    {
      v68 |= 0xCuLL;
      *(void *)(a2 + 536) = a1[116];
      unsigned int v61 = 7;
    }
    else
    {
      v68 |= 4uLL;
    }
  }
  *(void *)(a2 + 544) = v61;
  *(void *)(a2 + 552) = *((unsigned int *)a1 + 31);
  *(void *)(a2 + 560) = a1[128];
  *(void *)(a2 + 568) = *((unsigned int *)a1 + 33);
  *(void *)(a2 + 576) = a1[136];
  uint64_t v71 = *(void *)(a1 + 140);
  v72.n128_u64[0] = v71;
  v72.n128_u64[1] = HIDWORD(v71);
  *(__n128 *)(a2 + 584) = v72;
  *(void *)(a2 + 600) = a1[148];
  *(void *)(a2 + 608) = a1[149];
  *(void *)(a2 + 616) = a1[150];
  *(void *)(a2 + 624) = a1[151];
  *(void *)(a2 + 632) = a1[152];
  *(void *)(a2 + 640) = a1[153];
  *(void *)(a2 + 648) = a1[154];
  *(void *)(a2 + 656) = a1[155];
  uint64_t v73 = *(void *)(a1 + 156);
  v72.n128_u64[0] = v73;
  v72.n128_u64[1] = HIDWORD(v73);
  __n128 v74 = v72;
  uint64_t v75 = *(void *)(a1 + 164);
  v72.n128_u64[0] = v75;
  v72.n128_u64[1] = HIDWORD(v75);
  *(__n128 *)(a2 + 664) = v74;
  *(__n128 *)(a2 + 680) = v72;
  v74.n128_u64[0] = *(void *)(a1 + 172);
  v72.n128_u64[0] = v74.n128_u32[0];
  v72.n128_u64[1] = v74.n128_u32[1];
  __n128 result = v72;
  uint64_t v77 = *(void *)(a1 + 180);
  v72.n128_u64[0] = v77;
  v72.n128_u64[1] = HIDWORD(v77);
  *(__n128 *)(a2 + 696) = result;
  *(__n128 *)(a2 + 712) = v72;
  uint64_t v78 = a1[188];
  *(void *)(a2 + 1256) = v68 | 0xFFFFFF0;
  *(void *)(a2 + 728) = v78;
  return result;
}

__n128 sub_1CBE647E0(uint64_t a1, __n128 *a2)
{
  a2[79].n128_u64[0] = 0;
  a2[78].n128_u64[1] = 0;
  v2.n128_u64[0] = *(void *)a1;
  v2.n128_u64[1] = HIDWORD(*(void *)a1);
  *a2 = v2;
  unint64_t v3 = *(unsigned __int8 *)(a1 + 9);
  a2[1].n128_u64[0] = *(unsigned __int8 *)(a1 + 8);
  a2[1].n128_u64[1] = v3;
  unint64_t v4 = *(unsigned __int8 *)(a1 + 11);
  a2[2].n128_u64[0] = *(unsigned __int8 *)(a1 + 10);
  a2[2].n128_u64[1] = v4;
  unint64_t v5 = *(unsigned __int8 *)(a1 + 13);
  a2[3].n128_u64[0] = *(unsigned __int8 *)(a1 + 12);
  a2[3].n128_u64[1] = v5;
  unint64_t v6 = *(unsigned __int8 *)(a1 + 15);
  a2[4].n128_u64[0] = *(unsigned __int8 *)(a1 + 14);
  a2[4].n128_u64[1] = v6;
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  v2.n128_u64[0] = v7;
  v2.n128_u64[1] = HIDWORD(v7);
  __n128 v9 = v2;
  v2.n128_u64[0] = v8;
  v2.n128_u64[1] = HIDWORD(v8);
  a2[5] = v9;
  a2[6] = v2;
  v9.n128_u64[0] = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  v2.n128_u64[0] = v9.n128_u32[0];
  v2.n128_u64[1] = v9.n128_u32[1];
  __n128 result = v2;
  v2.n128_u64[0] = v10;
  v2.n128_u64[1] = HIDWORD(v10);
  a2[7] = result;
  a2[8] = v2;
  unint64_t v12 = *(unsigned __int8 *)(a1 + 48);
  a2[78].n128_u64[0] = 0x7FFFFLL;
  a2[9].n128_u64[0] = v12;
  return result;
}

__n128 sub_1CBE64858(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = v16;
  uint64_t v26 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v25;
  *(void *)(a2 + 192) = v26;
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = a1[52];
  uint64_t v29 = a1[53];
  uint64_t v30 = v13 | 0x1F800000;
  *(void *)(a2 + 1248) = v13 | 0x1F800000;
  *(void *)(a2 + 216) = v28;
  *(void *)(a2 + 224) = v29;
  unsigned int v31 = *((_DWORD *)a1 + 16);
  if (!v31)
  {
    uint64_t v32 = a1[56];
    uint64_t v30 = v13 | 0x3F800000;
    *(void *)(a2 + 1248) = v13 | 0x3F800000;
    *(void *)(a2 + 232) = v32;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 1)
  {
    uint64_t v33 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x40000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 240) = v33;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 2)
  {
    uint64_t v34 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x80000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 248) = v34;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 3)
  {
    uint64_t v35 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 256) = v35;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 4)
  {
    uint64_t v36 = *((unsigned int *)a1 + 14);
    v30 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 264) = v36;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 5)
  {
    uint64_t v37 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 272) = v37;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 6)
  {
    uint64_t v38 = a1[56];
    v30 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 280) = v38;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 7)
  {
    uint64_t v39 = *((unsigned int *)a1 + 14);
    *(void *)(a2 + 1248) = v30 | 0x1000000000;
    *(void *)(a2 + 288) = v39;
    unsigned int v31 = *((_DWORD *)a1 + 16);
    if (v31 == 7)
    {
      v30 |= 0x3000000000uLL;
      *(void *)(a2 + 296) = a1[60];
    }
    else
    {
      v30 |= 0x1000000000uLL;
    }
  }
  uint64_t v40 = v31;
  uint64_t v41 = *((unsigned int *)a1 + 17);
  *(void *)(a2 + 304) = v40;
  *(void *)(a2 + 312) = v41;
  uint64_t v42 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 320) = a1[72];
  *(void *)(a2 + 328) = v42;
  uint64_t v43 = a1[80];
  uint64_t v44 = v30 | 0x7C000000000;
  *(void *)(a2 + 1248) = v30 | 0x7C000000000;
  *(void *)(a2 + 336) = v43;
  unsigned int v45 = *((_DWORD *)a1 + 23);
  if (!v45)
  {
    uint64_t v46 = a1[84];
    uint64_t v44 = v30 | 0xFC000000000;
    *(void *)(a2 + 1248) = v30 | 0xFC000000000;
    *(void *)(a2 + 344) = v46;
    unsigned int v45 = *((_DWORD *)a1 + 23);
  }
  if (v45 == 1)
  {
    uint64_t v47 = *((unsigned __int16 *)a1 + 42);
    v44 |= 0x100000000000uLL;
    *(void *)(a2 + 1248) = v44;
    *(void *)(a2 + 352) = v47;
    unsigned int v45 = *((_DWORD *)a1 + 23);
  }
  if (v45 == 2)
  {
    uint64_t v48 = *((unsigned __int16 *)a1 + 42);
    v44 |= 0x200000000000uLL;
    *(void *)(a2 + 1248) = v44;
    *(void *)(a2 + 360) = v48;
    unsigned int v45 = *((_DWORD *)a1 + 23);
  }
  if (v45 == 3)
  {
    uint64_t v49 = *((unsigned __int16 *)a1 + 42);
    v44 |= 0x400000000000uLL;
    *(void *)(a2 + 1248) = v44;
    *(void *)(a2 + 368) = v49;
    unsigned int v45 = *((_DWORD *)a1 + 23);
  }
  if (v45 == 4)
  {
    uint64_t v50 = *((unsigned int *)a1 + 21);
    v44 |= 0x800000000000uLL;
    *(void *)(a2 + 1248) = v44;
    *(void *)(a2 + 376) = v50;
    unsigned int v45 = *((_DWORD *)a1 + 23);
  }
  if (v45 == 5)
  {
    uint64_t v51 = *((unsigned __int16 *)a1 + 42);
    v44 |= 0x1000000000000uLL;
    *(void *)(a2 + 1248) = v44;
    *(void *)(a2 + 384) = v51;
    unsigned int v45 = *((_DWORD *)a1 + 23);
  }
  if (v45 == 6)
  {
    uint64_t v52 = a1[84];
    v44 |= 0x2000000000000uLL;
    *(void *)(a2 + 1248) = v44;
    *(void *)(a2 + 392) = v52;
    unsigned int v45 = *((_DWORD *)a1 + 23);
  }
  if (v45 == 7)
  {
    uint64_t v53 = *((unsigned int *)a1 + 21);
    *(void *)(a2 + 1248) = v44 | 0x4000000000000;
    *(void *)(a2 + 400) = v53;
    unsigned int v45 = *((_DWORD *)a1 + 23);
    if (v45 == 7)
    {
      v44 |= 0xC000000000000uLL;
      *(void *)(a2 + 408) = a1[88];
    }
    else
    {
      v44 |= 0x4000000000000uLL;
    }
  }
  uint64_t v54 = *((unsigned int *)a1 + 24);
  *(void *)(a2 + 416) = v45;
  *(void *)(a2 + 424) = v54;
  uint64_t v55 = *((unsigned int *)a1 + 26);
  *(void *)(a2 + 432) = a1[100];
  *(void *)(a2 + 440) = v55;
  uint64_t v56 = a1[112];
  *(void *)(a2 + 448) = a1[108];
  *(void *)(a2 + 456) = v56;
  uint64_t v57 = *(void *)(a1 + 116);
  v58.n128_u64[0] = v57;
  v58.n128_u64[1] = HIDWORD(v57);
  *(__n128 *)(a2 + 464) = v58;
  uint64_t v59 = a1[125];
  *(void *)(a2 + 480) = a1[124];
  *(void *)(a2 + 488) = v59;
  uint64_t v60 = a1[126];
  *(void *)(a2 + 1248) = v44 | 0xFFF0000000000000;
  uint64_t v61 = a1[127];
  *(void *)(a2 + 496) = v60;
  *(void *)(a2 + 504) = v61;
  *(void *)(a2 + 512) = a1[128];
  *(void *)(a2 + 520) = a1[129];
  *(void *)(a2 + 528) = a1[130];
  *(void *)(a2 + 536) = a1[131];
  uint64_t v62 = *(void *)(a1 + 132);
  v58.n128_u64[0] = v62;
  v58.n128_u64[1] = HIDWORD(v62);
  __n128 v63 = v58;
  uint64_t v64 = *(void *)(a1 + 140);
  v58.n128_u64[0] = v64;
  v58.n128_u64[1] = HIDWORD(v64);
  *(__n128 *)(a2 + 544) = v63;
  *(__n128 *)(a2 + 560) = v58;
  v63.n128_u64[0] = *(void *)(a1 + 148);
  v58.n128_u64[0] = v63.n128_u32[0];
  v58.n128_u64[1] = v63.n128_u32[1];
  __n128 result = v58;
  uint64_t v66 = *(void *)(a1 + 156);
  v58.n128_u64[0] = v66;
  v58.n128_u64[1] = HIDWORD(v66);
  *(__n128 *)(a2 + 576) = result;
  *(__n128 *)(a2 + 592) = v58;
  uint64_t v67 = a1[164];
  *(void *)(a2 + 1256) = 0x1FFFLL;
  *(void *)(a2 + 608) = v67;
  return result;
}

__n128 sub_1CBE64D88(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = *(void *)(a1 + 20);
  *(void *)&long long v14 = v13;
  *((void *)&v14 + 1) = HIDWORD(v13);
  *(_OWORD *)(a2 + 96) = v14;
  uint64_t v15 = a1[28];
  uint64_t v16 = v3 | 0x7E00;
  *(void *)(a2 + 1248) = v3 | 0x7E00;
  *(void *)(a2 + 112) = v15;
  unsigned int v17 = *((_DWORD *)a1 + 10);
  if (!v17)
  {
    uint64_t v18 = a1[32];
    uint64_t v16 = v3 | 0xFE00;
    *(void *)(a2 + 1248) = v3 | 0xFE00;
    *(void *)(a2 + 120) = v18;
    unsigned int v17 = *((_DWORD *)a1 + 10);
  }
  if (v17 == 1)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 16);
    v16 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 128) = v19;
    unsigned int v17 = *((_DWORD *)a1 + 10);
  }
  if (v17 == 2)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 16);
    v16 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 136) = v20;
    unsigned int v17 = *((_DWORD *)a1 + 10);
  }
  if (v17 == 3)
  {
    uint64_t v21 = *((unsigned __int16 *)a1 + 16);
    v16 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 144) = v21;
    unsigned int v17 = *((_DWORD *)a1 + 10);
  }
  if (v17 == 4)
  {
    uint64_t v22 = *((unsigned int *)a1 + 8);
    v16 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 152) = v22;
    unsigned int v17 = *((_DWORD *)a1 + 10);
  }
  if (v17 == 5)
  {
    uint64_t v23 = *((unsigned __int16 *)a1 + 16);
    v16 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 160) = v23;
    unsigned int v17 = *((_DWORD *)a1 + 10);
  }
  if (v17 == 6)
  {
    uint64_t v24 = a1[32];
    v16 |= 0x200000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 168) = v24;
    unsigned int v17 = *((_DWORD *)a1 + 10);
  }
  if (v17 == 7)
  {
    uint64_t v25 = *((unsigned int *)a1 + 8);
    *(void *)(a2 + 1248) = v16 | 0x400000;
    *(void *)(a2 + 176) = v25;
    unsigned int v17 = *((_DWORD *)a1 + 10);
    if (v17 == 7)
    {
      v16 |= 0xC00000uLL;
      *(void *)(a2 + 184) = a1[36];
    }
    else
    {
      v16 |= 0x400000uLL;
    }
  }
  uint64_t v26 = v17;
  uint64_t v27 = *((unsigned int *)a1 + 11);
  *(void *)(a2 + 192) = v26;
  *(void *)(a2 + 200) = v27;
  uint64_t v28 = *((unsigned int *)a1 + 13);
  *(void *)(a2 + 208) = a1[48];
  *(void *)(a2 + 216) = v28;
  uint64_t v29 = a1[57];
  *(void *)(a2 + 224) = a1[56];
  *(void *)(a2 + 232) = v29;
  uint64_t v30 = a1[58];
  uint64_t v31 = a1[59];
  uint64_t v32 = v16 | 0xFF000000;
  *(void *)(a2 + 1248) = v16 | 0xFF000000;
  *(void *)(a2 + 240) = v30;
  *(void *)(a2 + 248) = v31;
  unsigned int v33 = *((_DWORD *)a1 + 17);
  if (!v33)
  {
    uint64_t v34 = a1[60];
    uint64_t v32 = v16 | 0x1FF000000;
    *(void *)(a2 + 1248) = v16 | 0x1FF000000;
    *(void *)(a2 + 256) = v34;
    unsigned int v33 = *((_DWORD *)a1 + 17);
  }
  if (v33 == 1)
  {
    uint64_t v35 = *((unsigned __int16 *)a1 + 30);
    v32 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 264) = v35;
    unsigned int v33 = *((_DWORD *)a1 + 17);
  }
  if (v33 == 2)
  {
    uint64_t v36 = *((unsigned __int16 *)a1 + 30);
    v32 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 272) = v36;
    unsigned int v33 = *((_DWORD *)a1 + 17);
  }
  if (v33 == 3)
  {
    uint64_t v37 = *((unsigned __int16 *)a1 + 30);
    v32 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 280) = v37;
    unsigned int v33 = *((_DWORD *)a1 + 17);
  }
  if (v33 == 4)
  {
    uint64_t v38 = *((unsigned int *)a1 + 15);
    v32 |= 0x1000000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 288) = v38;
    unsigned int v33 = *((_DWORD *)a1 + 17);
  }
  if (v33 == 5)
  {
    uint64_t v39 = *((unsigned __int16 *)a1 + 30);
    v32 |= 0x2000000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 296) = v39;
    unsigned int v33 = *((_DWORD *)a1 + 17);
  }
  if (v33 == 6)
  {
    uint64_t v40 = a1[60];
    v32 |= 0x4000000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 304) = v40;
    unsigned int v33 = *((_DWORD *)a1 + 17);
  }
  if (v33 == 7)
  {
    uint64_t v41 = *((unsigned int *)a1 + 15);
    *(void *)(a2 + 1248) = v32 | 0x8000000000;
    *(void *)(a2 + 312) = v41;
    unsigned int v33 = *((_DWORD *)a1 + 17);
    if (v33 == 7)
    {
      v32 |= 0x18000000000uLL;
      *(void *)(a2 + 320) = a1[64];
      unsigned int v33 = 7;
    }
    else
    {
      v32 |= 0x8000000000uLL;
    }
  }
  uint64_t v42 = *((unsigned int *)a1 + 18);
  *(void *)(a2 + 328) = v33;
  *(void *)(a2 + 336) = v42;
  uint64_t v43 = *((unsigned int *)a1 + 20);
  *(void *)(a2 + 344) = a1[76];
  *(void *)(a2 + 352) = v43;
  uint64_t v44 = a1[85];
  *(void *)(a2 + 360) = a1[84];
  *(void *)(a2 + 368) = v44;
  uint64_t v45 = a1[87];
  *(void *)(a2 + 376) = a1[86];
  *(void *)(a2 + 384) = v45;
  uint64_t v46 = *((void *)a1 + 11);
  v47.n128_u64[0] = v46;
  v47.n128_u64[1] = HIDWORD(v46);
  *(__n128 *)(a2 + 392) = v47;
  uint64_t v48 = a1[97];
  *(void *)(a2 + 408) = a1[96];
  *(void *)(a2 + 416) = v48;
  uint64_t v49 = a1[99];
  *(void *)(a2 + 424) = a1[98];
  *(void *)(a2 + 432) = v49;
  uint64_t v50 = a1[101];
  *(void *)(a2 + 440) = a1[100];
  *(void *)(a2 + 448) = v50;
  uint64_t v51 = a1[103];
  *(void *)(a2 + 456) = a1[102];
  *(void *)(a2 + 464) = v51;
  uint64_t v52 = *((void *)a1 + 13);
  uint64_t v53 = *((void *)a1 + 14);
  v47.n128_u64[0] = v52;
  v47.n128_u64[1] = HIDWORD(v52);
  __n128 v54 = v47;
  v47.n128_u64[0] = v53;
  v47.n128_u64[1] = HIDWORD(v53);
  *(__n128 *)(a2 + 472) = v54;
  *(__n128 *)(a2 + 488) = v47;
  *(void *)(a2 + 1248) = v32 | 0xFFFFFE0000000000;
  v54.n128_u64[0] = *((void *)a1 + 15);
  uint64_t v55 = *((void *)a1 + 16);
  v47.n128_u64[0] = v54.n128_u32[0];
  v47.n128_u64[1] = v54.n128_u32[1];
  __n128 result = v47;
  v47.n128_u64[0] = v55;
  v47.n128_u64[1] = HIDWORD(v55);
  *(__n128 *)(a2 + 504) = result;
  *(__n128 *)(a2 + 520) = v47;
  uint64_t v57 = a1[136];
  *(void *)(a2 + 1256) = 15;
  *(void *)(a2 + 536) = v57;
  return result;
}

__n128 sub_1CBE651AC(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = *(void *)(a1 + 20);
  *(void *)&long long v14 = v13;
  *((void *)&v14 + 1) = HIDWORD(v13);
  *(_OWORD *)(a2 + 96) = v14;
  uint64_t v15 = a1[28];
  uint64_t v16 = v3 | 0x7E00;
  *(void *)(a2 + 1248) = v3 | 0x7E00;
  *(void *)(a2 + 112) = v15;
  unsigned int v17 = *((_DWORD *)a1 + 10);
  if (!v17)
  {
    uint64_t v18 = a1[32];
    uint64_t v16 = v3 | 0xFE00;
    *(void *)(a2 + 1248) = v3 | 0xFE00;
    *(void *)(a2 + 120) = v18;
    unsigned int v17 = *((_DWORD *)a1 + 10);
  }
  if (v17 == 1)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 16);
    v16 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 128) = v19;
    unsigned int v17 = *((_DWORD *)a1 + 10);
  }
  if (v17 == 2)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 16);
    v16 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 136) = v20;
    unsigned int v17 = *((_DWORD *)a1 + 10);
  }
  if (v17 == 3)
  {
    uint64_t v21 = *((unsigned __int16 *)a1 + 16);
    v16 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 144) = v21;
    unsigned int v17 = *((_DWORD *)a1 + 10);
  }
  if (v17 == 4)
  {
    uint64_t v22 = *((unsigned int *)a1 + 8);
    v16 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 152) = v22;
    unsigned int v17 = *((_DWORD *)a1 + 10);
  }
  if (v17 == 5)
  {
    uint64_t v23 = *((unsigned __int16 *)a1 + 16);
    v16 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 160) = v23;
    unsigned int v17 = *((_DWORD *)a1 + 10);
  }
  if (v17 == 6)
  {
    uint64_t v24 = a1[32];
    v16 |= 0x200000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 168) = v24;
    unsigned int v17 = *((_DWORD *)a1 + 10);
  }
  if (v17 == 7)
  {
    uint64_t v25 = *((unsigned int *)a1 + 8);
    *(void *)(a2 + 1248) = v16 | 0x400000;
    *(void *)(a2 + 176) = v25;
    unsigned int v17 = *((_DWORD *)a1 + 10);
    if (v17 == 7)
    {
      v16 |= 0xC00000uLL;
      *(void *)(a2 + 184) = a1[36];
    }
    else
    {
      v16 |= 0x400000uLL;
    }
  }
  uint64_t v26 = v17;
  uint64_t v27 = *((unsigned int *)a1 + 11);
  *(void *)(a2 + 192) = v26;
  *(void *)(a2 + 200) = v27;
  uint64_t v28 = *((unsigned int *)a1 + 13);
  *(void *)(a2 + 208) = a1[48];
  *(void *)(a2 + 216) = v28;
  uint64_t v29 = a1[57];
  *(void *)(a2 + 224) = a1[56];
  *(void *)(a2 + 232) = v29;
  uint64_t v30 = a1[58];
  uint64_t v31 = a1[59];
  uint64_t v32 = v16 | 0xFF000000;
  *(void *)(a2 + 1248) = v16 | 0xFF000000;
  *(void *)(a2 + 240) = v30;
  *(void *)(a2 + 248) = v31;
  unsigned int v33 = *((_DWORD *)a1 + 17);
  if (!v33)
  {
    uint64_t v34 = a1[60];
    uint64_t v32 = v16 | 0x1FF000000;
    *(void *)(a2 + 1248) = v16 | 0x1FF000000;
    *(void *)(a2 + 256) = v34;
    unsigned int v33 = *((_DWORD *)a1 + 17);
  }
  if (v33 == 1)
  {
    uint64_t v35 = *((unsigned __int16 *)a1 + 30);
    v32 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 264) = v35;
    unsigned int v33 = *((_DWORD *)a1 + 17);
  }
  if (v33 == 2)
  {
    uint64_t v36 = *((unsigned __int16 *)a1 + 30);
    v32 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 272) = v36;
    unsigned int v33 = *((_DWORD *)a1 + 17);
  }
  if (v33 == 3)
  {
    uint64_t v37 = *((unsigned __int16 *)a1 + 30);
    v32 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 280) = v37;
    unsigned int v33 = *((_DWORD *)a1 + 17);
  }
  if (v33 == 4)
  {
    uint64_t v38 = *((unsigned int *)a1 + 15);
    v32 |= 0x1000000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 288) = v38;
    unsigned int v33 = *((_DWORD *)a1 + 17);
  }
  if (v33 == 5)
  {
    uint64_t v39 = *((unsigned __int16 *)a1 + 30);
    v32 |= 0x2000000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 296) = v39;
    unsigned int v33 = *((_DWORD *)a1 + 17);
  }
  if (v33 == 6)
  {
    uint64_t v40 = a1[60];
    v32 |= 0x4000000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 304) = v40;
    unsigned int v33 = *((_DWORD *)a1 + 17);
  }
  if (v33 == 7)
  {
    uint64_t v41 = *((unsigned int *)a1 + 15);
    *(void *)(a2 + 1248) = v32 | 0x8000000000;
    *(void *)(a2 + 312) = v41;
    unsigned int v33 = *((_DWORD *)a1 + 17);
    if (v33 == 7)
    {
      v32 |= 0x18000000000uLL;
      *(void *)(a2 + 320) = a1[64];
    }
    else
    {
      v32 |= 0x8000000000uLL;
    }
  }
  uint64_t v42 = v33;
  uint64_t v43 = *((unsigned int *)a1 + 18);
  *(void *)(a2 + 328) = v42;
  *(void *)(a2 + 336) = v43;
  uint64_t v44 = *((unsigned int *)a1 + 20);
  *(void *)(a2 + 344) = a1[76];
  *(void *)(a2 + 352) = v44;
  uint64_t v45 = a1[85];
  *(void *)(a2 + 360) = a1[84];
  *(void *)(a2 + 368) = v45;
  uint64_t v46 = a1[86];
  uint64_t v47 = a1[87];
  uint64_t v48 = v32 | 0x1FE0000000000;
  *(void *)(a2 + 1248) = v32 | 0x1FE0000000000;
  *(void *)(a2 + 376) = v46;
  *(void *)(a2 + 384) = v47;
  unsigned int v49 = *((_DWORD *)a1 + 24);
  if (!v49)
  {
    uint64_t v50 = a1[88];
    uint64_t v48 = v32 | 0x3FE0000000000;
    *(void *)(a2 + 1248) = v32 | 0x3FE0000000000;
    *(void *)(a2 + 392) = v50;
    unsigned int v49 = *((_DWORD *)a1 + 24);
  }
  if (v49 == 1)
  {
    uint64_t v51 = *((unsigned __int16 *)a1 + 44);
    v48 |= 0x4000000000000uLL;
    *(void *)(a2 + 1248) = v48;
    *(void *)(a2 + 400) = v51;
    unsigned int v49 = *((_DWORD *)a1 + 24);
  }
  if (v49 == 2)
  {
    uint64_t v52 = *((unsigned __int16 *)a1 + 44);
    v48 |= 0x8000000000000uLL;
    *(void *)(a2 + 1248) = v48;
    *(void *)(a2 + 408) = v52;
    unsigned int v49 = *((_DWORD *)a1 + 24);
  }
  if (v49 == 3)
  {
    uint64_t v53 = *((unsigned __int16 *)a1 + 44);
    v48 |= 0x10000000000000uLL;
    *(void *)(a2 + 1248) = v48;
    *(void *)(a2 + 416) = v53;
    unsigned int v49 = *((_DWORD *)a1 + 24);
  }
  if (v49 == 4)
  {
    uint64_t v54 = *((unsigned int *)a1 + 22);
    v48 |= 0x20000000000000uLL;
    *(void *)(a2 + 1248) = v48;
    *(void *)(a2 + 424) = v54;
    unsigned int v49 = *((_DWORD *)a1 + 24);
  }
  if (v49 == 5)
  {
    uint64_t v55 = *((unsigned __int16 *)a1 + 44);
    v48 |= 0x40000000000000uLL;
    *(void *)(a2 + 1248) = v48;
    *(void *)(a2 + 432) = v55;
    unsigned int v49 = *((_DWORD *)a1 + 24);
  }
  if (v49 == 6)
  {
    uint64_t v56 = a1[88];
    v48 |= 0x80000000000000uLL;
    *(void *)(a2 + 1248) = v48;
    *(void *)(a2 + 440) = v56;
    unsigned int v49 = *((_DWORD *)a1 + 24);
  }
  if (v49 == 7)
  {
    uint64_t v57 = *((unsigned int *)a1 + 22);
    *(void *)(a2 + 1248) = v48 | 0x100000000000000;
    *(void *)(a2 + 448) = v57;
    unsigned int v49 = *((_DWORD *)a1 + 24);
    if (v49 == 7)
    {
      v48 |= 0x300000000000000uLL;
      *(void *)(a2 + 456) = a1[92];
    }
    else
    {
      v48 |= 0x100000000000000uLL;
    }
  }
  uint64_t v58 = *((unsigned int *)a1 + 25);
  *(void *)(a2 + 464) = v49;
  *(void *)(a2 + 472) = v58;
  uint64_t v59 = *((unsigned int *)a1 + 27);
  *(void *)(a2 + 480) = a1[104];
  *(void *)(a2 + 488) = v59;
  uint64_t v60 = a1[112];
  *(void *)(a2 + 1248) = v48 | 0xFC00000000000000;
  uint64_t v61 = a1[113];
  *(void *)(a2 + 496) = v60;
  *(void *)(a2 + 504) = v61;
  *(void *)(a2 + 512) = a1[114];
  *(void *)(a2 + 520) = a1[115];
  uint64_t v62 = *(void *)(a1 + 116);
  v63.n128_u64[0] = v62;
  v63.n128_u64[1] = HIDWORD(v62);
  *(__n128 *)(a2 + 528) = v63;
  *(void *)(a2 + 544) = a1[124];
  *(void *)(a2 + 552) = a1[125];
  *(void *)(a2 + 560) = a1[126];
  *(void *)(a2 + 568) = a1[127];
  *(void *)(a2 + 576) = a1[128];
  *(void *)(a2 + 584) = a1[129];
  *(void *)(a2 + 592) = a1[130];
  *(void *)(a2 + 600) = a1[131];
  uint64_t v64 = *(void *)(a1 + 132);
  v63.n128_u64[0] = v64;
  v63.n128_u64[1] = HIDWORD(v64);
  __n128 v65 = v63;
  uint64_t v66 = *(void *)(a1 + 140);
  v63.n128_u64[0] = v66;
  v63.n128_u64[1] = HIDWORD(v66);
  *(__n128 *)(a2 + 608) = v65;
  *(__n128 *)(a2 + 624) = v63;
  v65.n128_u64[0] = *(void *)(a1 + 148);
  v63.n128_u64[0] = v65.n128_u32[0];
  v63.n128_u64[1] = v65.n128_u32[1];
  __n128 result = v63;
  uint64_t v68 = *(void *)(a1 + 156);
  v63.n128_u64[0] = v68;
  v63.n128_u64[1] = HIDWORD(v68);
  *(__n128 *)(a2 + 640) = result;
  *(__n128 *)(a2 + 656) = v63;
  uint64_t v69 = a1[164];
  *(void *)(a2 + 1256) = 0x1FFFFFLL;
  *(void *)(a2 + 672) = v69;
  return result;
}

__n128 sub_1CBE65718(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = *(void *)(a1 + 20);
  *(void *)&long long v14 = v13;
  *((void *)&v14 + 1) = HIDWORD(v13);
  *(_OWORD *)(a2 + 96) = v14;
  uint64_t v15 = a1[28];
  uint64_t v16 = v3 | 0x7E00;
  *(void *)(a2 + 1248) = v3 | 0x7E00;
  *(void *)(a2 + 112) = v15;
  unsigned int v17 = *((_DWORD *)a1 + 10);
  if (!v17)
  {
    uint64_t v18 = a1[32];
    uint64_t v16 = v3 | 0xFE00;
    *(void *)(a2 + 1248) = v3 | 0xFE00;
    *(void *)(a2 + 120) = v18;
    unsigned int v17 = *((_DWORD *)a1 + 10);
  }
  if (v17 == 1)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 16);
    v16 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 128) = v19;
    unsigned int v17 = *((_DWORD *)a1 + 10);
  }
  if (v17 == 2)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 16);
    v16 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 136) = v20;
    unsigned int v17 = *((_DWORD *)a1 + 10);
  }
  if (v17 == 3)
  {
    uint64_t v21 = *((unsigned __int16 *)a1 + 16);
    v16 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 144) = v21;
    unsigned int v17 = *((_DWORD *)a1 + 10);
  }
  if (v17 == 4)
  {
    uint64_t v22 = *((unsigned int *)a1 + 8);
    v16 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 152) = v22;
    unsigned int v17 = *((_DWORD *)a1 + 10);
  }
  if (v17 == 5)
  {
    uint64_t v23 = *((unsigned __int16 *)a1 + 16);
    v16 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 160) = v23;
    unsigned int v17 = *((_DWORD *)a1 + 10);
  }
  if (v17 == 6)
  {
    uint64_t v24 = a1[32];
    v16 |= 0x200000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 168) = v24;
    unsigned int v17 = *((_DWORD *)a1 + 10);
  }
  if (v17 == 7)
  {
    uint64_t v25 = *((unsigned int *)a1 + 8);
    *(void *)(a2 + 1248) = v16 | 0x400000;
    *(void *)(a2 + 176) = v25;
    unsigned int v17 = *((_DWORD *)a1 + 10);
    if (v17 == 7)
    {
      v16 |= 0xC00000uLL;
      *(void *)(a2 + 184) = a1[36];
    }
    else
    {
      v16 |= 0x400000uLL;
    }
  }
  uint64_t v26 = v17;
  uint64_t v27 = *((unsigned int *)a1 + 11);
  *(void *)(a2 + 192) = v26;
  *(void *)(a2 + 200) = v27;
  uint64_t v28 = *((unsigned int *)a1 + 13);
  *(void *)(a2 + 208) = a1[48];
  *(void *)(a2 + 216) = v28;
  uint64_t v29 = a1[57];
  *(void *)(a2 + 224) = a1[56];
  *(void *)(a2 + 232) = v29;
  uint64_t v30 = a1[58];
  uint64_t v31 = a1[59];
  uint64_t v32 = v16 | 0xFF000000;
  *(void *)(a2 + 1248) = v16 | 0xFF000000;
  *(void *)(a2 + 240) = v30;
  *(void *)(a2 + 248) = v31;
  unsigned int v33 = *((_DWORD *)a1 + 17);
  if (!v33)
  {
    uint64_t v34 = a1[60];
    uint64_t v32 = v16 | 0x1FF000000;
    *(void *)(a2 + 1248) = v16 | 0x1FF000000;
    *(void *)(a2 + 256) = v34;
    unsigned int v33 = *((_DWORD *)a1 + 17);
  }
  if (v33 == 1)
  {
    uint64_t v35 = *((unsigned __int16 *)a1 + 30);
    v32 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 264) = v35;
    unsigned int v33 = *((_DWORD *)a1 + 17);
  }
  if (v33 == 2)
  {
    uint64_t v36 = *((unsigned __int16 *)a1 + 30);
    v32 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 272) = v36;
    unsigned int v33 = *((_DWORD *)a1 + 17);
  }
  if (v33 == 3)
  {
    uint64_t v37 = *((unsigned __int16 *)a1 + 30);
    v32 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 280) = v37;
    unsigned int v33 = *((_DWORD *)a1 + 17);
  }
  if (v33 == 4)
  {
    uint64_t v38 = *((unsigned int *)a1 + 15);
    v32 |= 0x1000000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 288) = v38;
    unsigned int v33 = *((_DWORD *)a1 + 17);
  }
  if (v33 == 5)
  {
    uint64_t v39 = *((unsigned __int16 *)a1 + 30);
    v32 |= 0x2000000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 296) = v39;
    unsigned int v33 = *((_DWORD *)a1 + 17);
  }
  if (v33 == 6)
  {
    uint64_t v40 = a1[60];
    v32 |= 0x4000000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 304) = v40;
    unsigned int v33 = *((_DWORD *)a1 + 17);
  }
  if (v33 == 7)
  {
    uint64_t v41 = *((unsigned int *)a1 + 15);
    *(void *)(a2 + 1248) = v32 | 0x8000000000;
    *(void *)(a2 + 312) = v41;
    unsigned int v33 = *((_DWORD *)a1 + 17);
    if (v33 == 7)
    {
      v32 |= 0x18000000000uLL;
      *(void *)(a2 + 320) = a1[64];
    }
    else
    {
      v32 |= 0x8000000000uLL;
    }
  }
  uint64_t v42 = v33;
  uint64_t v43 = *((unsigned int *)a1 + 18);
  *(void *)(a2 + 328) = v42;
  *(void *)(a2 + 336) = v43;
  uint64_t v44 = *((unsigned int *)a1 + 20);
  *(void *)(a2 + 344) = a1[76];
  *(void *)(a2 + 352) = v44;
  uint64_t v45 = a1[85];
  *(void *)(a2 + 360) = a1[84];
  *(void *)(a2 + 368) = v45;
  uint64_t v46 = a1[86];
  uint64_t v47 = a1[87];
  uint64_t v48 = v32 | 0x1FE0000000000;
  *(void *)(a2 + 1248) = v32 | 0x1FE0000000000;
  *(void *)(a2 + 376) = v46;
  *(void *)(a2 + 384) = v47;
  unsigned int v49 = *((_DWORD *)a1 + 24);
  if (!v49)
  {
    uint64_t v50 = a1[88];
    uint64_t v48 = v32 | 0x3FE0000000000;
    *(void *)(a2 + 1248) = v32 | 0x3FE0000000000;
    *(void *)(a2 + 392) = v50;
    unsigned int v49 = *((_DWORD *)a1 + 24);
  }
  if (v49 == 1)
  {
    uint64_t v51 = *((unsigned __int16 *)a1 + 44);
    v48 |= 0x4000000000000uLL;
    *(void *)(a2 + 1248) = v48;
    *(void *)(a2 + 400) = v51;
    unsigned int v49 = *((_DWORD *)a1 + 24);
  }
  if (v49 == 2)
  {
    uint64_t v52 = *((unsigned __int16 *)a1 + 44);
    v48 |= 0x8000000000000uLL;
    *(void *)(a2 + 1248) = v48;
    *(void *)(a2 + 408) = v52;
    unsigned int v49 = *((_DWORD *)a1 + 24);
  }
  if (v49 == 3)
  {
    uint64_t v53 = *((unsigned __int16 *)a1 + 44);
    v48 |= 0x10000000000000uLL;
    *(void *)(a2 + 1248) = v48;
    *(void *)(a2 + 416) = v53;
    unsigned int v49 = *((_DWORD *)a1 + 24);
  }
  if (v49 == 4)
  {
    uint64_t v54 = *((unsigned int *)a1 + 22);
    v48 |= 0x20000000000000uLL;
    *(void *)(a2 + 1248) = v48;
    *(void *)(a2 + 424) = v54;
    unsigned int v49 = *((_DWORD *)a1 + 24);
  }
  if (v49 == 5)
  {
    uint64_t v55 = *((unsigned __int16 *)a1 + 44);
    v48 |= 0x40000000000000uLL;
    *(void *)(a2 + 1248) = v48;
    *(void *)(a2 + 432) = v55;
    unsigned int v49 = *((_DWORD *)a1 + 24);
  }
  if (v49 == 6)
  {
    uint64_t v56 = a1[88];
    v48 |= 0x80000000000000uLL;
    *(void *)(a2 + 1248) = v48;
    *(void *)(a2 + 440) = v56;
    unsigned int v49 = *((_DWORD *)a1 + 24);
  }
  if (v49 == 7)
  {
    uint64_t v57 = *((unsigned int *)a1 + 22);
    *(void *)(a2 + 1248) = v48 | 0x100000000000000;
    *(void *)(a2 + 448) = v57;
    unsigned int v49 = *((_DWORD *)a1 + 24);
    if (v49 == 7)
    {
      v48 |= 0x300000000000000uLL;
      *(void *)(a2 + 456) = a1[92];
    }
    else
    {
      v48 |= 0x100000000000000uLL;
    }
  }
  uint64_t v58 = v49;
  uint64_t v59 = *((unsigned int *)a1 + 25);
  *(void *)(a2 + 464) = v58;
  *(void *)(a2 + 472) = v59;
  uint64_t v60 = *((unsigned int *)a1 + 27);
  *(void *)(a2 + 480) = a1[104];
  *(void *)(a2 + 488) = v60;
  uint64_t v61 = a1[112];
  *(void *)(a2 + 1248) = v48 | 0x7C00000000000000;
  *(void *)(a2 + 496) = v61;
  unsigned int v62 = *((_DWORD *)a1 + 31);
  if (!v62)
  {
    uint64_t v63 = a1[116];
    *(void *)(a2 + 1248) = v48 | 0xFC00000000000000;
    *(void *)(a2 + 504) = v63;
    unsigned int v62 = *((_DWORD *)a1 + 31);
  }
  if (v62 == 1)
  {
    uint64_t v64 = *((unsigned __int16 *)a1 + 58);
    uint64_t v65 = 1;
    *(void *)(a2 + 1256) = 1;
    *(void *)(a2 + 512) = v64;
    unsigned int v62 = *((_DWORD *)a1 + 31);
  }
  else
  {
    uint64_t v65 = 0;
  }
  if (v62 == 2)
  {
    uint64_t v66 = *((unsigned __int16 *)a1 + 58);
    v65 |= 2uLL;
    *(void *)(a2 + 1256) = v65;
    *(void *)(a2 + 520) = v66;
    unsigned int v62 = *((_DWORD *)a1 + 31);
  }
  if (v62 == 3)
  {
    uint64_t v67 = *((unsigned __int16 *)a1 + 58);
    v65 |= 4uLL;
    *(void *)(a2 + 1256) = v65;
    *(void *)(a2 + 528) = v67;
    unsigned int v62 = *((_DWORD *)a1 + 31);
  }
  if (v62 == 4)
  {
    uint64_t v68 = *((unsigned int *)a1 + 29);
    v65 |= 8uLL;
    *(void *)(a2 + 1256) = v65;
    *(void *)(a2 + 536) = v68;
    unsigned int v62 = *((_DWORD *)a1 + 31);
  }
  if (v62 == 5)
  {
    uint64_t v69 = *((unsigned __int16 *)a1 + 58);
    v65 |= 0x10uLL;
    *(void *)(a2 + 1256) = v65;
    *(void *)(a2 + 544) = v69;
    unsigned int v62 = *((_DWORD *)a1 + 31);
  }
  if (v62 == 6)
  {
    uint64_t v70 = a1[116];
    v65 |= 0x20uLL;
    *(void *)(a2 + 1256) = v65;
    *(void *)(a2 + 552) = v70;
    unsigned int v62 = *((_DWORD *)a1 + 31);
  }
  if (v62 == 7)
  {
    uint64_t v71 = *((unsigned int *)a1 + 29);
    *(void *)(a2 + 1256) = v65 | 0x40;
    *(void *)(a2 + 560) = v71;
    unsigned int v62 = *((_DWORD *)a1 + 31);
    if (v62 == 7)
    {
      v65 |= 0xC0uLL;
      *(void *)(a2 + 568) = a1[120];
    }
    else
    {
      v65 |= 0x40uLL;
    }
  }
  *(void *)(a2 + 576) = v62;
  *(void *)(a2 + 584) = *((unsigned int *)a1 + 32);
  *(void *)(a2 + 592) = a1[132];
  *(void *)(a2 + 600) = *((unsigned int *)a1 + 34);
  uint64_t v72 = a1[140];
  uint64_t v73 = v65 | 0x1F00;
  *(void *)(a2 + 1256) = v65 | 0x1F00;
  *(void *)(a2 + 608) = v72;
  unsigned int v74 = *((_DWORD *)a1 + 38);
  if (!v74)
  {
    uint64_t v75 = a1[144];
    uint64_t v73 = v65 | 0x3F00;
    *(void *)(a2 + 1256) = v65 | 0x3F00;
    *(void *)(a2 + 616) = v75;
    unsigned int v74 = *((_DWORD *)a1 + 38);
  }
  if (v74 == 1)
  {
    uint64_t v76 = *((unsigned __int16 *)a1 + 72);
    v73 |= 0x4000uLL;
    *(void *)(a2 + 1256) = v73;
    *(void *)(a2 + 624) = v76;
    unsigned int v74 = *((_DWORD *)a1 + 38);
  }
  if (v74 == 2)
  {
    uint64_t v77 = *((unsigned __int16 *)a1 + 72);
    v73 |= 0x8000uLL;
    *(void *)(a2 + 1256) = v73;
    *(void *)(a2 + 632) = v77;
    unsigned int v74 = *((_DWORD *)a1 + 38);
  }
  if (v74 == 3)
  {
    uint64_t v78 = *((unsigned __int16 *)a1 + 72);
    v73 |= 0x10000uLL;
    *(void *)(a2 + 1256) = v73;
    *(void *)(a2 + 640) = v78;
    unsigned int v74 = *((_DWORD *)a1 + 38);
  }
  if (v74 == 4)
  {
    uint64_t v79 = *((unsigned int *)a1 + 36);
    v73 |= 0x20000uLL;
    *(void *)(a2 + 1256) = v73;
    *(void *)(a2 + 648) = v79;
    unsigned int v74 = *((_DWORD *)a1 + 38);
  }
  if (v74 == 5)
  {
    uint64_t v80 = *((unsigned __int16 *)a1 + 72);
    v73 |= 0x40000uLL;
    *(void *)(a2 + 1256) = v73;
    *(void *)(a2 + 656) = v80;
    unsigned int v74 = *((_DWORD *)a1 + 38);
  }
  if (v74 == 6)
  {
    uint64_t v81 = a1[144];
    v73 |= 0x80000uLL;
    *(void *)(a2 + 1256) = v73;
    *(void *)(a2 + 664) = v81;
    unsigned int v74 = *((_DWORD *)a1 + 38);
  }
  if (v74 == 7)
  {
    uint64_t v82 = *((unsigned int *)a1 + 36);
    *(void *)(a2 + 1256) = v73 | 0x100000;
    *(void *)(a2 + 672) = v82;
    unsigned int v74 = *((_DWORD *)a1 + 38);
    if (v74 == 7)
    {
      v73 |= 0x300000uLL;
      *(void *)(a2 + 680) = a1[148];
    }
    else
    {
      v73 |= 0x100000uLL;
    }
  }
  *(void *)(a2 + 688) = v74;
  *(void *)(a2 + 696) = *((unsigned int *)a1 + 39);
  *(void *)(a2 + 704) = a1[160];
  *(void *)(a2 + 712) = *((unsigned int *)a1 + 41);
  *(void *)(a2 + 720) = a1[168];
  *(void *)(a2 + 728) = a1[169];
  uint64_t v83 = *(void *)(a1 + 172);
  v84.n128_u64[0] = v83;
  v84.n128_u64[1] = HIDWORD(v83);
  *(__n128 *)(a2 + 736) = v84;
  *(void *)(a2 + 752) = a1[180];
  *(void *)(a2 + 760) = a1[181];
  *(void *)(a2 + 768) = a1[182];
  *(void *)(a2 + 776) = a1[183];
  *(void *)(a2 + 784) = a1[184];
  *(void *)(a2 + 792) = a1[185];
  *(void *)(a2 + 800) = a1[186];
  *(void *)(a2 + 808) = a1[187];
  uint64_t v85 = *(void *)(a1 + 188);
  v84.n128_u64[0] = v85;
  v84.n128_u64[1] = HIDWORD(v85);
  __n128 v86 = v84;
  uint64_t v87 = *(void *)(a1 + 196);
  v84.n128_u64[0] = v87;
  v84.n128_u64[1] = HIDWORD(v87);
  *(__n128 *)(a2 + 816) = v86;
  *(__n128 *)(a2 + 832) = v84;
  v86.n128_u64[0] = *(void *)(a1 + 204);
  v84.n128_u64[0] = v86.n128_u32[0];
  v84.n128_u64[1] = v86.n128_u32[1];
  __n128 result = v84;
  uint64_t v89 = *(void *)(a1 + 212);
  v84.n128_u64[0] = v89;
  v84.n128_u64[1] = HIDWORD(v89);
  *(__n128 *)(a2 + 848) = result;
  *(__n128 *)(a2 + 864) = v84;
  *(void *)(a2 + 880) = a1[220];
  *(void *)(a2 + 888) = a1[221];
  *(void *)(a2 + 896) = a1[222];
  *(void *)(a2 + 904) = *((unsigned int *)a1 + 56);
  uint64_t v90 = a1[228];
  *(void *)(a2 + 1256) = v73 | 0x7FFFFFFC00000;
  *(void *)(a2 + 912) = v90;
  return result;
}

__n128 sub_1CBE65EF0(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = *(void *)(a1 + 20);
  *(void *)&long long v14 = v13;
  *((void *)&v14 + 1) = HIDWORD(v13);
  *(_OWORD *)(a2 + 96) = v14;
  uint64_t v15 = a1[28];
  uint64_t v16 = v3 | 0x7E00;
  *(void *)(a2 + 1248) = v3 | 0x7E00;
  *(void *)(a2 + 112) = v15;
  unsigned int v17 = *((_DWORD *)a1 + 10);
  if (!v17)
  {
    uint64_t v18 = a1[32];
    uint64_t v16 = v3 | 0xFE00;
    *(void *)(a2 + 1248) = v3 | 0xFE00;
    *(void *)(a2 + 120) = v18;
    unsigned int v17 = *((_DWORD *)a1 + 10);
  }
  if (v17 == 1)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 16);
    v16 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 128) = v19;
    unsigned int v17 = *((_DWORD *)a1 + 10);
  }
  if (v17 == 2)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 16);
    v16 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 136) = v20;
    unsigned int v17 = *((_DWORD *)a1 + 10);
  }
  if (v17 == 3)
  {
    uint64_t v21 = *((unsigned __int16 *)a1 + 16);
    v16 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 144) = v21;
    unsigned int v17 = *((_DWORD *)a1 + 10);
  }
  if (v17 == 4)
  {
    uint64_t v22 = *((unsigned int *)a1 + 8);
    v16 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 152) = v22;
    unsigned int v17 = *((_DWORD *)a1 + 10);
  }
  if (v17 == 5)
  {
    uint64_t v23 = *((unsigned __int16 *)a1 + 16);
    v16 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 160) = v23;
    unsigned int v17 = *((_DWORD *)a1 + 10);
  }
  if (v17 == 6)
  {
    uint64_t v24 = a1[32];
    v16 |= 0x200000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 168) = v24;
    unsigned int v17 = *((_DWORD *)a1 + 10);
  }
  if (v17 == 7)
  {
    uint64_t v25 = *((unsigned int *)a1 + 8);
    *(void *)(a2 + 1248) = v16 | 0x400000;
    *(void *)(a2 + 176) = v25;
    unsigned int v17 = *((_DWORD *)a1 + 10);
    if (v17 == 7)
    {
      v16 |= 0xC00000uLL;
      *(void *)(a2 + 184) = a1[36];
    }
    else
    {
      v16 |= 0x400000uLL;
    }
  }
  uint64_t v26 = v17;
  uint64_t v27 = *((unsigned int *)a1 + 11);
  *(void *)(a2 + 192) = v26;
  *(void *)(a2 + 200) = v27;
  uint64_t v28 = *((unsigned int *)a1 + 13);
  *(void *)(a2 + 208) = a1[48];
  *(void *)(a2 + 216) = v28;
  uint64_t v29 = a1[57];
  *(void *)(a2 + 224) = a1[56];
  *(void *)(a2 + 232) = v29;
  uint64_t v30 = a1[58];
  uint64_t v31 = a1[59];
  uint64_t v32 = v16 | 0xFF000000;
  *(void *)(a2 + 1248) = v16 | 0xFF000000;
  *(void *)(a2 + 240) = v30;
  *(void *)(a2 + 248) = v31;
  unsigned int v33 = *((_DWORD *)a1 + 17);
  if (!v33)
  {
    uint64_t v34 = a1[60];
    uint64_t v32 = v16 | 0x1FF000000;
    *(void *)(a2 + 1248) = v16 | 0x1FF000000;
    *(void *)(a2 + 256) = v34;
    unsigned int v33 = *((_DWORD *)a1 + 17);
  }
  if (v33 == 1)
  {
    uint64_t v35 = *((unsigned __int16 *)a1 + 30);
    v32 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 264) = v35;
    unsigned int v33 = *((_DWORD *)a1 + 17);
  }
  if (v33 == 2)
  {
    uint64_t v36 = *((unsigned __int16 *)a1 + 30);
    v32 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 272) = v36;
    unsigned int v33 = *((_DWORD *)a1 + 17);
  }
  if (v33 == 3)
  {
    uint64_t v37 = *((unsigned __int16 *)a1 + 30);
    v32 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 280) = v37;
    unsigned int v33 = *((_DWORD *)a1 + 17);
  }
  if (v33 == 4)
  {
    uint64_t v38 = *((unsigned int *)a1 + 15);
    v32 |= 0x1000000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 288) = v38;
    unsigned int v33 = *((_DWORD *)a1 + 17);
  }
  if (v33 == 5)
  {
    uint64_t v39 = *((unsigned __int16 *)a1 + 30);
    v32 |= 0x2000000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 296) = v39;
    unsigned int v33 = *((_DWORD *)a1 + 17);
  }
  if (v33 == 6)
  {
    uint64_t v40 = a1[60];
    v32 |= 0x4000000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 304) = v40;
    unsigned int v33 = *((_DWORD *)a1 + 17);
  }
  if (v33 == 7)
  {
    uint64_t v41 = *((unsigned int *)a1 + 15);
    *(void *)(a2 + 1248) = v32 | 0x8000000000;
    *(void *)(a2 + 312) = v41;
    unsigned int v33 = *((_DWORD *)a1 + 17);
    if (v33 == 7)
    {
      v32 |= 0x18000000000uLL;
      *(void *)(a2 + 320) = a1[64];
    }
    else
    {
      v32 |= 0x8000000000uLL;
    }
  }
  uint64_t v42 = v33;
  uint64_t v43 = *((unsigned int *)a1 + 18);
  *(void *)(a2 + 328) = v42;
  *(void *)(a2 + 336) = v43;
  uint64_t v44 = *((unsigned int *)a1 + 20);
  *(void *)(a2 + 344) = a1[76];
  *(void *)(a2 + 352) = v44;
  uint64_t v45 = a1[85];
  *(void *)(a2 + 360) = a1[84];
  *(void *)(a2 + 368) = v45;
  uint64_t v46 = a1[86];
  uint64_t v47 = a1[87];
  uint64_t v48 = v32 | 0x1FE0000000000;
  *(void *)(a2 + 1248) = v32 | 0x1FE0000000000;
  *(void *)(a2 + 376) = v46;
  *(void *)(a2 + 384) = v47;
  unsigned int v49 = *((_DWORD *)a1 + 24);
  if (!v49)
  {
    uint64_t v50 = a1[88];
    uint64_t v48 = v32 | 0x3FE0000000000;
    *(void *)(a2 + 1248) = v32 | 0x3FE0000000000;
    *(void *)(a2 + 392) = v50;
    unsigned int v49 = *((_DWORD *)a1 + 24);
  }
  if (v49 == 1)
  {
    uint64_t v51 = *((unsigned __int16 *)a1 + 44);
    v48 |= 0x4000000000000uLL;
    *(void *)(a2 + 1248) = v48;
    *(void *)(a2 + 400) = v51;
    unsigned int v49 = *((_DWORD *)a1 + 24);
  }
  if (v49 == 2)
  {
    uint64_t v52 = *((unsigned __int16 *)a1 + 44);
    v48 |= 0x8000000000000uLL;
    *(void *)(a2 + 1248) = v48;
    *(void *)(a2 + 408) = v52;
    unsigned int v49 = *((_DWORD *)a1 + 24);
  }
  if (v49 == 3)
  {
    uint64_t v53 = *((unsigned __int16 *)a1 + 44);
    v48 |= 0x10000000000000uLL;
    *(void *)(a2 + 1248) = v48;
    *(void *)(a2 + 416) = v53;
    unsigned int v49 = *((_DWORD *)a1 + 24);
  }
  if (v49 == 4)
  {
    uint64_t v54 = *((unsigned int *)a1 + 22);
    v48 |= 0x20000000000000uLL;
    *(void *)(a2 + 1248) = v48;
    *(void *)(a2 + 424) = v54;
    unsigned int v49 = *((_DWORD *)a1 + 24);
  }
  if (v49 == 5)
  {
    uint64_t v55 = *((unsigned __int16 *)a1 + 44);
    v48 |= 0x40000000000000uLL;
    *(void *)(a2 + 1248) = v48;
    *(void *)(a2 + 432) = v55;
    unsigned int v49 = *((_DWORD *)a1 + 24);
  }
  if (v49 == 6)
  {
    uint64_t v56 = a1[88];
    v48 |= 0x80000000000000uLL;
    *(void *)(a2 + 1248) = v48;
    *(void *)(a2 + 440) = v56;
    unsigned int v49 = *((_DWORD *)a1 + 24);
  }
  if (v49 == 7)
  {
    uint64_t v57 = *((unsigned int *)a1 + 22);
    *(void *)(a2 + 1248) = v48 | 0x100000000000000;
    *(void *)(a2 + 448) = v57;
    unsigned int v49 = *((_DWORD *)a1 + 24);
    if (v49 == 7)
    {
      v48 |= 0x300000000000000uLL;
      *(void *)(a2 + 456) = a1[92];
    }
    else
    {
      v48 |= 0x100000000000000uLL;
    }
  }
  uint64_t v58 = v49;
  uint64_t v59 = *((unsigned int *)a1 + 25);
  *(void *)(a2 + 464) = v58;
  *(void *)(a2 + 472) = v59;
  uint64_t v60 = *((unsigned int *)a1 + 27);
  *(void *)(a2 + 480) = a1[104];
  *(void *)(a2 + 488) = v60;
  uint64_t v61 = a1[112];
  *(void *)(a2 + 1248) = v48 | 0x7C00000000000000;
  *(void *)(a2 + 496) = v61;
  unsigned int v62 = *((_DWORD *)a1 + 31);
  if (!v62)
  {
    uint64_t v63 = a1[116];
    *(void *)(a2 + 1248) = v48 | 0xFC00000000000000;
    *(void *)(a2 + 504) = v63;
    unsigned int v62 = *((_DWORD *)a1 + 31);
  }
  if (v62 == 1)
  {
    uint64_t v64 = *((unsigned __int16 *)a1 + 58);
    uint64_t v65 = 1;
    *(void *)(a2 + 1256) = 1;
    *(void *)(a2 + 512) = v64;
    unsigned int v62 = *((_DWORD *)a1 + 31);
  }
  else
  {
    uint64_t v65 = 0;
  }
  if (v62 == 2)
  {
    uint64_t v66 = *((unsigned __int16 *)a1 + 58);
    v65 |= 2uLL;
    *(void *)(a2 + 1256) = v65;
    *(void *)(a2 + 520) = v66;
    unsigned int v62 = *((_DWORD *)a1 + 31);
  }
  if (v62 == 3)
  {
    uint64_t v67 = *((unsigned __int16 *)a1 + 58);
    v65 |= 4uLL;
    *(void *)(a2 + 1256) = v65;
    *(void *)(a2 + 528) = v67;
    unsigned int v62 = *((_DWORD *)a1 + 31);
  }
  if (v62 == 4)
  {
    uint64_t v68 = *((unsigned int *)a1 + 29);
    v65 |= 8uLL;
    *(void *)(a2 + 1256) = v65;
    *(void *)(a2 + 536) = v68;
    unsigned int v62 = *((_DWORD *)a1 + 31);
  }
  if (v62 == 5)
  {
    uint64_t v69 = *((unsigned __int16 *)a1 + 58);
    v65 |= 0x10uLL;
    *(void *)(a2 + 1256) = v65;
    *(void *)(a2 + 544) = v69;
    unsigned int v62 = *((_DWORD *)a1 + 31);
  }
  if (v62 == 6)
  {
    uint64_t v70 = a1[116];
    v65 |= 0x20uLL;
    *(void *)(a2 + 1256) = v65;
    *(void *)(a2 + 552) = v70;
    unsigned int v62 = *((_DWORD *)a1 + 31);
  }
  if (v62 == 7)
  {
    uint64_t v71 = *((unsigned int *)a1 + 29);
    *(void *)(a2 + 1256) = v65 | 0x40;
    *(void *)(a2 + 560) = v71;
    unsigned int v62 = *((_DWORD *)a1 + 31);
    if (v62 == 7)
    {
      v65 |= 0xC0uLL;
      *(void *)(a2 + 568) = a1[120];
    }
    else
    {
      v65 |= 0x40uLL;
    }
  }
  *(void *)(a2 + 576) = v62;
  *(void *)(a2 + 584) = *((unsigned int *)a1 + 32);
  *(void *)(a2 + 592) = a1[132];
  *(void *)(a2 + 600) = *((unsigned int *)a1 + 34);
  uint64_t v72 = a1[140];
  uint64_t v73 = v65 | 0x1F00;
  *(void *)(a2 + 1256) = v65 | 0x1F00;
  *(void *)(a2 + 608) = v72;
  unsigned int v74 = *((_DWORD *)a1 + 38);
  if (!v74)
  {
    uint64_t v75 = a1[144];
    uint64_t v73 = v65 | 0x3F00;
    *(void *)(a2 + 1256) = v65 | 0x3F00;
    *(void *)(a2 + 616) = v75;
    unsigned int v74 = *((_DWORD *)a1 + 38);
  }
  if (v74 == 1)
  {
    uint64_t v76 = *((unsigned __int16 *)a1 + 72);
    v73 |= 0x4000uLL;
    *(void *)(a2 + 1256) = v73;
    *(void *)(a2 + 624) = v76;
    unsigned int v74 = *((_DWORD *)a1 + 38);
  }
  if (v74 == 2)
  {
    uint64_t v77 = *((unsigned __int16 *)a1 + 72);
    v73 |= 0x8000uLL;
    *(void *)(a2 + 1256) = v73;
    *(void *)(a2 + 632) = v77;
    unsigned int v74 = *((_DWORD *)a1 + 38);
  }
  if (v74 == 3)
  {
    uint64_t v78 = *((unsigned __int16 *)a1 + 72);
    v73 |= 0x10000uLL;
    *(void *)(a2 + 1256) = v73;
    *(void *)(a2 + 640) = v78;
    unsigned int v74 = *((_DWORD *)a1 + 38);
  }
  if (v74 == 4)
  {
    uint64_t v79 = *((unsigned int *)a1 + 36);
    v73 |= 0x20000uLL;
    *(void *)(a2 + 1256) = v73;
    *(void *)(a2 + 648) = v79;
    unsigned int v74 = *((_DWORD *)a1 + 38);
  }
  if (v74 == 5)
  {
    uint64_t v80 = *((unsigned __int16 *)a1 + 72);
    v73 |= 0x40000uLL;
    *(void *)(a2 + 1256) = v73;
    *(void *)(a2 + 656) = v80;
    unsigned int v74 = *((_DWORD *)a1 + 38);
  }
  if (v74 == 6)
  {
    uint64_t v81 = a1[144];
    v73 |= 0x80000uLL;
    *(void *)(a2 + 1256) = v73;
    *(void *)(a2 + 664) = v81;
    unsigned int v74 = *((_DWORD *)a1 + 38);
  }
  if (v74 == 7)
  {
    uint64_t v82 = *((unsigned int *)a1 + 36);
    *(void *)(a2 + 1256) = v73 | 0x100000;
    *(void *)(a2 + 672) = v82;
    unsigned int v74 = *((_DWORD *)a1 + 38);
    if (v74 == 7)
    {
      v73 |= 0x300000uLL;
      *(void *)(a2 + 680) = a1[148];
    }
    else
    {
      v73 |= 0x100000uLL;
    }
  }
  *(void *)(a2 + 688) = v74;
  *(void *)(a2 + 696) = *((unsigned int *)a1 + 39);
  *(void *)(a2 + 704) = a1[160];
  *(void *)(a2 + 712) = *((unsigned int *)a1 + 41);
  *(void *)(a2 + 720) = a1[168];
  *(void *)(a2 + 728) = a1[169];
  uint64_t v83 = *(void *)(a1 + 172);
  v84.n128_u64[0] = v83;
  v84.n128_u64[1] = HIDWORD(v83);
  *(__n128 *)(a2 + 736) = v84;
  *(void *)(a2 + 752) = a1[180];
  *(void *)(a2 + 760) = a1[181];
  *(void *)(a2 + 768) = a1[182];
  *(void *)(a2 + 776) = a1[183];
  *(void *)(a2 + 784) = a1[184];
  *(void *)(a2 + 792) = a1[185];
  *(void *)(a2 + 800) = a1[186];
  *(void *)(a2 + 808) = a1[187];
  uint64_t v85 = *(void *)(a1 + 188);
  v84.n128_u64[0] = v85;
  v84.n128_u64[1] = HIDWORD(v85);
  __n128 v86 = v84;
  uint64_t v87 = *(void *)(a1 + 196);
  v84.n128_u64[0] = v87;
  v84.n128_u64[1] = HIDWORD(v87);
  *(__n128 *)(a2 + 816) = v86;
  *(__n128 *)(a2 + 832) = v84;
  v86.n128_u64[0] = *(void *)(a1 + 204);
  v84.n128_u64[0] = v86.n128_u32[0];
  v84.n128_u64[1] = v86.n128_u32[1];
  __n128 result = v84;
  uint64_t v89 = *(void *)(a1 + 212);
  v84.n128_u64[0] = v89;
  v84.n128_u64[1] = HIDWORD(v89);
  *(__n128 *)(a2 + 848) = result;
  *(__n128 *)(a2 + 864) = v84;
  *(void *)(a2 + 880) = a1[220];
  *(void *)(a2 + 888) = a1[221];
  *(void *)(a2 + 896) = a1[222];
  *(void *)(a2 + 904) = *((unsigned int *)a1 + 56);
  uint64_t v90 = a1[228];
  *(void *)(a2 + 1256) = v73 | 0x7FFFFFFC00000;
  *(void *)(a2 + 912) = v90;
  return result;
}

__n128 sub_1CBE666C8(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = *(void *)(a1 + 20);
  *(void *)&long long v14 = v13;
  *((void *)&v14 + 1) = HIDWORD(v13);
  *(_OWORD *)(a2 + 96) = v14;
  uint64_t v15 = a1[28];
  uint64_t v16 = v3 | 0x7E00;
  *(void *)(a2 + 1248) = v3 | 0x7E00;
  *(void *)(a2 + 112) = v15;
  unsigned int v17 = *((_DWORD *)a1 + 10);
  if (!v17)
  {
    uint64_t v18 = a1[32];
    uint64_t v16 = v3 | 0xFE00;
    *(void *)(a2 + 1248) = v3 | 0xFE00;
    *(void *)(a2 + 120) = v18;
    unsigned int v17 = *((_DWORD *)a1 + 10);
  }
  if (v17 == 1)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 16);
    v16 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 128) = v19;
    unsigned int v17 = *((_DWORD *)a1 + 10);
  }
  if (v17 == 2)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 16);
    v16 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 136) = v20;
    unsigned int v17 = *((_DWORD *)a1 + 10);
  }
  if (v17 == 3)
  {
    uint64_t v21 = *((unsigned __int16 *)a1 + 16);
    v16 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 144) = v21;
    unsigned int v17 = *((_DWORD *)a1 + 10);
  }
  if (v17 == 4)
  {
    uint64_t v22 = *((unsigned int *)a1 + 8);
    v16 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 152) = v22;
    unsigned int v17 = *((_DWORD *)a1 + 10);
  }
  if (v17 == 5)
  {
    uint64_t v23 = *((unsigned __int16 *)a1 + 16);
    v16 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 160) = v23;
    unsigned int v17 = *((_DWORD *)a1 + 10);
  }
  if (v17 == 6)
  {
    uint64_t v24 = a1[32];
    v16 |= 0x200000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 168) = v24;
    unsigned int v17 = *((_DWORD *)a1 + 10);
  }
  if (v17 == 7)
  {
    uint64_t v25 = *((unsigned int *)a1 + 8);
    *(void *)(a2 + 1248) = v16 | 0x400000;
    *(void *)(a2 + 176) = v25;
    unsigned int v17 = *((_DWORD *)a1 + 10);
    if (v17 == 7)
    {
      v16 |= 0xC00000uLL;
      *(void *)(a2 + 184) = a1[36];
    }
    else
    {
      v16 |= 0x400000uLL;
    }
  }
  uint64_t v26 = v17;
  uint64_t v27 = *((unsigned int *)a1 + 11);
  *(void *)(a2 + 192) = v26;
  *(void *)(a2 + 200) = v27;
  uint64_t v28 = *((unsigned int *)a1 + 13);
  *(void *)(a2 + 208) = a1[48];
  *(void *)(a2 + 216) = v28;
  uint64_t v29 = a1[57];
  *(void *)(a2 + 224) = a1[56];
  *(void *)(a2 + 232) = v29;
  uint64_t v30 = a1[58];
  uint64_t v31 = a1[59];
  uint64_t v32 = v16 | 0xFF000000;
  *(void *)(a2 + 1248) = v16 | 0xFF000000;
  *(void *)(a2 + 240) = v30;
  *(void *)(a2 + 248) = v31;
  unsigned int v33 = *((_DWORD *)a1 + 17);
  if (!v33)
  {
    uint64_t v34 = a1[60];
    uint64_t v32 = v16 | 0x1FF000000;
    *(void *)(a2 + 1248) = v16 | 0x1FF000000;
    *(void *)(a2 + 256) = v34;
    unsigned int v33 = *((_DWORD *)a1 + 17);
  }
  if (v33 == 1)
  {
    uint64_t v35 = *((unsigned __int16 *)a1 + 30);
    v32 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 264) = v35;
    unsigned int v33 = *((_DWORD *)a1 + 17);
  }
  if (v33 == 2)
  {
    uint64_t v36 = *((unsigned __int16 *)a1 + 30);
    v32 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 272) = v36;
    unsigned int v33 = *((_DWORD *)a1 + 17);
  }
  if (v33 == 3)
  {
    uint64_t v37 = *((unsigned __int16 *)a1 + 30);
    v32 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 280) = v37;
    unsigned int v33 = *((_DWORD *)a1 + 17);
  }
  if (v33 == 4)
  {
    uint64_t v38 = *((unsigned int *)a1 + 15);
    v32 |= 0x1000000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 288) = v38;
    unsigned int v33 = *((_DWORD *)a1 + 17);
  }
  if (v33 == 5)
  {
    uint64_t v39 = *((unsigned __int16 *)a1 + 30);
    v32 |= 0x2000000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 296) = v39;
    unsigned int v33 = *((_DWORD *)a1 + 17);
  }
  if (v33 == 6)
  {
    uint64_t v40 = a1[60];
    v32 |= 0x4000000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 304) = v40;
    unsigned int v33 = *((_DWORD *)a1 + 17);
  }
  if (v33 == 7)
  {
    uint64_t v41 = *((unsigned int *)a1 + 15);
    *(void *)(a2 + 1248) = v32 | 0x8000000000;
    *(void *)(a2 + 312) = v41;
    unsigned int v33 = *((_DWORD *)a1 + 17);
    if (v33 == 7)
    {
      v32 |= 0x18000000000uLL;
      *(void *)(a2 + 320) = a1[64];
    }
    else
    {
      v32 |= 0x8000000000uLL;
    }
  }
  uint64_t v42 = v33;
  uint64_t v43 = *((unsigned int *)a1 + 18);
  *(void *)(a2 + 328) = v42;
  *(void *)(a2 + 336) = v43;
  uint64_t v44 = *((unsigned int *)a1 + 20);
  *(void *)(a2 + 344) = a1[76];
  *(void *)(a2 + 352) = v44;
  uint64_t v45 = a1[85];
  *(void *)(a2 + 360) = a1[84];
  *(void *)(a2 + 368) = v45;
  uint64_t v46 = a1[86];
  uint64_t v47 = a1[87];
  uint64_t v48 = v32 | 0x1FE0000000000;
  *(void *)(a2 + 1248) = v32 | 0x1FE0000000000;
  *(void *)(a2 + 376) = v46;
  *(void *)(a2 + 384) = v47;
  unsigned int v49 = *((_DWORD *)a1 + 24);
  if (!v49)
  {
    uint64_t v50 = a1[88];
    uint64_t v48 = v32 | 0x3FE0000000000;
    *(void *)(a2 + 1248) = v32 | 0x3FE0000000000;
    *(void *)(a2 + 392) = v50;
    unsigned int v49 = *((_DWORD *)a1 + 24);
  }
  if (v49 == 1)
  {
    uint64_t v51 = *((unsigned __int16 *)a1 + 44);
    v48 |= 0x4000000000000uLL;
    *(void *)(a2 + 1248) = v48;
    *(void *)(a2 + 400) = v51;
    unsigned int v49 = *((_DWORD *)a1 + 24);
  }
  if (v49 == 2)
  {
    uint64_t v52 = *((unsigned __int16 *)a1 + 44);
    v48 |= 0x8000000000000uLL;
    *(void *)(a2 + 1248) = v48;
    *(void *)(a2 + 408) = v52;
    unsigned int v49 = *((_DWORD *)a1 + 24);
  }
  if (v49 == 3)
  {
    uint64_t v53 = *((unsigned __int16 *)a1 + 44);
    v48 |= 0x10000000000000uLL;
    *(void *)(a2 + 1248) = v48;
    *(void *)(a2 + 416) = v53;
    unsigned int v49 = *((_DWORD *)a1 + 24);
  }
  if (v49 == 4)
  {
    uint64_t v54 = *((unsigned int *)a1 + 22);
    v48 |= 0x20000000000000uLL;
    *(void *)(a2 + 1248) = v48;
    *(void *)(a2 + 424) = v54;
    unsigned int v49 = *((_DWORD *)a1 + 24);
  }
  if (v49 == 5)
  {
    uint64_t v55 = *((unsigned __int16 *)a1 + 44);
    v48 |= 0x40000000000000uLL;
    *(void *)(a2 + 1248) = v48;
    *(void *)(a2 + 432) = v55;
    unsigned int v49 = *((_DWORD *)a1 + 24);
  }
  if (v49 == 6)
  {
    uint64_t v56 = a1[88];
    v48 |= 0x80000000000000uLL;
    *(void *)(a2 + 1248) = v48;
    *(void *)(a2 + 440) = v56;
    unsigned int v49 = *((_DWORD *)a1 + 24);
  }
  if (v49 == 7)
  {
    uint64_t v57 = *((unsigned int *)a1 + 22);
    *(void *)(a2 + 1248) = v48 | 0x100000000000000;
    *(void *)(a2 + 448) = v57;
    unsigned int v49 = *((_DWORD *)a1 + 24);
    if (v49 == 7)
    {
      v48 |= 0x300000000000000uLL;
      *(void *)(a2 + 456) = a1[92];
    }
    else
    {
      v48 |= 0x100000000000000uLL;
    }
  }
  uint64_t v58 = *((unsigned int *)a1 + 25);
  *(void *)(a2 + 464) = v49;
  *(void *)(a2 + 472) = v58;
  uint64_t v59 = *((unsigned int *)a1 + 27);
  *(void *)(a2 + 480) = a1[104];
  *(void *)(a2 + 488) = v59;
  uint64_t v60 = a1[112];
  *(void *)(a2 + 1248) = v48 | 0xFC00000000000000;
  uint64_t v61 = a1[113];
  *(void *)(a2 + 496) = v60;
  *(void *)(a2 + 504) = v61;
  *(void *)(a2 + 512) = a1[114];
  *(void *)(a2 + 520) = a1[115];
  uint64_t v62 = *(void *)(a1 + 116);
  v63.n128_u64[0] = v62;
  v63.n128_u64[1] = HIDWORD(v62);
  *(__n128 *)(a2 + 528) = v63;
  *(void *)(a2 + 544) = a1[124];
  *(void *)(a2 + 552) = a1[125];
  *(void *)(a2 + 560) = a1[126];
  *(void *)(a2 + 568) = a1[127];
  *(void *)(a2 + 576) = a1[128];
  *(void *)(a2 + 584) = a1[129];
  *(void *)(a2 + 592) = a1[130];
  *(void *)(a2 + 600) = a1[131];
  uint64_t v64 = *(void *)(a1 + 132);
  v63.n128_u64[0] = v64;
  v63.n128_u64[1] = HIDWORD(v64);
  __n128 v65 = v63;
  uint64_t v66 = *(void *)(a1 + 140);
  v63.n128_u64[0] = v66;
  v63.n128_u64[1] = HIDWORD(v66);
  *(__n128 *)(a2 + 608) = v65;
  *(__n128 *)(a2 + 624) = v63;
  v65.n128_u64[0] = *(void *)(a1 + 148);
  v63.n128_u64[0] = v65.n128_u32[0];
  v63.n128_u64[1] = v65.n128_u32[1];
  __n128 result = v63;
  uint64_t v68 = *(void *)(a1 + 156);
  v63.n128_u64[0] = v68;
  v63.n128_u64[1] = HIDWORD(v68);
  *(__n128 *)(a2 + 640) = result;
  *(__n128 *)(a2 + 656) = v63;
  uint64_t v69 = a1[164];
  *(void *)(a2 + 1256) = 0x1FFFFFLL;
  *(void *)(a2 + 672) = v69;
  return result;
}

__n128 sub_1CBE66C34(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = *(void *)(a1 + 20);
  *(void *)&long long v14 = v13;
  *((void *)&v14 + 1) = HIDWORD(v13);
  *(_OWORD *)(a2 + 96) = v14;
  uint64_t v15 = a1[28];
  uint64_t v16 = v3 | 0x7E00;
  *(void *)(a2 + 1248) = v3 | 0x7E00;
  *(void *)(a2 + 112) = v15;
  unsigned int v17 = *((_DWORD *)a1 + 10);
  if (!v17)
  {
    uint64_t v18 = a1[32];
    uint64_t v16 = v3 | 0xFE00;
    *(void *)(a2 + 1248) = v3 | 0xFE00;
    *(void *)(a2 + 120) = v18;
    unsigned int v17 = *((_DWORD *)a1 + 10);
  }
  if (v17 == 1)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 16);
    v16 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 128) = v19;
    unsigned int v17 = *((_DWORD *)a1 + 10);
  }
  if (v17 == 2)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 16);
    v16 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 136) = v20;
    unsigned int v17 = *((_DWORD *)a1 + 10);
  }
  if (v17 == 3)
  {
    uint64_t v21 = *((unsigned __int16 *)a1 + 16);
    v16 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 144) = v21;
    unsigned int v17 = *((_DWORD *)a1 + 10);
  }
  if (v17 == 4)
  {
    uint64_t v22 = *((unsigned int *)a1 + 8);
    v16 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 152) = v22;
    unsigned int v17 = *((_DWORD *)a1 + 10);
  }
  if (v17 == 5)
  {
    uint64_t v23 = *((unsigned __int16 *)a1 + 16);
    v16 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 160) = v23;
    unsigned int v17 = *((_DWORD *)a1 + 10);
  }
  if (v17 == 6)
  {
    uint64_t v24 = a1[32];
    v16 |= 0x200000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 168) = v24;
    unsigned int v17 = *((_DWORD *)a1 + 10);
  }
  if (v17 == 7)
  {
    uint64_t v25 = *((unsigned int *)a1 + 8);
    *(void *)(a2 + 1248) = v16 | 0x400000;
    *(void *)(a2 + 176) = v25;
    unsigned int v17 = *((_DWORD *)a1 + 10);
    if (v17 == 7)
    {
      v16 |= 0xC00000uLL;
      *(void *)(a2 + 184) = a1[36];
    }
    else
    {
      v16 |= 0x400000uLL;
    }
  }
  uint64_t v26 = v17;
  uint64_t v27 = *((unsigned int *)a1 + 11);
  *(void *)(a2 + 192) = v26;
  *(void *)(a2 + 200) = v27;
  uint64_t v28 = *((unsigned int *)a1 + 13);
  *(void *)(a2 + 208) = a1[48];
  *(void *)(a2 + 216) = v28;
  uint64_t v29 = a1[57];
  *(void *)(a2 + 224) = a1[56];
  *(void *)(a2 + 232) = v29;
  uint64_t v30 = a1[58];
  uint64_t v31 = a1[59];
  uint64_t v32 = v16 | 0xFF000000;
  *(void *)(a2 + 1248) = v16 | 0xFF000000;
  *(void *)(a2 + 240) = v30;
  *(void *)(a2 + 248) = v31;
  unsigned int v33 = *((_DWORD *)a1 + 17);
  if (!v33)
  {
    uint64_t v34 = a1[60];
    uint64_t v32 = v16 | 0x1FF000000;
    *(void *)(a2 + 1248) = v16 | 0x1FF000000;
    *(void *)(a2 + 256) = v34;
    unsigned int v33 = *((_DWORD *)a1 + 17);
  }
  if (v33 == 1)
  {
    uint64_t v35 = *((unsigned __int16 *)a1 + 30);
    v32 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 264) = v35;
    unsigned int v33 = *((_DWORD *)a1 + 17);
  }
  if (v33 == 2)
  {
    uint64_t v36 = *((unsigned __int16 *)a1 + 30);
    v32 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 272) = v36;
    unsigned int v33 = *((_DWORD *)a1 + 17);
  }
  if (v33 == 3)
  {
    uint64_t v37 = *((unsigned __int16 *)a1 + 30);
    v32 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 280) = v37;
    unsigned int v33 = *((_DWORD *)a1 + 17);
  }
  if (v33 == 4)
  {
    uint64_t v38 = *((unsigned int *)a1 + 15);
    v32 |= 0x1000000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 288) = v38;
    unsigned int v33 = *((_DWORD *)a1 + 17);
  }
  if (v33 == 5)
  {
    uint64_t v39 = *((unsigned __int16 *)a1 + 30);
    v32 |= 0x2000000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 296) = v39;
    unsigned int v33 = *((_DWORD *)a1 + 17);
  }
  if (v33 == 6)
  {
    uint64_t v40 = a1[60];
    v32 |= 0x4000000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 304) = v40;
    unsigned int v33 = *((_DWORD *)a1 + 17);
  }
  if (v33 == 7)
  {
    uint64_t v41 = *((unsigned int *)a1 + 15);
    *(void *)(a2 + 1248) = v32 | 0x8000000000;
    *(void *)(a2 + 312) = v41;
    unsigned int v33 = *((_DWORD *)a1 + 17);
    if (v33 == 7)
    {
      v32 |= 0x18000000000uLL;
      *(void *)(a2 + 320) = a1[64];
    }
    else
    {
      v32 |= 0x8000000000uLL;
    }
  }
  uint64_t v42 = v33;
  uint64_t v43 = *((unsigned int *)a1 + 18);
  *(void *)(a2 + 328) = v42;
  *(void *)(a2 + 336) = v43;
  uint64_t v44 = *((unsigned int *)a1 + 20);
  *(void *)(a2 + 344) = a1[76];
  *(void *)(a2 + 352) = v44;
  uint64_t v45 = a1[85];
  *(void *)(a2 + 360) = a1[84];
  *(void *)(a2 + 368) = v45;
  uint64_t v46 = a1[86];
  uint64_t v47 = a1[87];
  uint64_t v48 = v32 | 0x1FE0000000000;
  *(void *)(a2 + 1248) = v32 | 0x1FE0000000000;
  *(void *)(a2 + 376) = v46;
  *(void *)(a2 + 384) = v47;
  unsigned int v49 = *((_DWORD *)a1 + 24);
  if (!v49)
  {
    uint64_t v50 = a1[88];
    uint64_t v48 = v32 | 0x3FE0000000000;
    *(void *)(a2 + 1248) = v32 | 0x3FE0000000000;
    *(void *)(a2 + 392) = v50;
    unsigned int v49 = *((_DWORD *)a1 + 24);
  }
  if (v49 == 1)
  {
    uint64_t v51 = *((unsigned __int16 *)a1 + 44);
    v48 |= 0x4000000000000uLL;
    *(void *)(a2 + 1248) = v48;
    *(void *)(a2 + 400) = v51;
    unsigned int v49 = *((_DWORD *)a1 + 24);
  }
  if (v49 == 2)
  {
    uint64_t v52 = *((unsigned __int16 *)a1 + 44);
    v48 |= 0x8000000000000uLL;
    *(void *)(a2 + 1248) = v48;
    *(void *)(a2 + 408) = v52;
    unsigned int v49 = *((_DWORD *)a1 + 24);
  }
  if (v49 == 3)
  {
    uint64_t v53 = *((unsigned __int16 *)a1 + 44);
    v48 |= 0x10000000000000uLL;
    *(void *)(a2 + 1248) = v48;
    *(void *)(a2 + 416) = v53;
    unsigned int v49 = *((_DWORD *)a1 + 24);
  }
  if (v49 == 4)
  {
    uint64_t v54 = *((unsigned int *)a1 + 22);
    v48 |= 0x20000000000000uLL;
    *(void *)(a2 + 1248) = v48;
    *(void *)(a2 + 424) = v54;
    unsigned int v49 = *((_DWORD *)a1 + 24);
  }
  if (v49 == 5)
  {
    uint64_t v55 = *((unsigned __int16 *)a1 + 44);
    v48 |= 0x40000000000000uLL;
    *(void *)(a2 + 1248) = v48;
    *(void *)(a2 + 432) = v55;
    unsigned int v49 = *((_DWORD *)a1 + 24);
  }
  if (v49 == 6)
  {
    uint64_t v56 = a1[88];
    v48 |= 0x80000000000000uLL;
    *(void *)(a2 + 1248) = v48;
    *(void *)(a2 + 440) = v56;
    unsigned int v49 = *((_DWORD *)a1 + 24);
  }
  if (v49 == 7)
  {
    uint64_t v57 = *((unsigned int *)a1 + 22);
    *(void *)(a2 + 1248) = v48 | 0x100000000000000;
    *(void *)(a2 + 448) = v57;
    unsigned int v49 = *((_DWORD *)a1 + 24);
    if (v49 == 7)
    {
      v48 |= 0x300000000000000uLL;
      *(void *)(a2 + 456) = a1[92];
    }
    else
    {
      v48 |= 0x100000000000000uLL;
    }
  }
  uint64_t v58 = *((unsigned int *)a1 + 25);
  *(void *)(a2 + 464) = v49;
  *(void *)(a2 + 472) = v58;
  uint64_t v59 = *((unsigned int *)a1 + 27);
  *(void *)(a2 + 480) = a1[104];
  *(void *)(a2 + 488) = v59;
  uint64_t v60 = a1[112];
  *(void *)(a2 + 1248) = v48 | 0xFC00000000000000;
  uint64_t v61 = a1[113];
  *(void *)(a2 + 496) = v60;
  *(void *)(a2 + 504) = v61;
  *(void *)(a2 + 512) = a1[114];
  *(void *)(a2 + 520) = a1[115];
  uint64_t v62 = *(void *)(a1 + 116);
  v63.n128_u64[0] = v62;
  v63.n128_u64[1] = HIDWORD(v62);
  *(__n128 *)(a2 + 528) = v63;
  *(void *)(a2 + 544) = a1[124];
  *(void *)(a2 + 552) = a1[125];
  *(void *)(a2 + 560) = a1[126];
  *(void *)(a2 + 568) = a1[127];
  *(void *)(a2 + 576) = a1[128];
  *(void *)(a2 + 584) = a1[129];
  *(void *)(a2 + 592) = a1[130];
  *(void *)(a2 + 600) = a1[131];
  uint64_t v64 = *(void *)(a1 + 132);
  v63.n128_u64[0] = v64;
  v63.n128_u64[1] = HIDWORD(v64);
  __n128 v65 = v63;
  uint64_t v66 = *(void *)(a1 + 140);
  v63.n128_u64[0] = v66;
  v63.n128_u64[1] = HIDWORD(v66);
  *(__n128 *)(a2 + 608) = v65;
  *(__n128 *)(a2 + 624) = v63;
  v65.n128_u64[0] = *(void *)(a1 + 148);
  v63.n128_u64[0] = v65.n128_u32[0];
  v63.n128_u64[1] = v65.n128_u32[1];
  __n128 result = v63;
  uint64_t v68 = *(void *)(a1 + 156);
  v63.n128_u64[0] = v68;
  v63.n128_u64[1] = HIDWORD(v68);
  *(__n128 *)(a2 + 640) = result;
  *(__n128 *)(a2 + 656) = v63;
  uint64_t v69 = a1[164];
  *(void *)(a2 + 1256) = 0x1FFFFFLL;
  *(void *)(a2 + 672) = v69;
  return result;
}

__n128 sub_1CBE671A0(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = *(void *)(a1 + 20);
  *(void *)&long long v14 = v13;
  *((void *)&v14 + 1) = HIDWORD(v13);
  *(_OWORD *)(a2 + 96) = v14;
  uint64_t v15 = a1[28];
  uint64_t v16 = v3 | 0x7E00;
  *(void *)(a2 + 1248) = v3 | 0x7E00;
  *(void *)(a2 + 112) = v15;
  unsigned int v17 = *((_DWORD *)a1 + 10);
  if (!v17)
  {
    uint64_t v18 = a1[32];
    uint64_t v16 = v3 | 0xFE00;
    *(void *)(a2 + 1248) = v3 | 0xFE00;
    *(void *)(a2 + 120) = v18;
    unsigned int v17 = *((_DWORD *)a1 + 10);
  }
  if (v17 == 1)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 16);
    v16 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 128) = v19;
    unsigned int v17 = *((_DWORD *)a1 + 10);
  }
  if (v17 == 2)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 16);
    v16 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 136) = v20;
    unsigned int v17 = *((_DWORD *)a1 + 10);
  }
  if (v17 == 3)
  {
    uint64_t v21 = *((unsigned __int16 *)a1 + 16);
    v16 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 144) = v21;
    unsigned int v17 = *((_DWORD *)a1 + 10);
  }
  if (v17 == 4)
  {
    uint64_t v22 = *((unsigned int *)a1 + 8);
    v16 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 152) = v22;
    unsigned int v17 = *((_DWORD *)a1 + 10);
  }
  if (v17 == 5)
  {
    uint64_t v23 = *((unsigned __int16 *)a1 + 16);
    v16 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 160) = v23;
    unsigned int v17 = *((_DWORD *)a1 + 10);
  }
  if (v17 == 6)
  {
    uint64_t v24 = a1[32];
    v16 |= 0x200000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 168) = v24;
    unsigned int v17 = *((_DWORD *)a1 + 10);
  }
  if (v17 == 7)
  {
    uint64_t v25 = *((unsigned int *)a1 + 8);
    *(void *)(a2 + 1248) = v16 | 0x400000;
    *(void *)(a2 + 176) = v25;
    unsigned int v17 = *((_DWORD *)a1 + 10);
    if (v17 == 7)
    {
      v16 |= 0xC00000uLL;
      *(void *)(a2 + 184) = a1[36];
    }
    else
    {
      v16 |= 0x400000uLL;
    }
  }
  uint64_t v26 = v17;
  uint64_t v27 = *((unsigned int *)a1 + 11);
  *(void *)(a2 + 192) = v26;
  *(void *)(a2 + 200) = v27;
  uint64_t v28 = *((unsigned int *)a1 + 13);
  *(void *)(a2 + 208) = a1[48];
  *(void *)(a2 + 216) = v28;
  uint64_t v29 = a1[57];
  *(void *)(a2 + 224) = a1[56];
  *(void *)(a2 + 232) = v29;
  uint64_t v30 = a1[58];
  uint64_t v31 = a1[59];
  uint64_t v32 = v16 | 0xFF000000;
  *(void *)(a2 + 1248) = v16 | 0xFF000000;
  *(void *)(a2 + 240) = v30;
  *(void *)(a2 + 248) = v31;
  unsigned int v33 = *((_DWORD *)a1 + 17);
  if (!v33)
  {
    uint64_t v34 = a1[60];
    uint64_t v32 = v16 | 0x1FF000000;
    *(void *)(a2 + 1248) = v16 | 0x1FF000000;
    *(void *)(a2 + 256) = v34;
    unsigned int v33 = *((_DWORD *)a1 + 17);
  }
  if (v33 == 1)
  {
    uint64_t v35 = *((unsigned __int16 *)a1 + 30);
    v32 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 264) = v35;
    unsigned int v33 = *((_DWORD *)a1 + 17);
  }
  if (v33 == 2)
  {
    uint64_t v36 = *((unsigned __int16 *)a1 + 30);
    v32 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 272) = v36;
    unsigned int v33 = *((_DWORD *)a1 + 17);
  }
  if (v33 == 3)
  {
    uint64_t v37 = *((unsigned __int16 *)a1 + 30);
    v32 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 280) = v37;
    unsigned int v33 = *((_DWORD *)a1 + 17);
  }
  if (v33 == 4)
  {
    uint64_t v38 = *((unsigned int *)a1 + 15);
    v32 |= 0x1000000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 288) = v38;
    unsigned int v33 = *((_DWORD *)a1 + 17);
  }
  if (v33 == 5)
  {
    uint64_t v39 = *((unsigned __int16 *)a1 + 30);
    v32 |= 0x2000000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 296) = v39;
    unsigned int v33 = *((_DWORD *)a1 + 17);
  }
  if (v33 == 6)
  {
    uint64_t v40 = a1[60];
    v32 |= 0x4000000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 304) = v40;
    unsigned int v33 = *((_DWORD *)a1 + 17);
  }
  if (v33 == 7)
  {
    uint64_t v41 = *((unsigned int *)a1 + 15);
    *(void *)(a2 + 1248) = v32 | 0x8000000000;
    *(void *)(a2 + 312) = v41;
    unsigned int v33 = *((_DWORD *)a1 + 17);
    if (v33 == 7)
    {
      v32 |= 0x18000000000uLL;
      *(void *)(a2 + 320) = a1[64];
      unsigned int v33 = 7;
    }
    else
    {
      v32 |= 0x8000000000uLL;
    }
  }
  uint64_t v42 = *((unsigned int *)a1 + 18);
  *(void *)(a2 + 328) = v33;
  *(void *)(a2 + 336) = v42;
  uint64_t v43 = *((unsigned int *)a1 + 20);
  *(void *)(a2 + 344) = a1[76];
  *(void *)(a2 + 352) = v43;
  uint64_t v44 = a1[85];
  *(void *)(a2 + 360) = a1[84];
  *(void *)(a2 + 368) = v44;
  uint64_t v45 = a1[87];
  *(void *)(a2 + 376) = a1[86];
  *(void *)(a2 + 384) = v45;
  uint64_t v46 = *((void *)a1 + 11);
  v47.n128_u64[0] = v46;
  v47.n128_u64[1] = HIDWORD(v46);
  *(__n128 *)(a2 + 392) = v47;
  uint64_t v48 = a1[97];
  *(void *)(a2 + 408) = a1[96];
  *(void *)(a2 + 416) = v48;
  uint64_t v49 = a1[99];
  *(void *)(a2 + 424) = a1[98];
  *(void *)(a2 + 432) = v49;
  uint64_t v50 = a1[101];
  *(void *)(a2 + 440) = a1[100];
  *(void *)(a2 + 448) = v50;
  uint64_t v51 = a1[103];
  *(void *)(a2 + 456) = a1[102];
  *(void *)(a2 + 464) = v51;
  uint64_t v52 = *((void *)a1 + 13);
  uint64_t v53 = *((void *)a1 + 14);
  v47.n128_u64[0] = v52;
  v47.n128_u64[1] = HIDWORD(v52);
  __n128 v54 = v47;
  v47.n128_u64[0] = v53;
  v47.n128_u64[1] = HIDWORD(v53);
  *(__n128 *)(a2 + 472) = v54;
  *(__n128 *)(a2 + 488) = v47;
  *(void *)(a2 + 1248) = v32 | 0xFFFFFE0000000000;
  v54.n128_u64[0] = *((void *)a1 + 15);
  uint64_t v55 = *((void *)a1 + 16);
  v47.n128_u64[0] = v54.n128_u32[0];
  v47.n128_u64[1] = v54.n128_u32[1];
  __n128 result = v47;
  v47.n128_u64[0] = v55;
  v47.n128_u64[1] = HIDWORD(v55);
  *(__n128 *)(a2 + 504) = result;
  *(__n128 *)(a2 + 520) = v47;
  uint64_t v57 = a1[136];
  *(void *)(a2 + 1256) = 15;
  *(void *)(a2 + 536) = v57;
  return result;
}

__n128 sub_1CBE675C4(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = *(void *)(a1 + 20);
  *(void *)&long long v14 = v13;
  *((void *)&v14 + 1) = HIDWORD(v13);
  *(_OWORD *)(a2 + 96) = v14;
  uint64_t v15 = a1[28];
  uint64_t v16 = *((unsigned int *)a1 + 8);
  uint64_t v17 = v3 | 0xFE00;
  *(void *)(a2 + 1248) = v3 | 0xFE00;
  *(void *)(a2 + 112) = v15;
  *(void *)(a2 + 120) = v16;
  unsigned int v18 = *((_DWORD *)a1 + 11);
  if (!v18)
  {
    uint64_t v19 = a1[36];
    uint64_t v17 = v3 | 0x1FE00;
    *(void *)(a2 + 1248) = v3 | 0x1FE00;
    *(void *)(a2 + 128) = v19;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 1)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 136) = v20;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 2)
  {
    uint64_t v21 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 144) = v21;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 3)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 152) = v22;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 4)
  {
    uint64_t v23 = *((unsigned int *)a1 + 9);
    v17 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 160) = v23;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 5)
  {
    uint64_t v24 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x200000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 168) = v24;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 6)
  {
    uint64_t v25 = a1[36];
    v17 |= 0x400000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 176) = v25;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 7)
  {
    uint64_t v26 = *((unsigned int *)a1 + 9);
    *(void *)(a2 + 1248) = v17 | 0x800000;
    *(void *)(a2 + 184) = v26;
    unsigned int v18 = *((_DWORD *)a1 + 11);
    if (v18 == 7)
    {
      v17 |= 0x1800000uLL;
      *(void *)(a2 + 192) = a1[40];
    }
    else
    {
      v17 |= 0x800000uLL;
    }
  }
  uint64_t v27 = v18;
  uint64_t v28 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = v27;
  *(void *)(a2 + 208) = v28;
  uint64_t v29 = *((unsigned int *)a1 + 14);
  *(void *)(a2 + 216) = a1[52];
  *(void *)(a2 + 224) = v29;
  uint64_t v30 = a1[61];
  *(void *)(a2 + 232) = a1[60];
  *(void *)(a2 + 240) = v30;
  uint64_t v31 = a1[62];
  uint64_t v32 = a1[63];
  uint64_t v33 = v17 | 0x1FE000000;
  *(void *)(a2 + 1248) = v17 | 0x1FE000000;
  *(void *)(a2 + 248) = v31;
  *(void *)(a2 + 256) = v32;
  unsigned int v34 = *((_DWORD *)a1 + 18);
  if (!v34)
  {
    uint64_t v35 = a1[64];
    uint64_t v33 = v17 | 0x3FE000000;
    *(void *)(a2 + 1248) = v17 | 0x3FE000000;
    *(void *)(a2 + 264) = v35;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 1)
  {
    uint64_t v36 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 272) = v36;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 2)
  {
    uint64_t v37 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 280) = v37;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 3)
  {
    uint64_t v38 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x1000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 288) = v38;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 4)
  {
    uint64_t v39 = *((unsigned int *)a1 + 16);
    v33 |= 0x2000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 296) = v39;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 5)
  {
    uint64_t v40 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x4000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 304) = v40;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 6)
  {
    uint64_t v41 = a1[64];
    v33 |= 0x8000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 312) = v41;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 7)
  {
    uint64_t v42 = *((unsigned int *)a1 + 16);
    *(void *)(a2 + 1248) = v33 | 0x10000000000;
    *(void *)(a2 + 320) = v42;
    unsigned int v34 = *((_DWORD *)a1 + 18);
    if (v34 == 7)
    {
      v33 |= 0x30000000000uLL;
      *(void *)(a2 + 328) = a1[68];
    }
    else
    {
      v33 |= 0x10000000000uLL;
    }
  }
  uint64_t v43 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 336) = v34;
  *(void *)(a2 + 344) = v43;
  uint64_t v44 = *((unsigned int *)a1 + 21);
  *(void *)(a2 + 352) = a1[80];
  *(void *)(a2 + 360) = v44;
  uint64_t v45 = a1[89];
  *(void *)(a2 + 368) = a1[88];
  *(void *)(a2 + 376) = v45;
  uint64_t v46 = a1[91];
  *(void *)(a2 + 384) = a1[90];
  *(void *)(a2 + 392) = v46;
  uint64_t v47 = *(void *)(a1 + 92);
  v48.n128_u64[0] = v47;
  v48.n128_u64[1] = HIDWORD(v47);
  *(__n128 *)(a2 + 400) = v48;
  uint64_t v49 = a1[101];
  *(void *)(a2 + 416) = a1[100];
  *(void *)(a2 + 424) = v49;
  uint64_t v50 = a1[103];
  *(void *)(a2 + 432) = a1[102];
  *(void *)(a2 + 440) = v50;
  uint64_t v51 = a1[105];
  *(void *)(a2 + 448) = a1[104];
  *(void *)(a2 + 456) = v51;
  uint64_t v52 = a1[107];
  *(void *)(a2 + 464) = a1[106];
  *(void *)(a2 + 472) = v52;
  uint64_t v53 = *(void *)(a1 + 108);
  v48.n128_u64[0] = v53;
  v48.n128_u64[1] = HIDWORD(v53);
  __n128 v54 = v48;
  *(void *)(a2 + 1248) = v33 | 0xFFFFFC0000000000;
  uint64_t v55 = *(void *)(a1 + 116);
  v48.n128_u64[0] = v55;
  v48.n128_u64[1] = HIDWORD(v55);
  *(__n128 *)(a2 + 480) = v54;
  *(__n128 *)(a2 + 496) = v48;
  v54.n128_u64[0] = *(void *)(a1 + 124);
  v48.n128_u64[0] = v54.n128_u32[0];
  v48.n128_u64[1] = v54.n128_u32[1];
  __n128 result = v48;
  uint64_t v57 = *(void *)(a1 + 132);
  v48.n128_u64[0] = v57;
  v48.n128_u64[1] = HIDWORD(v57);
  *(__n128 *)(a2 + 512) = result;
  *(__n128 *)(a2 + 528) = v48;
  *(void *)(a2 + 544) = a1[140];
  uint64_t v58 = *((unsigned int *)a1 + 36);
  *(void *)(a2 + 1256) = 63;
  *(void *)(a2 + 552) = v58;
  return result;
}

__n128 sub_1CBE679F4(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = *(void *)(a1 + 20);
  *(void *)&long long v14 = v13;
  *((void *)&v14 + 1) = HIDWORD(v13);
  *(_OWORD *)(a2 + 96) = v14;
  uint64_t v15 = a1[28];
  uint64_t v16 = *((unsigned int *)a1 + 8);
  uint64_t v17 = v3 | 0xFE00;
  *(void *)(a2 + 1248) = v3 | 0xFE00;
  *(void *)(a2 + 112) = v15;
  *(void *)(a2 + 120) = v16;
  unsigned int v18 = *((_DWORD *)a1 + 11);
  if (!v18)
  {
    uint64_t v19 = a1[36];
    uint64_t v17 = v3 | 0x1FE00;
    *(void *)(a2 + 1248) = v3 | 0x1FE00;
    *(void *)(a2 + 128) = v19;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 1)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 136) = v20;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 2)
  {
    uint64_t v21 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 144) = v21;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 3)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 152) = v22;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 4)
  {
    uint64_t v23 = *((unsigned int *)a1 + 9);
    v17 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 160) = v23;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 5)
  {
    uint64_t v24 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x200000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 168) = v24;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 6)
  {
    uint64_t v25 = a1[36];
    v17 |= 0x400000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 176) = v25;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 7)
  {
    uint64_t v26 = *((unsigned int *)a1 + 9);
    *(void *)(a2 + 1248) = v17 | 0x800000;
    *(void *)(a2 + 184) = v26;
    unsigned int v18 = *((_DWORD *)a1 + 11);
    if (v18 == 7)
    {
      v17 |= 0x1800000uLL;
      *(void *)(a2 + 192) = a1[40];
      unsigned int v18 = 7;
    }
    else
    {
      v17 |= 0x800000uLL;
    }
  }
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = v18;
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = *((unsigned int *)a1 + 14);
  *(void *)(a2 + 216) = a1[52];
  *(void *)(a2 + 224) = v28;
  uint64_t v29 = a1[61];
  *(void *)(a2 + 232) = a1[60];
  *(void *)(a2 + 240) = v29;
  uint64_t v30 = a1[63];
  *(void *)(a2 + 248) = a1[62];
  *(void *)(a2 + 256) = v30;
  uint64_t v31 = *((void *)a1 + 8);
  v32.n128_u64[0] = v31;
  v32.n128_u64[1] = HIDWORD(v31);
  *(__n128 *)(a2 + 264) = v32;
  uint64_t v33 = a1[73];
  *(void *)(a2 + 280) = a1[72];
  *(void *)(a2 + 288) = v33;
  uint64_t v34 = a1[75];
  *(void *)(a2 + 296) = a1[74];
  *(void *)(a2 + 304) = v34;
  uint64_t v35 = a1[77];
  *(void *)(a2 + 312) = a1[76];
  *(void *)(a2 + 320) = v35;
  uint64_t v36 = a1[79];
  *(void *)(a2 + 328) = a1[78];
  *(void *)(a2 + 336) = v36;
  uint64_t v37 = *((void *)a1 + 10);
  uint64_t v38 = *((void *)a1 + 11);
  v32.n128_u64[0] = v37;
  v32.n128_u64[1] = HIDWORD(v37);
  __n128 v39 = v32;
  v32.n128_u64[0] = v38;
  v32.n128_u64[1] = HIDWORD(v38);
  *(__n128 *)(a2 + 344) = v39;
  *(__n128 *)(a2 + 360) = v32;
  v39.n128_u64[0] = *((void *)a1 + 12);
  uint64_t v40 = *((void *)a1 + 13);
  v32.n128_u64[0] = v39.n128_u32[0];
  v32.n128_u64[1] = v39.n128_u32[1];
  __n128 result = v32;
  v32.n128_u64[0] = v40;
  v32.n128_u64[1] = HIDWORD(v40);
  *(__n128 *)(a2 + 376) = result;
  *(__n128 *)(a2 + 392) = v32;
  uint64_t v42 = a1[112];
  uint64_t v43 = *((unsigned int *)a1 + 29);
  *(void *)(a2 + 1248) = v17 | 0x1FFFFFFE000000;
  *(void *)(a2 + 408) = v42;
  *(void *)(a2 + 416) = v43;
  return result;
}

__n128 sub_1CBE67CE4(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = *(void *)(a1 + 20);
  *(void *)&long long v14 = v13;
  *((void *)&v14 + 1) = HIDWORD(v13);
  *(_OWORD *)(a2 + 96) = v14;
  uint64_t v15 = a1[28];
  uint64_t v16 = *((unsigned int *)a1 + 8);
  uint64_t v17 = v3 | 0xFE00;
  *(void *)(a2 + 1248) = v3 | 0xFE00;
  *(void *)(a2 + 112) = v15;
  *(void *)(a2 + 120) = v16;
  unsigned int v18 = *((_DWORD *)a1 + 11);
  if (!v18)
  {
    uint64_t v19 = a1[36];
    uint64_t v17 = v3 | 0x1FE00;
    *(void *)(a2 + 1248) = v3 | 0x1FE00;
    *(void *)(a2 + 128) = v19;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 1)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 136) = v20;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 2)
  {
    uint64_t v21 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 144) = v21;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 3)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 152) = v22;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 4)
  {
    uint64_t v23 = *((unsigned int *)a1 + 9);
    v17 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 160) = v23;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 5)
  {
    uint64_t v24 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x200000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 168) = v24;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 6)
  {
    uint64_t v25 = a1[36];
    v17 |= 0x400000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 176) = v25;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 7)
  {
    uint64_t v26 = *((unsigned int *)a1 + 9);
    *(void *)(a2 + 1248) = v17 | 0x800000;
    *(void *)(a2 + 184) = v26;
    unsigned int v18 = *((_DWORD *)a1 + 11);
    if (v18 == 7)
    {
      v17 |= 0x1800000uLL;
      *(void *)(a2 + 192) = a1[40];
      unsigned int v18 = 7;
    }
    else
    {
      v17 |= 0x800000uLL;
    }
  }
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = v18;
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = *((unsigned int *)a1 + 14);
  *(void *)(a2 + 216) = a1[52];
  *(void *)(a2 + 224) = v28;
  uint64_t v29 = a1[61];
  *(void *)(a2 + 232) = a1[60];
  *(void *)(a2 + 240) = v29;
  uint64_t v30 = a1[63];
  *(void *)(a2 + 248) = a1[62];
  *(void *)(a2 + 256) = v30;
  uint64_t v31 = *((void *)a1 + 8);
  v32.n128_u64[0] = v31;
  v32.n128_u64[1] = HIDWORD(v31);
  *(__n128 *)(a2 + 264) = v32;
  uint64_t v33 = a1[73];
  *(void *)(a2 + 280) = a1[72];
  *(void *)(a2 + 288) = v33;
  uint64_t v34 = a1[75];
  *(void *)(a2 + 296) = a1[74];
  *(void *)(a2 + 304) = v34;
  uint64_t v35 = a1[77];
  *(void *)(a2 + 312) = a1[76];
  *(void *)(a2 + 320) = v35;
  uint64_t v36 = a1[79];
  *(void *)(a2 + 328) = a1[78];
  *(void *)(a2 + 336) = v36;
  uint64_t v37 = *((void *)a1 + 10);
  uint64_t v38 = *((void *)a1 + 11);
  v32.n128_u64[0] = v37;
  v32.n128_u64[1] = HIDWORD(v37);
  __n128 v39 = v32;
  v32.n128_u64[0] = v38;
  v32.n128_u64[1] = HIDWORD(v38);
  *(__n128 *)(a2 + 344) = v39;
  *(__n128 *)(a2 + 360) = v32;
  v39.n128_u64[0] = *((void *)a1 + 12);
  uint64_t v40 = *((void *)a1 + 13);
  v32.n128_u64[0] = v39.n128_u32[0];
  v32.n128_u64[1] = v39.n128_u32[1];
  __n128 result = v32;
  v32.n128_u64[0] = v40;
  v32.n128_u64[1] = HIDWORD(v40);
  *(__n128 *)(a2 + 376) = result;
  *(__n128 *)(a2 + 392) = v32;
  uint64_t v42 = a1[112];
  uint64_t v43 = *((unsigned int *)a1 + 29);
  *(void *)(a2 + 1248) = v17 | 0x1FFFFFFE000000;
  *(void *)(a2 + 408) = v42;
  *(void *)(a2 + 416) = v43;
  return result;
}

__n128 sub_1CBE67FD4(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = *(void *)(a1 + 20);
  *(void *)&long long v14 = v13;
  *((void *)&v14 + 1) = HIDWORD(v13);
  *(_OWORD *)(a2 + 96) = v14;
  uint64_t v15 = a1[28];
  uint64_t v16 = *((unsigned int *)a1 + 8);
  uint64_t v17 = v3 | 0xFE00;
  *(void *)(a2 + 1248) = v3 | 0xFE00;
  *(void *)(a2 + 112) = v15;
  *(void *)(a2 + 120) = v16;
  unsigned int v18 = *((_DWORD *)a1 + 11);
  if (!v18)
  {
    uint64_t v19 = a1[36];
    uint64_t v17 = v3 | 0x1FE00;
    *(void *)(a2 + 1248) = v3 | 0x1FE00;
    *(void *)(a2 + 128) = v19;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 1)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 136) = v20;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 2)
  {
    uint64_t v21 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 144) = v21;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 3)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 152) = v22;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 4)
  {
    uint64_t v23 = *((unsigned int *)a1 + 9);
    v17 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 160) = v23;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 5)
  {
    uint64_t v24 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x200000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 168) = v24;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 6)
  {
    uint64_t v25 = a1[36];
    v17 |= 0x400000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 176) = v25;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 7)
  {
    uint64_t v26 = *((unsigned int *)a1 + 9);
    *(void *)(a2 + 1248) = v17 | 0x800000;
    *(void *)(a2 + 184) = v26;
    unsigned int v18 = *((_DWORD *)a1 + 11);
    if (v18 == 7)
    {
      v17 |= 0x1800000uLL;
      *(void *)(a2 + 192) = a1[40];
    }
    else
    {
      v17 |= 0x800000uLL;
    }
  }
  uint64_t v27 = v18;
  uint64_t v28 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = v27;
  *(void *)(a2 + 208) = v28;
  uint64_t v29 = *((unsigned int *)a1 + 14);
  *(void *)(a2 + 216) = a1[52];
  *(void *)(a2 + 224) = v29;
  uint64_t v30 = a1[61];
  *(void *)(a2 + 232) = a1[60];
  *(void *)(a2 + 240) = v30;
  uint64_t v31 = a1[62];
  uint64_t v32 = a1[63];
  uint64_t v33 = v17 | 0x1FE000000;
  *(void *)(a2 + 1248) = v17 | 0x1FE000000;
  *(void *)(a2 + 248) = v31;
  *(void *)(a2 + 256) = v32;
  unsigned int v34 = *((_DWORD *)a1 + 18);
  if (!v34)
  {
    uint64_t v35 = a1[64];
    uint64_t v33 = v17 | 0x3FE000000;
    *(void *)(a2 + 1248) = v17 | 0x3FE000000;
    *(void *)(a2 + 264) = v35;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 1)
  {
    uint64_t v36 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 272) = v36;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 2)
  {
    uint64_t v37 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 280) = v37;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 3)
  {
    uint64_t v38 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x1000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 288) = v38;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 4)
  {
    uint64_t v39 = *((unsigned int *)a1 + 16);
    v33 |= 0x2000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 296) = v39;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 5)
  {
    uint64_t v40 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x4000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 304) = v40;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 6)
  {
    uint64_t v41 = a1[64];
    v33 |= 0x8000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 312) = v41;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 7)
  {
    uint64_t v42 = *((unsigned int *)a1 + 16);
    *(void *)(a2 + 1248) = v33 | 0x10000000000;
    *(void *)(a2 + 320) = v42;
    unsigned int v34 = *((_DWORD *)a1 + 18);
    if (v34 == 7)
    {
      v33 |= 0x30000000000uLL;
      *(void *)(a2 + 328) = a1[68];
    }
    else
    {
      v33 |= 0x10000000000uLL;
    }
  }
  uint64_t v43 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 336) = v34;
  *(void *)(a2 + 344) = v43;
  uint64_t v44 = *((unsigned int *)a1 + 21);
  *(void *)(a2 + 352) = a1[80];
  *(void *)(a2 + 360) = v44;
  uint64_t v45 = a1[89];
  *(void *)(a2 + 368) = a1[88];
  *(void *)(a2 + 376) = v45;
  uint64_t v46 = a1[91];
  *(void *)(a2 + 384) = a1[90];
  *(void *)(a2 + 392) = v46;
  uint64_t v47 = *(void *)(a1 + 92);
  v48.n128_u64[0] = v47;
  v48.n128_u64[1] = HIDWORD(v47);
  *(__n128 *)(a2 + 400) = v48;
  uint64_t v49 = a1[101];
  *(void *)(a2 + 416) = a1[100];
  *(void *)(a2 + 424) = v49;
  uint64_t v50 = a1[103];
  *(void *)(a2 + 432) = a1[102];
  *(void *)(a2 + 440) = v50;
  uint64_t v51 = a1[105];
  *(void *)(a2 + 448) = a1[104];
  *(void *)(a2 + 456) = v51;
  uint64_t v52 = a1[107];
  *(void *)(a2 + 464) = a1[106];
  *(void *)(a2 + 472) = v52;
  uint64_t v53 = *(void *)(a1 + 108);
  v48.n128_u64[0] = v53;
  v48.n128_u64[1] = HIDWORD(v53);
  __n128 v54 = v48;
  *(void *)(a2 + 1248) = v33 | 0xFFFFFC0000000000;
  uint64_t v55 = *(void *)(a1 + 116);
  v48.n128_u64[0] = v55;
  v48.n128_u64[1] = HIDWORD(v55);
  *(__n128 *)(a2 + 480) = v54;
  *(__n128 *)(a2 + 496) = v48;
  v54.n128_u64[0] = *(void *)(a1 + 124);
  v48.n128_u64[0] = v54.n128_u32[0];
  v48.n128_u64[1] = v54.n128_u32[1];
  __n128 result = v48;
  uint64_t v57 = *(void *)(a1 + 132);
  v48.n128_u64[0] = v57;
  v48.n128_u64[1] = HIDWORD(v57);
  *(__n128 *)(a2 + 512) = result;
  *(__n128 *)(a2 + 528) = v48;
  uint64_t v58 = a1[140];
  *(void *)(a2 + 1256) = 31;
  *(void *)(a2 + 544) = v58;
  return result;
}

__n128 sub_1CBE683FC(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = *(void *)(a1 + 20);
  *(void *)&long long v14 = v13;
  *((void *)&v14 + 1) = HIDWORD(v13);
  *(_OWORD *)(a2 + 96) = v14;
  uint64_t v15 = a1[28];
  uint64_t v16 = *((unsigned int *)a1 + 8);
  uint64_t v17 = v3 | 0xFE00;
  *(void *)(a2 + 1248) = v3 | 0xFE00;
  *(void *)(a2 + 112) = v15;
  *(void *)(a2 + 120) = v16;
  unsigned int v18 = *((_DWORD *)a1 + 11);
  if (!v18)
  {
    uint64_t v19 = a1[36];
    uint64_t v17 = v3 | 0x1FE00;
    *(void *)(a2 + 1248) = v3 | 0x1FE00;
    *(void *)(a2 + 128) = v19;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 1)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 136) = v20;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 2)
  {
    uint64_t v21 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 144) = v21;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 3)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 152) = v22;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 4)
  {
    uint64_t v23 = *((unsigned int *)a1 + 9);
    v17 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 160) = v23;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 5)
  {
    uint64_t v24 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x200000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 168) = v24;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 6)
  {
    uint64_t v25 = a1[36];
    v17 |= 0x400000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 176) = v25;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 7)
  {
    uint64_t v26 = *((unsigned int *)a1 + 9);
    *(void *)(a2 + 1248) = v17 | 0x800000;
    *(void *)(a2 + 184) = v26;
    unsigned int v18 = *((_DWORD *)a1 + 11);
    if (v18 == 7)
    {
      v17 |= 0x1800000uLL;
      *(void *)(a2 + 192) = a1[40];
      unsigned int v18 = 7;
    }
    else
    {
      v17 |= 0x800000uLL;
    }
  }
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = v18;
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = *((unsigned int *)a1 + 14);
  *(void *)(a2 + 216) = a1[52];
  *(void *)(a2 + 224) = v28;
  uint64_t v29 = a1[61];
  *(void *)(a2 + 232) = a1[60];
  *(void *)(a2 + 240) = v29;
  uint64_t v30 = a1[63];
  *(void *)(a2 + 248) = a1[62];
  *(void *)(a2 + 256) = v30;
  uint64_t v31 = *((void *)a1 + 8);
  v32.n128_u64[0] = v31;
  v32.n128_u64[1] = HIDWORD(v31);
  *(__n128 *)(a2 + 264) = v32;
  uint64_t v33 = a1[73];
  *(void *)(a2 + 280) = a1[72];
  *(void *)(a2 + 288) = v33;
  uint64_t v34 = a1[75];
  *(void *)(a2 + 296) = a1[74];
  *(void *)(a2 + 304) = v34;
  uint64_t v35 = a1[77];
  *(void *)(a2 + 312) = a1[76];
  *(void *)(a2 + 320) = v35;
  uint64_t v36 = a1[79];
  *(void *)(a2 + 328) = a1[78];
  *(void *)(a2 + 336) = v36;
  uint64_t v37 = *((void *)a1 + 10);
  uint64_t v38 = *((void *)a1 + 11);
  v32.n128_u64[0] = v37;
  v32.n128_u64[1] = HIDWORD(v37);
  __n128 v39 = v32;
  v32.n128_u64[0] = v38;
  v32.n128_u64[1] = HIDWORD(v38);
  *(__n128 *)(a2 + 344) = v39;
  *(__n128 *)(a2 + 360) = v32;
  v39.n128_u64[0] = *((void *)a1 + 12);
  uint64_t v40 = *((void *)a1 + 13);
  v32.n128_u64[0] = v39.n128_u32[0];
  v32.n128_u64[1] = v39.n128_u32[1];
  __n128 result = v32;
  v32.n128_u64[0] = v40;
  v32.n128_u64[1] = HIDWORD(v40);
  *(__n128 *)(a2 + 376) = result;
  *(__n128 *)(a2 + 392) = v32;
  uint64_t v42 = a1[112];
  uint64_t v43 = *((unsigned int *)a1 + 29);
  *(void *)(a2 + 1248) = v17 | 0x1FFFFFFE000000;
  *(void *)(a2 + 408) = v42;
  *(void *)(a2 + 416) = v43;
  return result;
}

__n128 sub_1CBE686EC(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
      unsigned int v16 = 7;
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v16;
  *(void *)(a2 + 192) = v25;
  uint64_t v26 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v26;
  uint64_t v27 = a1[53];
  *(void *)(a2 + 216) = a1[52];
  *(void *)(a2 + 224) = v27;
  uint64_t v28 = a1[55];
  *(void *)(a2 + 232) = a1[54];
  *(void *)(a2 + 240) = v28;
  uint64_t v29 = *((void *)a1 + 7);
  v30.n128_u64[0] = v29;
  v30.n128_u64[1] = HIDWORD(v29);
  *(__n128 *)(a2 + 248) = v30;
  uint64_t v31 = a1[65];
  *(void *)(a2 + 264) = a1[64];
  *(void *)(a2 + 272) = v31;
  uint64_t v32 = a1[67];
  *(void *)(a2 + 280) = a1[66];
  *(void *)(a2 + 288) = v32;
  uint64_t v33 = a1[69];
  *(void *)(a2 + 296) = a1[68];
  *(void *)(a2 + 304) = v33;
  uint64_t v34 = a1[71];
  *(void *)(a2 + 312) = a1[70];
  *(void *)(a2 + 320) = v34;
  uint64_t v35 = *((void *)a1 + 9);
  uint64_t v36 = *((void *)a1 + 10);
  v30.n128_u64[0] = v35;
  v30.n128_u64[1] = HIDWORD(v35);
  __n128 v37 = v30;
  v30.n128_u64[0] = v36;
  v30.n128_u64[1] = HIDWORD(v36);
  *(__n128 *)(a2 + 328) = v37;
  *(__n128 *)(a2 + 344) = v30;
  v37.n128_u64[0] = *((void *)a1 + 11);
  uint64_t v38 = *((void *)a1 + 12);
  v30.n128_u64[0] = v37.n128_u32[0];
  v30.n128_u64[1] = v37.n128_u32[1];
  __n128 result = v30;
  v30.n128_u64[0] = v38;
  v30.n128_u64[1] = HIDWORD(v38);
  *(__n128 *)(a2 + 360) = result;
  *(__n128 *)(a2 + 376) = v30;
  uint64_t v40 = a1[104];
  *(void *)(a2 + 1248) = v13 | 0x3FFFFFF800000;
  *(void *)(a2 + 392) = v40;
  return result;
}

__n128 sub_1CBE689CC(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = *(void *)(a1 + 20);
  *(void *)&long long v14 = v13;
  *((void *)&v14 + 1) = HIDWORD(v13);
  *(_OWORD *)(a2 + 96) = v14;
  uint64_t v15 = a1[28];
  uint64_t v16 = *((unsigned int *)a1 + 8);
  uint64_t v17 = v3 | 0xFE00;
  *(void *)(a2 + 1248) = v3 | 0xFE00;
  *(void *)(a2 + 112) = v15;
  *(void *)(a2 + 120) = v16;
  unsigned int v18 = *((_DWORD *)a1 + 11);
  if (!v18)
  {
    uint64_t v19 = a1[36];
    uint64_t v17 = v3 | 0x1FE00;
    *(void *)(a2 + 1248) = v3 | 0x1FE00;
    *(void *)(a2 + 128) = v19;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 1)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 136) = v20;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 2)
  {
    uint64_t v21 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 144) = v21;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 3)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 152) = v22;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 4)
  {
    uint64_t v23 = *((unsigned int *)a1 + 9);
    v17 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 160) = v23;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 5)
  {
    uint64_t v24 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x200000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 168) = v24;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 6)
  {
    uint64_t v25 = a1[36];
    v17 |= 0x400000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 176) = v25;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 7)
  {
    uint64_t v26 = *((unsigned int *)a1 + 9);
    *(void *)(a2 + 1248) = v17 | 0x800000;
    *(void *)(a2 + 184) = v26;
    unsigned int v18 = *((_DWORD *)a1 + 11);
    if (v18 == 7)
    {
      v17 |= 0x1800000uLL;
      *(void *)(a2 + 192) = a1[40];
    }
    else
    {
      v17 |= 0x800000uLL;
    }
  }
  uint64_t v27 = v18;
  uint64_t v28 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = v27;
  *(void *)(a2 + 208) = v28;
  uint64_t v29 = *((unsigned int *)a1 + 14);
  *(void *)(a2 + 216) = a1[52];
  *(void *)(a2 + 224) = v29;
  uint64_t v30 = a1[61];
  *(void *)(a2 + 232) = a1[60];
  *(void *)(a2 + 240) = v30;
  uint64_t v31 = a1[62];
  uint64_t v32 = a1[63];
  uint64_t v33 = v17 | 0x1FE000000;
  *(void *)(a2 + 1248) = v17 | 0x1FE000000;
  *(void *)(a2 + 248) = v31;
  *(void *)(a2 + 256) = v32;
  unsigned int v34 = *((_DWORD *)a1 + 18);
  if (!v34)
  {
    uint64_t v35 = a1[64];
    uint64_t v33 = v17 | 0x3FE000000;
    *(void *)(a2 + 1248) = v17 | 0x3FE000000;
    *(void *)(a2 + 264) = v35;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 1)
  {
    uint64_t v36 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 272) = v36;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 2)
  {
    uint64_t v37 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 280) = v37;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 3)
  {
    uint64_t v38 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x1000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 288) = v38;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 4)
  {
    uint64_t v39 = *((unsigned int *)a1 + 16);
    v33 |= 0x2000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 296) = v39;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 5)
  {
    uint64_t v40 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x4000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 304) = v40;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 6)
  {
    uint64_t v41 = a1[64];
    v33 |= 0x8000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 312) = v41;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 7)
  {
    uint64_t v42 = *((unsigned int *)a1 + 16);
    *(void *)(a2 + 1248) = v33 | 0x10000000000;
    *(void *)(a2 + 320) = v42;
    unsigned int v34 = *((_DWORD *)a1 + 18);
    if (v34 == 7)
    {
      v33 |= 0x30000000000uLL;
      *(void *)(a2 + 328) = a1[68];
    }
    else
    {
      v33 |= 0x10000000000uLL;
    }
  }
  uint64_t v43 = v34;
  uint64_t v44 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 336) = v43;
  *(void *)(a2 + 344) = v44;
  uint64_t v45 = *((unsigned int *)a1 + 21);
  *(void *)(a2 + 352) = a1[80];
  *(void *)(a2 + 360) = v45;
  uint64_t v46 = a1[89];
  *(void *)(a2 + 368) = a1[88];
  *(void *)(a2 + 376) = v46;
  uint64_t v47 = a1[90];
  uint64_t v48 = a1[91];
  uint64_t v49 = v33 | 0x3FC0000000000;
  *(void *)(a2 + 1248) = v33 | 0x3FC0000000000;
  *(void *)(a2 + 384) = v47;
  *(void *)(a2 + 392) = v48;
  unsigned int v50 = *((_DWORD *)a1 + 25);
  if (!v50)
  {
    uint64_t v51 = a1[92];
    uint64_t v49 = v33 | 0x7FC0000000000;
    *(void *)(a2 + 1248) = v33 | 0x7FC0000000000;
    *(void *)(a2 + 400) = v51;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 1)
  {
    uint64_t v52 = *((unsigned __int16 *)a1 + 46);
    v49 |= 0x8000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 408) = v52;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 2)
  {
    uint64_t v53 = *((unsigned __int16 *)a1 + 46);
    v49 |= 0x10000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 416) = v53;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 3)
  {
    uint64_t v54 = *((unsigned __int16 *)a1 + 46);
    v49 |= 0x20000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 424) = v54;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 4)
  {
    uint64_t v55 = *((unsigned int *)a1 + 23);
    v49 |= 0x40000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 432) = v55;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 5)
  {
    uint64_t v56 = *((unsigned __int16 *)a1 + 46);
    v49 |= 0x80000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 440) = v56;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 6)
  {
    uint64_t v57 = a1[92];
    v49 |= 0x100000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 448) = v57;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 7)
  {
    uint64_t v58 = *((unsigned int *)a1 + 23);
    *(void *)(a2 + 1248) = v49 | 0x200000000000000;
    *(void *)(a2 + 456) = v58;
    unsigned int v50 = *((_DWORD *)a1 + 25);
    if (v50 == 7)
    {
      v49 |= 0x600000000000000uLL;
      *(void *)(a2 + 464) = a1[96];
    }
    else
    {
      v49 |= 0x200000000000000uLL;
    }
  }
  uint64_t v59 = *((unsigned int *)a1 + 26);
  *(void *)(a2 + 472) = v50;
  *(void *)(a2 + 480) = v59;
  uint64_t v60 = *((unsigned int *)a1 + 28);
  *(void *)(a2 + 488) = a1[108];
  *(void *)(a2 + 496) = v60;
  uint64_t v61 = a1[116];
  *(void *)(a2 + 1248) = v49 | 0xF800000000000000;
  *(void *)(a2 + 504) = v61;
  uint64_t v62 = *((void *)a1 + 15);
  v63.n128_u64[0] = v62;
  v63.n128_u64[1] = HIDWORD(v62);
  *(__n128 *)(a2 + 512) = v63;
  *(void *)(a2 + 528) = a1[128];
  *(void *)(a2 + 536) = a1[129];
  *(void *)(a2 + 544) = a1[130];
  *(void *)(a2 + 552) = a1[131];
  *(void *)(a2 + 560) = a1[132];
  *(void *)(a2 + 568) = a1[133];
  *(void *)(a2 + 576) = a1[134];
  *(void *)(a2 + 584) = a1[135];
  uint64_t v64 = *((void *)a1 + 17);
  uint64_t v65 = *((void *)a1 + 18);
  v63.n128_u64[0] = v64;
  v63.n128_u64[1] = HIDWORD(v64);
  __n128 v66 = v63;
  v63.n128_u64[0] = v65;
  v63.n128_u64[1] = HIDWORD(v65);
  *(__n128 *)(a2 + 592) = v66;
  *(__n128 *)(a2 + 608) = v63;
  v66.n128_u64[0] = *((void *)a1 + 19);
  uint64_t v67 = *((void *)a1 + 20);
  v63.n128_u64[0] = v66.n128_u32[0];
  v63.n128_u64[1] = v66.n128_u32[1];
  __n128 result = v63;
  v63.n128_u64[0] = v67;
  v63.n128_u64[1] = HIDWORD(v67);
  *(__n128 *)(a2 + 624) = result;
  *(__n128 *)(a2 + 640) = v63;
  uint64_t v69 = a1[168];
  *(void *)(a2 + 1256) = 0x7FFFFLL;
  *(void *)(a2 + 656) = v69;
  return result;
}

__n128 sub_1CBE68F20(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = v16;
  uint64_t v26 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v25;
  *(void *)(a2 + 192) = v26;
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = a1[52];
  uint64_t v29 = v13 | 0xF800000;
  *(void *)(a2 + 1248) = v13 | 0xF800000;
  *(void *)(a2 + 216) = v28;
  unsigned int v30 = *((_DWORD *)a1 + 16);
  if (!v30)
  {
    uint64_t v31 = a1[56];
    uint64_t v29 = v13 | 0x1F800000;
    *(void *)(a2 + 1248) = v13 | 0x1F800000;
    *(void *)(a2 + 224) = v31;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 1)
  {
    uint64_t v32 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x20000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 232) = v32;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 2)
  {
    uint64_t v33 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x40000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 240) = v33;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 3)
  {
    uint64_t v34 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x80000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 248) = v34;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 4)
  {
    uint64_t v35 = *((unsigned int *)a1 + 14);
    v29 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 256) = v35;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 5)
  {
    uint64_t v36 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 264) = v36;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 6)
  {
    uint64_t v37 = a1[56];
    v29 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 272) = v37;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 7)
  {
    uint64_t v38 = *((unsigned int *)a1 + 14);
    *(void *)(a2 + 1248) = v29 | 0x800000000;
    *(void *)(a2 + 280) = v38;
    unsigned int v30 = *((_DWORD *)a1 + 16);
    if (v30 == 7)
    {
      v29 |= 0x1800000000uLL;
      *(void *)(a2 + 288) = a1[60];
    }
    else
    {
      v29 |= 0x800000000uLL;
    }
  }
  uint64_t v39 = v30;
  uint64_t v40 = *((unsigned int *)a1 + 17);
  *(void *)(a2 + 296) = v39;
  *(void *)(a2 + 304) = v40;
  uint64_t v41 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 312) = a1[72];
  *(void *)(a2 + 320) = v41;
  uint64_t v42 = a1[80];
  uint64_t v43 = v29 | 0x3E000000000;
  *(void *)(a2 + 1248) = v29 | 0x3E000000000;
  *(void *)(a2 + 328) = v42;
  unsigned int v44 = *((_DWORD *)a1 + 23);
  if (!v44)
  {
    uint64_t v45 = a1[84];
    uint64_t v43 = v29 | 0x7E000000000;
    *(void *)(a2 + 1248) = v29 | 0x7E000000000;
    *(void *)(a2 + 336) = v45;
    unsigned int v44 = *((_DWORD *)a1 + 23);
  }
  if (v44 == 1)
  {
    uint64_t v46 = *((unsigned __int16 *)a1 + 42);
    v43 |= 0x80000000000uLL;
    *(void *)(a2 + 1248) = v43;
    *(void *)(a2 + 344) = v46;
    unsigned int v44 = *((_DWORD *)a1 + 23);
  }
  if (v44 == 2)
  {
    uint64_t v47 = *((unsigned __int16 *)a1 + 42);
    v43 |= 0x100000000000uLL;
    *(void *)(a2 + 1248) = v43;
    *(void *)(a2 + 352) = v47;
    unsigned int v44 = *((_DWORD *)a1 + 23);
  }
  if (v44 == 3)
  {
    uint64_t v48 = *((unsigned __int16 *)a1 + 42);
    v43 |= 0x200000000000uLL;
    *(void *)(a2 + 1248) = v43;
    *(void *)(a2 + 360) = v48;
    unsigned int v44 = *((_DWORD *)a1 + 23);
  }
  if (v44 == 4)
  {
    uint64_t v49 = *((unsigned int *)a1 + 21);
    v43 |= 0x400000000000uLL;
    *(void *)(a2 + 1248) = v43;
    *(void *)(a2 + 368) = v49;
    unsigned int v44 = *((_DWORD *)a1 + 23);
  }
  if (v44 == 5)
  {
    uint64_t v50 = *((unsigned __int16 *)a1 + 42);
    v43 |= 0x800000000000uLL;
    *(void *)(a2 + 1248) = v43;
    *(void *)(a2 + 376) = v50;
    unsigned int v44 = *((_DWORD *)a1 + 23);
  }
  if (v44 == 6)
  {
    uint64_t v51 = a1[84];
    v43 |= 0x1000000000000uLL;
    *(void *)(a2 + 1248) = v43;
    *(void *)(a2 + 384) = v51;
    unsigned int v44 = *((_DWORD *)a1 + 23);
  }
  if (v44 == 7)
  {
    uint64_t v52 = *((unsigned int *)a1 + 21);
    *(void *)(a2 + 1248) = v43 | 0x2000000000000;
    *(void *)(a2 + 392) = v52;
    unsigned int v44 = *((_DWORD *)a1 + 23);
    if (v44 == 7)
    {
      v43 |= 0x6000000000000uLL;
      *(void *)(a2 + 400) = a1[88];
    }
    else
    {
      v43 |= 0x2000000000000uLL;
    }
  }
  uint64_t v53 = *((unsigned int *)a1 + 24);
  *(void *)(a2 + 408) = v44;
  *(void *)(a2 + 416) = v53;
  uint64_t v54 = *((unsigned int *)a1 + 26);
  *(void *)(a2 + 424) = a1[100];
  *(void *)(a2 + 432) = v54;
  *(void *)(a2 + 440) = a1[108];
  uint64_t v55 = *((void *)a1 + 14);
  v56.n128_u64[0] = v55;
  v56.n128_u64[1] = HIDWORD(v55);
  *(__n128 *)(a2 + 448) = v56;
  uint64_t v57 = a1[121];
  *(void *)(a2 + 464) = a1[120];
  *(void *)(a2 + 472) = v57;
  uint64_t v58 = a1[123];
  *(void *)(a2 + 480) = a1[122];
  *(void *)(a2 + 488) = v58;
  uint64_t v59 = a1[124];
  *(void *)(a2 + 1248) = v43 | 0xFFF8000000000000;
  uint64_t v60 = a1[125];
  *(void *)(a2 + 496) = v59;
  *(void *)(a2 + 504) = v60;
  *(void *)(a2 + 512) = a1[126];
  *(void *)(a2 + 520) = a1[127];
  uint64_t v61 = *((void *)a1 + 16);
  uint64_t v62 = *((void *)a1 + 17);
  v56.n128_u64[0] = v61;
  v56.n128_u64[1] = HIDWORD(v61);
  __n128 v63 = v56;
  v56.n128_u64[0] = v62;
  v56.n128_u64[1] = HIDWORD(v62);
  *(__n128 *)(a2 + 528) = v63;
  *(__n128 *)(a2 + 544) = v56;
  v63.n128_u64[0] = *((void *)a1 + 18);
  uint64_t v64 = *((void *)a1 + 19);
  v56.n128_u64[0] = v63.n128_u32[0];
  v56.n128_u64[1] = v63.n128_u32[1];
  __n128 result = v56;
  v56.n128_u64[0] = v64;
  v56.n128_u64[1] = HIDWORD(v64);
  *(__n128 *)(a2 + 560) = result;
  *(__n128 *)(a2 + 576) = v56;
  uint64_t v66 = a1[160];
  *(void *)(a2 + 1256) = 2047;
  *(void *)(a2 + 592) = v66;
  return result;
}

__n128 sub_1CBE6943C(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = v16;
  uint64_t v26 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v25;
  *(void *)(a2 + 192) = v26;
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = a1[52];
  uint64_t v29 = v13 | 0xF800000;
  *(void *)(a2 + 1248) = v13 | 0xF800000;
  *(void *)(a2 + 216) = v28;
  unsigned int v30 = *((_DWORD *)a1 + 16);
  if (!v30)
  {
    uint64_t v31 = a1[56];
    uint64_t v29 = v13 | 0x1F800000;
    *(void *)(a2 + 1248) = v13 | 0x1F800000;
    *(void *)(a2 + 224) = v31;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 1)
  {
    uint64_t v32 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x20000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 232) = v32;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 2)
  {
    uint64_t v33 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x40000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 240) = v33;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 3)
  {
    uint64_t v34 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x80000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 248) = v34;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 4)
  {
    uint64_t v35 = *((unsigned int *)a1 + 14);
    v29 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 256) = v35;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 5)
  {
    uint64_t v36 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 264) = v36;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 6)
  {
    uint64_t v37 = a1[56];
    v29 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 272) = v37;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 7)
  {
    uint64_t v38 = *((unsigned int *)a1 + 14);
    *(void *)(a2 + 1248) = v29 | 0x800000000;
    *(void *)(a2 + 280) = v38;
    unsigned int v30 = *((_DWORD *)a1 + 16);
    if (v30 == 7)
    {
      v29 |= 0x1800000000uLL;
      *(void *)(a2 + 288) = a1[60];
    }
    else
    {
      v29 |= 0x800000000uLL;
    }
  }
  uint64_t v39 = v30;
  uint64_t v40 = *((unsigned int *)a1 + 17);
  *(void *)(a2 + 296) = v39;
  *(void *)(a2 + 304) = v40;
  uint64_t v41 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 312) = a1[72];
  *(void *)(a2 + 320) = v41;
  uint64_t v42 = a1[80];
  uint64_t v43 = v29 | 0x3E000000000;
  *(void *)(a2 + 1248) = v29 | 0x3E000000000;
  *(void *)(a2 + 328) = v42;
  unsigned int v44 = *((_DWORD *)a1 + 23);
  if (!v44)
  {
    uint64_t v45 = a1[84];
    uint64_t v43 = v29 | 0x7E000000000;
    *(void *)(a2 + 1248) = v29 | 0x7E000000000;
    *(void *)(a2 + 336) = v45;
    unsigned int v44 = *((_DWORD *)a1 + 23);
  }
  if (v44 == 1)
  {
    uint64_t v46 = *((unsigned __int16 *)a1 + 42);
    v43 |= 0x80000000000uLL;
    *(void *)(a2 + 1248) = v43;
    *(void *)(a2 + 344) = v46;
    unsigned int v44 = *((_DWORD *)a1 + 23);
  }
  if (v44 == 2)
  {
    uint64_t v47 = *((unsigned __int16 *)a1 + 42);
    v43 |= 0x100000000000uLL;
    *(void *)(a2 + 1248) = v43;
    *(void *)(a2 + 352) = v47;
    unsigned int v44 = *((_DWORD *)a1 + 23);
  }
  if (v44 == 3)
  {
    uint64_t v48 = *((unsigned __int16 *)a1 + 42);
    v43 |= 0x200000000000uLL;
    *(void *)(a2 + 1248) = v43;
    *(void *)(a2 + 360) = v48;
    unsigned int v44 = *((_DWORD *)a1 + 23);
  }
  if (v44 == 4)
  {
    uint64_t v49 = *((unsigned int *)a1 + 21);
    v43 |= 0x400000000000uLL;
    *(void *)(a2 + 1248) = v43;
    *(void *)(a2 + 368) = v49;
    unsigned int v44 = *((_DWORD *)a1 + 23);
  }
  if (v44 == 5)
  {
    uint64_t v50 = *((unsigned __int16 *)a1 + 42);
    v43 |= 0x800000000000uLL;
    *(void *)(a2 + 1248) = v43;
    *(void *)(a2 + 376) = v50;
    unsigned int v44 = *((_DWORD *)a1 + 23);
  }
  if (v44 == 6)
  {
    uint64_t v51 = a1[84];
    v43 |= 0x1000000000000uLL;
    *(void *)(a2 + 1248) = v43;
    *(void *)(a2 + 384) = v51;
    unsigned int v44 = *((_DWORD *)a1 + 23);
  }
  if (v44 == 7)
  {
    uint64_t v52 = *((unsigned int *)a1 + 21);
    *(void *)(a2 + 1248) = v43 | 0x2000000000000;
    *(void *)(a2 + 392) = v52;
    unsigned int v44 = *((_DWORD *)a1 + 23);
    if (v44 == 7)
    {
      v43 |= 0x6000000000000uLL;
      *(void *)(a2 + 400) = a1[88];
    }
    else
    {
      v43 |= 0x2000000000000uLL;
    }
  }
  uint64_t v53 = *((unsigned int *)a1 + 24);
  *(void *)(a2 + 408) = v44;
  *(void *)(a2 + 416) = v53;
  uint64_t v54 = *((unsigned int *)a1 + 26);
  *(void *)(a2 + 424) = a1[100];
  *(void *)(a2 + 432) = v54;
  *(void *)(a2 + 440) = a1[108];
  uint64_t v55 = *((void *)a1 + 14);
  v56.n128_u64[0] = v55;
  v56.n128_u64[1] = HIDWORD(v55);
  *(__n128 *)(a2 + 448) = v56;
  uint64_t v57 = a1[121];
  *(void *)(a2 + 464) = a1[120];
  *(void *)(a2 + 472) = v57;
  uint64_t v58 = a1[123];
  *(void *)(a2 + 480) = a1[122];
  *(void *)(a2 + 488) = v58;
  uint64_t v59 = a1[124];
  *(void *)(a2 + 1248) = v43 | 0xFFF8000000000000;
  uint64_t v60 = a1[125];
  *(void *)(a2 + 496) = v59;
  *(void *)(a2 + 504) = v60;
  *(void *)(a2 + 512) = a1[126];
  *(void *)(a2 + 520) = a1[127];
  uint64_t v61 = *((void *)a1 + 16);
  uint64_t v62 = *((void *)a1 + 17);
  v56.n128_u64[0] = v61;
  v56.n128_u64[1] = HIDWORD(v61);
  __n128 v63 = v56;
  v56.n128_u64[0] = v62;
  v56.n128_u64[1] = HIDWORD(v62);
  *(__n128 *)(a2 + 528) = v63;
  *(__n128 *)(a2 + 544) = v56;
  v63.n128_u64[0] = *((void *)a1 + 18);
  uint64_t v64 = *((void *)a1 + 19);
  v56.n128_u64[0] = v63.n128_u32[0];
  v56.n128_u64[1] = v63.n128_u32[1];
  __n128 result = v56;
  v56.n128_u64[0] = v64;
  v56.n128_u64[1] = HIDWORD(v64);
  *(__n128 *)(a2 + 560) = result;
  *(__n128 *)(a2 + 576) = v56;
  uint64_t v66 = a1[160];
  *(void *)(a2 + 1256) = 2047;
  *(void *)(a2 + 592) = v66;
  return result;
}

__n128 sub_1CBE69958(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = *(void *)(a1 + 20);
  *(void *)&long long v14 = v13;
  *((void *)&v14 + 1) = HIDWORD(v13);
  *(_OWORD *)(a2 + 96) = v14;
  uint64_t v15 = a1[28];
  uint64_t v16 = *((unsigned int *)a1 + 8);
  uint64_t v17 = v3 | 0xFE00;
  *(void *)(a2 + 1248) = v3 | 0xFE00;
  *(void *)(a2 + 112) = v15;
  *(void *)(a2 + 120) = v16;
  unsigned int v18 = *((_DWORD *)a1 + 11);
  if (!v18)
  {
    uint64_t v19 = a1[36];
    uint64_t v17 = v3 | 0x1FE00;
    *(void *)(a2 + 1248) = v3 | 0x1FE00;
    *(void *)(a2 + 128) = v19;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 1)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 136) = v20;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 2)
  {
    uint64_t v21 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 144) = v21;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 3)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 152) = v22;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 4)
  {
    uint64_t v23 = *((unsigned int *)a1 + 9);
    v17 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 160) = v23;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 5)
  {
    uint64_t v24 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x200000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 168) = v24;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 6)
  {
    uint64_t v25 = a1[36];
    v17 |= 0x400000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 176) = v25;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 7)
  {
    uint64_t v26 = *((unsigned int *)a1 + 9);
    *(void *)(a2 + 1248) = v17 | 0x800000;
    *(void *)(a2 + 184) = v26;
    unsigned int v18 = *((_DWORD *)a1 + 11);
    if (v18 == 7)
    {
      v17 |= 0x1800000uLL;
      *(void *)(a2 + 192) = a1[40];
    }
    else
    {
      v17 |= 0x800000uLL;
    }
  }
  uint64_t v27 = v18;
  uint64_t v28 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = v27;
  *(void *)(a2 + 208) = v28;
  uint64_t v29 = *((unsigned int *)a1 + 14);
  *(void *)(a2 + 216) = a1[52];
  *(void *)(a2 + 224) = v29;
  uint64_t v30 = a1[61];
  *(void *)(a2 + 232) = a1[60];
  *(void *)(a2 + 240) = v30;
  uint64_t v31 = a1[62];
  uint64_t v32 = a1[63];
  uint64_t v33 = v17 | 0x1FE000000;
  *(void *)(a2 + 1248) = v17 | 0x1FE000000;
  *(void *)(a2 + 248) = v31;
  *(void *)(a2 + 256) = v32;
  unsigned int v34 = *((_DWORD *)a1 + 18);
  if (!v34)
  {
    uint64_t v35 = a1[64];
    uint64_t v33 = v17 | 0x3FE000000;
    *(void *)(a2 + 1248) = v17 | 0x3FE000000;
    *(void *)(a2 + 264) = v35;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 1)
  {
    uint64_t v36 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 272) = v36;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 2)
  {
    uint64_t v37 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 280) = v37;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 3)
  {
    uint64_t v38 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x1000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 288) = v38;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 4)
  {
    uint64_t v39 = *((unsigned int *)a1 + 16);
    v33 |= 0x2000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 296) = v39;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 5)
  {
    uint64_t v40 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x4000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 304) = v40;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 6)
  {
    uint64_t v41 = a1[64];
    v33 |= 0x8000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 312) = v41;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 7)
  {
    uint64_t v42 = *((unsigned int *)a1 + 16);
    *(void *)(a2 + 1248) = v33 | 0x10000000000;
    *(void *)(a2 + 320) = v42;
    unsigned int v34 = *((_DWORD *)a1 + 18);
    if (v34 == 7)
    {
      v33 |= 0x30000000000uLL;
      *(void *)(a2 + 328) = a1[68];
    }
    else
    {
      v33 |= 0x10000000000uLL;
    }
  }
  uint64_t v43 = v34;
  uint64_t v44 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 336) = v43;
  *(void *)(a2 + 344) = v44;
  uint64_t v45 = *((unsigned int *)a1 + 21);
  *(void *)(a2 + 352) = a1[80];
  *(void *)(a2 + 360) = v45;
  uint64_t v46 = a1[89];
  *(void *)(a2 + 368) = a1[88];
  *(void *)(a2 + 376) = v46;
  uint64_t v47 = a1[90];
  uint64_t v48 = a1[91];
  uint64_t v49 = v33 | 0x3FC0000000000;
  *(void *)(a2 + 1248) = v33 | 0x3FC0000000000;
  *(void *)(a2 + 384) = v47;
  *(void *)(a2 + 392) = v48;
  unsigned int v50 = *((_DWORD *)a1 + 25);
  if (!v50)
  {
    uint64_t v51 = a1[92];
    uint64_t v49 = v33 | 0x7FC0000000000;
    *(void *)(a2 + 1248) = v33 | 0x7FC0000000000;
    *(void *)(a2 + 400) = v51;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 1)
  {
    uint64_t v52 = *((unsigned __int16 *)a1 + 46);
    v49 |= 0x8000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 408) = v52;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 2)
  {
    uint64_t v53 = *((unsigned __int16 *)a1 + 46);
    v49 |= 0x10000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 416) = v53;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 3)
  {
    uint64_t v54 = *((unsigned __int16 *)a1 + 46);
    v49 |= 0x20000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 424) = v54;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 4)
  {
    uint64_t v55 = *((unsigned int *)a1 + 23);
    v49 |= 0x40000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 432) = v55;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 5)
  {
    uint64_t v56 = *((unsigned __int16 *)a1 + 46);
    v49 |= 0x80000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 440) = v56;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 6)
  {
    uint64_t v57 = a1[92];
    v49 |= 0x100000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 448) = v57;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 7)
  {
    uint64_t v58 = *((unsigned int *)a1 + 23);
    *(void *)(a2 + 1248) = v49 | 0x200000000000000;
    *(void *)(a2 + 456) = v58;
    unsigned int v50 = *((_DWORD *)a1 + 25);
    if (v50 == 7)
    {
      v49 |= 0x600000000000000uLL;
      *(void *)(a2 + 464) = a1[96];
    }
    else
    {
      v49 |= 0x200000000000000uLL;
    }
  }
  uint64_t v59 = v50;
  uint64_t v60 = *((unsigned int *)a1 + 26);
  *(void *)(a2 + 472) = v59;
  *(void *)(a2 + 480) = v60;
  uint64_t v61 = *((unsigned int *)a1 + 28);
  *(void *)(a2 + 488) = a1[108];
  *(void *)(a2 + 496) = v61;
  uint64_t v62 = a1[116];
  *(void *)(a2 + 1248) = v49 | 0xF800000000000000;
  uint64_t v63 = a1[117];
  *(void *)(a2 + 504) = v62;
  *(void *)(a2 + 512) = v63;
  *(void *)(a2 + 520) = a1[118];
  uint64_t v64 = a1[119];
  uint64_t v65 = 7;
  *(void *)(a2 + 1256) = 7;
  *(void *)(a2 + 528) = v64;
  unsigned int v66 = *((_DWORD *)a1 + 32);
  if (!v66)
  {
    uint64_t v67 = a1[120];
    uint64_t v65 = 15;
    *(void *)(a2 + 1256) = 15;
    *(void *)(a2 + 536) = v67;
    unsigned int v66 = *((_DWORD *)a1 + 32);
  }
  if (v66 == 1)
  {
    uint64_t v68 = *((unsigned __int16 *)a1 + 60);
    v65 |= 0x10uLL;
    *(void *)(a2 + 1256) = v65;
    *(void *)(a2 + 544) = v68;
    unsigned int v66 = *((_DWORD *)a1 + 32);
  }
  if (v66 == 2)
  {
    uint64_t v69 = *((unsigned __int16 *)a1 + 60);
    v65 |= 0x20uLL;
    *(void *)(a2 + 1256) = v65;
    *(void *)(a2 + 552) = v69;
    unsigned int v66 = *((_DWORD *)a1 + 32);
  }
  if (v66 == 3)
  {
    uint64_t v70 = *((unsigned __int16 *)a1 + 60);
    v65 |= 0x40uLL;
    *(void *)(a2 + 1256) = v65;
    *(void *)(a2 + 560) = v70;
    unsigned int v66 = *((_DWORD *)a1 + 32);
  }
  if (v66 == 4)
  {
    uint64_t v71 = *((unsigned int *)a1 + 30);
    v65 |= 0x80uLL;
    *(void *)(a2 + 1256) = v65;
    *(void *)(a2 + 568) = v71;
    unsigned int v66 = *((_DWORD *)a1 + 32);
  }
  if (v66 == 5)
  {
    uint64_t v72 = *((unsigned __int16 *)a1 + 60);
    v65 |= 0x100uLL;
    *(void *)(a2 + 1256) = v65;
    *(void *)(a2 + 576) = v72;
    unsigned int v66 = *((_DWORD *)a1 + 32);
  }
  if (v66 == 6)
  {
    uint64_t v73 = a1[120];
    v65 |= 0x200uLL;
    *(void *)(a2 + 1256) = v65;
    *(void *)(a2 + 584) = v73;
    unsigned int v66 = *((_DWORD *)a1 + 32);
  }
  if (v66 == 7)
  {
    uint64_t v74 = *((unsigned int *)a1 + 30);
    *(void *)(a2 + 1256) = v65 | 0x400;
    *(void *)(a2 + 592) = v74;
    unsigned int v66 = *((_DWORD *)a1 + 32);
    if (v66 == 7)
    {
      v65 |= 0xC00uLL;
      *(void *)(a2 + 600) = a1[124];
      unsigned int v66 = 7;
    }
    else
    {
      v65 |= 0x400uLL;
    }
  }
  *(void *)(a2 + 608) = v66;
  *(void *)(a2 + 616) = *((unsigned int *)a1 + 33);
  *(void *)(a2 + 624) = a1[136];
  *(void *)(a2 + 632) = *((unsigned int *)a1 + 35);
  uint64_t v75 = a1[144];
  uint64_t v76 = v65 | 0x1F000;
  *(void *)(a2 + 1256) = v65 | 0x1F000;
  *(void *)(a2 + 640) = v75;
  unsigned int v77 = *((_DWORD *)a1 + 39);
  if (!v77)
  {
    uint64_t v78 = a1[148];
    uint64_t v76 = v65 | 0x3F000;
    *(void *)(a2 + 1256) = v65 | 0x3F000;
    *(void *)(a2 + 648) = v78;
    unsigned int v77 = *((_DWORD *)a1 + 39);
  }
  if (v77 == 1)
  {
    uint64_t v79 = *((unsigned __int16 *)a1 + 74);
    v76 |= 0x40000uLL;
    *(void *)(a2 + 1256) = v76;
    *(void *)(a2 + 656) = v79;
    unsigned int v77 = *((_DWORD *)a1 + 39);
  }
  if (v77 == 2)
  {
    uint64_t v80 = *((unsigned __int16 *)a1 + 74);
    v76 |= 0x80000uLL;
    *(void *)(a2 + 1256) = v76;
    *(void *)(a2 + 664) = v80;
    unsigned int v77 = *((_DWORD *)a1 + 39);
  }
  if (v77 == 3)
  {
    uint64_t v81 = *((unsigned __int16 *)a1 + 74);
    v76 |= 0x100000uLL;
    *(void *)(a2 + 1256) = v76;
    *(void *)(a2 + 672) = v81;
    unsigned int v77 = *((_DWORD *)a1 + 39);
  }
  if (v77 == 4)
  {
    uint64_t v82 = *((unsigned int *)a1 + 37);
    v76 |= 0x200000uLL;
    *(void *)(a2 + 1256) = v76;
    *(void *)(a2 + 680) = v82;
    unsigned int v77 = *((_DWORD *)a1 + 39);
  }
  if (v77 == 5)
  {
    uint64_t v83 = *((unsigned __int16 *)a1 + 74);
    v76 |= 0x400000uLL;
    *(void *)(a2 + 1256) = v76;
    *(void *)(a2 + 688) = v83;
    unsigned int v77 = *((_DWORD *)a1 + 39);
  }
  if (v77 == 6)
  {
    uint64_t v84 = a1[148];
    v76 |= 0x800000uLL;
    *(void *)(a2 + 1256) = v76;
    *(void *)(a2 + 696) = v84;
    unsigned int v77 = *((_DWORD *)a1 + 39);
  }
  if (v77 == 7)
  {
    uint64_t v85 = *((unsigned int *)a1 + 37);
    *(void *)(a2 + 1256) = v76 | 0x1000000;
    *(void *)(a2 + 704) = v85;
    unsigned int v77 = *((_DWORD *)a1 + 39);
    if (v77 == 7)
    {
      v76 |= 0x3000000uLL;
      *(void *)(a2 + 712) = a1[152];
      unsigned int v77 = 7;
    }
    else
    {
      v76 |= 0x1000000uLL;
    }
  }
  *(void *)(a2 + 720) = v77;
  *(void *)(a2 + 728) = *((unsigned int *)a1 + 40);
  *(void *)(a2 + 736) = a1[164];
  *(void *)(a2 + 744) = *((unsigned int *)a1 + 42);
  *(void *)(a2 + 752) = a1[172];
  uint64_t v86 = *((void *)a1 + 22);
  v87.n128_u64[0] = v86;
  v87.n128_u64[1] = HIDWORD(v86);
  *(__n128 *)(a2 + 760) = v87;
  *(void *)(a2 + 776) = a1[184];
  *(void *)(a2 + 784) = a1[185];
  *(void *)(a2 + 792) = a1[186];
  *(void *)(a2 + 800) = a1[187];
  *(void *)(a2 + 808) = a1[188];
  *(void *)(a2 + 816) = a1[189];
  *(void *)(a2 + 824) = a1[190];
  *(void *)(a2 + 832) = a1[191];
  uint64_t v88 = *((void *)a1 + 24);
  uint64_t v89 = *((void *)a1 + 25);
  v87.n128_u64[0] = v88;
  v87.n128_u64[1] = HIDWORD(v88);
  __n128 v90 = v87;
  v87.n128_u64[0] = v89;
  v87.n128_u64[1] = HIDWORD(v89);
  *(__n128 *)(a2 + 840) = v90;
  *(__n128 *)(a2 + 856) = v87;
  v90.n128_u64[0] = *((void *)a1 + 26);
  uint64_t v91 = *((void *)a1 + 27);
  v87.n128_u64[0] = v90.n128_u32[0];
  v87.n128_u64[1] = v90.n128_u32[1];
  __n128 result = v87;
  v87.n128_u64[0] = v91;
  v87.n128_u64[1] = HIDWORD(v91);
  *(__n128 *)(a2 + 872) = result;
  *(__n128 *)(a2 + 888) = v87;
  *(void *)(a2 + 904) = *((unsigned int *)a1 + 56);
  *(void *)(a2 + 912) = a1[228];
  uint64_t v93 = *((unsigned int *)a1 + 58);
  *(void *)(a2 + 1256) = v76 | 0xFFFFFFC000000;
  *(void *)(a2 + 920) = v93;
  return result;
}

__n128 sub_1CBE6A134(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = *(void *)(a1 + 20);
  *(void *)&long long v14 = v13;
  *((void *)&v14 + 1) = HIDWORD(v13);
  *(_OWORD *)(a2 + 96) = v14;
  uint64_t v15 = a1[28];
  uint64_t v16 = *((unsigned int *)a1 + 8);
  uint64_t v17 = v3 | 0xFE00;
  *(void *)(a2 + 1248) = v3 | 0xFE00;
  *(void *)(a2 + 112) = v15;
  *(void *)(a2 + 120) = v16;
  unsigned int v18 = *((_DWORD *)a1 + 11);
  if (!v18)
  {
    uint64_t v19 = a1[36];
    uint64_t v17 = v3 | 0x1FE00;
    *(void *)(a2 + 1248) = v3 | 0x1FE00;
    *(void *)(a2 + 128) = v19;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 1)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 136) = v20;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 2)
  {
    uint64_t v21 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 144) = v21;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 3)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 152) = v22;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 4)
  {
    uint64_t v23 = *((unsigned int *)a1 + 9);
    v17 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 160) = v23;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 5)
  {
    uint64_t v24 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x200000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 168) = v24;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 6)
  {
    uint64_t v25 = a1[36];
    v17 |= 0x400000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 176) = v25;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 7)
  {
    uint64_t v26 = *((unsigned int *)a1 + 9);
    *(void *)(a2 + 1248) = v17 | 0x800000;
    *(void *)(a2 + 184) = v26;
    unsigned int v18 = *((_DWORD *)a1 + 11);
    if (v18 == 7)
    {
      v17 |= 0x1800000uLL;
      *(void *)(a2 + 192) = a1[40];
    }
    else
    {
      v17 |= 0x800000uLL;
    }
  }
  uint64_t v27 = v18;
  uint64_t v28 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = v27;
  *(void *)(a2 + 208) = v28;
  uint64_t v29 = *((unsigned int *)a1 + 14);
  *(void *)(a2 + 216) = a1[52];
  *(void *)(a2 + 224) = v29;
  uint64_t v30 = a1[61];
  *(void *)(a2 + 232) = a1[60];
  *(void *)(a2 + 240) = v30;
  uint64_t v31 = a1[62];
  uint64_t v32 = a1[63];
  uint64_t v33 = v17 | 0x1FE000000;
  *(void *)(a2 + 1248) = v17 | 0x1FE000000;
  *(void *)(a2 + 248) = v31;
  *(void *)(a2 + 256) = v32;
  unsigned int v34 = *((_DWORD *)a1 + 18);
  if (!v34)
  {
    uint64_t v35 = a1[64];
    uint64_t v33 = v17 | 0x3FE000000;
    *(void *)(a2 + 1248) = v17 | 0x3FE000000;
    *(void *)(a2 + 264) = v35;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 1)
  {
    uint64_t v36 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 272) = v36;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 2)
  {
    uint64_t v37 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 280) = v37;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 3)
  {
    uint64_t v38 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x1000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 288) = v38;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 4)
  {
    uint64_t v39 = *((unsigned int *)a1 + 16);
    v33 |= 0x2000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 296) = v39;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 5)
  {
    uint64_t v40 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x4000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 304) = v40;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 6)
  {
    uint64_t v41 = a1[64];
    v33 |= 0x8000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 312) = v41;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 7)
  {
    uint64_t v42 = *((unsigned int *)a1 + 16);
    *(void *)(a2 + 1248) = v33 | 0x10000000000;
    *(void *)(a2 + 320) = v42;
    unsigned int v34 = *((_DWORD *)a1 + 18);
    if (v34 == 7)
    {
      v33 |= 0x30000000000uLL;
      *(void *)(a2 + 328) = a1[68];
    }
    else
    {
      v33 |= 0x10000000000uLL;
    }
  }
  uint64_t v43 = v34;
  uint64_t v44 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 336) = v43;
  *(void *)(a2 + 344) = v44;
  uint64_t v45 = *((unsigned int *)a1 + 21);
  *(void *)(a2 + 352) = a1[80];
  *(void *)(a2 + 360) = v45;
  uint64_t v46 = a1[89];
  *(void *)(a2 + 368) = a1[88];
  *(void *)(a2 + 376) = v46;
  uint64_t v47 = a1[90];
  uint64_t v48 = a1[91];
  uint64_t v49 = v33 | 0x3FC0000000000;
  *(void *)(a2 + 1248) = v33 | 0x3FC0000000000;
  *(void *)(a2 + 384) = v47;
  *(void *)(a2 + 392) = v48;
  unsigned int v50 = *((_DWORD *)a1 + 25);
  if (!v50)
  {
    uint64_t v51 = a1[92];
    uint64_t v49 = v33 | 0x7FC0000000000;
    *(void *)(a2 + 1248) = v33 | 0x7FC0000000000;
    *(void *)(a2 + 400) = v51;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 1)
  {
    uint64_t v52 = *((unsigned __int16 *)a1 + 46);
    v49 |= 0x8000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 408) = v52;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 2)
  {
    uint64_t v53 = *((unsigned __int16 *)a1 + 46);
    v49 |= 0x10000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 416) = v53;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 3)
  {
    uint64_t v54 = *((unsigned __int16 *)a1 + 46);
    v49 |= 0x20000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 424) = v54;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 4)
  {
    uint64_t v55 = *((unsigned int *)a1 + 23);
    v49 |= 0x40000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 432) = v55;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 5)
  {
    uint64_t v56 = *((unsigned __int16 *)a1 + 46);
    v49 |= 0x80000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 440) = v56;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 6)
  {
    uint64_t v57 = a1[92];
    v49 |= 0x100000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 448) = v57;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 7)
  {
    uint64_t v58 = *((unsigned int *)a1 + 23);
    *(void *)(a2 + 1248) = v49 | 0x200000000000000;
    *(void *)(a2 + 456) = v58;
    unsigned int v50 = *((_DWORD *)a1 + 25);
    if (v50 == 7)
    {
      v49 |= 0x600000000000000uLL;
      *(void *)(a2 + 464) = a1[96];
    }
    else
    {
      v49 |= 0x200000000000000uLL;
    }
  }
  uint64_t v59 = v50;
  uint64_t v60 = *((unsigned int *)a1 + 26);
  *(void *)(a2 + 472) = v59;
  *(void *)(a2 + 480) = v60;
  uint64_t v61 = *((unsigned int *)a1 + 28);
  *(void *)(a2 + 488) = a1[108];
  *(void *)(a2 + 496) = v61;
  uint64_t v62 = a1[116];
  *(void *)(a2 + 1248) = v49 | 0xF800000000000000;
  *(void *)(a2 + 504) = v62;
  unsigned int v63 = *((_DWORD *)a1 + 32);
  if (v63)
  {
    uint64_t v64 = 0;
  }
  else
  {
    uint64_t v65 = a1[120];
    uint64_t v64 = 1;
    *(void *)(a2 + 1256) = 1;
    *(void *)(a2 + 512) = v65;
    unsigned int v63 = *((_DWORD *)a1 + 32);
  }
  if (v63 == 1)
  {
    uint64_t v66 = *((unsigned __int16 *)a1 + 60);
    v64 |= 2uLL;
    *(void *)(a2 + 1256) = v64;
    *(void *)(a2 + 520) = v66;
    unsigned int v63 = *((_DWORD *)a1 + 32);
  }
  if (v63 == 2)
  {
    uint64_t v67 = *((unsigned __int16 *)a1 + 60);
    v64 |= 4uLL;
    *(void *)(a2 + 1256) = v64;
    *(void *)(a2 + 528) = v67;
    unsigned int v63 = *((_DWORD *)a1 + 32);
  }
  if (v63 == 3)
  {
    uint64_t v68 = *((unsigned __int16 *)a1 + 60);
    v64 |= 8uLL;
    *(void *)(a2 + 1256) = v64;
    *(void *)(a2 + 536) = v68;
    unsigned int v63 = *((_DWORD *)a1 + 32);
  }
  if (v63 == 4)
  {
    uint64_t v69 = *((unsigned int *)a1 + 30);
    v64 |= 0x10uLL;
    *(void *)(a2 + 1256) = v64;
    *(void *)(a2 + 544) = v69;
    unsigned int v63 = *((_DWORD *)a1 + 32);
  }
  if (v63 == 5)
  {
    uint64_t v70 = *((unsigned __int16 *)a1 + 60);
    v64 |= 0x20uLL;
    *(void *)(a2 + 1256) = v64;
    *(void *)(a2 + 552) = v70;
    unsigned int v63 = *((_DWORD *)a1 + 32);
  }
  if (v63 == 6)
  {
    uint64_t v71 = a1[120];
    v64 |= 0x40uLL;
    *(void *)(a2 + 1256) = v64;
    *(void *)(a2 + 560) = v71;
    unsigned int v63 = *((_DWORD *)a1 + 32);
  }
  if (v63 == 7)
  {
    uint64_t v72 = *((unsigned int *)a1 + 30);
    *(void *)(a2 + 1256) = v64 | 0x80;
    *(void *)(a2 + 568) = v72;
    unsigned int v63 = *((_DWORD *)a1 + 32);
    if (v63 == 7)
    {
      v64 |= 0x180uLL;
      *(void *)(a2 + 576) = a1[124];
      unsigned int v63 = 7;
    }
    else
    {
      v64 |= 0x80uLL;
    }
  }
  *(void *)(a2 + 584) = v63;
  *(void *)(a2 + 592) = *((unsigned int *)a1 + 33);
  *(void *)(a2 + 600) = a1[136];
  *(void *)(a2 + 608) = *((unsigned int *)a1 + 35);
  uint64_t v73 = a1[144];
  uint64_t v74 = v64 | 0x3E00;
  *(void *)(a2 + 1256) = v64 | 0x3E00;
  *(void *)(a2 + 616) = v73;
  unsigned int v75 = *((_DWORD *)a1 + 39);
  if (!v75)
  {
    uint64_t v76 = a1[148];
    uint64_t v74 = v64 | 0x7E00;
    *(void *)(a2 + 1256) = v64 | 0x7E00;
    *(void *)(a2 + 624) = v76;
    unsigned int v75 = *((_DWORD *)a1 + 39);
  }
  if (v75 == 1)
  {
    uint64_t v77 = *((unsigned __int16 *)a1 + 74);
    v74 |= 0x8000uLL;
    *(void *)(a2 + 1256) = v74;
    *(void *)(a2 + 632) = v77;
    unsigned int v75 = *((_DWORD *)a1 + 39);
  }
  if (v75 == 2)
  {
    uint64_t v78 = *((unsigned __int16 *)a1 + 74);
    v74 |= 0x10000uLL;
    *(void *)(a2 + 1256) = v74;
    *(void *)(a2 + 640) = v78;
    unsigned int v75 = *((_DWORD *)a1 + 39);
  }
  if (v75 == 3)
  {
    uint64_t v79 = *((unsigned __int16 *)a1 + 74);
    v74 |= 0x20000uLL;
    *(void *)(a2 + 1256) = v74;
    *(void *)(a2 + 648) = v79;
    unsigned int v75 = *((_DWORD *)a1 + 39);
  }
  if (v75 == 4)
  {
    uint64_t v80 = *((unsigned int *)a1 + 37);
    v74 |= 0x40000uLL;
    *(void *)(a2 + 1256) = v74;
    *(void *)(a2 + 656) = v80;
    unsigned int v75 = *((_DWORD *)a1 + 39);
  }
  if (v75 == 5)
  {
    uint64_t v81 = *((unsigned __int16 *)a1 + 74);
    v74 |= 0x80000uLL;
    *(void *)(a2 + 1256) = v74;
    *(void *)(a2 + 664) = v81;
    unsigned int v75 = *((_DWORD *)a1 + 39);
  }
  if (v75 == 6)
  {
    uint64_t v82 = a1[148];
    v74 |= 0x100000uLL;
    *(void *)(a2 + 1256) = v74;
    *(void *)(a2 + 672) = v82;
    unsigned int v75 = *((_DWORD *)a1 + 39);
  }
  if (v75 == 7)
  {
    uint64_t v83 = *((unsigned int *)a1 + 37);
    *(void *)(a2 + 1256) = v74 | 0x200000;
    *(void *)(a2 + 680) = v83;
    unsigned int v75 = *((_DWORD *)a1 + 39);
    if (v75 == 7)
    {
      v74 |= 0x600000uLL;
      *(void *)(a2 + 688) = a1[152];
      unsigned int v75 = 7;
    }
    else
    {
      v74 |= 0x200000uLL;
    }
  }
  *(void *)(a2 + 696) = v75;
  *(void *)(a2 + 704) = *((unsigned int *)a1 + 40);
  *(void *)(a2 + 712) = a1[164];
  *(void *)(a2 + 720) = *((unsigned int *)a1 + 42);
  *(void *)(a2 + 728) = a1[172];
  *(void *)(a2 + 736) = a1[173];
  uint64_t v84 = *((void *)a1 + 22);
  v85.n128_u64[0] = v84;
  v85.n128_u64[1] = HIDWORD(v84);
  *(__n128 *)(a2 + 744) = v85;
  *(void *)(a2 + 760) = a1[184];
  *(void *)(a2 + 768) = a1[185];
  *(void *)(a2 + 776) = a1[186];
  *(void *)(a2 + 784) = a1[187];
  *(void *)(a2 + 792) = a1[188];
  *(void *)(a2 + 800) = a1[189];
  *(void *)(a2 + 808) = a1[190];
  *(void *)(a2 + 816) = a1[191];
  uint64_t v86 = *((void *)a1 + 24);
  uint64_t v87 = *((void *)a1 + 25);
  v85.n128_u64[0] = v86;
  v85.n128_u64[1] = HIDWORD(v86);
  __n128 v88 = v85;
  v85.n128_u64[0] = v87;
  v85.n128_u64[1] = HIDWORD(v87);
  *(__n128 *)(a2 + 824) = v88;
  *(__n128 *)(a2 + 840) = v85;
  v88.n128_u64[0] = *((void *)a1 + 26);
  uint64_t v89 = *((void *)a1 + 27);
  v85.n128_u64[0] = v88.n128_u32[0];
  v85.n128_u64[1] = v88.n128_u32[1];
  __n128 result = v85;
  v85.n128_u64[0] = v89;
  v85.n128_u64[1] = HIDWORD(v89);
  *(__n128 *)(a2 + 856) = result;
  *(__n128 *)(a2 + 872) = v85;
  *(void *)(a2 + 888) = *((unsigned int *)a1 + 56);
  *(void *)(a2 + 896) = a1[228];
  *(void *)(a2 + 904) = a1[229];
  *(void *)(a2 + 912) = a1[230];
  *(void *)(a2 + 920) = *((unsigned int *)a1 + 58);
  *(void *)(a2 + 928) = a1[236];
  uint64_t v91 = *((unsigned int *)a1 + 60);
  *(void *)(a2 + 1256) = v74 | 0x3FFFFFFF800000;
  *(void *)(a2 + 936) = v91;
  return result;
}

__n128 sub_1CBE6A924(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = *(void *)(a1 + 20);
  *(void *)&long long v14 = v13;
  *((void *)&v14 + 1) = HIDWORD(v13);
  *(_OWORD *)(a2 + 96) = v14;
  uint64_t v15 = a1[28];
  uint64_t v16 = *((unsigned int *)a1 + 8);
  uint64_t v17 = v3 | 0xFE00;
  *(void *)(a2 + 1248) = v3 | 0xFE00;
  *(void *)(a2 + 112) = v15;
  *(void *)(a2 + 120) = v16;
  unsigned int v18 = *((_DWORD *)a1 + 11);
  if (!v18)
  {
    uint64_t v19 = a1[36];
    uint64_t v17 = v3 | 0x1FE00;
    *(void *)(a2 + 1248) = v3 | 0x1FE00;
    *(void *)(a2 + 128) = v19;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 1)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 136) = v20;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 2)
  {
    uint64_t v21 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 144) = v21;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 3)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 152) = v22;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 4)
  {
    uint64_t v23 = *((unsigned int *)a1 + 9);
    v17 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 160) = v23;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 5)
  {
    uint64_t v24 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x200000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 168) = v24;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 6)
  {
    uint64_t v25 = a1[36];
    v17 |= 0x400000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 176) = v25;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 7)
  {
    uint64_t v26 = *((unsigned int *)a1 + 9);
    *(void *)(a2 + 1248) = v17 | 0x800000;
    *(void *)(a2 + 184) = v26;
    unsigned int v18 = *((_DWORD *)a1 + 11);
    if (v18 == 7)
    {
      v17 |= 0x1800000uLL;
      *(void *)(a2 + 192) = a1[40];
    }
    else
    {
      v17 |= 0x800000uLL;
    }
  }
  uint64_t v27 = v18;
  uint64_t v28 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = v27;
  *(void *)(a2 + 208) = v28;
  uint64_t v29 = *((unsigned int *)a1 + 14);
  *(void *)(a2 + 216) = a1[52];
  *(void *)(a2 + 224) = v29;
  uint64_t v30 = a1[61];
  *(void *)(a2 + 232) = a1[60];
  *(void *)(a2 + 240) = v30;
  uint64_t v31 = a1[62];
  uint64_t v32 = a1[63];
  uint64_t v33 = v17 | 0x1FE000000;
  *(void *)(a2 + 1248) = v17 | 0x1FE000000;
  *(void *)(a2 + 248) = v31;
  *(void *)(a2 + 256) = v32;
  unsigned int v34 = *((_DWORD *)a1 + 18);
  if (!v34)
  {
    uint64_t v35 = a1[64];
    uint64_t v33 = v17 | 0x3FE000000;
    *(void *)(a2 + 1248) = v17 | 0x3FE000000;
    *(void *)(a2 + 264) = v35;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 1)
  {
    uint64_t v36 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 272) = v36;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 2)
  {
    uint64_t v37 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 280) = v37;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 3)
  {
    uint64_t v38 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x1000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 288) = v38;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 4)
  {
    uint64_t v39 = *((unsigned int *)a1 + 16);
    v33 |= 0x2000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 296) = v39;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 5)
  {
    uint64_t v40 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x4000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 304) = v40;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 6)
  {
    uint64_t v41 = a1[64];
    v33 |= 0x8000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 312) = v41;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 7)
  {
    uint64_t v42 = *((unsigned int *)a1 + 16);
    *(void *)(a2 + 1248) = v33 | 0x10000000000;
    *(void *)(a2 + 320) = v42;
    unsigned int v34 = *((_DWORD *)a1 + 18);
    if (v34 == 7)
    {
      v33 |= 0x30000000000uLL;
      *(void *)(a2 + 328) = a1[68];
    }
    else
    {
      v33 |= 0x10000000000uLL;
    }
  }
  uint64_t v43 = v34;
  uint64_t v44 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 336) = v43;
  *(void *)(a2 + 344) = v44;
  uint64_t v45 = *((unsigned int *)a1 + 21);
  *(void *)(a2 + 352) = a1[80];
  *(void *)(a2 + 360) = v45;
  uint64_t v46 = a1[89];
  *(void *)(a2 + 368) = a1[88];
  *(void *)(a2 + 376) = v46;
  uint64_t v47 = a1[90];
  uint64_t v48 = a1[91];
  uint64_t v49 = v33 | 0x3FC0000000000;
  *(void *)(a2 + 1248) = v33 | 0x3FC0000000000;
  *(void *)(a2 + 384) = v47;
  *(void *)(a2 + 392) = v48;
  unsigned int v50 = *((_DWORD *)a1 + 25);
  if (!v50)
  {
    uint64_t v51 = a1[92];
    uint64_t v49 = v33 | 0x7FC0000000000;
    *(void *)(a2 + 1248) = v33 | 0x7FC0000000000;
    *(void *)(a2 + 400) = v51;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 1)
  {
    uint64_t v52 = *((unsigned __int16 *)a1 + 46);
    v49 |= 0x8000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 408) = v52;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 2)
  {
    uint64_t v53 = *((unsigned __int16 *)a1 + 46);
    v49 |= 0x10000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 416) = v53;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 3)
  {
    uint64_t v54 = *((unsigned __int16 *)a1 + 46);
    v49 |= 0x20000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 424) = v54;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 4)
  {
    uint64_t v55 = *((unsigned int *)a1 + 23);
    v49 |= 0x40000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 432) = v55;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 5)
  {
    uint64_t v56 = *((unsigned __int16 *)a1 + 46);
    v49 |= 0x80000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 440) = v56;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 6)
  {
    uint64_t v57 = a1[92];
    v49 |= 0x100000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 448) = v57;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 7)
  {
    uint64_t v58 = *((unsigned int *)a1 + 23);
    *(void *)(a2 + 1248) = v49 | 0x200000000000000;
    *(void *)(a2 + 456) = v58;
    unsigned int v50 = *((_DWORD *)a1 + 25);
    if (v50 == 7)
    {
      v49 |= 0x600000000000000uLL;
      *(void *)(a2 + 464) = a1[96];
    }
    else
    {
      v49 |= 0x200000000000000uLL;
    }
  }
  uint64_t v59 = v50;
  uint64_t v60 = *((unsigned int *)a1 + 26);
  *(void *)(a2 + 472) = v59;
  *(void *)(a2 + 480) = v60;
  uint64_t v61 = *((unsigned int *)a1 + 28);
  *(void *)(a2 + 488) = a1[108];
  *(void *)(a2 + 496) = v61;
  uint64_t v62 = a1[116];
  *(void *)(a2 + 1248) = v49 | 0xF800000000000000;
  *(void *)(a2 + 504) = v62;
  unsigned int v63 = *((_DWORD *)a1 + 32);
  if (v63)
  {
    uint64_t v64 = 0;
  }
  else
  {
    uint64_t v65 = a1[120];
    uint64_t v64 = 1;
    *(void *)(a2 + 1256) = 1;
    *(void *)(a2 + 512) = v65;
    unsigned int v63 = *((_DWORD *)a1 + 32);
  }
  if (v63 == 1)
  {
    uint64_t v66 = *((unsigned __int16 *)a1 + 60);
    v64 |= 2uLL;
    *(void *)(a2 + 1256) = v64;
    *(void *)(a2 + 520) = v66;
    unsigned int v63 = *((_DWORD *)a1 + 32);
  }
  if (v63 == 2)
  {
    uint64_t v67 = *((unsigned __int16 *)a1 + 60);
    v64 |= 4uLL;
    *(void *)(a2 + 1256) = v64;
    *(void *)(a2 + 528) = v67;
    unsigned int v63 = *((_DWORD *)a1 + 32);
  }
  if (v63 == 3)
  {
    uint64_t v68 = *((unsigned __int16 *)a1 + 60);
    v64 |= 8uLL;
    *(void *)(a2 + 1256) = v64;
    *(void *)(a2 + 536) = v68;
    unsigned int v63 = *((_DWORD *)a1 + 32);
  }
  if (v63 == 4)
  {
    uint64_t v69 = *((unsigned int *)a1 + 30);
    v64 |= 0x10uLL;
    *(void *)(a2 + 1256) = v64;
    *(void *)(a2 + 544) = v69;
    unsigned int v63 = *((_DWORD *)a1 + 32);
  }
  if (v63 == 5)
  {
    uint64_t v70 = *((unsigned __int16 *)a1 + 60);
    v64 |= 0x20uLL;
    *(void *)(a2 + 1256) = v64;
    *(void *)(a2 + 552) = v70;
    unsigned int v63 = *((_DWORD *)a1 + 32);
  }
  if (v63 == 6)
  {
    uint64_t v71 = a1[120];
    v64 |= 0x40uLL;
    *(void *)(a2 + 1256) = v64;
    *(void *)(a2 + 560) = v71;
    unsigned int v63 = *((_DWORD *)a1 + 32);
  }
  if (v63 == 7)
  {
    uint64_t v72 = *((unsigned int *)a1 + 30);
    *(void *)(a2 + 1256) = v64 | 0x80;
    *(void *)(a2 + 568) = v72;
    unsigned int v63 = *((_DWORD *)a1 + 32);
    if (v63 == 7)
    {
      v64 |= 0x180uLL;
      *(void *)(a2 + 576) = a1[124];
      unsigned int v63 = 7;
    }
    else
    {
      v64 |= 0x80uLL;
    }
  }
  *(void *)(a2 + 584) = v63;
  *(void *)(a2 + 592) = *((unsigned int *)a1 + 33);
  *(void *)(a2 + 600) = a1[136];
  *(void *)(a2 + 608) = *((unsigned int *)a1 + 35);
  uint64_t v73 = a1[144];
  uint64_t v74 = v64 | 0x3E00;
  *(void *)(a2 + 1256) = v64 | 0x3E00;
  *(void *)(a2 + 616) = v73;
  unsigned int v75 = *((_DWORD *)a1 + 39);
  if (!v75)
  {
    uint64_t v76 = a1[148];
    uint64_t v74 = v64 | 0x7E00;
    *(void *)(a2 + 1256) = v64 | 0x7E00;
    *(void *)(a2 + 624) = v76;
    unsigned int v75 = *((_DWORD *)a1 + 39);
  }
  if (v75 == 1)
  {
    uint64_t v77 = *((unsigned __int16 *)a1 + 74);
    v74 |= 0x8000uLL;
    *(void *)(a2 + 1256) = v74;
    *(void *)(a2 + 632) = v77;
    unsigned int v75 = *((_DWORD *)a1 + 39);
  }
  if (v75 == 2)
  {
    uint64_t v78 = *((unsigned __int16 *)a1 + 74);
    v74 |= 0x10000uLL;
    *(void *)(a2 + 1256) = v74;
    *(void *)(a2 + 640) = v78;
    unsigned int v75 = *((_DWORD *)a1 + 39);
  }
  if (v75 == 3)
  {
    uint64_t v79 = *((unsigned __int16 *)a1 + 74);
    v74 |= 0x20000uLL;
    *(void *)(a2 + 1256) = v74;
    *(void *)(a2 + 648) = v79;
    unsigned int v75 = *((_DWORD *)a1 + 39);
  }
  if (v75 == 4)
  {
    uint64_t v80 = *((unsigned int *)a1 + 37);
    v74 |= 0x40000uLL;
    *(void *)(a2 + 1256) = v74;
    *(void *)(a2 + 656) = v80;
    unsigned int v75 = *((_DWORD *)a1 + 39);
  }
  if (v75 == 5)
  {
    uint64_t v81 = *((unsigned __int16 *)a1 + 74);
    v74 |= 0x80000uLL;
    *(void *)(a2 + 1256) = v74;
    *(void *)(a2 + 664) = v81;
    unsigned int v75 = *((_DWORD *)a1 + 39);
  }
  if (v75 == 6)
  {
    uint64_t v82 = a1[148];
    v74 |= 0x100000uLL;
    *(void *)(a2 + 1256) = v74;
    *(void *)(a2 + 672) = v82;
    unsigned int v75 = *((_DWORD *)a1 + 39);
  }
  if (v75 == 7)
  {
    uint64_t v83 = *((unsigned int *)a1 + 37);
    *(void *)(a2 + 1256) = v74 | 0x200000;
    *(void *)(a2 + 680) = v83;
    unsigned int v75 = *((_DWORD *)a1 + 39);
    if (v75 == 7)
    {
      v74 |= 0x600000uLL;
      *(void *)(a2 + 688) = a1[152];
      unsigned int v75 = 7;
    }
    else
    {
      v74 |= 0x200000uLL;
    }
  }
  *(void *)(a2 + 696) = v75;
  *(void *)(a2 + 704) = *((unsigned int *)a1 + 40);
  *(void *)(a2 + 712) = a1[164];
  *(void *)(a2 + 720) = *((unsigned int *)a1 + 42);
  *(void *)(a2 + 728) = a1[172];
  *(void *)(a2 + 736) = a1[173];
  uint64_t v84 = *((void *)a1 + 22);
  v85.n128_u64[0] = v84;
  v85.n128_u64[1] = HIDWORD(v84);
  *(__n128 *)(a2 + 744) = v85;
  *(void *)(a2 + 760) = a1[184];
  *(void *)(a2 + 768) = a1[185];
  *(void *)(a2 + 776) = a1[186];
  *(void *)(a2 + 784) = a1[187];
  *(void *)(a2 + 792) = a1[188];
  *(void *)(a2 + 800) = a1[189];
  *(void *)(a2 + 808) = a1[190];
  *(void *)(a2 + 816) = a1[191];
  uint64_t v86 = *((void *)a1 + 24);
  uint64_t v87 = *((void *)a1 + 25);
  v85.n128_u64[0] = v86;
  v85.n128_u64[1] = HIDWORD(v86);
  __n128 v88 = v85;
  v85.n128_u64[0] = v87;
  v85.n128_u64[1] = HIDWORD(v87);
  *(__n128 *)(a2 + 824) = v88;
  *(__n128 *)(a2 + 840) = v85;
  v88.n128_u64[0] = *((void *)a1 + 26);
  uint64_t v89 = *((void *)a1 + 27);
  v85.n128_u64[0] = v88.n128_u32[0];
  v85.n128_u64[1] = v88.n128_u32[1];
  __n128 result = v85;
  v85.n128_u64[0] = v89;
  v85.n128_u64[1] = HIDWORD(v89);
  *(__n128 *)(a2 + 856) = result;
  *(__n128 *)(a2 + 872) = v85;
  *(void *)(a2 + 888) = *((unsigned int *)a1 + 56);
  *(void *)(a2 + 896) = a1[228];
  *(void *)(a2 + 904) = a1[229];
  *(void *)(a2 + 912) = a1[230];
  *(void *)(a2 + 920) = *((unsigned int *)a1 + 58);
  *(void *)(a2 + 928) = a1[236];
  uint64_t v91 = *((unsigned int *)a1 + 60);
  *(void *)(a2 + 1256) = v74 | 0x3FFFFFFF800000;
  *(void *)(a2 + 936) = v91;
  return result;
}

__n128 sub_1CBE6B114(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
      unsigned int v16 = 7;
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v16;
  *(void *)(a2 + 192) = v25;
  uint64_t v26 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v26;
  uint64_t v27 = a1[53];
  *(void *)(a2 + 216) = a1[52];
  *(void *)(a2 + 224) = v27;
  uint64_t v28 = a1[55];
  *(void *)(a2 + 232) = a1[54];
  *(void *)(a2 + 240) = v28;
  uint64_t v29 = *((void *)a1 + 7);
  v30.n128_u64[0] = v29;
  v30.n128_u64[1] = HIDWORD(v29);
  *(__n128 *)(a2 + 248) = v30;
  uint64_t v31 = a1[65];
  *(void *)(a2 + 264) = a1[64];
  *(void *)(a2 + 272) = v31;
  uint64_t v32 = a1[67];
  *(void *)(a2 + 280) = a1[66];
  *(void *)(a2 + 288) = v32;
  uint64_t v33 = a1[69];
  *(void *)(a2 + 296) = a1[68];
  *(void *)(a2 + 304) = v33;
  uint64_t v34 = a1[71];
  *(void *)(a2 + 312) = a1[70];
  *(void *)(a2 + 320) = v34;
  uint64_t v35 = *((void *)a1 + 9);
  uint64_t v36 = *((void *)a1 + 10);
  v30.n128_u64[0] = v35;
  v30.n128_u64[1] = HIDWORD(v35);
  __n128 v37 = v30;
  v30.n128_u64[0] = v36;
  v30.n128_u64[1] = HIDWORD(v36);
  *(__n128 *)(a2 + 328) = v37;
  *(__n128 *)(a2 + 344) = v30;
  v37.n128_u64[0] = *((void *)a1 + 11);
  uint64_t v38 = *((void *)a1 + 12);
  v30.n128_u64[0] = v37.n128_u32[0];
  v30.n128_u64[1] = v37.n128_u32[1];
  __n128 result = v30;
  v30.n128_u64[0] = v38;
  v30.n128_u64[1] = HIDWORD(v38);
  *(__n128 *)(a2 + 360) = result;
  *(__n128 *)(a2 + 376) = v30;
  uint64_t v40 = a1[104];
  *(void *)(a2 + 1248) = v13 | 0x3FFFFFF800000;
  *(void *)(a2 + 392) = v40;
  return result;
}

__n128 sub_1CBE6B3F4(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = *(void *)(a1 + 20);
  *(void *)&long long v14 = v13;
  *((void *)&v14 + 1) = HIDWORD(v13);
  *(_OWORD *)(a2 + 96) = v14;
  uint64_t v15 = a1[28];
  uint64_t v16 = *((unsigned int *)a1 + 8);
  uint64_t v17 = v3 | 0xFE00;
  *(void *)(a2 + 1248) = v3 | 0xFE00;
  *(void *)(a2 + 112) = v15;
  *(void *)(a2 + 120) = v16;
  unsigned int v18 = *((_DWORD *)a1 + 11);
  if (!v18)
  {
    uint64_t v19 = a1[36];
    uint64_t v17 = v3 | 0x1FE00;
    *(void *)(a2 + 1248) = v3 | 0x1FE00;
    *(void *)(a2 + 128) = v19;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 1)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 136) = v20;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 2)
  {
    uint64_t v21 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 144) = v21;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 3)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 152) = v22;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 4)
  {
    uint64_t v23 = *((unsigned int *)a1 + 9);
    v17 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 160) = v23;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 5)
  {
    uint64_t v24 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x200000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 168) = v24;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 6)
  {
    uint64_t v25 = a1[36];
    v17 |= 0x400000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 176) = v25;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 7)
  {
    uint64_t v26 = *((unsigned int *)a1 + 9);
    *(void *)(a2 + 1248) = v17 | 0x800000;
    *(void *)(a2 + 184) = v26;
    unsigned int v18 = *((_DWORD *)a1 + 11);
    if (v18 == 7)
    {
      v17 |= 0x1800000uLL;
      *(void *)(a2 + 192) = a1[40];
    }
    else
    {
      v17 |= 0x800000uLL;
    }
  }
  uint64_t v27 = v18;
  uint64_t v28 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = v27;
  *(void *)(a2 + 208) = v28;
  uint64_t v29 = *((unsigned int *)a1 + 14);
  *(void *)(a2 + 216) = a1[52];
  *(void *)(a2 + 224) = v29;
  uint64_t v30 = a1[60];
  uint64_t v31 = v17 | 0x3E000000;
  *(void *)(a2 + 1248) = v17 | 0x3E000000;
  *(void *)(a2 + 232) = v30;
  unsigned int v32 = *((_DWORD *)a1 + 18);
  if (!v32)
  {
    uint64_t v33 = a1[64];
    uint64_t v31 = v17 | 0x7E000000;
    *(void *)(a2 + 1248) = v17 | 0x7E000000;
    *(void *)(a2 + 240) = v33;
    unsigned int v32 = *((_DWORD *)a1 + 18);
  }
  if (v32 == 1)
  {
    uint64_t v34 = *((unsigned __int16 *)a1 + 32);
    v31 |= 0x80000000uLL;
    *(void *)(a2 + 1248) = v31;
    *(void *)(a2 + 248) = v34;
    unsigned int v32 = *((_DWORD *)a1 + 18);
  }
  if (v32 == 2)
  {
    uint64_t v35 = *((unsigned __int16 *)a1 + 32);
    v31 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v31;
    *(void *)(a2 + 256) = v35;
    unsigned int v32 = *((_DWORD *)a1 + 18);
  }
  if (v32 == 3)
  {
    uint64_t v36 = *((unsigned __int16 *)a1 + 32);
    v31 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v31;
    *(void *)(a2 + 264) = v36;
    unsigned int v32 = *((_DWORD *)a1 + 18);
  }
  if (v32 == 4)
  {
    uint64_t v37 = *((unsigned int *)a1 + 16);
    v31 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v31;
    *(void *)(a2 + 272) = v37;
    unsigned int v32 = *((_DWORD *)a1 + 18);
  }
  if (v32 == 5)
  {
    uint64_t v38 = *((unsigned __int16 *)a1 + 32);
    v31 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v31;
    *(void *)(a2 + 280) = v38;
    unsigned int v32 = *((_DWORD *)a1 + 18);
  }
  if (v32 == 6)
  {
    uint64_t v39 = a1[64];
    v31 |= 0x1000000000uLL;
    *(void *)(a2 + 1248) = v31;
    *(void *)(a2 + 288) = v39;
    unsigned int v32 = *((_DWORD *)a1 + 18);
  }
  if (v32 == 7)
  {
    uint64_t v40 = *((unsigned int *)a1 + 16);
    *(void *)(a2 + 1248) = v31 | 0x2000000000;
    *(void *)(a2 + 296) = v40;
    unsigned int v32 = *((_DWORD *)a1 + 18);
    if (v32 == 7)
    {
      v31 |= 0x6000000000uLL;
      *(void *)(a2 + 304) = a1[68];
    }
    else
    {
      v31 |= 0x2000000000uLL;
    }
  }
  uint64_t v41 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 312) = v32;
  *(void *)(a2 + 320) = v41;
  uint64_t v42 = *((unsigned int *)a1 + 21);
  *(void *)(a2 + 328) = a1[80];
  *(void *)(a2 + 336) = v42;
  *(void *)(a2 + 344) = a1[88];
  uint64_t v43 = *(void *)(a1 + 92);
  v44.n128_u64[0] = v43;
  v44.n128_u64[1] = HIDWORD(v43);
  *(__n128 *)(a2 + 352) = v44;
  uint64_t v45 = a1[101];
  *(void *)(a2 + 368) = a1[100];
  *(void *)(a2 + 376) = v45;
  uint64_t v46 = a1[103];
  *(void *)(a2 + 384) = a1[102];
  *(void *)(a2 + 392) = v46;
  uint64_t v47 = a1[105];
  *(void *)(a2 + 400) = a1[104];
  *(void *)(a2 + 408) = v47;
  uint64_t v48 = a1[107];
  *(void *)(a2 + 416) = a1[106];
  *(void *)(a2 + 424) = v48;
  uint64_t v49 = *(void *)(a1 + 108);
  v44.n128_u64[0] = v49;
  v44.n128_u64[1] = HIDWORD(v49);
  __n128 v50 = v44;
  uint64_t v51 = *(void *)(a1 + 116);
  v44.n128_u64[0] = v51;
  v44.n128_u64[1] = HIDWORD(v51);
  *(__n128 *)(a2 + 432) = v50;
  *(__n128 *)(a2 + 448) = v44;
  v50.n128_u64[0] = *(void *)(a1 + 124);
  v44.n128_u64[0] = v50.n128_u32[0];
  v44.n128_u64[1] = v50.n128_u32[1];
  __n128 result = v44;
  uint64_t v53 = *(void *)(a1 + 132);
  v44.n128_u64[0] = v53;
  v44.n128_u64[1] = HIDWORD(v53);
  *(__n128 *)(a2 + 464) = result;
  *(__n128 *)(a2 + 480) = v44;
  uint64_t v54 = *((unsigned int *)a1 + 35);
  *(void *)(a2 + 1248) = v31 | 0xFFFFFF8000000000;
  uint64_t v55 = a1[144];
  *(void *)(a2 + 496) = v54;
  *(void *)(a2 + 504) = v55;
  uint64_t v56 = *((unsigned int *)a1 + 37);
  *(void *)(a2 + 1256) = 1;
  *(void *)(a2 + 512) = v56;
  return result;
}

__n128 sub_1CBE6B808(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = *(void *)(a1 + 20);
  *(void *)&long long v14 = v13;
  *((void *)&v14 + 1) = HIDWORD(v13);
  *(_OWORD *)(a2 + 96) = v14;
  uint64_t v15 = a1[28];
  uint64_t v16 = *((unsigned int *)a1 + 8);
  uint64_t v17 = v3 | 0xFE00;
  *(void *)(a2 + 1248) = v3 | 0xFE00;
  *(void *)(a2 + 112) = v15;
  *(void *)(a2 + 120) = v16;
  unsigned int v18 = *((_DWORD *)a1 + 11);
  if (!v18)
  {
    uint64_t v19 = a1[36];
    uint64_t v17 = v3 | 0x1FE00;
    *(void *)(a2 + 1248) = v3 | 0x1FE00;
    *(void *)(a2 + 128) = v19;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 1)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 136) = v20;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 2)
  {
    uint64_t v21 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 144) = v21;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 3)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 152) = v22;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 4)
  {
    uint64_t v23 = *((unsigned int *)a1 + 9);
    v17 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 160) = v23;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 5)
  {
    uint64_t v24 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x200000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 168) = v24;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 6)
  {
    uint64_t v25 = a1[36];
    v17 |= 0x400000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 176) = v25;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 7)
  {
    uint64_t v26 = *((unsigned int *)a1 + 9);
    *(void *)(a2 + 1248) = v17 | 0x800000;
    *(void *)(a2 + 184) = v26;
    unsigned int v18 = *((_DWORD *)a1 + 11);
    if (v18 == 7)
    {
      v17 |= 0x1800000uLL;
      *(void *)(a2 + 192) = a1[40];
      unsigned int v18 = 7;
    }
    else
    {
      v17 |= 0x800000uLL;
    }
  }
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = v18;
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = *((unsigned int *)a1 + 14);
  *(void *)(a2 + 216) = a1[52];
  *(void *)(a2 + 224) = v28;
  uint64_t v29 = a1[61];
  *(void *)(a2 + 232) = a1[60];
  *(void *)(a2 + 240) = v29;
  uint64_t v30 = a1[63];
  *(void *)(a2 + 248) = a1[62];
  *(void *)(a2 + 256) = v30;
  uint64_t v31 = *((void *)a1 + 8);
  v32.n128_u64[0] = v31;
  v32.n128_u64[1] = HIDWORD(v31);
  *(__n128 *)(a2 + 264) = v32;
  uint64_t v33 = a1[73];
  *(void *)(a2 + 280) = a1[72];
  *(void *)(a2 + 288) = v33;
  uint64_t v34 = a1[75];
  *(void *)(a2 + 296) = a1[74];
  *(void *)(a2 + 304) = v34;
  uint64_t v35 = a1[77];
  *(void *)(a2 + 312) = a1[76];
  *(void *)(a2 + 320) = v35;
  uint64_t v36 = a1[79];
  *(void *)(a2 + 328) = a1[78];
  *(void *)(a2 + 336) = v36;
  uint64_t v37 = *((void *)a1 + 10);
  uint64_t v38 = *((void *)a1 + 11);
  v32.n128_u64[0] = v37;
  v32.n128_u64[1] = HIDWORD(v37);
  __n128 v39 = v32;
  v32.n128_u64[0] = v38;
  v32.n128_u64[1] = HIDWORD(v38);
  *(__n128 *)(a2 + 344) = v39;
  *(__n128 *)(a2 + 360) = v32;
  v39.n128_u64[0] = *((void *)a1 + 12);
  uint64_t v40 = *((void *)a1 + 13);
  v32.n128_u64[0] = v39.n128_u32[0];
  v32.n128_u64[1] = v39.n128_u32[1];
  __n128 result = v32;
  v32.n128_u64[0] = v40;
  v32.n128_u64[1] = HIDWORD(v40);
  *(__n128 *)(a2 + 376) = result;
  *(__n128 *)(a2 + 392) = v32;
  uint64_t v42 = a1[112];
  uint64_t v43 = *((unsigned int *)a1 + 29);
  *(void *)(a2 + 1248) = v17 | 0x1FFFFFFE000000;
  *(void *)(a2 + 408) = v42;
  *(void *)(a2 + 416) = v43;
  return result;
}

__n128 sub_1CBE6BAF8(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = *(void *)(a1 + 20);
  *(void *)&long long v14 = v13;
  *((void *)&v14 + 1) = HIDWORD(v13);
  *(_OWORD *)(a2 + 96) = v14;
  uint64_t v15 = a1[28];
  uint64_t v16 = *((unsigned int *)a1 + 8);
  uint64_t v17 = v3 | 0xFE00;
  *(void *)(a2 + 1248) = v3 | 0xFE00;
  *(void *)(a2 + 112) = v15;
  *(void *)(a2 + 120) = v16;
  unsigned int v18 = *((_DWORD *)a1 + 11);
  if (!v18)
  {
    uint64_t v19 = a1[36];
    uint64_t v17 = v3 | 0x1FE00;
    *(void *)(a2 + 1248) = v3 | 0x1FE00;
    *(void *)(a2 + 128) = v19;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 1)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 136) = v20;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 2)
  {
    uint64_t v21 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 144) = v21;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 3)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 152) = v22;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 4)
  {
    uint64_t v23 = *((unsigned int *)a1 + 9);
    v17 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 160) = v23;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 5)
  {
    uint64_t v24 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x200000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 168) = v24;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 6)
  {
    uint64_t v25 = a1[36];
    v17 |= 0x400000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 176) = v25;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 7)
  {
    uint64_t v26 = *((unsigned int *)a1 + 9);
    *(void *)(a2 + 1248) = v17 | 0x800000;
    *(void *)(a2 + 184) = v26;
    unsigned int v18 = *((_DWORD *)a1 + 11);
    if (v18 == 7)
    {
      v17 |= 0x1800000uLL;
      *(void *)(a2 + 192) = a1[40];
    }
    else
    {
      v17 |= 0x800000uLL;
    }
  }
  uint64_t v27 = v18;
  uint64_t v28 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = v27;
  *(void *)(a2 + 208) = v28;
  uint64_t v29 = *((unsigned int *)a1 + 14);
  *(void *)(a2 + 216) = a1[52];
  *(void *)(a2 + 224) = v29;
  uint64_t v30 = a1[61];
  *(void *)(a2 + 232) = a1[60];
  *(void *)(a2 + 240) = v30;
  uint64_t v31 = a1[62];
  uint64_t v32 = a1[63];
  uint64_t v33 = v17 | 0x1FE000000;
  *(void *)(a2 + 1248) = v17 | 0x1FE000000;
  *(void *)(a2 + 248) = v31;
  *(void *)(a2 + 256) = v32;
  unsigned int v34 = *((_DWORD *)a1 + 18);
  if (!v34)
  {
    uint64_t v35 = a1[64];
    uint64_t v33 = v17 | 0x3FE000000;
    *(void *)(a2 + 1248) = v17 | 0x3FE000000;
    *(void *)(a2 + 264) = v35;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 1)
  {
    uint64_t v36 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 272) = v36;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 2)
  {
    uint64_t v37 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 280) = v37;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 3)
  {
    uint64_t v38 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x1000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 288) = v38;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 4)
  {
    uint64_t v39 = *((unsigned int *)a1 + 16);
    v33 |= 0x2000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 296) = v39;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 5)
  {
    uint64_t v40 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x4000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 304) = v40;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 6)
  {
    uint64_t v41 = a1[64];
    v33 |= 0x8000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 312) = v41;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 7)
  {
    uint64_t v42 = *((unsigned int *)a1 + 16);
    *(void *)(a2 + 1248) = v33 | 0x10000000000;
    *(void *)(a2 + 320) = v42;
    unsigned int v34 = *((_DWORD *)a1 + 18);
    if (v34 == 7)
    {
      v33 |= 0x30000000000uLL;
      *(void *)(a2 + 328) = a1[68];
    }
    else
    {
      v33 |= 0x10000000000uLL;
    }
  }
  uint64_t v43 = v34;
  uint64_t v44 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 336) = v43;
  *(void *)(a2 + 344) = v44;
  uint64_t v45 = *((unsigned int *)a1 + 21);
  *(void *)(a2 + 352) = a1[80];
  *(void *)(a2 + 360) = v45;
  uint64_t v46 = a1[89];
  *(void *)(a2 + 368) = a1[88];
  *(void *)(a2 + 376) = v46;
  uint64_t v47 = a1[90];
  uint64_t v48 = a1[91];
  uint64_t v49 = v33 | 0x3FC0000000000;
  *(void *)(a2 + 1248) = v33 | 0x3FC0000000000;
  *(void *)(a2 + 384) = v47;
  *(void *)(a2 + 392) = v48;
  unsigned int v50 = *((_DWORD *)a1 + 25);
  if (!v50)
  {
    uint64_t v51 = a1[92];
    uint64_t v49 = v33 | 0x7FC0000000000;
    *(void *)(a2 + 1248) = v33 | 0x7FC0000000000;
    *(void *)(a2 + 400) = v51;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 1)
  {
    uint64_t v52 = *((unsigned __int16 *)a1 + 46);
    v49 |= 0x8000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 408) = v52;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 2)
  {
    uint64_t v53 = *((unsigned __int16 *)a1 + 46);
    v49 |= 0x10000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 416) = v53;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 3)
  {
    uint64_t v54 = *((unsigned __int16 *)a1 + 46);
    v49 |= 0x20000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 424) = v54;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 4)
  {
    uint64_t v55 = *((unsigned int *)a1 + 23);
    v49 |= 0x40000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 432) = v55;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 5)
  {
    uint64_t v56 = *((unsigned __int16 *)a1 + 46);
    v49 |= 0x80000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 440) = v56;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 6)
  {
    uint64_t v57 = a1[92];
    v49 |= 0x100000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 448) = v57;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 7)
  {
    uint64_t v58 = *((unsigned int *)a1 + 23);
    *(void *)(a2 + 1248) = v49 | 0x200000000000000;
    *(void *)(a2 + 456) = v58;
    unsigned int v50 = *((_DWORD *)a1 + 25);
    if (v50 == 7)
    {
      v49 |= 0x600000000000000uLL;
      *(void *)(a2 + 464) = a1[96];
      unsigned int v50 = 7;
    }
    else
    {
      v49 |= 0x200000000000000uLL;
    }
  }
  uint64_t v59 = *((unsigned int *)a1 + 26);
  *(void *)(a2 + 472) = v50;
  *(void *)(a2 + 480) = v59;
  uint64_t v60 = *((unsigned int *)a1 + 28);
  *(void *)(a2 + 488) = a1[108];
  *(void *)(a2 + 496) = v60;
  uint64_t v61 = a1[116];
  *(void *)(a2 + 1248) = v49 | 0xF800000000000000;
  uint64_t v62 = a1[117];
  *(void *)(a2 + 504) = v61;
  *(void *)(a2 + 512) = v62;
  *(void *)(a2 + 520) = a1[118];
  *(void *)(a2 + 528) = a1[119];
  uint64_t v63 = *((void *)a1 + 15);
  v64.n128_u64[0] = v63;
  v64.n128_u64[1] = HIDWORD(v63);
  *(__n128 *)(a2 + 536) = v64;
  *(void *)(a2 + 552) = a1[128];
  *(void *)(a2 + 560) = a1[129];
  *(void *)(a2 + 568) = a1[130];
  *(void *)(a2 + 576) = a1[131];
  *(void *)(a2 + 584) = a1[132];
  *(void *)(a2 + 592) = a1[133];
  *(void *)(a2 + 600) = a1[134];
  *(void *)(a2 + 608) = a1[135];
  uint64_t v65 = *((void *)a1 + 17);
  uint64_t v66 = *((void *)a1 + 18);
  v64.n128_u64[0] = v65;
  v64.n128_u64[1] = HIDWORD(v65);
  __n128 v67 = v64;
  v64.n128_u64[0] = v66;
  v64.n128_u64[1] = HIDWORD(v66);
  *(__n128 *)(a2 + 616) = v67;
  *(__n128 *)(a2 + 632) = v64;
  v67.n128_u64[0] = *((void *)a1 + 19);
  uint64_t v68 = *((void *)a1 + 20);
  v64.n128_u64[0] = v67.n128_u32[0];
  v64.n128_u64[1] = v67.n128_u32[1];
  __n128 result = v64;
  v64.n128_u64[0] = v68;
  v64.n128_u64[1] = HIDWORD(v68);
  *(__n128 *)(a2 + 648) = result;
  *(__n128 *)(a2 + 664) = v64;
  *(void *)(a2 + 680) = a1[168];
  uint64_t v70 = *((unsigned int *)a1 + 43);
  *(void *)(a2 + 1256) = 0x7FFFFFLL;
  *(void *)(a2 + 688) = v70;
  return result;
}

__n128 sub_1CBE6C070(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = *(void *)(a1 + 20);
  *(void *)&long long v14 = v13;
  *((void *)&v14 + 1) = HIDWORD(v13);
  *(_OWORD *)(a2 + 96) = v14;
  uint64_t v15 = a1[28];
  uint64_t v16 = *((unsigned int *)a1 + 8);
  uint64_t v17 = v3 | 0xFE00;
  *(void *)(a2 + 1248) = v3 | 0xFE00;
  *(void *)(a2 + 112) = v15;
  *(void *)(a2 + 120) = v16;
  unsigned int v18 = *((_DWORD *)a1 + 11);
  if (!v18)
  {
    uint64_t v19 = a1[36];
    uint64_t v17 = v3 | 0x1FE00;
    *(void *)(a2 + 1248) = v3 | 0x1FE00;
    *(void *)(a2 + 128) = v19;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 1)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 136) = v20;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 2)
  {
    uint64_t v21 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 144) = v21;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 3)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 152) = v22;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 4)
  {
    uint64_t v23 = *((unsigned int *)a1 + 9);
    v17 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 160) = v23;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 5)
  {
    uint64_t v24 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x200000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 168) = v24;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 6)
  {
    uint64_t v25 = a1[36];
    v17 |= 0x400000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 176) = v25;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 7)
  {
    uint64_t v26 = *((unsigned int *)a1 + 9);
    *(void *)(a2 + 1248) = v17 | 0x800000;
    *(void *)(a2 + 184) = v26;
    unsigned int v18 = *((_DWORD *)a1 + 11);
    if (v18 == 7)
    {
      v17 |= 0x1800000uLL;
      *(void *)(a2 + 192) = a1[40];
    }
    else
    {
      v17 |= 0x800000uLL;
    }
  }
  uint64_t v27 = v18;
  uint64_t v28 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = v27;
  *(void *)(a2 + 208) = v28;
  uint64_t v29 = *((unsigned int *)a1 + 14);
  *(void *)(a2 + 216) = a1[52];
  *(void *)(a2 + 224) = v29;
  uint64_t v30 = a1[61];
  *(void *)(a2 + 232) = a1[60];
  *(void *)(a2 + 240) = v30;
  uint64_t v31 = a1[62];
  uint64_t v32 = a1[63];
  uint64_t v33 = v17 | 0x1FE000000;
  *(void *)(a2 + 1248) = v17 | 0x1FE000000;
  *(void *)(a2 + 248) = v31;
  *(void *)(a2 + 256) = v32;
  unsigned int v34 = *((_DWORD *)a1 + 18);
  if (!v34)
  {
    uint64_t v35 = a1[64];
    uint64_t v33 = v17 | 0x3FE000000;
    *(void *)(a2 + 1248) = v17 | 0x3FE000000;
    *(void *)(a2 + 264) = v35;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 1)
  {
    uint64_t v36 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 272) = v36;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 2)
  {
    uint64_t v37 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 280) = v37;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 3)
  {
    uint64_t v38 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x1000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 288) = v38;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 4)
  {
    uint64_t v39 = *((unsigned int *)a1 + 16);
    v33 |= 0x2000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 296) = v39;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 5)
  {
    uint64_t v40 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x4000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 304) = v40;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 6)
  {
    uint64_t v41 = a1[64];
    v33 |= 0x8000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 312) = v41;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 7)
  {
    uint64_t v42 = *((unsigned int *)a1 + 16);
    *(void *)(a2 + 1248) = v33 | 0x10000000000;
    *(void *)(a2 + 320) = v42;
    unsigned int v34 = *((_DWORD *)a1 + 18);
    if (v34 == 7)
    {
      v33 |= 0x30000000000uLL;
      *(void *)(a2 + 328) = a1[68];
    }
    else
    {
      v33 |= 0x10000000000uLL;
    }
  }
  uint64_t v43 = v34;
  uint64_t v44 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 336) = v43;
  *(void *)(a2 + 344) = v44;
  uint64_t v45 = *((unsigned int *)a1 + 21);
  *(void *)(a2 + 352) = a1[80];
  *(void *)(a2 + 360) = v45;
  uint64_t v46 = a1[89];
  *(void *)(a2 + 368) = a1[88];
  *(void *)(a2 + 376) = v46;
  uint64_t v47 = a1[90];
  uint64_t v48 = a1[91];
  uint64_t v49 = v33 | 0x3FC0000000000;
  *(void *)(a2 + 1248) = v33 | 0x3FC0000000000;
  *(void *)(a2 + 384) = v47;
  *(void *)(a2 + 392) = v48;
  unsigned int v50 = *((_DWORD *)a1 + 25);
  if (!v50)
  {
    uint64_t v51 = a1[92];
    uint64_t v49 = v33 | 0x7FC0000000000;
    *(void *)(a2 + 1248) = v33 | 0x7FC0000000000;
    *(void *)(a2 + 400) = v51;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 1)
  {
    uint64_t v52 = *((unsigned __int16 *)a1 + 46);
    v49 |= 0x8000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 408) = v52;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 2)
  {
    uint64_t v53 = *((unsigned __int16 *)a1 + 46);
    v49 |= 0x10000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 416) = v53;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 3)
  {
    uint64_t v54 = *((unsigned __int16 *)a1 + 46);
    v49 |= 0x20000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 424) = v54;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 4)
  {
    uint64_t v55 = *((unsigned int *)a1 + 23);
    v49 |= 0x40000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 432) = v55;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 5)
  {
    uint64_t v56 = *((unsigned __int16 *)a1 + 46);
    v49 |= 0x80000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 440) = v56;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 6)
  {
    uint64_t v57 = a1[92];
    v49 |= 0x100000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 448) = v57;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 7)
  {
    uint64_t v58 = *((unsigned int *)a1 + 23);
    *(void *)(a2 + 1248) = v49 | 0x200000000000000;
    *(void *)(a2 + 456) = v58;
    unsigned int v50 = *((_DWORD *)a1 + 25);
    if (v50 == 7)
    {
      v49 |= 0x600000000000000uLL;
      *(void *)(a2 + 464) = a1[96];
      unsigned int v50 = 7;
    }
    else
    {
      v49 |= 0x200000000000000uLL;
    }
  }
  uint64_t v59 = *((unsigned int *)a1 + 26);
  *(void *)(a2 + 472) = v50;
  *(void *)(a2 + 480) = v59;
  uint64_t v60 = *((unsigned int *)a1 + 28);
  *(void *)(a2 + 488) = a1[108];
  *(void *)(a2 + 496) = v60;
  uint64_t v61 = a1[116];
  *(void *)(a2 + 1248) = v49 | 0xF800000000000000;
  uint64_t v62 = a1[117];
  *(void *)(a2 + 504) = v61;
  *(void *)(a2 + 512) = v62;
  *(void *)(a2 + 520) = a1[118];
  *(void *)(a2 + 528) = a1[119];
  uint64_t v63 = *((void *)a1 + 15);
  v64.n128_u64[0] = v63;
  v64.n128_u64[1] = HIDWORD(v63);
  *(__n128 *)(a2 + 536) = v64;
  *(void *)(a2 + 552) = a1[128];
  *(void *)(a2 + 560) = a1[129];
  *(void *)(a2 + 568) = a1[130];
  *(void *)(a2 + 576) = a1[131];
  *(void *)(a2 + 584) = a1[132];
  *(void *)(a2 + 592) = a1[133];
  *(void *)(a2 + 600) = a1[134];
  *(void *)(a2 + 608) = a1[135];
  uint64_t v65 = *((void *)a1 + 17);
  uint64_t v66 = *((void *)a1 + 18);
  v64.n128_u64[0] = v65;
  v64.n128_u64[1] = HIDWORD(v65);
  __n128 v67 = v64;
  v64.n128_u64[0] = v66;
  v64.n128_u64[1] = HIDWORD(v66);
  *(__n128 *)(a2 + 616) = v67;
  *(__n128 *)(a2 + 632) = v64;
  v67.n128_u64[0] = *((void *)a1 + 19);
  uint64_t v68 = *((void *)a1 + 20);
  v64.n128_u64[0] = v67.n128_u32[0];
  v64.n128_u64[1] = v67.n128_u32[1];
  __n128 result = v64;
  v64.n128_u64[0] = v68;
  v64.n128_u64[1] = HIDWORD(v68);
  *(__n128 *)(a2 + 648) = result;
  *(__n128 *)(a2 + 664) = v64;
  *(void *)(a2 + 680) = a1[168];
  uint64_t v70 = *((unsigned int *)a1 + 43);
  *(void *)(a2 + 1256) = 0x7FFFFFLL;
  *(void *)(a2 + 688) = v70;
  return result;
}

__n128 sub_1CBE6C5E8(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = *(void *)(a1 + 20);
  *(void *)&long long v14 = v13;
  *((void *)&v14 + 1) = HIDWORD(v13);
  *(_OWORD *)(a2 + 96) = v14;
  uint64_t v15 = a1[28];
  uint64_t v16 = *((unsigned int *)a1 + 8);
  uint64_t v17 = v3 | 0xFE00;
  *(void *)(a2 + 1248) = v3 | 0xFE00;
  *(void *)(a2 + 112) = v15;
  *(void *)(a2 + 120) = v16;
  unsigned int v18 = *((_DWORD *)a1 + 11);
  if (!v18)
  {
    uint64_t v19 = a1[36];
    uint64_t v17 = v3 | 0x1FE00;
    *(void *)(a2 + 1248) = v3 | 0x1FE00;
    *(void *)(a2 + 128) = v19;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 1)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 136) = v20;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 2)
  {
    uint64_t v21 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 144) = v21;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 3)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 152) = v22;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 4)
  {
    uint64_t v23 = *((unsigned int *)a1 + 9);
    v17 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 160) = v23;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 5)
  {
    uint64_t v24 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x200000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 168) = v24;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 6)
  {
    uint64_t v25 = a1[36];
    v17 |= 0x400000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 176) = v25;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 7)
  {
    uint64_t v26 = *((unsigned int *)a1 + 9);
    *(void *)(a2 + 1248) = v17 | 0x800000;
    *(void *)(a2 + 184) = v26;
    unsigned int v18 = *((_DWORD *)a1 + 11);
    if (v18 == 7)
    {
      v17 |= 0x1800000uLL;
      *(void *)(a2 + 192) = a1[40];
    }
    else
    {
      v17 |= 0x800000uLL;
    }
  }
  uint64_t v27 = v18;
  uint64_t v28 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = v27;
  *(void *)(a2 + 208) = v28;
  uint64_t v29 = *((unsigned int *)a1 + 14);
  *(void *)(a2 + 216) = a1[52];
  *(void *)(a2 + 224) = v29;
  uint64_t v30 = a1[61];
  *(void *)(a2 + 232) = a1[60];
  *(void *)(a2 + 240) = v30;
  uint64_t v31 = a1[62];
  uint64_t v32 = a1[63];
  uint64_t v33 = v17 | 0x1FE000000;
  *(void *)(a2 + 1248) = v17 | 0x1FE000000;
  *(void *)(a2 + 248) = v31;
  *(void *)(a2 + 256) = v32;
  unsigned int v34 = *((_DWORD *)a1 + 18);
  if (!v34)
  {
    uint64_t v35 = a1[64];
    uint64_t v33 = v17 | 0x3FE000000;
    *(void *)(a2 + 1248) = v17 | 0x3FE000000;
    *(void *)(a2 + 264) = v35;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 1)
  {
    uint64_t v36 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 272) = v36;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 2)
  {
    uint64_t v37 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 280) = v37;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 3)
  {
    uint64_t v38 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x1000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 288) = v38;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 4)
  {
    uint64_t v39 = *((unsigned int *)a1 + 16);
    v33 |= 0x2000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 296) = v39;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 5)
  {
    uint64_t v40 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x4000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 304) = v40;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 6)
  {
    uint64_t v41 = a1[64];
    v33 |= 0x8000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 312) = v41;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 7)
  {
    uint64_t v42 = *((unsigned int *)a1 + 16);
    *(void *)(a2 + 1248) = v33 | 0x10000000000;
    *(void *)(a2 + 320) = v42;
    unsigned int v34 = *((_DWORD *)a1 + 18);
    if (v34 == 7)
    {
      v33 |= 0x30000000000uLL;
      *(void *)(a2 + 328) = a1[68];
    }
    else
    {
      v33 |= 0x10000000000uLL;
    }
  }
  uint64_t v43 = v34;
  uint64_t v44 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 336) = v43;
  *(void *)(a2 + 344) = v44;
  uint64_t v45 = *((unsigned int *)a1 + 21);
  *(void *)(a2 + 352) = a1[80];
  *(void *)(a2 + 360) = v45;
  uint64_t v46 = a1[89];
  *(void *)(a2 + 368) = a1[88];
  *(void *)(a2 + 376) = v46;
  uint64_t v47 = a1[90];
  uint64_t v48 = a1[91];
  uint64_t v49 = v33 | 0x3FC0000000000;
  *(void *)(a2 + 1248) = v33 | 0x3FC0000000000;
  *(void *)(a2 + 384) = v47;
  *(void *)(a2 + 392) = v48;
  unsigned int v50 = *((_DWORD *)a1 + 25);
  if (!v50)
  {
    uint64_t v51 = a1[92];
    uint64_t v49 = v33 | 0x7FC0000000000;
    *(void *)(a2 + 1248) = v33 | 0x7FC0000000000;
    *(void *)(a2 + 400) = v51;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 1)
  {
    uint64_t v52 = *((unsigned __int16 *)a1 + 46);
    v49 |= 0x8000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 408) = v52;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 2)
  {
    uint64_t v53 = *((unsigned __int16 *)a1 + 46);
    v49 |= 0x10000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 416) = v53;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 3)
  {
    uint64_t v54 = *((unsigned __int16 *)a1 + 46);
    v49 |= 0x20000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 424) = v54;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 4)
  {
    uint64_t v55 = *((unsigned int *)a1 + 23);
    v49 |= 0x40000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 432) = v55;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 5)
  {
    uint64_t v56 = *((unsigned __int16 *)a1 + 46);
    v49 |= 0x80000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 440) = v56;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 6)
  {
    uint64_t v57 = a1[92];
    v49 |= 0x100000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 448) = v57;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 7)
  {
    uint64_t v58 = *((unsigned int *)a1 + 23);
    *(void *)(a2 + 1248) = v49 | 0x200000000000000;
    *(void *)(a2 + 456) = v58;
    unsigned int v50 = *((_DWORD *)a1 + 25);
    if (v50 == 7)
    {
      v49 |= 0x600000000000000uLL;
      *(void *)(a2 + 464) = a1[96];
    }
    else
    {
      v49 |= 0x200000000000000uLL;
    }
  }
  uint64_t v59 = v50;
  uint64_t v60 = *((unsigned int *)a1 + 26);
  *(void *)(a2 + 472) = v59;
  *(void *)(a2 + 480) = v60;
  uint64_t v61 = *((unsigned int *)a1 + 28);
  *(void *)(a2 + 488) = a1[108];
  *(void *)(a2 + 496) = v61;
  uint64_t v62 = a1[116];
  *(void *)(a2 + 1248) = v49 | 0xF800000000000000;
  *(void *)(a2 + 504) = v62;
  unsigned int v63 = *((_DWORD *)a1 + 32);
  if (v63)
  {
    uint64_t v64 = 0;
  }
  else
  {
    uint64_t v65 = a1[120];
    uint64_t v64 = 1;
    *(void *)(a2 + 1256) = 1;
    *(void *)(a2 + 512) = v65;
    unsigned int v63 = *((_DWORD *)a1 + 32);
  }
  if (v63 == 1)
  {
    uint64_t v66 = *((unsigned __int16 *)a1 + 60);
    v64 |= 2uLL;
    *(void *)(a2 + 1256) = v64;
    *(void *)(a2 + 520) = v66;
    unsigned int v63 = *((_DWORD *)a1 + 32);
  }
  if (v63 == 2)
  {
    uint64_t v67 = *((unsigned __int16 *)a1 + 60);
    v64 |= 4uLL;
    *(void *)(a2 + 1256) = v64;
    *(void *)(a2 + 528) = v67;
    unsigned int v63 = *((_DWORD *)a1 + 32);
  }
  if (v63 == 3)
  {
    uint64_t v68 = *((unsigned __int16 *)a1 + 60);
    v64 |= 8uLL;
    *(void *)(a2 + 1256) = v64;
    *(void *)(a2 + 536) = v68;
    unsigned int v63 = *((_DWORD *)a1 + 32);
  }
  if (v63 == 4)
  {
    uint64_t v69 = *((unsigned int *)a1 + 30);
    v64 |= 0x10uLL;
    *(void *)(a2 + 1256) = v64;
    *(void *)(a2 + 544) = v69;
    unsigned int v63 = *((_DWORD *)a1 + 32);
  }
  if (v63 == 5)
  {
    uint64_t v70 = *((unsigned __int16 *)a1 + 60);
    v64 |= 0x20uLL;
    *(void *)(a2 + 1256) = v64;
    *(void *)(a2 + 552) = v70;
    unsigned int v63 = *((_DWORD *)a1 + 32);
  }
  if (v63 == 6)
  {
    uint64_t v71 = a1[120];
    v64 |= 0x40uLL;
    *(void *)(a2 + 1256) = v64;
    *(void *)(a2 + 560) = v71;
    unsigned int v63 = *((_DWORD *)a1 + 32);
  }
  if (v63 == 7)
  {
    uint64_t v72 = *((unsigned int *)a1 + 30);
    *(void *)(a2 + 1256) = v64 | 0x80;
    *(void *)(a2 + 568) = v72;
    unsigned int v63 = *((_DWORD *)a1 + 32);
    if (v63 == 7)
    {
      v64 |= 0x180uLL;
      *(void *)(a2 + 576) = a1[124];
      unsigned int v63 = 7;
    }
    else
    {
      v64 |= 0x80uLL;
    }
  }
  *(void *)(a2 + 584) = v63;
  *(void *)(a2 + 592) = *((unsigned int *)a1 + 33);
  *(void *)(a2 + 600) = a1[136];
  *(void *)(a2 + 608) = *((unsigned int *)a1 + 35);
  *(void *)(a2 + 616) = a1[144];
  uint64_t v73 = *(void *)(a1 + 148);
  v74.n128_u64[0] = v73;
  v74.n128_u64[1] = HIDWORD(v73);
  *(__n128 *)(a2 + 624) = v74;
  *(void *)(a2 + 640) = a1[156];
  *(void *)(a2 + 648) = a1[157];
  *(void *)(a2 + 656) = a1[158];
  *(void *)(a2 + 664) = a1[159];
  *(void *)(a2 + 672) = a1[160];
  *(void *)(a2 + 680) = a1[161];
  *(void *)(a2 + 688) = a1[162];
  *(void *)(a2 + 696) = a1[163];
  *(void *)(a2 + 704) = *((unsigned int *)a1 + 41);
  *(void *)(a2 + 712) = a1[168];
  uint64_t v75 = *(void *)(a1 + 172);
  v74.n128_u64[0] = v75;
  v74.n128_u64[1] = HIDWORD(v75);
  __n128 v76 = v74;
  uint64_t v77 = *(void *)(a1 + 180);
  v74.n128_u64[0] = v77;
  v74.n128_u64[1] = HIDWORD(v77);
  *(__n128 *)(a2 + 720) = v76;
  *(__n128 *)(a2 + 736) = v74;
  v76.n128_u64[0] = *(void *)(a1 + 188);
  v74.n128_u64[0] = v76.n128_u32[0];
  v74.n128_u64[1] = v76.n128_u32[1];
  __n128 result = v74;
  uint64_t v79 = *(void *)(a1 + 196);
  v74.n128_u64[0] = v79;
  v74.n128_u64[1] = HIDWORD(v79);
  *(__n128 *)(a2 + 752) = result;
  *(__n128 *)(a2 + 768) = v74;
  *(void *)(a2 + 784) = a1[204];
  uint64_t v80 = *((unsigned int *)a1 + 52);
  *(void *)(a2 + 1256) = v64 | 0xFFFFFFE00;
  *(void *)(a2 + 792) = v80;
  return result;
}

__n128 sub_1CBE6CC8C(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = *(void *)(a1 + 20);
  *(void *)&long long v14 = v13;
  *((void *)&v14 + 1) = HIDWORD(v13);
  *(_OWORD *)(a2 + 96) = v14;
  uint64_t v15 = a1[28];
  uint64_t v16 = *((unsigned int *)a1 + 8);
  uint64_t v17 = v3 | 0xFE00;
  *(void *)(a2 + 1248) = v3 | 0xFE00;
  *(void *)(a2 + 112) = v15;
  *(void *)(a2 + 120) = v16;
  unsigned int v18 = *((_DWORD *)a1 + 11);
  if (!v18)
  {
    uint64_t v19 = a1[36];
    uint64_t v17 = v3 | 0x1FE00;
    *(void *)(a2 + 1248) = v3 | 0x1FE00;
    *(void *)(a2 + 128) = v19;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 1)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 136) = v20;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 2)
  {
    uint64_t v21 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 144) = v21;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 3)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 152) = v22;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 4)
  {
    uint64_t v23 = *((unsigned int *)a1 + 9);
    v17 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 160) = v23;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 5)
  {
    uint64_t v24 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x200000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 168) = v24;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 6)
  {
    uint64_t v25 = a1[36];
    v17 |= 0x400000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 176) = v25;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 7)
  {
    uint64_t v26 = *((unsigned int *)a1 + 9);
    *(void *)(a2 + 1248) = v17 | 0x800000;
    *(void *)(a2 + 184) = v26;
    unsigned int v18 = *((_DWORD *)a1 + 11);
    if (v18 == 7)
    {
      v17 |= 0x1800000uLL;
      *(void *)(a2 + 192) = a1[40];
    }
    else
    {
      v17 |= 0x800000uLL;
    }
  }
  uint64_t v27 = v18;
  uint64_t v28 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = v27;
  *(void *)(a2 + 208) = v28;
  uint64_t v29 = *((unsigned int *)a1 + 14);
  *(void *)(a2 + 216) = a1[52];
  *(void *)(a2 + 224) = v29;
  uint64_t v30 = a1[61];
  *(void *)(a2 + 232) = a1[60];
  *(void *)(a2 + 240) = v30;
  uint64_t v31 = a1[62];
  uint64_t v32 = a1[63];
  uint64_t v33 = v17 | 0x1FE000000;
  *(void *)(a2 + 1248) = v17 | 0x1FE000000;
  *(void *)(a2 + 248) = v31;
  *(void *)(a2 + 256) = v32;
  unsigned int v34 = *((_DWORD *)a1 + 18);
  if (!v34)
  {
    uint64_t v35 = a1[64];
    uint64_t v33 = v17 | 0x3FE000000;
    *(void *)(a2 + 1248) = v17 | 0x3FE000000;
    *(void *)(a2 + 264) = v35;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 1)
  {
    uint64_t v36 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 272) = v36;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 2)
  {
    uint64_t v37 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 280) = v37;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 3)
  {
    uint64_t v38 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x1000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 288) = v38;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 4)
  {
    uint64_t v39 = *((unsigned int *)a1 + 16);
    v33 |= 0x2000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 296) = v39;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 5)
  {
    uint64_t v40 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x4000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 304) = v40;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 6)
  {
    uint64_t v41 = a1[64];
    v33 |= 0x8000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 312) = v41;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 7)
  {
    uint64_t v42 = *((unsigned int *)a1 + 16);
    *(void *)(a2 + 1248) = v33 | 0x10000000000;
    *(void *)(a2 + 320) = v42;
    unsigned int v34 = *((_DWORD *)a1 + 18);
    if (v34 == 7)
    {
      v33 |= 0x30000000000uLL;
      *(void *)(a2 + 328) = a1[68];
    }
    else
    {
      v33 |= 0x10000000000uLL;
    }
  }
  uint64_t v43 = v34;
  uint64_t v44 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 336) = v43;
  *(void *)(a2 + 344) = v44;
  uint64_t v45 = *((unsigned int *)a1 + 21);
  *(void *)(a2 + 352) = a1[80];
  *(void *)(a2 + 360) = v45;
  uint64_t v46 = a1[89];
  *(void *)(a2 + 368) = a1[88];
  *(void *)(a2 + 376) = v46;
  uint64_t v47 = a1[90];
  uint64_t v48 = a1[91];
  uint64_t v49 = v33 | 0x3FC0000000000;
  *(void *)(a2 + 1248) = v33 | 0x3FC0000000000;
  *(void *)(a2 + 384) = v47;
  *(void *)(a2 + 392) = v48;
  unsigned int v50 = *((_DWORD *)a1 + 25);
  if (!v50)
  {
    uint64_t v51 = a1[92];
    uint64_t v49 = v33 | 0x7FC0000000000;
    *(void *)(a2 + 1248) = v33 | 0x7FC0000000000;
    *(void *)(a2 + 400) = v51;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 1)
  {
    uint64_t v52 = *((unsigned __int16 *)a1 + 46);
    v49 |= 0x8000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 408) = v52;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 2)
  {
    uint64_t v53 = *((unsigned __int16 *)a1 + 46);
    v49 |= 0x10000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 416) = v53;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 3)
  {
    uint64_t v54 = *((unsigned __int16 *)a1 + 46);
    v49 |= 0x20000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 424) = v54;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 4)
  {
    uint64_t v55 = *((unsigned int *)a1 + 23);
    v49 |= 0x40000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 432) = v55;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 5)
  {
    uint64_t v56 = *((unsigned __int16 *)a1 + 46);
    v49 |= 0x80000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 440) = v56;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 6)
  {
    uint64_t v57 = a1[92];
    v49 |= 0x100000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 448) = v57;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 7)
  {
    uint64_t v58 = *((unsigned int *)a1 + 23);
    *(void *)(a2 + 1248) = v49 | 0x200000000000000;
    *(void *)(a2 + 456) = v58;
    unsigned int v50 = *((_DWORD *)a1 + 25);
    if (v50 == 7)
    {
      v49 |= 0x600000000000000uLL;
      *(void *)(a2 + 464) = a1[96];
      unsigned int v50 = 7;
    }
    else
    {
      v49 |= 0x200000000000000uLL;
    }
  }
  uint64_t v59 = *((unsigned int *)a1 + 26);
  *(void *)(a2 + 472) = v50;
  *(void *)(a2 + 480) = v59;
  uint64_t v60 = *((unsigned int *)a1 + 28);
  *(void *)(a2 + 488) = a1[108];
  *(void *)(a2 + 496) = v60;
  uint64_t v61 = a1[116];
  *(void *)(a2 + 1248) = v49 | 0xF800000000000000;
  uint64_t v62 = a1[117];
  *(void *)(a2 + 504) = v61;
  *(void *)(a2 + 512) = v62;
  *(void *)(a2 + 520) = a1[118];
  *(void *)(a2 + 528) = a1[119];
  uint64_t v63 = *((void *)a1 + 15);
  v64.n128_u64[0] = v63;
  v64.n128_u64[1] = HIDWORD(v63);
  *(__n128 *)(a2 + 536) = v64;
  *(void *)(a2 + 552) = a1[128];
  *(void *)(a2 + 560) = a1[129];
  *(void *)(a2 + 568) = a1[130];
  *(void *)(a2 + 576) = a1[131];
  *(void *)(a2 + 584) = a1[132];
  *(void *)(a2 + 592) = a1[133];
  *(void *)(a2 + 600) = a1[134];
  *(void *)(a2 + 608) = a1[135];
  uint64_t v65 = *((void *)a1 + 17);
  uint64_t v66 = *((void *)a1 + 18);
  v64.n128_u64[0] = v65;
  v64.n128_u64[1] = HIDWORD(v65);
  __n128 v67 = v64;
  v64.n128_u64[0] = v66;
  v64.n128_u64[1] = HIDWORD(v66);
  *(__n128 *)(a2 + 616) = v67;
  *(__n128 *)(a2 + 632) = v64;
  v67.n128_u64[0] = *((void *)a1 + 19);
  uint64_t v68 = *((void *)a1 + 20);
  v64.n128_u64[0] = v67.n128_u32[0];
  v64.n128_u64[1] = v67.n128_u32[1];
  __n128 result = v64;
  v64.n128_u64[0] = v68;
  v64.n128_u64[1] = HIDWORD(v68);
  *(__n128 *)(a2 + 648) = result;
  *(__n128 *)(a2 + 664) = v64;
  *(void *)(a2 + 680) = a1[168];
  uint64_t v70 = *((unsigned int *)a1 + 43);
  *(void *)(a2 + 1256) = 0x7FFFFFLL;
  *(void *)(a2 + 688) = v70;
  return result;
}

__n128 sub_1CBE6D204(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = *(void *)(a1 + 20);
  *(void *)&long long v14 = v13;
  *((void *)&v14 + 1) = HIDWORD(v13);
  *(_OWORD *)(a2 + 96) = v14;
  uint64_t v15 = a1[28];
  uint64_t v16 = *((unsigned int *)a1 + 8);
  uint64_t v17 = v3 | 0xFE00;
  *(void *)(a2 + 1248) = v3 | 0xFE00;
  *(void *)(a2 + 112) = v15;
  *(void *)(a2 + 120) = v16;
  unsigned int v18 = *((_DWORD *)a1 + 11);
  if (!v18)
  {
    uint64_t v19 = a1[36];
    uint64_t v17 = v3 | 0x1FE00;
    *(void *)(a2 + 1248) = v3 | 0x1FE00;
    *(void *)(a2 + 128) = v19;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 1)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 136) = v20;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 2)
  {
    uint64_t v21 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 144) = v21;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 3)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 152) = v22;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 4)
  {
    uint64_t v23 = *((unsigned int *)a1 + 9);
    v17 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 160) = v23;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 5)
  {
    uint64_t v24 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x200000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 168) = v24;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 6)
  {
    uint64_t v25 = a1[36];
    v17 |= 0x400000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 176) = v25;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 7)
  {
    uint64_t v26 = *((unsigned int *)a1 + 9);
    *(void *)(a2 + 1248) = v17 | 0x800000;
    *(void *)(a2 + 184) = v26;
    unsigned int v18 = *((_DWORD *)a1 + 11);
    if (v18 == 7)
    {
      v17 |= 0x1800000uLL;
      *(void *)(a2 + 192) = a1[40];
    }
    else
    {
      v17 |= 0x800000uLL;
    }
  }
  uint64_t v27 = v18;
  uint64_t v28 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = v27;
  *(void *)(a2 + 208) = v28;
  uint64_t v29 = *((unsigned int *)a1 + 14);
  *(void *)(a2 + 216) = a1[52];
  *(void *)(a2 + 224) = v29;
  uint64_t v30 = a1[61];
  *(void *)(a2 + 232) = a1[60];
  *(void *)(a2 + 240) = v30;
  uint64_t v31 = a1[62];
  uint64_t v32 = a1[63];
  uint64_t v33 = v17 | 0x1FE000000;
  *(void *)(a2 + 1248) = v17 | 0x1FE000000;
  *(void *)(a2 + 248) = v31;
  *(void *)(a2 + 256) = v32;
  unsigned int v34 = *((_DWORD *)a1 + 18);
  if (!v34)
  {
    uint64_t v35 = a1[64];
    uint64_t v33 = v17 | 0x3FE000000;
    *(void *)(a2 + 1248) = v17 | 0x3FE000000;
    *(void *)(a2 + 264) = v35;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 1)
  {
    uint64_t v36 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 272) = v36;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 2)
  {
    uint64_t v37 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 280) = v37;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 3)
  {
    uint64_t v38 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x1000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 288) = v38;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 4)
  {
    uint64_t v39 = *((unsigned int *)a1 + 16);
    v33 |= 0x2000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 296) = v39;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 5)
  {
    uint64_t v40 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x4000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 304) = v40;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 6)
  {
    uint64_t v41 = a1[64];
    v33 |= 0x8000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 312) = v41;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 7)
  {
    uint64_t v42 = *((unsigned int *)a1 + 16);
    *(void *)(a2 + 1248) = v33 | 0x10000000000;
    *(void *)(a2 + 320) = v42;
    unsigned int v34 = *((_DWORD *)a1 + 18);
    if (v34 == 7)
    {
      v33 |= 0x30000000000uLL;
      *(void *)(a2 + 328) = a1[68];
      unsigned int v34 = 7;
    }
    else
    {
      v33 |= 0x10000000000uLL;
    }
  }
  uint64_t v43 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 336) = v34;
  *(void *)(a2 + 344) = v43;
  uint64_t v44 = *((unsigned int *)a1 + 21);
  *(void *)(a2 + 352) = a1[80];
  *(void *)(a2 + 360) = v44;
  *(void *)(a2 + 368) = a1[88];
  uint64_t v45 = *(void *)(a1 + 92);
  v46.n128_u64[0] = v45;
  v46.n128_u64[1] = HIDWORD(v45);
  *(__n128 *)(a2 + 376) = v46;
  uint64_t v47 = a1[101];
  *(void *)(a2 + 392) = a1[100];
  *(void *)(a2 + 400) = v47;
  uint64_t v48 = a1[103];
  *(void *)(a2 + 408) = a1[102];
  *(void *)(a2 + 416) = v48;
  uint64_t v49 = a1[105];
  *(void *)(a2 + 424) = a1[104];
  *(void *)(a2 + 432) = v49;
  uint64_t v50 = a1[107];
  *(void *)(a2 + 440) = a1[106];
  *(void *)(a2 + 448) = v50;
  uint64_t v51 = *(void *)(a1 + 108);
  v46.n128_u64[0] = v51;
  v46.n128_u64[1] = HIDWORD(v51);
  __n128 v52 = v46;
  uint64_t v53 = *(void *)(a1 + 116);
  v46.n128_u64[0] = v53;
  v46.n128_u64[1] = HIDWORD(v53);
  *(__n128 *)(a2 + 456) = v52;
  *(__n128 *)(a2 + 472) = v46;
  v52.n128_u64[0] = *(void *)(a1 + 124);
  v46.n128_u64[0] = v52.n128_u32[0];
  v46.n128_u64[1] = v52.n128_u32[1];
  __n128 result = v46;
  *(void *)(a2 + 1248) = v33 | 0xFFFFFC0000000000;
  uint64_t v55 = *(void *)(a1 + 132);
  v46.n128_u64[0] = v55;
  v46.n128_u64[1] = HIDWORD(v55);
  *(__n128 *)(a2 + 488) = result;
  *(__n128 *)(a2 + 504) = v46;
  *(void *)(a2 + 520) = *((unsigned int *)a1 + 35);
  *(void *)(a2 + 528) = a1[144];
  uint64_t v56 = *((unsigned int *)a1 + 37);
  *(void *)(a2 + 1256) = 15;
  *(void *)(a2 + 536) = v56;
  return result;
}

__n128 sub_1CBE6D634(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = *(void *)(a1 + 20);
  *(void *)&long long v14 = v13;
  *((void *)&v14 + 1) = HIDWORD(v13);
  *(_OWORD *)(a2 + 96) = v14;
  uint64_t v15 = a1[28];
  uint64_t v16 = *((unsigned int *)a1 + 8);
  uint64_t v17 = v3 | 0xFE00;
  *(void *)(a2 + 1248) = v3 | 0xFE00;
  *(void *)(a2 + 112) = v15;
  *(void *)(a2 + 120) = v16;
  unsigned int v18 = *((_DWORD *)a1 + 11);
  if (!v18)
  {
    uint64_t v19 = a1[36];
    uint64_t v17 = v3 | 0x1FE00;
    *(void *)(a2 + 1248) = v3 | 0x1FE00;
    *(void *)(a2 + 128) = v19;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 1)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 136) = v20;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 2)
  {
    uint64_t v21 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 144) = v21;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 3)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 152) = v22;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 4)
  {
    uint64_t v23 = *((unsigned int *)a1 + 9);
    v17 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 160) = v23;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 5)
  {
    uint64_t v24 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x200000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 168) = v24;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 6)
  {
    uint64_t v25 = a1[36];
    v17 |= 0x400000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 176) = v25;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 7)
  {
    uint64_t v26 = *((unsigned int *)a1 + 9);
    *(void *)(a2 + 1248) = v17 | 0x800000;
    *(void *)(a2 + 184) = v26;
    unsigned int v18 = *((_DWORD *)a1 + 11);
    if (v18 == 7)
    {
      v17 |= 0x1800000uLL;
      *(void *)(a2 + 192) = a1[40];
      unsigned int v18 = 7;
    }
    else
    {
      v17 |= 0x800000uLL;
    }
  }
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = v18;
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = *((unsigned int *)a1 + 14);
  *(void *)(a2 + 216) = a1[52];
  *(void *)(a2 + 224) = v28;
  uint64_t v29 = a1[61];
  *(void *)(a2 + 232) = a1[60];
  *(void *)(a2 + 240) = v29;
  uint64_t v30 = a1[63];
  *(void *)(a2 + 248) = a1[62];
  *(void *)(a2 + 256) = v30;
  uint64_t v31 = *((void *)a1 + 8);
  v32.n128_u64[0] = v31;
  v32.n128_u64[1] = HIDWORD(v31);
  *(__n128 *)(a2 + 264) = v32;
  uint64_t v33 = a1[73];
  *(void *)(a2 + 280) = a1[72];
  *(void *)(a2 + 288) = v33;
  uint64_t v34 = a1[75];
  *(void *)(a2 + 296) = a1[74];
  *(void *)(a2 + 304) = v34;
  uint64_t v35 = a1[77];
  *(void *)(a2 + 312) = a1[76];
  *(void *)(a2 + 320) = v35;
  uint64_t v36 = a1[79];
  *(void *)(a2 + 328) = a1[78];
  *(void *)(a2 + 336) = v36;
  uint64_t v37 = *((void *)a1 + 10);
  uint64_t v38 = *((void *)a1 + 11);
  v32.n128_u64[0] = v37;
  v32.n128_u64[1] = HIDWORD(v37);
  __n128 v39 = v32;
  v32.n128_u64[0] = v38;
  v32.n128_u64[1] = HIDWORD(v38);
  *(__n128 *)(a2 + 344) = v39;
  *(__n128 *)(a2 + 360) = v32;
  v39.n128_u64[0] = *((void *)a1 + 12);
  uint64_t v40 = *((void *)a1 + 13);
  v32.n128_u64[0] = v39.n128_u32[0];
  v32.n128_u64[1] = v39.n128_u32[1];
  __n128 result = v32;
  v32.n128_u64[0] = v40;
  v32.n128_u64[1] = HIDWORD(v40);
  *(__n128 *)(a2 + 376) = result;
  *(__n128 *)(a2 + 392) = v32;
  uint64_t v42 = a1[116];
  *(void *)(a2 + 408) = *((unsigned int *)a1 + 28);
  *(void *)(a2 + 416) = v42;
  uint64_t v43 = *((unsigned int *)a1 + 30);
  *(void *)(a2 + 1248) = v17 | 0x3FFFFFFE000000;
  *(void *)(a2 + 424) = v43;
  return result;
}

__n128 sub_1CBE6D92C(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = *(void *)(a1 + 20);
  *(void *)&long long v14 = v13;
  *((void *)&v14 + 1) = HIDWORD(v13);
  *(_OWORD *)(a2 + 96) = v14;
  uint64_t v15 = a1[28];
  uint64_t v16 = *((unsigned int *)a1 + 8);
  uint64_t v17 = v3 | 0xFE00;
  *(void *)(a2 + 1248) = v3 | 0xFE00;
  *(void *)(a2 + 112) = v15;
  *(void *)(a2 + 120) = v16;
  unsigned int v18 = *((_DWORD *)a1 + 11);
  if (!v18)
  {
    uint64_t v19 = a1[36];
    uint64_t v17 = v3 | 0x1FE00;
    *(void *)(a2 + 1248) = v3 | 0x1FE00;
    *(void *)(a2 + 128) = v19;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 1)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 136) = v20;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 2)
  {
    uint64_t v21 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 144) = v21;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 3)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 152) = v22;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 4)
  {
    uint64_t v23 = *((unsigned int *)a1 + 9);
    v17 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 160) = v23;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 5)
  {
    uint64_t v24 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x200000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 168) = v24;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 6)
  {
    uint64_t v25 = a1[36];
    v17 |= 0x400000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 176) = v25;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 7)
  {
    uint64_t v26 = *((unsigned int *)a1 + 9);
    *(void *)(a2 + 1248) = v17 | 0x800000;
    *(void *)(a2 + 184) = v26;
    unsigned int v18 = *((_DWORD *)a1 + 11);
    if (v18 == 7)
    {
      v17 |= 0x1800000uLL;
      *(void *)(a2 + 192) = a1[40];
    }
    else
    {
      v17 |= 0x800000uLL;
    }
  }
  uint64_t v27 = v18;
  uint64_t v28 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = v27;
  *(void *)(a2 + 208) = v28;
  uint64_t v29 = *((unsigned int *)a1 + 14);
  *(void *)(a2 + 216) = a1[52];
  *(void *)(a2 + 224) = v29;
  uint64_t v30 = a1[61];
  *(void *)(a2 + 232) = a1[60];
  *(void *)(a2 + 240) = v30;
  uint64_t v31 = a1[62];
  uint64_t v32 = a1[63];
  uint64_t v33 = v17 | 0x1FE000000;
  *(void *)(a2 + 1248) = v17 | 0x1FE000000;
  *(void *)(a2 + 248) = v31;
  *(void *)(a2 + 256) = v32;
  unsigned int v34 = *((_DWORD *)a1 + 18);
  if (!v34)
  {
    uint64_t v35 = a1[64];
    uint64_t v33 = v17 | 0x3FE000000;
    *(void *)(a2 + 1248) = v17 | 0x3FE000000;
    *(void *)(a2 + 264) = v35;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 1)
  {
    uint64_t v36 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 272) = v36;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 2)
  {
    uint64_t v37 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 280) = v37;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 3)
  {
    uint64_t v38 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x1000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 288) = v38;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 4)
  {
    uint64_t v39 = *((unsigned int *)a1 + 16);
    v33 |= 0x2000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 296) = v39;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 5)
  {
    uint64_t v40 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x4000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 304) = v40;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 6)
  {
    uint64_t v41 = a1[64];
    v33 |= 0x8000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 312) = v41;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 7)
  {
    uint64_t v42 = *((unsigned int *)a1 + 16);
    *(void *)(a2 + 1248) = v33 | 0x10000000000;
    *(void *)(a2 + 320) = v42;
    unsigned int v34 = *((_DWORD *)a1 + 18);
    if (v34 == 7)
    {
      v33 |= 0x30000000000uLL;
      *(void *)(a2 + 328) = a1[68];
      unsigned int v34 = 7;
    }
    else
    {
      v33 |= 0x10000000000uLL;
    }
  }
  uint64_t v43 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 336) = v34;
  *(void *)(a2 + 344) = v43;
  uint64_t v44 = *((unsigned int *)a1 + 21);
  *(void *)(a2 + 352) = a1[80];
  *(void *)(a2 + 360) = v44;
  uint64_t v45 = a1[89];
  *(void *)(a2 + 368) = a1[88];
  *(void *)(a2 + 376) = v45;
  uint64_t v46 = *(void *)(a1 + 92);
  v47.n128_u64[0] = v46;
  v47.n128_u64[1] = HIDWORD(v46);
  *(__n128 *)(a2 + 384) = v47;
  uint64_t v48 = a1[101];
  *(void *)(a2 + 400) = a1[100];
  *(void *)(a2 + 408) = v48;
  uint64_t v49 = a1[103];
  *(void *)(a2 + 416) = a1[102];
  *(void *)(a2 + 424) = v49;
  uint64_t v50 = a1[105];
  *(void *)(a2 + 432) = a1[104];
  *(void *)(a2 + 440) = v50;
  uint64_t v51 = a1[107];
  *(void *)(a2 + 448) = a1[106];
  *(void *)(a2 + 456) = v51;
  *(void *)(a2 + 464) = a1[108];
  uint64_t v52 = *((void *)a1 + 14);
  uint64_t v53 = *((void *)a1 + 15);
  v47.n128_u64[0] = v52;
  v47.n128_u64[1] = HIDWORD(v52);
  __n128 v54 = v47;
  v47.n128_u64[0] = v53;
  v47.n128_u64[1] = HIDWORD(v53);
  *(__n128 *)(a2 + 472) = v54;
  *(__n128 *)(a2 + 488) = v47;
  *(void *)(a2 + 1248) = v33 | 0xFFFFFC0000000000;
  v54.n128_u64[0] = *((void *)a1 + 16);
  uint64_t v55 = *((void *)a1 + 17);
  v47.n128_u64[0] = v54.n128_u32[0];
  v47.n128_u64[1] = v54.n128_u32[1];
  __n128 result = v47;
  v47.n128_u64[0] = v55;
  v47.n128_u64[1] = HIDWORD(v55);
  *(__n128 *)(a2 + 504) = result;
  *(__n128 *)(a2 + 520) = v47;
  uint64_t v57 = a1[144];
  *(void *)(a2 + 1256) = 15;
  *(void *)(a2 + 536) = v57;
  return result;
}

__n128 sub_1CBE6DD50(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = *(void *)(a1 + 20);
  *(void *)&long long v14 = v13;
  *((void *)&v14 + 1) = HIDWORD(v13);
  *(_OWORD *)(a2 + 96) = v14;
  uint64_t v15 = a1[28];
  uint64_t v16 = *((unsigned int *)a1 + 8);
  uint64_t v17 = v3 | 0xFE00;
  *(void *)(a2 + 1248) = v3 | 0xFE00;
  *(void *)(a2 + 112) = v15;
  *(void *)(a2 + 120) = v16;
  unsigned int v18 = *((_DWORD *)a1 + 11);
  if (!v18)
  {
    uint64_t v19 = a1[36];
    uint64_t v17 = v3 | 0x1FE00;
    *(void *)(a2 + 1248) = v3 | 0x1FE00;
    *(void *)(a2 + 128) = v19;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 1)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 136) = v20;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 2)
  {
    uint64_t v21 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 144) = v21;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 3)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 152) = v22;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 4)
  {
    uint64_t v23 = *((unsigned int *)a1 + 9);
    v17 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 160) = v23;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 5)
  {
    uint64_t v24 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x200000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 168) = v24;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 6)
  {
    uint64_t v25 = a1[36];
    v17 |= 0x400000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 176) = v25;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 7)
  {
    uint64_t v26 = *((unsigned int *)a1 + 9);
    *(void *)(a2 + 1248) = v17 | 0x800000;
    *(void *)(a2 + 184) = v26;
    unsigned int v18 = *((_DWORD *)a1 + 11);
    if (v18 == 7)
    {
      v17 |= 0x1800000uLL;
      *(void *)(a2 + 192) = a1[40];
      unsigned int v18 = 7;
    }
    else
    {
      v17 |= 0x800000uLL;
    }
  }
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = v18;
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = *((unsigned int *)a1 + 14);
  *(void *)(a2 + 216) = a1[52];
  *(void *)(a2 + 224) = v28;
  uint64_t v29 = a1[61];
  *(void *)(a2 + 232) = a1[60];
  *(void *)(a2 + 240) = v29;
  uint64_t v30 = a1[63];
  *(void *)(a2 + 248) = a1[62];
  *(void *)(a2 + 256) = v30;
  uint64_t v31 = *((void *)a1 + 8);
  v32.n128_u64[0] = v31;
  v32.n128_u64[1] = HIDWORD(v31);
  *(__n128 *)(a2 + 264) = v32;
  uint64_t v33 = a1[73];
  *(void *)(a2 + 280) = a1[72];
  *(void *)(a2 + 288) = v33;
  uint64_t v34 = a1[75];
  *(void *)(a2 + 296) = a1[74];
  *(void *)(a2 + 304) = v34;
  uint64_t v35 = a1[77];
  *(void *)(a2 + 312) = a1[76];
  *(void *)(a2 + 320) = v35;
  uint64_t v36 = a1[79];
  *(void *)(a2 + 328) = a1[78];
  *(void *)(a2 + 336) = v36;
  uint64_t v37 = *((void *)a1 + 10);
  uint64_t v38 = *((void *)a1 + 11);
  v32.n128_u64[0] = v37;
  v32.n128_u64[1] = HIDWORD(v37);
  __n128 v39 = v32;
  v32.n128_u64[0] = v38;
  v32.n128_u64[1] = HIDWORD(v38);
  *(__n128 *)(a2 + 344) = v39;
  *(__n128 *)(a2 + 360) = v32;
  v39.n128_u64[0] = *((void *)a1 + 12);
  uint64_t v40 = *((void *)a1 + 13);
  v32.n128_u64[0] = v39.n128_u32[0];
  v32.n128_u64[1] = v39.n128_u32[1];
  __n128 result = v32;
  v32.n128_u64[0] = v40;
  v32.n128_u64[1] = HIDWORD(v40);
  *(__n128 *)(a2 + 376) = result;
  *(__n128 *)(a2 + 392) = v32;
  uint64_t v42 = a1[112];
  uint64_t v43 = *((unsigned int *)a1 + 29);
  *(void *)(a2 + 1248) = v17 | 0x1FFFFFFE000000;
  *(void *)(a2 + 408) = v42;
  *(void *)(a2 + 416) = v43;
  return result;
}

__n128 sub_1CBE6E040(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = *(void *)(a1 + 20);
  *(void *)&long long v14 = v13;
  *((void *)&v14 + 1) = HIDWORD(v13);
  *(_OWORD *)(a2 + 96) = v14;
  uint64_t v15 = a1[28];
  uint64_t v16 = *((unsigned int *)a1 + 8);
  uint64_t v17 = v3 | 0xFE00;
  *(void *)(a2 + 1248) = v3 | 0xFE00;
  *(void *)(a2 + 112) = v15;
  *(void *)(a2 + 120) = v16;
  unsigned int v18 = *((_DWORD *)a1 + 11);
  if (!v18)
  {
    uint64_t v19 = a1[36];
    uint64_t v17 = v3 | 0x1FE00;
    *(void *)(a2 + 1248) = v3 | 0x1FE00;
    *(void *)(a2 + 128) = v19;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 1)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 136) = v20;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 2)
  {
    uint64_t v21 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 144) = v21;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 3)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 152) = v22;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 4)
  {
    uint64_t v23 = *((unsigned int *)a1 + 9);
    v17 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 160) = v23;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 5)
  {
    uint64_t v24 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x200000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 168) = v24;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 6)
  {
    uint64_t v25 = a1[36];
    v17 |= 0x400000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 176) = v25;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 7)
  {
    uint64_t v26 = *((unsigned int *)a1 + 9);
    *(void *)(a2 + 1248) = v17 | 0x800000;
    *(void *)(a2 + 184) = v26;
    unsigned int v18 = *((_DWORD *)a1 + 11);
    if (v18 == 7)
    {
      v17 |= 0x1800000uLL;
      *(void *)(a2 + 192) = a1[40];
      unsigned int v18 = 7;
    }
    else
    {
      v17 |= 0x800000uLL;
    }
  }
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = v18;
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = *((unsigned int *)a1 + 14);
  *(void *)(a2 + 216) = a1[52];
  *(void *)(a2 + 224) = v28;
  uint64_t v29 = a1[61];
  *(void *)(a2 + 232) = a1[60];
  *(void *)(a2 + 240) = v29;
  uint64_t v30 = a1[63];
  *(void *)(a2 + 248) = a1[62];
  *(void *)(a2 + 256) = v30;
  uint64_t v31 = *((void *)a1 + 8);
  v32.n128_u64[0] = v31;
  v32.n128_u64[1] = HIDWORD(v31);
  *(__n128 *)(a2 + 264) = v32;
  uint64_t v33 = a1[73];
  *(void *)(a2 + 280) = a1[72];
  *(void *)(a2 + 288) = v33;
  uint64_t v34 = a1[75];
  *(void *)(a2 + 296) = a1[74];
  *(void *)(a2 + 304) = v34;
  uint64_t v35 = a1[77];
  *(void *)(a2 + 312) = a1[76];
  *(void *)(a2 + 320) = v35;
  uint64_t v36 = a1[79];
  *(void *)(a2 + 328) = a1[78];
  *(void *)(a2 + 336) = v36;
  uint64_t v37 = *((void *)a1 + 10);
  uint64_t v38 = *((void *)a1 + 11);
  v32.n128_u64[0] = v37;
  v32.n128_u64[1] = HIDWORD(v37);
  __n128 v39 = v32;
  v32.n128_u64[0] = v38;
  v32.n128_u64[1] = HIDWORD(v38);
  *(__n128 *)(a2 + 344) = v39;
  *(__n128 *)(a2 + 360) = v32;
  v39.n128_u64[0] = *((void *)a1 + 12);
  uint64_t v40 = *((void *)a1 + 13);
  v32.n128_u64[0] = v39.n128_u32[0];
  v32.n128_u64[1] = v39.n128_u32[1];
  __n128 result = v32;
  v32.n128_u64[0] = v40;
  v32.n128_u64[1] = HIDWORD(v40);
  *(__n128 *)(a2 + 376) = result;
  *(__n128 *)(a2 + 392) = v32;
  uint64_t v42 = a1[112];
  uint64_t v43 = *((unsigned int *)a1 + 29);
  *(void *)(a2 + 1248) = v17 | 0x1FFFFFFE000000;
  *(void *)(a2 + 408) = v42;
  *(void *)(a2 + 416) = v43;
  return result;
}

__n128 sub_1CBE6E330(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = *(void *)(a1 + 20);
  *(void *)&long long v14 = v13;
  *((void *)&v14 + 1) = HIDWORD(v13);
  *(_OWORD *)(a2 + 96) = v14;
  uint64_t v15 = a1[28];
  uint64_t v16 = *((unsigned int *)a1 + 8);
  uint64_t v17 = v3 | 0xFE00;
  *(void *)(a2 + 1248) = v3 | 0xFE00;
  *(void *)(a2 + 112) = v15;
  *(void *)(a2 + 120) = v16;
  unsigned int v18 = *((_DWORD *)a1 + 11);
  if (!v18)
  {
    uint64_t v19 = a1[36];
    uint64_t v17 = v3 | 0x1FE00;
    *(void *)(a2 + 1248) = v3 | 0x1FE00;
    *(void *)(a2 + 128) = v19;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 1)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 136) = v20;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 2)
  {
    uint64_t v21 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 144) = v21;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 3)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 152) = v22;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 4)
  {
    uint64_t v23 = *((unsigned int *)a1 + 9);
    v17 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 160) = v23;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 5)
  {
    uint64_t v24 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x200000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 168) = v24;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 6)
  {
    uint64_t v25 = a1[36];
    v17 |= 0x400000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 176) = v25;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 7)
  {
    uint64_t v26 = *((unsigned int *)a1 + 9);
    *(void *)(a2 + 1248) = v17 | 0x800000;
    *(void *)(a2 + 184) = v26;
    unsigned int v18 = *((_DWORD *)a1 + 11);
    if (v18 == 7)
    {
      v17 |= 0x1800000uLL;
      *(void *)(a2 + 192) = a1[40];
      unsigned int v18 = 7;
    }
    else
    {
      v17 |= 0x800000uLL;
    }
  }
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = v18;
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = *((unsigned int *)a1 + 14);
  *(void *)(a2 + 216) = a1[52];
  *(void *)(a2 + 224) = v28;
  uint64_t v29 = a1[61];
  *(void *)(a2 + 232) = a1[60];
  *(void *)(a2 + 240) = v29;
  uint64_t v30 = a1[63];
  *(void *)(a2 + 248) = a1[62];
  *(void *)(a2 + 256) = v30;
  uint64_t v31 = *((void *)a1 + 8);
  v32.n128_u64[0] = v31;
  v32.n128_u64[1] = HIDWORD(v31);
  *(__n128 *)(a2 + 264) = v32;
  uint64_t v33 = a1[73];
  *(void *)(a2 + 280) = a1[72];
  *(void *)(a2 + 288) = v33;
  uint64_t v34 = a1[75];
  *(void *)(a2 + 296) = a1[74];
  *(void *)(a2 + 304) = v34;
  uint64_t v35 = a1[77];
  *(void *)(a2 + 312) = a1[76];
  *(void *)(a2 + 320) = v35;
  uint64_t v36 = a1[79];
  *(void *)(a2 + 328) = a1[78];
  *(void *)(a2 + 336) = v36;
  uint64_t v37 = *((void *)a1 + 10);
  uint64_t v38 = *((void *)a1 + 11);
  v32.n128_u64[0] = v37;
  v32.n128_u64[1] = HIDWORD(v37);
  __n128 v39 = v32;
  v32.n128_u64[0] = v38;
  v32.n128_u64[1] = HIDWORD(v38);
  *(__n128 *)(a2 + 344) = v39;
  *(__n128 *)(a2 + 360) = v32;
  v39.n128_u64[0] = *((void *)a1 + 12);
  uint64_t v40 = *((void *)a1 + 13);
  v32.n128_u64[0] = v39.n128_u32[0];
  v32.n128_u64[1] = v39.n128_u32[1];
  __n128 result = v32;
  v32.n128_u64[0] = v40;
  v32.n128_u64[1] = HIDWORD(v40);
  *(__n128 *)(a2 + 376) = result;
  *(__n128 *)(a2 + 392) = v32;
  uint64_t v42 = a1[112];
  uint64_t v43 = *((unsigned int *)a1 + 29);
  *(void *)(a2 + 1248) = v17 | 0x1FFFFFFE000000;
  *(void *)(a2 + 408) = v42;
  *(void *)(a2 + 416) = v43;
  return result;
}

__n128 sub_1CBE6E620(unsigned __int16 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(void *)(a2 + 1256) = 0;
  *(void *)a2 = *a1;
  uint64_t v2 = *(void *)(a1 + 2);
  v3.n128_u64[0] = v2;
  v3.n128_u64[1] = HIDWORD(v2);
  *(__n128 *)(a2 + 8) = v3;
  uint64_t v4 = *((unsigned __int8 *)a1 + 13);
  *(void *)(a2 + 24) = *((unsigned __int8 *)a1 + 12);
  *(void *)(a2 + 32) = v4;
  uint64_t v5 = *((unsigned __int8 *)a1 + 20);
  *(void *)(a2 + 40) = *((unsigned int *)a1 + 4);
  *(void *)(a2 + 48) = v5;
  uint64_t v6 = a1[12];
  *(void *)(a2 + 56) = *((unsigned __int8 *)a1 + 21);
  *(void *)(a2 + 64) = v6;
  uint64_t v7 = *(void *)(a1 + 14);
  v3.n128_u64[0] = v7;
  v3.n128_u64[1] = HIDWORD(v7);
  *(__n128 *)(a2 + 72) = v3;
  uint64_t v8 = *((unsigned __int8 *)a1 + 37);
  *(void *)(a2 + 88) = *((unsigned __int8 *)a1 + 36);
  *(void *)(a2 + 96) = v8;
  uint64_t v9 = *((unsigned __int8 *)a1 + 44);
  *(void *)(a2 + 104) = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 112) = v9;
  uint64_t v10 = *((void *)a1 + 6);
  v3.n128_u64[0] = v10;
  v3.n128_u64[1] = HIDWORD(v10);
  *(__n128 *)(a2 + 120) = v3;
  *(void *)(a2 + 136) = a1[28];
  uint64_t v11 = *(void *)(a1 + 30);
  v3.n128_u64[0] = v11;
  v3.n128_u64[1] = HIDWORD(v11);
  *(__n128 *)(a2 + 144) = v3;
  uint64_t v12 = *((unsigned __int8 *)a1 + 69);
  *(void *)(a2 + 160) = *((unsigned __int8 *)a1 + 68);
  *(void *)(a2 + 168) = v12;
  uint64_t v13 = *((unsigned __int8 *)a1 + 76);
  *(void *)(a2 + 176) = *((unsigned int *)a1 + 18);
  *(void *)(a2 + 184) = v13;
  uint64_t v14 = *((void *)a1 + 10);
  v3.n128_u64[0] = v14;
  v3.n128_u64[1] = HIDWORD(v14);
  *(__n128 *)(a2 + 192) = v3;
  uint64_t v15 = *((void *)a1 + 11);
  v3.n128_u64[0] = v15;
  v3.n128_u64[1] = HIDWORD(v15);
  *(__n128 *)(a2 + 208) = v3;
  uint64_t v16 = *((unsigned __int8 *)a1 + 100);
  *(void *)(a2 + 224) = *((unsigned int *)a1 + 24);
  *(void *)(a2 + 232) = v16;
  uint64_t v17 = *((unsigned __int8 *)a1 + 102);
  *(void *)(a2 + 240) = *((unsigned __int8 *)a1 + 101);
  *(void *)(a2 + 248) = v17;
  uint64_t v18 = *((unsigned __int8 *)a1 + 104);
  *(void *)(a2 + 256) = *((unsigned __int8 *)a1 + 103);
  *(void *)(a2 + 264) = v18;
  uint64_t v19 = *((unsigned __int8 *)a1 + 106);
  *(void *)(a2 + 272) = *((unsigned __int8 *)a1 + 105);
  *(void *)(a2 + 280) = v19;
  *(void *)(a2 + 288) = *((unsigned __int8 *)a1 + 107);
  uint64_t v20 = *(void *)(a1 + 54);
  v3.n128_u64[0] = v20;
  v3.n128_u64[1] = HIDWORD(v20);
  __n128 v21 = v3;
  uint64_t v22 = *(void *)(a1 + 58);
  v3.n128_u64[0] = v22;
  v3.n128_u64[1] = HIDWORD(v22);
  *(__n128 *)(a2 + 296) = v21;
  *(__n128 *)(a2 + 312) = v3;
  v21.n128_u64[0] = *(void *)(a1 + 62);
  v3.n128_u64[0] = v21.n128_u32[0];
  v3.n128_u64[1] = v21.n128_u32[1];
  __n128 result = v3;
  uint64_t v24 = *(void *)(a1 + 66);
  v3.n128_u64[0] = v24;
  v3.n128_u64[1] = HIDWORD(v24);
  *(__n128 *)(a2 + 328) = result;
  *(__n128 *)(a2 + 344) = v3;
  uint64_t v25 = *((unsigned __int8 *)a1 + 140);
  *(void *)(a2 + 1248) = 0x3FFFFFFFFFFFLL;
  *(void *)(a2 + 360) = v25;
  return result;
}

__n128 sub_1CBE6E74C(unsigned __int16 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(void *)(a2 + 1256) = 0;
  *(void *)a2 = *a1;
  uint64_t v2 = *(void *)(a1 + 2);
  v3.n128_u64[0] = v2;
  v3.n128_u64[1] = HIDWORD(v2);
  *(__n128 *)(a2 + 8) = v3;
  uint64_t v4 = *((unsigned __int8 *)a1 + 13);
  *(void *)(a2 + 24) = *((unsigned __int8 *)a1 + 12);
  *(void *)(a2 + 32) = v4;
  uint64_t v5 = *((unsigned __int8 *)a1 + 20);
  *(void *)(a2 + 40) = *((unsigned int *)a1 + 4);
  *(void *)(a2 + 48) = v5;
  uint64_t v6 = a1[12];
  *(void *)(a2 + 56) = *((unsigned __int8 *)a1 + 21);
  *(void *)(a2 + 64) = v6;
  uint64_t v7 = *(void *)(a1 + 14);
  v3.n128_u64[0] = v7;
  v3.n128_u64[1] = HIDWORD(v7);
  *(__n128 *)(a2 + 72) = v3;
  uint64_t v8 = *((unsigned __int8 *)a1 + 37);
  *(void *)(a2 + 88) = *((unsigned __int8 *)a1 + 36);
  *(void *)(a2 + 96) = v8;
  uint64_t v9 = *((unsigned __int8 *)a1 + 44);
  *(void *)(a2 + 104) = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 112) = v9;
  uint64_t v10 = *((void *)a1 + 6);
  v3.n128_u64[0] = v10;
  v3.n128_u64[1] = HIDWORD(v10);
  *(__n128 *)(a2 + 120) = v3;
  *(void *)(a2 + 136) = a1[28];
  uint64_t v11 = *(void *)(a1 + 30);
  v3.n128_u64[0] = v11;
  v3.n128_u64[1] = HIDWORD(v11);
  *(__n128 *)(a2 + 144) = v3;
  uint64_t v12 = *((unsigned __int8 *)a1 + 69);
  *(void *)(a2 + 160) = *((unsigned __int8 *)a1 + 68);
  *(void *)(a2 + 168) = v12;
  uint64_t v13 = *((unsigned __int8 *)a1 + 76);
  *(void *)(a2 + 176) = *((unsigned int *)a1 + 18);
  *(void *)(a2 + 184) = v13;
  uint64_t v14 = *((void *)a1 + 10);
  v3.n128_u64[0] = v14;
  v3.n128_u64[1] = HIDWORD(v14);
  *(__n128 *)(a2 + 192) = v3;
  uint64_t v15 = *((void *)a1 + 11);
  v3.n128_u64[0] = v15;
  v3.n128_u64[1] = HIDWORD(v15);
  *(__n128 *)(a2 + 208) = v3;
  uint64_t v16 = *((unsigned __int8 *)a1 + 100);
  *(void *)(a2 + 224) = *((unsigned int *)a1 + 24);
  *(void *)(a2 + 232) = v16;
  uint64_t v17 = *((unsigned __int8 *)a1 + 102);
  *(void *)(a2 + 240) = *((unsigned __int8 *)a1 + 101);
  *(void *)(a2 + 248) = v17;
  uint64_t v18 = *((unsigned __int8 *)a1 + 104);
  *(void *)(a2 + 256) = *((unsigned __int8 *)a1 + 103);
  *(void *)(a2 + 264) = v18;
  uint64_t v19 = *((unsigned __int8 *)a1 + 106);
  *(void *)(a2 + 272) = *((unsigned __int8 *)a1 + 105);
  *(void *)(a2 + 280) = v19;
  *(void *)(a2 + 288) = *((unsigned __int8 *)a1 + 107);
  uint64_t v20 = *(void *)(a1 + 54);
  v3.n128_u64[0] = v20;
  v3.n128_u64[1] = HIDWORD(v20);
  __n128 v21 = v3;
  uint64_t v22 = *(void *)(a1 + 58);
  v3.n128_u64[0] = v22;
  v3.n128_u64[1] = HIDWORD(v22);
  *(__n128 *)(a2 + 296) = v21;
  *(__n128 *)(a2 + 312) = v3;
  v21.n128_u64[0] = *(void *)(a1 + 62);
  v3.n128_u64[0] = v21.n128_u32[0];
  v3.n128_u64[1] = v21.n128_u32[1];
  __n128 result = v3;
  uint64_t v24 = *(void *)(a1 + 66);
  v3.n128_u64[0] = v24;
  v3.n128_u64[1] = HIDWORD(v24);
  *(__n128 *)(a2 + 328) = result;
  *(__n128 *)(a2 + 344) = v3;
  uint64_t v25 = *((unsigned __int8 *)a1 + 140);
  *(void *)(a2 + 1248) = 0x3FFFFFFFFFFFLL;
  *(void *)(a2 + 360) = v25;
  return result;
}

__n128 sub_1CBE6E878(unsigned __int16 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(void *)(a2 + 1256) = 0;
  *(void *)a2 = *a1;
  uint64_t v2 = *(void *)(a1 + 2);
  v3.n128_u64[0] = v2;
  v3.n128_u64[1] = HIDWORD(v2);
  *(__n128 *)(a2 + 8) = v3;
  uint64_t v4 = *((unsigned __int8 *)a1 + 13);
  *(void *)(a2 + 24) = *((unsigned __int8 *)a1 + 12);
  *(void *)(a2 + 32) = v4;
  uint64_t v5 = *((unsigned __int8 *)a1 + 20);
  *(void *)(a2 + 40) = *((unsigned int *)a1 + 4);
  *(void *)(a2 + 48) = v5;
  uint64_t v6 = a1[12];
  *(void *)(a2 + 56) = *((unsigned __int8 *)a1 + 21);
  *(void *)(a2 + 64) = v6;
  uint64_t v7 = *(void *)(a1 + 14);
  v3.n128_u64[0] = v7;
  v3.n128_u64[1] = HIDWORD(v7);
  *(__n128 *)(a2 + 72) = v3;
  uint64_t v8 = *((unsigned __int8 *)a1 + 37);
  *(void *)(a2 + 88) = *((unsigned __int8 *)a1 + 36);
  *(void *)(a2 + 96) = v8;
  uint64_t v9 = *((unsigned __int8 *)a1 + 44);
  *(void *)(a2 + 104) = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 112) = v9;
  uint64_t v10 = *((void *)a1 + 6);
  v3.n128_u64[0] = v10;
  v3.n128_u64[1] = HIDWORD(v10);
  *(__n128 *)(a2 + 120) = v3;
  *(void *)(a2 + 136) = a1[28];
  uint64_t v11 = *(void *)(a1 + 30);
  v3.n128_u64[0] = v11;
  v3.n128_u64[1] = HIDWORD(v11);
  *(__n128 *)(a2 + 144) = v3;
  uint64_t v12 = *((unsigned __int8 *)a1 + 69);
  *(void *)(a2 + 160) = *((unsigned __int8 *)a1 + 68);
  *(void *)(a2 + 168) = v12;
  uint64_t v13 = *((unsigned __int8 *)a1 + 76);
  *(void *)(a2 + 176) = *((unsigned int *)a1 + 18);
  *(void *)(a2 + 184) = v13;
  uint64_t v14 = *((void *)a1 + 10);
  v3.n128_u64[0] = v14;
  v3.n128_u64[1] = HIDWORD(v14);
  *(__n128 *)(a2 + 192) = v3;
  uint64_t v15 = *((void *)a1 + 11);
  v3.n128_u64[0] = v15;
  v3.n128_u64[1] = HIDWORD(v15);
  *(__n128 *)(a2 + 208) = v3;
  uint64_t v16 = *((unsigned __int8 *)a1 + 100);
  *(void *)(a2 + 224) = *((unsigned int *)a1 + 24);
  *(void *)(a2 + 232) = v16;
  uint64_t v17 = *((unsigned __int8 *)a1 + 102);
  *(void *)(a2 + 240) = *((unsigned __int8 *)a1 + 101);
  *(void *)(a2 + 248) = v17;
  uint64_t v18 = *((unsigned __int8 *)a1 + 104);
  *(void *)(a2 + 256) = *((unsigned __int8 *)a1 + 103);
  *(void *)(a2 + 264) = v18;
  uint64_t v19 = *((unsigned __int8 *)a1 + 106);
  *(void *)(a2 + 272) = *((unsigned __int8 *)a1 + 105);
  *(void *)(a2 + 280) = v19;
  *(void *)(a2 + 288) = *((unsigned __int8 *)a1 + 107);
  uint64_t v20 = *(void *)(a1 + 54);
  v3.n128_u64[0] = v20;
  v3.n128_u64[1] = HIDWORD(v20);
  __n128 v21 = v3;
  uint64_t v22 = *(void *)(a1 + 58);
  v3.n128_u64[0] = v22;
  v3.n128_u64[1] = HIDWORD(v22);
  *(__n128 *)(a2 + 296) = v21;
  *(__n128 *)(a2 + 312) = v3;
  v21.n128_u64[0] = *(void *)(a1 + 62);
  v3.n128_u64[0] = v21.n128_u32[0];
  v3.n128_u64[1] = v21.n128_u32[1];
  __n128 result = v3;
  uint64_t v24 = *(void *)(a1 + 66);
  v3.n128_u64[0] = v24;
  v3.n128_u64[1] = HIDWORD(v24);
  *(__n128 *)(a2 + 328) = result;
  *(__n128 *)(a2 + 344) = v3;
  uint64_t v25 = *((unsigned __int8 *)a1 + 140);
  *(void *)(a2 + 1248) = 0x3FFFFFFFFFFFLL;
  *(void *)(a2 + 360) = v25;
  return result;
}

__n128 sub_1CBE6E9A4(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  uint64_t v13 = *((unsigned int *)a1 + 5);
  *(void *)(a2 + 88) = a1[16];
  *(void *)(a2 + 96) = v13;
  uint64_t v14 = a1[25];
  *(void *)(a2 + 104) = a1[24];
  *(void *)(a2 + 112) = v14;
  uint64_t v15 = a1[26];
  uint64_t v16 = a1[27];
  uint64_t v17 = v3 | 0x1FE00;
  *(void *)(a2 + 1248) = v3 | 0x1FE00;
  *(void *)(a2 + 120) = v15;
  *(void *)(a2 + 128) = v16;
  unsigned int v18 = *((_DWORD *)a1 + 9);
  if (!v18)
  {
    uint64_t v19 = a1[28];
    uint64_t v17 = v3 | 0x3FE00;
    *(void *)(a2 + 1248) = v3 | 0x3FE00;
    *(void *)(a2 + 136) = v19;
    unsigned int v18 = *((_DWORD *)a1 + 9);
  }
  if (v18 == 1)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v17 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 144) = v20;
    unsigned int v18 = *((_DWORD *)a1 + 9);
  }
  if (v18 == 2)
  {
    uint64_t v21 = *((unsigned __int16 *)a1 + 14);
    v17 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 152) = v21;
    unsigned int v18 = *((_DWORD *)a1 + 9);
  }
  if (v18 == 3)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v17 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 160) = v22;
    unsigned int v18 = *((_DWORD *)a1 + 9);
  }
  if (v18 == 4)
  {
    uint64_t v23 = *((unsigned int *)a1 + 7);
    v17 |= 0x200000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 168) = v23;
    unsigned int v18 = *((_DWORD *)a1 + 9);
  }
  if (v18 == 5)
  {
    uint64_t v24 = *((unsigned __int16 *)a1 + 14);
    v17 |= 0x400000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 176) = v24;
    unsigned int v18 = *((_DWORD *)a1 + 9);
  }
  if (v18 == 6)
  {
    uint64_t v25 = a1[28];
    v17 |= 0x800000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 184) = v25;
    unsigned int v18 = *((_DWORD *)a1 + 9);
  }
  if (v18 == 7)
  {
    uint64_t v26 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v17 | 0x1000000;
    *(void *)(a2 + 192) = v26;
    unsigned int v18 = *((_DWORD *)a1 + 9);
    if (v18 == 7)
    {
      v17 |= 0x3000000uLL;
      *(void *)(a2 + 200) = a1[32];
    }
    else
    {
      v17 |= 0x1000000uLL;
    }
  }
  uint64_t v27 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 208) = v18;
  *(void *)(a2 + 216) = v27;
  uint64_t v28 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 224) = a1[44];
  *(void *)(a2 + 232) = v28;
  uint64_t v29 = a1[53];
  *(void *)(a2 + 240) = a1[52];
  *(void *)(a2 + 248) = v29;
  uint64_t v30 = a1[55];
  *(void *)(a2 + 256) = a1[54];
  *(void *)(a2 + 264) = v30;
  uint64_t v31 = a1[57];
  *(void *)(a2 + 272) = a1[56];
  *(void *)(a2 + 280) = v31;
  uint64_t v32 = *(void *)(a1 + 60);
  v33.n128_u64[0] = v32;
  v33.n128_u64[1] = HIDWORD(v32);
  *(__n128 *)(a2 + 288) = v33;
  uint64_t v34 = a1[69];
  *(void *)(a2 + 304) = a1[68];
  *(void *)(a2 + 312) = v34;
  uint64_t v35 = a1[71];
  *(void *)(a2 + 320) = a1[70];
  *(void *)(a2 + 328) = v35;
  uint64_t v36 = a1[73];
  *(void *)(a2 + 336) = a1[72];
  *(void *)(a2 + 344) = v36;
  uint64_t v37 = a1[75];
  *(void *)(a2 + 352) = a1[74];
  *(void *)(a2 + 360) = v37;
  uint64_t v38 = *(void *)(a1 + 76);
  v33.n128_u64[0] = v38;
  v33.n128_u64[1] = HIDWORD(v38);
  __n128 v39 = v33;
  uint64_t v40 = *(void *)(a1 + 84);
  v33.n128_u64[0] = v40;
  v33.n128_u64[1] = HIDWORD(v40);
  *(__n128 *)(a2 + 368) = v39;
  *(__n128 *)(a2 + 384) = v33;
  v39.n128_u64[0] = *(void *)(a1 + 92);
  v33.n128_u64[0] = v39.n128_u32[0];
  v33.n128_u64[1] = v39.n128_u32[1];
  __n128 result = v33;
  uint64_t v42 = *(void *)(a1 + 100);
  v33.n128_u64[0] = v42;
  v33.n128_u64[1] = HIDWORD(v42);
  *(__n128 *)(a2 + 400) = result;
  *(__n128 *)(a2 + 416) = v33;
  uint64_t v43 = a1[112];
  *(void *)(a2 + 432) = *((unsigned int *)a1 + 27);
  *(void *)(a2 + 440) = v43;
  uint64_t v44 = *((unsigned int *)a1 + 29);
  *(void *)(a2 + 1248) = v17 | 0x1FFFFFFFC000000;
  *(void *)(a2 + 448) = v44;
  return result;
}

__n128 sub_1CBE6ECAC(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v16;
  *(void *)(a2 + 192) = v25;
  uint64_t v26 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v26;
  uint64_t v27 = a1[53];
  *(void *)(a2 + 216) = a1[52];
  *(void *)(a2 + 224) = v27;
  uint64_t v28 = a1[55];
  *(void *)(a2 + 232) = a1[54];
  *(void *)(a2 + 240) = v28;
  uint64_t v29 = *((void *)a1 + 7);
  v30.n128_u64[0] = v29;
  v30.n128_u64[1] = HIDWORD(v29);
  *(__n128 *)(a2 + 248) = v30;
  uint64_t v31 = a1[65];
  *(void *)(a2 + 264) = a1[64];
  *(void *)(a2 + 272) = v31;
  uint64_t v32 = a1[67];
  *(void *)(a2 + 280) = a1[66];
  *(void *)(a2 + 288) = v32;
  uint64_t v33 = a1[69];
  *(void *)(a2 + 296) = a1[68];
  *(void *)(a2 + 304) = v33;
  uint64_t v34 = a1[71];
  *(void *)(a2 + 312) = a1[70];
  *(void *)(a2 + 320) = v34;
  uint64_t v35 = *((void *)a1 + 9);
  v30.n128_u64[0] = v35;
  v30.n128_u64[1] = HIDWORD(v35);
  *(__n128 *)(a2 + 328) = v30;
  *(void *)(a2 + 344) = a1[80];
  uint64_t v36 = *(void *)(a1 + 84);
  v30.n128_u64[0] = v36;
  v30.n128_u64[1] = HIDWORD(v36);
  __n128 v37 = v30;
  uint64_t v38 = *(void *)(a1 + 92);
  v30.n128_u64[0] = v38;
  v30.n128_u64[1] = HIDWORD(v38);
  *(__n128 *)(a2 + 352) = v37;
  *(__n128 *)(a2 + 368) = v30;
  v37.n128_u64[0] = *(void *)(a1 + 100);
  v30.n128_u64[0] = v37.n128_u32[0];
  v30.n128_u64[1] = v37.n128_u32[1];
  __n128 result = v30;
  uint64_t v40 = *(void *)(a1 + 108);
  v30.n128_u64[0] = v40;
  v30.n128_u64[1] = HIDWORD(v40);
  *(__n128 *)(a2 + 384) = result;
  *(__n128 *)(a2 + 400) = v30;
  uint64_t v41 = a1[116];
  *(void *)(a2 + 1248) = v13 | 0x1FFFFFFF800000;
  *(void *)(a2 + 416) = v41;
  return result;
}

__n128 sub_1CBE6EFA4(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = v16;
  uint64_t v26 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v25;
  *(void *)(a2 + 192) = v26;
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = a1[53];
  *(void *)(a2 + 216) = a1[52];
  *(void *)(a2 + 224) = v28;
  uint64_t v29 = a1[54];
  uint64_t v30 = a1[55];
  uint64_t v31 = v13 | 0x7F800000;
  *(void *)(a2 + 1248) = v13 | 0x7F800000;
  *(void *)(a2 + 232) = v29;
  *(void *)(a2 + 240) = v30;
  unsigned int v32 = *((_DWORD *)a1 + 16);
  if (!v32)
  {
    uint64_t v33 = a1[56];
    uint64_t v31 = v13 | 0xFF800000;
    *(void *)(a2 + 1248) = v13 | 0xFF800000;
    *(void *)(a2 + 248) = v33;
    unsigned int v32 = *((_DWORD *)a1 + 16);
  }
  if (v32 == 1)
  {
    uint64_t v34 = *((unsigned __int16 *)a1 + 28);
    v31 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v31;
    *(void *)(a2 + 256) = v34;
    unsigned int v32 = *((_DWORD *)a1 + 16);
  }
  if (v32 == 2)
  {
    uint64_t v35 = *((unsigned __int16 *)a1 + 28);
    v31 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v31;
    *(void *)(a2 + 264) = v35;
    unsigned int v32 = *((_DWORD *)a1 + 16);
  }
  if (v32 == 3)
  {
    uint64_t v36 = *((unsigned __int16 *)a1 + 28);
    v31 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v31;
    *(void *)(a2 + 272) = v36;
    unsigned int v32 = *((_DWORD *)a1 + 16);
  }
  if (v32 == 4)
  {
    uint64_t v37 = *((unsigned int *)a1 + 14);
    v31 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v31;
    *(void *)(a2 + 280) = v37;
    unsigned int v32 = *((_DWORD *)a1 + 16);
  }
  if (v32 == 5)
  {
    uint64_t v38 = *((unsigned __int16 *)a1 + 28);
    v31 |= 0x1000000000uLL;
    *(void *)(a2 + 1248) = v31;
    *(void *)(a2 + 288) = v38;
    unsigned int v32 = *((_DWORD *)a1 + 16);
  }
  if (v32 == 6)
  {
    uint64_t v39 = a1[56];
    v31 |= 0x2000000000uLL;
    *(void *)(a2 + 1248) = v31;
    *(void *)(a2 + 296) = v39;
    unsigned int v32 = *((_DWORD *)a1 + 16);
  }
  if (v32 == 7)
  {
    uint64_t v40 = *((unsigned int *)a1 + 14);
    *(void *)(a2 + 1248) = v31 | 0x4000000000;
    *(void *)(a2 + 304) = v40;
    unsigned int v32 = *((_DWORD *)a1 + 16);
    if (v32 == 7)
    {
      v31 |= 0xC000000000uLL;
      *(void *)(a2 + 312) = a1[60];
    }
    else
    {
      v31 |= 0x4000000000uLL;
    }
  }
  uint64_t v41 = *((unsigned int *)a1 + 17);
  *(void *)(a2 + 320) = v32;
  *(void *)(a2 + 328) = v41;
  uint64_t v42 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 336) = a1[72];
  *(void *)(a2 + 344) = v42;
  uint64_t v43 = a1[81];
  *(void *)(a2 + 352) = a1[80];
  *(void *)(a2 + 360) = v43;
  uint64_t v44 = a1[83];
  *(void *)(a2 + 368) = a1[82];
  *(void *)(a2 + 376) = v44;
  uint64_t v45 = *(void *)(a1 + 84);
  v46.n128_u64[0] = v45;
  v46.n128_u64[1] = HIDWORD(v45);
  *(__n128 *)(a2 + 384) = v46;
  uint64_t v47 = a1[93];
  *(void *)(a2 + 400) = a1[92];
  *(void *)(a2 + 408) = v47;
  uint64_t v48 = a1[95];
  *(void *)(a2 + 416) = a1[94];
  *(void *)(a2 + 424) = v48;
  uint64_t v49 = a1[97];
  *(void *)(a2 + 432) = a1[96];
  *(void *)(a2 + 440) = v49;
  uint64_t v50 = a1[99];
  *(void *)(a2 + 448) = a1[98];
  *(void *)(a2 + 456) = v50;
  uint64_t v51 = a1[104];
  *(void *)(a2 + 464) = *((unsigned int *)a1 + 25);
  *(void *)(a2 + 472) = v51;
  uint64_t v52 = *(void *)(a1 + 108);
  v46.n128_u64[0] = v52;
  v46.n128_u64[1] = HIDWORD(v52);
  __n128 v53 = v46;
  *(void *)(a2 + 1248) = v31 | 0xFFFFFF0000000000;
  uint64_t v54 = *(void *)(a1 + 116);
  v46.n128_u64[0] = v54;
  v46.n128_u64[1] = HIDWORD(v54);
  *(__n128 *)(a2 + 480) = v53;
  *(__n128 *)(a2 + 496) = v46;
  v53.n128_u64[0] = *(void *)(a1 + 124);
  v46.n128_u64[0] = v53.n128_u32[0];
  v46.n128_u64[1] = v53.n128_u32[1];
  __n128 result = v46;
  uint64_t v56 = *(void *)(a1 + 132);
  v46.n128_u64[0] = v56;
  v46.n128_u64[1] = HIDWORD(v56);
  *(__n128 *)(a2 + 512) = result;
  *(__n128 *)(a2 + 528) = v46;
  uint64_t v57 = a1[140];
  *(void *)(a2 + 1256) = 31;
  *(void *)(a2 + 544) = v57;
  return result;
}

__n128 sub_1CBE6F3CC(unsigned int *a1, __n128 *a2)
{
  a2[79].n128_u64[0] = 0;
  a2[78].n128_u64[1] = 0;
  unint64_t v2 = *a1;
  uint64_t v3 = 1;
  a2[78].n128_u64[0] = 1;
  a2->n128_u64[0] = v2;
  int v4 = *a1;
  unsigned int v5 = a1[3];
  if (!(*a1 | v5))
  {
    unint64_t v6 = *((unsigned __int8 *)a1 + 4);
    uint64_t v3 = 3;
    a2[78].n128_u64[0] = 3;
    a2->n128_u64[1] = v6;
    int v4 = *a1;
    unsigned int v5 = a1[3];
  }
  if (v4) {
    BOOL v7 = 0;
  }
  else {
    BOOL v7 = v5 == 1;
  }
  if (v7)
  {
    unint64_t v8 = *((unsigned __int16 *)a1 + 2);
    v3 |= 4uLL;
    a2[78].n128_u64[0] = v3;
    a2[1].n128_u64[0] = v8;
    int v4 = *a1;
    unsigned int v5 = a1[3];
  }
  if (v4) {
    BOOL v9 = 0;
  }
  else {
    BOOL v9 = v5 == 2;
  }
  if (v9)
  {
    unint64_t v10 = *((unsigned __int16 *)a1 + 2);
    v3 |= 8uLL;
    a2[78].n128_u64[0] = v3;
    a2[1].n128_u64[1] = v10;
    int v4 = *a1;
    unsigned int v5 = a1[3];
  }
  if (!v4 && v5 == 3)
  {
    unint64_t v11 = *((unsigned __int16 *)a1 + 2);
    v3 |= 0x10uLL;
    a2[78].n128_u64[0] = v3;
    a2[2].n128_u64[0] = v11;
    int v4 = *a1;
    unsigned int v5 = a1[3];
  }
  if (!v4 && v5 == 4)
  {
    unint64_t v12 = a1[1];
    v3 |= 0x20uLL;
    a2[78].n128_u64[0] = v3;
    a2[2].n128_u64[1] = v12;
    int v4 = *a1;
    unsigned int v5 = a1[3];
  }
  if (!v4 && v5 == 5)
  {
    unint64_t v13 = *((unsigned __int16 *)a1 + 2);
    v3 |= 0x40uLL;
    a2[78].n128_u64[0] = v3;
    a2[3].n128_u64[0] = v13;
    int v4 = *a1;
    unsigned int v5 = a1[3];
  }
  if (!v4 && v5 == 6)
  {
    unint64_t v14 = *((unsigned __int8 *)a1 + 4);
    v3 |= 0x80uLL;
    a2[78].n128_u64[0] = v3;
    a2[3].n128_u64[1] = v14;
    int v4 = *a1;
    unsigned int v5 = a1[3];
  }
  if (!v4 && v5 == 7)
  {
    unint64_t v15 = a1[1];
    v3 |= 0x100uLL;
    a2[78].n128_u64[0] = v3;
    a2[4].n128_u64[0] = v15;
    int v4 = *a1;
    unsigned int v5 = a1[3];
  }
  if (!v4 && v5 == 7)
  {
    unint64_t v16 = *((unsigned __int8 *)a1 + 8);
    v3 |= 0x200uLL;
    a2[78].n128_u64[0] = v3;
    a2[4].n128_u64[1] = v16;
    int v4 = *a1;
  }
  if (!v4)
  {
    unint64_t v17 = v5;
    uint64_t v18 = v3 | 0x400;
    a2[78].n128_u64[0] = v3 | 0x400;
    a2[5].n128_u64[0] = v17;
    int v4 = *a1;
    if (*a1) {
      goto LABEL_38;
    }
    unint64_t v19 = a1[4];
    uint64_t v18 = v3 | 0xC00;
    a2[78].n128_u64[0] = v3 | 0xC00;
    a2[5].n128_u64[1] = v19;
    int v4 = *a1;
    if (*a1) {
      goto LABEL_38;
    }
    unint64_t v20 = *((unsigned __int8 *)a1 + 20);
    uint64_t v18 = v3 | 0x1C00;
    a2[78].n128_u64[0] = v3 | 0x1C00;
    a2[6].n128_u64[0] = v20;
    int v4 = *a1;
    if (*a1
      || (v21 = a1[6], uint64_t v18 = v3 | 0x3C00, a2[78].n128_u64[0] = v3 | 0x3C00, a2[6].n128_u64[1] = v21, (v4 = *a1) != 0))
    {
LABEL_38:
      uint64_t v3 = v18;
    }
    else
    {
      unint64_t v113 = a1[7];
      v3 |= 0x7C00uLL;
      a2[78].n128_u64[0] = v3;
      a2[7].n128_u64[0] = v113;
      int v4 = *a1;
    }
  }
  unsigned int v22 = a1[3];
  if (v4 == 1 && !v22)
  {
    unint64_t v23 = *((unsigned __int8 *)a1 + 4);
    v3 |= 0x8000uLL;
    a2[78].n128_u64[0] = v3;
    a2[7].n128_u64[1] = v23;
    int v4 = *a1;
    unsigned int v22 = a1[3];
  }
  if (v4 == 1 && v22 == 1)
  {
    unint64_t v24 = *((unsigned __int16 *)a1 + 2);
    v3 |= 0x10000uLL;
    a2[78].n128_u64[0] = v3;
    a2[8].n128_u64[0] = v24;
    int v4 = *a1;
    unsigned int v22 = a1[3];
  }
  if (v4 == 1 && v22 == 2)
  {
    unint64_t v25 = *((unsigned __int16 *)a1 + 2);
    v3 |= 0x20000uLL;
    a2[78].n128_u64[0] = v3;
    a2[8].n128_u64[1] = v25;
    int v4 = *a1;
    unsigned int v22 = a1[3];
  }
  if (v4 == 1 && v22 == 3)
  {
    unint64_t v26 = *((unsigned __int16 *)a1 + 2);
    v3 |= 0x40000uLL;
    a2[78].n128_u64[0] = v3;
    a2[9].n128_u64[0] = v26;
    int v4 = *a1;
    unsigned int v22 = a1[3];
  }
  if (v4 == 1 && v22 == 4)
  {
    unint64_t v27 = a1[1];
    v3 |= 0x80000uLL;
    a2[78].n128_u64[0] = v3;
    a2[9].n128_u64[1] = v27;
    int v4 = *a1;
    unsigned int v22 = a1[3];
  }
  if (v4 == 1 && v22 == 5)
  {
    unint64_t v28 = *((unsigned __int16 *)a1 + 2);
    v3 |= 0x100000uLL;
    a2[78].n128_u64[0] = v3;
    a2[10].n128_u64[0] = v28;
    int v4 = *a1;
    unsigned int v22 = a1[3];
  }
  if (v4 == 1 && v22 == 6)
  {
    unint64_t v29 = *((unsigned __int8 *)a1 + 4);
    v3 |= 0x200000uLL;
    a2[78].n128_u64[0] = v3;
    a2[10].n128_u64[1] = v29;
    int v4 = *a1;
    unsigned int v22 = a1[3];
  }
  if (v4 == 1 && v22 == 7)
  {
    unint64_t v30 = a1[1];
    v3 |= 0x400000uLL;
    a2[78].n128_u64[0] = v3;
    a2[11].n128_u64[0] = v30;
    int v4 = *a1;
    unsigned int v22 = a1[3];
  }
  if (v4 == 1 && v22 == 7)
  {
    unint64_t v31 = *((unsigned __int8 *)a1 + 8);
    v3 |= 0x800000uLL;
    a2[78].n128_u64[0] = v3;
    a2[11].n128_u64[1] = v31;
    int v4 = *a1;
  }
  if (v4 == 1)
  {
    unint64_t v32 = v22;
    uint64_t v33 = v3 | 0x1000000;
    a2[78].n128_u64[0] = v3 | 0x1000000;
    a2[12].n128_u64[0] = v32;
    int v4 = *a1;
    if (*a1 != 1) {
      goto LABEL_74;
    }
    unint64_t v34 = a1[4];
    uint64_t v33 = v3 | 0x3000000;
    a2[78].n128_u64[0] = v3 | 0x3000000;
    a2[12].n128_u64[1] = v34;
    int v4 = *a1;
    if (*a1 != 1) {
      goto LABEL_74;
    }
    unint64_t v35 = *((unsigned __int8 *)a1 + 20);
    uint64_t v33 = v3 | 0x7000000;
    a2[78].n128_u64[0] = v3 | 0x7000000;
    a2[13].n128_u64[0] = v35;
    int v4 = *a1;
    if (*a1 != 1) {
      goto LABEL_74;
    }
    unint64_t v36 = a1[6];
    uint64_t v33 = v3 | 0xF000000;
    a2[78].n128_u64[0] = v3 | 0xF000000;
    a2[13].n128_u64[1] = v36;
    int v4 = *a1;
    if (*a1 != 1) {
      goto LABEL_74;
    }
    unint64_t v37 = a1[7];
    uint64_t v33 = v3 | 0x1F000000;
    a2[78].n128_u64[0] = v3 | 0x1F000000;
    a2[14].n128_u64[0] = v37;
    int v4 = *a1;
    if (*a1 != 1) {
      goto LABEL_74;
    }
    unint64_t v38 = *((unsigned __int8 *)a1 + 32);
    uint64_t v33 = v3 | 0x3F000000;
    a2[78].n128_u64[0] = v3 | 0x3F000000;
    a2[14].n128_u64[1] = v38;
    int v4 = *a1;
    if (*a1 == 1)
    {
      unint64_t v39 = a1[9];
      v3 |= 0x7F000000uLL;
      a2[78].n128_u64[0] = v3;
      a2[15].n128_u64[0] = v39;
      int v4 = *a1;
    }
    else
    {
LABEL_74:
      uint64_t v3 = v33;
    }
  }
  if (v4 == 2)
  {
    unint64_t v40 = *((unsigned __int8 *)a1 + 4);
    uint64_t v41 = v3 | 0x80000000;
    a2[78].n128_u64[0] = v3 | 0x80000000;
    a2[15].n128_u64[1] = v40;
    if (*a1 == 2)
    {
      unint64_t v42 = *((unsigned __int8 *)a1 + 5);
      uint64_t v41 = v3 | 0x180000000;
      a2[78].n128_u64[0] = v3 | 0x180000000;
      a2[16].n128_u64[0] = v42;
    }
  }
  else
  {
    uint64_t v41 = v3;
  }
  unsigned int v43 = a1[12];
  if (!v43)
  {
    unint64_t v44 = *((unsigned __int8 *)a1 + 40);
    v41 |= 0x200000000uLL;
    a2[78].n128_u64[0] = v41;
    a2[16].n128_u64[1] = v44;
    unsigned int v43 = a1[12];
  }
  if (v43 == 1)
  {
    unint64_t v45 = *((unsigned __int16 *)a1 + 20);
    v41 |= 0x400000000uLL;
    a2[78].n128_u64[0] = v41;
    a2[17].n128_u64[0] = v45;
    unsigned int v43 = a1[12];
  }
  if (v43 == 2)
  {
    unint64_t v46 = *((unsigned __int16 *)a1 + 20);
    v41 |= 0x800000000uLL;
    a2[78].n128_u64[0] = v41;
    a2[17].n128_u64[1] = v46;
    unsigned int v43 = a1[12];
  }
  if (v43 == 3)
  {
    unint64_t v47 = *((unsigned __int16 *)a1 + 20);
    v41 |= 0x1000000000uLL;
    a2[78].n128_u64[0] = v41;
    a2[18].n128_u64[0] = v47;
    unsigned int v43 = a1[12];
  }
  if (v43 == 4)
  {
    unint64_t v48 = a1[10];
    v41 |= 0x2000000000uLL;
    a2[78].n128_u64[0] = v41;
    a2[18].n128_u64[1] = v48;
    unsigned int v43 = a1[12];
  }
  if (v43 == 5)
  {
    unint64_t v49 = *((unsigned __int16 *)a1 + 20);
    v41 |= 0x4000000000uLL;
    a2[78].n128_u64[0] = v41;
    a2[19].n128_u64[0] = v49;
    unsigned int v43 = a1[12];
  }
  if (v43 == 6)
  {
    unint64_t v50 = *((unsigned __int8 *)a1 + 40);
    v41 |= 0x8000000000uLL;
    a2[78].n128_u64[0] = v41;
    a2[19].n128_u64[1] = v50;
    unsigned int v43 = a1[12];
  }
  if (v43 == 7)
  {
    unint64_t v51 = a1[10];
    a2[78].n128_u64[0] = v41 | 0x10000000000;
    a2[20].n128_u64[0] = v51;
    unsigned int v43 = a1[12];
    if (v43 == 7)
    {
      v41 |= 0x30000000000uLL;
      a2[20].n128_u64[1] = *((unsigned __int8 *)a1 + 44);
      unsigned int v43 = 7;
    }
    else
    {
      v41 |= 0x10000000000uLL;
    }
  }
  unint64_t v52 = a1[13];
  a2[21].n128_u64[0] = v43;
  a2[21].n128_u64[1] = v52;
  unint64_t v53 = a1[15];
  a2[22].n128_u64[0] = *((unsigned __int8 *)a1 + 56);
  a2[22].n128_u64[1] = v53;
  unint64_t v54 = *((unsigned __int8 *)a1 + 65);
  a2[23].n128_u64[0] = *((unsigned __int8 *)a1 + 64);
  a2[23].n128_u64[1] = v54;
  unint64_t v55 = *((unsigned __int8 *)a1 + 66);
  unint64_t v56 = *((unsigned __int8 *)a1 + 67);
  uint64_t v57 = v41 | 0x3FC0000000000;
  a2[78].n128_u64[0] = v41 | 0x3FC0000000000;
  a2[24].n128_u64[0] = v55;
  a2[24].n128_u64[1] = v56;
  unsigned int v58 = a1[19];
  if (!v58)
  {
    unint64_t v59 = *((unsigned __int8 *)a1 + 68);
    uint64_t v57 = v41 | 0x7FC0000000000;
    a2[78].n128_u64[0] = v41 | 0x7FC0000000000;
    a2[25].n128_u64[0] = v59;
    unsigned int v58 = a1[19];
  }
  if (v58 == 1)
  {
    unint64_t v60 = *((unsigned __int16 *)a1 + 34);
    v57 |= 0x8000000000000uLL;
    a2[78].n128_u64[0] = v57;
    a2[25].n128_u64[1] = v60;
    unsigned int v58 = a1[19];
  }
  if (v58 == 2)
  {
    unint64_t v61 = *((unsigned __int16 *)a1 + 34);
    v57 |= 0x10000000000000uLL;
    a2[78].n128_u64[0] = v57;
    a2[26].n128_u64[0] = v61;
    unsigned int v58 = a1[19];
  }
  if (v58 == 3)
  {
    unint64_t v62 = *((unsigned __int16 *)a1 + 34);
    v57 |= 0x20000000000000uLL;
    a2[78].n128_u64[0] = v57;
    a2[26].n128_u64[1] = v62;
    unsigned int v58 = a1[19];
  }
  if (v58 == 4)
  {
    unint64_t v63 = a1[17];
    v57 |= 0x40000000000000uLL;
    a2[78].n128_u64[0] = v57;
    a2[27].n128_u64[0] = v63;
    unsigned int v58 = a1[19];
  }
  if (v58 == 5)
  {
    unint64_t v64 = *((unsigned __int16 *)a1 + 34);
    v57 |= 0x80000000000000uLL;
    a2[78].n128_u64[0] = v57;
    a2[27].n128_u64[1] = v64;
    unsigned int v58 = a1[19];
  }
  if (v58 == 6)
  {
    unint64_t v65 = *((unsigned __int8 *)a1 + 68);
    v57 |= 0x100000000000000uLL;
    a2[78].n128_u64[0] = v57;
    a2[28].n128_u64[0] = v65;
    unsigned int v58 = a1[19];
  }
  if (v58 == 7)
  {
    unint64_t v66 = a1[17];
    a2[78].n128_u64[0] = v57 | 0x200000000000000;
    a2[28].n128_u64[1] = v66;
    unsigned int v58 = a1[19];
    if (v58 == 7)
    {
      v57 |= 0x600000000000000uLL;
      a2[29].n128_u64[0] = *((unsigned __int8 *)a1 + 72);
    }
    else
    {
      v57 |= 0x200000000000000uLL;
    }
  }
  unint64_t v67 = v58;
  unint64_t v68 = a1[20];
  a2[29].n128_u64[1] = v67;
  a2[30].n128_u64[0] = v68;
  unint64_t v69 = a1[22];
  a2[30].n128_u64[1] = *((unsigned __int8 *)a1 + 84);
  a2[31].n128_u64[0] = v69;
  unint64_t v70 = *((unsigned __int8 *)a1 + 92);
  a2[78].n128_u64[0] = v57 | 0xF800000000000000;
  unint64_t v71 = *((unsigned __int8 *)a1 + 93);
  a2[31].n128_u64[1] = v70;
  a2[32].n128_u64[0] = v71;
  a2[32].n128_u64[1] = *((unsigned __int8 *)a1 + 94);
  unint64_t v72 = *((unsigned __int8 *)a1 + 95);
  uint64_t v73 = 7;
  a2[78].n128_u64[1] = 7;
  a2[33].n128_u64[0] = v72;
  unsigned int v74 = a1[26];
  if (!v74)
  {
    unint64_t v75 = *((unsigned __int8 *)a1 + 96);
    uint64_t v73 = 15;
    a2[78].n128_u64[1] = 15;
    a2[33].n128_u64[1] = v75;
    unsigned int v74 = a1[26];
  }
  if (v74 == 1)
  {
    unint64_t v76 = *((unsigned __int16 *)a1 + 48);
    v73 |= 0x10uLL;
    a2[78].n128_u64[1] = v73;
    a2[34].n128_u64[0] = v76;
    unsigned int v74 = a1[26];
  }
  if (v74 == 2)
  {
    unint64_t v77 = *((unsigned __int16 *)a1 + 48);
    v73 |= 0x20uLL;
    a2[78].n128_u64[1] = v73;
    a2[34].n128_u64[1] = v77;
    unsigned int v74 = a1[26];
  }
  if (v74 == 3)
  {
    unint64_t v78 = *((unsigned __int16 *)a1 + 48);
    v73 |= 0x40uLL;
    a2[78].n128_u64[1] = v73;
    a2[35].n128_u64[0] = v78;
    unsigned int v74 = a1[26];
  }
  if (v74 == 4)
  {
    unint64_t v79 = a1[24];
    v73 |= 0x80uLL;
    a2[78].n128_u64[1] = v73;
    a2[35].n128_u64[1] = v79;
    unsigned int v74 = a1[26];
  }
  if (v74 == 5)
  {
    unint64_t v80 = *((unsigned __int16 *)a1 + 48);
    v73 |= 0x100uLL;
    a2[78].n128_u64[1] = v73;
    a2[36].n128_u64[0] = v80;
    unsigned int v74 = a1[26];
  }
  if (v74 == 6)
  {
    unint64_t v81 = *((unsigned __int8 *)a1 + 96);
    v73 |= 0x200uLL;
    a2[78].n128_u64[1] = v73;
    a2[36].n128_u64[1] = v81;
    unsigned int v74 = a1[26];
  }
  if (v74 == 7)
  {
    unint64_t v82 = a1[24];
    a2[78].n128_u64[1] = v73 | 0x400;
    a2[37].n128_u64[0] = v82;
    unsigned int v74 = a1[26];
    if (v74 == 7)
    {
      v73 |= 0xC00uLL;
      a2[37].n128_u64[1] = *((unsigned __int8 *)a1 + 100);
      unsigned int v74 = 7;
    }
    else
    {
      v73 |= 0x400uLL;
    }
  }
  a2[38].n128_u64[0] = v74;
  a2[38].n128_u64[1] = a1[27];
  a2[39].n128_u64[0] = *((unsigned __int8 *)a1 + 112);
  a2[39].n128_u64[1] = a1[29];
  a2[40].n128_u64[0] = *((unsigned __int8 *)a1 + 120);
  a2[40].n128_u64[1] = *((unsigned __int8 *)a1 + 121);
  a2[41].n128_u64[0] = *((unsigned __int8 *)a1 + 122);
  unint64_t v83 = *((unsigned __int8 *)a1 + 123);
  uint64_t v84 = v73 | 0xFF000;
  a2[78].n128_u64[1] = v73 | 0xFF000;
  a2[41].n128_u64[1] = v83;
  unsigned int v85 = a1[33];
  if (!v85)
  {
    unint64_t v86 = *((unsigned __int8 *)a1 + 124);
    uint64_t v84 = v73 | 0x1FF000;
    a2[78].n128_u64[1] = v73 | 0x1FF000;
    a2[42].n128_u64[0] = v86;
    unsigned int v85 = a1[33];
  }
  if (v85 == 1)
  {
    unint64_t v87 = *((unsigned __int16 *)a1 + 62);
    v84 |= 0x200000uLL;
    a2[78].n128_u64[1] = v84;
    a2[42].n128_u64[1] = v87;
    unsigned int v85 = a1[33];
  }
  if (v85 == 2)
  {
    unint64_t v88 = *((unsigned __int16 *)a1 + 62);
    v84 |= 0x400000uLL;
    a2[78].n128_u64[1] = v84;
    a2[43].n128_u64[0] = v88;
    unsigned int v85 = a1[33];
  }
  if (v85 == 3)
  {
    unint64_t v89 = *((unsigned __int16 *)a1 + 62);
    v84 |= 0x800000uLL;
    a2[78].n128_u64[1] = v84;
    a2[43].n128_u64[1] = v89;
    unsigned int v85 = a1[33];
  }
  if (v85 == 4)
  {
    unint64_t v90 = a1[31];
    v84 |= 0x1000000uLL;
    a2[78].n128_u64[1] = v84;
    a2[44].n128_u64[0] = v90;
    unsigned int v85 = a1[33];
  }
  if (v85 == 5)
  {
    unint64_t v91 = *((unsigned __int16 *)a1 + 62);
    v84 |= 0x2000000uLL;
    a2[78].n128_u64[1] = v84;
    a2[44].n128_u64[1] = v91;
    unsigned int v85 = a1[33];
  }
  if (v85 == 6)
  {
    unint64_t v92 = *((unsigned __int8 *)a1 + 124);
    v84 |= 0x4000000uLL;
    a2[78].n128_u64[1] = v84;
    a2[45].n128_u64[0] = v92;
    unsigned int v85 = a1[33];
  }
  if (v85 == 7)
  {
    unint64_t v93 = a1[31];
    a2[78].n128_u64[1] = v84 | 0x8000000;
    a2[45].n128_u64[1] = v93;
    unsigned int v85 = a1[33];
    if (v85 == 7)
    {
      unint64_t v94 = *((unsigned __int8 *)a1 + 128);
      v84 |= 0x18000000uLL;
      a2[78].n128_u64[1] = v84;
      a2[46].n128_u64[0] = v94;
    }
    else
    {
      v84 |= 0x8000000uLL;
    }
  }
  a2[46].n128_u64[1] = v85;
  a2[47].n128_u64[0] = a1[34];
  a2[47].n128_u64[1] = *((unsigned __int8 *)a1 + 140);
  a2[48].n128_u64[0] = a1[36];
  a2[48].n128_u64[1] = *((unsigned __int8 *)a1 + 148);
  a2[49].n128_u64[0] = *((unsigned __int8 *)a1 + 149);
  a2[49].n128_u64[1] = *((unsigned __int8 *)a1 + 150);
  unint64_t v95 = *((unsigned __int8 *)a1 + 151);
  a2[78].n128_u64[1] = v84 | 0x1FE0000000;
  a2[50].n128_u64[0] = v95;
  unint64_t v96 = a1[38];
  a2[78].n128_u64[1] = v84 | 0x3FE0000000;
  a2[50].n128_u64[1] = v96;
  unint64_t v97 = *((unsigned __int8 *)a1 + 156);
  a2[78].n128_u64[1] = v84 | 0x7FE0000000;
  a2[51].n128_u64[0] = v97;
  unint64_t v98 = *((unsigned __int8 *)a1 + 157);
  a2[78].n128_u64[1] = v84 | 0xFFE0000000;
  a2[51].n128_u64[1] = v98;
  unint64_t v99 = *((unsigned __int8 *)a1 + 158);
  a2[78].n128_u64[1] = v84 | 0x1FFE0000000;
  a2[52].n128_u64[0] = v99;
  unint64_t v100 = *((unsigned __int8 *)a1 + 159);
  a2[78].n128_u64[1] = v84 | 0x3FFE0000000;
  a2[52].n128_u64[1] = v100;
  unint64_t v101 = *((unsigned __int8 *)a1 + 160);
  a2[78].n128_u64[1] = v84 | 0x7FFE0000000;
  a2[53].n128_u64[0] = v101;
  unint64_t v102 = *((unsigned __int8 *)a1 + 161);
  a2[78].n128_u64[1] = v84 | 0xFFFE0000000;
  a2[53].n128_u64[1] = v102;
  unint64_t v103 = *((unsigned __int8 *)a1 + 162);
  a2[78].n128_u64[1] = v84 | 0x1FFFE0000000;
  a2[54].n128_u64[0] = v103;
  unint64_t v104 = *((unsigned __int8 *)a1 + 163);
  a2[78].n128_u64[1] = v84 | 0x3FFFE0000000;
  a2[54].n128_u64[1] = v104;
  a2[78].n128_u64[1] = v84 | 0xFFFFE0000000;
  uint64_t v105 = *(void *)(a1 + 41);
  v106.n128_u64[0] = v105;
  v106.n128_u64[1] = HIDWORD(v105);
  __n128 v107 = v106;
  a2[78].n128_u64[1] = v84 | 0x3FFFFE0000000;
  uint64_t v108 = *(void *)(a1 + 43);
  v106.n128_u64[0] = v108;
  v106.n128_u64[1] = HIDWORD(v108);
  a2[55] = v107;
  a2[56] = v106;
  a2[78].n128_u64[1] = v84 | 0xFFFFFE0000000;
  v107.n128_u64[0] = *(void *)(a1 + 45);
  v106.n128_u64[0] = v107.n128_u32[0];
  v106.n128_u64[1] = v107.n128_u32[1];
  __n128 result = v106;
  a2[78].n128_u64[1] = v84 | 0x3FFFFFE0000000;
  uint64_t v110 = *(void *)(a1 + 47);
  v106.n128_u64[0] = v110;
  v106.n128_u64[1] = HIDWORD(v110);
  a2[57] = result;
  a2[58] = v106;
  unint64_t v111 = a1[49];
  a2[78].n128_u64[1] = v84 | 0x7FFFFFE0000000;
  a2[59].n128_u64[0] = v111;
  unint64_t v112 = *((unsigned __int8 *)a1 + 200);
  a2[78].n128_u64[1] = v84 | 0xFFFFFFE0000000;
  a2[59].n128_u64[1] = v112;
  return result;
}

__n128 sub_1CBE6FE18(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = *(void *)(a1 + 20);
  *(void *)&long long v14 = v13;
  *((void *)&v14 + 1) = HIDWORD(v13);
  *(_OWORD *)(a2 + 96) = v14;
  uint64_t v15 = a1[28];
  uint64_t v16 = *((unsigned int *)a1 + 8);
  uint64_t v17 = v3 | 0xFE00;
  *(void *)(a2 + 1248) = v3 | 0xFE00;
  *(void *)(a2 + 112) = v15;
  *(void *)(a2 + 120) = v16;
  unsigned int v18 = *((_DWORD *)a1 + 11);
  if (!v18)
  {
    uint64_t v19 = a1[36];
    uint64_t v17 = v3 | 0x1FE00;
    *(void *)(a2 + 1248) = v3 | 0x1FE00;
    *(void *)(a2 + 128) = v19;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 1)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 136) = v20;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 2)
  {
    uint64_t v21 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 144) = v21;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 3)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 152) = v22;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 4)
  {
    uint64_t v23 = *((unsigned int *)a1 + 9);
    v17 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 160) = v23;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 5)
  {
    uint64_t v24 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x200000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 168) = v24;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 6)
  {
    uint64_t v25 = a1[36];
    v17 |= 0x400000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 176) = v25;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 7)
  {
    uint64_t v26 = *((unsigned int *)a1 + 9);
    *(void *)(a2 + 1248) = v17 | 0x800000;
    *(void *)(a2 + 184) = v26;
    unsigned int v18 = *((_DWORD *)a1 + 11);
    if (v18 == 7)
    {
      v17 |= 0x1800000uLL;
      *(void *)(a2 + 192) = a1[40];
    }
    else
    {
      v17 |= 0x800000uLL;
    }
  }
  uint64_t v27 = v18;
  uint64_t v28 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = v27;
  *(void *)(a2 + 208) = v28;
  uint64_t v29 = *((unsigned int *)a1 + 14);
  *(void *)(a2 + 216) = a1[52];
  *(void *)(a2 + 224) = v29;
  uint64_t v30 = a1[61];
  *(void *)(a2 + 232) = a1[60];
  *(void *)(a2 + 240) = v30;
  uint64_t v31 = a1[62];
  uint64_t v32 = a1[63];
  uint64_t v33 = v17 | 0x1FE000000;
  *(void *)(a2 + 1248) = v17 | 0x1FE000000;
  *(void *)(a2 + 248) = v31;
  *(void *)(a2 + 256) = v32;
  unsigned int v34 = *((_DWORD *)a1 + 18);
  if (!v34)
  {
    uint64_t v35 = a1[64];
    uint64_t v33 = v17 | 0x3FE000000;
    *(void *)(a2 + 1248) = v17 | 0x3FE000000;
    *(void *)(a2 + 264) = v35;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 1)
  {
    uint64_t v36 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 272) = v36;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 2)
  {
    uint64_t v37 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 280) = v37;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 3)
  {
    uint64_t v38 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x1000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 288) = v38;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 4)
  {
    uint64_t v39 = *((unsigned int *)a1 + 16);
    v33 |= 0x2000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 296) = v39;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 5)
  {
    uint64_t v40 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x4000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 304) = v40;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 6)
  {
    uint64_t v41 = a1[64];
    v33 |= 0x8000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 312) = v41;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 7)
  {
    uint64_t v42 = *((unsigned int *)a1 + 16);
    *(void *)(a2 + 1248) = v33 | 0x10000000000;
    *(void *)(a2 + 320) = v42;
    unsigned int v34 = *((_DWORD *)a1 + 18);
    if (v34 == 7)
    {
      v33 |= 0x30000000000uLL;
      *(void *)(a2 + 328) = a1[68];
    }
    else
    {
      v33 |= 0x10000000000uLL;
    }
  }
  uint64_t v43 = v34;
  uint64_t v44 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 336) = v43;
  *(void *)(a2 + 344) = v44;
  uint64_t v45 = *((unsigned int *)a1 + 21);
  *(void *)(a2 + 352) = a1[80];
  *(void *)(a2 + 360) = v45;
  uint64_t v46 = a1[89];
  *(void *)(a2 + 368) = a1[88];
  *(void *)(a2 + 376) = v46;
  uint64_t v47 = a1[90];
  uint64_t v48 = a1[91];
  uint64_t v49 = v33 | 0x3FC0000000000;
  *(void *)(a2 + 1248) = v33 | 0x3FC0000000000;
  *(void *)(a2 + 384) = v47;
  *(void *)(a2 + 392) = v48;
  unsigned int v50 = *((_DWORD *)a1 + 25);
  if (!v50)
  {
    uint64_t v51 = a1[92];
    uint64_t v49 = v33 | 0x7FC0000000000;
    *(void *)(a2 + 1248) = v33 | 0x7FC0000000000;
    *(void *)(a2 + 400) = v51;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 1)
  {
    uint64_t v52 = *((unsigned __int16 *)a1 + 46);
    v49 |= 0x8000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 408) = v52;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 2)
  {
    uint64_t v53 = *((unsigned __int16 *)a1 + 46);
    v49 |= 0x10000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 416) = v53;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 3)
  {
    uint64_t v54 = *((unsigned __int16 *)a1 + 46);
    v49 |= 0x20000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 424) = v54;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 4)
  {
    uint64_t v55 = *((unsigned int *)a1 + 23);
    v49 |= 0x40000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 432) = v55;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 5)
  {
    uint64_t v56 = *((unsigned __int16 *)a1 + 46);
    v49 |= 0x80000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 440) = v56;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 6)
  {
    uint64_t v57 = a1[92];
    v49 |= 0x100000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 448) = v57;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 7)
  {
    uint64_t v58 = *((unsigned int *)a1 + 23);
    *(void *)(a2 + 1248) = v49 | 0x200000000000000;
    *(void *)(a2 + 456) = v58;
    unsigned int v50 = *((_DWORD *)a1 + 25);
    if (v50 == 7)
    {
      v49 |= 0x600000000000000uLL;
      *(void *)(a2 + 464) = a1[96];
    }
    else
    {
      v49 |= 0x200000000000000uLL;
    }
  }
  uint64_t v59 = v50;
  uint64_t v60 = *((unsigned int *)a1 + 26);
  *(void *)(a2 + 472) = v59;
  *(void *)(a2 + 480) = v60;
  uint64_t v61 = *((unsigned int *)a1 + 28);
  *(void *)(a2 + 488) = a1[108];
  *(void *)(a2 + 496) = v61;
  uint64_t v62 = a1[116];
  *(void *)(a2 + 1248) = v49 | 0xF800000000000000;
  uint64_t v63 = a1[117];
  *(void *)(a2 + 504) = v62;
  *(void *)(a2 + 512) = v63;
  *(void *)(a2 + 520) = a1[118];
  uint64_t v64 = a1[119];
  uint64_t v65 = 7;
  *(void *)(a2 + 1256) = 7;
  *(void *)(a2 + 528) = v64;
  unsigned int v66 = *((_DWORD *)a1 + 32);
  if (!v66)
  {
    uint64_t v67 = a1[120];
    uint64_t v65 = 15;
    *(void *)(a2 + 1256) = 15;
    *(void *)(a2 + 536) = v67;
    unsigned int v66 = *((_DWORD *)a1 + 32);
  }
  if (v66 == 1)
  {
    uint64_t v68 = *((unsigned __int16 *)a1 + 60);
    v65 |= 0x10uLL;
    *(void *)(a2 + 1256) = v65;
    *(void *)(a2 + 544) = v68;
    unsigned int v66 = *((_DWORD *)a1 + 32);
  }
  if (v66 == 2)
  {
    uint64_t v69 = *((unsigned __int16 *)a1 + 60);
    v65 |= 0x20uLL;
    *(void *)(a2 + 1256) = v65;
    *(void *)(a2 + 552) = v69;
    unsigned int v66 = *((_DWORD *)a1 + 32);
  }
  if (v66 == 3)
  {
    uint64_t v70 = *((unsigned __int16 *)a1 + 60);
    v65 |= 0x40uLL;
    *(void *)(a2 + 1256) = v65;
    *(void *)(a2 + 560) = v70;
    unsigned int v66 = *((_DWORD *)a1 + 32);
  }
  if (v66 == 4)
  {
    uint64_t v71 = *((unsigned int *)a1 + 30);
    v65 |= 0x80uLL;
    *(void *)(a2 + 1256) = v65;
    *(void *)(a2 + 568) = v71;
    unsigned int v66 = *((_DWORD *)a1 + 32);
  }
  if (v66 == 5)
  {
    uint64_t v72 = *((unsigned __int16 *)a1 + 60);
    v65 |= 0x100uLL;
    *(void *)(a2 + 1256) = v65;
    *(void *)(a2 + 576) = v72;
    unsigned int v66 = *((_DWORD *)a1 + 32);
  }
  if (v66 == 6)
  {
    uint64_t v73 = a1[120];
    v65 |= 0x200uLL;
    *(void *)(a2 + 1256) = v65;
    *(void *)(a2 + 584) = v73;
    unsigned int v66 = *((_DWORD *)a1 + 32);
  }
  if (v66 == 7)
  {
    uint64_t v74 = *((unsigned int *)a1 + 30);
    *(void *)(a2 + 1256) = v65 | 0x400;
    *(void *)(a2 + 592) = v74;
    unsigned int v66 = *((_DWORD *)a1 + 32);
    if (v66 == 7)
    {
      v65 |= 0xC00uLL;
      *(void *)(a2 + 600) = a1[124];
      unsigned int v66 = 7;
    }
    else
    {
      v65 |= 0x400uLL;
    }
  }
  *(void *)(a2 + 608) = v66;
  *(void *)(a2 + 616) = *((unsigned int *)a1 + 33);
  *(void *)(a2 + 624) = a1[136];
  *(void *)(a2 + 632) = *((unsigned int *)a1 + 35);
  *(void *)(a2 + 640) = a1[144];
  *(void *)(a2 + 648) = a1[145];
  *(void *)(a2 + 656) = a1[146];
  *(void *)(a2 + 664) = a1[147];
  uint64_t v75 = *(void *)(a1 + 148);
  v76.n128_u64[0] = v75;
  v76.n128_u64[1] = HIDWORD(v75);
  *(__n128 *)(a2 + 672) = v76;
  *(void *)(a2 + 688) = a1[156];
  *(void *)(a2 + 696) = a1[157];
  *(void *)(a2 + 704) = a1[158];
  *(void *)(a2 + 712) = a1[159];
  *(void *)(a2 + 720) = a1[160];
  *(void *)(a2 + 728) = a1[161];
  *(void *)(a2 + 736) = a1[162];
  *(void *)(a2 + 744) = a1[163];
  uint64_t v77 = *(void *)(a1 + 164);
  v76.n128_u64[0] = v77;
  v76.n128_u64[1] = HIDWORD(v77);
  __n128 v78 = v76;
  uint64_t v79 = *(void *)(a1 + 172);
  v76.n128_u64[0] = v79;
  v76.n128_u64[1] = HIDWORD(v79);
  *(__n128 *)(a2 + 752) = v78;
  *(__n128 *)(a2 + 768) = v76;
  v78.n128_u64[0] = *(void *)(a1 + 180);
  v76.n128_u64[0] = v78.n128_u32[0];
  v76.n128_u64[1] = v78.n128_u32[1];
  __n128 result = v76;
  uint64_t v81 = *(void *)(a1 + 188);
  v76.n128_u64[0] = v81;
  v76.n128_u64[1] = HIDWORD(v81);
  *(__n128 *)(a2 + 784) = result;
  *(__n128 *)(a2 + 800) = v76;
  *(void *)(a2 + 816) = *((unsigned int *)a1 + 49);
  *(void *)(a2 + 824) = a1[200];
  uint64_t v82 = *((unsigned int *)a1 + 51);
  *(void *)(a2 + 1256) = v65 | 0x1FFFFFFF000;
  *(void *)(a2 + 832) = v82;
  return result;
}

__n128 sub_1CBE704E0(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = *(void *)(a1 + 20);
  *(void *)&long long v14 = v13;
  *((void *)&v14 + 1) = HIDWORD(v13);
  *(_OWORD *)(a2 + 96) = v14;
  uint64_t v15 = a1[28];
  uint64_t v16 = *((unsigned int *)a1 + 8);
  uint64_t v17 = v3 | 0xFE00;
  *(void *)(a2 + 1248) = v3 | 0xFE00;
  *(void *)(a2 + 112) = v15;
  *(void *)(a2 + 120) = v16;
  unsigned int v18 = *((_DWORD *)a1 + 11);
  if (!v18)
  {
    uint64_t v19 = a1[36];
    uint64_t v17 = v3 | 0x1FE00;
    *(void *)(a2 + 1248) = v3 | 0x1FE00;
    *(void *)(a2 + 128) = v19;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 1)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 136) = v20;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 2)
  {
    uint64_t v21 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 144) = v21;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 3)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 152) = v22;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 4)
  {
    uint64_t v23 = *((unsigned int *)a1 + 9);
    v17 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 160) = v23;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 5)
  {
    uint64_t v24 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x200000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 168) = v24;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 6)
  {
    uint64_t v25 = a1[36];
    v17 |= 0x400000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 176) = v25;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 7)
  {
    uint64_t v26 = *((unsigned int *)a1 + 9);
    *(void *)(a2 + 1248) = v17 | 0x800000;
    *(void *)(a2 + 184) = v26;
    unsigned int v18 = *((_DWORD *)a1 + 11);
    if (v18 == 7)
    {
      v17 |= 0x1800000uLL;
      *(void *)(a2 + 192) = a1[40];
    }
    else
    {
      v17 |= 0x800000uLL;
    }
  }
  uint64_t v27 = v18;
  uint64_t v28 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = v27;
  *(void *)(a2 + 208) = v28;
  uint64_t v29 = *((unsigned int *)a1 + 14);
  *(void *)(a2 + 216) = a1[52];
  *(void *)(a2 + 224) = v29;
  uint64_t v30 = a1[61];
  *(void *)(a2 + 232) = a1[60];
  *(void *)(a2 + 240) = v30;
  uint64_t v31 = a1[62];
  uint64_t v32 = a1[63];
  uint64_t v33 = v17 | 0x1FE000000;
  *(void *)(a2 + 1248) = v17 | 0x1FE000000;
  *(void *)(a2 + 248) = v31;
  *(void *)(a2 + 256) = v32;
  unsigned int v34 = *((_DWORD *)a1 + 18);
  if (!v34)
  {
    uint64_t v35 = a1[64];
    uint64_t v33 = v17 | 0x3FE000000;
    *(void *)(a2 + 1248) = v17 | 0x3FE000000;
    *(void *)(a2 + 264) = v35;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 1)
  {
    uint64_t v36 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 272) = v36;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 2)
  {
    uint64_t v37 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 280) = v37;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 3)
  {
    uint64_t v38 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x1000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 288) = v38;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 4)
  {
    uint64_t v39 = *((unsigned int *)a1 + 16);
    v33 |= 0x2000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 296) = v39;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 5)
  {
    uint64_t v40 = *((unsigned __int16 *)a1 + 32);
    v33 |= 0x4000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 304) = v40;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 6)
  {
    uint64_t v41 = a1[64];
    v33 |= 0x8000000000uLL;
    *(void *)(a2 + 1248) = v33;
    *(void *)(a2 + 312) = v41;
    unsigned int v34 = *((_DWORD *)a1 + 18);
  }
  if (v34 == 7)
  {
    uint64_t v42 = *((unsigned int *)a1 + 16);
    *(void *)(a2 + 1248) = v33 | 0x10000000000;
    *(void *)(a2 + 320) = v42;
    unsigned int v34 = *((_DWORD *)a1 + 18);
    if (v34 == 7)
    {
      v33 |= 0x30000000000uLL;
      *(void *)(a2 + 328) = a1[68];
    }
    else
    {
      v33 |= 0x10000000000uLL;
    }
  }
  uint64_t v43 = v34;
  uint64_t v44 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 336) = v43;
  *(void *)(a2 + 344) = v44;
  uint64_t v45 = *((unsigned int *)a1 + 21);
  *(void *)(a2 + 352) = a1[80];
  *(void *)(a2 + 360) = v45;
  uint64_t v46 = a1[89];
  *(void *)(a2 + 368) = a1[88];
  *(void *)(a2 + 376) = v46;
  uint64_t v47 = a1[90];
  uint64_t v48 = a1[91];
  uint64_t v49 = v33 | 0x3FC0000000000;
  *(void *)(a2 + 1248) = v33 | 0x3FC0000000000;
  *(void *)(a2 + 384) = v47;
  *(void *)(a2 + 392) = v48;
  unsigned int v50 = *((_DWORD *)a1 + 25);
  if (!v50)
  {
    uint64_t v51 = a1[92];
    uint64_t v49 = v33 | 0x7FC0000000000;
    *(void *)(a2 + 1248) = v33 | 0x7FC0000000000;
    *(void *)(a2 + 400) = v51;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 1)
  {
    uint64_t v52 = *((unsigned __int16 *)a1 + 46);
    v49 |= 0x8000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 408) = v52;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 2)
  {
    uint64_t v53 = *((unsigned __int16 *)a1 + 46);
    v49 |= 0x10000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 416) = v53;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 3)
  {
    uint64_t v54 = *((unsigned __int16 *)a1 + 46);
    v49 |= 0x20000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 424) = v54;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 4)
  {
    uint64_t v55 = *((unsigned int *)a1 + 23);
    v49 |= 0x40000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 432) = v55;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 5)
  {
    uint64_t v56 = *((unsigned __int16 *)a1 + 46);
    v49 |= 0x80000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 440) = v56;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 6)
  {
    uint64_t v57 = a1[92];
    v49 |= 0x100000000000000uLL;
    *(void *)(a2 + 1248) = v49;
    *(void *)(a2 + 448) = v57;
    unsigned int v50 = *((_DWORD *)a1 + 25);
  }
  if (v50 == 7)
  {
    uint64_t v58 = *((unsigned int *)a1 + 23);
    *(void *)(a2 + 1248) = v49 | 0x200000000000000;
    *(void *)(a2 + 456) = v58;
    unsigned int v50 = *((_DWORD *)a1 + 25);
    if (v50 == 7)
    {
      v49 |= 0x600000000000000uLL;
      *(void *)(a2 + 464) = a1[96];
    }
    else
    {
      v49 |= 0x200000000000000uLL;
    }
  }
  uint64_t v59 = v50;
  uint64_t v60 = *((unsigned int *)a1 + 26);
  *(void *)(a2 + 472) = v59;
  *(void *)(a2 + 480) = v60;
  uint64_t v61 = *((unsigned int *)a1 + 28);
  *(void *)(a2 + 488) = a1[108];
  *(void *)(a2 + 496) = v61;
  uint64_t v62 = a1[116];
  *(void *)(a2 + 1248) = v49 | 0xF800000000000000;
  uint64_t v63 = a1[117];
  *(void *)(a2 + 504) = v62;
  *(void *)(a2 + 512) = v63;
  *(void *)(a2 + 520) = a1[118];
  uint64_t v64 = a1[119];
  uint64_t v65 = 7;
  *(void *)(a2 + 1256) = 7;
  *(void *)(a2 + 528) = v64;
  unsigned int v66 = *((_DWORD *)a1 + 32);
  if (!v66)
  {
    uint64_t v67 = a1[120];
    uint64_t v65 = 15;
    *(void *)(a2 + 1256) = 15;
    *(void *)(a2 + 536) = v67;
    unsigned int v66 = *((_DWORD *)a1 + 32);
  }
  if (v66 == 1)
  {
    uint64_t v68 = *((unsigned __int16 *)a1 + 60);
    v65 |= 0x10uLL;
    *(void *)(a2 + 1256) = v65;
    *(void *)(a2 + 544) = v68;
    unsigned int v66 = *((_DWORD *)a1 + 32);
  }
  if (v66 == 2)
  {
    uint64_t v69 = *((unsigned __int16 *)a1 + 60);
    v65 |= 0x20uLL;
    *(void *)(a2 + 1256) = v65;
    *(void *)(a2 + 552) = v69;
    unsigned int v66 = *((_DWORD *)a1 + 32);
  }
  if (v66 == 3)
  {
    uint64_t v70 = *((unsigned __int16 *)a1 + 60);
    v65 |= 0x40uLL;
    *(void *)(a2 + 1256) = v65;
    *(void *)(a2 + 560) = v70;
    unsigned int v66 = *((_DWORD *)a1 + 32);
  }
  if (v66 == 4)
  {
    uint64_t v71 = *((unsigned int *)a1 + 30);
    v65 |= 0x80uLL;
    *(void *)(a2 + 1256) = v65;
    *(void *)(a2 + 568) = v71;
    unsigned int v66 = *((_DWORD *)a1 + 32);
  }
  if (v66 == 5)
  {
    uint64_t v72 = *((unsigned __int16 *)a1 + 60);
    v65 |= 0x100uLL;
    *(void *)(a2 + 1256) = v65;
    *(void *)(a2 + 576) = v72;
    unsigned int v66 = *((_DWORD *)a1 + 32);
  }
  if (v66 == 6)
  {
    uint64_t v73 = a1[120];
    v65 |= 0x200uLL;
    *(void *)(a2 + 1256) = v65;
    *(void *)(a2 + 584) = v73;
    unsigned int v66 = *((_DWORD *)a1 + 32);
  }
  if (v66 == 7)
  {
    uint64_t v74 = *((unsigned int *)a1 + 30);
    *(void *)(a2 + 1256) = v65 | 0x400;
    *(void *)(a2 + 592) = v74;
    unsigned int v66 = *((_DWORD *)a1 + 32);
    if (v66 == 7)
    {
      v65 |= 0xC00uLL;
      *(void *)(a2 + 600) = a1[124];
      unsigned int v66 = 7;
    }
    else
    {
      v65 |= 0x400uLL;
    }
  }
  *(void *)(a2 + 608) = v66;
  *(void *)(a2 + 616) = *((unsigned int *)a1 + 33);
  *(void *)(a2 + 624) = a1[136];
  *(void *)(a2 + 632) = *((unsigned int *)a1 + 35);
  *(void *)(a2 + 640) = a1[144];
  *(void *)(a2 + 648) = a1[145];
  *(void *)(a2 + 656) = a1[146];
  *(void *)(a2 + 664) = a1[147];
  uint64_t v75 = *(void *)(a1 + 148);
  v76.n128_u64[0] = v75;
  v76.n128_u64[1] = HIDWORD(v75);
  *(__n128 *)(a2 + 672) = v76;
  *(void *)(a2 + 688) = a1[156];
  *(void *)(a2 + 696) = a1[157];
  *(void *)(a2 + 704) = a1[158];
  *(void *)(a2 + 712) = a1[159];
  *(void *)(a2 + 720) = a1[160];
  *(void *)(a2 + 728) = a1[161];
  *(void *)(a2 + 736) = a1[162];
  *(void *)(a2 + 744) = a1[163];
  uint64_t v77 = *(void *)(a1 + 164);
  v76.n128_u64[0] = v77;
  v76.n128_u64[1] = HIDWORD(v77);
  __n128 v78 = v76;
  uint64_t v79 = *(void *)(a1 + 172);
  v76.n128_u64[0] = v79;
  v76.n128_u64[1] = HIDWORD(v79);
  *(__n128 *)(a2 + 752) = v78;
  *(__n128 *)(a2 + 768) = v76;
  v78.n128_u64[0] = *(void *)(a1 + 180);
  v76.n128_u64[0] = v78.n128_u32[0];
  v76.n128_u64[1] = v78.n128_u32[1];
  __n128 result = v76;
  uint64_t v81 = *(void *)(a1 + 188);
  v76.n128_u64[0] = v81;
  v76.n128_u64[1] = HIDWORD(v81);
  *(__n128 *)(a2 + 784) = result;
  *(__n128 *)(a2 + 800) = v76;
  *(void *)(a2 + 816) = *((unsigned int *)a1 + 49);
  *(void *)(a2 + 824) = a1[200];
  uint64_t v82 = *((unsigned int *)a1 + 51);
  *(void *)(a2 + 1256) = v65 | 0x1FFFFFFF000;
  *(void *)(a2 + 832) = v82;
  return result;
}

__n128 sub_1CBE70BA8(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = v16;
  uint64_t v26 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v25;
  *(void *)(a2 + 192) = v26;
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = a1[53];
  *(void *)(a2 + 216) = a1[52];
  *(void *)(a2 + 224) = v28;
  uint64_t v29 = a1[54];
  uint64_t v30 = a1[55];
  uint64_t v31 = v13 | 0x7F800000;
  *(void *)(a2 + 1248) = v13 | 0x7F800000;
  *(void *)(a2 + 232) = v29;
  *(void *)(a2 + 240) = v30;
  unsigned int v32 = *((_DWORD *)a1 + 16);
  if (!v32)
  {
    uint64_t v33 = a1[56];
    uint64_t v31 = v13 | 0xFF800000;
    *(void *)(a2 + 1248) = v13 | 0xFF800000;
    *(void *)(a2 + 248) = v33;
    unsigned int v32 = *((_DWORD *)a1 + 16);
  }
  if (v32 == 1)
  {
    uint64_t v34 = *((unsigned __int16 *)a1 + 28);
    v31 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v31;
    *(void *)(a2 + 256) = v34;
    unsigned int v32 = *((_DWORD *)a1 + 16);
  }
  if (v32 == 2)
  {
    uint64_t v35 = *((unsigned __int16 *)a1 + 28);
    v31 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v31;
    *(void *)(a2 + 264) = v35;
    unsigned int v32 = *((_DWORD *)a1 + 16);
  }
  if (v32 == 3)
  {
    uint64_t v36 = *((unsigned __int16 *)a1 + 28);
    v31 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v31;
    *(void *)(a2 + 272) = v36;
    unsigned int v32 = *((_DWORD *)a1 + 16);
  }
  if (v32 == 4)
  {
    uint64_t v37 = *((unsigned int *)a1 + 14);
    v31 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v31;
    *(void *)(a2 + 280) = v37;
    unsigned int v32 = *((_DWORD *)a1 + 16);
  }
  if (v32 == 5)
  {
    uint64_t v38 = *((unsigned __int16 *)a1 + 28);
    v31 |= 0x1000000000uLL;
    *(void *)(a2 + 1248) = v31;
    *(void *)(a2 + 288) = v38;
    unsigned int v32 = *((_DWORD *)a1 + 16);
  }
  if (v32 == 6)
  {
    uint64_t v39 = a1[56];
    v31 |= 0x2000000000uLL;
    *(void *)(a2 + 1248) = v31;
    *(void *)(a2 + 296) = v39;
    unsigned int v32 = *((_DWORD *)a1 + 16);
  }
  if (v32 == 7)
  {
    uint64_t v40 = *((unsigned int *)a1 + 14);
    *(void *)(a2 + 1248) = v31 | 0x4000000000;
    *(void *)(a2 + 304) = v40;
    unsigned int v32 = *((_DWORD *)a1 + 16);
    if (v32 == 7)
    {
      v31 |= 0xC000000000uLL;
      *(void *)(a2 + 312) = a1[60];
    }
    else
    {
      v31 |= 0x4000000000uLL;
    }
  }
  uint64_t v41 = v32;
  uint64_t v42 = *((unsigned int *)a1 + 17);
  *(void *)(a2 + 320) = v41;
  *(void *)(a2 + 328) = v42;
  uint64_t v43 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 336) = a1[72];
  *(void *)(a2 + 344) = v43;
  uint64_t v44 = a1[81];
  *(void *)(a2 + 352) = a1[80];
  *(void *)(a2 + 360) = v44;
  uint64_t v45 = a1[82];
  uint64_t v46 = a1[83];
  uint64_t v47 = v31 | 0xFF0000000000;
  *(void *)(a2 + 1248) = v31 | 0xFF0000000000;
  *(void *)(a2 + 368) = v45;
  *(void *)(a2 + 376) = v46;
  unsigned int v48 = *((_DWORD *)a1 + 23);
  if (!v48)
  {
    uint64_t v49 = a1[84];
    uint64_t v47 = v31 | 0x1FF0000000000;
    *(void *)(a2 + 1248) = v31 | 0x1FF0000000000;
    *(void *)(a2 + 384) = v49;
    unsigned int v48 = *((_DWORD *)a1 + 23);
  }
  if (v48 == 1)
  {
    uint64_t v50 = *((unsigned __int16 *)a1 + 42);
    v47 |= 0x2000000000000uLL;
    *(void *)(a2 + 1248) = v47;
    *(void *)(a2 + 392) = v50;
    unsigned int v48 = *((_DWORD *)a1 + 23);
  }
  if (v48 == 2)
  {
    uint64_t v51 = *((unsigned __int16 *)a1 + 42);
    v47 |= 0x4000000000000uLL;
    *(void *)(a2 + 1248) = v47;
    *(void *)(a2 + 400) = v51;
    unsigned int v48 = *((_DWORD *)a1 + 23);
  }
  if (v48 == 3)
  {
    uint64_t v52 = *((unsigned __int16 *)a1 + 42);
    v47 |= 0x8000000000000uLL;
    *(void *)(a2 + 1248) = v47;
    *(void *)(a2 + 408) = v52;
    unsigned int v48 = *((_DWORD *)a1 + 23);
  }
  if (v48 == 4)
  {
    uint64_t v53 = *((unsigned int *)a1 + 21);
    v47 |= 0x10000000000000uLL;
    *(void *)(a2 + 1248) = v47;
    *(void *)(a2 + 416) = v53;
    unsigned int v48 = *((_DWORD *)a1 + 23);
  }
  if (v48 == 5)
  {
    uint64_t v54 = *((unsigned __int16 *)a1 + 42);
    v47 |= 0x20000000000000uLL;
    *(void *)(a2 + 1248) = v47;
    *(void *)(a2 + 424) = v54;
    unsigned int v48 = *((_DWORD *)a1 + 23);
  }
  if (v48 == 6)
  {
    uint64_t v55 = a1[84];
    v47 |= 0x40000000000000uLL;
    *(void *)(a2 + 1248) = v47;
    *(void *)(a2 + 432) = v55;
    unsigned int v48 = *((_DWORD *)a1 + 23);
  }
  if (v48 == 7)
  {
    uint64_t v56 = *((unsigned int *)a1 + 21);
    *(void *)(a2 + 1248) = v47 | 0x80000000000000;
    *(void *)(a2 + 440) = v56;
    unsigned int v48 = *((_DWORD *)a1 + 23);
    if (v48 == 7)
    {
      v47 |= 0x180000000000000uLL;
      *(void *)(a2 + 448) = a1[88];
    }
    else
    {
      v47 |= 0x80000000000000uLL;
    }
  }
  uint64_t v57 = v48;
  uint64_t v58 = *((unsigned int *)a1 + 24);
  *(void *)(a2 + 456) = v57;
  *(void *)(a2 + 464) = v58;
  uint64_t v59 = *((unsigned int *)a1 + 26);
  *(void *)(a2 + 472) = a1[100];
  *(void *)(a2 + 480) = v59;
  uint64_t v60 = a1[108];
  uint64_t v61 = v47 | 0x3E00000000000000;
  *(void *)(a2 + 1248) = v47 | 0x3E00000000000000;
  *(void *)(a2 + 488) = v60;
  unsigned int v62 = *((_DWORD *)a1 + 30);
  if (!v62)
  {
    uint64_t v63 = a1[112];
    uint64_t v61 = v47 | 0x7E00000000000000;
    *(void *)(a2 + 1248) = v47 | 0x7E00000000000000;
    *(void *)(a2 + 496) = v63;
    unsigned int v62 = *((_DWORD *)a1 + 30);
  }
  if (v62 == 1)
  {
    uint64_t v64 = *((unsigned __int16 *)a1 + 56);
    *(void *)(a2 + 1248) = v61 | 0x8000000000000000;
    *(void *)(a2 + 504) = v64;
    unsigned int v62 = *((_DWORD *)a1 + 30);
  }
  if (v62 == 2)
  {
    uint64_t v65 = *((unsigned __int16 *)a1 + 56);
    uint64_t v66 = 1;
    *(void *)(a2 + 1256) = 1;
    *(void *)(a2 + 512) = v65;
    unsigned int v62 = *((_DWORD *)a1 + 30);
  }
  else
  {
    uint64_t v66 = 0;
  }
  if (v62 == 3)
  {
    uint64_t v67 = *((unsigned __int16 *)a1 + 56);
    v66 |= 2uLL;
    *(void *)(a2 + 1256) = v66;
    *(void *)(a2 + 520) = v67;
    unsigned int v62 = *((_DWORD *)a1 + 30);
  }
  if (v62 == 4)
  {
    uint64_t v68 = *((unsigned int *)a1 + 28);
    v66 |= 4uLL;
    *(void *)(a2 + 1256) = v66;
    *(void *)(a2 + 528) = v68;
    unsigned int v62 = *((_DWORD *)a1 + 30);
  }
  if (v62 == 5)
  {
    uint64_t v69 = *((unsigned __int16 *)a1 + 56);
    v66 |= 8uLL;
    *(void *)(a2 + 1256) = v66;
    *(void *)(a2 + 536) = v69;
    unsigned int v62 = *((_DWORD *)a1 + 30);
  }
  if (v62 == 6)
  {
    uint64_t v70 = a1[112];
    v66 |= 0x10uLL;
    *(void *)(a2 + 1256) = v66;
    *(void *)(a2 + 544) = v70;
    unsigned int v62 = *((_DWORD *)a1 + 30);
  }
  if (v62 == 7)
  {
    uint64_t v71 = *((unsigned int *)a1 + 28);
    *(void *)(a2 + 1256) = v66 | 0x20;
    *(void *)(a2 + 552) = v71;
    unsigned int v62 = *((_DWORD *)a1 + 30);
    if (v62 == 7)
    {
      v66 |= 0x60uLL;
      *(void *)(a2 + 560) = a1[116];
      unsigned int v62 = 7;
    }
    else
    {
      v66 |= 0x20uLL;
    }
  }
  *(void *)(a2 + 568) = v62;
  *(void *)(a2 + 576) = *((unsigned int *)a1 + 31);
  *(void *)(a2 + 584) = a1[128];
  *(void *)(a2 + 592) = *((unsigned int *)a1 + 33);
  *(void *)(a2 + 600) = a1[136];
  uint64_t v72 = *(void *)(a1 + 140);
  v73.n128_u64[0] = v72;
  v73.n128_u64[1] = HIDWORD(v72);
  *(__n128 *)(a2 + 608) = v73;
  *(void *)(a2 + 624) = a1[148];
  *(void *)(a2 + 632) = a1[149];
  *(void *)(a2 + 640) = a1[150];
  *(void *)(a2 + 648) = a1[151];
  *(void *)(a2 + 656) = a1[152];
  *(void *)(a2 + 664) = a1[153];
  *(void *)(a2 + 672) = a1[154];
  *(void *)(a2 + 680) = a1[155];
  uint64_t v74 = *(void *)(a1 + 156);
  v73.n128_u64[0] = v74;
  v73.n128_u64[1] = HIDWORD(v74);
  __n128 v75 = v73;
  uint64_t v76 = *(void *)(a1 + 164);
  v73.n128_u64[0] = v76;
  v73.n128_u64[1] = HIDWORD(v76);
  *(__n128 *)(a2 + 688) = v75;
  *(__n128 *)(a2 + 704) = v73;
  v75.n128_u64[0] = *(void *)(a1 + 172);
  v73.n128_u64[0] = v75.n128_u32[0];
  v73.n128_u64[1] = v75.n128_u32[1];
  __n128 result = v73;
  uint64_t v78 = *(void *)(a1 + 180);
  v73.n128_u64[0] = v78;
  v73.n128_u64[1] = HIDWORD(v78);
  *(__n128 *)(a2 + 720) = result;
  *(__n128 *)(a2 + 736) = v73;
  *(void *)(a2 + 752) = *((unsigned int *)a1 + 47);
  *(void *)(a2 + 760) = a1[192];
  uint64_t v79 = *((unsigned int *)a1 + 49);
  *(void *)(a2 + 1256) = v66 | 0x1FFFFFF80;
  *(void *)(a2 + 768) = v79;
  return result;
}

__n128 sub_1CBE71238(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = v16;
  uint64_t v26 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v25;
  *(void *)(a2 + 192) = v26;
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = a1[53];
  *(void *)(a2 + 216) = a1[52];
  *(void *)(a2 + 224) = v28;
  uint64_t v29 = a1[54];
  uint64_t v30 = a1[55];
  uint64_t v31 = v13 | 0x7F800000;
  *(void *)(a2 + 1248) = v13 | 0x7F800000;
  *(void *)(a2 + 232) = v29;
  *(void *)(a2 + 240) = v30;
  unsigned int v32 = *((_DWORD *)a1 + 16);
  if (!v32)
  {
    uint64_t v33 = a1[56];
    uint64_t v31 = v13 | 0xFF800000;
    *(void *)(a2 + 1248) = v13 | 0xFF800000;
    *(void *)(a2 + 248) = v33;
    unsigned int v32 = *((_DWORD *)a1 + 16);
  }
  if (v32 == 1)
  {
    uint64_t v34 = *((unsigned __int16 *)a1 + 28);
    v31 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v31;
    *(void *)(a2 + 256) = v34;
    unsigned int v32 = *((_DWORD *)a1 + 16);
  }
  if (v32 == 2)
  {
    uint64_t v35 = *((unsigned __int16 *)a1 + 28);
    v31 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v31;
    *(void *)(a2 + 264) = v35;
    unsigned int v32 = *((_DWORD *)a1 + 16);
  }
  if (v32 == 3)
  {
    uint64_t v36 = *((unsigned __int16 *)a1 + 28);
    v31 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v31;
    *(void *)(a2 + 272) = v36;
    unsigned int v32 = *((_DWORD *)a1 + 16);
  }
  if (v32 == 4)
  {
    uint64_t v37 = *((unsigned int *)a1 + 14);
    v31 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v31;
    *(void *)(a2 + 280) = v37;
    unsigned int v32 = *((_DWORD *)a1 + 16);
  }
  if (v32 == 5)
  {
    uint64_t v38 = *((unsigned __int16 *)a1 + 28);
    v31 |= 0x1000000000uLL;
    *(void *)(a2 + 1248) = v31;
    *(void *)(a2 + 288) = v38;
    unsigned int v32 = *((_DWORD *)a1 + 16);
  }
  if (v32 == 6)
  {
    uint64_t v39 = a1[56];
    v31 |= 0x2000000000uLL;
    *(void *)(a2 + 1248) = v31;
    *(void *)(a2 + 296) = v39;
    unsigned int v32 = *((_DWORD *)a1 + 16);
  }
  if (v32 == 7)
  {
    uint64_t v40 = *((unsigned int *)a1 + 14);
    *(void *)(a2 + 1248) = v31 | 0x4000000000;
    *(void *)(a2 + 304) = v40;
    unsigned int v32 = *((_DWORD *)a1 + 16);
    if (v32 == 7)
    {
      v31 |= 0xC000000000uLL;
      *(void *)(a2 + 312) = a1[60];
    }
    else
    {
      v31 |= 0x4000000000uLL;
    }
  }
  uint64_t v41 = v32;
  uint64_t v42 = *((unsigned int *)a1 + 17);
  *(void *)(a2 + 320) = v41;
  *(void *)(a2 + 328) = v42;
  uint64_t v43 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 336) = a1[72];
  *(void *)(a2 + 344) = v43;
  uint64_t v44 = a1[81];
  *(void *)(a2 + 352) = a1[80];
  *(void *)(a2 + 360) = v44;
  uint64_t v45 = a1[82];
  uint64_t v46 = a1[83];
  uint64_t v47 = v31 | 0xFF0000000000;
  *(void *)(a2 + 1248) = v31 | 0xFF0000000000;
  *(void *)(a2 + 368) = v45;
  *(void *)(a2 + 376) = v46;
  unsigned int v48 = *((_DWORD *)a1 + 23);
  if (!v48)
  {
    uint64_t v49 = a1[84];
    uint64_t v47 = v31 | 0x1FF0000000000;
    *(void *)(a2 + 1248) = v31 | 0x1FF0000000000;
    *(void *)(a2 + 384) = v49;
    unsigned int v48 = *((_DWORD *)a1 + 23);
  }
  if (v48 == 1)
  {
    uint64_t v50 = *((unsigned __int16 *)a1 + 42);
    v47 |= 0x2000000000000uLL;
    *(void *)(a2 + 1248) = v47;
    *(void *)(a2 + 392) = v50;
    unsigned int v48 = *((_DWORD *)a1 + 23);
  }
  if (v48 == 2)
  {
    uint64_t v51 = *((unsigned __int16 *)a1 + 42);
    v47 |= 0x4000000000000uLL;
    *(void *)(a2 + 1248) = v47;
    *(void *)(a2 + 400) = v51;
    unsigned int v48 = *((_DWORD *)a1 + 23);
  }
  if (v48 == 3)
  {
    uint64_t v52 = *((unsigned __int16 *)a1 + 42);
    v47 |= 0x8000000000000uLL;
    *(void *)(a2 + 1248) = v47;
    *(void *)(a2 + 408) = v52;
    unsigned int v48 = *((_DWORD *)a1 + 23);
  }
  if (v48 == 4)
  {
    uint64_t v53 = *((unsigned int *)a1 + 21);
    v47 |= 0x10000000000000uLL;
    *(void *)(a2 + 1248) = v47;
    *(void *)(a2 + 416) = v53;
    unsigned int v48 = *((_DWORD *)a1 + 23);
  }
  if (v48 == 5)
  {
    uint64_t v54 = *((unsigned __int16 *)a1 + 42);
    v47 |= 0x20000000000000uLL;
    *(void *)(a2 + 1248) = v47;
    *(void *)(a2 + 424) = v54;
    unsigned int v48 = *((_DWORD *)a1 + 23);
  }
  if (v48 == 6)
  {
    uint64_t v55 = a1[84];
    v47 |= 0x40000000000000uLL;
    *(void *)(a2 + 1248) = v47;
    *(void *)(a2 + 432) = v55;
    unsigned int v48 = *((_DWORD *)a1 + 23);
  }
  if (v48 == 7)
  {
    uint64_t v56 = *((unsigned int *)a1 + 21);
    *(void *)(a2 + 1248) = v47 | 0x80000000000000;
    *(void *)(a2 + 440) = v56;
    unsigned int v48 = *((_DWORD *)a1 + 23);
    if (v48 == 7)
    {
      v47 |= 0x180000000000000uLL;
      *(void *)(a2 + 448) = a1[88];
    }
    else
    {
      v47 |= 0x80000000000000uLL;
    }
  }
  uint64_t v57 = v48;
  uint64_t v58 = *((unsigned int *)a1 + 24);
  *(void *)(a2 + 456) = v57;
  *(void *)(a2 + 464) = v58;
  uint64_t v59 = *((unsigned int *)a1 + 26);
  *(void *)(a2 + 472) = a1[100];
  *(void *)(a2 + 480) = v59;
  uint64_t v60 = a1[108];
  uint64_t v61 = v47 | 0x3E00000000000000;
  *(void *)(a2 + 1248) = v47 | 0x3E00000000000000;
  *(void *)(a2 + 488) = v60;
  unsigned int v62 = *((_DWORD *)a1 + 30);
  if (!v62)
  {
    uint64_t v63 = a1[112];
    uint64_t v61 = v47 | 0x7E00000000000000;
    *(void *)(a2 + 1248) = v47 | 0x7E00000000000000;
    *(void *)(a2 + 496) = v63;
    unsigned int v62 = *((_DWORD *)a1 + 30);
  }
  if (v62 == 1)
  {
    uint64_t v64 = *((unsigned __int16 *)a1 + 56);
    *(void *)(a2 + 1248) = v61 | 0x8000000000000000;
    *(void *)(a2 + 504) = v64;
    unsigned int v62 = *((_DWORD *)a1 + 30);
  }
  if (v62 == 2)
  {
    uint64_t v65 = *((unsigned __int16 *)a1 + 56);
    uint64_t v66 = 1;
    *(void *)(a2 + 1256) = 1;
    *(void *)(a2 + 512) = v65;
    unsigned int v62 = *((_DWORD *)a1 + 30);
  }
  else
  {
    uint64_t v66 = 0;
  }
  if (v62 == 3)
  {
    uint64_t v67 = *((unsigned __int16 *)a1 + 56);
    v66 |= 2uLL;
    *(void *)(a2 + 1256) = v66;
    *(void *)(a2 + 520) = v67;
    unsigned int v62 = *((_DWORD *)a1 + 30);
  }
  if (v62 == 4)
  {
    uint64_t v68 = *((unsigned int *)a1 + 28);
    v66 |= 4uLL;
    *(void *)(a2 + 1256) = v66;
    *(void *)(a2 + 528) = v68;
    unsigned int v62 = *((_DWORD *)a1 + 30);
  }
  if (v62 == 5)
  {
    uint64_t v69 = *((unsigned __int16 *)a1 + 56);
    v66 |= 8uLL;
    *(void *)(a2 + 1256) = v66;
    *(void *)(a2 + 536) = v69;
    unsigned int v62 = *((_DWORD *)a1 + 30);
  }
  if (v62 == 6)
  {
    uint64_t v70 = a1[112];
    v66 |= 0x10uLL;
    *(void *)(a2 + 1256) = v66;
    *(void *)(a2 + 544) = v70;
    unsigned int v62 = *((_DWORD *)a1 + 30);
  }
  if (v62 == 7)
  {
    uint64_t v71 = *((unsigned int *)a1 + 28);
    *(void *)(a2 + 1256) = v66 | 0x20;
    *(void *)(a2 + 552) = v71;
    unsigned int v62 = *((_DWORD *)a1 + 30);
    if (v62 == 7)
    {
      v66 |= 0x60uLL;
      *(void *)(a2 + 560) = a1[116];
      unsigned int v62 = 7;
    }
    else
    {
      v66 |= 0x20uLL;
    }
  }
  *(void *)(a2 + 568) = v62;
  *(void *)(a2 + 576) = *((unsigned int *)a1 + 31);
  *(void *)(a2 + 584) = a1[128];
  *(void *)(a2 + 592) = *((unsigned int *)a1 + 33);
  *(void *)(a2 + 600) = a1[136];
  uint64_t v72 = *(void *)(a1 + 140);
  v73.n128_u64[0] = v72;
  v73.n128_u64[1] = HIDWORD(v72);
  *(__n128 *)(a2 + 608) = v73;
  *(void *)(a2 + 624) = a1[148];
  *(void *)(a2 + 632) = a1[149];
  *(void *)(a2 + 640) = a1[150];
  *(void *)(a2 + 648) = a1[151];
  *(void *)(a2 + 656) = a1[152];
  *(void *)(a2 + 664) = a1[153];
  *(void *)(a2 + 672) = a1[154];
  *(void *)(a2 + 680) = a1[155];
  uint64_t v74 = *(void *)(a1 + 156);
  v73.n128_u64[0] = v74;
  v73.n128_u64[1] = HIDWORD(v74);
  __n128 v75 = v73;
  uint64_t v76 = *(void *)(a1 + 164);
  v73.n128_u64[0] = v76;
  v73.n128_u64[1] = HIDWORD(v76);
  *(__n128 *)(a2 + 688) = v75;
  *(__n128 *)(a2 + 704) = v73;
  v75.n128_u64[0] = *(void *)(a1 + 172);
  v73.n128_u64[0] = v75.n128_u32[0];
  v73.n128_u64[1] = v75.n128_u32[1];
  __n128 result = v73;
  uint64_t v78 = *(void *)(a1 + 180);
  v73.n128_u64[0] = v78;
  v73.n128_u64[1] = HIDWORD(v78);
  *(__n128 *)(a2 + 720) = result;
  *(__n128 *)(a2 + 736) = v73;
  *(void *)(a2 + 752) = *((unsigned int *)a1 + 47);
  *(void *)(a2 + 760) = a1[192];
  uint64_t v79 = *((unsigned int *)a1 + 49);
  *(void *)(a2 + 1256) = v66 | 0x1FFFFFF80;
  *(void *)(a2 + 768) = v79;
  return result;
}

__n128 sub_1CBE718C8(unsigned __int8 *a1, __n128 *a2)
{
  a2[79].n128_u64[0] = 0;
  a2[78].n128_u64[1] = 0;
  unint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = 3;
  a2[78].n128_u64[0] = 3;
  a2->n128_u64[0] = v2;
  a2->n128_u64[1] = v3;
  unsigned int v5 = *((_DWORD *)a1 + 3);
  if (!v5)
  {
    unint64_t v6 = a1[4];
    uint64_t v4 = 7;
    a2[78].n128_u64[0] = 7;
    a2[1].n128_u64[0] = v6;
    unsigned int v5 = *((_DWORD *)a1 + 3);
  }
  if (v5 == 1)
  {
    unint64_t v7 = *((unsigned __int16 *)a1 + 2);
    v4 |= 8uLL;
    a2[78].n128_u64[0] = v4;
    a2[1].n128_u64[1] = v7;
    unsigned int v5 = *((_DWORD *)a1 + 3);
  }
  if (v5 == 2)
  {
    unint64_t v8 = *((unsigned __int16 *)a1 + 2);
    v4 |= 0x10uLL;
    a2[78].n128_u64[0] = v4;
    a2[2].n128_u64[0] = v8;
    unsigned int v5 = *((_DWORD *)a1 + 3);
  }
  if (v5 == 3)
  {
    unint64_t v9 = *((unsigned __int16 *)a1 + 2);
    v4 |= 0x20uLL;
    a2[78].n128_u64[0] = v4;
    a2[2].n128_u64[1] = v9;
    unsigned int v5 = *((_DWORD *)a1 + 3);
  }
  if (v5 == 4)
  {
    unint64_t v10 = *((unsigned int *)a1 + 1);
    v4 |= 0x40uLL;
    a2[78].n128_u64[0] = v4;
    a2[3].n128_u64[0] = v10;
    unsigned int v5 = *((_DWORD *)a1 + 3);
  }
  if (v5 == 5)
  {
    unint64_t v11 = *((unsigned __int16 *)a1 + 2);
    v4 |= 0x80uLL;
    a2[78].n128_u64[0] = v4;
    a2[3].n128_u64[1] = v11;
    unsigned int v5 = *((_DWORD *)a1 + 3);
  }
  if (v5 == 6)
  {
    unint64_t v12 = a1[4];
    v4 |= 0x100uLL;
    a2[78].n128_u64[0] = v4;
    a2[4].n128_u64[0] = v12;
    unsigned int v5 = *((_DWORD *)a1 + 3);
  }
  if (v5 == 7)
  {
    unint64_t v13 = *((unsigned int *)a1 + 1);
    a2[78].n128_u64[0] = v4 | 0x200;
    a2[4].n128_u64[1] = v13;
    unsigned int v5 = *((_DWORD *)a1 + 3);
    if (v5 == 7)
    {
      v4 |= 0x600uLL;
      a2[5].n128_u64[0] = a1[8];
      unsigned int v5 = 7;
    }
    else
    {
      v4 |= 0x200uLL;
    }
  }
  unint64_t v14 = *((unsigned int *)a1 + 4);
  a2[5].n128_u64[1] = v5;
  a2[6].n128_u64[0] = v14;
  unint64_t v15 = *((unsigned int *)a1 + 6);
  a2[6].n128_u64[1] = a1[20];
  a2[7].n128_u64[0] = v15;
  unint64_t v16 = a1[29];
  a2[7].n128_u64[1] = a1[28];
  a2[8].n128_u64[0] = v16;
  unint64_t v17 = a1[30];
  unint64_t v18 = a1[31];
  uint64_t v19 = v4 | 0x7F800;
  a2[78].n128_u64[0] = v4 | 0x7F800;
  a2[8].n128_u64[1] = v17;
  a2[9].n128_u64[0] = v18;
  unsigned int v20 = *((_DWORD *)a1 + 10);
  if (!v20)
  {
    unint64_t v21 = a1[32];
    uint64_t v19 = v4 | 0xFF800;
    a2[78].n128_u64[0] = v4 | 0xFF800;
    a2[9].n128_u64[1] = v21;
    unsigned int v20 = *((_DWORD *)a1 + 10);
  }
  if (v20 == 1)
  {
    unint64_t v22 = *((unsigned __int16 *)a1 + 16);
    v19 |= 0x100000uLL;
    a2[78].n128_u64[0] = v19;
    a2[10].n128_u64[0] = v22;
    unsigned int v20 = *((_DWORD *)a1 + 10);
  }
  if (v20 == 2)
  {
    unint64_t v23 = *((unsigned __int16 *)a1 + 16);
    v19 |= 0x200000uLL;
    a2[78].n128_u64[0] = v19;
    a2[10].n128_u64[1] = v23;
    unsigned int v20 = *((_DWORD *)a1 + 10);
  }
  if (v20 == 3)
  {
    unint64_t v24 = *((unsigned __int16 *)a1 + 16);
    v19 |= 0x400000uLL;
    a2[78].n128_u64[0] = v19;
    a2[11].n128_u64[0] = v24;
    unsigned int v20 = *((_DWORD *)a1 + 10);
  }
  if (v20 == 4)
  {
    unint64_t v25 = *((unsigned int *)a1 + 8);
    v19 |= 0x800000uLL;
    a2[78].n128_u64[0] = v19;
    a2[11].n128_u64[1] = v25;
    unsigned int v20 = *((_DWORD *)a1 + 10);
  }
  if (v20 == 5)
  {
    unint64_t v26 = *((unsigned __int16 *)a1 + 16);
    v19 |= 0x1000000uLL;
    a2[78].n128_u64[0] = v19;
    a2[12].n128_u64[0] = v26;
    unsigned int v20 = *((_DWORD *)a1 + 10);
  }
  if (v20 == 6)
  {
    unint64_t v27 = a1[32];
    v19 |= 0x2000000uLL;
    a2[78].n128_u64[0] = v19;
    a2[12].n128_u64[1] = v27;
    unsigned int v20 = *((_DWORD *)a1 + 10);
  }
  if (v20 == 7)
  {
    unint64_t v28 = *((unsigned int *)a1 + 8);
    a2[78].n128_u64[0] = v19 | 0x4000000;
    a2[13].n128_u64[0] = v28;
    unsigned int v20 = *((_DWORD *)a1 + 10);
    if (v20 == 7)
    {
      v19 |= 0xC000000uLL;
      a2[13].n128_u64[1] = a1[36];
    }
    else
    {
      v19 |= 0x4000000uLL;
    }
  }
  unint64_t v29 = v20;
  unint64_t v30 = *((unsigned int *)a1 + 11);
  a2[14].n128_u64[0] = v29;
  a2[14].n128_u64[1] = v30;
  unint64_t v31 = *((unsigned int *)a1 + 13);
  a2[15].n128_u64[0] = a1[48];
  a2[15].n128_u64[1] = v31;
  unint64_t v32 = a1[57];
  a2[16].n128_u64[0] = a1[56];
  a2[16].n128_u64[1] = v32;
  unint64_t v33 = a1[58];
  unint64_t v34 = a1[59];
  uint64_t v35 = v19 | 0xFF0000000;
  a2[78].n128_u64[0] = v19 | 0xFF0000000;
  a2[17].n128_u64[0] = v33;
  a2[17].n128_u64[1] = v34;
  unsigned int v36 = *((_DWORD *)a1 + 17);
  if (!v36)
  {
    unint64_t v37 = a1[60];
    uint64_t v35 = v19 | 0x1FF0000000;
    a2[78].n128_u64[0] = v19 | 0x1FF0000000;
    a2[18].n128_u64[0] = v37;
    unsigned int v36 = *((_DWORD *)a1 + 17);
  }
  if (v36 == 1)
  {
    unint64_t v38 = *((unsigned __int16 *)a1 + 30);
    v35 |= 0x2000000000uLL;
    a2[78].n128_u64[0] = v35;
    a2[18].n128_u64[1] = v38;
    unsigned int v36 = *((_DWORD *)a1 + 17);
  }
  if (v36 == 2)
  {
    unint64_t v39 = *((unsigned __int16 *)a1 + 30);
    v35 |= 0x4000000000uLL;
    a2[78].n128_u64[0] = v35;
    a2[19].n128_u64[0] = v39;
    unsigned int v36 = *((_DWORD *)a1 + 17);
  }
  if (v36 == 3)
  {
    unint64_t v40 = *((unsigned __int16 *)a1 + 30);
    v35 |= 0x8000000000uLL;
    a2[78].n128_u64[0] = v35;
    a2[19].n128_u64[1] = v40;
    unsigned int v36 = *((_DWORD *)a1 + 17);
  }
  if (v36 == 4)
  {
    unint64_t v41 = *((unsigned int *)a1 + 15);
    v35 |= 0x10000000000uLL;
    a2[78].n128_u64[0] = v35;
    a2[20].n128_u64[0] = v41;
    unsigned int v36 = *((_DWORD *)a1 + 17);
  }
  if (v36 == 5)
  {
    unint64_t v42 = *((unsigned __int16 *)a1 + 30);
    v35 |= 0x20000000000uLL;
    a2[78].n128_u64[0] = v35;
    a2[20].n128_u64[1] = v42;
    unsigned int v36 = *((_DWORD *)a1 + 17);
  }
  if (v36 == 6)
  {
    unint64_t v43 = a1[60];
    v35 |= 0x40000000000uLL;
    a2[78].n128_u64[0] = v35;
    a2[21].n128_u64[0] = v43;
    unsigned int v36 = *((_DWORD *)a1 + 17);
  }
  if (v36 == 7)
  {
    unint64_t v44 = *((unsigned int *)a1 + 15);
    a2[78].n128_u64[0] = v35 | 0x80000000000;
    a2[21].n128_u64[1] = v44;
    unsigned int v36 = *((_DWORD *)a1 + 17);
    if (v36 == 7)
    {
      v35 |= 0x180000000000uLL;
      a2[22].n128_u64[0] = a1[64];
    }
    else
    {
      v35 |= 0x80000000000uLL;
    }
  }
  unint64_t v45 = v36;
  unint64_t v46 = *((unsigned int *)a1 + 18);
  a2[22].n128_u64[1] = v45;
  a2[23].n128_u64[0] = v46;
  unint64_t v47 = *((unsigned int *)a1 + 20);
  a2[23].n128_u64[1] = a1[76];
  a2[24].n128_u64[0] = v47;
  unint64_t v48 = a1[84];
  uint64_t v49 = v35 | 0x3E00000000000;
  a2[78].n128_u64[0] = v35 | 0x3E00000000000;
  a2[24].n128_u64[1] = v48;
  unsigned int v50 = *((_DWORD *)a1 + 24);
  if (!v50)
  {
    unint64_t v51 = a1[88];
    uint64_t v49 = v35 | 0x7E00000000000;
    a2[78].n128_u64[0] = v35 | 0x7E00000000000;
    a2[25].n128_u64[0] = v51;
    unsigned int v50 = *((_DWORD *)a1 + 24);
  }
  if (v50 == 1)
  {
    unint64_t v52 = *((unsigned __int16 *)a1 + 44);
    v49 |= 0x8000000000000uLL;
    a2[78].n128_u64[0] = v49;
    a2[25].n128_u64[1] = v52;
    unsigned int v50 = *((_DWORD *)a1 + 24);
  }
  if (v50 == 2)
  {
    unint64_t v53 = *((unsigned __int16 *)a1 + 44);
    v49 |= 0x10000000000000uLL;
    a2[78].n128_u64[0] = v49;
    a2[26].n128_u64[0] = v53;
    unsigned int v50 = *((_DWORD *)a1 + 24);
  }
  if (v50 == 3)
  {
    unint64_t v54 = *((unsigned __int16 *)a1 + 44);
    v49 |= 0x20000000000000uLL;
    a2[78].n128_u64[0] = v49;
    a2[26].n128_u64[1] = v54;
    unsigned int v50 = *((_DWORD *)a1 + 24);
  }
  if (v50 == 4)
  {
    unint64_t v55 = *((unsigned int *)a1 + 22);
    v49 |= 0x40000000000000uLL;
    a2[78].n128_u64[0] = v49;
    a2[27].n128_u64[0] = v55;
    unsigned int v50 = *((_DWORD *)a1 + 24);
  }
  if (v50 == 5)
  {
    unint64_t v56 = *((unsigned __int16 *)a1 + 44);
    v49 |= 0x80000000000000uLL;
    a2[78].n128_u64[0] = v49;
    a2[27].n128_u64[1] = v56;
    unsigned int v50 = *((_DWORD *)a1 + 24);
  }
  if (v50 == 6)
  {
    unint64_t v57 = a1[88];
    v49 |= 0x100000000000000uLL;
    a2[78].n128_u64[0] = v49;
    a2[28].n128_u64[0] = v57;
    unsigned int v50 = *((_DWORD *)a1 + 24);
  }
  if (v50 == 7)
  {
    unint64_t v58 = *((unsigned int *)a1 + 22);
    a2[78].n128_u64[0] = v49 | 0x200000000000000;
    a2[28].n128_u64[1] = v58;
    unsigned int v50 = *((_DWORD *)a1 + 24);
    if (v50 == 7)
    {
      v49 |= 0x600000000000000uLL;
      a2[29].n128_u64[0] = a1[92];
    }
    else
    {
      v49 |= 0x200000000000000uLL;
    }
  }
  unint64_t v59 = *((unsigned int *)a1 + 25);
  a2[29].n128_u64[1] = v50;
  a2[30].n128_u64[0] = v59;
  unint64_t v60 = *((unsigned int *)a1 + 27);
  a2[30].n128_u64[1] = a1[104];
  a2[31].n128_u64[0] = v60;
  unint64_t v61 = a1[112];
  a2[78].n128_u64[0] = v49 | 0xF800000000000000;
  a2[31].n128_u64[1] = v61;
  uint64_t v62 = *(void *)(a1 + 116);
  v63.n128_u64[0] = v62;
  v63.n128_u64[1] = HIDWORD(v62);
  a2[32] = v63;
  a2[33].n128_u64[0] = a1[124];
  a2[33].n128_u64[1] = a1[125];
  a2[34].n128_u64[0] = a1[126];
  a2[34].n128_u64[1] = a1[127];
  a2[35].n128_u64[0] = a1[128];
  a2[35].n128_u64[1] = a1[129];
  a2[36].n128_u64[0] = a1[130];
  a2[36].n128_u64[1] = a1[131];
  uint64_t v64 = *(void *)(a1 + 132);
  v63.n128_u64[0] = v64;
  v63.n128_u64[1] = HIDWORD(v64);
  __n128 v65 = v63;
  uint64_t v66 = *(void *)(a1 + 140);
  v63.n128_u64[0] = v66;
  v63.n128_u64[1] = HIDWORD(v66);
  a2[37] = v65;
  a2[38] = v63;
  v65.n128_u64[0] = *(void *)(a1 + 148);
  v63.n128_u64[0] = v65.n128_u32[0];
  v63.n128_u64[1] = v65.n128_u32[1];
  __n128 result = v63;
  uint64_t v68 = *(void *)(a1 + 156);
  v63.n128_u64[0] = v68;
  v63.n128_u64[1] = HIDWORD(v68);
  a2[39] = result;
  a2[40] = v63;
  a2[41].n128_u64[0] = *((unsigned int *)a1 + 41);
  a2[41].n128_u64[1] = a1[168];
  unint64_t v69 = *((unsigned int *)a1 + 43);
  a2[78].n128_u64[1] = 0x1FFFFFLL;
  a2[42].n128_u64[0] = v69;
  return result;
}

__n128 sub_1CBE71E30(unsigned __int8 *a1, __n128 *a2)
{
  a2[79].n128_u64[0] = 0;
  a2[78].n128_u64[1] = 0;
  unint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = 3;
  a2[78].n128_u64[0] = 3;
  a2->n128_u64[0] = v2;
  a2->n128_u64[1] = v3;
  unsigned int v5 = *((_DWORD *)a1 + 3);
  if (!v5)
  {
    unint64_t v6 = a1[4];
    uint64_t v4 = 7;
    a2[78].n128_u64[0] = 7;
    a2[1].n128_u64[0] = v6;
    unsigned int v5 = *((_DWORD *)a1 + 3);
  }
  if (v5 == 1)
  {
    unint64_t v7 = *((unsigned __int16 *)a1 + 2);
    v4 |= 8uLL;
    a2[78].n128_u64[0] = v4;
    a2[1].n128_u64[1] = v7;
    unsigned int v5 = *((_DWORD *)a1 + 3);
  }
  if (v5 == 2)
  {
    unint64_t v8 = *((unsigned __int16 *)a1 + 2);
    v4 |= 0x10uLL;
    a2[78].n128_u64[0] = v4;
    a2[2].n128_u64[0] = v8;
    unsigned int v5 = *((_DWORD *)a1 + 3);
  }
  if (v5 == 3)
  {
    unint64_t v9 = *((unsigned __int16 *)a1 + 2);
    v4 |= 0x20uLL;
    a2[78].n128_u64[0] = v4;
    a2[2].n128_u64[1] = v9;
    unsigned int v5 = *((_DWORD *)a1 + 3);
  }
  if (v5 == 4)
  {
    unint64_t v10 = *((unsigned int *)a1 + 1);
    v4 |= 0x40uLL;
    a2[78].n128_u64[0] = v4;
    a2[3].n128_u64[0] = v10;
    unsigned int v5 = *((_DWORD *)a1 + 3);
  }
  if (v5 == 5)
  {
    unint64_t v11 = *((unsigned __int16 *)a1 + 2);
    v4 |= 0x80uLL;
    a2[78].n128_u64[0] = v4;
    a2[3].n128_u64[1] = v11;
    unsigned int v5 = *((_DWORD *)a1 + 3);
  }
  if (v5 == 6)
  {
    unint64_t v12 = a1[4];
    v4 |= 0x100uLL;
    a2[78].n128_u64[0] = v4;
    a2[4].n128_u64[0] = v12;
    unsigned int v5 = *((_DWORD *)a1 + 3);
  }
  if (v5 == 7)
  {
    unint64_t v13 = *((unsigned int *)a1 + 1);
    a2[78].n128_u64[0] = v4 | 0x200;
    a2[4].n128_u64[1] = v13;
    unsigned int v5 = *((_DWORD *)a1 + 3);
    if (v5 == 7)
    {
      v4 |= 0x600uLL;
      a2[5].n128_u64[0] = a1[8];
      unsigned int v5 = 7;
    }
    else
    {
      v4 |= 0x200uLL;
    }
  }
  unint64_t v14 = *((unsigned int *)a1 + 4);
  a2[5].n128_u64[1] = v5;
  a2[6].n128_u64[0] = v14;
  unint64_t v15 = *((unsigned int *)a1 + 6);
  a2[6].n128_u64[1] = a1[20];
  a2[7].n128_u64[0] = v15;
  unint64_t v16 = a1[29];
  a2[7].n128_u64[1] = a1[28];
  a2[8].n128_u64[0] = v16;
  unint64_t v17 = a1[30];
  unint64_t v18 = a1[31];
  uint64_t v19 = v4 | 0x7F800;
  a2[78].n128_u64[0] = v4 | 0x7F800;
  a2[8].n128_u64[1] = v17;
  a2[9].n128_u64[0] = v18;
  unsigned int v20 = *((_DWORD *)a1 + 10);
  if (!v20)
  {
    unint64_t v21 = a1[32];
    uint64_t v19 = v4 | 0xFF800;
    a2[78].n128_u64[0] = v4 | 0xFF800;
    a2[9].n128_u64[1] = v21;
    unsigned int v20 = *((_DWORD *)a1 + 10);
  }
  if (v20 == 1)
  {
    unint64_t v22 = *((unsigned __int16 *)a1 + 16);
    v19 |= 0x100000uLL;
    a2[78].n128_u64[0] = v19;
    a2[10].n128_u64[0] = v22;
    unsigned int v20 = *((_DWORD *)a1 + 10);
  }
  if (v20 == 2)
  {
    unint64_t v23 = *((unsigned __int16 *)a1 + 16);
    v19 |= 0x200000uLL;
    a2[78].n128_u64[0] = v19;
    a2[10].n128_u64[1] = v23;
    unsigned int v20 = *((_DWORD *)a1 + 10);
  }
  if (v20 == 3)
  {
    unint64_t v24 = *((unsigned __int16 *)a1 + 16);
    v19 |= 0x400000uLL;
    a2[78].n128_u64[0] = v19;
    a2[11].n128_u64[0] = v24;
    unsigned int v20 = *((_DWORD *)a1 + 10);
  }
  if (v20 == 4)
  {
    unint64_t v25 = *((unsigned int *)a1 + 8);
    v19 |= 0x800000uLL;
    a2[78].n128_u64[0] = v19;
    a2[11].n128_u64[1] = v25;
    unsigned int v20 = *((_DWORD *)a1 + 10);
  }
  if (v20 == 5)
  {
    unint64_t v26 = *((unsigned __int16 *)a1 + 16);
    v19 |= 0x1000000uLL;
    a2[78].n128_u64[0] = v19;
    a2[12].n128_u64[0] = v26;
    unsigned int v20 = *((_DWORD *)a1 + 10);
  }
  if (v20 == 6)
  {
    unint64_t v27 = a1[32];
    v19 |= 0x2000000uLL;
    a2[78].n128_u64[0] = v19;
    a2[12].n128_u64[1] = v27;
    unsigned int v20 = *((_DWORD *)a1 + 10);
  }
  if (v20 == 7)
  {
    unint64_t v28 = *((unsigned int *)a1 + 8);
    a2[78].n128_u64[0] = v19 | 0x4000000;
    a2[13].n128_u64[0] = v28;
    unsigned int v20 = *((_DWORD *)a1 + 10);
    if (v20 == 7)
    {
      v19 |= 0xC000000uLL;
      a2[13].n128_u64[1] = a1[36];
    }
    else
    {
      v19 |= 0x4000000uLL;
    }
  }
  unint64_t v29 = v20;
  unint64_t v30 = *((unsigned int *)a1 + 11);
  a2[14].n128_u64[0] = v29;
  a2[14].n128_u64[1] = v30;
  unint64_t v31 = *((unsigned int *)a1 + 13);
  a2[15].n128_u64[0] = a1[48];
  a2[15].n128_u64[1] = v31;
  unint64_t v32 = a1[57];
  a2[16].n128_u64[0] = a1[56];
  a2[16].n128_u64[1] = v32;
  unint64_t v33 = a1[58];
  unint64_t v34 = a1[59];
  uint64_t v35 = v19 | 0xFF0000000;
  a2[78].n128_u64[0] = v19 | 0xFF0000000;
  a2[17].n128_u64[0] = v33;
  a2[17].n128_u64[1] = v34;
  unsigned int v36 = *((_DWORD *)a1 + 17);
  if (!v36)
  {
    unint64_t v37 = a1[60];
    uint64_t v35 = v19 | 0x1FF0000000;
    a2[78].n128_u64[0] = v19 | 0x1FF0000000;
    a2[18].n128_u64[0] = v37;
    unsigned int v36 = *((_DWORD *)a1 + 17);
  }
  if (v36 == 1)
  {
    unint64_t v38 = *((unsigned __int16 *)a1 + 30);
    v35 |= 0x2000000000uLL;
    a2[78].n128_u64[0] = v35;
    a2[18].n128_u64[1] = v38;
    unsigned int v36 = *((_DWORD *)a1 + 17);
  }
  if (v36 == 2)
  {
    unint64_t v39 = *((unsigned __int16 *)a1 + 30);
    v35 |= 0x4000000000uLL;
    a2[78].n128_u64[0] = v35;
    a2[19].n128_u64[0] = v39;
    unsigned int v36 = *((_DWORD *)a1 + 17);
  }
  if (v36 == 3)
  {
    unint64_t v40 = *((unsigned __int16 *)a1 + 30);
    v35 |= 0x8000000000uLL;
    a2[78].n128_u64[0] = v35;
    a2[19].n128_u64[1] = v40;
    unsigned int v36 = *((_DWORD *)a1 + 17);
  }
  if (v36 == 4)
  {
    unint64_t v41 = *((unsigned int *)a1 + 15);
    v35 |= 0x10000000000uLL;
    a2[78].n128_u64[0] = v35;
    a2[20].n128_u64[0] = v41;
    unsigned int v36 = *((_DWORD *)a1 + 17);
  }
  if (v36 == 5)
  {
    unint64_t v42 = *((unsigned __int16 *)a1 + 30);
    v35 |= 0x20000000000uLL;
    a2[78].n128_u64[0] = v35;
    a2[20].n128_u64[1] = v42;
    unsigned int v36 = *((_DWORD *)a1 + 17);
  }
  if (v36 == 6)
  {
    unint64_t v43 = a1[60];
    v35 |= 0x40000000000uLL;
    a2[78].n128_u64[0] = v35;
    a2[21].n128_u64[0] = v43;
    unsigned int v36 = *((_DWORD *)a1 + 17);
  }
  if (v36 == 7)
  {
    unint64_t v44 = *((unsigned int *)a1 + 15);
    a2[78].n128_u64[0] = v35 | 0x80000000000;
    a2[21].n128_u64[1] = v44;
    unsigned int v36 = *((_DWORD *)a1 + 17);
    if (v36 == 7)
    {
      v35 |= 0x180000000000uLL;
      a2[22].n128_u64[0] = a1[64];
    }
    else
    {
      v35 |= 0x80000000000uLL;
    }
  }
  unint64_t v45 = v36;
  unint64_t v46 = *((unsigned int *)a1 + 18);
  a2[22].n128_u64[1] = v45;
  a2[23].n128_u64[0] = v46;
  unint64_t v47 = *((unsigned int *)a1 + 20);
  a2[23].n128_u64[1] = a1[76];
  a2[24].n128_u64[0] = v47;
  unint64_t v48 = a1[84];
  uint64_t v49 = v35 | 0x3E00000000000;
  a2[78].n128_u64[0] = v35 | 0x3E00000000000;
  a2[24].n128_u64[1] = v48;
  unsigned int v50 = *((_DWORD *)a1 + 24);
  if (!v50)
  {
    unint64_t v51 = a1[88];
    uint64_t v49 = v35 | 0x7E00000000000;
    a2[78].n128_u64[0] = v35 | 0x7E00000000000;
    a2[25].n128_u64[0] = v51;
    unsigned int v50 = *((_DWORD *)a1 + 24);
  }
  if (v50 == 1)
  {
    unint64_t v52 = *((unsigned __int16 *)a1 + 44);
    v49 |= 0x8000000000000uLL;
    a2[78].n128_u64[0] = v49;
    a2[25].n128_u64[1] = v52;
    unsigned int v50 = *((_DWORD *)a1 + 24);
  }
  if (v50 == 2)
  {
    unint64_t v53 = *((unsigned __int16 *)a1 + 44);
    v49 |= 0x10000000000000uLL;
    a2[78].n128_u64[0] = v49;
    a2[26].n128_u64[0] = v53;
    unsigned int v50 = *((_DWORD *)a1 + 24);
  }
  if (v50 == 3)
  {
    unint64_t v54 = *((unsigned __int16 *)a1 + 44);
    v49 |= 0x20000000000000uLL;
    a2[78].n128_u64[0] = v49;
    a2[26].n128_u64[1] = v54;
    unsigned int v50 = *((_DWORD *)a1 + 24);
  }
  if (v50 == 4)
  {
    unint64_t v55 = *((unsigned int *)a1 + 22);
    v49 |= 0x40000000000000uLL;
    a2[78].n128_u64[0] = v49;
    a2[27].n128_u64[0] = v55;
    unsigned int v50 = *((_DWORD *)a1 + 24);
  }
  if (v50 == 5)
  {
    unint64_t v56 = *((unsigned __int16 *)a1 + 44);
    v49 |= 0x80000000000000uLL;
    a2[78].n128_u64[0] = v49;
    a2[27].n128_u64[1] = v56;
    unsigned int v50 = *((_DWORD *)a1 + 24);
  }
  if (v50 == 6)
  {
    unint64_t v57 = a1[88];
    v49 |= 0x100000000000000uLL;
    a2[78].n128_u64[0] = v49;
    a2[28].n128_u64[0] = v57;
    unsigned int v50 = *((_DWORD *)a1 + 24);
  }
  if (v50 == 7)
  {
    unint64_t v58 = *((unsigned int *)a1 + 22);
    a2[78].n128_u64[0] = v49 | 0x200000000000000;
    a2[28].n128_u64[1] = v58;
    unsigned int v50 = *((_DWORD *)a1 + 24);
    if (v50 == 7)
    {
      v49 |= 0x600000000000000uLL;
      a2[29].n128_u64[0] = a1[92];
    }
    else
    {
      v49 |= 0x200000000000000uLL;
    }
  }
  unint64_t v59 = *((unsigned int *)a1 + 25);
  a2[29].n128_u64[1] = v50;
  a2[30].n128_u64[0] = v59;
  unint64_t v60 = *((unsigned int *)a1 + 27);
  a2[30].n128_u64[1] = a1[104];
  a2[31].n128_u64[0] = v60;
  unint64_t v61 = a1[112];
  a2[78].n128_u64[0] = v49 | 0xF800000000000000;
  a2[31].n128_u64[1] = v61;
  uint64_t v62 = *(void *)(a1 + 116);
  v63.n128_u64[0] = v62;
  v63.n128_u64[1] = HIDWORD(v62);
  a2[32] = v63;
  a2[33].n128_u64[0] = a1[124];
  a2[33].n128_u64[1] = a1[125];
  a2[34].n128_u64[0] = a1[126];
  a2[34].n128_u64[1] = a1[127];
  a2[35].n128_u64[0] = a1[128];
  a2[35].n128_u64[1] = a1[129];
  a2[36].n128_u64[0] = a1[130];
  a2[36].n128_u64[1] = a1[131];
  uint64_t v64 = *(void *)(a1 + 132);
  v63.n128_u64[0] = v64;
  v63.n128_u64[1] = HIDWORD(v64);
  __n128 v65 = v63;
  uint64_t v66 = *(void *)(a1 + 140);
  v63.n128_u64[0] = v66;
  v63.n128_u64[1] = HIDWORD(v66);
  a2[37] = v65;
  a2[38] = v63;
  v65.n128_u64[0] = *(void *)(a1 + 148);
  v63.n128_u64[0] = v65.n128_u32[0];
  v63.n128_u64[1] = v65.n128_u32[1];
  __n128 result = v63;
  uint64_t v68 = *(void *)(a1 + 156);
  v63.n128_u64[0] = v68;
  v63.n128_u64[1] = HIDWORD(v68);
  a2[39] = result;
  a2[40] = v63;
  a2[41].n128_u64[0] = *((unsigned int *)a1 + 41);
  a2[41].n128_u64[1] = a1[168];
  unint64_t v69 = *((unsigned int *)a1 + 43);
  a2[78].n128_u64[1] = 0x1FFFFFLL;
  a2[42].n128_u64[0] = v69;
  return result;
}

__n128 sub_1CBE72398(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
      unsigned int v16 = 7;
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v16;
  *(void *)(a2 + 192) = v25;
  uint64_t v26 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v26;
  uint64_t v27 = a1[53];
  *(void *)(a2 + 216) = a1[52];
  *(void *)(a2 + 224) = v27;
  uint64_t v28 = *((void *)a1 + 7);
  v29.n128_u64[0] = v28;
  v29.n128_u64[1] = HIDWORD(v28);
  *(__n128 *)(a2 + 232) = v29;
  uint64_t v30 = a1[65];
  *(void *)(a2 + 248) = a1[64];
  *(void *)(a2 + 256) = v30;
  uint64_t v31 = a1[67];
  *(void *)(a2 + 264) = a1[66];
  *(void *)(a2 + 272) = v31;
  uint64_t v32 = a1[69];
  *(void *)(a2 + 280) = a1[68];
  *(void *)(a2 + 288) = v32;
  uint64_t v33 = a1[71];
  *(void *)(a2 + 296) = a1[70];
  *(void *)(a2 + 304) = v33;
  uint64_t v34 = *((void *)a1 + 9);
  uint64_t v35 = *((void *)a1 + 10);
  v29.n128_u64[0] = v34;
  v29.n128_u64[1] = HIDWORD(v34);
  __n128 v36 = v29;
  v29.n128_u64[0] = v35;
  v29.n128_u64[1] = HIDWORD(v35);
  *(__n128 *)(a2 + 312) = v36;
  *(__n128 *)(a2 + 328) = v29;
  v36.n128_u64[0] = *((void *)a1 + 11);
  uint64_t v37 = *((void *)a1 + 12);
  v29.n128_u64[0] = v36.n128_u32[0];
  v29.n128_u64[1] = v36.n128_u32[1];
  __n128 result = v29;
  v29.n128_u64[0] = v37;
  v29.n128_u64[1] = HIDWORD(v37);
  *(__n128 *)(a2 + 344) = result;
  *(__n128 *)(a2 + 360) = v29;
  uint64_t v39 = a1[104];
  *(void *)(a2 + 1248) = v13 | 0xFFFFFF800000;
  *(void *)(a2 + 376) = v39;
  return result;
}

__n128 sub_1CBE7266C(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = v16;
  uint64_t v26 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v25;
  *(void *)(a2 + 192) = v26;
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = a1[52];
  uint64_t v29 = a1[53];
  uint64_t v30 = v13 | 0x1F800000;
  *(void *)(a2 + 1248) = v13 | 0x1F800000;
  *(void *)(a2 + 216) = v28;
  *(void *)(a2 + 224) = v29;
  unsigned int v31 = *((_DWORD *)a1 + 16);
  if (!v31)
  {
    uint64_t v32 = a1[56];
    uint64_t v30 = v13 | 0x3F800000;
    *(void *)(a2 + 1248) = v13 | 0x3F800000;
    *(void *)(a2 + 232) = v32;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 1)
  {
    uint64_t v33 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x40000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 240) = v33;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 2)
  {
    uint64_t v34 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x80000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 248) = v34;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 3)
  {
    uint64_t v35 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 256) = v35;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 4)
  {
    uint64_t v36 = *((unsigned int *)a1 + 14);
    v30 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 264) = v36;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 5)
  {
    uint64_t v37 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 272) = v37;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 6)
  {
    uint64_t v38 = a1[56];
    v30 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 280) = v38;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 7)
  {
    uint64_t v39 = *((unsigned int *)a1 + 14);
    *(void *)(a2 + 1248) = v30 | 0x1000000000;
    *(void *)(a2 + 288) = v39;
    unsigned int v31 = *((_DWORD *)a1 + 16);
    if (v31 == 7)
    {
      v30 |= 0x3000000000uLL;
      *(void *)(a2 + 296) = a1[60];
    }
    else
    {
      v30 |= 0x1000000000uLL;
    }
  }
  uint64_t v40 = *((unsigned int *)a1 + 17);
  *(void *)(a2 + 304) = v31;
  *(void *)(a2 + 312) = v40;
  uint64_t v41 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 320) = a1[72];
  *(void *)(a2 + 328) = v41;
  uint64_t v42 = a1[81];
  *(void *)(a2 + 336) = a1[80];
  *(void *)(a2 + 344) = v42;
  uint64_t v43 = a1[88];
  *(void *)(a2 + 352) = *((unsigned int *)a1 + 21);
  *(void *)(a2 + 360) = v43;
  uint64_t v44 = a1[90];
  *(void *)(a2 + 368) = a1[89];
  *(void *)(a2 + 376) = v44;
  uint64_t v45 = a1[92];
  *(void *)(a2 + 384) = a1[91];
  *(void *)(a2 + 392) = v45;
  uint64_t v46 = a1[94];
  *(void *)(a2 + 400) = a1[93];
  *(void *)(a2 + 408) = v46;
  uint64_t v47 = a1[96];
  *(void *)(a2 + 416) = a1[95];
  *(void *)(a2 + 424) = v47;
  uint64_t v48 = *(void *)(a1 + 100);
  v49.n128_u64[0] = v48;
  v49.n128_u64[1] = HIDWORD(v48);
  __n128 v50 = v49;
  uint64_t v51 = *(void *)(a1 + 108);
  v49.n128_u64[0] = v51;
  v49.n128_u64[1] = HIDWORD(v51);
  *(__n128 *)(a2 + 432) = v50;
  *(__n128 *)(a2 + 448) = v49;
  v50.n128_u64[0] = *(void *)(a1 + 116);
  v49.n128_u64[0] = v50.n128_u32[0];
  v49.n128_u64[1] = v50.n128_u32[1];
  __n128 result = v49;
  uint64_t v53 = *(void *)(a1 + 124);
  v49.n128_u64[0] = v53;
  v49.n128_u64[1] = HIDWORD(v53);
  *(__n128 *)(a2 + 464) = result;
  *(__n128 *)(a2 + 480) = v49;
  uint64_t v54 = *((unsigned int *)a1 + 33);
  uint64_t v55 = a1[136];
  *(void *)(a2 + 1248) = v30 | 0xFFFFFFC000000000;
  *(void *)(a2 + 496) = v54;
  *(void *)(a2 + 504) = v55;
  return result;
}

__n128 sub_1CBE72A6C(unsigned __int16 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(void *)(a2 + 1256) = 0;
  *(void *)a2 = *a1;
  uint64_t v2 = *(void *)(a1 + 2);
  v3.n128_u64[0] = v2;
  v3.n128_u64[1] = HIDWORD(v2);
  *(__n128 *)(a2 + 8) = v3;
  uint64_t v4 = *((unsigned __int8 *)a1 + 13);
  *(void *)(a2 + 24) = *((unsigned __int8 *)a1 + 12);
  *(void *)(a2 + 32) = v4;
  uint64_t v5 = *((unsigned __int8 *)a1 + 20);
  *(void *)(a2 + 40) = *((unsigned int *)a1 + 4);
  *(void *)(a2 + 48) = v5;
  uint64_t v6 = a1[12];
  *(void *)(a2 + 56) = *((unsigned __int8 *)a1 + 21);
  *(void *)(a2 + 64) = v6;
  uint64_t v7 = *(void *)(a1 + 14);
  v3.n128_u64[0] = v7;
  v3.n128_u64[1] = HIDWORD(v7);
  *(__n128 *)(a2 + 72) = v3;
  uint64_t v8 = *((unsigned __int8 *)a1 + 37);
  *(void *)(a2 + 88) = *((unsigned __int8 *)a1 + 36);
  *(void *)(a2 + 96) = v8;
  uint64_t v9 = *((unsigned __int8 *)a1 + 44);
  *(void *)(a2 + 104) = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 112) = v9;
  uint64_t v10 = *((void *)a1 + 6);
  v3.n128_u64[0] = v10;
  v3.n128_u64[1] = HIDWORD(v10);
  *(__n128 *)(a2 + 120) = v3;
  *(void *)(a2 + 136) = a1[28];
  uint64_t v11 = *(void *)(a1 + 30);
  v3.n128_u64[0] = v11;
  v3.n128_u64[1] = HIDWORD(v11);
  *(__n128 *)(a2 + 144) = v3;
  uint64_t v12 = *((unsigned __int8 *)a1 + 69);
  *(void *)(a2 + 160) = *((unsigned __int8 *)a1 + 68);
  *(void *)(a2 + 168) = v12;
  uint64_t v13 = *((unsigned __int8 *)a1 + 76);
  *(void *)(a2 + 176) = *((unsigned int *)a1 + 18);
  *(void *)(a2 + 184) = v13;
  uint64_t v14 = *((void *)a1 + 10);
  v3.n128_u64[0] = v14;
  v3.n128_u64[1] = HIDWORD(v14);
  *(__n128 *)(a2 + 192) = v3;
  uint64_t v15 = *((void *)a1 + 11);
  v3.n128_u64[0] = v15;
  v3.n128_u64[1] = HIDWORD(v15);
  *(__n128 *)(a2 + 208) = v3;
  uint64_t v16 = *((unsigned __int8 *)a1 + 97);
  *(void *)(a2 + 224) = *((unsigned __int8 *)a1 + 96);
  *(void *)(a2 + 232) = v16;
  uint64_t v17 = *((unsigned __int8 *)a1 + 99);
  *(void *)(a2 + 240) = *((unsigned __int8 *)a1 + 98);
  *(void *)(a2 + 248) = v17;
  uint64_t v18 = *((unsigned __int8 *)a1 + 101);
  *(void *)(a2 + 256) = *((unsigned __int8 *)a1 + 100);
  *(void *)(a2 + 264) = v18;
  uint64_t v19 = *((unsigned __int8 *)a1 + 103);
  *(void *)(a2 + 272) = *((unsigned __int8 *)a1 + 102);
  *(void *)(a2 + 280) = v19;
  *(void *)(a2 + 288) = *((unsigned __int8 *)a1 + 104);
  uint64_t v20 = *(void *)(a1 + 54);
  v3.n128_u64[0] = v20;
  v3.n128_u64[1] = HIDWORD(v20);
  __n128 v21 = v3;
  uint64_t v22 = *(void *)(a1 + 58);
  v3.n128_u64[0] = v22;
  v3.n128_u64[1] = HIDWORD(v22);
  *(__n128 *)(a2 + 296) = v21;
  *(__n128 *)(a2 + 312) = v3;
  v21.n128_u64[0] = *(void *)(a1 + 62);
  v3.n128_u64[0] = v21.n128_u32[0];
  v3.n128_u64[1] = v21.n128_u32[1];
  __n128 result = v3;
  uint64_t v24 = *(void *)(a1 + 66);
  v3.n128_u64[0] = v24;
  v3.n128_u64[1] = HIDWORD(v24);
  *(__n128 *)(a2 + 328) = result;
  *(__n128 *)(a2 + 344) = v3;
  uint64_t v25 = *((unsigned int *)a1 + 35);
  uint64_t v26 = *((unsigned __int8 *)a1 + 144);
  *(void *)(a2 + 1248) = 0x7FFFFFFFFFFFLL;
  *(void *)(a2 + 360) = v25;
  *(void *)(a2 + 368) = v26;
  return result;
}

__n128 sub_1CBE72B9C(unsigned __int16 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(void *)(a2 + 1256) = 0;
  *(void *)a2 = *a1;
  uint64_t v2 = *(void *)(a1 + 2);
  v3.n128_u64[0] = v2;
  v3.n128_u64[1] = HIDWORD(v2);
  *(__n128 *)(a2 + 8) = v3;
  uint64_t v4 = *((unsigned __int8 *)a1 + 13);
  *(void *)(a2 + 24) = *((unsigned __int8 *)a1 + 12);
  *(void *)(a2 + 32) = v4;
  uint64_t v5 = *((unsigned __int8 *)a1 + 20);
  *(void *)(a2 + 40) = *((unsigned int *)a1 + 4);
  *(void *)(a2 + 48) = v5;
  uint64_t v6 = a1[12];
  *(void *)(a2 + 56) = *((unsigned __int8 *)a1 + 21);
  *(void *)(a2 + 64) = v6;
  uint64_t v7 = *(void *)(a1 + 14);
  v3.n128_u64[0] = v7;
  v3.n128_u64[1] = HIDWORD(v7);
  *(__n128 *)(a2 + 72) = v3;
  uint64_t v8 = *((unsigned __int8 *)a1 + 37);
  *(void *)(a2 + 88) = *((unsigned __int8 *)a1 + 36);
  *(void *)(a2 + 96) = v8;
  uint64_t v9 = *((unsigned __int8 *)a1 + 44);
  *(void *)(a2 + 104) = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 112) = v9;
  uint64_t v10 = *((void *)a1 + 6);
  v3.n128_u64[0] = v10;
  v3.n128_u64[1] = HIDWORD(v10);
  *(__n128 *)(a2 + 120) = v3;
  *(void *)(a2 + 136) = a1[28];
  uint64_t v11 = *(void *)(a1 + 30);
  v3.n128_u64[0] = v11;
  v3.n128_u64[1] = HIDWORD(v11);
  *(__n128 *)(a2 + 144) = v3;
  uint64_t v12 = *((unsigned __int8 *)a1 + 69);
  *(void *)(a2 + 160) = *((unsigned __int8 *)a1 + 68);
  *(void *)(a2 + 168) = v12;
  uint64_t v13 = *((unsigned __int8 *)a1 + 76);
  *(void *)(a2 + 176) = *((unsigned int *)a1 + 18);
  *(void *)(a2 + 184) = v13;
  uint64_t v14 = *((void *)a1 + 10);
  v3.n128_u64[0] = v14;
  v3.n128_u64[1] = HIDWORD(v14);
  *(__n128 *)(a2 + 192) = v3;
  uint64_t v15 = *((void *)a1 + 11);
  v3.n128_u64[0] = v15;
  v3.n128_u64[1] = HIDWORD(v15);
  *(__n128 *)(a2 + 208) = v3;
  uint64_t v16 = *((unsigned __int8 *)a1 + 97);
  *(void *)(a2 + 224) = *((unsigned __int8 *)a1 + 96);
  *(void *)(a2 + 232) = v16;
  uint64_t v17 = *((unsigned __int8 *)a1 + 99);
  *(void *)(a2 + 240) = *((unsigned __int8 *)a1 + 98);
  *(void *)(a2 + 248) = v17;
  uint64_t v18 = *((unsigned __int8 *)a1 + 101);
  *(void *)(a2 + 256) = *((unsigned __int8 *)a1 + 100);
  *(void *)(a2 + 264) = v18;
  uint64_t v19 = *((unsigned __int8 *)a1 + 103);
  *(void *)(a2 + 272) = *((unsigned __int8 *)a1 + 102);
  *(void *)(a2 + 280) = v19;
  *(void *)(a2 + 288) = *((unsigned __int8 *)a1 + 104);
  uint64_t v20 = *(void *)(a1 + 54);
  v3.n128_u64[0] = v20;
  v3.n128_u64[1] = HIDWORD(v20);
  __n128 v21 = v3;
  uint64_t v22 = *(void *)(a1 + 58);
  v3.n128_u64[0] = v22;
  v3.n128_u64[1] = HIDWORD(v22);
  *(__n128 *)(a2 + 296) = v21;
  *(__n128 *)(a2 + 312) = v3;
  v21.n128_u64[0] = *(void *)(a1 + 62);
  v3.n128_u64[0] = v21.n128_u32[0];
  v3.n128_u64[1] = v21.n128_u32[1];
  __n128 result = v3;
  uint64_t v24 = *(void *)(a1 + 66);
  v3.n128_u64[0] = v24;
  v3.n128_u64[1] = HIDWORD(v24);
  *(__n128 *)(a2 + 328) = result;
  *(__n128 *)(a2 + 344) = v3;
  uint64_t v25 = *((unsigned int *)a1 + 35);
  uint64_t v26 = *((unsigned __int8 *)a1 + 144);
  *(void *)(a2 + 1248) = 0x7FFFFFFFFFFFLL;
  *(void *)(a2 + 360) = v25;
  *(void *)(a2 + 368) = v26;
  return result;
}

__n128 sub_1CBE72CCC(unsigned __int16 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(void *)(a2 + 1256) = 0;
  *(void *)a2 = *a1;
  uint64_t v2 = *(void *)(a1 + 2);
  v3.n128_u64[0] = v2;
  v3.n128_u64[1] = HIDWORD(v2);
  *(__n128 *)(a2 + 8) = v3;
  uint64_t v4 = *((unsigned __int8 *)a1 + 13);
  *(void *)(a2 + 24) = *((unsigned __int8 *)a1 + 12);
  *(void *)(a2 + 32) = v4;
  uint64_t v5 = *((unsigned __int8 *)a1 + 20);
  *(void *)(a2 + 40) = *((unsigned int *)a1 + 4);
  *(void *)(a2 + 48) = v5;
  uint64_t v6 = a1[12];
  *(void *)(a2 + 56) = *((unsigned __int8 *)a1 + 21);
  *(void *)(a2 + 64) = v6;
  uint64_t v7 = *(void *)(a1 + 14);
  v3.n128_u64[0] = v7;
  v3.n128_u64[1] = HIDWORD(v7);
  *(__n128 *)(a2 + 72) = v3;
  uint64_t v8 = *((unsigned __int8 *)a1 + 37);
  *(void *)(a2 + 88) = *((unsigned __int8 *)a1 + 36);
  *(void *)(a2 + 96) = v8;
  uint64_t v9 = *((unsigned __int8 *)a1 + 44);
  *(void *)(a2 + 104) = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 112) = v9;
  uint64_t v10 = *((void *)a1 + 6);
  v3.n128_u64[0] = v10;
  v3.n128_u64[1] = HIDWORD(v10);
  *(__n128 *)(a2 + 120) = v3;
  *(void *)(a2 + 136) = a1[28];
  uint64_t v11 = *(void *)(a1 + 30);
  v3.n128_u64[0] = v11;
  v3.n128_u64[1] = HIDWORD(v11);
  *(__n128 *)(a2 + 144) = v3;
  uint64_t v12 = *((unsigned __int8 *)a1 + 69);
  *(void *)(a2 + 160) = *((unsigned __int8 *)a1 + 68);
  *(void *)(a2 + 168) = v12;
  uint64_t v13 = *((unsigned __int8 *)a1 + 76);
  *(void *)(a2 + 176) = *((unsigned int *)a1 + 18);
  *(void *)(a2 + 184) = v13;
  uint64_t v14 = *((void *)a1 + 10);
  v3.n128_u64[0] = v14;
  v3.n128_u64[1] = HIDWORD(v14);
  *(__n128 *)(a2 + 192) = v3;
  uint64_t v15 = *((void *)a1 + 11);
  v3.n128_u64[0] = v15;
  v3.n128_u64[1] = HIDWORD(v15);
  *(__n128 *)(a2 + 208) = v3;
  uint64_t v16 = *((unsigned __int8 *)a1 + 97);
  *(void *)(a2 + 224) = *((unsigned __int8 *)a1 + 96);
  *(void *)(a2 + 232) = v16;
  uint64_t v17 = *((unsigned __int8 *)a1 + 99);
  *(void *)(a2 + 240) = *((unsigned __int8 *)a1 + 98);
  *(void *)(a2 + 248) = v17;
  uint64_t v18 = *((unsigned __int8 *)a1 + 101);
  *(void *)(a2 + 256) = *((unsigned __int8 *)a1 + 100);
  *(void *)(a2 + 264) = v18;
  uint64_t v19 = *((unsigned __int8 *)a1 + 103);
  *(void *)(a2 + 272) = *((unsigned __int8 *)a1 + 102);
  *(void *)(a2 + 280) = v19;
  *(void *)(a2 + 288) = *((unsigned __int8 *)a1 + 104);
  uint64_t v20 = *(void *)(a1 + 54);
  v3.n128_u64[0] = v20;
  v3.n128_u64[1] = HIDWORD(v20);
  __n128 v21 = v3;
  uint64_t v22 = *(void *)(a1 + 58);
  v3.n128_u64[0] = v22;
  v3.n128_u64[1] = HIDWORD(v22);
  *(__n128 *)(a2 + 296) = v21;
  *(__n128 *)(a2 + 312) = v3;
  v21.n128_u64[0] = *(void *)(a1 + 62);
  v3.n128_u64[0] = v21.n128_u32[0];
  v3.n128_u64[1] = v21.n128_u32[1];
  __n128 result = v3;
  uint64_t v24 = *(void *)(a1 + 66);
  v3.n128_u64[0] = v24;
  v3.n128_u64[1] = HIDWORD(v24);
  *(__n128 *)(a2 + 328) = result;
  *(__n128 *)(a2 + 344) = v3;
  uint64_t v25 = *((unsigned int *)a1 + 35);
  uint64_t v26 = *((unsigned __int8 *)a1 + 144);
  *(void *)(a2 + 1248) = 0x7FFFFFFFFFFFLL;
  *(void *)(a2 + 360) = v25;
  *(void *)(a2 + 368) = v26;
  return result;
}

__n128 sub_1CBE72DFC(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = v16;
  uint64_t v26 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v25;
  *(void *)(a2 + 192) = v26;
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = a1[52];
  uint64_t v29 = a1[53];
  uint64_t v30 = v13 | 0x1F800000;
  *(void *)(a2 + 1248) = v13 | 0x1F800000;
  *(void *)(a2 + 216) = v28;
  *(void *)(a2 + 224) = v29;
  unsigned int v31 = *((_DWORD *)a1 + 16);
  if (!v31)
  {
    uint64_t v32 = a1[56];
    uint64_t v30 = v13 | 0x3F800000;
    *(void *)(a2 + 1248) = v13 | 0x3F800000;
    *(void *)(a2 + 232) = v32;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 1)
  {
    uint64_t v33 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x40000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 240) = v33;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 2)
  {
    uint64_t v34 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x80000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 248) = v34;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 3)
  {
    uint64_t v35 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 256) = v35;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 4)
  {
    uint64_t v36 = *((unsigned int *)a1 + 14);
    v30 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 264) = v36;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 5)
  {
    uint64_t v37 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 272) = v37;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 6)
  {
    uint64_t v38 = a1[56];
    v30 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 280) = v38;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 7)
  {
    uint64_t v39 = *((unsigned int *)a1 + 14);
    *(void *)(a2 + 1248) = v30 | 0x1000000000;
    *(void *)(a2 + 288) = v39;
    unsigned int v31 = *((_DWORD *)a1 + 16);
    if (v31 == 7)
    {
      v30 |= 0x3000000000uLL;
      *(void *)(a2 + 296) = a1[60];
      unsigned int v31 = 7;
    }
    else
    {
      v30 |= 0x1000000000uLL;
    }
  }
  uint64_t v40 = *((unsigned int *)a1 + 17);
  *(void *)(a2 + 304) = v31;
  *(void *)(a2 + 312) = v40;
  uint64_t v41 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 320) = a1[72];
  *(void *)(a2 + 328) = v41;
  uint64_t v42 = a1[81];
  *(void *)(a2 + 336) = a1[80];
  *(void *)(a2 + 344) = v42;
  uint64_t v43 = *(void *)(a1 + 84);
  v44.n128_u64[0] = v43;
  v44.n128_u64[1] = HIDWORD(v43);
  *(__n128 *)(a2 + 352) = v44;
  uint64_t v45 = a1[93];
  *(void *)(a2 + 368) = a1[92];
  *(void *)(a2 + 376) = v45;
  uint64_t v46 = a1[95];
  *(void *)(a2 + 384) = a1[94];
  *(void *)(a2 + 392) = v46;
  uint64_t v47 = a1[97];
  *(void *)(a2 + 400) = a1[96];
  *(void *)(a2 + 408) = v47;
  uint64_t v48 = a1[99];
  *(void *)(a2 + 416) = a1[98];
  *(void *)(a2 + 424) = v48;
  *(void *)(a2 + 432) = a1[100];
  uint64_t v49 = *((void *)a1 + 13);
  uint64_t v50 = *((void *)a1 + 14);
  v44.n128_u64[0] = v49;
  v44.n128_u64[1] = HIDWORD(v49);
  __n128 v51 = v44;
  v44.n128_u64[0] = v50;
  v44.n128_u64[1] = HIDWORD(v50);
  *(__n128 *)(a2 + 440) = v51;
  *(__n128 *)(a2 + 456) = v44;
  v51.n128_u64[0] = *((void *)a1 + 15);
  uint64_t v52 = *((void *)a1 + 16);
  v44.n128_u64[0] = v51.n128_u32[0];
  v44.n128_u64[1] = v51.n128_u32[1];
  __n128 result = v44;
  v44.n128_u64[0] = v52;
  v44.n128_u64[1] = HIDWORD(v52);
  *(__n128 *)(a2 + 472) = result;
  *(__n128 *)(a2 + 488) = v44;
  uint64_t v54 = *((unsigned int *)a1 + 34);
  *(void *)(a2 + 1248) = v30 | 0xFFFFFFC000000000;
  uint64_t v55 = a1[140];
  *(void *)(a2 + 1256) = 1;
  *(void *)(a2 + 504) = v54;
  *(void *)(a2 + 512) = v55;
  return result;
}

__n128 sub_1CBE7320C(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = v16;
  uint64_t v26 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v25;
  *(void *)(a2 + 192) = v26;
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = a1[52];
  uint64_t v29 = a1[53];
  uint64_t v30 = v13 | 0x1F800000;
  *(void *)(a2 + 1248) = v13 | 0x1F800000;
  *(void *)(a2 + 216) = v28;
  *(void *)(a2 + 224) = v29;
  unsigned int v31 = *((_DWORD *)a1 + 16);
  if (!v31)
  {
    uint64_t v32 = a1[56];
    uint64_t v30 = v13 | 0x3F800000;
    *(void *)(a2 + 1248) = v13 | 0x3F800000;
    *(void *)(a2 + 232) = v32;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 1)
  {
    uint64_t v33 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x40000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 240) = v33;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 2)
  {
    uint64_t v34 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x80000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 248) = v34;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 3)
  {
    uint64_t v35 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 256) = v35;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 4)
  {
    uint64_t v36 = *((unsigned int *)a1 + 14);
    v30 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 264) = v36;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 5)
  {
    uint64_t v37 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 272) = v37;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 6)
  {
    uint64_t v38 = a1[56];
    v30 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 280) = v38;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 7)
  {
    uint64_t v39 = *((unsigned int *)a1 + 14);
    *(void *)(a2 + 1248) = v30 | 0x1000000000;
    *(void *)(a2 + 288) = v39;
    unsigned int v31 = *((_DWORD *)a1 + 16);
    if (v31 == 7)
    {
      v30 |= 0x3000000000uLL;
      *(void *)(a2 + 296) = a1[60];
    }
    else
    {
      v30 |= 0x1000000000uLL;
    }
  }
  uint64_t v40 = *((unsigned int *)a1 + 17);
  *(void *)(a2 + 304) = v31;
  *(void *)(a2 + 312) = v40;
  uint64_t v41 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 320) = a1[72];
  *(void *)(a2 + 328) = v41;
  uint64_t v42 = a1[81];
  *(void *)(a2 + 336) = a1[80];
  *(void *)(a2 + 344) = v42;
  uint64_t v43 = *(void *)(a1 + 84);
  v44.n128_u64[0] = v43;
  v44.n128_u64[1] = HIDWORD(v43);
  *(__n128 *)(a2 + 352) = v44;
  uint64_t v45 = a1[93];
  *(void *)(a2 + 368) = a1[92];
  *(void *)(a2 + 376) = v45;
  uint64_t v46 = a1[95];
  *(void *)(a2 + 384) = a1[94];
  *(void *)(a2 + 392) = v46;
  uint64_t v47 = a1[97];
  *(void *)(a2 + 400) = a1[96];
  *(void *)(a2 + 408) = v47;
  uint64_t v48 = a1[99];
  *(void *)(a2 + 416) = a1[98];
  *(void *)(a2 + 424) = v48;
  uint64_t v49 = *(void *)(a1 + 100);
  v44.n128_u64[0] = v49;
  v44.n128_u64[1] = HIDWORD(v49);
  __n128 v50 = v44;
  uint64_t v51 = *(void *)(a1 + 108);
  v44.n128_u64[0] = v51;
  v44.n128_u64[1] = HIDWORD(v51);
  *(__n128 *)(a2 + 432) = v50;
  *(__n128 *)(a2 + 448) = v44;
  v50.n128_u64[0] = *(void *)(a1 + 116);
  v44.n128_u64[0] = v50.n128_u32[0];
  v44.n128_u64[1] = v50.n128_u32[1];
  __n128 result = v44;
  uint64_t v53 = *(void *)(a1 + 124);
  v44.n128_u64[0] = v53;
  v44.n128_u64[1] = HIDWORD(v53);
  *(__n128 *)(a2 + 464) = result;
  *(__n128 *)(a2 + 480) = v44;
  uint64_t v54 = a1[132];
  *(void *)(a2 + 1248) = v30 | 0x7FFFFFC000000000;
  *(void *)(a2 + 496) = v54;
  return result;
}

__n128 sub_1CBE73608(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  uint64_t v13 = *((unsigned int *)a1 + 5);
  *(void *)(a2 + 88) = a1[16];
  *(void *)(a2 + 96) = v13;
  uint64_t v14 = a1[24];
  uint64_t v15 = a1[25];
  uint64_t v16 = v3 | 0x7E00;
  *(void *)(a2 + 1248) = v3 | 0x7E00;
  *(void *)(a2 + 104) = v14;
  *(void *)(a2 + 112) = v15;
  unsigned int v17 = *((_DWORD *)a1 + 9);
  if (!v17)
  {
    uint64_t v18 = a1[28];
    uint64_t v16 = v3 | 0xFE00;
    *(void *)(a2 + 1248) = v3 | 0xFE00;
    *(void *)(a2 + 120) = v18;
    unsigned int v17 = *((_DWORD *)a1 + 9);
  }
  if (v17 == 1)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v16 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 128) = v19;
    unsigned int v17 = *((_DWORD *)a1 + 9);
  }
  if (v17 == 2)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v16 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 136) = v20;
    unsigned int v17 = *((_DWORD *)a1 + 9);
  }
  if (v17 == 3)
  {
    uint64_t v21 = *((unsigned __int16 *)a1 + 14);
    v16 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 144) = v21;
    unsigned int v17 = *((_DWORD *)a1 + 9);
  }
  if (v17 == 4)
  {
    uint64_t v22 = *((unsigned int *)a1 + 7);
    v16 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 152) = v22;
    unsigned int v17 = *((_DWORD *)a1 + 9);
  }
  if (v17 == 5)
  {
    uint64_t v23 = *((unsigned __int16 *)a1 + 14);
    v16 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 160) = v23;
    unsigned int v17 = *((_DWORD *)a1 + 9);
  }
  if (v17 == 6)
  {
    uint64_t v24 = a1[28];
    v16 |= 0x200000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 168) = v24;
    unsigned int v17 = *((_DWORD *)a1 + 9);
  }
  if (v17 == 7)
  {
    uint64_t v25 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v16 | 0x400000;
    *(void *)(a2 + 176) = v25;
    unsigned int v17 = *((_DWORD *)a1 + 9);
    if (v17 == 7)
    {
      v16 |= 0xC00000uLL;
      *(void *)(a2 + 184) = a1[32];
    }
    else
    {
      v16 |= 0x400000uLL;
    }
  }
  uint64_t v26 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 192) = v17;
  *(void *)(a2 + 200) = v26;
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 208) = a1[44];
  *(void *)(a2 + 216) = v27;
  uint64_t v28 = a1[53];
  *(void *)(a2 + 224) = a1[52];
  *(void *)(a2 + 232) = v28;
  uint64_t v29 = a1[57];
  *(void *)(a2 + 240) = a1[56];
  *(void *)(a2 + 248) = v29;
  uint64_t v30 = *(void *)(a1 + 60);
  v31.n128_u64[0] = v30;
  v31.n128_u64[1] = HIDWORD(v30);
  *(__n128 *)(a2 + 256) = v31;
  uint64_t v32 = a1[69];
  *(void *)(a2 + 272) = a1[68];
  *(void *)(a2 + 280) = v32;
  uint64_t v33 = a1[71];
  *(void *)(a2 + 288) = a1[70];
  *(void *)(a2 + 296) = v33;
  uint64_t v34 = a1[73];
  *(void *)(a2 + 304) = a1[72];
  *(void *)(a2 + 312) = v34;
  uint64_t v35 = a1[75];
  *(void *)(a2 + 320) = a1[74];
  *(void *)(a2 + 328) = v35;
  uint64_t v36 = *(void *)(a1 + 76);
  v31.n128_u64[0] = v36;
  v31.n128_u64[1] = HIDWORD(v36);
  __n128 v37 = v31;
  uint64_t v38 = *(void *)(a1 + 84);
  v31.n128_u64[0] = v38;
  v31.n128_u64[1] = HIDWORD(v38);
  *(__n128 *)(a2 + 336) = v37;
  *(__n128 *)(a2 + 352) = v31;
  v37.n128_u64[0] = *(void *)(a1 + 92);
  v31.n128_u64[0] = v37.n128_u32[0];
  v31.n128_u64[1] = v37.n128_u32[1];
  __n128 result = v31;
  uint64_t v40 = *(void *)(a1 + 100);
  v31.n128_u64[0] = v40;
  v31.n128_u64[1] = HIDWORD(v40);
  *(__n128 *)(a2 + 368) = result;
  *(__n128 *)(a2 + 384) = v31;
  uint64_t v41 = *((unsigned int *)a1 + 27);
  uint64_t v42 = a1[112];
  *(void *)(a2 + 1248) = v16 | 0xFFFFFFF000000;
  *(void *)(a2 + 400) = v41;
  *(void *)(a2 + 408) = v42;
  return result;
}

__n128 sub_1CBE738F0(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = v16;
  uint64_t v26 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v25;
  *(void *)(a2 + 192) = v26;
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = a1[52];
  uint64_t v29 = a1[53];
  uint64_t v30 = v13 | 0x1F800000;
  *(void *)(a2 + 1248) = v13 | 0x1F800000;
  *(void *)(a2 + 216) = v28;
  *(void *)(a2 + 224) = v29;
  unsigned int v31 = *((_DWORD *)a1 + 16);
  if (!v31)
  {
    uint64_t v32 = a1[56];
    uint64_t v30 = v13 | 0x3F800000;
    *(void *)(a2 + 1248) = v13 | 0x3F800000;
    *(void *)(a2 + 232) = v32;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 1)
  {
    uint64_t v33 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x40000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 240) = v33;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 2)
  {
    uint64_t v34 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x80000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 248) = v34;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 3)
  {
    uint64_t v35 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 256) = v35;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 4)
  {
    uint64_t v36 = *((unsigned int *)a1 + 14);
    v30 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 264) = v36;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 5)
  {
    uint64_t v37 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 272) = v37;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 6)
  {
    uint64_t v38 = a1[56];
    v30 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 280) = v38;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 7)
  {
    uint64_t v39 = *((unsigned int *)a1 + 14);
    *(void *)(a2 + 1248) = v30 | 0x1000000000;
    *(void *)(a2 + 288) = v39;
    unsigned int v31 = *((_DWORD *)a1 + 16);
    if (v31 == 7)
    {
      v30 |= 0x3000000000uLL;
      *(void *)(a2 + 296) = a1[60];
    }
    else
    {
      v30 |= 0x1000000000uLL;
    }
  }
  uint64_t v40 = v31;
  uint64_t v41 = *((unsigned int *)a1 + 17);
  *(void *)(a2 + 304) = v40;
  *(void *)(a2 + 312) = v41;
  uint64_t v42 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 320) = a1[72];
  *(void *)(a2 + 328) = v42;
  uint64_t v43 = a1[80];
  uint64_t v44 = a1[81];
  uint64_t v45 = v30 | 0xFC000000000;
  *(void *)(a2 + 1248) = v30 | 0xFC000000000;
  *(void *)(a2 + 336) = v43;
  *(void *)(a2 + 344) = v44;
  unsigned int v46 = *((_DWORD *)a1 + 23);
  if (!v46)
  {
    uint64_t v47 = a1[84];
    uint64_t v45 = v30 | 0x1FC000000000;
    *(void *)(a2 + 1248) = v30 | 0x1FC000000000;
    *(void *)(a2 + 352) = v47;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 1)
  {
    uint64_t v48 = *((unsigned __int16 *)a1 + 42);
    v45 |= 0x200000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 360) = v48;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 2)
  {
    uint64_t v49 = *((unsigned __int16 *)a1 + 42);
    v45 |= 0x400000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 368) = v49;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 3)
  {
    uint64_t v50 = *((unsigned __int16 *)a1 + 42);
    v45 |= 0x800000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 376) = v50;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 4)
  {
    uint64_t v51 = *((unsigned int *)a1 + 21);
    v45 |= 0x1000000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 384) = v51;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 5)
  {
    uint64_t v52 = *((unsigned __int16 *)a1 + 42);
    v45 |= 0x2000000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 392) = v52;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 6)
  {
    uint64_t v53 = a1[84];
    v45 |= 0x4000000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 400) = v53;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 7)
  {
    uint64_t v54 = *((unsigned int *)a1 + 21);
    *(void *)(a2 + 1248) = v45 | 0x8000000000000;
    *(void *)(a2 + 408) = v54;
    unsigned int v46 = *((_DWORD *)a1 + 23);
    if (v46 == 7)
    {
      v45 |= 0x18000000000000uLL;
      *(void *)(a2 + 416) = a1[88];
      unsigned int v46 = 7;
    }
    else
    {
      v45 |= 0x8000000000000uLL;
    }
  }
  uint64_t v55 = *((unsigned int *)a1 + 24);
  *(void *)(a2 + 424) = v46;
  *(void *)(a2 + 432) = v55;
  uint64_t v56 = *((unsigned int *)a1 + 26);
  *(void *)(a2 + 440) = a1[100];
  *(void *)(a2 + 448) = v56;
  uint64_t v57 = a1[109];
  *(void *)(a2 + 456) = a1[108];
  *(void *)(a2 + 464) = v57;
  uint64_t v58 = a1[116];
  *(void *)(a2 + 472) = *((unsigned int *)a1 + 28);
  *(void *)(a2 + 480) = v58;
  uint64_t v59 = a1[118];
  *(void *)(a2 + 488) = a1[117];
  *(void *)(a2 + 496) = v59;
  uint64_t v60 = a1[119];
  *(void *)(a2 + 1248) = v45 | 0xFFE0000000000000;
  uint64_t v61 = a1[120];
  *(void *)(a2 + 504) = v60;
  *(void *)(a2 + 512) = v61;
  *(void *)(a2 + 520) = a1[121];
  *(void *)(a2 + 528) = a1[122];
  *(void *)(a2 + 536) = a1[123];
  *(void *)(a2 + 544) = a1[124];
  uint64_t v62 = *((void *)a1 + 16);
  uint64_t v63 = *((void *)a1 + 17);
  v64.n128_u64[0] = v62;
  v64.n128_u64[1] = HIDWORD(v62);
  __n128 v65 = v64;
  v64.n128_u64[0] = v63;
  v64.n128_u64[1] = HIDWORD(v63);
  *(__n128 *)(a2 + 552) = v65;
  *(__n128 *)(a2 + 568) = v64;
  v65.n128_u64[0] = *((void *)a1 + 18);
  uint64_t v66 = *((void *)a1 + 19);
  v64.n128_u64[0] = v65.n128_u32[0];
  v64.n128_u64[1] = v65.n128_u32[1];
  __n128 result = v64;
  v64.n128_u64[0] = v66;
  v64.n128_u64[1] = HIDWORD(v66);
  *(__n128 *)(a2 + 584) = result;
  *(__n128 *)(a2 + 600) = v64;
  uint64_t v68 = a1[160];
  *(void *)(a2 + 1256) = 0x3FFFLL;
  *(void *)(a2 + 616) = v68;
  return result;
}

__n128 sub_1CBE73E24(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = v16;
  uint64_t v26 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v25;
  *(void *)(a2 + 192) = v26;
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = a1[52];
  uint64_t v29 = a1[53];
  uint64_t v30 = v13 | 0x1F800000;
  *(void *)(a2 + 1248) = v13 | 0x1F800000;
  *(void *)(a2 + 216) = v28;
  *(void *)(a2 + 224) = v29;
  unsigned int v31 = *((_DWORD *)a1 + 16);
  if (!v31)
  {
    uint64_t v32 = a1[56];
    uint64_t v30 = v13 | 0x3F800000;
    *(void *)(a2 + 1248) = v13 | 0x3F800000;
    *(void *)(a2 + 232) = v32;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 1)
  {
    uint64_t v33 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x40000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 240) = v33;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 2)
  {
    uint64_t v34 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x80000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 248) = v34;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 3)
  {
    uint64_t v35 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 256) = v35;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 4)
  {
    uint64_t v36 = *((unsigned int *)a1 + 14);
    v30 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 264) = v36;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 5)
  {
    uint64_t v37 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 272) = v37;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 6)
  {
    uint64_t v38 = a1[56];
    v30 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 280) = v38;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 7)
  {
    uint64_t v39 = *((unsigned int *)a1 + 14);
    *(void *)(a2 + 1248) = v30 | 0x1000000000;
    *(void *)(a2 + 288) = v39;
    unsigned int v31 = *((_DWORD *)a1 + 16);
    if (v31 == 7)
    {
      v30 |= 0x3000000000uLL;
      *(void *)(a2 + 296) = a1[60];
    }
    else
    {
      v30 |= 0x1000000000uLL;
    }
  }
  uint64_t v40 = v31;
  uint64_t v41 = *((unsigned int *)a1 + 17);
  *(void *)(a2 + 304) = v40;
  *(void *)(a2 + 312) = v41;
  uint64_t v42 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 320) = a1[72];
  *(void *)(a2 + 328) = v42;
  uint64_t v43 = a1[80];
  uint64_t v44 = a1[81];
  uint64_t v45 = v30 | 0xFC000000000;
  *(void *)(a2 + 1248) = v30 | 0xFC000000000;
  *(void *)(a2 + 336) = v43;
  *(void *)(a2 + 344) = v44;
  unsigned int v46 = *((_DWORD *)a1 + 23);
  if (!v46)
  {
    uint64_t v47 = a1[84];
    uint64_t v45 = v30 | 0x1FC000000000;
    *(void *)(a2 + 1248) = v30 | 0x1FC000000000;
    *(void *)(a2 + 352) = v47;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 1)
  {
    uint64_t v48 = *((unsigned __int16 *)a1 + 42);
    v45 |= 0x200000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 360) = v48;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 2)
  {
    uint64_t v49 = *((unsigned __int16 *)a1 + 42);
    v45 |= 0x400000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 368) = v49;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 3)
  {
    uint64_t v50 = *((unsigned __int16 *)a1 + 42);
    v45 |= 0x800000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 376) = v50;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 4)
  {
    uint64_t v51 = *((unsigned int *)a1 + 21);
    v45 |= 0x1000000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 384) = v51;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 5)
  {
    uint64_t v52 = *((unsigned __int16 *)a1 + 42);
    v45 |= 0x2000000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 392) = v52;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 6)
  {
    uint64_t v53 = a1[84];
    v45 |= 0x4000000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 400) = v53;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 7)
  {
    uint64_t v54 = *((unsigned int *)a1 + 21);
    *(void *)(a2 + 1248) = v45 | 0x8000000000000;
    *(void *)(a2 + 408) = v54;
    unsigned int v46 = *((_DWORD *)a1 + 23);
    if (v46 == 7)
    {
      v45 |= 0x18000000000000uLL;
      *(void *)(a2 + 416) = a1[88];
    }
    else
    {
      v45 |= 0x8000000000000uLL;
    }
  }
  uint64_t v55 = *((unsigned int *)a1 + 24);
  *(void *)(a2 + 424) = v46;
  *(void *)(a2 + 432) = v55;
  uint64_t v56 = *((unsigned int *)a1 + 26);
  *(void *)(a2 + 440) = a1[100];
  *(void *)(a2 + 448) = v56;
  uint64_t v57 = a1[109];
  *(void *)(a2 + 456) = a1[108];
  *(void *)(a2 + 464) = v57;
  uint64_t v58 = *((void *)a1 + 14);
  v59.n128_u64[0] = v58;
  v59.n128_u64[1] = HIDWORD(v58);
  *(__n128 *)(a2 + 472) = v59;
  uint64_t v60 = a1[121];
  *(void *)(a2 + 488) = a1[120];
  *(void *)(a2 + 496) = v60;
  uint64_t v61 = a1[122];
  *(void *)(a2 + 1248) = v45 | 0xFFE0000000000000;
  uint64_t v62 = a1[123];
  *(void *)(a2 + 504) = v61;
  *(void *)(a2 + 512) = v62;
  *(void *)(a2 + 520) = a1[124];
  *(void *)(a2 + 528) = a1[125];
  *(void *)(a2 + 536) = a1[126];
  *(void *)(a2 + 544) = a1[127];
  *(void *)(a2 + 552) = a1[128];
  uint64_t v63 = *(void *)(a1 + 132);
  v59.n128_u64[0] = v63;
  v59.n128_u64[1] = HIDWORD(v63);
  __n128 v64 = v59;
  uint64_t v65 = *(void *)(a1 + 140);
  v59.n128_u64[0] = v65;
  v59.n128_u64[1] = HIDWORD(v65);
  *(__n128 *)(a2 + 560) = v64;
  *(__n128 *)(a2 + 576) = v59;
  v64.n128_u64[0] = *(void *)(a1 + 148);
  v59.n128_u64[0] = v64.n128_u32[0];
  v59.n128_u64[1] = v64.n128_u32[1];
  __n128 result = v59;
  uint64_t v67 = *(void *)(a1 + 156);
  v59.n128_u64[0] = v67;
  v59.n128_u64[1] = HIDWORD(v67);
  *(__n128 *)(a2 + 592) = result;
  *(__n128 *)(a2 + 608) = v59;
  *(void *)(a2 + 624) = a1[164];
  uint64_t v68 = a1[165];
  *(void *)(a2 + 1256) = 0xFFFFLL;
  *(void *)(a2 + 632) = v68;
  return result;
}

__n128 sub_1CBE7436C(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = v16;
  uint64_t v26 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v25;
  *(void *)(a2 + 192) = v26;
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = a1[52];
  uint64_t v29 = a1[53];
  uint64_t v30 = v13 | 0x1F800000;
  *(void *)(a2 + 1248) = v13 | 0x1F800000;
  *(void *)(a2 + 216) = v28;
  *(void *)(a2 + 224) = v29;
  unsigned int v31 = *((_DWORD *)a1 + 16);
  if (!v31)
  {
    uint64_t v32 = a1[56];
    uint64_t v30 = v13 | 0x3F800000;
    *(void *)(a2 + 1248) = v13 | 0x3F800000;
    *(void *)(a2 + 232) = v32;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 1)
  {
    uint64_t v33 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x40000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 240) = v33;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 2)
  {
    uint64_t v34 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x80000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 248) = v34;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 3)
  {
    uint64_t v35 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 256) = v35;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 4)
  {
    uint64_t v36 = *((unsigned int *)a1 + 14);
    v30 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 264) = v36;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 5)
  {
    uint64_t v37 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 272) = v37;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 6)
  {
    uint64_t v38 = a1[56];
    v30 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 280) = v38;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 7)
  {
    uint64_t v39 = *((unsigned int *)a1 + 14);
    *(void *)(a2 + 1248) = v30 | 0x1000000000;
    *(void *)(a2 + 288) = v39;
    unsigned int v31 = *((_DWORD *)a1 + 16);
    if (v31 == 7)
    {
      v30 |= 0x3000000000uLL;
      *(void *)(a2 + 296) = a1[60];
    }
    else
    {
      v30 |= 0x1000000000uLL;
    }
  }
  uint64_t v40 = v31;
  uint64_t v41 = *((unsigned int *)a1 + 17);
  *(void *)(a2 + 304) = v40;
  *(void *)(a2 + 312) = v41;
  uint64_t v42 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 320) = a1[72];
  *(void *)(a2 + 328) = v42;
  uint64_t v43 = a1[80];
  uint64_t v44 = a1[81];
  uint64_t v45 = v30 | 0xFC000000000;
  *(void *)(a2 + 1248) = v30 | 0xFC000000000;
  *(void *)(a2 + 336) = v43;
  *(void *)(a2 + 344) = v44;
  unsigned int v46 = *((_DWORD *)a1 + 23);
  if (!v46)
  {
    uint64_t v47 = a1[84];
    uint64_t v45 = v30 | 0x1FC000000000;
    *(void *)(a2 + 1248) = v30 | 0x1FC000000000;
    *(void *)(a2 + 352) = v47;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 1)
  {
    uint64_t v48 = *((unsigned __int16 *)a1 + 42);
    v45 |= 0x200000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 360) = v48;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 2)
  {
    uint64_t v49 = *((unsigned __int16 *)a1 + 42);
    v45 |= 0x400000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 368) = v49;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 3)
  {
    uint64_t v50 = *((unsigned __int16 *)a1 + 42);
    v45 |= 0x800000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 376) = v50;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 4)
  {
    uint64_t v51 = *((unsigned int *)a1 + 21);
    v45 |= 0x1000000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 384) = v51;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 5)
  {
    uint64_t v52 = *((unsigned __int16 *)a1 + 42);
    v45 |= 0x2000000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 392) = v52;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 6)
  {
    uint64_t v53 = a1[84];
    v45 |= 0x4000000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 400) = v53;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 7)
  {
    uint64_t v54 = *((unsigned int *)a1 + 21);
    *(void *)(a2 + 1248) = v45 | 0x8000000000000;
    *(void *)(a2 + 408) = v54;
    unsigned int v46 = *((_DWORD *)a1 + 23);
    if (v46 == 7)
    {
      v45 |= 0x18000000000000uLL;
      *(void *)(a2 + 416) = a1[88];
      unsigned int v46 = 7;
    }
    else
    {
      v45 |= 0x8000000000000uLL;
    }
  }
  uint64_t v55 = *((unsigned int *)a1 + 24);
  *(void *)(a2 + 424) = v46;
  *(void *)(a2 + 432) = v55;
  uint64_t v56 = *((unsigned int *)a1 + 26);
  *(void *)(a2 + 440) = a1[100];
  *(void *)(a2 + 448) = v56;
  uint64_t v57 = a1[109];
  *(void *)(a2 + 456) = a1[108];
  *(void *)(a2 + 464) = v57;
  uint64_t v58 = *((void *)a1 + 14);
  v59.n128_u64[0] = v58;
  v59.n128_u64[1] = HIDWORD(v58);
  *(__n128 *)(a2 + 472) = v59;
  uint64_t v60 = a1[121];
  *(void *)(a2 + 488) = a1[120];
  *(void *)(a2 + 496) = v60;
  uint64_t v61 = a1[122];
  *(void *)(a2 + 1248) = v45 | 0xFFE0000000000000;
  uint64_t v62 = a1[123];
  *(void *)(a2 + 504) = v61;
  *(void *)(a2 + 512) = v62;
  *(void *)(a2 + 520) = a1[124];
  *(void *)(a2 + 528) = a1[125];
  *(void *)(a2 + 536) = a1[126];
  *(void *)(a2 + 544) = a1[127];
  uint64_t v63 = *((void *)a1 + 16);
  uint64_t v64 = *((void *)a1 + 17);
  v59.n128_u64[0] = v63;
  v59.n128_u64[1] = HIDWORD(v63);
  __n128 v65 = v59;
  v59.n128_u64[0] = v64;
  v59.n128_u64[1] = HIDWORD(v64);
  *(__n128 *)(a2 + 552) = v65;
  *(__n128 *)(a2 + 568) = v59;
  v65.n128_u64[0] = *((void *)a1 + 18);
  uint64_t v66 = *((void *)a1 + 19);
  v59.n128_u64[0] = v65.n128_u32[0];
  v59.n128_u64[1] = v65.n128_u32[1];
  __n128 result = v59;
  v59.n128_u64[0] = v66;
  v59.n128_u64[1] = HIDWORD(v66);
  *(__n128 *)(a2 + 584) = result;
  *(__n128 *)(a2 + 600) = v59;
  uint64_t v68 = a1[160];
  *(void *)(a2 + 1256) = 0x3FFFLL;
  *(void *)(a2 + 616) = v68;
  return result;
}

__n128 sub_1CBE748A0(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  uint64_t v13 = *((unsigned int *)a1 + 5);
  *(void *)(a2 + 88) = a1[16];
  *(void *)(a2 + 96) = v13;
  uint64_t v14 = *((unsigned int *)a1 + 7);
  *(void *)(a2 + 104) = a1[24];
  *(void *)(a2 + 112) = v14;
  uint64_t v15 = *((unsigned int *)a1 + 9);
  *(void *)(a2 + 120) = a1[32];
  *(void *)(a2 + 128) = v15;
  uint64_t v16 = a1[41];
  *(void *)(a2 + 136) = a1[40];
  *(void *)(a2 + 144) = v16;
  uint64_t v17 = a1[43];
  *(void *)(a2 + 152) = a1[42];
  *(void *)(a2 + 160) = v17;
  uint64_t v18 = a1[45];
  *(void *)(a2 + 168) = a1[44];
  *(void *)(a2 + 176) = v18;
  uint64_t v19 = a1[47];
  *(void *)(a2 + 184) = a1[46];
  *(void *)(a2 + 192) = v19;
  uint64_t v20 = *((void *)a1 + 6);
  *(void *)&long long v21 = v20;
  *((void *)&v21 + 1) = HIDWORD(v20);
  *(_OWORD *)(a2 + 200) = v21;
  uint64_t v22 = *((void *)a1 + 7);
  *(void *)&long long v21 = v22;
  *((void *)&v21 + 1) = HIDWORD(v22);
  *(_OWORD *)(a2 + 216) = v21;
  uint64_t v23 = a1[68];
  *(void *)(a2 + 232) = *((unsigned int *)a1 + 16);
  *(void *)(a2 + 240) = v23;
  uint64_t v24 = a1[69];
  uint64_t v25 = *((unsigned int *)a1 + 18);
  uint64_t v26 = v3 | 0x1FFFFFE00;
  *(void *)(a2 + 1248) = v3 | 0x1FFFFFE00;
  *(void *)(a2 + 248) = v24;
  *(void *)(a2 + 256) = v25;
  unsigned int v27 = *((_DWORD *)a1 + 21);
  if (!v27)
  {
    uint64_t v28 = a1[76];
    uint64_t v26 = v3 | 0x3FFFFFE00;
    *(void *)(a2 + 1248) = v3 | 0x3FFFFFE00;
    *(void *)(a2 + 264) = v28;
    unsigned int v27 = *((_DWORD *)a1 + 21);
  }
  if (v27 == 1)
  {
    uint64_t v29 = *((unsigned __int16 *)a1 + 38);
    v26 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v26;
    *(void *)(a2 + 272) = v29;
    unsigned int v27 = *((_DWORD *)a1 + 21);
  }
  if (v27 == 2)
  {
    uint64_t v30 = *((unsigned __int16 *)a1 + 38);
    v26 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v26;
    *(void *)(a2 + 280) = v30;
    unsigned int v27 = *((_DWORD *)a1 + 21);
  }
  if (v27 == 3)
  {
    uint64_t v31 = *((unsigned __int16 *)a1 + 38);
    v26 |= 0x1000000000uLL;
    *(void *)(a2 + 1248) = v26;
    *(void *)(a2 + 288) = v31;
    unsigned int v27 = *((_DWORD *)a1 + 21);
  }
  if (v27 == 4)
  {
    uint64_t v32 = *((unsigned int *)a1 + 19);
    v26 |= 0x2000000000uLL;
    *(void *)(a2 + 1248) = v26;
    *(void *)(a2 + 296) = v32;
    unsigned int v27 = *((_DWORD *)a1 + 21);
  }
  if (v27 == 5)
  {
    uint64_t v33 = *((unsigned __int16 *)a1 + 38);
    v26 |= 0x4000000000uLL;
    *(void *)(a2 + 1248) = v26;
    *(void *)(a2 + 304) = v33;
    unsigned int v27 = *((_DWORD *)a1 + 21);
  }
  if (v27 == 6)
  {
    uint64_t v34 = a1[76];
    v26 |= 0x8000000000uLL;
    *(void *)(a2 + 1248) = v26;
    *(void *)(a2 + 312) = v34;
    unsigned int v27 = *((_DWORD *)a1 + 21);
  }
  if (v27 == 7)
  {
    uint64_t v35 = *((unsigned int *)a1 + 19);
    *(void *)(a2 + 1248) = v26 | 0x10000000000;
    *(void *)(a2 + 320) = v35;
    unsigned int v27 = *((_DWORD *)a1 + 21);
    if (v27 == 7)
    {
      v26 |= 0x30000000000uLL;
      *(void *)(a2 + 328) = a1[80];
    }
    else
    {
      v26 |= 0x10000000000uLL;
    }
  }
  uint64_t v36 = v27;
  uint64_t v37 = *((unsigned int *)a1 + 22);
  *(void *)(a2 + 336) = v36;
  *(void *)(a2 + 344) = v37;
  uint64_t v38 = *((unsigned int *)a1 + 24);
  *(void *)(a2 + 352) = a1[92];
  *(void *)(a2 + 360) = v38;
  uint64_t v39 = a1[100];
  uint64_t v40 = v26 | 0x7C0000000000;
  *(void *)(a2 + 1248) = v26 | 0x7C0000000000;
  *(void *)(a2 + 368) = v39;
  unsigned int v41 = *((_DWORD *)a1 + 28);
  if (!v41)
  {
    uint64_t v42 = a1[104];
    uint64_t v40 = v26 | 0xFC0000000000;
    *(void *)(a2 + 1248) = v26 | 0xFC0000000000;
    *(void *)(a2 + 376) = v42;
    unsigned int v41 = *((_DWORD *)a1 + 28);
  }
  if (v41 == 1)
  {
    uint64_t v43 = *((unsigned __int16 *)a1 + 52);
    v40 |= 0x1000000000000uLL;
    *(void *)(a2 + 1248) = v40;
    *(void *)(a2 + 384) = v43;
    unsigned int v41 = *((_DWORD *)a1 + 28);
  }
  if (v41 == 2)
  {
    uint64_t v44 = *((unsigned __int16 *)a1 + 52);
    v40 |= 0x2000000000000uLL;
    *(void *)(a2 + 1248) = v40;
    *(void *)(a2 + 392) = v44;
    unsigned int v41 = *((_DWORD *)a1 + 28);
  }
  if (v41 == 3)
  {
    uint64_t v45 = *((unsigned __int16 *)a1 + 52);
    v40 |= 0x4000000000000uLL;
    *(void *)(a2 + 1248) = v40;
    *(void *)(a2 + 400) = v45;
    unsigned int v41 = *((_DWORD *)a1 + 28);
  }
  if (v41 == 4)
  {
    uint64_t v46 = *((unsigned int *)a1 + 26);
    v40 |= 0x8000000000000uLL;
    *(void *)(a2 + 1248) = v40;
    *(void *)(a2 + 408) = v46;
    unsigned int v41 = *((_DWORD *)a1 + 28);
  }
  if (v41 == 5)
  {
    uint64_t v47 = *((unsigned __int16 *)a1 + 52);
    v40 |= 0x10000000000000uLL;
    *(void *)(a2 + 1248) = v40;
    *(void *)(a2 + 416) = v47;
    unsigned int v41 = *((_DWORD *)a1 + 28);
  }
  if (v41 == 6)
  {
    uint64_t v48 = a1[104];
    v40 |= 0x20000000000000uLL;
    *(void *)(a2 + 1248) = v40;
    *(void *)(a2 + 424) = v48;
    unsigned int v41 = *((_DWORD *)a1 + 28);
  }
  if (v41 == 7)
  {
    uint64_t v49 = *((unsigned int *)a1 + 26);
    *(void *)(a2 + 1248) = v40 | 0x40000000000000;
    *(void *)(a2 + 432) = v49;
    unsigned int v41 = *((_DWORD *)a1 + 28);
    if (v41 == 7)
    {
      v40 |= 0xC0000000000000uLL;
      *(void *)(a2 + 440) = a1[108];
    }
    else
    {
      v40 |= 0x40000000000000uLL;
    }
  }
  uint64_t v50 = *((unsigned int *)a1 + 29);
  *(void *)(a2 + 448) = v41;
  *(void *)(a2 + 456) = v50;
  uint64_t v51 = *((unsigned int *)a1 + 31);
  *(void *)(a2 + 464) = a1[120];
  *(void *)(a2 + 472) = v51;
  uint64_t v52 = a1[129];
  *(void *)(a2 + 480) = a1[128];
  *(void *)(a2 + 488) = v52;
  *(void *)(a2 + 1248) = v40 | 0xFF00000000000000;
  uint64_t v53 = *(void *)(a1 + 132);
  v54.n128_u64[0] = v53;
  v54.n128_u64[1] = HIDWORD(v53);
  __n128 v55 = v54;
  uint64_t v56 = *(void *)(a1 + 140);
  v54.n128_u64[0] = v56;
  v54.n128_u64[1] = HIDWORD(v56);
  *(__n128 *)(a2 + 496) = v55;
  *(__n128 *)(a2 + 512) = v54;
  v55.n128_u64[0] = *(void *)(a1 + 148);
  v54.n128_u64[0] = v55.n128_u32[0];
  v54.n128_u64[1] = v55.n128_u32[1];
  __n128 result = v54;
  uint64_t v58 = *(void *)(a1 + 156);
  v54.n128_u64[0] = v58;
  v54.n128_u64[1] = HIDWORD(v58);
  *(__n128 *)(a2 + 528) = result;
  *(__n128 *)(a2 + 544) = v54;
  *(void *)(a2 + 560) = a1[164];
  uint64_t v59 = a1[165];
  *(void *)(a2 + 1256) = 255;
  *(void *)(a2 + 568) = v59;
  return result;
}

unsigned __int8 *sub_1CBE74CDC(unsigned __int8 *result, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)result + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *result;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)result + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)result;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)result + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)result;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)result + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)result;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)result + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)result;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)result + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)result;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)result + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *result;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)result + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)result;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)result + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = result[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)result + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  uint64_t v13 = *((unsigned int *)result + 5);
  *(void *)(a2 + 88) = result[16];
  *(void *)(a2 + 96) = v13;
  uint64_t v14 = result[24];
  uint64_t v15 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  *(void *)(a2 + 104) = v14;
  unsigned int v16 = *((_DWORD *)result + 9);
  if (!v16)
  {
    uint64_t v17 = result[28];
    uint64_t v15 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)result + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)result + 14);
    v15 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v15;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)result + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)result + 14);
    v15 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v15;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)result + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)result + 14);
    v15 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v15;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)result + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)result + 7);
    v15 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v15;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)result + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)result + 14);
    v15 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v15;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)result + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = result[28];
    v15 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v15;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)result + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)result + 7);
    *(void *)(a2 + 1248) = v15 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)result + 9);
    if (v16 == 7)
    {
      v15 |= 0x600000uLL;
      *(void *)(a2 + 176) = result[32];
    }
    else
    {
      v15 |= 0x200000uLL;
    }
  }
  uint64_t v25 = v16;
  uint64_t v26 = *((unsigned int *)result + 10);
  *(void *)(a2 + 184) = v25;
  *(void *)(a2 + 192) = v26;
  uint64_t v27 = *((unsigned int *)result + 12);
  *(void *)(a2 + 200) = result[44];
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = result[52];
  uint64_t v29 = v15 | 0xF800000;
  *(void *)(a2 + 1248) = v15 | 0xF800000;
  *(void *)(a2 + 216) = v28;
  unsigned int v30 = *((_DWORD *)result + 16);
  if (!v30)
  {
    uint64_t v31 = result[56];
    uint64_t v29 = v15 | 0x1F800000;
    *(void *)(a2 + 1248) = v15 | 0x1F800000;
    *(void *)(a2 + 224) = v31;
    unsigned int v30 = *((_DWORD *)result + 16);
  }
  if (v30 == 1)
  {
    uint64_t v32 = *((unsigned __int16 *)result + 28);
    v29 |= 0x20000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 232) = v32;
    unsigned int v30 = *((_DWORD *)result + 16);
  }
  if (v30 == 2)
  {
    uint64_t v33 = *((unsigned __int16 *)result + 28);
    v29 |= 0x40000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 240) = v33;
    unsigned int v30 = *((_DWORD *)result + 16);
  }
  if (v30 == 3)
  {
    uint64_t v34 = *((unsigned __int16 *)result + 28);
    v29 |= 0x80000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 248) = v34;
    unsigned int v30 = *((_DWORD *)result + 16);
  }
  if (v30 == 4)
  {
    uint64_t v35 = *((unsigned int *)result + 14);
    v29 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 256) = v35;
    unsigned int v30 = *((_DWORD *)result + 16);
  }
  if (v30 == 5)
  {
    uint64_t v36 = *((unsigned __int16 *)result + 28);
    v29 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 264) = v36;
    unsigned int v30 = *((_DWORD *)result + 16);
  }
  if (v30 == 6)
  {
    uint64_t v37 = result[56];
    v29 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 272) = v37;
    unsigned int v30 = *((_DWORD *)result + 16);
  }
  if (v30 == 7)
  {
    uint64_t v38 = *((unsigned int *)result + 14);
    *(void *)(a2 + 1248) = v29 | 0x800000000;
    *(void *)(a2 + 280) = v38;
    unsigned int v30 = *((_DWORD *)result + 16);
    if (v30 == 7)
    {
      v29 |= 0x1800000000uLL;
      *(void *)(a2 + 288) = result[60];
    }
    else
    {
      v29 |= 0x800000000uLL;
    }
  }
  uint64_t v39 = v30;
  uint64_t v40 = *((unsigned int *)result + 17);
  *(void *)(a2 + 296) = v39;
  *(void *)(a2 + 304) = v40;
  uint64_t v41 = *((unsigned int *)result + 19);
  *(void *)(a2 + 312) = result[72];
  *(void *)(a2 + 320) = v41;
  uint64_t v42 = result[80];
  uint64_t v43 = v29 | 0x3E000000000;
  *(void *)(a2 + 1248) = v29 | 0x3E000000000;
  *(void *)(a2 + 328) = v42;
  unsigned int v44 = *((_DWORD *)result + 23);
  if (!v44)
  {
    uint64_t v45 = result[84];
    uint64_t v43 = v29 | 0x7E000000000;
    *(void *)(a2 + 1248) = v29 | 0x7E000000000;
    *(void *)(a2 + 336) = v45;
    unsigned int v44 = *((_DWORD *)result + 23);
  }
  if (v44 == 1)
  {
    uint64_t v46 = *((unsigned __int16 *)result + 42);
    v43 |= 0x80000000000uLL;
    *(void *)(a2 + 1248) = v43;
    *(void *)(a2 + 344) = v46;
    unsigned int v44 = *((_DWORD *)result + 23);
  }
  if (v44 == 2)
  {
    uint64_t v47 = *((unsigned __int16 *)result + 42);
    v43 |= 0x100000000000uLL;
    *(void *)(a2 + 1248) = v43;
    *(void *)(a2 + 352) = v47;
    unsigned int v44 = *((_DWORD *)result + 23);
  }
  if (v44 == 3)
  {
    uint64_t v48 = *((unsigned __int16 *)result + 42);
    v43 |= 0x200000000000uLL;
    *(void *)(a2 + 1248) = v43;
    *(void *)(a2 + 360) = v48;
    unsigned int v44 = *((_DWORD *)result + 23);
  }
  if (v44 == 4)
  {
    uint64_t v49 = *((unsigned int *)result + 21);
    v43 |= 0x400000000000uLL;
    *(void *)(a2 + 1248) = v43;
    *(void *)(a2 + 368) = v49;
    unsigned int v44 = *((_DWORD *)result + 23);
  }
  if (v44 == 5)
  {
    uint64_t v50 = *((unsigned __int16 *)result + 42);
    v43 |= 0x800000000000uLL;
    *(void *)(a2 + 1248) = v43;
    *(void *)(a2 + 376) = v50;
    unsigned int v44 = *((_DWORD *)result + 23);
  }
  if (v44 == 6)
  {
    uint64_t v51 = result[84];
    v43 |= 0x1000000000000uLL;
    *(void *)(a2 + 1248) = v43;
    *(void *)(a2 + 384) = v51;
    unsigned int v44 = *((_DWORD *)result + 23);
  }
  if (v44 == 7)
  {
    uint64_t v52 = *((unsigned int *)result + 21);
    *(void *)(a2 + 1248) = v43 | 0x2000000000000;
    *(void *)(a2 + 392) = v52;
    unsigned int v44 = *((_DWORD *)result + 23);
    if (v44 == 7)
    {
      v43 |= 0x6000000000000uLL;
      *(void *)(a2 + 400) = result[88];
    }
    else
    {
      v43 |= 0x2000000000000uLL;
    }
  }
  uint64_t v53 = v44;
  uint64_t v54 = *((unsigned int *)result + 24);
  *(void *)(a2 + 408) = v53;
  *(void *)(a2 + 416) = v54;
  uint64_t v55 = *((unsigned int *)result + 26);
  *(void *)(a2 + 424) = result[100];
  *(void *)(a2 + 432) = v55;
  *(void *)(a2 + 440) = result[108];
  uint64_t v56 = *((void *)result + 14);
  *(void *)&long long v57 = v56;
  *((void *)&v57 + 1) = HIDWORD(v56);
  *(_OWORD *)(a2 + 448) = v57;
  uint64_t v58 = result[124];
  *(void *)(a2 + 464) = *((unsigned int *)result + 30);
  *(void *)(a2 + 472) = v58;
  uint64_t v59 = result[126];
  *(void *)(a2 + 480) = result[125];
  *(void *)(a2 + 488) = v59;
  uint64_t v60 = result[127];
  *(void *)(a2 + 1248) = v43 | 0xFFF8000000000000;
  uint64_t v61 = result[128];
  *(void *)(a2 + 496) = v60;
  *(void *)(a2 + 504) = v61;
  *(void *)(a2 + 512) = result[129];
  *(void *)(a2 + 520) = result[130];
  *(void *)(a2 + 528) = result[131];
  uint64_t v62 = *(void *)(result + 132);
  *(void *)&long long v57 = v62;
  *((void *)&v57 + 1) = HIDWORD(v62);
  *(_OWORD *)(a2 + 536) = v57;
  uint64_t v63 = *(void *)(result + 140);
  *(void *)&long long v57 = v63;
  *((void *)&v57 + 1) = HIDWORD(v63);
  *(_OWORD *)(a2 + 552) = v57;
  uint64_t v64 = 511;
  *(void *)(a2 + 1256) = 511;
  uint64_t v65 = *(void *)(result + 148);
  *(void *)&long long v57 = v65;
  *((void *)&v57 + 1) = HIDWORD(v65);
  *(_OWORD *)(a2 + 568) = v57;
  unsigned int v66 = *((_DWORD *)result + 41);
  if (!v66)
  {
    uint64_t v67 = result[156];
    uint64_t v64 = 1023;
    *(void *)(a2 + 1256) = 1023;
    *(void *)(a2 + 584) = v67;
    unsigned int v66 = *((_DWORD *)result + 41);
  }
  if (v66 == 1)
  {
    uint64_t v68 = *((unsigned __int16 *)result + 78);
    v64 |= 0x400uLL;
    *(void *)(a2 + 1256) = v64;
    *(void *)(a2 + 592) = v68;
    unsigned int v66 = *((_DWORD *)result + 41);
  }
  if (v66 == 2)
  {
    uint64_t v69 = *((unsigned __int16 *)result + 78);
    v64 |= 0x800uLL;
    *(void *)(a2 + 1256) = v64;
    *(void *)(a2 + 600) = v69;
    unsigned int v66 = *((_DWORD *)result + 41);
  }
  if (v66 == 3)
  {
    uint64_t v70 = *((unsigned __int16 *)result + 78);
    v64 |= 0x1000uLL;
    *(void *)(a2 + 1256) = v64;
    *(void *)(a2 + 608) = v70;
    unsigned int v66 = *((_DWORD *)result + 41);
  }
  if (v66 == 4)
  {
    uint64_t v71 = *((unsigned int *)result + 39);
    v64 |= 0x2000uLL;
    *(void *)(a2 + 1256) = v64;
    *(void *)(a2 + 616) = v71;
    unsigned int v66 = *((_DWORD *)result + 41);
  }
  if (v66 == 5)
  {
    uint64_t v72 = *((unsigned __int16 *)result + 78);
    v64 |= 0x4000uLL;
    *(void *)(a2 + 1256) = v64;
    *(void *)(a2 + 624) = v72;
    unsigned int v66 = *((_DWORD *)result + 41);
  }
  if (v66 == 6)
  {
    uint64_t v73 = result[156];
    v64 |= 0x8000uLL;
    *(void *)(a2 + 1256) = v64;
    *(void *)(a2 + 632) = v73;
    unsigned int v66 = *((_DWORD *)result + 41);
  }
  if (v66 == 7)
  {
    uint64_t v74 = *((unsigned int *)result + 39);
    *(void *)(a2 + 1256) = v64 | 0x10000;
    *(void *)(a2 + 640) = v74;
    unsigned int v66 = *((_DWORD *)result + 41);
    if (v66 == 7)
    {
      v64 |= 0x30000uLL;
      *(void *)(a2 + 648) = result[160];
      unsigned int v66 = 7;
    }
    else
    {
      v64 |= 0x10000uLL;
    }
  }
  *(void *)(a2 + 656) = v66;
  *(void *)(a2 + 664) = *((unsigned int *)result + 42);
  *(void *)(a2 + 672) = result[172];
  *(void *)(a2 + 680) = *((unsigned int *)result + 44);
  uint64_t v75 = result[180];
  uint64_t v76 = v64 | 0x7C0000;
  *(void *)(a2 + 1256) = v64 | 0x7C0000;
  *(void *)(a2 + 688) = v75;
  unsigned int v77 = *((_DWORD *)result + 48);
  if (!v77)
  {
    uint64_t v78 = result[184];
    uint64_t v76 = v64 | 0xFC0000;
    *(void *)(a2 + 1256) = v64 | 0xFC0000;
    *(void *)(a2 + 696) = v78;
    unsigned int v77 = *((_DWORD *)result + 48);
  }
  if (v77 == 1)
  {
    uint64_t v79 = *((unsigned __int16 *)result + 92);
    v76 |= 0x1000000uLL;
    *(void *)(a2 + 1256) = v76;
    *(void *)(a2 + 704) = v79;
    unsigned int v77 = *((_DWORD *)result + 48);
  }
  if (v77 == 2)
  {
    uint64_t v80 = *((unsigned __int16 *)result + 92);
    v76 |= 0x2000000uLL;
    *(void *)(a2 + 1256) = v76;
    *(void *)(a2 + 712) = v80;
    unsigned int v77 = *((_DWORD *)result + 48);
  }
  if (v77 == 3)
  {
    uint64_t v81 = *((unsigned __int16 *)result + 92);
    v76 |= 0x4000000uLL;
    *(void *)(a2 + 1256) = v76;
    *(void *)(a2 + 720) = v81;
    unsigned int v77 = *((_DWORD *)result + 48);
  }
  if (v77 == 4)
  {
    uint64_t v82 = *((unsigned int *)result + 46);
    v76 |= 0x8000000uLL;
    *(void *)(a2 + 1256) = v76;
    *(void *)(a2 + 728) = v82;
    unsigned int v77 = *((_DWORD *)result + 48);
  }
  if (v77 == 5)
  {
    uint64_t v83 = *((unsigned __int16 *)result + 92);
    v76 |= 0x10000000uLL;
    *(void *)(a2 + 1256) = v76;
    *(void *)(a2 + 736) = v83;
    unsigned int v77 = *((_DWORD *)result + 48);
  }
  if (v77 == 6)
  {
    uint64_t v84 = result[184];
    v76 |= 0x20000000uLL;
    *(void *)(a2 + 1256) = v76;
    *(void *)(a2 + 744) = v84;
    unsigned int v77 = *((_DWORD *)result + 48);
  }
  if (v77 == 7)
  {
    uint64_t v85 = *((unsigned int *)result + 46);
    *(void *)(a2 + 1256) = v76 | 0x40000000;
    *(void *)(a2 + 752) = v85;
    unsigned int v77 = *((_DWORD *)result + 48);
    if (v77 == 7)
    {
      v76 |= 0xC0000000uLL;
      *(void *)(a2 + 760) = result[188];
    }
    else
    {
      v76 |= 0x40000000uLL;
    }
  }
  *(void *)(a2 + 768) = v77;
  *(void *)(a2 + 776) = *((unsigned int *)result + 49);
  *(void *)(a2 + 784) = result[200];
  *(void *)(a2 + 792) = *((unsigned int *)result + 51);
  *(void *)(a2 + 800) = result[208];
  *(void *)(a2 + 808) = result[209];
  uint64_t v86 = *(void *)(result + 212);
  *(void *)&long long v87 = v86;
  *((void *)&v87 + 1) = HIDWORD(v86);
  long long v88 = v87;
  uint64_t v89 = *(void *)(result + 220);
  *(void *)&long long v87 = v89;
  *((void *)&v87 + 1) = HIDWORD(v89);
  *(_OWORD *)(a2 + 816) = v88;
  *(_OWORD *)(a2 + 832) = v87;
  *(void *)&long long v88 = *(void *)(result + 228);
  *(void *)&long long v87 = v88;
  *((void *)&v87 + 1) = DWORD1(v88);
  long long v90 = v87;
  uint64_t v91 = *(void *)(result + 236);
  *(void *)&long long v87 = v91;
  *((void *)&v87 + 1) = HIDWORD(v91);
  *(_OWORD *)(a2 + 848) = v90;
  *(_OWORD *)(a2 + 864) = v87;
  *(void *)(a2 + 880) = result[244];
  *(void *)(a2 + 888) = *((unsigned int *)result + 62);
  *(void *)(a2 + 896) = result[252];
  *(void *)(a2 + 904) = *((unsigned __int16 *)result + 127);
  uint64_t v92 = (char)result[256];
  if ((int)v92 < 0) {
    v92 &= 0x7Fu;
  }
  *(void *)(a2 + 912) = v92;
  *(void *)(a2 + 920) = result[257];
  uint64_t v93 = (char)result[258];
  if ((int)v93 < 0) {
    v93 &= 0x7Fu;
  }
  *(void *)(a2 + 928) = v93;
  uint64_t v94 = result[259];
  *(void *)(a2 + 1256) = v76 | 0x3FFFFF00000000;
  *(void *)(a2 + 936) = v94;
  return result;
}

__n128 sub_1CBE754E4(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = v16;
  uint64_t v26 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v25;
  *(void *)(a2 + 192) = v26;
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = a1[52];
  uint64_t v29 = a1[53];
  uint64_t v30 = v13 | 0x1F800000;
  *(void *)(a2 + 1248) = v13 | 0x1F800000;
  *(void *)(a2 + 216) = v28;
  *(void *)(a2 + 224) = v29;
  unsigned int v31 = *((_DWORD *)a1 + 16);
  if (!v31)
  {
    uint64_t v32 = a1[56];
    uint64_t v30 = v13 | 0x3F800000;
    *(void *)(a2 + 1248) = v13 | 0x3F800000;
    *(void *)(a2 + 232) = v32;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 1)
  {
    uint64_t v33 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x40000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 240) = v33;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 2)
  {
    uint64_t v34 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x80000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 248) = v34;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 3)
  {
    uint64_t v35 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 256) = v35;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 4)
  {
    uint64_t v36 = *((unsigned int *)a1 + 14);
    v30 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 264) = v36;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 5)
  {
    uint64_t v37 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 272) = v37;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 6)
  {
    uint64_t v38 = a1[56];
    v30 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 280) = v38;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 7)
  {
    uint64_t v39 = *((unsigned int *)a1 + 14);
    *(void *)(a2 + 1248) = v30 | 0x1000000000;
    *(void *)(a2 + 288) = v39;
    unsigned int v31 = *((_DWORD *)a1 + 16);
    if (v31 == 7)
    {
      v30 |= 0x3000000000uLL;
      *(void *)(a2 + 296) = a1[60];
    }
    else
    {
      v30 |= 0x1000000000uLL;
    }
  }
  uint64_t v40 = v31;
  uint64_t v41 = *((unsigned int *)a1 + 17);
  *(void *)(a2 + 304) = v40;
  *(void *)(a2 + 312) = v41;
  uint64_t v42 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 320) = a1[72];
  *(void *)(a2 + 328) = v42;
  uint64_t v43 = a1[80];
  uint64_t v44 = a1[81];
  uint64_t v45 = v30 | 0xFC000000000;
  *(void *)(a2 + 1248) = v30 | 0xFC000000000;
  *(void *)(a2 + 336) = v43;
  *(void *)(a2 + 344) = v44;
  unsigned int v46 = *((_DWORD *)a1 + 23);
  if (!v46)
  {
    uint64_t v47 = a1[84];
    uint64_t v45 = v30 | 0x1FC000000000;
    *(void *)(a2 + 1248) = v30 | 0x1FC000000000;
    *(void *)(a2 + 352) = v47;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 1)
  {
    uint64_t v48 = *((unsigned __int16 *)a1 + 42);
    v45 |= 0x200000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 360) = v48;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 2)
  {
    uint64_t v49 = *((unsigned __int16 *)a1 + 42);
    v45 |= 0x400000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 368) = v49;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 3)
  {
    uint64_t v50 = *((unsigned __int16 *)a1 + 42);
    v45 |= 0x800000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 376) = v50;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 4)
  {
    uint64_t v51 = *((unsigned int *)a1 + 21);
    v45 |= 0x1000000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 384) = v51;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 5)
  {
    uint64_t v52 = *((unsigned __int16 *)a1 + 42);
    v45 |= 0x2000000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 392) = v52;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 6)
  {
    uint64_t v53 = a1[84];
    v45 |= 0x4000000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 400) = v53;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 7)
  {
    uint64_t v54 = *((unsigned int *)a1 + 21);
    *(void *)(a2 + 1248) = v45 | 0x8000000000000;
    *(void *)(a2 + 408) = v54;
    unsigned int v46 = *((_DWORD *)a1 + 23);
    if (v46 == 7)
    {
      v45 |= 0x18000000000000uLL;
      *(void *)(a2 + 416) = a1[88];
      unsigned int v46 = 7;
    }
    else
    {
      v45 |= 0x8000000000000uLL;
    }
  }
  uint64_t v55 = *((unsigned int *)a1 + 24);
  *(void *)(a2 + 424) = v46;
  *(void *)(a2 + 432) = v55;
  uint64_t v56 = *((unsigned int *)a1 + 26);
  *(void *)(a2 + 440) = a1[100];
  *(void *)(a2 + 448) = v56;
  uint64_t v57 = a1[109];
  *(void *)(a2 + 456) = a1[108];
  *(void *)(a2 + 464) = v57;
  uint64_t v58 = a1[116];
  *(void *)(a2 + 472) = *((unsigned int *)a1 + 28);
  *(void *)(a2 + 480) = v58;
  uint64_t v59 = a1[118];
  *(void *)(a2 + 488) = a1[117];
  *(void *)(a2 + 496) = v59;
  uint64_t v60 = a1[119];
  *(void *)(a2 + 1248) = v45 | 0xFFE0000000000000;
  uint64_t v61 = a1[120];
  *(void *)(a2 + 504) = v60;
  *(void *)(a2 + 512) = v61;
  *(void *)(a2 + 520) = a1[121];
  *(void *)(a2 + 528) = a1[122];
  *(void *)(a2 + 536) = a1[123];
  *(void *)(a2 + 544) = a1[124];
  uint64_t v62 = *((void *)a1 + 16);
  uint64_t v63 = *((void *)a1 + 17);
  v64.n128_u64[0] = v62;
  v64.n128_u64[1] = HIDWORD(v62);
  __n128 v65 = v64;
  v64.n128_u64[0] = v63;
  v64.n128_u64[1] = HIDWORD(v63);
  *(__n128 *)(a2 + 552) = v65;
  *(__n128 *)(a2 + 568) = v64;
  v65.n128_u64[0] = *((void *)a1 + 18);
  uint64_t v66 = *((void *)a1 + 19);
  v64.n128_u64[0] = v65.n128_u32[0];
  v64.n128_u64[1] = v65.n128_u32[1];
  __n128 result = v64;
  v64.n128_u64[0] = v66;
  v64.n128_u64[1] = HIDWORD(v66);
  *(__n128 *)(a2 + 584) = result;
  *(__n128 *)(a2 + 600) = v64;
  uint64_t v68 = a1[160];
  *(void *)(a2 + 1256) = 0x3FFFLL;
  *(void *)(a2 + 616) = v68;
  return result;
}

__n128 sub_1CBE75A18(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = v16;
  uint64_t v26 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v25;
  *(void *)(a2 + 192) = v26;
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = a1[52];
  uint64_t v29 = a1[53];
  uint64_t v30 = v13 | 0x1F800000;
  *(void *)(a2 + 1248) = v13 | 0x1F800000;
  *(void *)(a2 + 216) = v28;
  *(void *)(a2 + 224) = v29;
  unsigned int v31 = *((_DWORD *)a1 + 16);
  if (!v31)
  {
    uint64_t v32 = a1[56];
    uint64_t v30 = v13 | 0x3F800000;
    *(void *)(a2 + 1248) = v13 | 0x3F800000;
    *(void *)(a2 + 232) = v32;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 1)
  {
    uint64_t v33 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x40000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 240) = v33;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 2)
  {
    uint64_t v34 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x80000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 248) = v34;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 3)
  {
    uint64_t v35 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 256) = v35;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 4)
  {
    uint64_t v36 = *((unsigned int *)a1 + 14);
    v30 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 264) = v36;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 5)
  {
    uint64_t v37 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 272) = v37;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 6)
  {
    uint64_t v38 = a1[56];
    v30 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 280) = v38;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 7)
  {
    uint64_t v39 = *((unsigned int *)a1 + 14);
    *(void *)(a2 + 1248) = v30 | 0x1000000000;
    *(void *)(a2 + 288) = v39;
    unsigned int v31 = *((_DWORD *)a1 + 16);
    if (v31 == 7)
    {
      v30 |= 0x3000000000uLL;
      *(void *)(a2 + 296) = a1[60];
    }
    else
    {
      v30 |= 0x1000000000uLL;
    }
  }
  uint64_t v40 = v31;
  uint64_t v41 = *((unsigned int *)a1 + 17);
  *(void *)(a2 + 304) = v40;
  *(void *)(a2 + 312) = v41;
  uint64_t v42 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 320) = a1[72];
  *(void *)(a2 + 328) = v42;
  uint64_t v43 = a1[80];
  uint64_t v44 = a1[81];
  uint64_t v45 = v30 | 0xFC000000000;
  *(void *)(a2 + 1248) = v30 | 0xFC000000000;
  *(void *)(a2 + 336) = v43;
  *(void *)(a2 + 344) = v44;
  unsigned int v46 = *((_DWORD *)a1 + 23);
  if (!v46)
  {
    uint64_t v47 = a1[84];
    uint64_t v45 = v30 | 0x1FC000000000;
    *(void *)(a2 + 1248) = v30 | 0x1FC000000000;
    *(void *)(a2 + 352) = v47;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 1)
  {
    uint64_t v48 = *((unsigned __int16 *)a1 + 42);
    v45 |= 0x200000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 360) = v48;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 2)
  {
    uint64_t v49 = *((unsigned __int16 *)a1 + 42);
    v45 |= 0x400000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 368) = v49;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 3)
  {
    uint64_t v50 = *((unsigned __int16 *)a1 + 42);
    v45 |= 0x800000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 376) = v50;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 4)
  {
    uint64_t v51 = *((unsigned int *)a1 + 21);
    v45 |= 0x1000000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 384) = v51;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 5)
  {
    uint64_t v52 = *((unsigned __int16 *)a1 + 42);
    v45 |= 0x2000000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 392) = v52;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 6)
  {
    uint64_t v53 = a1[84];
    v45 |= 0x4000000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 400) = v53;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 7)
  {
    uint64_t v54 = *((unsigned int *)a1 + 21);
    *(void *)(a2 + 1248) = v45 | 0x8000000000000;
    *(void *)(a2 + 408) = v54;
    unsigned int v46 = *((_DWORD *)a1 + 23);
    if (v46 == 7)
    {
      v45 |= 0x18000000000000uLL;
      *(void *)(a2 + 416) = a1[88];
    }
    else
    {
      v45 |= 0x8000000000000uLL;
    }
  }
  uint64_t v55 = *((unsigned int *)a1 + 24);
  *(void *)(a2 + 424) = v46;
  *(void *)(a2 + 432) = v55;
  uint64_t v56 = *((unsigned int *)a1 + 26);
  *(void *)(a2 + 440) = a1[100];
  *(void *)(a2 + 448) = v56;
  uint64_t v57 = a1[109];
  *(void *)(a2 + 456) = a1[108];
  *(void *)(a2 + 464) = v57;
  uint64_t v58 = *((void *)a1 + 14);
  v59.n128_u64[0] = v58;
  v59.n128_u64[1] = HIDWORD(v58);
  *(__n128 *)(a2 + 472) = v59;
  uint64_t v60 = a1[121];
  *(void *)(a2 + 488) = a1[120];
  *(void *)(a2 + 496) = v60;
  uint64_t v61 = a1[122];
  *(void *)(a2 + 1248) = v45 | 0xFFE0000000000000;
  uint64_t v62 = a1[123];
  *(void *)(a2 + 504) = v61;
  *(void *)(a2 + 512) = v62;
  *(void *)(a2 + 520) = a1[124];
  *(void *)(a2 + 528) = a1[125];
  *(void *)(a2 + 536) = a1[126];
  *(void *)(a2 + 544) = a1[127];
  *(void *)(a2 + 552) = a1[128];
  uint64_t v63 = *(void *)(a1 + 132);
  v59.n128_u64[0] = v63;
  v59.n128_u64[1] = HIDWORD(v63);
  __n128 v64 = v59;
  uint64_t v65 = *(void *)(a1 + 140);
  v59.n128_u64[0] = v65;
  v59.n128_u64[1] = HIDWORD(v65);
  *(__n128 *)(a2 + 560) = v64;
  *(__n128 *)(a2 + 576) = v59;
  v64.n128_u64[0] = *(void *)(a1 + 148);
  v59.n128_u64[0] = v64.n128_u32[0];
  v59.n128_u64[1] = v64.n128_u32[1];
  __n128 result = v59;
  uint64_t v67 = *(void *)(a1 + 156);
  v59.n128_u64[0] = v67;
  v59.n128_u64[1] = HIDWORD(v67);
  *(__n128 *)(a2 + 592) = result;
  *(__n128 *)(a2 + 608) = v59;
  uint64_t v68 = a1[164];
  *(void *)(a2 + 1256) = 0x7FFFLL;
  *(void *)(a2 + 624) = v68;
  return result;
}

__n128 sub_1CBE75F58(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = v16;
  uint64_t v26 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v25;
  *(void *)(a2 + 192) = v26;
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = a1[52];
  uint64_t v29 = a1[53];
  uint64_t v30 = v13 | 0x1F800000;
  *(void *)(a2 + 1248) = v13 | 0x1F800000;
  *(void *)(a2 + 216) = v28;
  *(void *)(a2 + 224) = v29;
  unsigned int v31 = *((_DWORD *)a1 + 16);
  if (!v31)
  {
    uint64_t v32 = a1[56];
    uint64_t v30 = v13 | 0x3F800000;
    *(void *)(a2 + 1248) = v13 | 0x3F800000;
    *(void *)(a2 + 232) = v32;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 1)
  {
    uint64_t v33 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x40000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 240) = v33;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 2)
  {
    uint64_t v34 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x80000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 248) = v34;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 3)
  {
    uint64_t v35 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 256) = v35;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 4)
  {
    uint64_t v36 = *((unsigned int *)a1 + 14);
    v30 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 264) = v36;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 5)
  {
    uint64_t v37 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 272) = v37;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 6)
  {
    uint64_t v38 = a1[56];
    v30 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 280) = v38;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 7)
  {
    uint64_t v39 = *((unsigned int *)a1 + 14);
    *(void *)(a2 + 1248) = v30 | 0x1000000000;
    *(void *)(a2 + 288) = v39;
    unsigned int v31 = *((_DWORD *)a1 + 16);
    if (v31 == 7)
    {
      v30 |= 0x3000000000uLL;
      *(void *)(a2 + 296) = a1[60];
    }
    else
    {
      v30 |= 0x1000000000uLL;
    }
  }
  uint64_t v40 = v31;
  uint64_t v41 = *((unsigned int *)a1 + 17);
  *(void *)(a2 + 304) = v40;
  *(void *)(a2 + 312) = v41;
  uint64_t v42 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 320) = a1[72];
  *(void *)(a2 + 328) = v42;
  uint64_t v43 = a1[80];
  uint64_t v44 = a1[81];
  uint64_t v45 = v30 | 0xFC000000000;
  *(void *)(a2 + 1248) = v30 | 0xFC000000000;
  *(void *)(a2 + 336) = v43;
  *(void *)(a2 + 344) = v44;
  unsigned int v46 = *((_DWORD *)a1 + 23);
  if (!v46)
  {
    uint64_t v47 = a1[84];
    uint64_t v45 = v30 | 0x1FC000000000;
    *(void *)(a2 + 1248) = v30 | 0x1FC000000000;
    *(void *)(a2 + 352) = v47;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 1)
  {
    uint64_t v48 = *((unsigned __int16 *)a1 + 42);
    v45 |= 0x200000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 360) = v48;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 2)
  {
    uint64_t v49 = *((unsigned __int16 *)a1 + 42);
    v45 |= 0x400000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 368) = v49;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 3)
  {
    uint64_t v50 = *((unsigned __int16 *)a1 + 42);
    v45 |= 0x800000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 376) = v50;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 4)
  {
    uint64_t v51 = *((unsigned int *)a1 + 21);
    v45 |= 0x1000000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 384) = v51;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 5)
  {
    uint64_t v52 = *((unsigned __int16 *)a1 + 42);
    v45 |= 0x2000000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 392) = v52;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 6)
  {
    uint64_t v53 = a1[84];
    v45 |= 0x4000000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 400) = v53;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 7)
  {
    uint64_t v54 = *((unsigned int *)a1 + 21);
    *(void *)(a2 + 1248) = v45 | 0x8000000000000;
    *(void *)(a2 + 408) = v54;
    unsigned int v46 = *((_DWORD *)a1 + 23);
    if (v46 == 7)
    {
      v45 |= 0x18000000000000uLL;
      *(void *)(a2 + 416) = a1[88];
      unsigned int v46 = 7;
    }
    else
    {
      v45 |= 0x8000000000000uLL;
    }
  }
  uint64_t v55 = *((unsigned int *)a1 + 24);
  *(void *)(a2 + 424) = v46;
  *(void *)(a2 + 432) = v55;
  uint64_t v56 = *((unsigned int *)a1 + 26);
  *(void *)(a2 + 440) = a1[100];
  *(void *)(a2 + 448) = v56;
  uint64_t v57 = a1[109];
  *(void *)(a2 + 456) = a1[108];
  *(void *)(a2 + 464) = v57;
  uint64_t v58 = *((void *)a1 + 14);
  v59.n128_u64[0] = v58;
  v59.n128_u64[1] = HIDWORD(v58);
  *(__n128 *)(a2 + 472) = v59;
  uint64_t v60 = a1[121];
  *(void *)(a2 + 488) = a1[120];
  *(void *)(a2 + 496) = v60;
  uint64_t v61 = a1[122];
  *(void *)(a2 + 1248) = v45 | 0xFFE0000000000000;
  uint64_t v62 = a1[123];
  *(void *)(a2 + 504) = v61;
  *(void *)(a2 + 512) = v62;
  *(void *)(a2 + 520) = a1[124];
  *(void *)(a2 + 528) = a1[125];
  *(void *)(a2 + 536) = a1[126];
  *(void *)(a2 + 544) = a1[127];
  uint64_t v63 = *((void *)a1 + 16);
  uint64_t v64 = *((void *)a1 + 17);
  v59.n128_u64[0] = v63;
  v59.n128_u64[1] = HIDWORD(v63);
  __n128 v65 = v59;
  v59.n128_u64[0] = v64;
  v59.n128_u64[1] = HIDWORD(v64);
  *(__n128 *)(a2 + 552) = v65;
  *(__n128 *)(a2 + 568) = v59;
  v65.n128_u64[0] = *((void *)a1 + 18);
  uint64_t v66 = *((void *)a1 + 19);
  v59.n128_u64[0] = v65.n128_u32[0];
  v59.n128_u64[1] = v65.n128_u32[1];
  __n128 result = v59;
  v59.n128_u64[0] = v66;
  v59.n128_u64[1] = HIDWORD(v66);
  *(__n128 *)(a2 + 584) = result;
  *(__n128 *)(a2 + 600) = v59;
  uint64_t v68 = a1[160];
  *(void *)(a2 + 1256) = 0x3FFFLL;
  *(void *)(a2 + 616) = v68;
  return result;
}

__n128 sub_1CBE7648C(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = *(void *)(a1 + 20);
  v14.n128_u64[0] = v13;
  v14.n128_u64[1] = HIDWORD(v13);
  *(__n128 *)(a2 + 96) = v14;
  uint64_t v15 = *(void *)(a1 + 28);
  v14.n128_u64[0] = v15;
  v14.n128_u64[1] = HIDWORD(v15);
  *(__n128 *)(a2 + 112) = v14;
  uint64_t v16 = a1[37];
  *(void *)(a2 + 128) = a1[36];
  *(void *)(a2 + 136) = v16;
  uint64_t v17 = a1[39];
  *(void *)(a2 + 144) = a1[38];
  *(void *)(a2 + 152) = v17;
  uint64_t v18 = a1[41];
  *(void *)(a2 + 160) = a1[40];
  *(void *)(a2 + 168) = v18;
  uint64_t v19 = a1[43];
  *(void *)(a2 + 176) = a1[42];
  *(void *)(a2 + 184) = v19;
  uint64_t v20 = *((unsigned __int16 *)a1 + 23);
  *(void *)(a2 + 192) = *((unsigned __int16 *)a1 + 22);
  *(void *)(a2 + 200) = v20;
  uint64_t v21 = *((void *)a1 + 6);
  uint64_t v22 = *((void *)a1 + 7);
  v14.n128_u64[0] = v21;
  v14.n128_u64[1] = HIDWORD(v21);
  __n128 v23 = v14;
  v14.n128_u64[0] = v22;
  v14.n128_u64[1] = HIDWORD(v22);
  *(__n128 *)(a2 + 208) = v23;
  *(__n128 *)(a2 + 224) = v14;
  v23.n128_u64[0] = *((void *)a1 + 8);
  uint64_t v24 = *((void *)a1 + 9);
  v14.n128_u64[0] = v23.n128_u32[0];
  v14.n128_u64[1] = v23.n128_u32[1];
  __n128 result = v14;
  v14.n128_u64[0] = v24;
  v14.n128_u64[1] = HIDWORD(v24);
  *(__n128 *)(a2 + 240) = result;
  *(__n128 *)(a2 + 256) = v14;
  uint64_t v26 = a1[80];
  *(void *)(a2 + 1248) = v3 | 0x7FFFFFE00;
  *(void *)(a2 + 272) = v26;
  return result;
}

__n128 sub_1CBE7663C(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = *(void *)(a1 + 20);
  *(void *)&long long v14 = v13;
  *((void *)&v14 + 1) = HIDWORD(v13);
  *(_OWORD *)(a2 + 96) = v14;
  uint64_t v15 = a1[28];
  uint64_t v16 = *((unsigned int *)a1 + 8);
  uint64_t v17 = v3 | 0xFE00;
  *(void *)(a2 + 1248) = v3 | 0xFE00;
  *(void *)(a2 + 112) = v15;
  *(void *)(a2 + 120) = v16;
  unsigned int v18 = *((_DWORD *)a1 + 11);
  if (!v18)
  {
    uint64_t v19 = a1[36];
    uint64_t v17 = v3 | 0x1FE00;
    *(void *)(a2 + 1248) = v3 | 0x1FE00;
    *(void *)(a2 + 128) = v19;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 1)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 136) = v20;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 2)
  {
    uint64_t v21 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 144) = v21;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 3)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 152) = v22;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 4)
  {
    uint64_t v23 = *((unsigned int *)a1 + 9);
    v17 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 160) = v23;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 5)
  {
    uint64_t v24 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x200000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 168) = v24;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 6)
  {
    uint64_t v25 = a1[36];
    v17 |= 0x400000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 176) = v25;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 7)
  {
    uint64_t v26 = *((unsigned int *)a1 + 9);
    *(void *)(a2 + 1248) = v17 | 0x800000;
    *(void *)(a2 + 184) = v26;
    unsigned int v18 = *((_DWORD *)a1 + 11);
    if (v18 == 7)
    {
      v17 |= 0x1800000uLL;
      *(void *)(a2 + 192) = a1[40];
      unsigned int v18 = 7;
    }
    else
    {
      v17 |= 0x800000uLL;
    }
  }
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = v18;
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = *((unsigned int *)a1 + 14);
  *(void *)(a2 + 216) = a1[52];
  *(void *)(a2 + 224) = v28;
  uint64_t v29 = a1[61];
  *(void *)(a2 + 232) = a1[60];
  *(void *)(a2 + 240) = v29;
  uint64_t v30 = *((void *)a1 + 8);
  v31.n128_u64[0] = v30;
  v31.n128_u64[1] = HIDWORD(v30);
  *(__n128 *)(a2 + 248) = v31;
  uint64_t v32 = a1[73];
  *(void *)(a2 + 264) = a1[72];
  *(void *)(a2 + 272) = v32;
  uint64_t v33 = a1[75];
  *(void *)(a2 + 280) = a1[74];
  *(void *)(a2 + 288) = v33;
  uint64_t v34 = a1[77];
  *(void *)(a2 + 296) = a1[76];
  *(void *)(a2 + 304) = v34;
  uint64_t v35 = a1[79];
  *(void *)(a2 + 312) = a1[78];
  *(void *)(a2 + 320) = v35;
  uint64_t v36 = *((void *)a1 + 10);
  uint64_t v37 = *((void *)a1 + 11);
  v31.n128_u64[0] = v36;
  v31.n128_u64[1] = HIDWORD(v36);
  __n128 v38 = v31;
  v31.n128_u64[0] = v37;
  v31.n128_u64[1] = HIDWORD(v37);
  *(__n128 *)(a2 + 328) = v38;
  *(__n128 *)(a2 + 344) = v31;
  v38.n128_u64[0] = *((void *)a1 + 12);
  uint64_t v39 = *((void *)a1 + 13);
  v31.n128_u64[0] = v38.n128_u32[0];
  v31.n128_u64[1] = v38.n128_u32[1];
  __n128 result = v31;
  v31.n128_u64[0] = v39;
  v31.n128_u64[1] = HIDWORD(v39);
  *(__n128 *)(a2 + 360) = result;
  *(__n128 *)(a2 + 376) = v31;
  uint64_t v41 = *((unsigned int *)a1 + 28);
  uint64_t v42 = a1[116];
  *(void *)(a2 + 1248) = v17 | 0x7FFFFFE000000;
  *(void *)(a2 + 392) = v41;
  *(void *)(a2 + 400) = v42;
  return result;
}

unsigned __int8 *sub_1CBE76920(unsigned __int8 *result, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)result + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *result;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)result + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)result;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)result + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)result;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)result + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)result;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)result + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)result;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)result + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)result;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)result + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *result;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)result + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)result;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)result + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = result[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)result + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  uint64_t v13 = *((unsigned int *)result + 5);
  *(void *)(a2 + 88) = result[16];
  *(void *)(a2 + 96) = v13;
  uint64_t v14 = result[24];
  uint64_t v15 = *((unsigned int *)result + 7);
  uint64_t v16 = v3 | 0x7E00;
  *(void *)(a2 + 1248) = v3 | 0x7E00;
  *(void *)(a2 + 104) = v14;
  *(void *)(a2 + 112) = v15;
  unsigned int v17 = *((_DWORD *)result + 10);
  if (!v17)
  {
    uint64_t v18 = result[32];
    uint64_t v16 = v3 | 0xFE00;
    *(void *)(a2 + 1248) = v3 | 0xFE00;
    *(void *)(a2 + 120) = v18;
    unsigned int v17 = *((_DWORD *)result + 10);
  }
  if (v17 == 1)
  {
    uint64_t v19 = *((unsigned __int16 *)result + 16);
    v16 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 128) = v19;
    unsigned int v17 = *((_DWORD *)result + 10);
  }
  if (v17 == 2)
  {
    uint64_t v20 = *((unsigned __int16 *)result + 16);
    v16 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 136) = v20;
    unsigned int v17 = *((_DWORD *)result + 10);
  }
  if (v17 == 3)
  {
    uint64_t v21 = *((unsigned __int16 *)result + 16);
    v16 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 144) = v21;
    unsigned int v17 = *((_DWORD *)result + 10);
  }
  if (v17 == 4)
  {
    uint64_t v22 = *((unsigned int *)result + 8);
    v16 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 152) = v22;
    unsigned int v17 = *((_DWORD *)result + 10);
  }
  if (v17 == 5)
  {
    uint64_t v23 = *((unsigned __int16 *)result + 16);
    v16 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 160) = v23;
    unsigned int v17 = *((_DWORD *)result + 10);
  }
  if (v17 == 6)
  {
    uint64_t v24 = result[32];
    v16 |= 0x200000uLL;
    *(void *)(a2 + 1248) = v16;
    *(void *)(a2 + 168) = v24;
    unsigned int v17 = *((_DWORD *)result + 10);
  }
  if (v17 == 7)
  {
    uint64_t v25 = *((unsigned int *)result + 8);
    *(void *)(a2 + 1248) = v16 | 0x400000;
    *(void *)(a2 + 176) = v25;
    unsigned int v17 = *((_DWORD *)result + 10);
    if (v17 == 7)
    {
      v16 |= 0xC00000uLL;
      *(void *)(a2 + 184) = result[36];
    }
    else
    {
      v16 |= 0x400000uLL;
    }
  }
  uint64_t v26 = *((unsigned int *)result + 11);
  *(void *)(a2 + 192) = v17;
  *(void *)(a2 + 200) = v26;
  uint64_t v27 = *((unsigned int *)result + 13);
  *(void *)(a2 + 208) = result[48];
  *(void *)(a2 + 216) = v27;
  uint64_t v28 = *((unsigned int *)result + 15);
  *(void *)(a2 + 224) = result[56];
  *(void *)(a2 + 232) = v28;
  uint64_t v29 = result[65];
  *(void *)(a2 + 240) = result[64];
  *(void *)(a2 + 248) = v29;
  uint64_t v30 = result[67];
  *(void *)(a2 + 256) = result[66];
  *(void *)(a2 + 264) = v30;
  uint64_t v31 = result[69];
  *(void *)(a2 + 272) = result[68];
  *(void *)(a2 + 280) = v31;
  uint64_t v32 = result[71];
  *(void *)(a2 + 288) = result[70];
  *(void *)(a2 + 296) = v32;
  uint64_t v33 = *((void *)result + 9);
  uint64_t v34 = *((void *)result + 10);
  *(void *)&long long v35 = v33;
  *((void *)&v35 + 1) = HIDWORD(v33);
  long long v36 = v35;
  *(void *)&long long v35 = v34;
  *((void *)&v35 + 1) = HIDWORD(v34);
  *(_OWORD *)(a2 + 304) = v36;
  *(_OWORD *)(a2 + 320) = v35;
  *(void *)&long long v36 = *((void *)result + 11);
  uint64_t v37 = *((void *)result + 12);
  *(void *)&long long v35 = v36;
  *((void *)&v35 + 1) = DWORD1(v36);
  long long v38 = v35;
  uint64_t v39 = v16 | 0x3FFFFF000000;
  *(void *)(a2 + 1248) = v16 | 0x3FFFFF000000;
  *(void *)&long long v35 = v37;
  *((void *)&v35 + 1) = HIDWORD(v37);
  *(_OWORD *)(a2 + 336) = v38;
  *(_OWORD *)(a2 + 352) = v35;
  unsigned int v40 = *((_DWORD *)result + 28);
  if (!v40)
  {
    uint64_t v41 = result[104];
    uint64_t v39 = v16 | 0x7FFFFF000000;
    *(void *)(a2 + 1248) = v16 | 0x7FFFFF000000;
    *(void *)(a2 + 368) = v41;
    unsigned int v40 = *((_DWORD *)result + 28);
  }
  if (v40 == 1)
  {
    uint64_t v42 = *((unsigned __int16 *)result + 52);
    v39 |= 0x800000000000uLL;
    *(void *)(a2 + 1248) = v39;
    *(void *)(a2 + 376) = v42;
    unsigned int v40 = *((_DWORD *)result + 28);
  }
  if (v40 == 2)
  {
    uint64_t v43 = *((unsigned __int16 *)result + 52);
    v39 |= 0x1000000000000uLL;
    *(void *)(a2 + 1248) = v39;
    *(void *)(a2 + 384) = v43;
    unsigned int v40 = *((_DWORD *)result + 28);
  }
  if (v40 == 3)
  {
    uint64_t v44 = *((unsigned __int16 *)result + 52);
    v39 |= 0x2000000000000uLL;
    *(void *)(a2 + 1248) = v39;
    *(void *)(a2 + 392) = v44;
    unsigned int v40 = *((_DWORD *)result + 28);
  }
  if (v40 == 4)
  {
    uint64_t v45 = *((unsigned int *)result + 26);
    v39 |= 0x4000000000000uLL;
    *(void *)(a2 + 1248) = v39;
    *(void *)(a2 + 400) = v45;
    unsigned int v40 = *((_DWORD *)result + 28);
  }
  if (v40 == 5)
  {
    uint64_t v46 = *((unsigned __int16 *)result + 52);
    v39 |= 0x8000000000000uLL;
    *(void *)(a2 + 1248) = v39;
    *(void *)(a2 + 408) = v46;
    unsigned int v40 = *((_DWORD *)result + 28);
  }
  if (v40 == 6)
  {
    uint64_t v47 = result[104];
    v39 |= 0x10000000000000uLL;
    *(void *)(a2 + 1248) = v39;
    *(void *)(a2 + 416) = v47;
    unsigned int v40 = *((_DWORD *)result + 28);
  }
  if (v40 == 7)
  {
    uint64_t v48 = *((unsigned int *)result + 26);
    *(void *)(a2 + 1248) = v39 | 0x20000000000000;
    *(void *)(a2 + 424) = v48;
    unsigned int v40 = *((_DWORD *)result + 28);
    if (v40 == 7)
    {
      v39 |= 0x60000000000000uLL;
      *(void *)(a2 + 432) = result[108];
    }
    else
    {
      v39 |= 0x20000000000000uLL;
    }
  }
  uint64_t v49 = v40;
  uint64_t v50 = *((unsigned int *)result + 29);
  *(void *)(a2 + 440) = v49;
  *(void *)(a2 + 448) = v50;
  uint64_t v51 = *((unsigned int *)result + 31);
  *(void *)(a2 + 456) = result[120];
  *(void *)(a2 + 464) = v51;
  uint64_t v52 = result[128];
  uint64_t v53 = v39 | 0xF80000000000000;
  *(void *)(a2 + 1248) = v39 | 0xF80000000000000;
  *(void *)(a2 + 472) = v52;
  unsigned int v54 = *((_DWORD *)result + 35);
  if (!v54)
  {
    uint64_t v55 = result[132];
    uint64_t v53 = v39 | 0x1F80000000000000;
    *(void *)(a2 + 1248) = v39 | 0x1F80000000000000;
    *(void *)(a2 + 480) = v55;
    unsigned int v54 = *((_DWORD *)result + 35);
  }
  if (v54 == 1)
  {
    uint64_t v56 = *((unsigned __int16 *)result + 66);
    v53 |= 0x2000000000000000uLL;
    *(void *)(a2 + 1248) = v53;
    *(void *)(a2 + 488) = v56;
    unsigned int v54 = *((_DWORD *)result + 35);
  }
  if (v54 == 2)
  {
    uint64_t v57 = *((unsigned __int16 *)result + 66);
    v53 |= 0x4000000000000000uLL;
    *(void *)(a2 + 1248) = v53;
    *(void *)(a2 + 496) = v57;
    unsigned int v54 = *((_DWORD *)result + 35);
  }
  if (v54 == 3)
  {
    uint64_t v58 = *((unsigned __int16 *)result + 66);
    *(void *)(a2 + 1248) = v53 | 0x8000000000000000;
    *(void *)(a2 + 504) = v58;
    unsigned int v54 = *((_DWORD *)result + 35);
  }
  if (v54 == 4)
  {
    uint64_t v59 = *((unsigned int *)result + 33);
    *(void *)(a2 + 1256) = 1;
    *(void *)(a2 + 512) = v59;
    unsigned int v54 = *((_DWORD *)result + 35);
    uint64_t v60 = 3;
  }
  else
  {
    uint64_t v60 = 2;
  }
  if (v54 == 5)
  {
    uint64_t v61 = *((unsigned __int16 *)result + 66);
    *(void *)(a2 + 1256) = v60;
    *(void *)(a2 + 520) = v61;
    unsigned int v54 = *((_DWORD *)result + 35);
  }
  if (v54 == 6)
  {
    uint64_t v62 = result[132];
    uint64_t v63 = *(void *)(a2 + 1256);
    if ((v63 & 4) == 0) {
      *(void *)(a2 + 1256) = v63 | 4;
    }
    *(void *)(a2 + 528) = v62;
    unsigned int v54 = *((_DWORD *)result + 35);
  }
  if (v54 == 7)
  {
    uint64_t v64 = *((unsigned int *)result + 33);
    uint64_t v65 = *(void *)(a2 + 1256);
    if ((v65 & 8) == 0)
    {
      v65 |= 8uLL;
      *(void *)(a2 + 1256) = v65;
    }
    *(void *)(a2 + 536) = v64;
    unsigned int v54 = *((_DWORD *)result + 35);
    if (v54 == 7)
    {
      uint64_t v66 = result[136];
      if ((v65 & 0x10) == 0)
      {
        v65 |= 0x10uLL;
        *(void *)(a2 + 1256) = v65;
      }
      *(void *)(a2 + 544) = v66;
      unsigned int v54 = 7;
    }
  }
  else
  {
    uint64_t v65 = *(void *)(a2 + 1256);
  }
  if ((v65 & 0x20) == 0)
  {
    v65 |= 0x20uLL;
    *(void *)(a2 + 1256) = v65;
  }
  *(void *)(a2 + 552) = v54;
  uint64_t v67 = *((unsigned int *)result + 36);
  if ((v65 & 0x40) == 0)
  {
    v65 |= 0x40uLL;
    *(void *)(a2 + 1256) = v65;
  }
  *(void *)(a2 + 560) = v67;
  uint64_t v68 = result[148];
  if ((v65 & 0x80) == 0)
  {
    v65 |= 0x80uLL;
    *(void *)(a2 + 1256) = v65;
  }
  *(void *)(a2 + 568) = v68;
  uint64_t v69 = *((unsigned int *)result + 38);
  if ((v65 & 0x100) == 0)
  {
    v65 |= 0x100uLL;
    *(void *)(a2 + 1256) = v65;
  }
  *(void *)(a2 + 576) = v69;
  uint64_t v70 = result[156];
  if ((v65 & 0x200) == 0)
  {
    v65 |= 0x200uLL;
    *(void *)(a2 + 1256) = v65;
  }
  *(void *)(a2 + 584) = v70;
  uint64_t v71 = result[157];
  if ((v65 & 0x400) == 0)
  {
    v65 |= 0x400uLL;
    *(void *)(a2 + 1256) = v65;
  }
  *(void *)(a2 + 592) = v71;
  unsigned int v72 = *((_DWORD *)result + 42);
  if (!v72)
  {
    uint64_t v73 = result[160];
    if ((v65 & 0x800) == 0)
    {
      v65 |= 0x800uLL;
      *(void *)(a2 + 1256) = v65;
    }
    *(void *)(a2 + 600) = v73;
    unsigned int v72 = *((_DWORD *)result + 42);
  }
  if (v72 == 1)
  {
    uint64_t v74 = *((unsigned __int16 *)result + 80);
    if ((v65 & 0x1000) == 0)
    {
      v65 |= 0x1000uLL;
      *(void *)(a2 + 1256) = v65;
    }
    *(void *)(a2 + 608) = v74;
    unsigned int v72 = *((_DWORD *)result + 42);
  }
  if (v72 == 2)
  {
    uint64_t v75 = *((unsigned __int16 *)result + 80);
    if ((v65 & 0x2000) == 0)
    {
      v65 |= 0x2000uLL;
      *(void *)(a2 + 1256) = v65;
    }
    *(void *)(a2 + 616) = v75;
    unsigned int v72 = *((_DWORD *)result + 42);
  }
  if (v72 == 3)
  {
    uint64_t v76 = *((unsigned __int16 *)result + 80);
    if ((v65 & 0x4000) == 0)
    {
      v65 |= 0x4000uLL;
      *(void *)(a2 + 1256) = v65;
    }
    *(void *)(a2 + 624) = v76;
    unsigned int v72 = *((_DWORD *)result + 42);
  }
  if (v72 == 4)
  {
    uint64_t v77 = *((unsigned int *)result + 40);
    if ((v65 & 0x8000) == 0)
    {
      v65 |= 0x8000uLL;
      *(void *)(a2 + 1256) = v65;
    }
    *(void *)(a2 + 632) = v77;
    unsigned int v72 = *((_DWORD *)result + 42);
  }
  if (v72 == 5)
  {
    uint64_t v78 = *((unsigned __int16 *)result + 80);
    if ((v65 & 0x10000) == 0)
    {
      v65 |= 0x10000uLL;
      *(void *)(a2 + 1256) = v65;
    }
    *(void *)(a2 + 640) = v78;
    unsigned int v72 = *((_DWORD *)result + 42);
  }
  if (v72 == 6)
  {
    uint64_t v79 = result[160];
    if ((v65 & 0x20000) == 0)
    {
      v65 |= 0x20000uLL;
      *(void *)(a2 + 1256) = v65;
    }
    *(void *)(a2 + 648) = v79;
    unsigned int v72 = *((_DWORD *)result + 42);
  }
  if (v72 == 7)
  {
    uint64_t v80 = *((unsigned int *)result + 40);
    if ((v65 & 0x40000) == 0)
    {
      v65 |= 0x40000uLL;
      *(void *)(a2 + 1256) = v65;
    }
    *(void *)(a2 + 656) = v80;
    unsigned int v72 = *((_DWORD *)result + 42);
    if (v72 == 7)
    {
      uint64_t v81 = result[164];
      if ((v65 & 0x80000) == 0)
      {
        v65 |= 0x80000uLL;
        *(void *)(a2 + 1256) = v65;
      }
      *(void *)(a2 + 664) = v81;
      unsigned int v72 = 7;
    }
  }
  if ((v65 & 0x100000) == 0)
  {
    v65 |= 0x100000uLL;
    *(void *)(a2 + 1256) = v65;
  }
  *(void *)(a2 + 672) = v72;
  uint64_t v82 = *((unsigned int *)result + 43);
  if ((v65 & 0x200000) == 0)
  {
    v65 |= 0x200000uLL;
    *(void *)(a2 + 1256) = v65;
  }
  *(void *)(a2 + 680) = v82;
  uint64_t v83 = result[176];
  if ((v65 & 0x400000) == 0)
  {
    v65 |= 0x400000uLL;
    *(void *)(a2 + 1256) = v65;
  }
  *(void *)(a2 + 688) = v83;
  uint64_t v84 = *((unsigned int *)result + 45);
  if ((v65 & 0x800000) == 0)
  {
    v65 |= 0x800000uLL;
    *(void *)(a2 + 1256) = v65;
  }
  *(void *)(a2 + 696) = v84;
  uint64_t v85 = result[184];
  if ((v65 & 0x1000000) == 0)
  {
    v65 |= 0x1000000uLL;
    *(void *)(a2 + 1256) = v65;
  }
  *(void *)(a2 + 704) = v85;
  unsigned int v86 = *((_DWORD *)result + 49);
  if (!v86)
  {
    uint64_t v87 = result[188];
    if ((v65 & 0x2000000) == 0)
    {
      v65 |= 0x2000000uLL;
      *(void *)(a2 + 1256) = v65;
    }
    *(void *)(a2 + 712) = v87;
    unsigned int v86 = *((_DWORD *)result + 49);
  }
  if (v86 == 1)
  {
    uint64_t v88 = *((unsigned __int16 *)result + 94);
    if ((v65 & 0x4000000) == 0)
    {
      v65 |= 0x4000000uLL;
      *(void *)(a2 + 1256) = v65;
    }
    *(void *)(a2 + 720) = v88;
    unsigned int v86 = *((_DWORD *)result + 49);
  }
  if (v86 == 2)
  {
    uint64_t v89 = *((unsigned __int16 *)result + 94);
    if ((v65 & 0x8000000) == 0)
    {
      v65 |= 0x8000000uLL;
      *(void *)(a2 + 1256) = v65;
    }
    *(void *)(a2 + 728) = v89;
    unsigned int v86 = *((_DWORD *)result + 49);
  }
  if (v86 == 3)
  {
    uint64_t v90 = *((unsigned __int16 *)result + 94);
    if ((v65 & 0x10000000) == 0)
    {
      v65 |= 0x10000000uLL;
      *(void *)(a2 + 1256) = v65;
    }
    *(void *)(a2 + 736) = v90;
    unsigned int v86 = *((_DWORD *)result + 49);
  }
  if (v86 == 4)
  {
    uint64_t v91 = *((unsigned int *)result + 47);
    if ((v65 & 0x20000000) == 0)
    {
      v65 |= 0x20000000uLL;
      *(void *)(a2 + 1256) = v65;
    }
    *(void *)(a2 + 744) = v91;
    unsigned int v86 = *((_DWORD *)result + 49);
  }
  if (v86 == 5)
  {
    uint64_t v92 = *((unsigned __int16 *)result + 94);
    if ((v65 & 0x40000000) == 0)
    {
      v65 |= 0x40000000uLL;
      *(void *)(a2 + 1256) = v65;
    }
    *(void *)(a2 + 752) = v92;
    unsigned int v86 = *((_DWORD *)result + 49);
  }
  if (v86 == 6)
  {
    uint64_t v93 = result[188];
    if ((v65 & 0x80000000) == 0)
    {
      v65 |= 0x80000000uLL;
      *(void *)(a2 + 1256) = v65;
    }
    *(void *)(a2 + 760) = v93;
    unsigned int v86 = *((_DWORD *)result + 49);
  }
  if (v86 == 7)
  {
    uint64_t v94 = *((unsigned int *)result + 47);
    if ((v65 & 0x100000000) == 0)
    {
      v65 |= 0x100000000uLL;
      *(void *)(a2 + 1256) = v65;
    }
    *(void *)(a2 + 768) = v94;
    unsigned int v86 = *((_DWORD *)result + 49);
    if (v86 == 7)
    {
      uint64_t v95 = result[192];
      if ((v65 & 0x200000000) == 0)
      {
        v65 |= 0x200000000uLL;
        *(void *)(a2 + 1256) = v65;
      }
      *(void *)(a2 + 776) = v95;
      unsigned int v86 = 7;
    }
  }
  if ((v65 & 0x400000000) == 0)
  {
    v65 |= 0x400000000uLL;
    *(void *)(a2 + 1256) = v65;
  }
  *(void *)(a2 + 784) = v86;
  uint64_t v96 = *((unsigned int *)result + 50);
  if ((v65 & 0x800000000) == 0)
  {
    v65 |= 0x800000000uLL;
    *(void *)(a2 + 1256) = v65;
  }
  *(void *)(a2 + 792) = v96;
  uint64_t v97 = result[204];
  if ((v65 & 0x1000000000) == 0)
  {
    v65 |= 0x1000000000uLL;
    *(void *)(a2 + 1256) = v65;
  }
  *(void *)(a2 + 800) = v97;
  uint64_t v98 = *((unsigned int *)result + 52);
  if ((v65 & 0x2000000000) == 0)
  {
    v65 |= 0x2000000000uLL;
    *(void *)(a2 + 1256) = v65;
  }
  *(void *)(a2 + 808) = v98;
  uint64_t v99 = result[212];
  if ((v65 & 0x4000000000) == 0)
  {
    v65 |= 0x4000000000uLL;
    *(void *)(a2 + 1256) = v65;
  }
  *(void *)(a2 + 816) = v99;
  uint64_t v100 = result[216];
  if ((v65 & 0x8000000000) == 0) {
    *(void *)(a2 + 1256) = v65 | 0x8000000000;
  }
  *(void *)(a2 + 824) = v100;
  return result;
}

__n128 sub_1CBE771B4(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v16;
  *(void *)(a2 + 192) = v25;
  uint64_t v26 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v26;
  *(void *)(a2 + 216) = a1[52];
  uint64_t v27 = *((void *)a1 + 7);
  v28.n128_u64[0] = v27;
  v28.n128_u64[1] = HIDWORD(v27);
  *(__n128 *)(a2 + 224) = v28;
  uint64_t v29 = a1[65];
  *(void *)(a2 + 240) = a1[64];
  *(void *)(a2 + 248) = v29;
  uint64_t v30 = a1[67];
  *(void *)(a2 + 256) = a1[66];
  *(void *)(a2 + 264) = v30;
  uint64_t v31 = a1[69];
  *(void *)(a2 + 272) = a1[68];
  *(void *)(a2 + 280) = v31;
  uint64_t v32 = a1[71];
  *(void *)(a2 + 288) = a1[70];
  *(void *)(a2 + 296) = v32;
  uint64_t v33 = *((void *)a1 + 9);
  uint64_t v34 = *((void *)a1 + 10);
  v28.n128_u64[0] = v33;
  v28.n128_u64[1] = HIDWORD(v33);
  __n128 v35 = v28;
  v28.n128_u64[0] = v34;
  v28.n128_u64[1] = HIDWORD(v34);
  *(__n128 *)(a2 + 304) = v35;
  *(__n128 *)(a2 + 320) = v28;
  v35.n128_u64[0] = *((void *)a1 + 11);
  uint64_t v36 = *((void *)a1 + 12);
  v28.n128_u64[0] = v35.n128_u32[0];
  v28.n128_u64[1] = v35.n128_u32[1];
  __n128 result = v28;
  v28.n128_u64[0] = v36;
  v28.n128_u64[1] = HIDWORD(v36);
  *(__n128 *)(a2 + 336) = result;
  *(__n128 *)(a2 + 352) = v28;
  uint64_t v38 = a1[104];
  *(void *)(a2 + 1248) = v13 | 0x7FFFFF800000;
  *(void *)(a2 + 368) = v38;
  return result;
}

__n128 sub_1CBE7747C(unsigned int *a1, __n128 *a2)
{
  a2[79].n128_u64[0] = 0;
  a2[78].n128_u64[1] = 0;
  unint64_t v2 = *a1;
  uint64_t v3 = 1;
  a2[78].n128_u64[0] = 1;
  a2->n128_u64[0] = v2;
  int v4 = *a1;
  unsigned int v5 = a1[3];
  if (!(*a1 | v5))
  {
    unint64_t v6 = *((unsigned __int8 *)a1 + 4);
    uint64_t v3 = 3;
    a2[78].n128_u64[0] = 3;
    a2->n128_u64[1] = v6;
    int v4 = *a1;
    unsigned int v5 = a1[3];
  }
  if (v4) {
    BOOL v7 = 0;
  }
  else {
    BOOL v7 = v5 == 1;
  }
  if (v7)
  {
    unint64_t v8 = *((unsigned __int16 *)a1 + 2);
    v3 |= 4uLL;
    a2[78].n128_u64[0] = v3;
    a2[1].n128_u64[0] = v8;
    int v4 = *a1;
    unsigned int v5 = a1[3];
  }
  if (v4) {
    BOOL v9 = 0;
  }
  else {
    BOOL v9 = v5 == 2;
  }
  if (v9)
  {
    unint64_t v10 = *((unsigned __int16 *)a1 + 2);
    v3 |= 8uLL;
    a2[78].n128_u64[0] = v3;
    a2[1].n128_u64[1] = v10;
    int v4 = *a1;
    unsigned int v5 = a1[3];
  }
  if (!v4 && v5 == 3)
  {
    unint64_t v11 = *((unsigned __int16 *)a1 + 2);
    v3 |= 0x10uLL;
    a2[78].n128_u64[0] = v3;
    a2[2].n128_u64[0] = v11;
    int v4 = *a1;
    unsigned int v5 = a1[3];
  }
  if (!v4 && v5 == 4)
  {
    unint64_t v12 = a1[1];
    v3 |= 0x20uLL;
    a2[78].n128_u64[0] = v3;
    a2[2].n128_u64[1] = v12;
    int v4 = *a1;
    unsigned int v5 = a1[3];
  }
  if (!v4 && v5 == 5)
  {
    unint64_t v13 = *((unsigned __int16 *)a1 + 2);
    v3 |= 0x40uLL;
    a2[78].n128_u64[0] = v3;
    a2[3].n128_u64[0] = v13;
    int v4 = *a1;
    unsigned int v5 = a1[3];
  }
  if (!v4 && v5 == 6)
  {
    unint64_t v14 = *((unsigned __int8 *)a1 + 4);
    v3 |= 0x80uLL;
    a2[78].n128_u64[0] = v3;
    a2[3].n128_u64[1] = v14;
    int v4 = *a1;
    unsigned int v5 = a1[3];
  }
  if (!v4 && v5 == 7)
  {
    unint64_t v15 = a1[1];
    v3 |= 0x100uLL;
    a2[78].n128_u64[0] = v3;
    a2[4].n128_u64[0] = v15;
    int v4 = *a1;
    unsigned int v5 = a1[3];
  }
  if (!v4 && v5 == 7)
  {
    unint64_t v16 = *((unsigned __int8 *)a1 + 8);
    v3 |= 0x200uLL;
    a2[78].n128_u64[0] = v3;
    a2[4].n128_u64[1] = v16;
    int v4 = *a1;
  }
  if (!v4)
  {
    unint64_t v17 = v5;
    uint64_t v18 = v3 | 0x400;
    a2[78].n128_u64[0] = v3 | 0x400;
    a2[5].n128_u64[0] = v17;
    int v4 = *a1;
    if (*a1) {
      goto LABEL_38;
    }
    unint64_t v19 = a1[4];
    uint64_t v18 = v3 | 0xC00;
    a2[78].n128_u64[0] = v3 | 0xC00;
    a2[5].n128_u64[1] = v19;
    int v4 = *a1;
    if (*a1) {
      goto LABEL_38;
    }
    unint64_t v20 = *((unsigned __int8 *)a1 + 20);
    uint64_t v18 = v3 | 0x1C00;
    a2[78].n128_u64[0] = v3 | 0x1C00;
    a2[6].n128_u64[0] = v20;
    int v4 = *a1;
    if (*a1
      || (v21 = a1[6], uint64_t v18 = v3 | 0x3C00, a2[78].n128_u64[0] = v3 | 0x3C00, a2[6].n128_u64[1] = v21, (v4 = *a1) != 0))
    {
LABEL_38:
      uint64_t v3 = v18;
    }
    else
    {
      unint64_t v99 = a1[7];
      v3 |= 0x7C00uLL;
      a2[78].n128_u64[0] = v3;
      a2[7].n128_u64[0] = v99;
      int v4 = *a1;
    }
  }
  unsigned int v22 = a1[3];
  if (v4 == 1 && !v22)
  {
    unint64_t v23 = *((unsigned __int8 *)a1 + 4);
    v3 |= 0x8000uLL;
    a2[78].n128_u64[0] = v3;
    a2[7].n128_u64[1] = v23;
    int v4 = *a1;
    unsigned int v22 = a1[3];
  }
  if (v4 == 1 && v22 == 1)
  {
    unint64_t v24 = *((unsigned __int16 *)a1 + 2);
    v3 |= 0x10000uLL;
    a2[78].n128_u64[0] = v3;
    a2[8].n128_u64[0] = v24;
    int v4 = *a1;
    unsigned int v22 = a1[3];
  }
  if (v4 == 1 && v22 == 2)
  {
    unint64_t v25 = *((unsigned __int16 *)a1 + 2);
    v3 |= 0x20000uLL;
    a2[78].n128_u64[0] = v3;
    a2[8].n128_u64[1] = v25;
    int v4 = *a1;
    unsigned int v22 = a1[3];
  }
  if (v4 == 1 && v22 == 3)
  {
    unint64_t v26 = *((unsigned __int16 *)a1 + 2);
    v3 |= 0x40000uLL;
    a2[78].n128_u64[0] = v3;
    a2[9].n128_u64[0] = v26;
    int v4 = *a1;
    unsigned int v22 = a1[3];
  }
  if (v4 == 1 && v22 == 4)
  {
    unint64_t v27 = a1[1];
    v3 |= 0x80000uLL;
    a2[78].n128_u64[0] = v3;
    a2[9].n128_u64[1] = v27;
    int v4 = *a1;
    unsigned int v22 = a1[3];
  }
  if (v4 == 1 && v22 == 5)
  {
    unint64_t v28 = *((unsigned __int16 *)a1 + 2);
    v3 |= 0x100000uLL;
    a2[78].n128_u64[0] = v3;
    a2[10].n128_u64[0] = v28;
    int v4 = *a1;
    unsigned int v22 = a1[3];
  }
  if (v4 == 1 && v22 == 6)
  {
    unint64_t v29 = *((unsigned __int8 *)a1 + 4);
    v3 |= 0x200000uLL;
    a2[78].n128_u64[0] = v3;
    a2[10].n128_u64[1] = v29;
    int v4 = *a1;
    unsigned int v22 = a1[3];
  }
  if (v4 == 1 && v22 == 7)
  {
    unint64_t v30 = a1[1];
    v3 |= 0x400000uLL;
    a2[78].n128_u64[0] = v3;
    a2[11].n128_u64[0] = v30;
    int v4 = *a1;
    unsigned int v22 = a1[3];
  }
  if (v4 == 1 && v22 == 7)
  {
    unint64_t v31 = *((unsigned __int8 *)a1 + 8);
    v3 |= 0x800000uLL;
    a2[78].n128_u64[0] = v3;
    a2[11].n128_u64[1] = v31;
    int v4 = *a1;
  }
  if (v4 == 1)
  {
    unint64_t v32 = v22;
    uint64_t v33 = v3 | 0x1000000;
    a2[78].n128_u64[0] = v3 | 0x1000000;
    a2[12].n128_u64[0] = v32;
    int v4 = *a1;
    if (*a1 != 1) {
      goto LABEL_74;
    }
    unint64_t v34 = a1[4];
    uint64_t v33 = v3 | 0x3000000;
    a2[78].n128_u64[0] = v3 | 0x3000000;
    a2[12].n128_u64[1] = v34;
    int v4 = *a1;
    if (*a1 != 1) {
      goto LABEL_74;
    }
    unint64_t v35 = *((unsigned __int8 *)a1 + 20);
    uint64_t v33 = v3 | 0x7000000;
    a2[78].n128_u64[0] = v3 | 0x7000000;
    a2[13].n128_u64[0] = v35;
    int v4 = *a1;
    if (*a1 != 1) {
      goto LABEL_74;
    }
    unint64_t v36 = a1[6];
    uint64_t v33 = v3 | 0xF000000;
    a2[78].n128_u64[0] = v3 | 0xF000000;
    a2[13].n128_u64[1] = v36;
    int v4 = *a1;
    if (*a1 != 1) {
      goto LABEL_74;
    }
    unint64_t v37 = a1[7];
    uint64_t v33 = v3 | 0x1F000000;
    a2[78].n128_u64[0] = v3 | 0x1F000000;
    a2[14].n128_u64[0] = v37;
    int v4 = *a1;
    if (*a1 != 1) {
      goto LABEL_74;
    }
    unint64_t v38 = *((unsigned __int8 *)a1 + 32);
    uint64_t v33 = v3 | 0x3F000000;
    a2[78].n128_u64[0] = v3 | 0x3F000000;
    a2[14].n128_u64[1] = v38;
    int v4 = *a1;
    if (*a1 == 1)
    {
      unint64_t v39 = a1[9];
      v3 |= 0x7F000000uLL;
      a2[78].n128_u64[0] = v3;
      a2[15].n128_u64[0] = v39;
      int v4 = *a1;
    }
    else
    {
LABEL_74:
      uint64_t v3 = v33;
    }
  }
  if (v4 == 2)
  {
    unint64_t v40 = *((unsigned __int8 *)a1 + 4);
    uint64_t v41 = v3 | 0x80000000;
    a2[78].n128_u64[0] = v3 | 0x80000000;
    a2[15].n128_u64[1] = v40;
    if (*a1 == 2)
    {
      unint64_t v42 = *((unsigned __int8 *)a1 + 5);
      uint64_t v41 = v3 | 0x180000000;
      a2[78].n128_u64[0] = v3 | 0x180000000;
      a2[16].n128_u64[0] = v42;
    }
  }
  else
  {
    uint64_t v41 = v3;
  }
  unsigned int v43 = a1[12];
  if (!v43)
  {
    unint64_t v44 = *((unsigned __int8 *)a1 + 40);
    v41 |= 0x200000000uLL;
    a2[78].n128_u64[0] = v41;
    a2[16].n128_u64[1] = v44;
    unsigned int v43 = a1[12];
  }
  if (v43 == 1)
  {
    unint64_t v45 = *((unsigned __int16 *)a1 + 20);
    v41 |= 0x400000000uLL;
    a2[78].n128_u64[0] = v41;
    a2[17].n128_u64[0] = v45;
    unsigned int v43 = a1[12];
  }
  if (v43 == 2)
  {
    unint64_t v46 = *((unsigned __int16 *)a1 + 20);
    v41 |= 0x800000000uLL;
    a2[78].n128_u64[0] = v41;
    a2[17].n128_u64[1] = v46;
    unsigned int v43 = a1[12];
  }
  if (v43 == 3)
  {
    unint64_t v47 = *((unsigned __int16 *)a1 + 20);
    v41 |= 0x1000000000uLL;
    a2[78].n128_u64[0] = v41;
    a2[18].n128_u64[0] = v47;
    unsigned int v43 = a1[12];
  }
  if (v43 == 4)
  {
    unint64_t v48 = a1[10];
    v41 |= 0x2000000000uLL;
    a2[78].n128_u64[0] = v41;
    a2[18].n128_u64[1] = v48;
    unsigned int v43 = a1[12];
  }
  if (v43 == 5)
  {
    unint64_t v49 = *((unsigned __int16 *)a1 + 20);
    v41 |= 0x4000000000uLL;
    a2[78].n128_u64[0] = v41;
    a2[19].n128_u64[0] = v49;
    unsigned int v43 = a1[12];
  }
  if (v43 == 6)
  {
    unint64_t v50 = *((unsigned __int8 *)a1 + 40);
    v41 |= 0x8000000000uLL;
    a2[78].n128_u64[0] = v41;
    a2[19].n128_u64[1] = v50;
    unsigned int v43 = a1[12];
  }
  if (v43 == 7)
  {
    unint64_t v51 = a1[10];
    a2[78].n128_u64[0] = v41 | 0x10000000000;
    a2[20].n128_u64[0] = v51;
    unsigned int v43 = a1[12];
    if (v43 == 7)
    {
      v41 |= 0x30000000000uLL;
      a2[20].n128_u64[1] = *((unsigned __int8 *)a1 + 44);
      unsigned int v43 = 7;
    }
    else
    {
      v41 |= 0x10000000000uLL;
    }
  }
  unint64_t v52 = a1[13];
  a2[21].n128_u64[0] = v43;
  a2[21].n128_u64[1] = v52;
  unint64_t v53 = a1[15];
  a2[22].n128_u64[0] = *((unsigned __int8 *)a1 + 56);
  a2[22].n128_u64[1] = v53;
  unint64_t v54 = *((unsigned __int8 *)a1 + 64);
  unint64_t v55 = *((unsigned __int8 *)a1 + 65);
  uint64_t v56 = v41 | 0xFC0000000000;
  a2[78].n128_u64[0] = v41 | 0xFC0000000000;
  a2[23].n128_u64[0] = v54;
  a2[23].n128_u64[1] = v55;
  unsigned int v57 = a1[19];
  if (!v57)
  {
    unint64_t v58 = *((unsigned __int8 *)a1 + 68);
    uint64_t v56 = v41 | 0x1FC0000000000;
    a2[78].n128_u64[0] = v41 | 0x1FC0000000000;
    a2[24].n128_u64[0] = v58;
    unsigned int v57 = a1[19];
  }
  if (v57 == 1)
  {
    unint64_t v59 = *((unsigned __int16 *)a1 + 34);
    v56 |= 0x2000000000000uLL;
    a2[78].n128_u64[0] = v56;
    a2[24].n128_u64[1] = v59;
    unsigned int v57 = a1[19];
  }
  if (v57 == 2)
  {
    unint64_t v60 = *((unsigned __int16 *)a1 + 34);
    v56 |= 0x4000000000000uLL;
    a2[78].n128_u64[0] = v56;
    a2[25].n128_u64[0] = v60;
    unsigned int v57 = a1[19];
  }
  if (v57 == 3)
  {
    unint64_t v61 = *((unsigned __int16 *)a1 + 34);
    v56 |= 0x8000000000000uLL;
    a2[78].n128_u64[0] = v56;
    a2[25].n128_u64[1] = v61;
    unsigned int v57 = a1[19];
  }
  if (v57 == 4)
  {
    unint64_t v62 = a1[17];
    v56 |= 0x10000000000000uLL;
    a2[78].n128_u64[0] = v56;
    a2[26].n128_u64[0] = v62;
    unsigned int v57 = a1[19];
  }
  if (v57 == 5)
  {
    unint64_t v63 = *((unsigned __int16 *)a1 + 34);
    v56 |= 0x20000000000000uLL;
    a2[78].n128_u64[0] = v56;
    a2[26].n128_u64[1] = v63;
    unsigned int v57 = a1[19];
  }
  if (v57 == 6)
  {
    unint64_t v64 = *((unsigned __int8 *)a1 + 68);
    v56 |= 0x40000000000000uLL;
    a2[78].n128_u64[0] = v56;
    a2[27].n128_u64[0] = v64;
    unsigned int v57 = a1[19];
  }
  if (v57 == 7)
  {
    unint64_t v65 = a1[17];
    a2[78].n128_u64[0] = v56 | 0x80000000000000;
    a2[27].n128_u64[1] = v65;
    unsigned int v57 = a1[19];
    if (v57 == 7)
    {
      v56 |= 0x180000000000000uLL;
      a2[28].n128_u64[0] = *((unsigned __int8 *)a1 + 72);
    }
    else
    {
      v56 |= 0x80000000000000uLL;
    }
  }
  unint64_t v66 = v57;
  unint64_t v67 = a1[20];
  a2[28].n128_u64[1] = v66;
  a2[29].n128_u64[0] = v67;
  unint64_t v68 = a1[22];
  a2[29].n128_u64[1] = *((unsigned __int8 *)a1 + 84);
  a2[30].n128_u64[0] = v68;
  unint64_t v69 = *((unsigned __int8 *)a1 + 92);
  a2[78].n128_u64[0] = v56 | 0x7E00000000000000;
  unint64_t v70 = *((unsigned __int8 *)a1 + 93);
  a2[30].n128_u64[1] = v69;
  a2[31].n128_u64[0] = v70;
  unsigned int v71 = a1[26];
  if (!v71)
  {
    unint64_t v72 = *((unsigned __int8 *)a1 + 96);
    a2[78].n128_u64[0] = v56 | 0xFE00000000000000;
    a2[31].n128_u64[1] = v72;
    unsigned int v71 = a1[26];
  }
  if (v71 == 1)
  {
    unint64_t v73 = *((unsigned __int16 *)a1 + 48);
    uint64_t v74 = 1;
    a2[78].n128_u64[1] = 1;
    a2[32].n128_u64[0] = v73;
    unsigned int v71 = a1[26];
  }
  else
  {
    uint64_t v74 = 0;
  }
  if (v71 == 2)
  {
    unint64_t v75 = *((unsigned __int16 *)a1 + 48);
    v74 |= 2uLL;
    a2[78].n128_u64[1] = v74;
    a2[32].n128_u64[1] = v75;
    unsigned int v71 = a1[26];
  }
  if (v71 == 3)
  {
    unint64_t v76 = *((unsigned __int16 *)a1 + 48);
    v74 |= 4uLL;
    a2[78].n128_u64[1] = v74;
    a2[33].n128_u64[0] = v76;
    unsigned int v71 = a1[26];
  }
  if (v71 == 4)
  {
    unint64_t v77 = a1[24];
    v74 |= 8uLL;
    a2[78].n128_u64[1] = v74;
    a2[33].n128_u64[1] = v77;
    unsigned int v71 = a1[26];
  }
  if (v71 == 5)
  {
    unint64_t v78 = *((unsigned __int16 *)a1 + 48);
    v74 |= 0x10uLL;
    a2[78].n128_u64[1] = v74;
    a2[34].n128_u64[0] = v78;
    unsigned int v71 = a1[26];
  }
  if (v71 == 6)
  {
    unint64_t v79 = *((unsigned __int8 *)a1 + 96);
    v74 |= 0x20uLL;
    a2[78].n128_u64[1] = v74;
    a2[34].n128_u64[1] = v79;
    unsigned int v71 = a1[26];
  }
  if (v71 == 7)
  {
    unint64_t v80 = a1[24];
    a2[78].n128_u64[1] = v74 | 0x40;
    a2[35].n128_u64[0] = v80;
    unsigned int v71 = a1[26];
    if (v71 == 7)
    {
      v74 |= 0xC0uLL;
      a2[35].n128_u64[1] = *((unsigned __int8 *)a1 + 100);
    }
    else
    {
      v74 |= 0x40uLL;
    }
  }
  a2[36].n128_u64[0] = v71;
  a2[36].n128_u64[1] = a1[27];
  a2[37].n128_u64[0] = *((unsigned __int8 *)a1 + 112);
  a2[37].n128_u64[1] = a1[29];
  a2[38].n128_u64[0] = *((unsigned __int8 *)a1 + 120);
  a2[38].n128_u64[1] = *((unsigned __int8 *)a1 + 121);
  a2[39].n128_u64[0] = *((unsigned __int8 *)a1 + 122);
  unint64_t v81 = *((unsigned __int8 *)a1 + 123);
  uint64_t v82 = v74 | 0xFF00;
  a2[78].n128_u64[1] = v74 | 0xFF00;
  a2[39].n128_u64[1] = v81;
  unsigned int v83 = a1[33];
  if (!v83)
  {
    unint64_t v84 = *((unsigned __int8 *)a1 + 124);
    uint64_t v82 = v74 | 0x1FF00;
    a2[78].n128_u64[1] = v74 | 0x1FF00;
    a2[40].n128_u64[0] = v84;
    unsigned int v83 = a1[33];
  }
  if (v83 == 1)
  {
    unint64_t v85 = *((unsigned __int16 *)a1 + 62);
    v82 |= 0x20000uLL;
    a2[78].n128_u64[1] = v82;
    a2[40].n128_u64[1] = v85;
    unsigned int v83 = a1[33];
  }
  if (v83 == 2)
  {
    unint64_t v86 = *((unsigned __int16 *)a1 + 62);
    v82 |= 0x40000uLL;
    a2[78].n128_u64[1] = v82;
    a2[41].n128_u64[0] = v86;
    unsigned int v83 = a1[33];
  }
  if (v83 == 3)
  {
    unint64_t v87 = *((unsigned __int16 *)a1 + 62);
    v82 |= 0x80000uLL;
    a2[78].n128_u64[1] = v82;
    a2[41].n128_u64[1] = v87;
    unsigned int v83 = a1[33];
  }
  if (v83 == 4)
  {
    unint64_t v88 = a1[31];
    v82 |= 0x100000uLL;
    a2[78].n128_u64[1] = v82;
    a2[42].n128_u64[0] = v88;
    unsigned int v83 = a1[33];
  }
  if (v83 == 5)
  {
    unint64_t v89 = *((unsigned __int16 *)a1 + 62);
    v82 |= 0x200000uLL;
    a2[78].n128_u64[1] = v82;
    a2[42].n128_u64[1] = v89;
    unsigned int v83 = a1[33];
  }
  if (v83 == 6)
  {
    unint64_t v90 = *((unsigned __int8 *)a1 + 124);
    v82 |= 0x400000uLL;
    a2[78].n128_u64[1] = v82;
    a2[43].n128_u64[0] = v90;
    unsigned int v83 = a1[33];
  }
  if (v83 == 7)
  {
    unint64_t v91 = a1[31];
    a2[78].n128_u64[1] = v82 | 0x800000;
    a2[43].n128_u64[1] = v91;
    unsigned int v83 = a1[33];
    if (v83 == 7)
    {
      v82 |= 0x1800000uLL;
      a2[44].n128_u64[0] = *((unsigned __int8 *)a1 + 128);
    }
    else
    {
      v82 |= 0x800000uLL;
    }
  }
  a2[44].n128_u64[1] = v83;
  a2[45].n128_u64[0] = a1[34];
  a2[45].n128_u64[1] = *((unsigned __int8 *)a1 + 140);
  a2[46].n128_u64[0] = a1[36];
  a2[46].n128_u64[1] = *((unsigned __int8 *)a1 + 148);
  a2[47].n128_u64[0] = *((unsigned __int8 *)a1 + 149);
  a2[47].n128_u64[1] = *((unsigned __int8 *)a1 + 150);
  a2[48].n128_u64[0] = *((unsigned __int8 *)a1 + 151);
  a2[48].n128_u64[1] = a1[38];
  a2[49].n128_u64[0] = *((unsigned __int8 *)a1 + 156);
  a2[49].n128_u64[1] = *((unsigned __int8 *)a1 + 157);
  a2[50].n128_u64[0] = *((unsigned __int8 *)a1 + 158);
  a2[50].n128_u64[1] = *((unsigned __int8 *)a1 + 159);
  a2[51].n128_u64[0] = *((unsigned __int8 *)a1 + 160);
  a2[51].n128_u64[1] = *((unsigned __int8 *)a1 + 161);
  a2[52].n128_u64[0] = *((unsigned __int8 *)a1 + 162);
  a2[52].n128_u64[1] = *((unsigned __int8 *)a1 + 163);
  uint64_t v92 = *(void *)(a1 + 41);
  v93.n128_u64[0] = v92;
  v93.n128_u64[1] = HIDWORD(v92);
  __n128 v94 = v93;
  uint64_t v95 = *(void *)(a1 + 43);
  v93.n128_u64[0] = v95;
  v93.n128_u64[1] = HIDWORD(v95);
  a2[53] = v94;
  a2[54] = v93;
  v94.n128_u64[0] = *(void *)(a1 + 45);
  v93.n128_u64[0] = v94.n128_u32[0];
  v93.n128_u64[1] = v94.n128_u32[1];
  __n128 result = v93;
  uint64_t v97 = *(void *)(a1 + 47);
  v93.n128_u64[0] = v97;
  v93.n128_u64[1] = HIDWORD(v97);
  a2[55] = result;
  a2[56] = v93;
  a2[57].n128_u64[0] = a1[49];
  unint64_t v98 = *((unsigned __int8 *)a1 + 200);
  a2[78].n128_u64[1] = v82 | 0xFFFFFFE000000;
  a2[57].n128_u64[1] = v98;
  return result;
}

__n128 sub_1CBE77E2C(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = v16;
  uint64_t v26 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v25;
  *(void *)(a2 + 192) = v26;
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = a1[52];
  uint64_t v29 = a1[53];
  uint64_t v30 = v13 | 0x1F800000;
  *(void *)(a2 + 1248) = v13 | 0x1F800000;
  *(void *)(a2 + 216) = v28;
  *(void *)(a2 + 224) = v29;
  unsigned int v31 = *((_DWORD *)a1 + 16);
  if (!v31)
  {
    uint64_t v32 = a1[56];
    uint64_t v30 = v13 | 0x3F800000;
    *(void *)(a2 + 1248) = v13 | 0x3F800000;
    *(void *)(a2 + 232) = v32;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 1)
  {
    uint64_t v33 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x40000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 240) = v33;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 2)
  {
    uint64_t v34 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x80000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 248) = v34;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 3)
  {
    uint64_t v35 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 256) = v35;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 4)
  {
    uint64_t v36 = *((unsigned int *)a1 + 14);
    v30 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 264) = v36;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 5)
  {
    uint64_t v37 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 272) = v37;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 6)
  {
    uint64_t v38 = a1[56];
    v30 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 280) = v38;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 7)
  {
    uint64_t v39 = *((unsigned int *)a1 + 14);
    *(void *)(a2 + 1248) = v30 | 0x1000000000;
    *(void *)(a2 + 288) = v39;
    unsigned int v31 = *((_DWORD *)a1 + 16);
    if (v31 == 7)
    {
      v30 |= 0x3000000000uLL;
      *(void *)(a2 + 296) = a1[60];
    }
    else
    {
      v30 |= 0x1000000000uLL;
    }
  }
  uint64_t v40 = *((unsigned int *)a1 + 17);
  *(void *)(a2 + 304) = v31;
  *(void *)(a2 + 312) = v40;
  uint64_t v41 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 320) = a1[72];
  *(void *)(a2 + 328) = v41;
  uint64_t v42 = a1[81];
  *(void *)(a2 + 336) = a1[80];
  *(void *)(a2 + 344) = v42;
  uint64_t v43 = a1[88];
  *(void *)(a2 + 352) = *((unsigned int *)a1 + 21);
  *(void *)(a2 + 360) = v43;
  uint64_t v44 = a1[90];
  *(void *)(a2 + 368) = a1[89];
  *(void *)(a2 + 376) = v44;
  uint64_t v45 = a1[92];
  *(void *)(a2 + 384) = a1[91];
  *(void *)(a2 + 392) = v45;
  uint64_t v46 = a1[94];
  *(void *)(a2 + 400) = a1[93];
  *(void *)(a2 + 408) = v46;
  uint64_t v47 = a1[96];
  *(void *)(a2 + 416) = a1[95];
  *(void *)(a2 + 424) = v47;
  uint64_t v48 = *(void *)(a1 + 100);
  v49.n128_u64[0] = v48;
  v49.n128_u64[1] = HIDWORD(v48);
  __n128 v50 = v49;
  uint64_t v51 = *(void *)(a1 + 108);
  v49.n128_u64[0] = v51;
  v49.n128_u64[1] = HIDWORD(v51);
  *(__n128 *)(a2 + 432) = v50;
  *(__n128 *)(a2 + 448) = v49;
  v50.n128_u64[0] = *(void *)(a1 + 116);
  v49.n128_u64[0] = v50.n128_u32[0];
  v49.n128_u64[1] = v50.n128_u32[1];
  __n128 result = v49;
  uint64_t v53 = *(void *)(a1 + 124);
  v49.n128_u64[0] = v53;
  v49.n128_u64[1] = HIDWORD(v53);
  *(__n128 *)(a2 + 464) = result;
  *(__n128 *)(a2 + 480) = v49;
  uint64_t v54 = *((unsigned int *)a1 + 33);
  uint64_t v55 = a1[136];
  *(void *)(a2 + 1248) = v30 | 0xFFFFFFC000000000;
  *(void *)(a2 + 496) = v54;
  *(void *)(a2 + 504) = v55;
  return result;
}

__n128 sub_1CBE7822C(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = *(void *)(a1 + 20);
  *(void *)&long long v14 = v13;
  *((void *)&v14 + 1) = HIDWORD(v13);
  *(_OWORD *)(a2 + 96) = v14;
  uint64_t v15 = a1[28];
  uint64_t v16 = *((unsigned int *)a1 + 8);
  uint64_t v17 = v3 | 0xFE00;
  *(void *)(a2 + 1248) = v3 | 0xFE00;
  *(void *)(a2 + 112) = v15;
  *(void *)(a2 + 120) = v16;
  unsigned int v18 = *((_DWORD *)a1 + 11);
  if (!v18)
  {
    uint64_t v19 = a1[36];
    uint64_t v17 = v3 | 0x1FE00;
    *(void *)(a2 + 1248) = v3 | 0x1FE00;
    *(void *)(a2 + 128) = v19;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 1)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 136) = v20;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 2)
  {
    uint64_t v21 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 144) = v21;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 3)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 152) = v22;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 4)
  {
    uint64_t v23 = *((unsigned int *)a1 + 9);
    v17 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 160) = v23;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 5)
  {
    uint64_t v24 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x200000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 168) = v24;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 6)
  {
    uint64_t v25 = a1[36];
    v17 |= 0x400000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 176) = v25;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 7)
  {
    uint64_t v26 = *((unsigned int *)a1 + 9);
    *(void *)(a2 + 1248) = v17 | 0x800000;
    *(void *)(a2 + 184) = v26;
    unsigned int v18 = *((_DWORD *)a1 + 11);
    if (v18 == 7)
    {
      v17 |= 0x1800000uLL;
      *(void *)(a2 + 192) = a1[40];
    }
    else
    {
      v17 |= 0x800000uLL;
    }
  }
  uint64_t v27 = v18;
  uint64_t v28 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = v27;
  *(void *)(a2 + 208) = v28;
  uint64_t v29 = *((unsigned int *)a1 + 14);
  *(void *)(a2 + 216) = a1[52];
  *(void *)(a2 + 224) = v29;
  uint64_t v30 = a1[60];
  uint64_t v31 = a1[61];
  uint64_t v32 = v17 | 0x7E000000;
  *(void *)(a2 + 1248) = v17 | 0x7E000000;
  *(void *)(a2 + 232) = v30;
  *(void *)(a2 + 240) = v31;
  unsigned int v33 = *((_DWORD *)a1 + 18);
  if (!v33)
  {
    uint64_t v34 = a1[64];
    uint64_t v32 = v17 | 0xFE000000;
    *(void *)(a2 + 1248) = v17 | 0xFE000000;
    *(void *)(a2 + 248) = v34;
    unsigned int v33 = *((_DWORD *)a1 + 18);
  }
  if (v33 == 1)
  {
    uint64_t v35 = *((unsigned __int16 *)a1 + 32);
    v32 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 256) = v35;
    unsigned int v33 = *((_DWORD *)a1 + 18);
  }
  if (v33 == 2)
  {
    uint64_t v36 = *((unsigned __int16 *)a1 + 32);
    v32 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 264) = v36;
    unsigned int v33 = *((_DWORD *)a1 + 18);
  }
  if (v33 == 3)
  {
    uint64_t v37 = *((unsigned __int16 *)a1 + 32);
    v32 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 272) = v37;
    unsigned int v33 = *((_DWORD *)a1 + 18);
  }
  if (v33 == 4)
  {
    uint64_t v38 = *((unsigned int *)a1 + 16);
    v32 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 280) = v38;
    unsigned int v33 = *((_DWORD *)a1 + 18);
  }
  if (v33 == 5)
  {
    uint64_t v39 = *((unsigned __int16 *)a1 + 32);
    v32 |= 0x1000000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 288) = v39;
    unsigned int v33 = *((_DWORD *)a1 + 18);
  }
  if (v33 == 6)
  {
    uint64_t v40 = a1[64];
    v32 |= 0x2000000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 296) = v40;
    unsigned int v33 = *((_DWORD *)a1 + 18);
  }
  if (v33 == 7)
  {
    uint64_t v41 = *((unsigned int *)a1 + 16);
    *(void *)(a2 + 1248) = v32 | 0x4000000000;
    *(void *)(a2 + 304) = v41;
    unsigned int v33 = *((_DWORD *)a1 + 18);
    if (v33 == 7)
    {
      v32 |= 0xC000000000uLL;
      *(void *)(a2 + 312) = a1[68];
    }
    else
    {
      v32 |= 0x4000000000uLL;
    }
  }
  uint64_t v42 = v33;
  uint64_t v43 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 320) = v42;
  *(void *)(a2 + 328) = v43;
  uint64_t v44 = *((unsigned int *)a1 + 21);
  *(void *)(a2 + 336) = a1[80];
  *(void *)(a2 + 344) = v44;
  uint64_t v45 = a1[88];
  uint64_t v46 = a1[89];
  uint64_t v47 = v32 | 0x3F0000000000;
  *(void *)(a2 + 1248) = v32 | 0x3F0000000000;
  *(void *)(a2 + 352) = v45;
  *(void *)(a2 + 360) = v46;
  unsigned int v48 = *((_DWORD *)a1 + 25);
  if (!v48)
  {
    uint64_t v49 = a1[92];
    uint64_t v47 = v32 | 0x7F0000000000;
    *(void *)(a2 + 1248) = v32 | 0x7F0000000000;
    *(void *)(a2 + 368) = v49;
    unsigned int v48 = *((_DWORD *)a1 + 25);
  }
  if (v48 == 1)
  {
    uint64_t v50 = *((unsigned __int16 *)a1 + 46);
    v47 |= 0x800000000000uLL;
    *(void *)(a2 + 1248) = v47;
    *(void *)(a2 + 376) = v50;
    unsigned int v48 = *((_DWORD *)a1 + 25);
  }
  if (v48 == 2)
  {
    uint64_t v51 = *((unsigned __int16 *)a1 + 46);
    v47 |= 0x1000000000000uLL;
    *(void *)(a2 + 1248) = v47;
    *(void *)(a2 + 384) = v51;
    unsigned int v48 = *((_DWORD *)a1 + 25);
  }
  if (v48 == 3)
  {
    uint64_t v52 = *((unsigned __int16 *)a1 + 46);
    v47 |= 0x2000000000000uLL;
    *(void *)(a2 + 1248) = v47;
    *(void *)(a2 + 392) = v52;
    unsigned int v48 = *((_DWORD *)a1 + 25);
  }
  if (v48 == 4)
  {
    uint64_t v53 = *((unsigned int *)a1 + 23);
    v47 |= 0x4000000000000uLL;
    *(void *)(a2 + 1248) = v47;
    *(void *)(a2 + 400) = v53;
    unsigned int v48 = *((_DWORD *)a1 + 25);
  }
  if (v48 == 5)
  {
    uint64_t v54 = *((unsigned __int16 *)a1 + 46);
    v47 |= 0x8000000000000uLL;
    *(void *)(a2 + 1248) = v47;
    *(void *)(a2 + 408) = v54;
    unsigned int v48 = *((_DWORD *)a1 + 25);
  }
  if (v48 == 6)
  {
    uint64_t v55 = a1[92];
    v47 |= 0x10000000000000uLL;
    *(void *)(a2 + 1248) = v47;
    *(void *)(a2 + 416) = v55;
    unsigned int v48 = *((_DWORD *)a1 + 25);
  }
  if (v48 == 7)
  {
    uint64_t v56 = *((unsigned int *)a1 + 23);
    *(void *)(a2 + 1248) = v47 | 0x20000000000000;
    *(void *)(a2 + 424) = v56;
    unsigned int v48 = *((_DWORD *)a1 + 25);
    if (v48 == 7)
    {
      v47 |= 0x60000000000000uLL;
      *(void *)(a2 + 432) = a1[96];
    }
    else
    {
      v47 |= 0x20000000000000uLL;
    }
  }
  uint64_t v57 = v48;
  uint64_t v58 = *((unsigned int *)a1 + 26);
  *(void *)(a2 + 440) = v57;
  *(void *)(a2 + 448) = v58;
  uint64_t v59 = *((unsigned int *)a1 + 28);
  *(void *)(a2 + 456) = a1[108];
  *(void *)(a2 + 464) = v59;
  uint64_t v60 = a1[117];
  *(void *)(a2 + 472) = a1[116];
  *(void *)(a2 + 480) = v60;
  uint64_t v61 = a1[118];
  *(void *)(a2 + 1248) = v47 | 0x7F80000000000000;
  uint64_t v62 = a1[119];
  *(void *)(a2 + 488) = v61;
  *(void *)(a2 + 496) = v62;
  unsigned int v63 = *((_DWORD *)a1 + 32);
  if (!v63)
  {
    uint64_t v64 = a1[120];
    *(void *)(a2 + 1248) = v47 | 0xFF80000000000000;
    *(void *)(a2 + 504) = v64;
    unsigned int v63 = *((_DWORD *)a1 + 32);
  }
  if (v63 == 1)
  {
    uint64_t v65 = *((unsigned __int16 *)a1 + 60);
    uint64_t v66 = 1;
    *(void *)(a2 + 1256) = 1;
    *(void *)(a2 + 512) = v65;
    unsigned int v63 = *((_DWORD *)a1 + 32);
  }
  else
  {
    uint64_t v66 = 0;
  }
  if (v63 == 2)
  {
    uint64_t v67 = *((unsigned __int16 *)a1 + 60);
    v66 |= 2uLL;
    *(void *)(a2 + 1256) = v66;
    *(void *)(a2 + 520) = v67;
    unsigned int v63 = *((_DWORD *)a1 + 32);
  }
  if (v63 == 3)
  {
    uint64_t v68 = *((unsigned __int16 *)a1 + 60);
    v66 |= 4uLL;
    *(void *)(a2 + 1256) = v66;
    *(void *)(a2 + 528) = v68;
    unsigned int v63 = *((_DWORD *)a1 + 32);
  }
  if (v63 == 4)
  {
    uint64_t v69 = *((unsigned int *)a1 + 30);
    v66 |= 8uLL;
    *(void *)(a2 + 1256) = v66;
    *(void *)(a2 + 536) = v69;
    unsigned int v63 = *((_DWORD *)a1 + 32);
  }
  if (v63 == 5)
  {
    uint64_t v70 = *((unsigned __int16 *)a1 + 60);
    v66 |= 0x10uLL;
    *(void *)(a2 + 1256) = v66;
    *(void *)(a2 + 544) = v70;
    unsigned int v63 = *((_DWORD *)a1 + 32);
  }
  if (v63 == 6)
  {
    uint64_t v71 = a1[120];
    v66 |= 0x20uLL;
    *(void *)(a2 + 1256) = v66;
    *(void *)(a2 + 552) = v71;
    unsigned int v63 = *((_DWORD *)a1 + 32);
  }
  if (v63 == 7)
  {
    uint64_t v72 = *((unsigned int *)a1 + 30);
    *(void *)(a2 + 1256) = v66 | 0x40;
    *(void *)(a2 + 560) = v72;
    unsigned int v63 = *((_DWORD *)a1 + 32);
    if (v63 == 7)
    {
      v66 |= 0xC0uLL;
      *(void *)(a2 + 568) = a1[124];
      unsigned int v63 = 7;
    }
    else
    {
      v66 |= 0x40uLL;
    }
  }
  *(void *)(a2 + 576) = v63;
  *(void *)(a2 + 584) = *((unsigned int *)a1 + 33);
  *(void *)(a2 + 592) = a1[136];
  *(void *)(a2 + 600) = *((unsigned int *)a1 + 35);
  *(void *)(a2 + 608) = a1[144];
  *(void *)(a2 + 616) = a1[145];
  *(void *)(a2 + 624) = a1[146];
  *(void *)(a2 + 632) = a1[147];
  uint64_t v73 = *(void *)(a1 + 148);
  v74.n128_u64[0] = v73;
  v74.n128_u64[1] = HIDWORD(v73);
  *(__n128 *)(a2 + 640) = v74;
  *(void *)(a2 + 656) = a1[156];
  *(void *)(a2 + 664) = a1[157];
  *(void *)(a2 + 672) = a1[158];
  *(void *)(a2 + 680) = a1[159];
  *(void *)(a2 + 688) = a1[160];
  *(void *)(a2 + 696) = a1[161];
  *(void *)(a2 + 704) = a1[162];
  *(void *)(a2 + 712) = a1[163];
  uint64_t v75 = *(void *)(a1 + 164);
  v74.n128_u64[0] = v75;
  v74.n128_u64[1] = HIDWORD(v75);
  __n128 v76 = v74;
  uint64_t v77 = *(void *)(a1 + 172);
  v74.n128_u64[0] = v77;
  v74.n128_u64[1] = HIDWORD(v77);
  *(__n128 *)(a2 + 720) = v76;
  *(__n128 *)(a2 + 736) = v74;
  v76.n128_u64[0] = *(void *)(a1 + 180);
  v74.n128_u64[0] = v76.n128_u32[0];
  v74.n128_u64[1] = v76.n128_u32[1];
  __n128 result = v74;
  uint64_t v79 = *(void *)(a1 + 188);
  v74.n128_u64[0] = v79;
  v74.n128_u64[1] = HIDWORD(v79);
  *(__n128 *)(a2 + 752) = result;
  *(__n128 *)(a2 + 768) = v74;
  *(void *)(a2 + 784) = *((unsigned int *)a1 + 49);
  uint64_t v80 = a1[200];
  *(void *)(a2 + 1256) = v66 | 0xFFFFFFF00;
  *(void *)(a2 + 792) = v80;
  return result;
}

__n128 sub_1CBE788D0(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = *(void *)(a1 + 20);
  *(void *)&long long v14 = v13;
  *((void *)&v14 + 1) = HIDWORD(v13);
  *(_OWORD *)(a2 + 96) = v14;
  uint64_t v15 = a1[28];
  uint64_t v16 = *((unsigned int *)a1 + 8);
  uint64_t v17 = v3 | 0xFE00;
  *(void *)(a2 + 1248) = v3 | 0xFE00;
  *(void *)(a2 + 112) = v15;
  *(void *)(a2 + 120) = v16;
  unsigned int v18 = *((_DWORD *)a1 + 11);
  if (!v18)
  {
    uint64_t v19 = a1[36];
    uint64_t v17 = v3 | 0x1FE00;
    *(void *)(a2 + 1248) = v3 | 0x1FE00;
    *(void *)(a2 + 128) = v19;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 1)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 136) = v20;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 2)
  {
    uint64_t v21 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 144) = v21;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 3)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 152) = v22;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 4)
  {
    uint64_t v23 = *((unsigned int *)a1 + 9);
    v17 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 160) = v23;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 5)
  {
    uint64_t v24 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x200000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 168) = v24;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 6)
  {
    uint64_t v25 = a1[36];
    v17 |= 0x400000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 176) = v25;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 7)
  {
    uint64_t v26 = *((unsigned int *)a1 + 9);
    *(void *)(a2 + 1248) = v17 | 0x800000;
    *(void *)(a2 + 184) = v26;
    unsigned int v18 = *((_DWORD *)a1 + 11);
    if (v18 == 7)
    {
      v17 |= 0x1800000uLL;
      *(void *)(a2 + 192) = a1[40];
    }
    else
    {
      v17 |= 0x800000uLL;
    }
  }
  uint64_t v27 = v18;
  uint64_t v28 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = v27;
  *(void *)(a2 + 208) = v28;
  uint64_t v29 = *((unsigned int *)a1 + 14);
  *(void *)(a2 + 216) = a1[52];
  *(void *)(a2 + 224) = v29;
  uint64_t v30 = a1[60];
  uint64_t v31 = a1[61];
  uint64_t v32 = v17 | 0x7E000000;
  *(void *)(a2 + 1248) = v17 | 0x7E000000;
  *(void *)(a2 + 232) = v30;
  *(void *)(a2 + 240) = v31;
  unsigned int v33 = *((_DWORD *)a1 + 18);
  if (!v33)
  {
    uint64_t v34 = a1[64];
    uint64_t v32 = v17 | 0xFE000000;
    *(void *)(a2 + 1248) = v17 | 0xFE000000;
    *(void *)(a2 + 248) = v34;
    unsigned int v33 = *((_DWORD *)a1 + 18);
  }
  if (v33 == 1)
  {
    uint64_t v35 = *((unsigned __int16 *)a1 + 32);
    v32 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 256) = v35;
    unsigned int v33 = *((_DWORD *)a1 + 18);
  }
  if (v33 == 2)
  {
    uint64_t v36 = *((unsigned __int16 *)a1 + 32);
    v32 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 264) = v36;
    unsigned int v33 = *((_DWORD *)a1 + 18);
  }
  if (v33 == 3)
  {
    uint64_t v37 = *((unsigned __int16 *)a1 + 32);
    v32 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 272) = v37;
    unsigned int v33 = *((_DWORD *)a1 + 18);
  }
  if (v33 == 4)
  {
    uint64_t v38 = *((unsigned int *)a1 + 16);
    v32 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 280) = v38;
    unsigned int v33 = *((_DWORD *)a1 + 18);
  }
  if (v33 == 5)
  {
    uint64_t v39 = *((unsigned __int16 *)a1 + 32);
    v32 |= 0x1000000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 288) = v39;
    unsigned int v33 = *((_DWORD *)a1 + 18);
  }
  if (v33 == 6)
  {
    uint64_t v40 = a1[64];
    v32 |= 0x2000000000uLL;
    *(void *)(a2 + 1248) = v32;
    *(void *)(a2 + 296) = v40;
    unsigned int v33 = *((_DWORD *)a1 + 18);
  }
  if (v33 == 7)
  {
    uint64_t v41 = *((unsigned int *)a1 + 16);
    *(void *)(a2 + 1248) = v32 | 0x4000000000;
    *(void *)(a2 + 304) = v41;
    unsigned int v33 = *((_DWORD *)a1 + 18);
    if (v33 == 7)
    {
      v32 |= 0xC000000000uLL;
      *(void *)(a2 + 312) = a1[68];
    }
    else
    {
      v32 |= 0x4000000000uLL;
    }
  }
  uint64_t v42 = v33;
  uint64_t v43 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 320) = v42;
  *(void *)(a2 + 328) = v43;
  uint64_t v44 = *((unsigned int *)a1 + 21);
  *(void *)(a2 + 336) = a1[80];
  *(void *)(a2 + 344) = v44;
  uint64_t v45 = a1[88];
  uint64_t v46 = a1[89];
  uint64_t v47 = v32 | 0x3F0000000000;
  *(void *)(a2 + 1248) = v32 | 0x3F0000000000;
  *(void *)(a2 + 352) = v45;
  *(void *)(a2 + 360) = v46;
  unsigned int v48 = *((_DWORD *)a1 + 25);
  if (!v48)
  {
    uint64_t v49 = a1[92];
    uint64_t v47 = v32 | 0x7F0000000000;
    *(void *)(a2 + 1248) = v32 | 0x7F0000000000;
    *(void *)(a2 + 368) = v49;
    unsigned int v48 = *((_DWORD *)a1 + 25);
  }
  if (v48 == 1)
  {
    uint64_t v50 = *((unsigned __int16 *)a1 + 46);
    v47 |= 0x800000000000uLL;
    *(void *)(a2 + 1248) = v47;
    *(void *)(a2 + 376) = v50;
    unsigned int v48 = *((_DWORD *)a1 + 25);
  }
  if (v48 == 2)
  {
    uint64_t v51 = *((unsigned __int16 *)a1 + 46);
    v47 |= 0x1000000000000uLL;
    *(void *)(a2 + 1248) = v47;
    *(void *)(a2 + 384) = v51;
    unsigned int v48 = *((_DWORD *)a1 + 25);
  }
  if (v48 == 3)
  {
    uint64_t v52 = *((unsigned __int16 *)a1 + 46);
    v47 |= 0x2000000000000uLL;
    *(void *)(a2 + 1248) = v47;
    *(void *)(a2 + 392) = v52;
    unsigned int v48 = *((_DWORD *)a1 + 25);
  }
  if (v48 == 4)
  {
    uint64_t v53 = *((unsigned int *)a1 + 23);
    v47 |= 0x4000000000000uLL;
    *(void *)(a2 + 1248) = v47;
    *(void *)(a2 + 400) = v53;
    unsigned int v48 = *((_DWORD *)a1 + 25);
  }
  if (v48 == 5)
  {
    uint64_t v54 = *((unsigned __int16 *)a1 + 46);
    v47 |= 0x8000000000000uLL;
    *(void *)(a2 + 1248) = v47;
    *(void *)(a2 + 408) = v54;
    unsigned int v48 = *((_DWORD *)a1 + 25);
  }
  if (v48 == 6)
  {
    uint64_t v55 = a1[92];
    v47 |= 0x10000000000000uLL;
    *(void *)(a2 + 1248) = v47;
    *(void *)(a2 + 416) = v55;
    unsigned int v48 = *((_DWORD *)a1 + 25);
  }
  if (v48 == 7)
  {
    uint64_t v56 = *((unsigned int *)a1 + 23);
    *(void *)(a2 + 1248) = v47 | 0x20000000000000;
    *(void *)(a2 + 424) = v56;
    unsigned int v48 = *((_DWORD *)a1 + 25);
    if (v48 == 7)
    {
      v47 |= 0x60000000000000uLL;
      *(void *)(a2 + 432) = a1[96];
    }
    else
    {
      v47 |= 0x20000000000000uLL;
    }
  }
  uint64_t v57 = v48;
  uint64_t v58 = *((unsigned int *)a1 + 26);
  *(void *)(a2 + 440) = v57;
  *(void *)(a2 + 448) = v58;
  uint64_t v59 = *((unsigned int *)a1 + 28);
  *(void *)(a2 + 456) = a1[108];
  *(void *)(a2 + 464) = v59;
  uint64_t v60 = a1[117];
  *(void *)(a2 + 472) = a1[116];
  *(void *)(a2 + 480) = v60;
  uint64_t v61 = a1[118];
  *(void *)(a2 + 1248) = v47 | 0x7F80000000000000;
  uint64_t v62 = a1[119];
  *(void *)(a2 + 488) = v61;
  *(void *)(a2 + 496) = v62;
  unsigned int v63 = *((_DWORD *)a1 + 32);
  if (!v63)
  {
    uint64_t v64 = a1[120];
    *(void *)(a2 + 1248) = v47 | 0xFF80000000000000;
    *(void *)(a2 + 504) = v64;
    unsigned int v63 = *((_DWORD *)a1 + 32);
  }
  if (v63 == 1)
  {
    uint64_t v65 = *((unsigned __int16 *)a1 + 60);
    uint64_t v66 = 1;
    *(void *)(a2 + 1256) = 1;
    *(void *)(a2 + 512) = v65;
    unsigned int v63 = *((_DWORD *)a1 + 32);
  }
  else
  {
    uint64_t v66 = 0;
  }
  if (v63 == 2)
  {
    uint64_t v67 = *((unsigned __int16 *)a1 + 60);
    v66 |= 2uLL;
    *(void *)(a2 + 1256) = v66;
    *(void *)(a2 + 520) = v67;
    unsigned int v63 = *((_DWORD *)a1 + 32);
  }
  if (v63 == 3)
  {
    uint64_t v68 = *((unsigned __int16 *)a1 + 60);
    v66 |= 4uLL;
    *(void *)(a2 + 1256) = v66;
    *(void *)(a2 + 528) = v68;
    unsigned int v63 = *((_DWORD *)a1 + 32);
  }
  if (v63 == 4)
  {
    uint64_t v69 = *((unsigned int *)a1 + 30);
    v66 |= 8uLL;
    *(void *)(a2 + 1256) = v66;
    *(void *)(a2 + 536) = v69;
    unsigned int v63 = *((_DWORD *)a1 + 32);
  }
  if (v63 == 5)
  {
    uint64_t v70 = *((unsigned __int16 *)a1 + 60);
    v66 |= 0x10uLL;
    *(void *)(a2 + 1256) = v66;
    *(void *)(a2 + 544) = v70;
    unsigned int v63 = *((_DWORD *)a1 + 32);
  }
  if (v63 == 6)
  {
    uint64_t v71 = a1[120];
    v66 |= 0x20uLL;
    *(void *)(a2 + 1256) = v66;
    *(void *)(a2 + 552) = v71;
    unsigned int v63 = *((_DWORD *)a1 + 32);
  }
  if (v63 == 7)
  {
    uint64_t v72 = *((unsigned int *)a1 + 30);
    *(void *)(a2 + 1256) = v66 | 0x40;
    *(void *)(a2 + 560) = v72;
    unsigned int v63 = *((_DWORD *)a1 + 32);
    if (v63 == 7)
    {
      v66 |= 0xC0uLL;
      *(void *)(a2 + 568) = a1[124];
      unsigned int v63 = 7;
    }
    else
    {
      v66 |= 0x40uLL;
    }
  }
  *(void *)(a2 + 576) = v63;
  *(void *)(a2 + 584) = *((unsigned int *)a1 + 33);
  *(void *)(a2 + 592) = a1[136];
  *(void *)(a2 + 600) = *((unsigned int *)a1 + 35);
  *(void *)(a2 + 608) = a1[144];
  *(void *)(a2 + 616) = a1[145];
  *(void *)(a2 + 624) = a1[146];
  *(void *)(a2 + 632) = a1[147];
  uint64_t v73 = *(void *)(a1 + 148);
  v74.n128_u64[0] = v73;
  v74.n128_u64[1] = HIDWORD(v73);
  *(__n128 *)(a2 + 640) = v74;
  *(void *)(a2 + 656) = a1[156];
  *(void *)(a2 + 664) = a1[157];
  *(void *)(a2 + 672) = a1[158];
  *(void *)(a2 + 680) = a1[159];
  *(void *)(a2 + 688) = a1[160];
  *(void *)(a2 + 696) = a1[161];
  *(void *)(a2 + 704) = a1[162];
  *(void *)(a2 + 712) = a1[163];
  uint64_t v75 = *(void *)(a1 + 164);
  v74.n128_u64[0] = v75;
  v74.n128_u64[1] = HIDWORD(v75);
  __n128 v76 = v74;
  uint64_t v77 = *(void *)(a1 + 172);
  v74.n128_u64[0] = v77;
  v74.n128_u64[1] = HIDWORD(v77);
  *(__n128 *)(a2 + 720) = v76;
  *(__n128 *)(a2 + 736) = v74;
  v76.n128_u64[0] = *(void *)(a1 + 180);
  v74.n128_u64[0] = v76.n128_u32[0];
  v74.n128_u64[1] = v76.n128_u32[1];
  __n128 result = v74;
  uint64_t v79 = *(void *)(a1 + 188);
  v74.n128_u64[0] = v79;
  v74.n128_u64[1] = HIDWORD(v79);
  *(__n128 *)(a2 + 752) = result;
  *(__n128 *)(a2 + 768) = v74;
  *(void *)(a2 + 784) = *((unsigned int *)a1 + 49);
  uint64_t v80 = a1[200];
  *(void *)(a2 + 1256) = v66 | 0xFFFFFFF00;
  *(void *)(a2 + 792) = v80;
  return result;
}

__n128 sub_1CBE78F74(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = v16;
  uint64_t v26 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v25;
  *(void *)(a2 + 192) = v26;
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = a1[52];
  uint64_t v29 = a1[53];
  uint64_t v30 = v13 | 0x1F800000;
  *(void *)(a2 + 1248) = v13 | 0x1F800000;
  *(void *)(a2 + 216) = v28;
  *(void *)(a2 + 224) = v29;
  unsigned int v31 = *((_DWORD *)a1 + 16);
  if (!v31)
  {
    uint64_t v32 = a1[56];
    uint64_t v30 = v13 | 0x3F800000;
    *(void *)(a2 + 1248) = v13 | 0x3F800000;
    *(void *)(a2 + 232) = v32;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 1)
  {
    uint64_t v33 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x40000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 240) = v33;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 2)
  {
    uint64_t v34 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x80000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 248) = v34;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 3)
  {
    uint64_t v35 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 256) = v35;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 4)
  {
    uint64_t v36 = *((unsigned int *)a1 + 14);
    v30 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 264) = v36;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 5)
  {
    uint64_t v37 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 272) = v37;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 6)
  {
    uint64_t v38 = a1[56];
    v30 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 280) = v38;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 7)
  {
    uint64_t v39 = *((unsigned int *)a1 + 14);
    *(void *)(a2 + 1248) = v30 | 0x1000000000;
    *(void *)(a2 + 288) = v39;
    unsigned int v31 = *((_DWORD *)a1 + 16);
    if (v31 == 7)
    {
      v30 |= 0x3000000000uLL;
      *(void *)(a2 + 296) = a1[60];
    }
    else
    {
      v30 |= 0x1000000000uLL;
    }
  }
  uint64_t v40 = v31;
  uint64_t v41 = *((unsigned int *)a1 + 17);
  *(void *)(a2 + 304) = v40;
  *(void *)(a2 + 312) = v41;
  uint64_t v42 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 320) = a1[72];
  *(void *)(a2 + 328) = v42;
  uint64_t v43 = a1[80];
  uint64_t v44 = a1[81];
  uint64_t v45 = v30 | 0xFC000000000;
  *(void *)(a2 + 1248) = v30 | 0xFC000000000;
  *(void *)(a2 + 336) = v43;
  *(void *)(a2 + 344) = v44;
  unsigned int v46 = *((_DWORD *)a1 + 23);
  if (!v46)
  {
    uint64_t v47 = a1[84];
    uint64_t v45 = v30 | 0x1FC000000000;
    *(void *)(a2 + 1248) = v30 | 0x1FC000000000;
    *(void *)(a2 + 352) = v47;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 1)
  {
    uint64_t v48 = *((unsigned __int16 *)a1 + 42);
    v45 |= 0x200000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 360) = v48;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 2)
  {
    uint64_t v49 = *((unsigned __int16 *)a1 + 42);
    v45 |= 0x400000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 368) = v49;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 3)
  {
    uint64_t v50 = *((unsigned __int16 *)a1 + 42);
    v45 |= 0x800000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 376) = v50;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 4)
  {
    uint64_t v51 = *((unsigned int *)a1 + 21);
    v45 |= 0x1000000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 384) = v51;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 5)
  {
    uint64_t v52 = *((unsigned __int16 *)a1 + 42);
    v45 |= 0x2000000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 392) = v52;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 6)
  {
    uint64_t v53 = a1[84];
    v45 |= 0x4000000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 400) = v53;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 7)
  {
    uint64_t v54 = *((unsigned int *)a1 + 21);
    *(void *)(a2 + 1248) = v45 | 0x8000000000000;
    *(void *)(a2 + 408) = v54;
    unsigned int v46 = *((_DWORD *)a1 + 23);
    if (v46 == 7)
    {
      v45 |= 0x18000000000000uLL;
      *(void *)(a2 + 416) = a1[88];
    }
    else
    {
      v45 |= 0x8000000000000uLL;
    }
  }
  uint64_t v55 = v46;
  uint64_t v56 = *((unsigned int *)a1 + 24);
  *(void *)(a2 + 424) = v55;
  *(void *)(a2 + 432) = v56;
  uint64_t v57 = *((unsigned int *)a1 + 26);
  *(void *)(a2 + 440) = a1[100];
  *(void *)(a2 + 448) = v57;
  uint64_t v58 = a1[108];
  uint64_t v59 = v45 | 0x3E0000000000000;
  *(void *)(a2 + 1248) = v45 | 0x3E0000000000000;
  *(void *)(a2 + 456) = v58;
  unsigned int v60 = *((_DWORD *)a1 + 30);
  if (!v60)
  {
    uint64_t v61 = a1[112];
    uint64_t v59 = v45 | 0x7E0000000000000;
    *(void *)(a2 + 1248) = v45 | 0x7E0000000000000;
    *(void *)(a2 + 464) = v61;
    unsigned int v60 = *((_DWORD *)a1 + 30);
  }
  if (v60 == 1)
  {
    uint64_t v62 = *((unsigned __int16 *)a1 + 56);
    v59 |= 0x800000000000000uLL;
    *(void *)(a2 + 1248) = v59;
    *(void *)(a2 + 472) = v62;
    unsigned int v60 = *((_DWORD *)a1 + 30);
  }
  if (v60 == 2)
  {
    uint64_t v63 = *((unsigned __int16 *)a1 + 56);
    v59 |= 0x1000000000000000uLL;
    *(void *)(a2 + 1248) = v59;
    *(void *)(a2 + 480) = v63;
    unsigned int v60 = *((_DWORD *)a1 + 30);
  }
  if (v60 == 3)
  {
    uint64_t v64 = *((unsigned __int16 *)a1 + 56);
    v59 |= 0x2000000000000000uLL;
    *(void *)(a2 + 1248) = v59;
    *(void *)(a2 + 488) = v64;
    unsigned int v60 = *((_DWORD *)a1 + 30);
  }
  if (v60 == 4)
  {
    uint64_t v65 = *((unsigned int *)a1 + 28);
    v59 |= 0x4000000000000000uLL;
    *(void *)(a2 + 1248) = v59;
    *(void *)(a2 + 496) = v65;
    unsigned int v60 = *((_DWORD *)a1 + 30);
  }
  if (v60 == 5)
  {
    uint64_t v66 = *((unsigned __int16 *)a1 + 56);
    *(void *)(a2 + 1248) = v59 | 0x8000000000000000;
    *(void *)(a2 + 504) = v66;
    unsigned int v60 = *((_DWORD *)a1 + 30);
  }
  if (v60 == 6)
  {
    uint64_t v67 = a1[112];
    uint64_t v68 = 1;
    *(void *)(a2 + 1256) = 1;
    *(void *)(a2 + 512) = v67;
    unsigned int v60 = *((_DWORD *)a1 + 30);
  }
  else
  {
    uint64_t v68 = 0;
  }
  if (v60 == 7)
  {
    uint64_t v69 = *((unsigned int *)a1 + 28);
    *(void *)(a2 + 1256) = v68 | 2;
    *(void *)(a2 + 520) = v69;
    unsigned int v60 = *((_DWORD *)a1 + 30);
    if (v60 == 7)
    {
      v68 |= 6uLL;
      *(void *)(a2 + 528) = a1[116];
      unsigned int v60 = 7;
    }
    else
    {
      v68 |= 2uLL;
    }
  }
  *(void *)(a2 + 536) = v60;
  *(void *)(a2 + 544) = *((unsigned int *)a1 + 31);
  *(void *)(a2 + 552) = a1[128];
  *(void *)(a2 + 560) = *((unsigned int *)a1 + 33);
  *(void *)(a2 + 568) = a1[136];
  uint64_t v70 = *(void *)(a1 + 140);
  v71.n128_u64[0] = v70;
  v71.n128_u64[1] = HIDWORD(v70);
  *(__n128 *)(a2 + 576) = v71;
  *(void *)(a2 + 592) = a1[148];
  *(void *)(a2 + 600) = a1[149];
  *(void *)(a2 + 608) = a1[150];
  *(void *)(a2 + 616) = a1[151];
  *(void *)(a2 + 624) = a1[152];
  *(void *)(a2 + 632) = a1[153];
  *(void *)(a2 + 640) = a1[154];
  *(void *)(a2 + 648) = a1[155];
  uint64_t v72 = *(void *)(a1 + 156);
  v71.n128_u64[0] = v72;
  v71.n128_u64[1] = HIDWORD(v72);
  __n128 v73 = v71;
  uint64_t v74 = *(void *)(a1 + 164);
  v71.n128_u64[0] = v74;
  v71.n128_u64[1] = HIDWORD(v74);
  *(__n128 *)(a2 + 656) = v73;
  *(__n128 *)(a2 + 672) = v71;
  v73.n128_u64[0] = *(void *)(a1 + 172);
  v71.n128_u64[0] = v73.n128_u32[0];
  v71.n128_u64[1] = v73.n128_u32[1];
  __n128 result = v71;
  uint64_t v76 = *(void *)(a1 + 180);
  v71.n128_u64[0] = v76;
  v71.n128_u64[1] = HIDWORD(v76);
  *(__n128 *)(a2 + 688) = result;
  *(__n128 *)(a2 + 704) = v71;
  *(void *)(a2 + 720) = *((unsigned int *)a1 + 47);
  uint64_t v77 = a1[192];
  *(void *)(a2 + 1256) = v68 | 0xFFFFFF8;
  *(void *)(a2 + 728) = v77;
  return result;
}

__n128 sub_1CBE795E4(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = v16;
  uint64_t v26 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v25;
  *(void *)(a2 + 192) = v26;
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = a1[52];
  uint64_t v29 = a1[53];
  uint64_t v30 = v13 | 0x1F800000;
  *(void *)(a2 + 1248) = v13 | 0x1F800000;
  *(void *)(a2 + 216) = v28;
  *(void *)(a2 + 224) = v29;
  unsigned int v31 = *((_DWORD *)a1 + 16);
  if (!v31)
  {
    uint64_t v32 = a1[56];
    uint64_t v30 = v13 | 0x3F800000;
    *(void *)(a2 + 1248) = v13 | 0x3F800000;
    *(void *)(a2 + 232) = v32;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 1)
  {
    uint64_t v33 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x40000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 240) = v33;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 2)
  {
    uint64_t v34 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x80000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 248) = v34;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 3)
  {
    uint64_t v35 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 256) = v35;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 4)
  {
    uint64_t v36 = *((unsigned int *)a1 + 14);
    v30 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 264) = v36;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 5)
  {
    uint64_t v37 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 272) = v37;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 6)
  {
    uint64_t v38 = a1[56];
    v30 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 280) = v38;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 7)
  {
    uint64_t v39 = *((unsigned int *)a1 + 14);
    *(void *)(a2 + 1248) = v30 | 0x1000000000;
    *(void *)(a2 + 288) = v39;
    unsigned int v31 = *((_DWORD *)a1 + 16);
    if (v31 == 7)
    {
      v30 |= 0x3000000000uLL;
      *(void *)(a2 + 296) = a1[60];
    }
    else
    {
      v30 |= 0x1000000000uLL;
    }
  }
  uint64_t v40 = v31;
  uint64_t v41 = *((unsigned int *)a1 + 17);
  *(void *)(a2 + 304) = v40;
  *(void *)(a2 + 312) = v41;
  uint64_t v42 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 320) = a1[72];
  *(void *)(a2 + 328) = v42;
  uint64_t v43 = a1[80];
  uint64_t v44 = a1[81];
  uint64_t v45 = v30 | 0xFC000000000;
  *(void *)(a2 + 1248) = v30 | 0xFC000000000;
  *(void *)(a2 + 336) = v43;
  *(void *)(a2 + 344) = v44;
  unsigned int v46 = *((_DWORD *)a1 + 23);
  if (!v46)
  {
    uint64_t v47 = a1[84];
    uint64_t v45 = v30 | 0x1FC000000000;
    *(void *)(a2 + 1248) = v30 | 0x1FC000000000;
    *(void *)(a2 + 352) = v47;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 1)
  {
    uint64_t v48 = *((unsigned __int16 *)a1 + 42);
    v45 |= 0x200000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 360) = v48;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 2)
  {
    uint64_t v49 = *((unsigned __int16 *)a1 + 42);
    v45 |= 0x400000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 368) = v49;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 3)
  {
    uint64_t v50 = *((unsigned __int16 *)a1 + 42);
    v45 |= 0x800000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 376) = v50;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 4)
  {
    uint64_t v51 = *((unsigned int *)a1 + 21);
    v45 |= 0x1000000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 384) = v51;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 5)
  {
    uint64_t v52 = *((unsigned __int16 *)a1 + 42);
    v45 |= 0x2000000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 392) = v52;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 6)
  {
    uint64_t v53 = a1[84];
    v45 |= 0x4000000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 400) = v53;
    unsigned int v46 = *((_DWORD *)a1 + 23);
  }
  if (v46 == 7)
  {
    uint64_t v54 = *((unsigned int *)a1 + 21);
    *(void *)(a2 + 1248) = v45 | 0x8000000000000;
    *(void *)(a2 + 408) = v54;
    unsigned int v46 = *((_DWORD *)a1 + 23);
    if (v46 == 7)
    {
      v45 |= 0x18000000000000uLL;
      *(void *)(a2 + 416) = a1[88];
    }
    else
    {
      v45 |= 0x8000000000000uLL;
    }
  }
  uint64_t v55 = v46;
  uint64_t v56 = *((unsigned int *)a1 + 24);
  *(void *)(a2 + 424) = v55;
  *(void *)(a2 + 432) = v56;
  uint64_t v57 = *((unsigned int *)a1 + 26);
  *(void *)(a2 + 440) = a1[100];
  *(void *)(a2 + 448) = v57;
  uint64_t v58 = a1[108];
  uint64_t v59 = v45 | 0x3E0000000000000;
  *(void *)(a2 + 1248) = v45 | 0x3E0000000000000;
  *(void *)(a2 + 456) = v58;
  unsigned int v60 = *((_DWORD *)a1 + 30);
  if (!v60)
  {
    uint64_t v61 = a1[112];
    uint64_t v59 = v45 | 0x7E0000000000000;
    *(void *)(a2 + 1248) = v45 | 0x7E0000000000000;
    *(void *)(a2 + 464) = v61;
    unsigned int v60 = *((_DWORD *)a1 + 30);
  }
  if (v60 == 1)
  {
    uint64_t v62 = *((unsigned __int16 *)a1 + 56);
    v59 |= 0x800000000000000uLL;
    *(void *)(a2 + 1248) = v59;
    *(void *)(a2 + 472) = v62;
    unsigned int v60 = *((_DWORD *)a1 + 30);
  }
  if (v60 == 2)
  {
    uint64_t v63 = *((unsigned __int16 *)a1 + 56);
    v59 |= 0x1000000000000000uLL;
    *(void *)(a2 + 1248) = v59;
    *(void *)(a2 + 480) = v63;
    unsigned int v60 = *((_DWORD *)a1 + 30);
  }
  if (v60 == 3)
  {
    uint64_t v64 = *((unsigned __int16 *)a1 + 56);
    v59 |= 0x2000000000000000uLL;
    *(void *)(a2 + 1248) = v59;
    *(void *)(a2 + 488) = v64;
    unsigned int v60 = *((_DWORD *)a1 + 30);
  }
  if (v60 == 4)
  {
    uint64_t v65 = *((unsigned int *)a1 + 28);
    v59 |= 0x4000000000000000uLL;
    *(void *)(a2 + 1248) = v59;
    *(void *)(a2 + 496) = v65;
    unsigned int v60 = *((_DWORD *)a1 + 30);
  }
  if (v60 == 5)
  {
    uint64_t v66 = *((unsigned __int16 *)a1 + 56);
    *(void *)(a2 + 1248) = v59 | 0x8000000000000000;
    *(void *)(a2 + 504) = v66;
    unsigned int v60 = *((_DWORD *)a1 + 30);
  }
  if (v60 == 6)
  {
    uint64_t v67 = a1[112];
    uint64_t v68 = 1;
    *(void *)(a2 + 1256) = 1;
    *(void *)(a2 + 512) = v67;
    unsigned int v60 = *((_DWORD *)a1 + 30);
  }
  else
  {
    uint64_t v68 = 0;
  }
  if (v60 == 7)
  {
    uint64_t v69 = *((unsigned int *)a1 + 28);
    *(void *)(a2 + 1256) = v68 | 2;
    *(void *)(a2 + 520) = v69;
    unsigned int v60 = *((_DWORD *)a1 + 30);
    if (v60 == 7)
    {
      v68 |= 6uLL;
      *(void *)(a2 + 528) = a1[116];
      unsigned int v60 = 7;
    }
    else
    {
      v68 |= 2uLL;
    }
  }
  *(void *)(a2 + 536) = v60;
  *(void *)(a2 + 544) = *((unsigned int *)a1 + 31);
  *(void *)(a2 + 552) = a1[128];
  *(void *)(a2 + 560) = *((unsigned int *)a1 + 33);
  *(void *)(a2 + 568) = a1[136];
  uint64_t v70 = *(void *)(a1 + 140);
  v71.n128_u64[0] = v70;
  v71.n128_u64[1] = HIDWORD(v70);
  *(__n128 *)(a2 + 576) = v71;
  *(void *)(a2 + 592) = a1[148];
  *(void *)(a2 + 600) = a1[149];
  *(void *)(a2 + 608) = a1[150];
  *(void *)(a2 + 616) = a1[151];
  *(void *)(a2 + 624) = a1[152];
  *(void *)(a2 + 632) = a1[153];
  *(void *)(a2 + 640) = a1[154];
  *(void *)(a2 + 648) = a1[155];
  uint64_t v72 = *(void *)(a1 + 156);
  v71.n128_u64[0] = v72;
  v71.n128_u64[1] = HIDWORD(v72);
  __n128 v73 = v71;
  uint64_t v74 = *(void *)(a1 + 164);
  v71.n128_u64[0] = v74;
  v71.n128_u64[1] = HIDWORD(v74);
  *(__n128 *)(a2 + 656) = v73;
  *(__n128 *)(a2 + 672) = v71;
  v73.n128_u64[0] = *(void *)(a1 + 172);
  v71.n128_u64[0] = v73.n128_u32[0];
  v71.n128_u64[1] = v73.n128_u32[1];
  __n128 result = v71;
  uint64_t v76 = *(void *)(a1 + 180);
  v71.n128_u64[0] = v76;
  v71.n128_u64[1] = HIDWORD(v76);
  *(__n128 *)(a2 + 688) = result;
  *(__n128 *)(a2 + 704) = v71;
  *(void *)(a2 + 720) = *((unsigned int *)a1 + 47);
  uint64_t v77 = a1[192];
  *(void *)(a2 + 1256) = v68 | 0xFFFFFF8;
  *(void *)(a2 + 728) = v77;
  return result;
}

__n128 sub_1CBE79C54(unsigned __int8 *a1, __n128 *a2)
{
  a2[79].n128_u64[0] = 0;
  a2[78].n128_u64[1] = 0;
  unint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = 3;
  a2[78].n128_u64[0] = 3;
  a2->n128_u64[0] = v2;
  a2->n128_u64[1] = v3;
  unsigned int v5 = *((_DWORD *)a1 + 3);
  if (!v5)
  {
    unint64_t v6 = a1[4];
    uint64_t v4 = 7;
    a2[78].n128_u64[0] = 7;
    a2[1].n128_u64[0] = v6;
    unsigned int v5 = *((_DWORD *)a1 + 3);
  }
  if (v5 == 1)
  {
    unint64_t v7 = *((unsigned __int16 *)a1 + 2);
    v4 |= 8uLL;
    a2[78].n128_u64[0] = v4;
    a2[1].n128_u64[1] = v7;
    unsigned int v5 = *((_DWORD *)a1 + 3);
  }
  if (v5 == 2)
  {
    unint64_t v8 = *((unsigned __int16 *)a1 + 2);
    v4 |= 0x10uLL;
    a2[78].n128_u64[0] = v4;
    a2[2].n128_u64[0] = v8;
    unsigned int v5 = *((_DWORD *)a1 + 3);
  }
  if (v5 == 3)
  {
    unint64_t v9 = *((unsigned __int16 *)a1 + 2);
    v4 |= 0x20uLL;
    a2[78].n128_u64[0] = v4;
    a2[2].n128_u64[1] = v9;
    unsigned int v5 = *((_DWORD *)a1 + 3);
  }
  if (v5 == 4)
  {
    unint64_t v10 = *((unsigned int *)a1 + 1);
    v4 |= 0x40uLL;
    a2[78].n128_u64[0] = v4;
    a2[3].n128_u64[0] = v10;
    unsigned int v5 = *((_DWORD *)a1 + 3);
  }
  if (v5 == 5)
  {
    unint64_t v11 = *((unsigned __int16 *)a1 + 2);
    v4 |= 0x80uLL;
    a2[78].n128_u64[0] = v4;
    a2[3].n128_u64[1] = v11;
    unsigned int v5 = *((_DWORD *)a1 + 3);
  }
  if (v5 == 6)
  {
    unint64_t v12 = a1[4];
    v4 |= 0x100uLL;
    a2[78].n128_u64[0] = v4;
    a2[4].n128_u64[0] = v12;
    unsigned int v5 = *((_DWORD *)a1 + 3);
  }
  if (v5 == 7)
  {
    unint64_t v13 = *((unsigned int *)a1 + 1);
    a2[78].n128_u64[0] = v4 | 0x200;
    a2[4].n128_u64[1] = v13;
    unsigned int v5 = *((_DWORD *)a1 + 3);
    if (v5 == 7)
    {
      v4 |= 0x600uLL;
      a2[5].n128_u64[0] = a1[8];
      unsigned int v5 = 7;
    }
    else
    {
      v4 |= 0x200uLL;
    }
  }
  unint64_t v14 = *((unsigned int *)a1 + 4);
  a2[5].n128_u64[1] = v5;
  a2[6].n128_u64[0] = v14;
  unint64_t v15 = *((unsigned int *)a1 + 6);
  a2[6].n128_u64[1] = a1[20];
  a2[7].n128_u64[0] = v15;
  unint64_t v16 = a1[28];
  unint64_t v17 = a1[29];
  uint64_t v18 = v4 | 0x1F800;
  a2[78].n128_u64[0] = v4 | 0x1F800;
  a2[7].n128_u64[1] = v16;
  a2[8].n128_u64[0] = v17;
  unsigned int v19 = *((_DWORD *)a1 + 10);
  if (!v19)
  {
    unint64_t v20 = a1[32];
    uint64_t v18 = v4 | 0x3F800;
    a2[78].n128_u64[0] = v4 | 0x3F800;
    a2[8].n128_u64[1] = v20;
    unsigned int v19 = *((_DWORD *)a1 + 10);
  }
  if (v19 == 1)
  {
    unint64_t v21 = *((unsigned __int16 *)a1 + 16);
    v18 |= 0x40000uLL;
    a2[78].n128_u64[0] = v18;
    a2[9].n128_u64[0] = v21;
    unsigned int v19 = *((_DWORD *)a1 + 10);
  }
  if (v19 == 2)
  {
    unint64_t v22 = *((unsigned __int16 *)a1 + 16);
    v18 |= 0x80000uLL;
    a2[78].n128_u64[0] = v18;
    a2[9].n128_u64[1] = v22;
    unsigned int v19 = *((_DWORD *)a1 + 10);
  }
  if (v19 == 3)
  {
    unint64_t v23 = *((unsigned __int16 *)a1 + 16);
    v18 |= 0x100000uLL;
    a2[78].n128_u64[0] = v18;
    a2[10].n128_u64[0] = v23;
    unsigned int v19 = *((_DWORD *)a1 + 10);
  }
  if (v19 == 4)
  {
    unint64_t v24 = *((unsigned int *)a1 + 8);
    v18 |= 0x200000uLL;
    a2[78].n128_u64[0] = v18;
    a2[10].n128_u64[1] = v24;
    unsigned int v19 = *((_DWORD *)a1 + 10);
  }
  if (v19 == 5)
  {
    unint64_t v25 = *((unsigned __int16 *)a1 + 16);
    v18 |= 0x400000uLL;
    a2[78].n128_u64[0] = v18;
    a2[11].n128_u64[0] = v25;
    unsigned int v19 = *((_DWORD *)a1 + 10);
  }
  if (v19 == 6)
  {
    unint64_t v26 = a1[32];
    v18 |= 0x800000uLL;
    a2[78].n128_u64[0] = v18;
    a2[11].n128_u64[1] = v26;
    unsigned int v19 = *((_DWORD *)a1 + 10);
  }
  if (v19 == 7)
  {
    unint64_t v27 = *((unsigned int *)a1 + 8);
    a2[78].n128_u64[0] = v18 | 0x1000000;
    a2[12].n128_u64[0] = v27;
    unsigned int v19 = *((_DWORD *)a1 + 10);
    if (v19 == 7)
    {
      v18 |= 0x3000000uLL;
      a2[12].n128_u64[1] = a1[36];
    }
    else
    {
      v18 |= 0x1000000uLL;
    }
  }
  unint64_t v28 = v19;
  unint64_t v29 = *((unsigned int *)a1 + 11);
  a2[13].n128_u64[0] = v28;
  a2[13].n128_u64[1] = v29;
  unint64_t v30 = *((unsigned int *)a1 + 13);
  a2[14].n128_u64[0] = a1[48];
  a2[14].n128_u64[1] = v30;
  unint64_t v31 = a1[56];
  unint64_t v32 = a1[57];
  uint64_t v33 = v18 | 0xFC000000;
  a2[78].n128_u64[0] = v18 | 0xFC000000;
  a2[15].n128_u64[0] = v31;
  a2[15].n128_u64[1] = v32;
  unsigned int v34 = *((_DWORD *)a1 + 17);
  if (!v34)
  {
    unint64_t v35 = a1[60];
    uint64_t v33 = v18 | 0x1FC000000;
    a2[78].n128_u64[0] = v18 | 0x1FC000000;
    a2[16].n128_u64[0] = v35;
    unsigned int v34 = *((_DWORD *)a1 + 17);
  }
  if (v34 == 1)
  {
    unint64_t v36 = *((unsigned __int16 *)a1 + 30);
    v33 |= 0x200000000uLL;
    a2[78].n128_u64[0] = v33;
    a2[16].n128_u64[1] = v36;
    unsigned int v34 = *((_DWORD *)a1 + 17);
  }
  if (v34 == 2)
  {
    unint64_t v37 = *((unsigned __int16 *)a1 + 30);
    v33 |= 0x400000000uLL;
    a2[78].n128_u64[0] = v33;
    a2[17].n128_u64[0] = v37;
    unsigned int v34 = *((_DWORD *)a1 + 17);
  }
  if (v34 == 3)
  {
    unint64_t v38 = *((unsigned __int16 *)a1 + 30);
    v33 |= 0x800000000uLL;
    a2[78].n128_u64[0] = v33;
    a2[17].n128_u64[1] = v38;
    unsigned int v34 = *((_DWORD *)a1 + 17);
  }
  if (v34 == 4)
  {
    unint64_t v39 = *((unsigned int *)a1 + 15);
    v33 |= 0x1000000000uLL;
    a2[78].n128_u64[0] = v33;
    a2[18].n128_u64[0] = v39;
    unsigned int v34 = *((_DWORD *)a1 + 17);
  }
  if (v34 == 5)
  {
    unint64_t v40 = *((unsigned __int16 *)a1 + 30);
    v33 |= 0x2000000000uLL;
    a2[78].n128_u64[0] = v33;
    a2[18].n128_u64[1] = v40;
    unsigned int v34 = *((_DWORD *)a1 + 17);
  }
  if (v34 == 6)
  {
    unint64_t v41 = a1[60];
    v33 |= 0x4000000000uLL;
    a2[78].n128_u64[0] = v33;
    a2[19].n128_u64[0] = v41;
    unsigned int v34 = *((_DWORD *)a1 + 17);
  }
  if (v34 == 7)
  {
    unint64_t v42 = *((unsigned int *)a1 + 15);
    a2[78].n128_u64[0] = v33 | 0x8000000000;
    a2[19].n128_u64[1] = v42;
    unsigned int v34 = *((_DWORD *)a1 + 17);
    if (v34 == 7)
    {
      v33 |= 0x18000000000uLL;
      a2[20].n128_u64[0] = a1[64];
    }
    else
    {
      v33 |= 0x8000000000uLL;
    }
  }
  unint64_t v43 = v34;
  unint64_t v44 = *((unsigned int *)a1 + 18);
  a2[20].n128_u64[1] = v43;
  a2[21].n128_u64[0] = v44;
  unint64_t v45 = *((unsigned int *)a1 + 20);
  a2[21].n128_u64[1] = a1[76];
  a2[22].n128_u64[0] = v45;
  unint64_t v46 = a1[84];
  uint64_t v47 = v33 | 0x3E0000000000;
  a2[78].n128_u64[0] = v33 | 0x3E0000000000;
  a2[22].n128_u64[1] = v46;
  unsigned int v48 = *((_DWORD *)a1 + 24);
  if (!v48)
  {
    unint64_t v49 = a1[88];
    uint64_t v47 = v33 | 0x7E0000000000;
    a2[78].n128_u64[0] = v33 | 0x7E0000000000;
    a2[23].n128_u64[0] = v49;
    unsigned int v48 = *((_DWORD *)a1 + 24);
  }
  if (v48 == 1)
  {
    unint64_t v50 = *((unsigned __int16 *)a1 + 44);
    v47 |= 0x800000000000uLL;
    a2[78].n128_u64[0] = v47;
    a2[23].n128_u64[1] = v50;
    unsigned int v48 = *((_DWORD *)a1 + 24);
  }
  if (v48 == 2)
  {
    unint64_t v51 = *((unsigned __int16 *)a1 + 44);
    v47 |= 0x1000000000000uLL;
    a2[78].n128_u64[0] = v47;
    a2[24].n128_u64[0] = v51;
    unsigned int v48 = *((_DWORD *)a1 + 24);
  }
  if (v48 == 3)
  {
    unint64_t v52 = *((unsigned __int16 *)a1 + 44);
    v47 |= 0x2000000000000uLL;
    a2[78].n128_u64[0] = v47;
    a2[24].n128_u64[1] = v52;
    unsigned int v48 = *((_DWORD *)a1 + 24);
  }
  if (v48 == 4)
  {
    unint64_t v53 = *((unsigned int *)a1 + 22);
    v47 |= 0x4000000000000uLL;
    a2[78].n128_u64[0] = v47;
    a2[25].n128_u64[0] = v53;
    unsigned int v48 = *((_DWORD *)a1 + 24);
  }
  if (v48 == 5)
  {
    unint64_t v54 = *((unsigned __int16 *)a1 + 44);
    v47 |= 0x8000000000000uLL;
    a2[78].n128_u64[0] = v47;
    a2[25].n128_u64[1] = v54;
    unsigned int v48 = *((_DWORD *)a1 + 24);
  }
  if (v48 == 6)
  {
    unint64_t v55 = a1[88];
    v47 |= 0x10000000000000uLL;
    a2[78].n128_u64[0] = v47;
    a2[26].n128_u64[0] = v55;
    unsigned int v48 = *((_DWORD *)a1 + 24);
  }
  if (v48 == 7)
  {
    unint64_t v56 = *((unsigned int *)a1 + 22);
    a2[78].n128_u64[0] = v47 | 0x20000000000000;
    a2[26].n128_u64[1] = v56;
    unsigned int v48 = *((_DWORD *)a1 + 24);
    if (v48 == 7)
    {
      v47 |= 0x60000000000000uLL;
      a2[27].n128_u64[0] = a1[92];
    }
    else
    {
      v47 |= 0x20000000000000uLL;
    }
  }
  unint64_t v57 = *((unsigned int *)a1 + 25);
  a2[27].n128_u64[1] = v48;
  a2[28].n128_u64[0] = v57;
  unint64_t v58 = *((unsigned int *)a1 + 27);
  a2[28].n128_u64[1] = a1[104];
  a2[29].n128_u64[0] = v58;
  a2[29].n128_u64[1] = a1[112];
  uint64_t v59 = *(void *)(a1 + 116);
  v60.n128_u64[0] = v59;
  v60.n128_u64[1] = HIDWORD(v59);
  a2[30] = v60;
  unint64_t v61 = a1[124];
  a2[78].n128_u64[0] = v47 | 0xFF80000000000000;
  unint64_t v62 = a1[125];
  a2[31].n128_u64[0] = v61;
  a2[31].n128_u64[1] = v62;
  a2[32].n128_u64[0] = a1[126];
  a2[32].n128_u64[1] = a1[127];
  a2[33].n128_u64[0] = a1[128];
  a2[33].n128_u64[1] = a1[129];
  a2[34].n128_u64[0] = a1[130];
  a2[34].n128_u64[1] = a1[131];
  uint64_t v63 = *(void *)(a1 + 132);
  v60.n128_u64[0] = v63;
  v60.n128_u64[1] = HIDWORD(v63);
  __n128 v64 = v60;
  uint64_t v65 = *(void *)(a1 + 140);
  v60.n128_u64[0] = v65;
  v60.n128_u64[1] = HIDWORD(v65);
  a2[35] = v64;
  a2[36] = v60;
  v64.n128_u64[0] = *(void *)(a1 + 148);
  v60.n128_u64[0] = v64.n128_u32[0];
  v60.n128_u64[1] = v64.n128_u32[1];
  __n128 result = v60;
  uint64_t v67 = *(void *)(a1 + 156);
  v60.n128_u64[0] = v67;
  v60.n128_u64[1] = HIDWORD(v67);
  a2[37] = result;
  a2[38] = v60;
  a2[39].n128_u64[0] = *((unsigned int *)a1 + 41);
  unint64_t v68 = a1[168];
  a2[78].n128_u64[1] = 0xFFFFLL;
  a2[39].n128_u64[1] = v68;
  return result;
}

__n128 sub_1CBE7A198(unsigned __int8 *a1, __n128 *a2)
{
  a2[79].n128_u64[0] = 0;
  a2[78].n128_u64[1] = 0;
  unint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = 3;
  a2[78].n128_u64[0] = 3;
  a2->n128_u64[0] = v2;
  a2->n128_u64[1] = v3;
  unsigned int v5 = *((_DWORD *)a1 + 3);
  if (!v5)
  {
    unint64_t v6 = a1[4];
    uint64_t v4 = 7;
    a2[78].n128_u64[0] = 7;
    a2[1].n128_u64[0] = v6;
    unsigned int v5 = *((_DWORD *)a1 + 3);
  }
  if (v5 == 1)
  {
    unint64_t v7 = *((unsigned __int16 *)a1 + 2);
    v4 |= 8uLL;
    a2[78].n128_u64[0] = v4;
    a2[1].n128_u64[1] = v7;
    unsigned int v5 = *((_DWORD *)a1 + 3);
  }
  if (v5 == 2)
  {
    unint64_t v8 = *((unsigned __int16 *)a1 + 2);
    v4 |= 0x10uLL;
    a2[78].n128_u64[0] = v4;
    a2[2].n128_u64[0] = v8;
    unsigned int v5 = *((_DWORD *)a1 + 3);
  }
  if (v5 == 3)
  {
    unint64_t v9 = *((unsigned __int16 *)a1 + 2);
    v4 |= 0x20uLL;
    a2[78].n128_u64[0] = v4;
    a2[2].n128_u64[1] = v9;
    unsigned int v5 = *((_DWORD *)a1 + 3);
  }
  if (v5 == 4)
  {
    unint64_t v10 = *((unsigned int *)a1 + 1);
    v4 |= 0x40uLL;
    a2[78].n128_u64[0] = v4;
    a2[3].n128_u64[0] = v10;
    unsigned int v5 = *((_DWORD *)a1 + 3);
  }
  if (v5 == 5)
  {
    unint64_t v11 = *((unsigned __int16 *)a1 + 2);
    v4 |= 0x80uLL;
    a2[78].n128_u64[0] = v4;
    a2[3].n128_u64[1] = v11;
    unsigned int v5 = *((_DWORD *)a1 + 3);
  }
  if (v5 == 6)
  {
    unint64_t v12 = a1[4];
    v4 |= 0x100uLL;
    a2[78].n128_u64[0] = v4;
    a2[4].n128_u64[0] = v12;
    unsigned int v5 = *((_DWORD *)a1 + 3);
  }
  if (v5 == 7)
  {
    unint64_t v13 = *((unsigned int *)a1 + 1);
    a2[78].n128_u64[0] = v4 | 0x200;
    a2[4].n128_u64[1] = v13;
    unsigned int v5 = *((_DWORD *)a1 + 3);
    if (v5 == 7)
    {
      v4 |= 0x600uLL;
      a2[5].n128_u64[0] = a1[8];
      unsigned int v5 = 7;
    }
    else
    {
      v4 |= 0x200uLL;
    }
  }
  unint64_t v14 = *((unsigned int *)a1 + 4);
  a2[5].n128_u64[1] = v5;
  a2[6].n128_u64[0] = v14;
  unint64_t v15 = *((unsigned int *)a1 + 6);
  a2[6].n128_u64[1] = a1[20];
  a2[7].n128_u64[0] = v15;
  unint64_t v16 = a1[28];
  unint64_t v17 = a1[29];
  uint64_t v18 = v4 | 0x1F800;
  a2[78].n128_u64[0] = v4 | 0x1F800;
  a2[7].n128_u64[1] = v16;
  a2[8].n128_u64[0] = v17;
  unsigned int v19 = *((_DWORD *)a1 + 10);
  if (!v19)
  {
    unint64_t v20 = a1[32];
    uint64_t v18 = v4 | 0x3F800;
    a2[78].n128_u64[0] = v4 | 0x3F800;
    a2[8].n128_u64[1] = v20;
    unsigned int v19 = *((_DWORD *)a1 + 10);
  }
  if (v19 == 1)
  {
    unint64_t v21 = *((unsigned __int16 *)a1 + 16);
    v18 |= 0x40000uLL;
    a2[78].n128_u64[0] = v18;
    a2[9].n128_u64[0] = v21;
    unsigned int v19 = *((_DWORD *)a1 + 10);
  }
  if (v19 == 2)
  {
    unint64_t v22 = *((unsigned __int16 *)a1 + 16);
    v18 |= 0x80000uLL;
    a2[78].n128_u64[0] = v18;
    a2[9].n128_u64[1] = v22;
    unsigned int v19 = *((_DWORD *)a1 + 10);
  }
  if (v19 == 3)
  {
    unint64_t v23 = *((unsigned __int16 *)a1 + 16);
    v18 |= 0x100000uLL;
    a2[78].n128_u64[0] = v18;
    a2[10].n128_u64[0] = v23;
    unsigned int v19 = *((_DWORD *)a1 + 10);
  }
  if (v19 == 4)
  {
    unint64_t v24 = *((unsigned int *)a1 + 8);
    v18 |= 0x200000uLL;
    a2[78].n128_u64[0] = v18;
    a2[10].n128_u64[1] = v24;
    unsigned int v19 = *((_DWORD *)a1 + 10);
  }
  if (v19 == 5)
  {
    unint64_t v25 = *((unsigned __int16 *)a1 + 16);
    v18 |= 0x400000uLL;
    a2[78].n128_u64[0] = v18;
    a2[11].n128_u64[0] = v25;
    unsigned int v19 = *((_DWORD *)a1 + 10);
  }
  if (v19 == 6)
  {
    unint64_t v26 = a1[32];
    v18 |= 0x800000uLL;
    a2[78].n128_u64[0] = v18;
    a2[11].n128_u64[1] = v26;
    unsigned int v19 = *((_DWORD *)a1 + 10);
  }
  if (v19 == 7)
  {
    unint64_t v27 = *((unsigned int *)a1 + 8);
    a2[78].n128_u64[0] = v18 | 0x1000000;
    a2[12].n128_u64[0] = v27;
    unsigned int v19 = *((_DWORD *)a1 + 10);
    if (v19 == 7)
    {
      v18 |= 0x3000000uLL;
      a2[12].n128_u64[1] = a1[36];
    }
    else
    {
      v18 |= 0x1000000uLL;
    }
  }
  unint64_t v28 = v19;
  unint64_t v29 = *((unsigned int *)a1 + 11);
  a2[13].n128_u64[0] = v28;
  a2[13].n128_u64[1] = v29;
  unint64_t v30 = *((unsigned int *)a1 + 13);
  a2[14].n128_u64[0] = a1[48];
  a2[14].n128_u64[1] = v30;
  unint64_t v31 = a1[56];
  unint64_t v32 = a1[57];
  uint64_t v33 = v18 | 0xFC000000;
  a2[78].n128_u64[0] = v18 | 0xFC000000;
  a2[15].n128_u64[0] = v31;
  a2[15].n128_u64[1] = v32;
  unsigned int v34 = *((_DWORD *)a1 + 17);
  if (!v34)
  {
    unint64_t v35 = a1[60];
    uint64_t v33 = v18 | 0x1FC000000;
    a2[78].n128_u64[0] = v18 | 0x1FC000000;
    a2[16].n128_u64[0] = v35;
    unsigned int v34 = *((_DWORD *)a1 + 17);
  }
  if (v34 == 1)
  {
    unint64_t v36 = *((unsigned __int16 *)a1 + 30);
    v33 |= 0x200000000uLL;
    a2[78].n128_u64[0] = v33;
    a2[16].n128_u64[1] = v36;
    unsigned int v34 = *((_DWORD *)a1 + 17);
  }
  if (v34 == 2)
  {
    unint64_t v37 = *((unsigned __int16 *)a1 + 30);
    v33 |= 0x400000000uLL;
    a2[78].n128_u64[0] = v33;
    a2[17].n128_u64[0] = v37;
    unsigned int v34 = *((_DWORD *)a1 + 17);
  }
  if (v34 == 3)
  {
    unint64_t v38 = *((unsigned __int16 *)a1 + 30);
    v33 |= 0x800000000uLL;
    a2[78].n128_u64[0] = v33;
    a2[17].n128_u64[1] = v38;
    unsigned int v34 = *((_DWORD *)a1 + 17);
  }
  if (v34 == 4)
  {
    unint64_t v39 = *((unsigned int *)a1 + 15);
    v33 |= 0x1000000000uLL;
    a2[78].n128_u64[0] = v33;
    a2[18].n128_u64[0] = v39;
    unsigned int v34 = *((_DWORD *)a1 + 17);
  }
  if (v34 == 5)
  {
    unint64_t v40 = *((unsigned __int16 *)a1 + 30);
    v33 |= 0x2000000000uLL;
    a2[78].n128_u64[0] = v33;
    a2[18].n128_u64[1] = v40;
    unsigned int v34 = *((_DWORD *)a1 + 17);
  }
  if (v34 == 6)
  {
    unint64_t v41 = a1[60];
    v33 |= 0x4000000000uLL;
    a2[78].n128_u64[0] = v33;
    a2[19].n128_u64[0] = v41;
    unsigned int v34 = *((_DWORD *)a1 + 17);
  }
  if (v34 == 7)
  {
    unint64_t v42 = *((unsigned int *)a1 + 15);
    a2[78].n128_u64[0] = v33 | 0x8000000000;
    a2[19].n128_u64[1] = v42;
    unsigned int v34 = *((_DWORD *)a1 + 17);
    if (v34 == 7)
    {
      v33 |= 0x18000000000uLL;
      a2[20].n128_u64[0] = a1[64];
    }
    else
    {
      v33 |= 0x8000000000uLL;
    }
  }
  unint64_t v43 = v34;
  unint64_t v44 = *((unsigned int *)a1 + 18);
  a2[20].n128_u64[1] = v43;
  a2[21].n128_u64[0] = v44;
  unint64_t v45 = *((unsigned int *)a1 + 20);
  a2[21].n128_u64[1] = a1[76];
  a2[22].n128_u64[0] = v45;
  unint64_t v46 = a1[84];
  uint64_t v47 = v33 | 0x3E0000000000;
  a2[78].n128_u64[0] = v33 | 0x3E0000000000;
  a2[22].n128_u64[1] = v46;
  unsigned int v48 = *((_DWORD *)a1 + 24);
  if (!v48)
  {
    unint64_t v49 = a1[88];
    uint64_t v47 = v33 | 0x7E0000000000;
    a2[78].n128_u64[0] = v33 | 0x7E0000000000;
    a2[23].n128_u64[0] = v49;
    unsigned int v48 = *((_DWORD *)a1 + 24);
  }
  if (v48 == 1)
  {
    unint64_t v50 = *((unsigned __int16 *)a1 + 44);
    v47 |= 0x800000000000uLL;
    a2[78].n128_u64[0] = v47;
    a2[23].n128_u64[1] = v50;
    unsigned int v48 = *((_DWORD *)a1 + 24);
  }
  if (v48 == 2)
  {
    unint64_t v51 = *((unsigned __int16 *)a1 + 44);
    v47 |= 0x1000000000000uLL;
    a2[78].n128_u64[0] = v47;
    a2[24].n128_u64[0] = v51;
    unsigned int v48 = *((_DWORD *)a1 + 24);
  }
  if (v48 == 3)
  {
    unint64_t v52 = *((unsigned __int16 *)a1 + 44);
    v47 |= 0x2000000000000uLL;
    a2[78].n128_u64[0] = v47;
    a2[24].n128_u64[1] = v52;
    unsigned int v48 = *((_DWORD *)a1 + 24);
  }
  if (v48 == 4)
  {
    unint64_t v53 = *((unsigned int *)a1 + 22);
    v47 |= 0x4000000000000uLL;
    a2[78].n128_u64[0] = v47;
    a2[25].n128_u64[0] = v53;
    unsigned int v48 = *((_DWORD *)a1 + 24);
  }
  if (v48 == 5)
  {
    unint64_t v54 = *((unsigned __int16 *)a1 + 44);
    v47 |= 0x8000000000000uLL;
    a2[78].n128_u64[0] = v47;
    a2[25].n128_u64[1] = v54;
    unsigned int v48 = *((_DWORD *)a1 + 24);
  }
  if (v48 == 6)
  {
    unint64_t v55 = a1[88];
    v47 |= 0x10000000000000uLL;
    a2[78].n128_u64[0] = v47;
    a2[26].n128_u64[0] = v55;
    unsigned int v48 = *((_DWORD *)a1 + 24);
  }
  if (v48 == 7)
  {
    unint64_t v56 = *((unsigned int *)a1 + 22);
    a2[78].n128_u64[0] = v47 | 0x20000000000000;
    a2[26].n128_u64[1] = v56;
    unsigned int v48 = *((_DWORD *)a1 + 24);
    if (v48 == 7)
    {
      v47 |= 0x60000000000000uLL;
      a2[27].n128_u64[0] = a1[92];
    }
    else
    {
      v47 |= 0x20000000000000uLL;
    }
  }
  unint64_t v57 = *((unsigned int *)a1 + 25);
  a2[27].n128_u64[1] = v48;
  a2[28].n128_u64[0] = v57;
  unint64_t v58 = *((unsigned int *)a1 + 27);
  a2[28].n128_u64[1] = a1[104];
  a2[29].n128_u64[0] = v58;
  a2[29].n128_u64[1] = a1[112];
  uint64_t v59 = *(void *)(a1 + 116);
  v60.n128_u64[0] = v59;
  v60.n128_u64[1] = HIDWORD(v59);
  a2[30] = v60;
  unint64_t v61 = a1[124];
  a2[78].n128_u64[0] = v47 | 0xFF80000000000000;
  unint64_t v62 = a1[125];
  a2[31].n128_u64[0] = v61;
  a2[31].n128_u64[1] = v62;
  a2[32].n128_u64[0] = a1[126];
  a2[32].n128_u64[1] = a1[127];
  a2[33].n128_u64[0] = a1[128];
  a2[33].n128_u64[1] = a1[129];
  a2[34].n128_u64[0] = a1[130];
  a2[34].n128_u64[1] = a1[131];
  uint64_t v63 = *(void *)(a1 + 132);
  v60.n128_u64[0] = v63;
  v60.n128_u64[1] = HIDWORD(v63);
  __n128 v64 = v60;
  uint64_t v65 = *(void *)(a1 + 140);
  v60.n128_u64[0] = v65;
  v60.n128_u64[1] = HIDWORD(v65);
  a2[35] = v64;
  a2[36] = v60;
  v64.n128_u64[0] = *(void *)(a1 + 148);
  v60.n128_u64[0] = v64.n128_u32[0];
  v60.n128_u64[1] = v64.n128_u32[1];
  __n128 result = v60;
  uint64_t v67 = *(void *)(a1 + 156);
  v60.n128_u64[0] = v67;
  v60.n128_u64[1] = HIDWORD(v67);
  a2[37] = result;
  a2[38] = v60;
  a2[39].n128_u64[0] = *((unsigned int *)a1 + 41);
  unint64_t v68 = a1[168];
  a2[78].n128_u64[1] = 0xFFFFLL;
  a2[39].n128_u64[1] = v68;
  return result;
}

__n128 sub_1CBE7A6DC(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = v16;
  uint64_t v26 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v25;
  *(void *)(a2 + 192) = v26;
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = a1[52];
  uint64_t v29 = a1[53];
  uint64_t v30 = v13 | 0x1F800000;
  *(void *)(a2 + 1248) = v13 | 0x1F800000;
  *(void *)(a2 + 216) = v28;
  *(void *)(a2 + 224) = v29;
  unsigned int v31 = *((_DWORD *)a1 + 16);
  if (!v31)
  {
    uint64_t v32 = a1[56];
    uint64_t v30 = v13 | 0x3F800000;
    *(void *)(a2 + 1248) = v13 | 0x3F800000;
    *(void *)(a2 + 232) = v32;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 1)
  {
    uint64_t v33 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x40000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 240) = v33;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 2)
  {
    uint64_t v34 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x80000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 248) = v34;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 3)
  {
    uint64_t v35 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 256) = v35;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 4)
  {
    uint64_t v36 = *((unsigned int *)a1 + 14);
    v30 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 264) = v36;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 5)
  {
    uint64_t v37 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 272) = v37;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 6)
  {
    uint64_t v38 = a1[56];
    v30 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 280) = v38;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 7)
  {
    uint64_t v39 = *((unsigned int *)a1 + 14);
    *(void *)(a2 + 1248) = v30 | 0x1000000000;
    *(void *)(a2 + 288) = v39;
    unsigned int v31 = *((_DWORD *)a1 + 16);
    if (v31 == 7)
    {
      v30 |= 0x3000000000uLL;
      *(void *)(a2 + 296) = a1[60];
      unsigned int v31 = 7;
    }
    else
    {
      v30 |= 0x1000000000uLL;
    }
  }
  uint64_t v40 = *((unsigned int *)a1 + 17);
  *(void *)(a2 + 304) = v31;
  *(void *)(a2 + 312) = v40;
  uint64_t v41 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 320) = a1[72];
  *(void *)(a2 + 328) = v41;
  uint64_t v42 = a1[81];
  *(void *)(a2 + 336) = a1[80];
  *(void *)(a2 + 344) = v42;
  uint64_t v43 = *(void *)(a1 + 84);
  v44.n128_u64[0] = v43;
  v44.n128_u64[1] = HIDWORD(v43);
  *(__n128 *)(a2 + 352) = v44;
  uint64_t v45 = a1[93];
  *(void *)(a2 + 368) = a1[92];
  *(void *)(a2 + 376) = v45;
  uint64_t v46 = a1[95];
  *(void *)(a2 + 384) = a1[94];
  *(void *)(a2 + 392) = v46;
  uint64_t v47 = a1[97];
  *(void *)(a2 + 400) = a1[96];
  *(void *)(a2 + 408) = v47;
  uint64_t v48 = a1[99];
  *(void *)(a2 + 416) = a1[98];
  *(void *)(a2 + 424) = v48;
  *(void *)(a2 + 432) = a1[100];
  uint64_t v49 = *((void *)a1 + 13);
  uint64_t v50 = *((void *)a1 + 14);
  v44.n128_u64[0] = v49;
  v44.n128_u64[1] = HIDWORD(v49);
  __n128 v51 = v44;
  v44.n128_u64[0] = v50;
  v44.n128_u64[1] = HIDWORD(v50);
  *(__n128 *)(a2 + 440) = v51;
  *(__n128 *)(a2 + 456) = v44;
  v51.n128_u64[0] = *((void *)a1 + 15);
  uint64_t v52 = *((void *)a1 + 16);
  v44.n128_u64[0] = v51.n128_u32[0];
  v44.n128_u64[1] = v51.n128_u32[1];
  __n128 result = v44;
  v44.n128_u64[0] = v52;
  v44.n128_u64[1] = HIDWORD(v52);
  *(__n128 *)(a2 + 472) = result;
  *(__n128 *)(a2 + 488) = v44;
  uint64_t v54 = *((unsigned int *)a1 + 34);
  *(void *)(a2 + 1248) = v30 | 0xFFFFFFC000000000;
  uint64_t v55 = a1[140];
  *(void *)(a2 + 1256) = 1;
  *(void *)(a2 + 504) = v54;
  *(void *)(a2 + 512) = v55;
  return result;
}

__n128 sub_1CBE7AAEC(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = v16;
  uint64_t v26 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v25;
  *(void *)(a2 + 192) = v26;
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = a1[52];
  uint64_t v29 = a1[53];
  uint64_t v30 = v13 | 0x1F800000;
  *(void *)(a2 + 1248) = v13 | 0x1F800000;
  *(void *)(a2 + 216) = v28;
  *(void *)(a2 + 224) = v29;
  unsigned int v31 = *((_DWORD *)a1 + 16);
  if (!v31)
  {
    uint64_t v32 = a1[56];
    uint64_t v30 = v13 | 0x3F800000;
    *(void *)(a2 + 1248) = v13 | 0x3F800000;
    *(void *)(a2 + 232) = v32;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 1)
  {
    uint64_t v33 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x40000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 240) = v33;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 2)
  {
    uint64_t v34 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x80000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 248) = v34;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 3)
  {
    uint64_t v35 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 256) = v35;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 4)
  {
    uint64_t v36 = *((unsigned int *)a1 + 14);
    v30 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 264) = v36;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 5)
  {
    uint64_t v37 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 272) = v37;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 6)
  {
    uint64_t v38 = a1[56];
    v30 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 280) = v38;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 7)
  {
    uint64_t v39 = *((unsigned int *)a1 + 14);
    *(void *)(a2 + 1248) = v30 | 0x1000000000;
    *(void *)(a2 + 288) = v39;
    unsigned int v31 = *((_DWORD *)a1 + 16);
    if (v31 == 7)
    {
      v30 |= 0x3000000000uLL;
      *(void *)(a2 + 296) = a1[60];
    }
    else
    {
      v30 |= 0x1000000000uLL;
    }
  }
  uint64_t v40 = *((unsigned int *)a1 + 17);
  *(void *)(a2 + 304) = v31;
  *(void *)(a2 + 312) = v40;
  uint64_t v41 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 320) = a1[72];
  *(void *)(a2 + 328) = v41;
  uint64_t v42 = a1[81];
  *(void *)(a2 + 336) = a1[80];
  *(void *)(a2 + 344) = v42;
  uint64_t v43 = *(void *)(a1 + 84);
  v44.n128_u64[0] = v43;
  v44.n128_u64[1] = HIDWORD(v43);
  *(__n128 *)(a2 + 352) = v44;
  uint64_t v45 = a1[93];
  *(void *)(a2 + 368) = a1[92];
  *(void *)(a2 + 376) = v45;
  uint64_t v46 = a1[95];
  *(void *)(a2 + 384) = a1[94];
  *(void *)(a2 + 392) = v46;
  uint64_t v47 = a1[97];
  *(void *)(a2 + 400) = a1[96];
  *(void *)(a2 + 408) = v47;
  uint64_t v48 = a1[99];
  *(void *)(a2 + 416) = a1[98];
  *(void *)(a2 + 424) = v48;
  uint64_t v49 = *(void *)(a1 + 100);
  v44.n128_u64[0] = v49;
  v44.n128_u64[1] = HIDWORD(v49);
  __n128 v50 = v44;
  uint64_t v51 = *(void *)(a1 + 108);
  v44.n128_u64[0] = v51;
  v44.n128_u64[1] = HIDWORD(v51);
  *(__n128 *)(a2 + 432) = v50;
  *(__n128 *)(a2 + 448) = v44;
  v50.n128_u64[0] = *(void *)(a1 + 116);
  v44.n128_u64[0] = v50.n128_u32[0];
  v44.n128_u64[1] = v50.n128_u32[1];
  __n128 result = v44;
  uint64_t v53 = *(void *)(a1 + 124);
  v44.n128_u64[0] = v53;
  v44.n128_u64[1] = HIDWORD(v53);
  *(__n128 *)(a2 + 464) = result;
  *(__n128 *)(a2 + 480) = v44;
  uint64_t v54 = a1[132];
  *(void *)(a2 + 1248) = v30 | 0x7FFFFFC000000000;
  *(void *)(a2 + 496) = v54;
  return result;
}

__n128 sub_1CBE7AEE8(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v16;
  *(void *)(a2 + 192) = v25;
  uint64_t v26 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v26;
  *(void *)(a2 + 216) = a1[52];
  uint64_t v27 = *((void *)a1 + 7);
  v28.n128_u64[0] = v27;
  v28.n128_u64[1] = HIDWORD(v27);
  *(__n128 *)(a2 + 224) = v28;
  uint64_t v29 = a1[65];
  *(void *)(a2 + 240) = a1[64];
  *(void *)(a2 + 248) = v29;
  uint64_t v30 = a1[67];
  *(void *)(a2 + 256) = a1[66];
  *(void *)(a2 + 264) = v30;
  uint64_t v31 = a1[69];
  *(void *)(a2 + 272) = a1[68];
  *(void *)(a2 + 280) = v31;
  uint64_t v32 = a1[71];
  *(void *)(a2 + 288) = a1[70];
  *(void *)(a2 + 296) = v32;
  uint64_t v33 = *((void *)a1 + 9);
  uint64_t v34 = *((void *)a1 + 10);
  v28.n128_u64[0] = v33;
  v28.n128_u64[1] = HIDWORD(v33);
  __n128 v35 = v28;
  v28.n128_u64[0] = v34;
  v28.n128_u64[1] = HIDWORD(v34);
  *(__n128 *)(a2 + 304) = v35;
  *(__n128 *)(a2 + 320) = v28;
  v35.n128_u64[0] = *((void *)a1 + 11);
  uint64_t v36 = *((void *)a1 + 12);
  v28.n128_u64[0] = v35.n128_u32[0];
  v28.n128_u64[1] = v35.n128_u32[1];
  __n128 result = v28;
  v28.n128_u64[0] = v36;
  v28.n128_u64[1] = HIDWORD(v36);
  *(__n128 *)(a2 + 336) = result;
  *(__n128 *)(a2 + 352) = v28;
  uint64_t v38 = *((unsigned int *)a1 + 26);
  uint64_t v39 = a1[108];
  *(void *)(a2 + 1248) = v13 | 0xFFFFFF800000;
  *(void *)(a2 + 368) = v38;
  *(void *)(a2 + 376) = v39;
  return result;
}

__n128 sub_1CBE7B1B4(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = v16;
  uint64_t v26 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v25;
  *(void *)(a2 + 192) = v26;
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = a1[52];
  uint64_t v29 = a1[53];
  uint64_t v30 = v13 | 0x1F800000;
  *(void *)(a2 + 1248) = v13 | 0x1F800000;
  *(void *)(a2 + 216) = v28;
  *(void *)(a2 + 224) = v29;
  unsigned int v31 = *((_DWORD *)a1 + 16);
  if (!v31)
  {
    uint64_t v32 = a1[56];
    uint64_t v30 = v13 | 0x3F800000;
    *(void *)(a2 + 1248) = v13 | 0x3F800000;
    *(void *)(a2 + 232) = v32;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 1)
  {
    uint64_t v33 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x40000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 240) = v33;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 2)
  {
    uint64_t v34 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x80000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 248) = v34;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 3)
  {
    uint64_t v35 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 256) = v35;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 4)
  {
    uint64_t v36 = *((unsigned int *)a1 + 14);
    v30 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 264) = v36;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 5)
  {
    uint64_t v37 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 272) = v37;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 6)
  {
    uint64_t v38 = a1[56];
    v30 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 280) = v38;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 7)
  {
    uint64_t v39 = *((unsigned int *)a1 + 14);
    *(void *)(a2 + 1248) = v30 | 0x1000000000;
    *(void *)(a2 + 288) = v39;
    unsigned int v31 = *((_DWORD *)a1 + 16);
    if (v31 == 7)
    {
      v30 |= 0x3000000000uLL;
      *(void *)(a2 + 296) = a1[60];
    }
    else
    {
      v30 |= 0x1000000000uLL;
    }
  }
  uint64_t v40 = v31;
  uint64_t v41 = *((unsigned int *)a1 + 17);
  *(void *)(a2 + 304) = v40;
  *(void *)(a2 + 312) = v41;
  uint64_t v42 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 320) = a1[72];
  *(void *)(a2 + 328) = v42;
  uint64_t v43 = a1[80];
  uint64_t v44 = a1[84];
  uint64_t v45 = v30 | 0xFC000000000;
  *(void *)(a2 + 1248) = v30 | 0xFC000000000;
  *(void *)(a2 + 336) = v43;
  *(void *)(a2 + 344) = v44;
  unsigned int v46 = *((_DWORD *)a1 + 24);
  if (!v46)
  {
    uint64_t v47 = a1[88];
    uint64_t v45 = v30 | 0x1FC000000000;
    *(void *)(a2 + 1248) = v30 | 0x1FC000000000;
    *(void *)(a2 + 352) = v47;
    unsigned int v46 = *((_DWORD *)a1 + 24);
  }
  if (v46 == 1)
  {
    uint64_t v48 = *((unsigned __int16 *)a1 + 44);
    v45 |= 0x200000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 360) = v48;
    unsigned int v46 = *((_DWORD *)a1 + 24);
  }
  if (v46 == 2)
  {
    uint64_t v49 = *((unsigned __int16 *)a1 + 44);
    v45 |= 0x400000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 368) = v49;
    unsigned int v46 = *((_DWORD *)a1 + 24);
  }
  if (v46 == 3)
  {
    uint64_t v50 = *((unsigned __int16 *)a1 + 44);
    v45 |= 0x800000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 376) = v50;
    unsigned int v46 = *((_DWORD *)a1 + 24);
  }
  if (v46 == 4)
  {
    uint64_t v51 = *((unsigned int *)a1 + 22);
    v45 |= 0x1000000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 384) = v51;
    unsigned int v46 = *((_DWORD *)a1 + 24);
  }
  if (v46 == 5)
  {
    uint64_t v52 = *((unsigned __int16 *)a1 + 44);
    v45 |= 0x2000000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 392) = v52;
    unsigned int v46 = *((_DWORD *)a1 + 24);
  }
  if (v46 == 6)
  {
    uint64_t v53 = a1[88];
    v45 |= 0x4000000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 400) = v53;
    unsigned int v46 = *((_DWORD *)a1 + 24);
  }
  if (v46 == 7)
  {
    uint64_t v54 = *((unsigned int *)a1 + 22);
    *(void *)(a2 + 1248) = v45 | 0x8000000000000;
    *(void *)(a2 + 408) = v54;
    unsigned int v46 = *((_DWORD *)a1 + 24);
    if (v46 == 7)
    {
      v45 |= 0x18000000000000uLL;
      *(void *)(a2 + 416) = a1[92];
      unsigned int v46 = 7;
    }
    else
    {
      v45 |= 0x8000000000000uLL;
    }
  }
  uint64_t v55 = *((unsigned int *)a1 + 25);
  *(void *)(a2 + 424) = v46;
  *(void *)(a2 + 432) = v55;
  uint64_t v56 = *((unsigned int *)a1 + 27);
  *(void *)(a2 + 440) = a1[104];
  *(void *)(a2 + 448) = v56;
  *(void *)(a2 + 456) = a1[112];
  uint64_t v57 = *(void *)(a1 + 116);
  *(void *)&long long v58 = v57;
  *((void *)&v58 + 1) = HIDWORD(v57);
  *(_OWORD *)(a2 + 464) = v58;
  uint64_t v59 = a1[125];
  *(void *)(a2 + 480) = a1[124];
  *(void *)(a2 + 488) = v59;
  uint64_t v60 = a1[126];
  uint64_t v61 = a1[127];
  *(void *)(a2 + 1248) = v45 | 0xFFE0000000000000;
  *(void *)(a2 + 496) = v60;
  *(void *)(a2 + 504) = v61;
  *(void *)(a2 + 512) = a1[128];
  *(void *)(a2 + 520) = a1[129];
  *(void *)(a2 + 528) = a1[130];
  *(void *)(a2 + 536) = a1[131];
  *(void *)(a2 + 544) = a1[132];
  *(void *)(a2 + 552) = *((unsigned int *)a1 + 34);
  uint64_t v62 = *((unsigned __int16 *)a1 + 70);
  if ((v62 & 0x8000u) == 0) {
    uint64_t v62 = (__int16)v62;
  }
  *(void *)(a2 + 560) = v62;
  uint64_t v63 = *((void *)a1 + 18);
  uint64_t v64 = *((void *)a1 + 19);
  v65.n128_u64[0] = v63;
  v65.n128_u64[1] = HIDWORD(v63);
  __n128 v66 = v65;
  v65.n128_u64[0] = v64;
  v65.n128_u64[1] = HIDWORD(v64);
  *(__n128 *)(a2 + 568) = v66;
  *(__n128 *)(a2 + 584) = v65;
  v66.n128_u64[0] = *((void *)a1 + 20);
  uint64_t v67 = *((void *)a1 + 21);
  v65.n128_u64[0] = v66.n128_u32[0];
  v65.n128_u64[1] = v66.n128_u32[1];
  __n128 result = v65;
  v65.n128_u64[0] = v67;
  v65.n128_u64[1] = HIDWORD(v67);
  *(__n128 *)(a2 + 600) = result;
  *(__n128 *)(a2 + 616) = v65;
  *(void *)(a2 + 632) = *((unsigned int *)a1 + 44);
  uint64_t v69 = a1[180];
  *(void *)(a2 + 1256) = 0x1FFFFLL;
  *(void *)(a2 + 640) = v69;
  return result;
}

__n128 sub_1CBE7B714(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
      unsigned int v16 = 7;
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v16;
  *(void *)(a2 + 192) = v25;
  uint64_t v26 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v26;
  *(void *)(a2 + 216) = a1[52];
  uint64_t v27 = *((void *)a1 + 7);
  v28.n128_u64[0] = v27;
  v28.n128_u64[1] = HIDWORD(v27);
  *(__n128 *)(a2 + 224) = v28;
  uint64_t v29 = a1[65];
  *(void *)(a2 + 240) = a1[64];
  *(void *)(a2 + 248) = v29;
  uint64_t v30 = a1[67];
  *(void *)(a2 + 256) = a1[66];
  *(void *)(a2 + 264) = v30;
  uint64_t v31 = a1[69];
  *(void *)(a2 + 272) = a1[68];
  *(void *)(a2 + 280) = v31;
  uint64_t v32 = a1[71];
  *(void *)(a2 + 288) = a1[70];
  *(void *)(a2 + 296) = v32;
  *(void *)(a2 + 304) = a1[72];
  uint64_t v33 = *(void *)(a1 + 76);
  v28.n128_u64[0] = v33;
  v28.n128_u64[1] = HIDWORD(v33);
  __n128 v34 = v28;
  uint64_t v35 = *(void *)(a1 + 84);
  v28.n128_u64[0] = v35;
  v28.n128_u64[1] = HIDWORD(v35);
  *(__n128 *)(a2 + 312) = v34;
  *(__n128 *)(a2 + 328) = v28;
  v34.n128_u64[0] = *(void *)(a1 + 92);
  v28.n128_u64[0] = v34.n128_u32[0];
  v28.n128_u64[1] = v34.n128_u32[1];
  __n128 result = v28;
  uint64_t v37 = *(void *)(a1 + 100);
  v28.n128_u64[0] = v37;
  v28.n128_u64[1] = HIDWORD(v37);
  *(__n128 *)(a2 + 344) = result;
  *(__n128 *)(a2 + 360) = v28;
  uint64_t v38 = a1[108];
  *(void *)(a2 + 1248) = v13 | 0xFFFFFF800000;
  *(void *)(a2 + 376) = v38;
  return result;
}

__n128 sub_1CBE7B9F4(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = v16;
  uint64_t v26 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v25;
  *(void *)(a2 + 192) = v26;
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = a1[52];
  uint64_t v29 = a1[53];
  uint64_t v30 = v13 | 0x1F800000;
  *(void *)(a2 + 1248) = v13 | 0x1F800000;
  *(void *)(a2 + 216) = v28;
  *(void *)(a2 + 224) = v29;
  unsigned int v31 = *((_DWORD *)a1 + 16);
  if (!v31)
  {
    uint64_t v32 = a1[56];
    uint64_t v30 = v13 | 0x3F800000;
    *(void *)(a2 + 1248) = v13 | 0x3F800000;
    *(void *)(a2 + 232) = v32;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 1)
  {
    uint64_t v33 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x40000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 240) = v33;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 2)
  {
    uint64_t v34 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x80000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 248) = v34;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 3)
  {
    uint64_t v35 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 256) = v35;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 4)
  {
    uint64_t v36 = *((unsigned int *)a1 + 14);
    v30 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 264) = v36;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 5)
  {
    uint64_t v37 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 272) = v37;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 6)
  {
    uint64_t v38 = a1[56];
    v30 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 280) = v38;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 7)
  {
    uint64_t v39 = *((unsigned int *)a1 + 14);
    *(void *)(a2 + 1248) = v30 | 0x1000000000;
    *(void *)(a2 + 288) = v39;
    unsigned int v31 = *((_DWORD *)a1 + 16);
    if (v31 == 7)
    {
      v30 |= 0x3000000000uLL;
      *(void *)(a2 + 296) = a1[60];
    }
    else
    {
      v30 |= 0x1000000000uLL;
    }
  }
  uint64_t v40 = v31;
  uint64_t v41 = *((unsigned int *)a1 + 17);
  *(void *)(a2 + 304) = v40;
  *(void *)(a2 + 312) = v41;
  uint64_t v42 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 320) = a1[72];
  *(void *)(a2 + 328) = v42;
  uint64_t v43 = a1[80];
  uint64_t v44 = a1[84];
  uint64_t v45 = v30 | 0xFC000000000;
  *(void *)(a2 + 1248) = v30 | 0xFC000000000;
  *(void *)(a2 + 336) = v43;
  *(void *)(a2 + 344) = v44;
  unsigned int v46 = *((_DWORD *)a1 + 24);
  if (!v46)
  {
    uint64_t v47 = a1[88];
    uint64_t v45 = v30 | 0x1FC000000000;
    *(void *)(a2 + 1248) = v30 | 0x1FC000000000;
    *(void *)(a2 + 352) = v47;
    unsigned int v46 = *((_DWORD *)a1 + 24);
  }
  if (v46 == 1)
  {
    uint64_t v48 = *((unsigned __int16 *)a1 + 44);
    v45 |= 0x200000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 360) = v48;
    unsigned int v46 = *((_DWORD *)a1 + 24);
  }
  if (v46 == 2)
  {
    uint64_t v49 = *((unsigned __int16 *)a1 + 44);
    v45 |= 0x400000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 368) = v49;
    unsigned int v46 = *((_DWORD *)a1 + 24);
  }
  if (v46 == 3)
  {
    uint64_t v50 = *((unsigned __int16 *)a1 + 44);
    v45 |= 0x800000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 376) = v50;
    unsigned int v46 = *((_DWORD *)a1 + 24);
  }
  if (v46 == 4)
  {
    uint64_t v51 = *((unsigned int *)a1 + 22);
    v45 |= 0x1000000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 384) = v51;
    unsigned int v46 = *((_DWORD *)a1 + 24);
  }
  if (v46 == 5)
  {
    uint64_t v52 = *((unsigned __int16 *)a1 + 44);
    v45 |= 0x2000000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 392) = v52;
    unsigned int v46 = *((_DWORD *)a1 + 24);
  }
  if (v46 == 6)
  {
    uint64_t v53 = a1[88];
    v45 |= 0x4000000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 400) = v53;
    unsigned int v46 = *((_DWORD *)a1 + 24);
  }
  if (v46 == 7)
  {
    uint64_t v54 = *((unsigned int *)a1 + 22);
    *(void *)(a2 + 1248) = v45 | 0x8000000000000;
    *(void *)(a2 + 408) = v54;
    unsigned int v46 = *((_DWORD *)a1 + 24);
    if (v46 == 7)
    {
      v45 |= 0x18000000000000uLL;
      *(void *)(a2 + 416) = a1[92];
      unsigned int v46 = 7;
    }
    else
    {
      v45 |= 0x8000000000000uLL;
    }
  }
  uint64_t v55 = *((unsigned int *)a1 + 25);
  *(void *)(a2 + 424) = v46;
  *(void *)(a2 + 432) = v55;
  uint64_t v56 = *((unsigned int *)a1 + 27);
  *(void *)(a2 + 440) = a1[104];
  *(void *)(a2 + 448) = v56;
  *(void *)(a2 + 456) = a1[112];
  uint64_t v57 = *(void *)(a1 + 116);
  *(void *)&long long v58 = v57;
  *((void *)&v58 + 1) = HIDWORD(v57);
  *(_OWORD *)(a2 + 464) = v58;
  uint64_t v59 = a1[125];
  *(void *)(a2 + 480) = a1[124];
  *(void *)(a2 + 488) = v59;
  uint64_t v60 = a1[126];
  uint64_t v61 = a1[127];
  *(void *)(a2 + 1248) = v45 | 0xFFE0000000000000;
  *(void *)(a2 + 496) = v60;
  *(void *)(a2 + 504) = v61;
  *(void *)(a2 + 512) = a1[128];
  *(void *)(a2 + 520) = a1[129];
  *(void *)(a2 + 528) = a1[130];
  *(void *)(a2 + 536) = a1[131];
  *(void *)(a2 + 544) = a1[132];
  *(void *)(a2 + 552) = *((unsigned int *)a1 + 34);
  uint64_t v62 = *((unsigned __int16 *)a1 + 70);
  if ((v62 & 0x8000u) == 0) {
    uint64_t v62 = (__int16)v62;
  }
  *(void *)(a2 + 560) = v62;
  uint64_t v63 = *((void *)a1 + 18);
  uint64_t v64 = *((void *)a1 + 19);
  v65.n128_u64[0] = v63;
  v65.n128_u64[1] = HIDWORD(v63);
  __n128 v66 = v65;
  v65.n128_u64[0] = v64;
  v65.n128_u64[1] = HIDWORD(v64);
  *(__n128 *)(a2 + 568) = v66;
  *(__n128 *)(a2 + 584) = v65;
  v66.n128_u64[0] = *((void *)a1 + 20);
  uint64_t v67 = *((void *)a1 + 21);
  v65.n128_u64[0] = v66.n128_u32[0];
  v65.n128_u64[1] = v66.n128_u32[1];
  __n128 result = v65;
  v65.n128_u64[0] = v67;
  v65.n128_u64[1] = HIDWORD(v67);
  *(__n128 *)(a2 + 600) = result;
  *(__n128 *)(a2 + 616) = v65;
  *(void *)(a2 + 632) = *((unsigned int *)a1 + 44);
  uint64_t v69 = a1[180];
  *(void *)(a2 + 1256) = 0x1FFFFLL;
  *(void *)(a2 + 640) = v69;
  return result;
}

float sub_1CBE7BF54(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = *(void *)(a1 + 20);
  *(void *)&long long v14 = v13;
  *((void *)&v14 + 1) = HIDWORD(v13);
  *(_OWORD *)(a2 + 96) = v14;
  uint64_t v15 = *(void *)(a1 + 28);
  *(void *)&long long v14 = v15;
  *((void *)&v14 + 1) = HIDWORD(v15);
  *(_OWORD *)(a2 + 112) = v14;
  uint64_t v16 = *((void *)a1 + 6);
  uint64_t v17 = *((void *)a1 + 7);
  *(void *)&long long v14 = v16;
  *((void *)&v14 + 1) = HIDWORD(v16);
  *(_OWORD *)(a2 + 200) = v14;
  *(void *)&long long v14 = v17;
  *((void *)&v14 + 1) = HIDWORD(v17);
  *(_OWORD *)(a2 + 216) = v14;
  uint64_t v18 = *((void *)a1 + 8);
  uint64_t v19 = *((void *)a1 + 9);
  *(void *)&long long v14 = v18;
  *((void *)&v14 + 1) = HIDWORD(v18);
  *(_OWORD *)(a2 + 232) = v14;
  uint64_t v20 = a1[40];
  *(void *)(a2 + 128) = *((unsigned int *)a1 + 9);
  *(void *)(a2 + 136) = v20;
  uint64_t v21 = a1[42];
  *(void *)(a2 + 144) = a1[41];
  *(void *)(a2 + 152) = v21;
  uint64_t v22 = a1[44];
  *(void *)(a2 + 160) = a1[43];
  *(void *)(a2 + 168) = v22;
  uint64_t v23 = a1[46];
  *(void *)(a2 + 176) = a1[45];
  *(void *)(a2 + 184) = v23;
  *(void *)(a2 + 192) = a1[47];
  *(void *)&long long v14 = v19;
  *((void *)&v14 + 1) = HIDWORD(v19);
  float result = *(float *)&v19;
  *(_OWORD *)(a2 + 248) = v14;
  uint64_t v25 = a1[80];
  *(void *)(a2 + 1248) = v3 | 0x3FFFFFE00;
  *(void *)(a2 + 264) = v25;
  return result;
}

float sub_1CBE7C108(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = v16;
  uint64_t v26 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v25;
  *(void *)(a2 + 192) = v26;
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = a1[53];
  *(void *)(a2 + 216) = a1[52];
  *(void *)(a2 + 224) = v28;
  uint64_t v29 = a1[56];
  uint64_t v30 = a1[57];
  uint64_t v31 = v13 | 0x7F800000;
  *(void *)(a2 + 1248) = v13 | 0x7F800000;
  *(void *)(a2 + 232) = v29;
  *(void *)(a2 + 240) = v30;
  unsigned int v32 = *((_DWORD *)a1 + 17);
  if (!v32)
  {
    uint64_t v33 = a1[60];
    uint64_t v31 = v13 | 0xFF800000;
    *(void *)(a2 + 1248) = v13 | 0xFF800000;
    *(void *)(a2 + 248) = v33;
    unsigned int v32 = *((_DWORD *)a1 + 17);
  }
  if (v32 == 1)
  {
    uint64_t v34 = *((unsigned __int16 *)a1 + 30);
    v31 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v31;
    *(void *)(a2 + 256) = v34;
    unsigned int v32 = *((_DWORD *)a1 + 17);
  }
  if (v32 == 2)
  {
    uint64_t v35 = *((unsigned __int16 *)a1 + 30);
    v31 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v31;
    *(void *)(a2 + 264) = v35;
    unsigned int v32 = *((_DWORD *)a1 + 17);
  }
  if (v32 == 3)
  {
    uint64_t v36 = *((unsigned __int16 *)a1 + 30);
    v31 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v31;
    *(void *)(a2 + 272) = v36;
    unsigned int v32 = *((_DWORD *)a1 + 17);
  }
  if (v32 == 4)
  {
    uint64_t v37 = *((unsigned int *)a1 + 15);
    v31 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v31;
    *(void *)(a2 + 280) = v37;
    unsigned int v32 = *((_DWORD *)a1 + 17);
  }
  if (v32 == 5)
  {
    uint64_t v38 = *((unsigned __int16 *)a1 + 30);
    v31 |= 0x1000000000uLL;
    *(void *)(a2 + 1248) = v31;
    *(void *)(a2 + 288) = v38;
    unsigned int v32 = *((_DWORD *)a1 + 17);
  }
  if (v32 == 6)
  {
    uint64_t v39 = a1[60];
    v31 |= 0x2000000000uLL;
    *(void *)(a2 + 1248) = v31;
    *(void *)(a2 + 296) = v39;
    unsigned int v32 = *((_DWORD *)a1 + 17);
  }
  if (v32 == 7)
  {
    uint64_t v40 = *((unsigned int *)a1 + 15);
    *(void *)(a2 + 1248) = v31 | 0x4000000000;
    *(void *)(a2 + 304) = v40;
    unsigned int v32 = *((_DWORD *)a1 + 17);
    if (v32 == 7)
    {
      v31 |= 0xC000000000uLL;
      *(void *)(a2 + 312) = a1[64];
    }
    else
    {
      v31 |= 0x4000000000uLL;
    }
  }
  uint64_t v41 = *((unsigned int *)a1 + 18);
  *(void *)(a2 + 320) = v32;
  *(void *)(a2 + 328) = v41;
  uint64_t v42 = *((unsigned int *)a1 + 20);
  *(void *)(a2 + 336) = a1[76];
  *(void *)(a2 + 344) = v42;
  *(void *)(a2 + 352) = a1[84];
  uint64_t v43 = *((void *)a1 + 11);
  *(void *)&long long v44 = v43;
  *((void *)&v44 + 1) = HIDWORD(v43);
  *(_OWORD *)(a2 + 360) = v44;
  uint64_t v45 = a1[97];
  *(void *)(a2 + 376) = a1[96];
  *(void *)(a2 + 384) = v45;
  uint64_t v46 = a1[99];
  *(void *)(a2 + 392) = a1[98];
  *(void *)(a2 + 400) = v46;
  uint64_t v47 = a1[101];
  *(void *)(a2 + 408) = a1[100];
  *(void *)(a2 + 416) = v47;
  uint64_t v48 = a1[103];
  *(void *)(a2 + 424) = a1[102];
  *(void *)(a2 + 432) = v48;
  *(void *)(a2 + 440) = a1[104];
  uint64_t v49 = *(void *)(a1 + 108);
  *(void *)&long long v44 = v49;
  *((void *)&v44 + 1) = HIDWORD(v49);
  long long v50 = v44;
  uint64_t v51 = *(void *)(a1 + 116);
  *(void *)&long long v44 = v51;
  *((void *)&v44 + 1) = HIDWORD(v51);
  *(_OWORD *)(a2 + 448) = v50;
  *(_OWORD *)(a2 + 464) = v44;
  *(void *)&long long v50 = *(void *)(a1 + 124);
  *(void *)&long long v44 = v50;
  *((void *)&v44 + 1) = DWORD1(v50);
  long long v52 = v44;
  *(void *)(a2 + 1248) = v31 | 0xFFFFFF0000000000;
  uint64_t v53 = *(void *)(a1 + 132);
  *(void *)&long long v44 = v53;
  *((void *)&v44 + 1) = HIDWORD(v53);
  *(_OWORD *)(a2 + 480) = v52;
  *(_OWORD *)(a2 + 496) = v44;
  *(void *)(a2 + 512) = *((unsigned int *)a1 + 35);
  *(void *)(a2 + 520) = a1[144];
  *(void *)(a2 + 1256) = 15;
  uint64_t v54 = *(void *)(a1 + 148);
  *(void *)&long long v44 = v54;
  *((void *)&v44 + 1) = HIDWORD(v54);
  *(_OWORD *)(a2 + 528) = v44;
  return *(float *)&v54;
}

__n128 sub_1CBE7C534(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = v16;
  uint64_t v26 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v25;
  *(void *)(a2 + 192) = v26;
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = a1[52];
  uint64_t v29 = a1[53];
  uint64_t v30 = v13 | 0x1F800000;
  *(void *)(a2 + 1248) = v13 | 0x1F800000;
  *(void *)(a2 + 216) = v28;
  *(void *)(a2 + 224) = v29;
  unsigned int v31 = *((_DWORD *)a1 + 16);
  if (!v31)
  {
    uint64_t v32 = a1[56];
    uint64_t v30 = v13 | 0x3F800000;
    *(void *)(a2 + 1248) = v13 | 0x3F800000;
    *(void *)(a2 + 232) = v32;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 1)
  {
    uint64_t v33 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x40000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 240) = v33;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 2)
  {
    uint64_t v34 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x80000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 248) = v34;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 3)
  {
    uint64_t v35 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 256) = v35;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 4)
  {
    uint64_t v36 = *((unsigned int *)a1 + 14);
    v30 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 264) = v36;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 5)
  {
    uint64_t v37 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 272) = v37;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 6)
  {
    uint64_t v38 = a1[56];
    v30 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 280) = v38;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 7)
  {
    uint64_t v39 = *((unsigned int *)a1 + 14);
    *(void *)(a2 + 1248) = v30 | 0x1000000000;
    *(void *)(a2 + 288) = v39;
    unsigned int v31 = *((_DWORD *)a1 + 16);
    if (v31 == 7)
    {
      v30 |= 0x3000000000uLL;
      *(void *)(a2 + 296) = a1[60];
    }
    else
    {
      v30 |= 0x1000000000uLL;
    }
  }
  uint64_t v40 = v31;
  uint64_t v41 = *((unsigned int *)a1 + 17);
  *(void *)(a2 + 304) = v40;
  *(void *)(a2 + 312) = v41;
  uint64_t v42 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 320) = a1[72];
  *(void *)(a2 + 328) = v42;
  uint64_t v43 = a1[80];
  uint64_t v44 = a1[84];
  uint64_t v45 = v30 | 0xFC000000000;
  *(void *)(a2 + 1248) = v30 | 0xFC000000000;
  *(void *)(a2 + 336) = v43;
  *(void *)(a2 + 344) = v44;
  unsigned int v46 = *((_DWORD *)a1 + 24);
  if (!v46)
  {
    uint64_t v47 = a1[88];
    uint64_t v45 = v30 | 0x1FC000000000;
    *(void *)(a2 + 1248) = v30 | 0x1FC000000000;
    *(void *)(a2 + 352) = v47;
    unsigned int v46 = *((_DWORD *)a1 + 24);
  }
  if (v46 == 1)
  {
    uint64_t v48 = *((unsigned __int16 *)a1 + 44);
    v45 |= 0x200000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 360) = v48;
    unsigned int v46 = *((_DWORD *)a1 + 24);
  }
  if (v46 == 2)
  {
    uint64_t v49 = *((unsigned __int16 *)a1 + 44);
    v45 |= 0x400000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 368) = v49;
    unsigned int v46 = *((_DWORD *)a1 + 24);
  }
  if (v46 == 3)
  {
    uint64_t v50 = *((unsigned __int16 *)a1 + 44);
    v45 |= 0x800000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 376) = v50;
    unsigned int v46 = *((_DWORD *)a1 + 24);
  }
  if (v46 == 4)
  {
    uint64_t v51 = *((unsigned int *)a1 + 22);
    v45 |= 0x1000000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 384) = v51;
    unsigned int v46 = *((_DWORD *)a1 + 24);
  }
  if (v46 == 5)
  {
    uint64_t v52 = *((unsigned __int16 *)a1 + 44);
    v45 |= 0x2000000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 392) = v52;
    unsigned int v46 = *((_DWORD *)a1 + 24);
  }
  if (v46 == 6)
  {
    uint64_t v53 = a1[88];
    v45 |= 0x4000000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 400) = v53;
    unsigned int v46 = *((_DWORD *)a1 + 24);
  }
  if (v46 == 7)
  {
    uint64_t v54 = *((unsigned int *)a1 + 22);
    *(void *)(a2 + 1248) = v45 | 0x8000000000000;
    *(void *)(a2 + 408) = v54;
    unsigned int v46 = *((_DWORD *)a1 + 24);
    if (v46 == 7)
    {
      v45 |= 0x18000000000000uLL;
      *(void *)(a2 + 416) = a1[92];
      unsigned int v46 = 7;
    }
    else
    {
      v45 |= 0x8000000000000uLL;
    }
  }
  uint64_t v55 = *((unsigned int *)a1 + 25);
  *(void *)(a2 + 424) = v46;
  *(void *)(a2 + 432) = v55;
  uint64_t v56 = *((unsigned int *)a1 + 27);
  *(void *)(a2 + 440) = a1[104];
  *(void *)(a2 + 448) = v56;
  *(void *)(a2 + 456) = a1[112];
  uint64_t v57 = *(void *)(a1 + 116);
  *(void *)&long long v58 = v57;
  *((void *)&v58 + 1) = HIDWORD(v57);
  *(_OWORD *)(a2 + 464) = v58;
  uint64_t v59 = a1[125];
  *(void *)(a2 + 480) = a1[124];
  *(void *)(a2 + 488) = v59;
  uint64_t v60 = a1[126];
  uint64_t v61 = a1[127];
  *(void *)(a2 + 1248) = v45 | 0xFFE0000000000000;
  *(void *)(a2 + 496) = v60;
  *(void *)(a2 + 504) = v61;
  *(void *)(a2 + 512) = a1[128];
  *(void *)(a2 + 520) = a1[129];
  *(void *)(a2 + 528) = a1[130];
  *(void *)(a2 + 536) = a1[131];
  *(void *)(a2 + 544) = a1[132];
  *(void *)(a2 + 552) = *((unsigned int *)a1 + 34);
  uint64_t v62 = *((unsigned __int16 *)a1 + 70);
  if ((v62 & 0x8000u) == 0) {
    uint64_t v62 = (__int16)v62;
  }
  *(void *)(a2 + 560) = v62;
  uint64_t v63 = *((void *)a1 + 18);
  uint64_t v64 = *((void *)a1 + 19);
  v65.n128_u64[0] = v63;
  v65.n128_u64[1] = HIDWORD(v63);
  __n128 v66 = v65;
  v65.n128_u64[0] = v64;
  v65.n128_u64[1] = HIDWORD(v64);
  *(__n128 *)(a2 + 568) = v66;
  *(__n128 *)(a2 + 584) = v65;
  v66.n128_u64[0] = *((void *)a1 + 20);
  uint64_t v67 = *((void *)a1 + 21);
  v65.n128_u64[0] = v66.n128_u32[0];
  v65.n128_u64[1] = v66.n128_u32[1];
  __n128 result = v65;
  v65.n128_u64[0] = v67;
  v65.n128_u64[1] = HIDWORD(v67);
  *(__n128 *)(a2 + 600) = result;
  *(__n128 *)(a2 + 616) = v65;
  *(void *)(a2 + 632) = a1[176];
  uint64_t v69 = a1[177];
  *(void *)(a2 + 1256) = 0x1FFFFLL;
  *(void *)(a2 + 640) = v69;
  return result;
}

__n128 sub_1CBE7CA94(uint64_t a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  *(void *)a2 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  v3.n128_u64[0] = v2;
  v3.n128_u64[1] = HIDWORD(v2);
  *(__n128 *)(a2 + 8) = v3;
  uint64_t v4 = *(unsigned __int8 *)(a1 + 20);
  *(void *)(a2 + 24) = *(unsigned int *)(a1 + 16);
  *(void *)(a2 + 32) = v4;
  uint64_t v5 = *(unsigned __int8 *)(a1 + 22);
  *(void *)(a2 + 40) = *(unsigned __int8 *)(a1 + 21);
  *(void *)(a2 + 48) = v5;
  uint64_t v6 = *(unsigned __int8 *)(a1 + 24);
  *(void *)(a2 + 56) = *(unsigned __int8 *)(a1 + 23);
  *(void *)(a2 + 64) = v6;
  uint64_t v7 = *(unsigned __int8 *)(a1 + 26);
  *(void *)(a2 + 72) = *(unsigned __int8 *)(a1 + 25);
  *(void *)(a2 + 80) = v7;
  *(void *)(a2 + 88) = *(unsigned __int8 *)(a1 + 27);
  uint64_t v8 = *(void *)(a1 + 28);
  v3.n128_u64[0] = v8;
  v3.n128_u64[1] = HIDWORD(v8);
  __n128 v9 = v3;
  uint64_t v10 = *(void *)(a1 + 36);
  v3.n128_u64[0] = v10;
  v3.n128_u64[1] = HIDWORD(v10);
  *(__n128 *)(a2 + 96) = v9;
  *(__n128 *)(a2 + 112) = v3;
  v9.n128_u64[0] = *(void *)(a1 + 44);
  v3.n128_u64[0] = v9.n128_u32[0];
  v3.n128_u64[1] = v9.n128_u32[1];
  __n128 result = v3;
  uint64_t v12 = *(void *)(a1 + 52);
  v3.n128_u64[0] = v12;
  v3.n128_u64[1] = HIDWORD(v12);
  *(__n128 *)(a2 + 128) = result;
  *(__n128 *)(a2 + 144) = v3;
  uint64_t v13 = *(unsigned __int8 *)(a1 + 64);
  *(void *)(a2 + 160) = *(unsigned int *)(a1 + 60);
  *(void *)(a2 + 168) = v13;
  uint64_t v14 = *(unsigned int *)(a1 + 68);
  *(void *)(a2 + 1248) = 0x7FFFFFLL;
  *(void *)(a2 + 176) = v14;
  return result;
}

__n128 sub_1CBE7CB34(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = v16;
  uint64_t v26 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v25;
  *(void *)(a2 + 192) = v26;
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = a1[52];
  uint64_t v29 = a1[53];
  uint64_t v30 = v13 | 0x1F800000;
  *(void *)(a2 + 1248) = v13 | 0x1F800000;
  *(void *)(a2 + 216) = v28;
  *(void *)(a2 + 224) = v29;
  unsigned int v31 = *((_DWORD *)a1 + 16);
  if (!v31)
  {
    uint64_t v32 = a1[56];
    uint64_t v30 = v13 | 0x3F800000;
    *(void *)(a2 + 1248) = v13 | 0x3F800000;
    *(void *)(a2 + 232) = v32;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 1)
  {
    uint64_t v33 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x40000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 240) = v33;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 2)
  {
    uint64_t v34 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x80000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 248) = v34;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 3)
  {
    uint64_t v35 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 256) = v35;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 4)
  {
    uint64_t v36 = *((unsigned int *)a1 + 14);
    v30 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 264) = v36;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 5)
  {
    uint64_t v37 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 272) = v37;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 6)
  {
    uint64_t v38 = a1[56];
    v30 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 280) = v38;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 7)
  {
    uint64_t v39 = *((unsigned int *)a1 + 14);
    *(void *)(a2 + 1248) = v30 | 0x1000000000;
    *(void *)(a2 + 288) = v39;
    unsigned int v31 = *((_DWORD *)a1 + 16);
    if (v31 == 7)
    {
      v30 |= 0x3000000000uLL;
      *(void *)(a2 + 296) = a1[60];
    }
    else
    {
      v30 |= 0x1000000000uLL;
    }
  }
  uint64_t v40 = v31;
  uint64_t v41 = *((unsigned int *)a1 + 17);
  *(void *)(a2 + 304) = v40;
  *(void *)(a2 + 312) = v41;
  uint64_t v42 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 320) = a1[72];
  *(void *)(a2 + 328) = v42;
  uint64_t v43 = a1[80];
  uint64_t v44 = a1[84];
  uint64_t v45 = v30 | 0xFC000000000;
  *(void *)(a2 + 1248) = v30 | 0xFC000000000;
  *(void *)(a2 + 336) = v43;
  *(void *)(a2 + 344) = v44;
  unsigned int v46 = *((_DWORD *)a1 + 24);
  if (!v46)
  {
    uint64_t v47 = a1[88];
    uint64_t v45 = v30 | 0x1FC000000000;
    *(void *)(a2 + 1248) = v30 | 0x1FC000000000;
    *(void *)(a2 + 352) = v47;
    unsigned int v46 = *((_DWORD *)a1 + 24);
  }
  if (v46 == 1)
  {
    uint64_t v48 = *((unsigned __int16 *)a1 + 44);
    v45 |= 0x200000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 360) = v48;
    unsigned int v46 = *((_DWORD *)a1 + 24);
  }
  if (v46 == 2)
  {
    uint64_t v49 = *((unsigned __int16 *)a1 + 44);
    v45 |= 0x400000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 368) = v49;
    unsigned int v46 = *((_DWORD *)a1 + 24);
  }
  if (v46 == 3)
  {
    uint64_t v50 = *((unsigned __int16 *)a1 + 44);
    v45 |= 0x800000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 376) = v50;
    unsigned int v46 = *((_DWORD *)a1 + 24);
  }
  if (v46 == 4)
  {
    uint64_t v51 = *((unsigned int *)a1 + 22);
    v45 |= 0x1000000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 384) = v51;
    unsigned int v46 = *((_DWORD *)a1 + 24);
  }
  if (v46 == 5)
  {
    uint64_t v52 = *((unsigned __int16 *)a1 + 44);
    v45 |= 0x2000000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 392) = v52;
    unsigned int v46 = *((_DWORD *)a1 + 24);
  }
  if (v46 == 6)
  {
    uint64_t v53 = a1[88];
    v45 |= 0x4000000000000uLL;
    *(void *)(a2 + 1248) = v45;
    *(void *)(a2 + 400) = v53;
    unsigned int v46 = *((_DWORD *)a1 + 24);
  }
  if (v46 == 7)
  {
    uint64_t v54 = *((unsigned int *)a1 + 22);
    *(void *)(a2 + 1248) = v45 | 0x8000000000000;
    *(void *)(a2 + 408) = v54;
    unsigned int v46 = *((_DWORD *)a1 + 24);
    if (v46 == 7)
    {
      v45 |= 0x18000000000000uLL;
      *(void *)(a2 + 416) = a1[92];
      unsigned int v46 = 7;
    }
    else
    {
      v45 |= 0x8000000000000uLL;
    }
  }
  uint64_t v55 = *((unsigned int *)a1 + 25);
  *(void *)(a2 + 424) = v46;
  *(void *)(a2 + 432) = v55;
  uint64_t v56 = *((unsigned int *)a1 + 27);
  *(void *)(a2 + 440) = a1[104];
  *(void *)(a2 + 448) = v56;
  *(void *)(a2 + 456) = a1[112];
  uint64_t v57 = *(void *)(a1 + 116);
  *(void *)&long long v58 = v57;
  *((void *)&v58 + 1) = HIDWORD(v57);
  *(_OWORD *)(a2 + 464) = v58;
  uint64_t v59 = a1[125];
  *(void *)(a2 + 480) = a1[124];
  *(void *)(a2 + 488) = v59;
  uint64_t v60 = a1[126];
  uint64_t v61 = a1[127];
  *(void *)(a2 + 1248) = v45 | 0xFFE0000000000000;
  *(void *)(a2 + 496) = v60;
  *(void *)(a2 + 504) = v61;
  *(void *)(a2 + 512) = a1[128];
  *(void *)(a2 + 520) = a1[129];
  *(void *)(a2 + 528) = a1[130];
  *(void *)(a2 + 536) = a1[131];
  *(void *)(a2 + 544) = a1[132];
  *(void *)(a2 + 552) = *((unsigned int *)a1 + 34);
  uint64_t v62 = *((unsigned __int16 *)a1 + 70);
  if ((v62 & 0x8000u) == 0) {
    uint64_t v62 = (__int16)v62;
  }
  *(void *)(a2 + 560) = v62;
  uint64_t v63 = *((void *)a1 + 18);
  uint64_t v64 = *((void *)a1 + 19);
  v65.n128_u64[0] = v63;
  v65.n128_u64[1] = HIDWORD(v63);
  __n128 v66 = v65;
  v65.n128_u64[0] = v64;
  v65.n128_u64[1] = HIDWORD(v64);
  *(__n128 *)(a2 + 568) = v66;
  *(__n128 *)(a2 + 584) = v65;
  v66.n128_u64[0] = *((void *)a1 + 20);
  uint64_t v67 = *((void *)a1 + 21);
  v65.n128_u64[0] = v66.n128_u32[0];
  v65.n128_u64[1] = v66.n128_u32[1];
  __n128 result = v65;
  v65.n128_u64[0] = v67;
  v65.n128_u64[1] = HIDWORD(v67);
  *(__n128 *)(a2 + 600) = result;
  *(__n128 *)(a2 + 616) = v65;
  *(void *)(a2 + 632) = a1[176];
  uint64_t v69 = a1[177];
  *(void *)(a2 + 1256) = 0x1FFFFLL;
  *(void *)(a2 + 640) = v69;
  return result;
}

__n128 sub_1CBE7D094(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = v16;
  uint64_t v26 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v25;
  *(void *)(a2 + 192) = v26;
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = a1[52];
  uint64_t v29 = a1[53];
  uint64_t v30 = v13 | 0x1F800000;
  *(void *)(a2 + 1248) = v13 | 0x1F800000;
  *(void *)(a2 + 216) = v28;
  *(void *)(a2 + 224) = v29;
  unsigned int v31 = *((_DWORD *)a1 + 16);
  if (!v31)
  {
    uint64_t v32 = a1[56];
    uint64_t v30 = v13 | 0x3F800000;
    *(void *)(a2 + 1248) = v13 | 0x3F800000;
    *(void *)(a2 + 232) = v32;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 1)
  {
    uint64_t v33 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x40000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 240) = v33;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 2)
  {
    uint64_t v34 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x80000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 248) = v34;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 3)
  {
    uint64_t v35 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 256) = v35;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 4)
  {
    uint64_t v36 = *((unsigned int *)a1 + 14);
    v30 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 264) = v36;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 5)
  {
    uint64_t v37 = *((unsigned __int16 *)a1 + 28);
    v30 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 272) = v37;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 6)
  {
    uint64_t v38 = a1[56];
    v30 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v30;
    *(void *)(a2 + 280) = v38;
    unsigned int v31 = *((_DWORD *)a1 + 16);
  }
  if (v31 == 7)
  {
    uint64_t v39 = *((unsigned int *)a1 + 14);
    *(void *)(a2 + 1248) = v30 | 0x1000000000;
    *(void *)(a2 + 288) = v39;
    unsigned int v31 = *((_DWORD *)a1 + 16);
    if (v31 == 7)
    {
      v30 |= 0x3000000000uLL;
      *(void *)(a2 + 296) = a1[60];
      unsigned int v31 = 7;
    }
    else
    {
      v30 |= 0x1000000000uLL;
    }
  }
  uint64_t v40 = *((unsigned int *)a1 + 17);
  *(void *)(a2 + 304) = v31;
  *(void *)(a2 + 312) = v40;
  uint64_t v41 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 320) = a1[72];
  *(void *)(a2 + 328) = v41;
  *(void *)(a2 + 336) = a1[80];
  uint64_t v42 = *(void *)(a1 + 84);
  *(void *)&long long v43 = v42;
  *((void *)&v43 + 1) = HIDWORD(v42);
  *(_OWORD *)(a2 + 344) = v43;
  uint64_t v44 = a1[93];
  *(void *)(a2 + 360) = a1[92];
  *(void *)(a2 + 368) = v44;
  uint64_t v45 = a1[95];
  *(void *)(a2 + 376) = a1[94];
  *(void *)(a2 + 384) = v45;
  uint64_t v46 = a1[97];
  *(void *)(a2 + 392) = a1[96];
  *(void *)(a2 + 400) = v46;
  uint64_t v47 = a1[99];
  *(void *)(a2 + 408) = a1[98];
  *(void *)(a2 + 416) = v47;
  uint64_t v48 = a1[101];
  *(void *)(a2 + 424) = a1[100];
  *(void *)(a2 + 432) = v48;
  uint64_t v49 = *((unsigned __int16 *)a1 + 54);
  if ((v49 & 0x8000u) == 0) {
    uint64_t v49 = (__int16)v49;
  }
  *(void *)(a2 + 440) = *((unsigned int *)a1 + 26);
  *(void *)(a2 + 448) = v49;
  uint64_t v50 = *((void *)a1 + 14);
  uint64_t v51 = *((void *)a1 + 15);
  v52.n128_u64[0] = v50;
  v52.n128_u64[1] = HIDWORD(v50);
  __n128 v53 = v52;
  v52.n128_u64[0] = v51;
  v52.n128_u64[1] = HIDWORD(v51);
  *(__n128 *)(a2 + 456) = v53;
  *(__n128 *)(a2 + 472) = v52;
  v53.n128_u64[0] = *((void *)a1 + 16);
  uint64_t v54 = *((void *)a1 + 17);
  v52.n128_u64[0] = v53.n128_u32[0];
  v52.n128_u64[1] = v53.n128_u32[1];
  __n128 result = v52;
  *(void *)(a2 + 1248) = v30 | 0xFFFFFFC000000000;
  v52.n128_u64[0] = v54;
  v52.n128_u64[1] = HIDWORD(v54);
  *(__n128 *)(a2 + 488) = result;
  *(__n128 *)(a2 + 504) = v52;
  *(void *)(a2 + 520) = a1[144];
  uint64_t v56 = a1[145];
  *(void *)(a2 + 1256) = 7;
  *(void *)(a2 + 528) = v56;
  return result;
}

__n128 sub_1CBE7D4C4(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = *(void *)(a1 + 20);
  *(void *)&long long v14 = v13;
  *((void *)&v14 + 1) = HIDWORD(v13);
  v15.i64[0] = *((__int16 *)a1 + 14);
  v15.i64[1] = *((__int16 *)a1 + 15);
  int8x16_t v16 = (int8x16_t)vcltzq_s64(v15);
  *(_OWORD *)(a2 + 96) = v14;
  *(int8x16_t *)(a2 + 112) = vorrq_s8(vandq_s8(vandq_s8((int8x16_t)v15, (int8x16_t)vdupq_n_s64(0x7FFuLL)), v16), vbicq_s8((int8x16_t)v15, v16));
  uint64_t v17 = *((void *)a1 + 4);
  *(void *)&long long v14 = v17;
  *((void *)&v14 + 1) = HIDWORD(v17);
  *(_OWORD *)(a2 + 128) = v14;
  uint64_t v18 = a1[41];
  *(void *)(a2 + 144) = a1[40];
  *(void *)(a2 + 152) = v18;
  uint64_t v19 = a1[43];
  *(void *)(a2 + 160) = a1[42];
  *(void *)(a2 + 168) = v19;
  uint64_t v20 = a1[45];
  *(void *)(a2 + 176) = a1[44];
  *(void *)(a2 + 184) = v20;
  uint64_t v21 = a1[47];
  *(void *)(a2 + 192) = a1[46];
  *(void *)(a2 + 200) = v21;
  uint64_t v22 = a1[48];
  uint64_t v23 = v3 | 0x7FFFE00;
  *(void *)(a2 + 1248) = v3 | 0x7FFFE00;
  *(void *)(a2 + 208) = v22;
  unsigned int v24 = *((_DWORD *)a1 + 15);
  if (!v24)
  {
    uint64_t v25 = a1[52];
    uint64_t v23 = v3 | 0xFFFFE00;
    *(void *)(a2 + 1248) = v3 | 0xFFFFE00;
    *(void *)(a2 + 216) = v25;
    unsigned int v24 = *((_DWORD *)a1 + 15);
  }
  if (v24 == 1)
  {
    uint64_t v26 = *((unsigned __int16 *)a1 + 26);
    v23 |= 0x10000000uLL;
    *(void *)(a2 + 1248) = v23;
    *(void *)(a2 + 224) = v26;
    unsigned int v24 = *((_DWORD *)a1 + 15);
  }
  if (v24 == 2)
  {
    uint64_t v27 = *((unsigned __int16 *)a1 + 26);
    v23 |= 0x20000000uLL;
    *(void *)(a2 + 1248) = v23;
    *(void *)(a2 + 232) = v27;
    unsigned int v24 = *((_DWORD *)a1 + 15);
  }
  if (v24 == 3)
  {
    uint64_t v28 = *((unsigned __int16 *)a1 + 26);
    v23 |= 0x40000000uLL;
    *(void *)(a2 + 1248) = v23;
    *(void *)(a2 + 240) = v28;
    unsigned int v24 = *((_DWORD *)a1 + 15);
  }
  if (v24 == 4)
  {
    uint64_t v29 = *((unsigned int *)a1 + 13);
    v23 |= 0x80000000uLL;
    *(void *)(a2 + 1248) = v23;
    *(void *)(a2 + 248) = v29;
    unsigned int v24 = *((_DWORD *)a1 + 15);
  }
  if (v24 == 5)
  {
    uint64_t v30 = *((unsigned __int16 *)a1 + 26);
    v23 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v23;
    *(void *)(a2 + 256) = v30;
    unsigned int v24 = *((_DWORD *)a1 + 15);
  }
  if (v24 == 6)
  {
    uint64_t v31 = a1[52];
    v23 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v23;
    *(void *)(a2 + 264) = v31;
    unsigned int v24 = *((_DWORD *)a1 + 15);
  }
  if (v24 == 7)
  {
    uint64_t v32 = *((unsigned int *)a1 + 13);
    *(void *)(a2 + 1248) = v23 | 0x400000000;
    *(void *)(a2 + 272) = v32;
    unsigned int v24 = *((_DWORD *)a1 + 15);
    if (v24 == 7)
    {
      v23 |= 0xC00000000uLL;
      *(void *)(a2 + 280) = a1[56];
    }
    else
    {
      v23 |= 0x400000000uLL;
    }
  }
  uint64_t v33 = v24;
  uint64_t v34 = *((unsigned int *)a1 + 16);
  *(void *)(a2 + 288) = v33;
  *(void *)(a2 + 296) = v34;
  uint64_t v35 = *((unsigned int *)a1 + 18);
  *(void *)(a2 + 304) = a1[68];
  *(void *)(a2 + 312) = v35;
  uint64_t v36 = a1[76];
  uint64_t v37 = v23 | 0x1F000000000;
  *(void *)(a2 + 1248) = v23 | 0x1F000000000;
  *(void *)(a2 + 320) = v36;
  unsigned int v38 = *((_DWORD *)a1 + 22);
  if (!v38)
  {
    uint64_t v39 = a1[80];
    uint64_t v37 = v23 | 0x3F000000000;
    *(void *)(a2 + 1248) = v23 | 0x3F000000000;
    *(void *)(a2 + 328) = v39;
    unsigned int v38 = *((_DWORD *)a1 + 22);
  }
  if (v38 == 1)
  {
    uint64_t v40 = *((unsigned __int16 *)a1 + 40);
    v37 |= 0x40000000000uLL;
    *(void *)(a2 + 1248) = v37;
    *(void *)(a2 + 336) = v40;
    unsigned int v38 = *((_DWORD *)a1 + 22);
  }
  if (v38 == 2)
  {
    uint64_t v41 = *((unsigned __int16 *)a1 + 40);
    v37 |= 0x80000000000uLL;
    *(void *)(a2 + 1248) = v37;
    *(void *)(a2 + 344) = v41;
    unsigned int v38 = *((_DWORD *)a1 + 22);
  }
  if (v38 == 3)
  {
    uint64_t v42 = *((unsigned __int16 *)a1 + 40);
    v37 |= 0x100000000000uLL;
    *(void *)(a2 + 1248) = v37;
    *(void *)(a2 + 352) = v42;
    unsigned int v38 = *((_DWORD *)a1 + 22);
  }
  if (v38 == 4)
  {
    uint64_t v43 = *((unsigned int *)a1 + 20);
    v37 |= 0x200000000000uLL;
    *(void *)(a2 + 1248) = v37;
    *(void *)(a2 + 360) = v43;
    unsigned int v38 = *((_DWORD *)a1 + 22);
  }
  if (v38 == 5)
  {
    uint64_t v44 = *((unsigned __int16 *)a1 + 40);
    v37 |= 0x400000000000uLL;
    *(void *)(a2 + 1248) = v37;
    *(void *)(a2 + 368) = v44;
    unsigned int v38 = *((_DWORD *)a1 + 22);
  }
  if (v38 == 6)
  {
    uint64_t v45 = a1[80];
    v37 |= 0x800000000000uLL;
    *(void *)(a2 + 1248) = v37;
    *(void *)(a2 + 376) = v45;
    unsigned int v38 = *((_DWORD *)a1 + 22);
  }
  if (v38 == 7)
  {
    uint64_t v46 = *((unsigned int *)a1 + 20);
    *(void *)(a2 + 1248) = v37 | 0x1000000000000;
    *(void *)(a2 + 384) = v46;
    unsigned int v38 = *((_DWORD *)a1 + 22);
    if (v38 == 7)
    {
      v37 |= 0x3000000000000uLL;
      *(void *)(a2 + 392) = a1[84];
    }
    else
    {
      v37 |= 0x1000000000000uLL;
    }
  }
  uint64_t v47 = v38;
  uint64_t v48 = *((unsigned int *)a1 + 23);
  *(void *)(a2 + 400) = v47;
  *(void *)(a2 + 408) = v48;
  uint64_t v49 = *((unsigned int *)a1 + 25);
  *(void *)(a2 + 416) = a1[96];
  *(void *)(a2 + 424) = v49;
  uint64_t v50 = a1[104];
  uint64_t v51 = v37 | 0x7C000000000000;
  *(void *)(a2 + 1248) = v37 | 0x7C000000000000;
  *(void *)(a2 + 432) = v50;
  unsigned int v52 = *((_DWORD *)a1 + 29);
  if (!v52)
  {
    uint64_t v53 = a1[108];
    uint64_t v51 = v37 | 0xFC000000000000;
    *(void *)(a2 + 1248) = v37 | 0xFC000000000000;
    *(void *)(a2 + 440) = v53;
    unsigned int v52 = *((_DWORD *)a1 + 29);
  }
  if (v52 == 1)
  {
    uint64_t v54 = *((unsigned __int16 *)a1 + 54);
    v51 |= 0x100000000000000uLL;
    *(void *)(a2 + 1248) = v51;
    *(void *)(a2 + 448) = v54;
    unsigned int v52 = *((_DWORD *)a1 + 29);
  }
  if (v52 == 2)
  {
    uint64_t v55 = *((unsigned __int16 *)a1 + 54);
    v51 |= 0x200000000000000uLL;
    *(void *)(a2 + 1248) = v51;
    *(void *)(a2 + 456) = v55;
    unsigned int v52 = *((_DWORD *)a1 + 29);
  }
  if (v52 == 3)
  {
    uint64_t v56 = *((unsigned __int16 *)a1 + 54);
    v51 |= 0x400000000000000uLL;
    *(void *)(a2 + 1248) = v51;
    *(void *)(a2 + 464) = v56;
    unsigned int v52 = *((_DWORD *)a1 + 29);
  }
  if (v52 == 4)
  {
    uint64_t v57 = *((unsigned int *)a1 + 27);
    v51 |= 0x800000000000000uLL;
    *(void *)(a2 + 1248) = v51;
    *(void *)(a2 + 472) = v57;
    unsigned int v52 = *((_DWORD *)a1 + 29);
  }
  if (v52 == 5)
  {
    uint64_t v58 = *((unsigned __int16 *)a1 + 54);
    v51 |= 0x1000000000000000uLL;
    *(void *)(a2 + 1248) = v51;
    *(void *)(a2 + 480) = v58;
    unsigned int v52 = *((_DWORD *)a1 + 29);
  }
  if (v52 == 6)
  {
    uint64_t v59 = a1[108];
    v51 |= 0x2000000000000000uLL;
    *(void *)(a2 + 1248) = v51;
    *(void *)(a2 + 488) = v59;
    unsigned int v52 = *((_DWORD *)a1 + 29);
  }
  if (v52 == 7)
  {
    uint64_t v60 = *((unsigned int *)a1 + 27);
    *(void *)(a2 + 1248) = v51 | 0x4000000000000000;
    *(void *)(a2 + 496) = v60;
    unsigned int v52 = *((_DWORD *)a1 + 29);
    if (v52 == 7)
    {
      uint64_t v61 = a1[112];
      *(void *)(a2 + 1248) = v51 | 0xC000000000000000;
      *(void *)(a2 + 504) = v61;
      unsigned int v52 = 7;
    }
  }
  *(void *)(a2 + 512) = v52;
  *(void *)(a2 + 520) = *((unsigned int *)a1 + 30);
  *(void *)(a2 + 528) = a1[124];
  *(void *)(a2 + 536) = *((unsigned int *)a1 + 32);
  *(void *)(a2 + 544) = a1[132];
  uint64_t v62 = *((void *)a1 + 17);
  uint64_t v63 = *((void *)a1 + 18);
  v64.n128_u64[0] = v62;
  v64.n128_u64[1] = HIDWORD(v62);
  __n128 v65 = v64;
  v64.n128_u64[0] = v63;
  v64.n128_u64[1] = HIDWORD(v63);
  *(__n128 *)(a2 + 552) = v65;
  *(__n128 *)(a2 + 568) = v64;
  v65.n128_u64[0] = *((void *)a1 + 19);
  uint64_t v66 = *((void *)a1 + 20);
  v64.n128_u64[0] = v65.n128_u32[0];
  v64.n128_u64[1] = v65.n128_u32[1];
  __n128 result = v64;
  v64.n128_u64[0] = v66;
  v64.n128_u64[1] = HIDWORD(v66);
  *(__n128 *)(a2 + 584) = result;
  *(__n128 *)(a2 + 600) = v64;
  uint64_t v68 = a1[168];
  *(void *)(a2 + 1256) = 0x3FFFLL;
  *(void *)(a2 + 616) = v68;
  return result;
}

__n128 sub_1CBE7DA14(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  uint64_t v13 = *((unsigned int *)a1 + 5);
  *(void *)(a2 + 88) = a1[16];
  *(void *)(a2 + 96) = v13;
  *(void *)(a2 + 104) = a1[24];
  v14.i64[0] = *((__int16 *)a1 + 14);
  v14.i64[1] = *((__int16 *)a1 + 15);
  int8x16_t v15 = (int8x16_t)vcltzq_s64(v14);
  *(int8x16_t *)(a2 + 112) = vorrq_s8(vandq_s8(vandq_s8((int8x16_t)v14, (int8x16_t)vdupq_n_s64(0x7FFuLL)), v15), vbicq_s8((int8x16_t)v14, v15));
  v14.i64[0] = *((void *)a1 + 4);
  *(void *)&long long v16 = v14.u32[0];
  *((void *)&v16 + 1) = v14.u32[1];
  *(_OWORD *)(a2 + 128) = v16;
  uint64_t v17 = a1[41];
  *(void *)(a2 + 144) = a1[40];
  *(void *)(a2 + 152) = v17;
  uint64_t v18 = a1[43];
  *(void *)(a2 + 160) = a1[42];
  *(void *)(a2 + 168) = v18;
  uint64_t v19 = a1[45];
  *(void *)(a2 + 176) = a1[44];
  *(void *)(a2 + 184) = v19;
  uint64_t v20 = a1[47];
  *(void *)(a2 + 192) = a1[46];
  *(void *)(a2 + 200) = v20;
  uint64_t v21 = a1[48];
  uint64_t v22 = v3 | 0x7FFFE00;
  *(void *)(a2 + 1248) = v3 | 0x7FFFE00;
  *(void *)(a2 + 208) = v21;
  unsigned int v23 = *((_DWORD *)a1 + 15);
  if (!v23)
  {
    uint64_t v24 = a1[52];
    uint64_t v22 = v3 | 0xFFFFE00;
    *(void *)(a2 + 1248) = v3 | 0xFFFFE00;
    *(void *)(a2 + 216) = v24;
    unsigned int v23 = *((_DWORD *)a1 + 15);
  }
  if (v23 == 1)
  {
    uint64_t v25 = *((unsigned __int16 *)a1 + 26);
    v22 |= 0x10000000uLL;
    *(void *)(a2 + 1248) = v22;
    *(void *)(a2 + 224) = v25;
    unsigned int v23 = *((_DWORD *)a1 + 15);
  }
  if (v23 == 2)
  {
    uint64_t v26 = *((unsigned __int16 *)a1 + 26);
    v22 |= 0x20000000uLL;
    *(void *)(a2 + 1248) = v22;
    *(void *)(a2 + 232) = v26;
    unsigned int v23 = *((_DWORD *)a1 + 15);
  }
  if (v23 == 3)
  {
    uint64_t v27 = *((unsigned __int16 *)a1 + 26);
    v22 |= 0x40000000uLL;
    *(void *)(a2 + 1248) = v22;
    *(void *)(a2 + 240) = v27;
    unsigned int v23 = *((_DWORD *)a1 + 15);
  }
  if (v23 == 4)
  {
    uint64_t v28 = *((unsigned int *)a1 + 13);
    v22 |= 0x80000000uLL;
    *(void *)(a2 + 1248) = v22;
    *(void *)(a2 + 248) = v28;
    unsigned int v23 = *((_DWORD *)a1 + 15);
  }
  if (v23 == 5)
  {
    uint64_t v29 = *((unsigned __int16 *)a1 + 26);
    v22 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v22;
    *(void *)(a2 + 256) = v29;
    unsigned int v23 = *((_DWORD *)a1 + 15);
  }
  if (v23 == 6)
  {
    uint64_t v30 = a1[52];
    v22 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v22;
    *(void *)(a2 + 264) = v30;
    unsigned int v23 = *((_DWORD *)a1 + 15);
  }
  if (v23 == 7)
  {
    uint64_t v31 = *((unsigned int *)a1 + 13);
    *(void *)(a2 + 1248) = v22 | 0x400000000;
    *(void *)(a2 + 272) = v31;
    unsigned int v23 = *((_DWORD *)a1 + 15);
    if (v23 == 7)
    {
      v22 |= 0xC00000000uLL;
      *(void *)(a2 + 280) = a1[56];
    }
    else
    {
      v22 |= 0x400000000uLL;
    }
  }
  uint64_t v32 = v23;
  uint64_t v33 = *((unsigned int *)a1 + 16);
  *(void *)(a2 + 288) = v32;
  *(void *)(a2 + 296) = v33;
  uint64_t v34 = *((unsigned int *)a1 + 18);
  *(void *)(a2 + 304) = a1[68];
  *(void *)(a2 + 312) = v34;
  uint64_t v35 = a1[76];
  uint64_t v36 = v22 | 0x1F000000000;
  *(void *)(a2 + 1248) = v22 | 0x1F000000000;
  *(void *)(a2 + 320) = v35;
  unsigned int v37 = *((_DWORD *)a1 + 22);
  if (!v37)
  {
    uint64_t v38 = a1[80];
    uint64_t v36 = v22 | 0x3F000000000;
    *(void *)(a2 + 1248) = v22 | 0x3F000000000;
    *(void *)(a2 + 328) = v38;
    unsigned int v37 = *((_DWORD *)a1 + 22);
  }
  if (v37 == 1)
  {
    uint64_t v39 = *((unsigned __int16 *)a1 + 40);
    v36 |= 0x40000000000uLL;
    *(void *)(a2 + 1248) = v36;
    *(void *)(a2 + 336) = v39;
    unsigned int v37 = *((_DWORD *)a1 + 22);
  }
  if (v37 == 2)
  {
    uint64_t v40 = *((unsigned __int16 *)a1 + 40);
    v36 |= 0x80000000000uLL;
    *(void *)(a2 + 1248) = v36;
    *(void *)(a2 + 344) = v40;
    unsigned int v37 = *((_DWORD *)a1 + 22);
  }
  if (v37 == 3)
  {
    uint64_t v41 = *((unsigned __int16 *)a1 + 40);
    v36 |= 0x100000000000uLL;
    *(void *)(a2 + 1248) = v36;
    *(void *)(a2 + 352) = v41;
    unsigned int v37 = *((_DWORD *)a1 + 22);
  }
  if (v37 == 4)
  {
    uint64_t v42 = *((unsigned int *)a1 + 20);
    v36 |= 0x200000000000uLL;
    *(void *)(a2 + 1248) = v36;
    *(void *)(a2 + 360) = v42;
    unsigned int v37 = *((_DWORD *)a1 + 22);
  }
  if (v37 == 5)
  {
    uint64_t v43 = *((unsigned __int16 *)a1 + 40);
    v36 |= 0x400000000000uLL;
    *(void *)(a2 + 1248) = v36;
    *(void *)(a2 + 368) = v43;
    unsigned int v37 = *((_DWORD *)a1 + 22);
  }
  if (v37 == 6)
  {
    uint64_t v44 = a1[80];
    v36 |= 0x800000000000uLL;
    *(void *)(a2 + 1248) = v36;
    *(void *)(a2 + 376) = v44;
    unsigned int v37 = *((_DWORD *)a1 + 22);
  }
  if (v37 == 7)
  {
    uint64_t v45 = *((unsigned int *)a1 + 20);
    *(void *)(a2 + 1248) = v36 | 0x1000000000000;
    *(void *)(a2 + 384) = v45;
    unsigned int v37 = *((_DWORD *)a1 + 22);
    if (v37 == 7)
    {
      v36 |= 0x3000000000000uLL;
      *(void *)(a2 + 392) = a1[84];
    }
    else
    {
      v36 |= 0x1000000000000uLL;
    }
  }
  uint64_t v46 = v37;
  uint64_t v47 = *((unsigned int *)a1 + 23);
  *(void *)(a2 + 400) = v46;
  *(void *)(a2 + 408) = v47;
  uint64_t v48 = *((unsigned int *)a1 + 25);
  *(void *)(a2 + 416) = a1[96];
  *(void *)(a2 + 424) = v48;
  uint64_t v49 = a1[104];
  uint64_t v50 = v36 | 0x7C000000000000;
  *(void *)(a2 + 1248) = v36 | 0x7C000000000000;
  *(void *)(a2 + 432) = v49;
  unsigned int v51 = *((_DWORD *)a1 + 29);
  if (!v51)
  {
    uint64_t v52 = a1[108];
    uint64_t v50 = v36 | 0xFC000000000000;
    *(void *)(a2 + 1248) = v36 | 0xFC000000000000;
    *(void *)(a2 + 440) = v52;
    unsigned int v51 = *((_DWORD *)a1 + 29);
  }
  if (v51 == 1)
  {
    uint64_t v53 = *((unsigned __int16 *)a1 + 54);
    v50 |= 0x100000000000000uLL;
    *(void *)(a2 + 1248) = v50;
    *(void *)(a2 + 448) = v53;
    unsigned int v51 = *((_DWORD *)a1 + 29);
  }
  if (v51 == 2)
  {
    uint64_t v54 = *((unsigned __int16 *)a1 + 54);
    v50 |= 0x200000000000000uLL;
    *(void *)(a2 + 1248) = v50;
    *(void *)(a2 + 456) = v54;
    unsigned int v51 = *((_DWORD *)a1 + 29);
  }
  if (v51 == 3)
  {
    uint64_t v55 = *((unsigned __int16 *)a1 + 54);
    v50 |= 0x400000000000000uLL;
    *(void *)(a2 + 1248) = v50;
    *(void *)(a2 + 464) = v55;
    unsigned int v51 = *((_DWORD *)a1 + 29);
  }
  if (v51 == 4)
  {
    uint64_t v56 = *((unsigned int *)a1 + 27);
    v50 |= 0x800000000000000uLL;
    *(void *)(a2 + 1248) = v50;
    *(void *)(a2 + 472) = v56;
    unsigned int v51 = *((_DWORD *)a1 + 29);
  }
  if (v51 == 5)
  {
    uint64_t v57 = *((unsigned __int16 *)a1 + 54);
    v50 |= 0x1000000000000000uLL;
    *(void *)(a2 + 1248) = v50;
    *(void *)(a2 + 480) = v57;
    unsigned int v51 = *((_DWORD *)a1 + 29);
  }
  if (v51 == 6)
  {
    uint64_t v58 = a1[108];
    v50 |= 0x2000000000000000uLL;
    *(void *)(a2 + 1248) = v50;
    *(void *)(a2 + 488) = v58;
    unsigned int v51 = *((_DWORD *)a1 + 29);
  }
  if (v51 == 7)
  {
    uint64_t v59 = *((unsigned int *)a1 + 27);
    *(void *)(a2 + 1248) = v50 | 0x4000000000000000;
    *(void *)(a2 + 496) = v59;
    unsigned int v51 = *((_DWORD *)a1 + 29);
    if (v51 == 7)
    {
      uint64_t v60 = a1[112];
      *(void *)(a2 + 1248) = v50 | 0xC000000000000000;
      *(void *)(a2 + 504) = v60;
      unsigned int v51 = 7;
    }
  }
  *(void *)(a2 + 512) = v51;
  *(void *)(a2 + 520) = *((unsigned int *)a1 + 30);
  *(void *)(a2 + 528) = a1[124];
  *(void *)(a2 + 536) = *((unsigned int *)a1 + 32);
  *(void *)(a2 + 544) = a1[132];
  uint64_t v61 = *((void *)a1 + 17);
  uint64_t v62 = *((void *)a1 + 18);
  v63.n128_u64[0] = v61;
  v63.n128_u64[1] = HIDWORD(v61);
  __n128 v64 = v63;
  v63.n128_u64[0] = v62;
  v63.n128_u64[1] = HIDWORD(v62);
  *(__n128 *)(a2 + 552) = v64;
  *(__n128 *)(a2 + 568) = v63;
  v64.n128_u64[0] = *((void *)a1 + 19);
  uint64_t v65 = *((void *)a1 + 20);
  v63.n128_u64[0] = v64.n128_u32[0];
  v63.n128_u64[1] = v64.n128_u32[1];
  __n128 result = v63;
  v63.n128_u64[0] = v65;
  v63.n128_u64[1] = HIDWORD(v65);
  *(__n128 *)(a2 + 584) = result;
  *(__n128 *)(a2 + 600) = v63;
  uint64_t v67 = a1[168];
  *(void *)(a2 + 1256) = 0x3FFFLL;
  *(void *)(a2 + 616) = v67;
  return result;
}

float sub_1CBE7DF68(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  uint64_t v13 = *((unsigned int *)a1 + 5);
  *(void *)(a2 + 88) = a1[16];
  *(void *)(a2 + 96) = v13;
  *(void *)(a2 + 104) = a1[24];
  uint64_t v14 = *(void *)(a1 + 28);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 112) = v15;
  uint64_t v16 = *((void *)a1 + 6);
  uint64_t v17 = *((void *)a1 + 7);
  *(void *)&long long v15 = v16;
  *((void *)&v15 + 1) = HIDWORD(v16);
  *(_OWORD *)(a2 + 200) = v15;
  *(void *)&long long v15 = v17;
  *((void *)&v15 + 1) = HIDWORD(v17);
  *(_OWORD *)(a2 + 216) = v15;
  uint64_t v18 = *((void *)a1 + 8);
  uint64_t v19 = *((void *)a1 + 9);
  *(void *)&long long v15 = v18;
  *((void *)&v15 + 1) = HIDWORD(v18);
  *(_OWORD *)(a2 + 232) = v15;
  uint64_t v20 = a1[40];
  *(void *)(a2 + 128) = *((unsigned int *)a1 + 9);
  *(void *)(a2 + 136) = v20;
  uint64_t v21 = a1[42];
  *(void *)(a2 + 144) = a1[41];
  *(void *)(a2 + 152) = v21;
  uint64_t v22 = a1[44];
  *(void *)(a2 + 160) = a1[43];
  *(void *)(a2 + 168) = v22;
  uint64_t v23 = a1[46];
  *(void *)(a2 + 176) = a1[45];
  *(void *)(a2 + 184) = v23;
  *(void *)(a2 + 192) = a1[47];
  *(void *)&long long v15 = v19;
  *((void *)&v15 + 1) = HIDWORD(v19);
  float result = *(float *)&v19;
  *(_OWORD *)(a2 + 248) = v15;
  uint64_t v25 = *((unsigned int *)a1 + 20);
  uint64_t v26 = a1[84];
  *(void *)(a2 + 1248) = v3 | 0x7FFFFFE00;
  *(void *)(a2 + 264) = v25;
  *(void *)(a2 + 272) = v26;
  return result;
}

float sub_1CBE7E120(uint64_t a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(void *)(a2 + 1256) = 0;
  *(void *)&long long v2 = *(void *)a1;
  *((void *)&v2 + 1) = HIDWORD(*(void *)a1);
  *(_OWORD *)a2 = v2;
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  *(void *)&long long v2 = v3;
  *((void *)&v2 + 1) = HIDWORD(v3);
  *(_OWORD *)(a2 + 152) = v2;
  *(void *)&long long v2 = v4;
  *((void *)&v2 + 1) = HIDWORD(v4);
  *(_OWORD *)(a2 + 168) = v2;
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  *(void *)&long long v2 = v5;
  *((void *)&v2 + 1) = HIDWORD(v5);
  *(_OWORD *)(a2 + 184) = v2;
  uint64_t v7 = *(unsigned __int8 *)(a1 + 9);
  *(void *)(a2 + 16) = *(unsigned __int8 *)(a1 + 8);
  *(void *)(a2 + 24) = v7;
  uint64_t v8 = *(unsigned __int16 *)(a1 + 12);
  *(void *)(a2 + 32) = *(unsigned __int16 *)(a1 + 10);
  *(void *)(a2 + 40) = v8;
  uint64_t v9 = *(unsigned __int16 *)(a1 + 16);
  *(void *)(a2 + 48) = *(unsigned __int16 *)(a1 + 14);
  *(void *)(a2 + 56) = v9;
  uint64_t v10 = *(unsigned __int16 *)(a1 + 20);
  *(void *)(a2 + 64) = *(unsigned __int16 *)(a1 + 18);
  *(void *)(a2 + 72) = v10;
  uint64_t v11 = *(unsigned __int8 *)(a1 + 24);
  *(void *)(a2 + 80) = *(unsigned __int16 *)(a1 + 22);
  *(void *)(a2 + 88) = v11;
  uint64_t v12 = *(unsigned __int8 *)(a1 + 26);
  *(void *)(a2 + 96) = *(unsigned __int8 *)(a1 + 25);
  *(void *)(a2 + 104) = v12;
  uint64_t v13 = *(unsigned __int8 *)(a1 + 28);
  *(void *)(a2 + 112) = *(unsigned __int8 *)(a1 + 27);
  *(void *)(a2 + 120) = v13;
  uint64_t v14 = *(unsigned __int8 *)(a1 + 30);
  *(void *)(a2 + 128) = *(unsigned __int8 *)(a1 + 29);
  *(void *)(a2 + 136) = v14;
  *(void *)(a2 + 144) = *(unsigned __int8 *)(a1 + 31);
  *(void *)&long long v2 = v6;
  *((void *)&v2 + 1) = HIDWORD(v6);
  float result = *(float *)&v6;
  *(_OWORD *)(a2 + 200) = v2;
  uint64_t v16 = *(unsigned __int8 *)(a1 + 68);
  *(void *)(a2 + 216) = *(unsigned int *)(a1 + 64);
  *(void *)(a2 + 224) = v16;
  uint64_t v17 = *(unsigned __int8 *)(a1 + 69);
  *(void *)(a2 + 1248) = 0x3FFFFFFFLL;
  *(void *)(a2 + 232) = v17;
  return result;
}

__n128 sub_1CBE7E1E4(uint64_t a1, __n128 *a2)
{
  a2[79].n128_u64[0] = 0;
  a2[78].n128_u64[1] = 0;
  v2.n128_u64[0] = *(void *)a1;
  v2.n128_u64[1] = HIDWORD(*(void *)a1);
  *a2 = v2;
  unint64_t v3 = *(unsigned __int8 *)(a1 + 9);
  a2[1].n128_u64[0] = *(unsigned __int8 *)(a1 + 8);
  a2[1].n128_u64[1] = v3;
  unint64_t v4 = *(unsigned __int8 *)(a1 + 11);
  a2[2].n128_u64[0] = *(unsigned __int8 *)(a1 + 10);
  a2[2].n128_u64[1] = v4;
  unint64_t v5 = *(unsigned __int8 *)(a1 + 13);
  a2[3].n128_u64[0] = *(unsigned __int8 *)(a1 + 12);
  a2[3].n128_u64[1] = v5;
  unint64_t v6 = *(unsigned __int8 *)(a1 + 15);
  a2[4].n128_u64[0] = *(unsigned __int8 *)(a1 + 14);
  a2[4].n128_u64[1] = v6;
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  v2.n128_u64[0] = v7;
  v2.n128_u64[1] = HIDWORD(v7);
  __n128 v9 = v2;
  v2.n128_u64[0] = v8;
  v2.n128_u64[1] = HIDWORD(v8);
  a2[5] = v9;
  a2[6] = v2;
  v9.n128_u64[0] = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  v2.n128_u64[0] = v9.n128_u32[0];
  v2.n128_u64[1] = v9.n128_u32[1];
  __n128 result = v2;
  v2.n128_u64[0] = v10;
  v2.n128_u64[1] = HIDWORD(v10);
  a2[7] = result;
  a2[8] = v2;
  a2[78].n128_u64[0] = 0xFFFFFLL;
  unint64_t v12 = *(unsigned __int8 *)(a1 + 49);
  a2[9].n128_u64[0] = *(unsigned __int8 *)(a1 + 48);
  a2[9].n128_u64[1] = v12;
  return result;
}

__n128 sub_1CBE7E260(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = *(void *)(a1 + 20);
  *(void *)&long long v14 = v13;
  *((void *)&v14 + 1) = HIDWORD(v13);
  *(_OWORD *)(a2 + 96) = v14;
  uint64_t v15 = a1[28];
  uint64_t v16 = *((unsigned int *)a1 + 8);
  uint64_t v17 = v3 | 0xFE00;
  *(void *)(a2 + 1248) = v3 | 0xFE00;
  *(void *)(a2 + 112) = v15;
  *(void *)(a2 + 120) = v16;
  unsigned int v18 = *((_DWORD *)a1 + 11);
  if (!v18)
  {
    uint64_t v19 = a1[36];
    uint64_t v17 = v3 | 0x1FE00;
    *(void *)(a2 + 1248) = v3 | 0x1FE00;
    *(void *)(a2 + 128) = v19;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 1)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 136) = v20;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 2)
  {
    uint64_t v21 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 144) = v21;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 3)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 152) = v22;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 4)
  {
    uint64_t v23 = *((unsigned int *)a1 + 9);
    v17 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 160) = v23;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 5)
  {
    uint64_t v24 = *((unsigned __int16 *)a1 + 18);
    v17 |= 0x200000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 168) = v24;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 6)
  {
    uint64_t v25 = a1[36];
    v17 |= 0x400000uLL;
    *(void *)(a2 + 1248) = v17;
    *(void *)(a2 + 176) = v25;
    unsigned int v18 = *((_DWORD *)a1 + 11);
  }
  if (v18 == 7)
  {
    uint64_t v26 = *((unsigned int *)a1 + 9);
    *(void *)(a2 + 1248) = v17 | 0x800000;
    *(void *)(a2 + 184) = v26;
    unsigned int v18 = *((_DWORD *)a1 + 11);
    if (v18 == 7)
    {
      v17 |= 0x1800000uLL;
      *(void *)(a2 + 192) = a1[40];
    }
    else
    {
      v17 |= 0x800000uLL;
    }
  }
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = v18;
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = *((unsigned int *)a1 + 14);
  *(void *)(a2 + 216) = a1[52];
  *(void *)(a2 + 224) = v28;
  *(void *)(a2 + 232) = a1[60];
  uint64_t v29 = *((void *)a1 + 8);
  v30.n128_u64[0] = v29;
  v30.n128_u64[1] = HIDWORD(v29);
  *(__n128 *)(a2 + 240) = v30;
  uint64_t v31 = a1[73];
  *(void *)(a2 + 256) = a1[72];
  *(void *)(a2 + 264) = v31;
  uint64_t v32 = a1[75];
  *(void *)(a2 + 272) = a1[74];
  *(void *)(a2 + 280) = v32;
  uint64_t v33 = a1[77];
  *(void *)(a2 + 288) = a1[76];
  *(void *)(a2 + 296) = v33;
  uint64_t v34 = a1[79];
  *(void *)(a2 + 304) = a1[78];
  *(void *)(a2 + 312) = v34;
  uint64_t v35 = a1[84];
  *(void *)(a2 + 320) = *((unsigned int *)a1 + 20);
  *(void *)(a2 + 328) = v35;
  uint64_t v36 = *((void *)a1 + 11);
  uint64_t v37 = *((void *)a1 + 12);
  v30.n128_u64[0] = v36;
  v30.n128_u64[1] = HIDWORD(v36);
  __n128 v38 = v30;
  v30.n128_u64[0] = v37;
  v30.n128_u64[1] = HIDWORD(v37);
  *(__n128 *)(a2 + 336) = v38;
  *(__n128 *)(a2 + 352) = v30;
  v38.n128_u64[0] = *((void *)a1 + 13);
  uint64_t v39 = *((void *)a1 + 14);
  v30.n128_u64[0] = v38.n128_u32[0];
  v30.n128_u64[1] = v38.n128_u32[1];
  __n128 result = v30;
  v30.n128_u64[0] = v39;
  v30.n128_u64[1] = HIDWORD(v39);
  *(__n128 *)(a2 + 368) = result;
  *(__n128 *)(a2 + 384) = v30;
  uint64_t v41 = a1[120];
  uint64_t v42 = *((unsigned int *)a1 + 31);
  *(void *)(a2 + 1248) = v17 | 0xFFFFFFE000000;
  *(void *)(a2 + 400) = v41;
  *(void *)(a2 + 408) = v42;
  return result;
}

__n128 sub_1CBE7E544(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = v16;
  uint64_t v26 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v25;
  *(void *)(a2 + 192) = v26;
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = a1[52];
  uint64_t v29 = v13 | 0xF800000;
  *(void *)(a2 + 1248) = v13 | 0xF800000;
  *(void *)(a2 + 216) = v28;
  unsigned int v30 = *((_DWORD *)a1 + 16);
  if (!v30)
  {
    uint64_t v31 = a1[56];
    uint64_t v29 = v13 | 0x1F800000;
    *(void *)(a2 + 1248) = v13 | 0x1F800000;
    *(void *)(a2 + 224) = v31;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 1)
  {
    uint64_t v32 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x20000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 232) = v32;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 2)
  {
    uint64_t v33 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x40000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 240) = v33;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 3)
  {
    uint64_t v34 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x80000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 248) = v34;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 4)
  {
    uint64_t v35 = *((unsigned int *)a1 + 14);
    v29 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 256) = v35;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 5)
  {
    uint64_t v36 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 264) = v36;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 6)
  {
    uint64_t v37 = a1[56];
    v29 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 272) = v37;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 7)
  {
    uint64_t v38 = *((unsigned int *)a1 + 14);
    *(void *)(a2 + 1248) = v29 | 0x800000000;
    *(void *)(a2 + 280) = v38;
    unsigned int v30 = *((_DWORD *)a1 + 16);
    if (v30 == 7)
    {
      v29 |= 0x1800000000uLL;
      *(void *)(a2 + 288) = a1[60];
    }
    else
    {
      v29 |= 0x800000000uLL;
    }
  }
  uint64_t v39 = v30;
  uint64_t v40 = *((unsigned int *)a1 + 17);
  *(void *)(a2 + 296) = v39;
  *(void *)(a2 + 304) = v40;
  uint64_t v41 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 312) = a1[72];
  *(void *)(a2 + 320) = v41;
  uint64_t v42 = a1[80];
  uint64_t v43 = v29 | 0x3E000000000;
  *(void *)(a2 + 1248) = v29 | 0x3E000000000;
  *(void *)(a2 + 328) = v42;
  unsigned int v44 = *((_DWORD *)a1 + 23);
  if (!v44)
  {
    uint64_t v45 = a1[84];
    uint64_t v43 = v29 | 0x7E000000000;
    *(void *)(a2 + 1248) = v29 | 0x7E000000000;
    *(void *)(a2 + 336) = v45;
    unsigned int v44 = *((_DWORD *)a1 + 23);
  }
  if (v44 == 1)
  {
    uint64_t v46 = *((unsigned __int16 *)a1 + 42);
    v43 |= 0x80000000000uLL;
    *(void *)(a2 + 1248) = v43;
    *(void *)(a2 + 344) = v46;
    unsigned int v44 = *((_DWORD *)a1 + 23);
  }
  if (v44 == 2)
  {
    uint64_t v47 = *((unsigned __int16 *)a1 + 42);
    v43 |= 0x100000000000uLL;
    *(void *)(a2 + 1248) = v43;
    *(void *)(a2 + 352) = v47;
    unsigned int v44 = *((_DWORD *)a1 + 23);
  }
  if (v44 == 3)
  {
    uint64_t v48 = *((unsigned __int16 *)a1 + 42);
    v43 |= 0x200000000000uLL;
    *(void *)(a2 + 1248) = v43;
    *(void *)(a2 + 360) = v48;
    unsigned int v44 = *((_DWORD *)a1 + 23);
  }
  if (v44 == 4)
  {
    uint64_t v49 = *((unsigned int *)a1 + 21);
    v43 |= 0x400000000000uLL;
    *(void *)(a2 + 1248) = v43;
    *(void *)(a2 + 368) = v49;
    unsigned int v44 = *((_DWORD *)a1 + 23);
  }
  if (v44 == 5)
  {
    uint64_t v50 = *((unsigned __int16 *)a1 + 42);
    v43 |= 0x800000000000uLL;
    *(void *)(a2 + 1248) = v43;
    *(void *)(a2 + 376) = v50;
    unsigned int v44 = *((_DWORD *)a1 + 23);
  }
  if (v44 == 6)
  {
    uint64_t v51 = a1[84];
    v43 |= 0x1000000000000uLL;
    *(void *)(a2 + 1248) = v43;
    *(void *)(a2 + 384) = v51;
    unsigned int v44 = *((_DWORD *)a1 + 23);
  }
  if (v44 == 7)
  {
    uint64_t v52 = *((unsigned int *)a1 + 21);
    *(void *)(a2 + 1248) = v43 | 0x2000000000000;
    *(void *)(a2 + 392) = v52;
    unsigned int v44 = *((_DWORD *)a1 + 23);
    if (v44 == 7)
    {
      v43 |= 0x6000000000000uLL;
      *(void *)(a2 + 400) = a1[88];
    }
    else
    {
      v43 |= 0x2000000000000uLL;
    }
  }
  uint64_t v53 = *((unsigned int *)a1 + 24);
  *(void *)(a2 + 408) = v44;
  *(void *)(a2 + 416) = v53;
  uint64_t v54 = *((unsigned int *)a1 + 26);
  *(void *)(a2 + 424) = a1[100];
  *(void *)(a2 + 432) = v54;
  *(void *)(a2 + 440) = a1[108];
  uint64_t v55 = *((void *)a1 + 14);
  v56.n128_u64[0] = v55;
  v56.n128_u64[1] = HIDWORD(v55);
  *(__n128 *)(a2 + 448) = v56;
  uint64_t v57 = a1[121];
  *(void *)(a2 + 464) = a1[120];
  *(void *)(a2 + 472) = v57;
  uint64_t v58 = a1[123];
  *(void *)(a2 + 480) = a1[122];
  *(void *)(a2 + 488) = v58;
  uint64_t v59 = a1[124];
  *(void *)(a2 + 1248) = v43 | 0xFFF8000000000000;
  uint64_t v60 = a1[125];
  *(void *)(a2 + 496) = v59;
  *(void *)(a2 + 504) = v60;
  *(void *)(a2 + 512) = a1[126];
  *(void *)(a2 + 520) = a1[127];
  uint64_t v61 = *((void *)a1 + 16);
  uint64_t v62 = *((void *)a1 + 17);
  v56.n128_u64[0] = v61;
  v56.n128_u64[1] = HIDWORD(v61);
  __n128 v63 = v56;
  v56.n128_u64[0] = v62;
  v56.n128_u64[1] = HIDWORD(v62);
  *(__n128 *)(a2 + 528) = v63;
  *(__n128 *)(a2 + 544) = v56;
  v63.n128_u64[0] = *((void *)a1 + 18);
  uint64_t v64 = *((void *)a1 + 19);
  v56.n128_u64[0] = v63.n128_u32[0];
  v56.n128_u64[1] = v63.n128_u32[1];
  __n128 result = v56;
  v56.n128_u64[0] = v64;
  v56.n128_u64[1] = HIDWORD(v64);
  *(__n128 *)(a2 + 560) = result;
  *(__n128 *)(a2 + 576) = v56;
  *(void *)(a2 + 592) = *((unsigned int *)a1 + 40);
  *(void *)(a2 + 600) = a1[164];
  *(void *)(a2 + 608) = *((unsigned int *)a1 + 42);
  *(void *)(a2 + 616) = a1[172];
  uint64_t v66 = a1[176];
  *(void *)(a2 + 1256) = 0x7FFFLL;
  *(void *)(a2 + 624) = v66;
  return result;
}

__n128 sub_1CBE7EA80(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = v16;
  uint64_t v26 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v25;
  *(void *)(a2 + 192) = v26;
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = a1[52];
  uint64_t v29 = v13 | 0xF800000;
  *(void *)(a2 + 1248) = v13 | 0xF800000;
  *(void *)(a2 + 216) = v28;
  unsigned int v30 = *((_DWORD *)a1 + 16);
  if (!v30)
  {
    uint64_t v31 = a1[56];
    uint64_t v29 = v13 | 0x1F800000;
    *(void *)(a2 + 1248) = v13 | 0x1F800000;
    *(void *)(a2 + 224) = v31;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 1)
  {
    uint64_t v32 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x20000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 232) = v32;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 2)
  {
    uint64_t v33 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x40000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 240) = v33;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 3)
  {
    uint64_t v34 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x80000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 248) = v34;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 4)
  {
    uint64_t v35 = *((unsigned int *)a1 + 14);
    v29 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 256) = v35;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 5)
  {
    uint64_t v36 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 264) = v36;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 6)
  {
    uint64_t v37 = a1[56];
    v29 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 272) = v37;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 7)
  {
    uint64_t v38 = *((unsigned int *)a1 + 14);
    *(void *)(a2 + 1248) = v29 | 0x800000000;
    *(void *)(a2 + 280) = v38;
    unsigned int v30 = *((_DWORD *)a1 + 16);
    if (v30 == 7)
    {
      v29 |= 0x1800000000uLL;
      *(void *)(a2 + 288) = a1[60];
    }
    else
    {
      v29 |= 0x800000000uLL;
    }
  }
  uint64_t v39 = v30;
  uint64_t v40 = *((unsigned int *)a1 + 17);
  *(void *)(a2 + 296) = v39;
  *(void *)(a2 + 304) = v40;
  uint64_t v41 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 312) = a1[72];
  *(void *)(a2 + 320) = v41;
  uint64_t v42 = a1[80];
  uint64_t v43 = v29 | 0x3E000000000;
  *(void *)(a2 + 1248) = v29 | 0x3E000000000;
  *(void *)(a2 + 328) = v42;
  unsigned int v44 = *((_DWORD *)a1 + 23);
  if (!v44)
  {
    uint64_t v45 = a1[84];
    uint64_t v43 = v29 | 0x7E000000000;
    *(void *)(a2 + 1248) = v29 | 0x7E000000000;
    *(void *)(a2 + 336) = v45;
    unsigned int v44 = *((_DWORD *)a1 + 23);
  }
  if (v44 == 1)
  {
    uint64_t v46 = *((unsigned __int16 *)a1 + 42);
    v43 |= 0x80000000000uLL;
    *(void *)(a2 + 1248) = v43;
    *(void *)(a2 + 344) = v46;
    unsigned int v44 = *((_DWORD *)a1 + 23);
  }
  if (v44 == 2)
  {
    uint64_t v47 = *((unsigned __int16 *)a1 + 42);
    v43 |= 0x100000000000uLL;
    *(void *)(a2 + 1248) = v43;
    *(void *)(a2 + 352) = v47;
    unsigned int v44 = *((_DWORD *)a1 + 23);
  }
  if (v44 == 3)
  {
    uint64_t v48 = *((unsigned __int16 *)a1 + 42);
    v43 |= 0x200000000000uLL;
    *(void *)(a2 + 1248) = v43;
    *(void *)(a2 + 360) = v48;
    unsigned int v44 = *((_DWORD *)a1 + 23);
  }
  if (v44 == 4)
  {
    uint64_t v49 = *((unsigned int *)a1 + 21);
    v43 |= 0x400000000000uLL;
    *(void *)(a2 + 1248) = v43;
    *(void *)(a2 + 368) = v49;
    unsigned int v44 = *((_DWORD *)a1 + 23);
  }
  if (v44 == 5)
  {
    uint64_t v50 = *((unsigned __int16 *)a1 + 42);
    v43 |= 0x800000000000uLL;
    *(void *)(a2 + 1248) = v43;
    *(void *)(a2 + 376) = v50;
    unsigned int v44 = *((_DWORD *)a1 + 23);
  }
  if (v44 == 6)
  {
    uint64_t v51 = a1[84];
    v43 |= 0x1000000000000uLL;
    *(void *)(a2 + 1248) = v43;
    *(void *)(a2 + 384) = v51;
    unsigned int v44 = *((_DWORD *)a1 + 23);
  }
  if (v44 == 7)
  {
    uint64_t v52 = *((unsigned int *)a1 + 21);
    *(void *)(a2 + 1248) = v43 | 0x2000000000000;
    *(void *)(a2 + 392) = v52;
    unsigned int v44 = *((_DWORD *)a1 + 23);
    if (v44 == 7)
    {
      v43 |= 0x6000000000000uLL;
      *(void *)(a2 + 400) = a1[88];
    }
    else
    {
      v43 |= 0x2000000000000uLL;
    }
  }
  uint64_t v53 = *((unsigned int *)a1 + 24);
  *(void *)(a2 + 408) = v44;
  *(void *)(a2 + 416) = v53;
  uint64_t v54 = *((unsigned int *)a1 + 26);
  *(void *)(a2 + 424) = a1[100];
  *(void *)(a2 + 432) = v54;
  *(void *)(a2 + 440) = a1[108];
  uint64_t v55 = *((void *)a1 + 14);
  v56.n128_u64[0] = v55;
  v56.n128_u64[1] = HIDWORD(v55);
  *(__n128 *)(a2 + 448) = v56;
  uint64_t v57 = a1[121];
  *(void *)(a2 + 464) = a1[120];
  *(void *)(a2 + 472) = v57;
  uint64_t v58 = a1[123];
  *(void *)(a2 + 480) = a1[122];
  *(void *)(a2 + 488) = v58;
  uint64_t v59 = a1[124];
  *(void *)(a2 + 1248) = v43 | 0xFFF8000000000000;
  uint64_t v60 = a1[125];
  *(void *)(a2 + 496) = v59;
  *(void *)(a2 + 504) = v60;
  *(void *)(a2 + 512) = a1[126];
  *(void *)(a2 + 520) = a1[127];
  uint64_t v61 = *((void *)a1 + 16);
  uint64_t v62 = *((void *)a1 + 17);
  v56.n128_u64[0] = v61;
  v56.n128_u64[1] = HIDWORD(v61);
  __n128 v63 = v56;
  v56.n128_u64[0] = v62;
  v56.n128_u64[1] = HIDWORD(v62);
  *(__n128 *)(a2 + 528) = v63;
  *(__n128 *)(a2 + 544) = v56;
  v63.n128_u64[0] = *((void *)a1 + 18);
  uint64_t v64 = *((void *)a1 + 19);
  v56.n128_u64[0] = v63.n128_u32[0];
  v56.n128_u64[1] = v63.n128_u32[1];
  __n128 result = v56;
  v56.n128_u64[0] = v64;
  v56.n128_u64[1] = HIDWORD(v64);
  *(__n128 *)(a2 + 560) = result;
  *(__n128 *)(a2 + 576) = v56;
  *(void *)(a2 + 592) = *((unsigned int *)a1 + 40);
  *(void *)(a2 + 600) = a1[164];
  *(void *)(a2 + 608) = *((unsigned int *)a1 + 42);
  *(void *)(a2 + 616) = a1[172];
  uint64_t v66 = a1[176];
  *(void *)(a2 + 1256) = 0x7FFFLL;
  *(void *)(a2 + 624) = v66;
  return result;
}

float sub_1CBE7EFBC(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = v16;
  uint64_t v26 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v25;
  *(void *)(a2 + 192) = v26;
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = a1[53];
  *(void *)(a2 + 216) = a1[52];
  *(void *)(a2 + 224) = v28;
  uint64_t v29 = a1[54];
  uint64_t v30 = a1[55];
  uint64_t v31 = v13 | 0x7F800000;
  *(void *)(a2 + 1248) = v13 | 0x7F800000;
  *(void *)(a2 + 232) = v29;
  *(void *)(a2 + 240) = v30;
  unsigned int v32 = *((_DWORD *)a1 + 16);
  if (!v32)
  {
    uint64_t v33 = a1[56];
    uint64_t v31 = v13 | 0xFF800000;
    *(void *)(a2 + 1248) = v13 | 0xFF800000;
    *(void *)(a2 + 248) = v33;
    unsigned int v32 = *((_DWORD *)a1 + 16);
  }
  if (v32 == 1)
  {
    uint64_t v34 = *((unsigned __int16 *)a1 + 28);
    v31 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v31;
    *(void *)(a2 + 256) = v34;
    unsigned int v32 = *((_DWORD *)a1 + 16);
  }
  if (v32 == 2)
  {
    uint64_t v35 = *((unsigned __int16 *)a1 + 28);
    v31 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v31;
    *(void *)(a2 + 264) = v35;
    unsigned int v32 = *((_DWORD *)a1 + 16);
  }
  if (v32 == 3)
  {
    uint64_t v36 = *((unsigned __int16 *)a1 + 28);
    v31 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v31;
    *(void *)(a2 + 272) = v36;
    unsigned int v32 = *((_DWORD *)a1 + 16);
  }
  if (v32 == 4)
  {
    uint64_t v37 = *((unsigned int *)a1 + 14);
    v31 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v31;
    *(void *)(a2 + 280) = v37;
    unsigned int v32 = *((_DWORD *)a1 + 16);
  }
  if (v32 == 5)
  {
    uint64_t v38 = *((unsigned __int16 *)a1 + 28);
    v31 |= 0x1000000000uLL;
    *(void *)(a2 + 1248) = v31;
    *(void *)(a2 + 288) = v38;
    unsigned int v32 = *((_DWORD *)a1 + 16);
  }
  if (v32 == 6)
  {
    uint64_t v39 = a1[56];
    v31 |= 0x2000000000uLL;
    *(void *)(a2 + 1248) = v31;
    *(void *)(a2 + 296) = v39;
    unsigned int v32 = *((_DWORD *)a1 + 16);
  }
  if (v32 == 7)
  {
    uint64_t v40 = *((unsigned int *)a1 + 14);
    *(void *)(a2 + 1248) = v31 | 0x4000000000;
    *(void *)(a2 + 304) = v40;
    unsigned int v32 = *((_DWORD *)a1 + 16);
    if (v32 == 7)
    {
      v31 |= 0xC000000000uLL;
      *(void *)(a2 + 312) = a1[60];
    }
    else
    {
      v31 |= 0x4000000000uLL;
    }
  }
  uint64_t v41 = v32;
  uint64_t v42 = *((unsigned int *)a1 + 17);
  *(void *)(a2 + 320) = v41;
  *(void *)(a2 + 328) = v42;
  uint64_t v43 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 336) = a1[72];
  *(void *)(a2 + 344) = v43;
  uint64_t v44 = a1[81];
  *(void *)(a2 + 352) = a1[80];
  *(void *)(a2 + 360) = v44;
  uint64_t v45 = a1[82];
  uint64_t v46 = a1[83];
  uint64_t v47 = v31 | 0xFF0000000000;
  *(void *)(a2 + 1248) = v31 | 0xFF0000000000;
  *(void *)(a2 + 368) = v45;
  *(void *)(a2 + 376) = v46;
  unsigned int v48 = *((_DWORD *)a1 + 23);
  if (!v48)
  {
    uint64_t v49 = a1[84];
    uint64_t v47 = v31 | 0x1FF0000000000;
    *(void *)(a2 + 1248) = v31 | 0x1FF0000000000;
    *(void *)(a2 + 384) = v49;
    unsigned int v48 = *((_DWORD *)a1 + 23);
  }
  if (v48 == 1)
  {
    uint64_t v50 = *((unsigned __int16 *)a1 + 42);
    v47 |= 0x2000000000000uLL;
    *(void *)(a2 + 1248) = v47;
    *(void *)(a2 + 392) = v50;
    unsigned int v48 = *((_DWORD *)a1 + 23);
  }
  if (v48 == 2)
  {
    uint64_t v51 = *((unsigned __int16 *)a1 + 42);
    v47 |= 0x4000000000000uLL;
    *(void *)(a2 + 1248) = v47;
    *(void *)(a2 + 400) = v51;
    unsigned int v48 = *((_DWORD *)a1 + 23);
  }
  if (v48 == 3)
  {
    uint64_t v52 = *((unsigned __int16 *)a1 + 42);
    v47 |= 0x8000000000000uLL;
    *(void *)(a2 + 1248) = v47;
    *(void *)(a2 + 408) = v52;
    unsigned int v48 = *((_DWORD *)a1 + 23);
  }
  if (v48 == 4)
  {
    uint64_t v53 = *((unsigned int *)a1 + 21);
    v47 |= 0x10000000000000uLL;
    *(void *)(a2 + 1248) = v47;
    *(void *)(a2 + 416) = v53;
    unsigned int v48 = *((_DWORD *)a1 + 23);
  }
  if (v48 == 5)
  {
    uint64_t v54 = *((unsigned __int16 *)a1 + 42);
    v47 |= 0x20000000000000uLL;
    *(void *)(a2 + 1248) = v47;
    *(void *)(a2 + 424) = v54;
    unsigned int v48 = *((_DWORD *)a1 + 23);
  }
  if (v48 == 6)
  {
    uint64_t v55 = a1[84];
    v47 |= 0x40000000000000uLL;
    *(void *)(a2 + 1248) = v47;
    *(void *)(a2 + 432) = v55;
    unsigned int v48 = *((_DWORD *)a1 + 23);
  }
  if (v48 == 7)
  {
    uint64_t v56 = *((unsigned int *)a1 + 21);
    *(void *)(a2 + 1248) = v47 | 0x80000000000000;
    *(void *)(a2 + 440) = v56;
    unsigned int v48 = *((_DWORD *)a1 + 23);
    if (v48 == 7)
    {
      v47 |= 0x180000000000000uLL;
      *(void *)(a2 + 448) = a1[88];
    }
    else
    {
      v47 |= 0x80000000000000uLL;
    }
  }
  uint64_t v57 = v48;
  uint64_t v58 = *((unsigned int *)a1 + 24);
  *(void *)(a2 + 456) = v57;
  *(void *)(a2 + 464) = v58;
  uint64_t v59 = *((unsigned int *)a1 + 26);
  *(void *)(a2 + 472) = a1[100];
  *(void *)(a2 + 480) = v59;
  uint64_t v60 = a1[109];
  *(void *)(a2 + 488) = a1[108];
  *(void *)(a2 + 496) = v60;
  uint64_t v61 = a1[110];
  *(void *)(a2 + 1248) = v47 | 0xFE00000000000000;
  uint64_t v62 = a1[111];
  uint64_t v63 = 1;
  *(void *)(a2 + 1256) = 1;
  *(void *)(a2 + 504) = v61;
  *(void *)(a2 + 512) = v62;
  unsigned int v64 = *((_DWORD *)a1 + 30);
  if (!v64)
  {
    uint64_t v65 = a1[112];
    uint64_t v63 = 3;
    *(void *)(a2 + 1256) = 3;
    *(void *)(a2 + 520) = v65;
    unsigned int v64 = *((_DWORD *)a1 + 30);
  }
  if (v64 == 1)
  {
    uint64_t v66 = *((unsigned __int16 *)a1 + 56);
    v63 |= 4uLL;
    *(void *)(a2 + 1256) = v63;
    *(void *)(a2 + 528) = v66;
    unsigned int v64 = *((_DWORD *)a1 + 30);
  }
  if (v64 == 2)
  {
    uint64_t v67 = *((unsigned __int16 *)a1 + 56);
    v63 |= 8uLL;
    *(void *)(a2 + 1256) = v63;
    *(void *)(a2 + 536) = v67;
    unsigned int v64 = *((_DWORD *)a1 + 30);
  }
  if (v64 == 3)
  {
    uint64_t v68 = *((unsigned __int16 *)a1 + 56);
    v63 |= 0x10uLL;
    *(void *)(a2 + 1256) = v63;
    *(void *)(a2 + 544) = v68;
    unsigned int v64 = *((_DWORD *)a1 + 30);
  }
  if (v64 == 4)
  {
    uint64_t v69 = *((unsigned int *)a1 + 28);
    v63 |= 0x20uLL;
    *(void *)(a2 + 1256) = v63;
    *(void *)(a2 + 552) = v69;
    unsigned int v64 = *((_DWORD *)a1 + 30);
  }
  if (v64 == 5)
  {
    uint64_t v70 = *((unsigned __int16 *)a1 + 56);
    v63 |= 0x40uLL;
    *(void *)(a2 + 1256) = v63;
    *(void *)(a2 + 560) = v70;
    unsigned int v64 = *((_DWORD *)a1 + 30);
  }
  if (v64 == 6)
  {
    uint64_t v71 = a1[112];
    v63 |= 0x80uLL;
    *(void *)(a2 + 1256) = v63;
    *(void *)(a2 + 568) = v71;
    unsigned int v64 = *((_DWORD *)a1 + 30);
  }
  if (v64 == 7)
  {
    uint64_t v72 = *((unsigned int *)a1 + 28);
    *(void *)(a2 + 1256) = v63 | 0x100;
    *(void *)(a2 + 576) = v72;
    unsigned int v64 = *((_DWORD *)a1 + 30);
    if (v64 == 7)
    {
      v63 |= 0x300uLL;
      *(void *)(a2 + 584) = a1[116];
      unsigned int v64 = 7;
    }
    else
    {
      v63 |= 0x100uLL;
    }
  }
  *(void *)(a2 + 592) = v64;
  *(void *)(a2 + 600) = *((unsigned int *)a1 + 31);
  *(void *)(a2 + 608) = a1[128];
  *(void *)(a2 + 616) = *((unsigned int *)a1 + 33);
  *(void *)(a2 + 624) = a1[136];
  *(void *)(a2 + 632) = a1[137];
  *(void *)(a2 + 640) = a1[138];
  *(void *)(a2 + 648) = a1[139];
  uint64_t v73 = *(void *)(a1 + 140);
  *(void *)&long long v74 = v73;
  *((void *)&v74 + 1) = HIDWORD(v73);
  *(_OWORD *)(a2 + 656) = v74;
  *(void *)(a2 + 672) = a1[148];
  *(void *)(a2 + 680) = a1[149];
  *(void *)(a2 + 688) = a1[150];
  *(void *)(a2 + 696) = a1[151];
  *(void *)(a2 + 704) = a1[152];
  *(void *)(a2 + 712) = a1[153];
  *(void *)(a2 + 720) = a1[154];
  *(void *)(a2 + 728) = a1[155];
  uint64_t v75 = *(void *)(a1 + 156);
  *(void *)&long long v74 = v75;
  *((void *)&v74 + 1) = HIDWORD(v75);
  long long v76 = v74;
  uint64_t v77 = *(void *)(a1 + 164);
  *(void *)&long long v74 = v77;
  *((void *)&v74 + 1) = HIDWORD(v77);
  *(_OWORD *)(a2 + 736) = v76;
  *(_OWORD *)(a2 + 752) = v74;
  *(void *)&long long v76 = *(void *)(a1 + 172);
  *(void *)&long long v74 = v76;
  *((void *)&v74 + 1) = DWORD1(v76);
  long long v78 = v74;
  uint64_t v79 = *(void *)(a1 + 180);
  *(void *)&long long v74 = v79;
  *((void *)&v74 + 1) = HIDWORD(v79);
  *(_OWORD *)(a2 + 768) = v78;
  *(_OWORD *)(a2 + 784) = v74;
  uint64_t v80 = *(void *)(a1 + 188);
  *(void *)&long long v74 = v80;
  *((void *)&v74 + 1) = HIDWORD(v80);
  *(_OWORD *)(a2 + 800) = v74;
  *(void *)(a2 + 816) = a1[196];
  uint64_t v81 = *((unsigned int *)a1 + 50);
  *(void *)(a2 + 1256) = v63 | 0xFFFFFFFC00;
  *(void *)(a2 + 824) = v81;
  return *(float *)&v80;
}

__n128 sub_1CBE7F678(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = v16;
  uint64_t v26 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v25;
  *(void *)(a2 + 192) = v26;
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = a1[53];
  *(void *)(a2 + 216) = a1[52];
  *(void *)(a2 + 224) = v28;
  uint64_t v29 = a1[54];
  uint64_t v30 = a1[55];
  uint64_t v31 = v13 | 0x7F800000;
  *(void *)(a2 + 1248) = v13 | 0x7F800000;
  *(void *)(a2 + 232) = v29;
  *(void *)(a2 + 240) = v30;
  unsigned int v32 = *((_DWORD *)a1 + 16);
  if (!v32)
  {
    uint64_t v33 = a1[56];
    uint64_t v31 = v13 | 0xFF800000;
    *(void *)(a2 + 1248) = v13 | 0xFF800000;
    *(void *)(a2 + 248) = v33;
    unsigned int v32 = *((_DWORD *)a1 + 16);
  }
  if (v32 == 1)
  {
    uint64_t v34 = *((unsigned __int16 *)a1 + 28);
    v31 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v31;
    *(void *)(a2 + 256) = v34;
    unsigned int v32 = *((_DWORD *)a1 + 16);
  }
  if (v32 == 2)
  {
    uint64_t v35 = *((unsigned __int16 *)a1 + 28);
    v31 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v31;
    *(void *)(a2 + 264) = v35;
    unsigned int v32 = *((_DWORD *)a1 + 16);
  }
  if (v32 == 3)
  {
    uint64_t v36 = *((unsigned __int16 *)a1 + 28);
    v31 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v31;
    *(void *)(a2 + 272) = v36;
    unsigned int v32 = *((_DWORD *)a1 + 16);
  }
  if (v32 == 4)
  {
    uint64_t v37 = *((unsigned int *)a1 + 14);
    v31 |= 0x800000000uLL;
    *(void *)(a2 + 1248) = v31;
    *(void *)(a2 + 280) = v37;
    unsigned int v32 = *((_DWORD *)a1 + 16);
  }
  if (v32 == 5)
  {
    uint64_t v38 = *((unsigned __int16 *)a1 + 28);
    v31 |= 0x1000000000uLL;
    *(void *)(a2 + 1248) = v31;
    *(void *)(a2 + 288) = v38;
    unsigned int v32 = *((_DWORD *)a1 + 16);
  }
  if (v32 == 6)
  {
    uint64_t v39 = a1[56];
    v31 |= 0x2000000000uLL;
    *(void *)(a2 + 1248) = v31;
    *(void *)(a2 + 296) = v39;
    unsigned int v32 = *((_DWORD *)a1 + 16);
  }
  if (v32 == 7)
  {
    uint64_t v40 = *((unsigned int *)a1 + 14);
    *(void *)(a2 + 1248) = v31 | 0x4000000000;
    *(void *)(a2 + 304) = v40;
    unsigned int v32 = *((_DWORD *)a1 + 16);
    if (v32 == 7)
    {
      v31 |= 0xC000000000uLL;
      *(void *)(a2 + 312) = a1[60];
      unsigned int v32 = 7;
    }
    else
    {
      v31 |= 0x4000000000uLL;
    }
  }
  uint64_t v41 = *((unsigned int *)a1 + 17);
  *(void *)(a2 + 320) = v32;
  *(void *)(a2 + 328) = v41;
  uint64_t v42 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 336) = a1[72];
  *(void *)(a2 + 344) = v42;
  uint64_t v43 = a1[81];
  *(void *)(a2 + 352) = a1[80];
  *(void *)(a2 + 360) = v43;
  uint64_t v44 = a1[83];
  *(void *)(a2 + 368) = a1[82];
  *(void *)(a2 + 376) = v44;
  uint64_t v45 = *(void *)(a1 + 84);
  v46.n128_u64[0] = v45;
  v46.n128_u64[1] = HIDWORD(v45);
  *(__n128 *)(a2 + 384) = v46;
  uint64_t v47 = a1[93];
  *(void *)(a2 + 400) = a1[92];
  *(void *)(a2 + 408) = v47;
  uint64_t v48 = a1[95];
  *(void *)(a2 + 416) = a1[94];
  *(void *)(a2 + 424) = v48;
  uint64_t v49 = a1[97];
  *(void *)(a2 + 432) = a1[96];
  *(void *)(a2 + 440) = v49;
  uint64_t v50 = a1[99];
  *(void *)(a2 + 448) = a1[98];
  *(void *)(a2 + 456) = v50;
  uint64_t v51 = *((unsigned int *)a1 + 26);
  *(void *)(a2 + 464) = a1[100];
  *(void *)(a2 + 472) = v51;
  *(void *)(a2 + 480) = a1[108];
  uint64_t v52 = *((void *)a1 + 14);
  uint64_t v53 = *((void *)a1 + 15);
  v46.n128_u64[0] = v52;
  v46.n128_u64[1] = HIDWORD(v52);
  __n128 v54 = v46;
  *(void *)(a2 + 1248) = v31 | 0xFFFFFF0000000000;
  v46.n128_u64[0] = v53;
  v46.n128_u64[1] = HIDWORD(v53);
  *(__n128 *)(a2 + 488) = v54;
  *(__n128 *)(a2 + 504) = v46;
  v54.n128_u64[0] = *((void *)a1 + 16);
  uint64_t v55 = *((void *)a1 + 17);
  v46.n128_u64[0] = v54.n128_u32[0];
  v46.n128_u64[1] = v54.n128_u32[1];
  __n128 result = v46;
  v46.n128_u64[0] = v55;
  v46.n128_u64[1] = HIDWORD(v55);
  *(__n128 *)(a2 + 520) = result;
  *(__n128 *)(a2 + 536) = v46;
  uint64_t v57 = a1[144];
  *(void *)(a2 + 1256) = 63;
  *(void *)(a2 + 552) = v57;
  return result;
}

__n128 sub_1CBE7FAA8(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = *(void *)(a1 + 20);
  *(void *)&long long v14 = v13;
  *((void *)&v14 + 1) = HIDWORD(v13);
  v15.i64[0] = *((__int16 *)a1 + 14);
  v15.i64[1] = *((__int16 *)a1 + 15);
  int8x16_t v16 = (int8x16_t)vcltzq_s64(v15);
  *(_OWORD *)(a2 + 96) = v14;
  *(int8x16_t *)(a2 + 112) = vorrq_s8(vandq_s8(vandq_s8((int8x16_t)v15, (int8x16_t)vdupq_n_s64(0x7FFuLL)), v16), vbicq_s8((int8x16_t)v15, v16));
  uint64_t v17 = *((void *)a1 + 4);
  *(void *)&long long v14 = v17;
  *((void *)&v14 + 1) = HIDWORD(v17);
  *(_OWORD *)(a2 + 128) = v14;
  uint64_t v18 = a1[41];
  *(void *)(a2 + 144) = a1[40];
  *(void *)(a2 + 152) = v18;
  uint64_t v19 = a1[43];
  *(void *)(a2 + 160) = a1[42];
  *(void *)(a2 + 168) = v19;
  uint64_t v20 = a1[45];
  *(void *)(a2 + 176) = a1[44];
  *(void *)(a2 + 184) = v20;
  uint64_t v21 = a1[47];
  *(void *)(a2 + 192) = a1[46];
  *(void *)(a2 + 200) = v21;
  uint64_t v22 = a1[48];
  uint64_t v23 = v3 | 0x7FFFE00;
  *(void *)(a2 + 1248) = v3 | 0x7FFFE00;
  *(void *)(a2 + 208) = v22;
  unsigned int v24 = *((_DWORD *)a1 + 15);
  if (!v24)
  {
    uint64_t v25 = a1[52];
    uint64_t v23 = v3 | 0xFFFFE00;
    *(void *)(a2 + 1248) = v3 | 0xFFFFE00;
    *(void *)(a2 + 216) = v25;
    unsigned int v24 = *((_DWORD *)a1 + 15);
  }
  if (v24 == 1)
  {
    uint64_t v26 = *((unsigned __int16 *)a1 + 26);
    v23 |= 0x10000000uLL;
    *(void *)(a2 + 1248) = v23;
    *(void *)(a2 + 224) = v26;
    unsigned int v24 = *((_DWORD *)a1 + 15);
  }
  if (v24 == 2)
  {
    uint64_t v27 = *((unsigned __int16 *)a1 + 26);
    v23 |= 0x20000000uLL;
    *(void *)(a2 + 1248) = v23;
    *(void *)(a2 + 232) = v27;
    unsigned int v24 = *((_DWORD *)a1 + 15);
  }
  if (v24 == 3)
  {
    uint64_t v28 = *((unsigned __int16 *)a1 + 26);
    v23 |= 0x40000000uLL;
    *(void *)(a2 + 1248) = v23;
    *(void *)(a2 + 240) = v28;
    unsigned int v24 = *((_DWORD *)a1 + 15);
  }
  if (v24 == 4)
  {
    uint64_t v29 = *((unsigned int *)a1 + 13);
    v23 |= 0x80000000uLL;
    *(void *)(a2 + 1248) = v23;
    *(void *)(a2 + 248) = v29;
    unsigned int v24 = *((_DWORD *)a1 + 15);
  }
  if (v24 == 5)
  {
    uint64_t v30 = *((unsigned __int16 *)a1 + 26);
    v23 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v23;
    *(void *)(a2 + 256) = v30;
    unsigned int v24 = *((_DWORD *)a1 + 15);
  }
  if (v24 == 6)
  {
    uint64_t v31 = a1[52];
    v23 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v23;
    *(void *)(a2 + 264) = v31;
    unsigned int v24 = *((_DWORD *)a1 + 15);
  }
  if (v24 == 7)
  {
    uint64_t v32 = *((unsigned int *)a1 + 13);
    *(void *)(a2 + 1248) = v23 | 0x400000000;
    *(void *)(a2 + 272) = v32;
    unsigned int v24 = *((_DWORD *)a1 + 15);
    if (v24 == 7)
    {
      v23 |= 0xC00000000uLL;
      *(void *)(a2 + 280) = a1[56];
    }
    else
    {
      v23 |= 0x400000000uLL;
    }
  }
  uint64_t v33 = v24;
  uint64_t v34 = *((unsigned int *)a1 + 16);
  *(void *)(a2 + 288) = v33;
  *(void *)(a2 + 296) = v34;
  uint64_t v35 = *((unsigned int *)a1 + 18);
  *(void *)(a2 + 304) = a1[68];
  *(void *)(a2 + 312) = v35;
  uint64_t v36 = a1[76];
  uint64_t v37 = v23 | 0x1F000000000;
  *(void *)(a2 + 1248) = v23 | 0x1F000000000;
  *(void *)(a2 + 320) = v36;
  unsigned int v38 = *((_DWORD *)a1 + 22);
  if (!v38)
  {
    uint64_t v39 = a1[80];
    uint64_t v37 = v23 | 0x3F000000000;
    *(void *)(a2 + 1248) = v23 | 0x3F000000000;
    *(void *)(a2 + 328) = v39;
    unsigned int v38 = *((_DWORD *)a1 + 22);
  }
  if (v38 == 1)
  {
    uint64_t v40 = *((unsigned __int16 *)a1 + 40);
    v37 |= 0x40000000000uLL;
    *(void *)(a2 + 1248) = v37;
    *(void *)(a2 + 336) = v40;
    unsigned int v38 = *((_DWORD *)a1 + 22);
  }
  if (v38 == 2)
  {
    uint64_t v41 = *((unsigned __int16 *)a1 + 40);
    v37 |= 0x80000000000uLL;
    *(void *)(a2 + 1248) = v37;
    *(void *)(a2 + 344) = v41;
    unsigned int v38 = *((_DWORD *)a1 + 22);
  }
  if (v38 == 3)
  {
    uint64_t v42 = *((unsigned __int16 *)a1 + 40);
    v37 |= 0x100000000000uLL;
    *(void *)(a2 + 1248) = v37;
    *(void *)(a2 + 352) = v42;
    unsigned int v38 = *((_DWORD *)a1 + 22);
  }
  if (v38 == 4)
  {
    uint64_t v43 = *((unsigned int *)a1 + 20);
    v37 |= 0x200000000000uLL;
    *(void *)(a2 + 1248) = v37;
    *(void *)(a2 + 360) = v43;
    unsigned int v38 = *((_DWORD *)a1 + 22);
  }
  if (v38 == 5)
  {
    uint64_t v44 = *((unsigned __int16 *)a1 + 40);
    v37 |= 0x400000000000uLL;
    *(void *)(a2 + 1248) = v37;
    *(void *)(a2 + 368) = v44;
    unsigned int v38 = *((_DWORD *)a1 + 22);
  }
  if (v38 == 6)
  {
    uint64_t v45 = a1[80];
    v37 |= 0x800000000000uLL;
    *(void *)(a2 + 1248) = v37;
    *(void *)(a2 + 376) = v45;
    unsigned int v38 = *((_DWORD *)a1 + 22);
  }
  if (v38 == 7)
  {
    uint64_t v46 = *((unsigned int *)a1 + 20);
    *(void *)(a2 + 1248) = v37 | 0x1000000000000;
    *(void *)(a2 + 384) = v46;
    unsigned int v38 = *((_DWORD *)a1 + 22);
    if (v38 == 7)
    {
      v37 |= 0x3000000000000uLL;
      *(void *)(a2 + 392) = a1[84];
    }
    else
    {
      v37 |= 0x1000000000000uLL;
    }
  }
  uint64_t v47 = v38;
  uint64_t v48 = *((unsigned int *)a1 + 23);
  *(void *)(a2 + 400) = v47;
  *(void *)(a2 + 408) = v48;
  uint64_t v49 = *((unsigned int *)a1 + 25);
  *(void *)(a2 + 416) = a1[96];
  *(void *)(a2 + 424) = v49;
  uint64_t v50 = a1[104];
  uint64_t v51 = *((unsigned __int16 *)a1 + 54);
  uint64_t v52 = v37 | 0xFC000000000000;
  *(void *)(a2 + 1248) = v37 | 0xFC000000000000;
  *(void *)(a2 + 432) = v50;
  *(void *)(a2 + 440) = v51;
  unsigned int v53 = *((_DWORD *)a1 + 30);
  if (!v53)
  {
    uint64_t v54 = a1[112];
    uint64_t v52 = v37 | 0x1FC000000000000;
    *(void *)(a2 + 1248) = v37 | 0x1FC000000000000;
    *(void *)(a2 + 448) = v54;
    unsigned int v53 = *((_DWORD *)a1 + 30);
  }
  if (v53 == 1)
  {
    uint64_t v55 = *((unsigned __int16 *)a1 + 56);
    v52 |= 0x200000000000000uLL;
    *(void *)(a2 + 1248) = v52;
    *(void *)(a2 + 456) = v55;
    unsigned int v53 = *((_DWORD *)a1 + 30);
  }
  if (v53 == 2)
  {
    uint64_t v56 = *((unsigned __int16 *)a1 + 56);
    v52 |= 0x400000000000000uLL;
    *(void *)(a2 + 1248) = v52;
    *(void *)(a2 + 464) = v56;
    unsigned int v53 = *((_DWORD *)a1 + 30);
  }
  if (v53 == 3)
  {
    uint64_t v57 = *((unsigned __int16 *)a1 + 56);
    v52 |= 0x800000000000000uLL;
    *(void *)(a2 + 1248) = v52;
    *(void *)(a2 + 472) = v57;
    unsigned int v53 = *((_DWORD *)a1 + 30);
  }
  if (v53 == 4)
  {
    uint64_t v58 = *((unsigned int *)a1 + 28);
    v52 |= 0x1000000000000000uLL;
    *(void *)(a2 + 1248) = v52;
    *(void *)(a2 + 480) = v58;
    unsigned int v53 = *((_DWORD *)a1 + 30);
  }
  if (v53 == 5)
  {
    uint64_t v59 = *((unsigned __int16 *)a1 + 56);
    v52 |= 0x2000000000000000uLL;
    *(void *)(a2 + 1248) = v52;
    *(void *)(a2 + 488) = v59;
    unsigned int v53 = *((_DWORD *)a1 + 30);
  }
  if (v53 == 6)
  {
    uint64_t v60 = a1[112];
    v52 |= 0x4000000000000000uLL;
    *(void *)(a2 + 1248) = v52;
    *(void *)(a2 + 496) = v60;
    unsigned int v53 = *((_DWORD *)a1 + 30);
  }
  if (v53 == 7
    && (uint64_t v61 = *((unsigned int *)a1 + 28),
        *(void *)(a2 + 1248) = v52 | 0x8000000000000000,
        *(void *)(a2 + 504) = v61,
        unsigned int v53 = *((_DWORD *)a1 + 30),
        v53 == 7))
  {
    *(void *)(a2 + 512) = a1[116];
    uint64_t v62 = 0x7FFFLL;
  }
  else
  {
    uint64_t v62 = 32766;
  }
  *(void *)(a2 + 520) = v53;
  *(void *)(a2 + 528) = *((unsigned int *)a1 + 31);
  *(void *)(a2 + 536) = a1[128];
  *(void *)(a2 + 544) = *((unsigned int *)a1 + 33);
  *(void *)(a2 + 552) = a1[136];
  uint64_t v63 = *(void *)(a1 + 140);
  v64.n128_u64[0] = v63;
  v64.n128_u64[1] = HIDWORD(v63);
  __n128 v65 = v64;
  uint64_t v66 = *(void *)(a1 + 148);
  v64.n128_u64[0] = v66;
  v64.n128_u64[1] = HIDWORD(v66);
  *(__n128 *)(a2 + 560) = v65;
  *(__n128 *)(a2 + 576) = v64;
  v65.n128_u64[0] = *(void *)(a1 + 156);
  v64.n128_u64[0] = v65.n128_u32[0];
  v64.n128_u64[1] = v65.n128_u32[1];
  __n128 result = v64;
  uint64_t v68 = *(void *)(a1 + 164);
  v64.n128_u64[0] = v68;
  v64.n128_u64[1] = HIDWORD(v68);
  *(__n128 *)(a2 + 592) = result;
  *(__n128 *)(a2 + 608) = v64;
  uint64_t v69 = a1[172];
  *(void *)(a2 + 1256) = v62;
  *(void *)(a2 + 624) = v69;
  return result;
}

float sub_1CBE7FFFC(unsigned __int16 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(void *)(a2 + 1256) = 0;
  *(void *)a2 = *a1;
  uint64_t v2 = *(void *)(a1 + 2);
  *(void *)&long long v3 = v2;
  *((void *)&v3 + 1) = HIDWORD(v2);
  *(_OWORD *)(a2 + 8) = v3;
  uint64_t v4 = *((unsigned __int8 *)a1 + 13);
  *(void *)(a2 + 24) = *((unsigned __int8 *)a1 + 12);
  *(void *)(a2 + 32) = v4;
  uint64_t v5 = *((unsigned __int8 *)a1 + 15);
  *(void *)(a2 + 40) = *((unsigned __int8 *)a1 + 14);
  *(void *)(a2 + 48) = v5;
  uint64_t v6 = *((unsigned __int8 *)a1 + 17);
  *(void *)(a2 + 56) = *((unsigned __int8 *)a1 + 16);
  *(void *)(a2 + 64) = v6;
  uint64_t v7 = *((unsigned __int8 *)a1 + 19);
  *(void *)(a2 + 72) = *((unsigned __int8 *)a1 + 18);
  *(void *)(a2 + 80) = v7;
  uint64_t v8 = *(void *)(a1 + 10);
  *(void *)&long long v3 = v8;
  *((void *)&v3 + 1) = HIDWORD(v8);
  *(_OWORD *)(a2 + 88) = v3;
  uint64_t v9 = *(void *)(a1 + 14);
  *(void *)&long long v3 = v9;
  *((void *)&v3 + 1) = HIDWORD(v9);
  *(_OWORD *)(a2 + 104) = v3;
  uint64_t v10 = *(void *)(a1 + 18);
  *(void *)&long long v3 = v10;
  *((void *)&v3 + 1) = HIDWORD(v10);
  *(_OWORD *)(a2 + 120) = v3;
  uint64_t v11 = *(void *)(a1 + 22);
  *(void *)&long long v3 = v11;
  *((void *)&v3 + 1) = HIDWORD(v11);
  *(_OWORD *)(a2 + 136) = v3;
  uint64_t v12 = *((unsigned __int8 *)a1 + 52);
  *(void *)(a2 + 1248) = 0xFFFFFLL;
  *(void *)(a2 + 152) = v12;
  return *(float *)&v11;
}

__n128 sub_1CBE8008C(unsigned __int16 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(void *)(a2 + 1256) = 0;
  *(void *)a2 = *a1;
  uint64_t v2 = *(void *)(a1 + 2);
  v3.n128_u64[0] = v2;
  v3.n128_u64[1] = HIDWORD(v2);
  *(__n128 *)(a2 + 8) = v3;
  uint64_t v4 = *((unsigned __int8 *)a1 + 16);
  *(void *)(a2 + 24) = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 32) = v4;
  uint64_t v5 = *((unsigned __int8 *)a1 + 18);
  *(void *)(a2 + 40) = *((unsigned __int8 *)a1 + 17);
  *(void *)(a2 + 48) = v5;
  uint64_t v6 = *((unsigned __int8 *)a1 + 20);
  *(void *)(a2 + 56) = *((unsigned __int8 *)a1 + 19);
  *(void *)(a2 + 64) = v6;
  uint64_t v7 = *((unsigned __int8 *)a1 + 22);
  *(void *)(a2 + 72) = *((unsigned __int8 *)a1 + 21);
  *(void *)(a2 + 80) = v7;
  *(void *)(a2 + 88) = *((unsigned __int8 *)a1 + 23);
  uint64_t v8 = *((void *)a1 + 3);
  uint64_t v9 = *((void *)a1 + 4);
  v3.n128_u64[0] = v8;
  v3.n128_u64[1] = HIDWORD(v8);
  __n128 v10 = v3;
  v3.n128_u64[0] = v9;
  v3.n128_u64[1] = HIDWORD(v9);
  *(__n128 *)(a2 + 96) = v10;
  *(__n128 *)(a2 + 112) = v3;
  v10.n128_u64[0] = *((void *)a1 + 5);
  uint64_t v11 = *((void *)a1 + 6);
  v3.n128_u64[0] = v10.n128_u32[0];
  v3.n128_u64[1] = v10.n128_u32[1];
  __n128 result = v3;
  v3.n128_u64[0] = v11;
  v3.n128_u64[1] = HIDWORD(v11);
  *(__n128 *)(a2 + 128) = result;
  *(__n128 *)(a2 + 144) = v3;
  *(void *)(a2 + 1248) = 0x3FFFFFLL;
  uint64_t v13 = *((unsigned __int8 *)a1 + 57);
  *(void *)(a2 + 160) = *((unsigned __int8 *)a1 + 56);
  *(void *)(a2 + 168) = v13;
  return result;
}

__n128 sub_1CBE80118(unsigned __int8 *a1, uint64_t a2)
{
  *(void *)(a2 + 1264) = 0;
  *(_OWORD *)(a2 + 1248) = 0u;
  unsigned int v2 = *((_DWORD *)a1 + 2);
  if (v2)
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *a1;
    uint64_t v3 = 1;
    *(void *)(a2 + 1248) = 1;
    *(void *)a2 = v4;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 1)
  {
    uint64_t v5 = *(unsigned __int16 *)a1;
    v3 |= 2uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 8) = v5;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 2)
  {
    uint64_t v6 = *(unsigned __int16 *)a1;
    v3 |= 4uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 16) = v6;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 3)
  {
    uint64_t v7 = *(unsigned __int16 *)a1;
    v3 |= 8uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 24) = v7;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 4)
  {
    uint64_t v8 = *(unsigned int *)a1;
    v3 |= 0x10uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 32) = v8;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 5)
  {
    uint64_t v9 = *(unsigned __int16 *)a1;
    v3 |= 0x20uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 40) = v9;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 6)
  {
    uint64_t v10 = *a1;
    v3 |= 0x40uLL;
    *(void *)(a2 + 1248) = v3;
    *(void *)(a2 + 48) = v10;
    unsigned int v2 = *((_DWORD *)a1 + 2);
  }
  if (v2 == 7)
  {
    uint64_t v11 = *(unsigned int *)a1;
    *(void *)(a2 + 1248) = v3 | 0x80;
    *(void *)(a2 + 56) = v11;
    unsigned int v2 = *((_DWORD *)a1 + 2);
    if (v2 == 7)
    {
      v3 |= 0x180uLL;
      *(void *)(a2 + 64) = a1[4];
      unsigned int v2 = 7;
    }
    else
    {
      v3 |= 0x80uLL;
    }
  }
  uint64_t v12 = *((unsigned int *)a1 + 3);
  *(void *)(a2 + 72) = v2;
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = a1[16];
  uint64_t v13 = v3 | 0x3E00;
  *(void *)(a2 + 1248) = v3 | 0x3E00;
  uint64_t v14 = *(void *)(a1 + 20);
  *(void *)&long long v15 = v14;
  *((void *)&v15 + 1) = HIDWORD(v14);
  *(_OWORD *)(a2 + 96) = v15;
  unsigned int v16 = *((_DWORD *)a1 + 9);
  if (!v16)
  {
    uint64_t v17 = a1[28];
    uint64_t v13 = v3 | 0x7E00;
    *(void *)(a2 + 1248) = v3 | 0x7E00;
    *(void *)(a2 + 112) = v17;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 1)
  {
    uint64_t v18 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x8000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 120) = v18;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 2)
  {
    uint64_t v19 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x10000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 128) = v19;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 3)
  {
    uint64_t v20 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x20000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 136) = v20;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 4)
  {
    uint64_t v21 = *((unsigned int *)a1 + 7);
    v13 |= 0x40000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 144) = v21;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 5)
  {
    uint64_t v22 = *((unsigned __int16 *)a1 + 14);
    v13 |= 0x80000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 152) = v22;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 6)
  {
    uint64_t v23 = a1[28];
    v13 |= 0x100000uLL;
    *(void *)(a2 + 1248) = v13;
    *(void *)(a2 + 160) = v23;
    unsigned int v16 = *((_DWORD *)a1 + 9);
  }
  if (v16 == 7)
  {
    uint64_t v24 = *((unsigned int *)a1 + 7);
    *(void *)(a2 + 1248) = v13 | 0x200000;
    *(void *)(a2 + 168) = v24;
    unsigned int v16 = *((_DWORD *)a1 + 9);
    if (v16 == 7)
    {
      v13 |= 0x600000uLL;
      *(void *)(a2 + 176) = a1[32];
    }
    else
    {
      v13 |= 0x200000uLL;
    }
  }
  uint64_t v25 = v16;
  uint64_t v26 = *((unsigned int *)a1 + 10);
  *(void *)(a2 + 184) = v25;
  *(void *)(a2 + 192) = v26;
  uint64_t v27 = *((unsigned int *)a1 + 12);
  *(void *)(a2 + 200) = a1[44];
  *(void *)(a2 + 208) = v27;
  uint64_t v28 = a1[52];
  uint64_t v29 = v13 | 0xF800000;
  *(void *)(a2 + 1248) = v13 | 0xF800000;
  *(void *)(a2 + 216) = v28;
  unsigned int v30 = *((_DWORD *)a1 + 16);
  if (!v30)
  {
    uint64_t v31 = a1[56];
    uint64_t v29 = v13 | 0x1F800000;
    *(void *)(a2 + 1248) = v13 | 0x1F800000;
    *(void *)(a2 + 224) = v31;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 1)
  {
    uint64_t v32 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x20000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 232) = v32;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 2)
  {
    uint64_t v33 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x40000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 240) = v33;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 3)
  {
    uint64_t v34 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x80000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 248) = v34;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 4)
  {
    uint64_t v35 = *((unsigned int *)a1 + 14);
    v29 |= 0x100000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 256) = v35;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 5)
  {
    uint64_t v36 = *((unsigned __int16 *)a1 + 28);
    v29 |= 0x200000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 264) = v36;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 6)
  {
    uint64_t v37 = a1[56];
    v29 |= 0x400000000uLL;
    *(void *)(a2 + 1248) = v29;
    *(void *)(a2 + 272) = v37;
    unsigned int v30 = *((_DWORD *)a1 + 16);
  }
  if (v30 == 7)
  {
    uint64_t v38 = *((unsigned int *)a1 + 14);
    *(void *)(a2 + 1248) = v29 | 0x800000000;
    *(void *)(a2 + 280) = v38;
    unsigned int v30 = *((_DWORD *)a1 + 16);
    if (v30 == 7)
    {
      v29 |= 0x1800000000uLL;
      *(void *)(a2 + 288) = a1[60];
    }
    else
    {
      v29 |= 0x800000000uLL;
    }
  }
  uint64_t v39 = *((unsigned int *)a1 + 17);
  *(void *)(a2 + 296) = v30;
  *(void *)(a2 + 304) = v39;
  uint64_t v40 = *((unsigned int *)a1 + 19);
  *(void *)(a2 + 312) = a1[72];
  *(void *)(a2 + 320) = v40;
  *(void *)(a2 + 328) = a1[80];
  uint64_t v41 = *(void *)(a1 + 84);
  v42.n128_u64[0] = v41;
  v42.n128_u64[1] = HIDWORD(v41);
  *(__n128 *)(a2 + 336) = v42;
  uint64_t v43 = a1[93];
  *(void *)(a2 + 352) = a1[92];
  *(void *)(a2 + 360) = v43;
  uint64_t v44 = a1[95];
  *(void *)(a2 + 368) = a1[94];
  *(void *)(a2 + 376) = v44;
  uint64_t v45 = a1[97];
  *(void *)(a2 + 384) = a1[96];
  *(void *)(a2 + 392) = v45;
  uint64_t v46 = a1[99];
  *(void *)(a2 + 400) = a1[98];
  *(void *)(a2 + 408) = v46;
  uint64_t v47 = *(void *)(a1 + 100);
  v42.n128_u64[0] = v47;
  v42.n128_u64[1] = HIDWORD(v47);
  __n128 v48 = v42;
  uint64_t v49 = *(void *)(a1 + 108);
  v42.n128_u64[0] = v49;
  v42.n128_u64[1] = HIDWORD(v49);
  *(__n128 *)(a2 + 416) = v48;
  *(__n128 *)(a2 + 432) = v42;
  v48.n128_u64[0] = *(void *)(a1 + 116);
  v42.n128_u64[0] = v48.n128_u32[0];
  v42.n128_u64[1] = v48.n128_u32[1];
  __n128 result = v42;
  uint64_t v51 = *(void *)(a1 + 124);
  v42.n128_u64[0] = v51;
  v42.n128_u64[1] = HIDWORD(v51);
  *(__n128 *)(a2 + 448) = result;
  *(__n128 *)(a2 + 464) = v42;
  uint64_t v52 = *((unsigned int *)a1 + 33);
  uint64_t v53 = a1[136];
  *(void *)(a2 + 1248) = v29 | 0x3FFFFFE000000000;
  *(void *)(a2 + 480) = v52;
  *(void *)(a2 + 488) = v53;
  return result;
}