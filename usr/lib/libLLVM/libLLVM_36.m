void *sub_1CC9B366C(void *result, void *a2, void *a3)
{
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  BOOL v6;
  unint64_t v7;
  BOOL v8;
  long long v9;
  long long v10;
  unint64_t v11;
  unint64_t v12;
  BOOL v13;
  long long v14;
  long long v15;
  unint64_t v16;
  unint64_t v17;
  BOOL v18;

  v3 = a2[1];
  v4 = result[1];
  v5 = v3 == v4;
  v6 = v3 > v4;
  if (v5) {
    v6 = *a2 > *result;
  }
  v7 = a3[1];
  v5 = v7 == v3;
  v8 = v7 > v3;
  if (v5) {
    v8 = *a3 > *a2;
  }
  if (v6)
  {
    if (v8)
    {
      v9 = *(_OWORD *)result;
      *(_OWORD *)result = *(_OWORD *)a3;
LABEL_17:
      *(_OWORD *)a3 = v9;
      return result;
    }
    v15 = *(_OWORD *)result;
    *(_OWORD *)result = *(_OWORD *)a2;
    *(_OWORD *)a2 = v15;
    v16 = a3[1];
    v17 = a2[1];
    v5 = v16 == v17;
    v18 = v16 > v17;
    if (v5) {
      v18 = *a3 > *a2;
    }
    if (v18)
    {
      v9 = *(_OWORD *)a2;
      *(_OWORD *)a2 = *(_OWORD *)a3;
      goto LABEL_17;
    }
  }
  else if (v8)
  {
    v10 = *(_OWORD *)a2;
    *(_OWORD *)a2 = *(_OWORD *)a3;
    *(_OWORD *)a3 = v10;
    v11 = a2[1];
    v12 = result[1];
    v5 = v11 == v12;
    v13 = v11 > v12;
    if (v5) {
      v13 = *a2 > *result;
    }
    if (v13)
    {
      v14 = *(_OWORD *)result;
      *(_OWORD *)result = *(_OWORD *)a2;
      *(_OWORD *)a2 = v14;
    }
  }
  return result;
}

BOOL sub_1CC9B3754(__n128 *a1, __n128 *a2)
{
  uint64_t v4 = a2 - a1;
  BOOL result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      unint64_t v6 = a2[-1].n128_u64[1];
      v7 = a2 - 1;
      unint64_t v8 = a1->n128_u64[1];
      BOOL v9 = a2[-1].n128_u64[0] > a1->n128_u64[0];
      BOOL v10 = v6 == v8;
      BOOL v11 = v6 > v8;
      if (!v10) {
        BOOL v9 = v11;
      }
      if (v9)
      {
        __n128 v12 = *a1;
        *a1 = *v7;
        __n128 *v7 = v12;
      }
      return result;
    case 3:
      sub_1CC9B366C(a1, (__n128 *)a1[1].n128_u64, (__n128 *)a2[-1].n128_u64);
      return 1;
    case 4:
      sub_1CC9B3A04(a1, a1 + 1, a1 + 2, a2 - 1);
      return 1;
    case 5:
      v27 = a1 + 1;
      v28 = a1 + 2;
      v29 = a1 + 3;
      sub_1CC9B3A04(a1, a1 + 1, a1 + 2, a1 + 3);
      unint64_t v30 = a2[-1].n128_u64[0];
      unint64_t v31 = a2[-1].n128_u64[1];
      v32 = a2 - 1;
      unint64_t v33 = a1[3].n128_u64[1];
      BOOL v34 = v30 > a1[3].n128_u64[0];
      BOOL v10 = v31 == v33;
      BOOL v35 = v31 > v33;
      if (!v10) {
        BOOL v34 = v35;
      }
      if (v34)
      {
        __n128 v36 = *v29;
        __n128 *v29 = *v32;
        __n128 *v32 = v36;
        unint64_t v37 = a1[3].n128_u64[1];
        unint64_t v38 = a1[2].n128_u64[1];
        BOOL v10 = v37 == v38;
        BOOL v39 = v37 > v38;
        if (v10) {
          BOOL v39 = a1[3].n128_u64[0] > a1[2].n128_u64[0];
        }
        if (v39)
        {
          __n128 v40 = *v28;
          __n128 *v28 = *v29;
          __n128 *v29 = v40;
          unint64_t v41 = a1[2].n128_u64[1];
          unint64_t v42 = a1[1].n128_u64[1];
          BOOL v10 = v41 == v42;
          BOOL v43 = v41 > v42;
          if (v10) {
            BOOL v43 = a1[2].n128_u64[0] > a1[1].n128_u64[0];
          }
          if (v43)
          {
            __n128 v44 = *v27;
            __n128 *v27 = *v28;
            __n128 *v28 = v44;
            unint64_t v45 = a1[1].n128_u64[1];
            unint64_t v46 = a1->n128_u64[1];
            BOOL v10 = v45 == v46;
            BOOL v47 = v45 > v46;
            if (v10) {
              BOOL v47 = a1[1].n128_u64[0] > a1->n128_u64[0];
            }
            if (v47)
            {
              __n128 v48 = *a1;
              *a1 = *v27;
              __n128 *v27 = v48;
            }
          }
        }
      }
      return 1;
    default:
      v13 = a1 + 2;
      sub_1CC9B366C(a1, (__n128 *)a1[1].n128_u64, (__n128 *)a1[2].n128_u64);
      v14 = a1 + 3;
      if (&a1[3] == a2) {
        return 1;
      }
      uint64_t v15 = 0;
      int v16 = 0;
      break;
  }
  while (1)
  {
    unint64_t v18 = v14->n128_u64[0];
    unint64_t v17 = v14->n128_u64[1];
    unint64_t v19 = v13->n128_u64[1];
    BOOL v10 = v17 == v19;
    BOOL v20 = v17 > v19;
    if (v10) {
      BOOL v20 = v14->n128_u64[0] > v13->n128_u64[0];
    }
    if (v20)
    {
      uint64_t v21 = v15;
      while (1)
      {
        v22 = (char *)a1 + v21;
        *(__n128 *)((char *)a1 + v21 + 48) = *(__n128 *)((char *)a1 + v21 + 32);
        if (v21 == -32) {
          break;
        }
        unint64_t v23 = *((void *)v22 + 3);
        BOOL v24 = v18 > *((void *)v22 + 2);
        BOOL v10 = v17 == v23;
        BOOL v25 = v17 > v23;
        if (!v10) {
          BOOL v24 = v25;
        }
        v21 -= 16;
        if (!v24)
        {
          v26 = (__n128 *)((char *)a1 + v21 + 48);
          goto LABEL_19;
        }
      }
      v26 = a1;
LABEL_19:
      v26->n128_u64[0] = v18;
      v26->n128_u64[1] = v17;
      if (++v16 == 8) {
        return &v14[1] == a2;
      }
    }
    v13 = v14;
    v15 += 16;
    if (++v14 == a2) {
      return 1;
    }
  }
}

__n128 sub_1CC9B3A04(__n128 *a1, __n128 *a2, __n128 *a3, __n128 *a4)
{
  sub_1CC9B366C(a1, a2, a3);
  unint64_t v9 = a4->n128_u64[1];
  unint64_t v10 = a3->n128_u64[1];
  BOOL v11 = v9 == v10;
  BOOL v12 = v9 > v10;
  if (v11) {
    BOOL v12 = a4->n128_u64[0] > a3->n128_u64[0];
  }
  if (v12)
  {
    __n128 result = *a3;
    *a3 = *a4;
    *a4 = result;
    unint64_t v13 = a3->n128_u64[1];
    unint64_t v14 = a2->n128_u64[1];
    BOOL v11 = v13 == v14;
    BOOL v15 = v13 > v14;
    if (v11) {
      BOOL v15 = a3->n128_u64[0] > a2->n128_u64[0];
    }
    if (v15)
    {
      __n128 result = *a2;
      *a2 = *a3;
      *a3 = result;
      unint64_t v16 = a2->n128_u64[1];
      unint64_t v17 = a1->n128_u64[1];
      BOOL v11 = v16 == v17;
      BOOL v18 = v16 > v17;
      if (v11) {
        BOOL v18 = a2->n128_u64[0] > a1->n128_u64[0];
      }
      if (v18)
      {
        __n128 result = *a1;
        *a1 = *a2;
        *a2 = result;
      }
    }
  }
  return result;
}

char *sub_1CC9B3AE0(uint64_t a1, uint64_t a2, uint64_t a3, long long **a4)
{
  unint64_t v8 = sub_1CD681950(a2);
  unint64_t v9 = v8;
  unint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    uint8x8_t v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    unint64_t v12 = v11.u32[0];
    if (v11.u32[0] > 1uLL)
    {
      unint64_t v4 = v8;
      if (v8 >= v10) {
        unint64_t v4 = v8 % v10;
      }
    }
    else
    {
      unint64_t v4 = (v10 - 1) & v8;
    }
    unint64_t v13 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v13)
    {
      unint64_t v14 = (char *)*v13;
      if (*v13)
      {
        do
        {
          unint64_t v15 = *((void *)v14 + 1);
          if (v15 == v9)
          {
            if (sub_1CD681C28((uint64_t)(v14 + 16), a2)) {
              return v14;
            }
          }
          else
          {
            if (v12 > 1)
            {
              if (v15 >= v10) {
                v15 %= v10;
              }
            }
            else
            {
              v15 &= v10 - 1;
            }
            if (v15 != v4) {
              break;
            }
          }
          unint64_t v14 = *(char **)v14;
        }
        while (v14);
      }
    }
  }
  unint64_t v14 = (char *)operator new(0xB0uLL);
  *(void *)unint64_t v14 = 0;
  *((void *)v14 + 1) = v9;
  long long v17 = **a4;
  long long v16 = (*a4)[1];
  *((void *)v14 + 6) = *((void *)*a4 + 4);
  *((_OWORD *)v14 + 1) = v17;
  *((_OWORD *)v14 + 2) = v16;
  *(_OWORD *)(v14 + 120) = 0u;
  *(_OWORD *)(v14 + 104) = 0u;
  *(_OWORD *)(v14 + 88) = 0u;
  *(_OWORD *)(v14 + 72) = 0u;
  *(_OWORD *)(v14 + 136) = 0u;
  *(_OWORD *)(v14 + 56) = 0u;
  *((void *)v14 + 16) = v14 + 136;
  *((void *)v14 + 21) = 0;
  *((void *)v14 + 20) = 0;
  *((void *)v14 + 19) = v14 + 160;
  float v18 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v19 = *(float *)(a1 + 32);
  if (!v10 || (float)(v19 * (float)v10) < v18)
  {
    BOOL v20 = 1;
    if (v10 >= 3) {
      BOOL v20 = (v10 & (v10 - 1)) != 0;
    }
    unint64_t v21 = v20 | (2 * v10);
    unint64_t v22 = vcvtps_u32_f32(v18 / v19);
    if (v21 <= v22) {
      size_t v23 = v22;
    }
    else {
      size_t v23 = v21;
    }
    sub_1CC9B3D48(a1, v23);
    unint64_t v10 = *(void *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10) {
        unint64_t v4 = v9 % v10;
      }
      else {
        unint64_t v4 = v9;
      }
    }
    else
    {
      unint64_t v4 = (v10 - 1) & v9;
    }
  }
  uint64_t v24 = *(void *)a1;
  BOOL v25 = *(void **)(*(void *)a1 + 8 * v4);
  if (v25)
  {
    *(void *)unint64_t v14 = *v25;
LABEL_39:
    *BOOL v25 = v14;
    goto LABEL_40;
  }
  *(void *)unint64_t v14 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v14;
  *(void *)(v24 + 8 * v4) = a1 + 16;
  if (*(void *)v14)
  {
    unint64_t v26 = *(void *)(*(void *)v14 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v26 >= v10) {
        v26 %= v10;
      }
    }
    else
    {
      v26 &= v10 - 1;
    }
    BOOL v25 = (void *)(*(void *)a1 + 8 * v26);
    goto LABEL_39;
  }
LABEL_40:
  ++*(void *)(a1 + 24);
  return v14;
}

void sub_1CC9B3D48(uint64_t a1, size_t __n)
{
  if (__n == 1)
  {
    size_t prime = 2;
  }
  else
  {
    size_t prime = __n;
    if ((__n & (__n - 1)) != 0) {
      size_t prime = std::__next_prime(__n);
    }
  }
  int8x8_t v4 = *(int8x8_t *)(a1 + 8);
  if (prime > *(void *)&v4) {
    goto LABEL_17;
  }
  if (prime < *(void *)&v4)
  {
    unint64_t v5 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(void *)&v4 < 3uLL || (uint8x8_t v6 = (uint8x8_t)vcnt_s8(v4), v6.i16[0] = vaddlv_u8(v6), v6.u32[0] > 1uLL))
    {
      unint64_t v5 = std::__next_prime(v5);
    }
    else
    {
      uint64_t v7 = 1 << -(char)__clz(v5 - 1);
      if (v5 >= 2) {
        unint64_t v5 = v7;
      }
    }
    if (prime <= v5) {
      size_t prime = v5;
    }
    if (prime < *(void *)&v4)
    {
LABEL_17:
      sub_1CD3F1760(a1, prime);
    }
  }
}

void sub_1CC9B3E38(uint64_t a1, void *a2, int a3, unsigned __int8 *a4, int a5)
{
  uint64_t v58 = *MEMORY[0x1E4F143B8];
  if (a3)
  {
    uint8x8_t v6 = a2;
    unint64_t v8 = &a2[a3];
    if (a5) {
      uint64_t v9 = 10;
    }
    else {
      uint64_t v9 = 7;
    }
    if (a5) {
      unint64_t v10 = "hotness: '";
    }
    else {
      unint64_t v10 = "size: '";
    }
    uint8x8_t v11 = (uint64_t *)&v53;
    unint64_t v12 = v55;
    do
    {
      unint64_t v13 = (void *)*v6;
      uint64_t v14 = *(void *)(*v6 - 32);
      if (v14 && !*(unsigned char *)(v14 + 16) && *(void *)(v14 + 24) == v13[9])
      {
        uint64_t v15 = v13[6];
        if (v15)
        {
          uint64_t v16 = *(void *)(v15 - 8 * *(unsigned int *)(v15 + 8));
          if (*(unsigned char *)v16 != 15) {
            uint64_t v16 = *(void *)(v16 - 8 * *(unsigned int *)(v16 + 8));
          }
          int v17 = *(_DWORD *)(v15 + 4);
          LODWORD(v15) = *(unsigned __int16 *)(v15 + 2);
        }
        else
        {
          uint64_t v16 = 0;
          int v17 = 0;
        }
        float v18 = *(uint64_t ****)(a1 + 1136);
        uint64_t v19 = v13[5];
        uint64_t v20 = *(void *)(v19 + 56);
        int v42 = 11;
        char v43 = 2;
        uint64_t v44 = v20;
        uint64_t v45 = v16;
        int v46 = v17;
        int v47 = v15;
        __n128 v48 = "sample-profile-inline";
        v49 = "InlineAttempt";
        uint64_t v50 = 13;
        char v51 = 0;
        char v52 = 0;
        unint64_t v30 = v12;
        v53 = v12;
        uint64_t v54 = 0x400000000;
        v55[256] = 0;
        int v56 = -1;
        uint64_t v57 = v19;
        BOOL v39 = "previous inlining reattempted for ";
        uint64_t v40 = 34;
        unint64_t v41 = &unk_1F26165E0;
        sub_1CC59ADEC(v11, (uint64_t)&v39);
        BOOL v39 = v10;
        uint64_t v40 = v9;
        sub_1CC59ADEC(v11, (uint64_t)&v39);
        llvm::DiagnosticInfoOptimizationBase::Argument::Argument((uint64_t)v35, "Callee", 6uLL, (unsigned __int8 *)v14);
        uint64_t v21 = sub_1CD3D6290((uint64_t)&v41, (long long *)v35);
        BOOL v39 = "' into '";
        uint64_t v40 = 8;
        sub_1CC59ADEC((uint64_t *)(v21 + 80), (uint64_t)&v39);
        llvm::DiagnosticInfoOptimizationBase::Argument::Argument((uint64_t)v31, "Caller", 6uLL, a4);
        unint64_t v22 = (uint64_t *)sub_1CD3D6290(v21, (long long *)v31);
        BOOL v39 = "'";
        uint64_t v40 = 1;
        sub_1CC59ADEC(v22 + 10, (uint64_t)&v39);
        llvm::OptimizationRemarkEmitter::emit(v18, (llvm::DiagnosticInfoOptimizationBase *)v22);
        if (v34 < 0) {
          operator delete(__p);
        }
        if (v32 < 0) {
          operator delete(v31[0]);
        }
        if (v38 < 0) {
          operator delete(v37);
        }
        if (v36 < 0) {
          operator delete(v35[0]);
        }
        unint64_t v41 = &unk_1F2616800;
        size_t v23 = (char *)v53;
        unint64_t v12 = v30;
        if (v54)
        {
          uint64_t v24 = a4;
          BOOL v25 = v11;
          unint64_t v26 = v10;
          uint64_t v27 = v9;
          unint64_t v28 = (unint64_t)v54 << 6;
          do
          {
            v29 = (void **)&v23[v28];
            if (v23[v28 - 17] < 0)
            {
              operator delete(*(v29 - 5));
              unint64_t v12 = v30;
            }
            if (*((char *)v29 - 41) < 0)
            {
              operator delete(*(v29 - 8));
              unint64_t v12 = v30;
            }
            v28 -= 64;
          }
          while (v28);
          size_t v23 = (char *)v53;
          uint64_t v9 = v27;
          unint64_t v10 = v26;
          uint8x8_t v11 = v25;
          a4 = v24;
        }
        if (v23 != v12)
        {
          free(v23);
          unint64_t v12 = v30;
        }
      }
      ++v6;
    }
    while (v6 != v8);
  }
}

void sub_1CC9B4208(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 80);
  uint64_t v55 = a2 + 72;
  if (v2 != a2 + 72)
  {
    uint64_t v3 = a1 + 968;
    uint64_t v4 = a1 + 992;
    while (1)
    {
      if (v2) {
        uint64_t v5 = v2 - 24;
      }
      else {
        uint64_t v5 = 0;
      }
      v61[0] = v5;
      int v56 = v60;
      uint64_t v57 = v60;
      uint64_t v58 = 16;
      int v59 = 0;
      sub_1CD554E30(v3, v61);
      uint64_t v6 = *(void *)(v5 + 8);
      if (!v6) {
        goto LABEL_16;
      }
      while (1)
      {
        uint64_t v7 = *(void *)(v6 + 24);
        unsigned int v8 = *(unsigned __int8 *)(v7 + 16);
        BOOL v9 = v7 && v8 >= 0x1C;
        if (v9 && v8 - 29 <= 0xA) {
          break;
        }
        uint64_t v6 = *(void *)(v6 + 8);
        if (!v6) {
          goto LABEL_16;
        }
      }
LABEL_71:
      uint64_t v33 = *(void *)(v7 + 40);
      char v34 = v57;
      uint64_t v35 = HIDWORD(v58);
      if (v57 == v56)
      {
        if (HIDWORD(v58))
        {
          char v36 = 0;
          uint64_t v37 = 8 * HIDWORD(v58);
          char v38 = v57;
          do
          {
            if (*(void *)v38 == v33) {
              goto LABEL_105;
            }
            if (*(void *)v38 == -2) {
              char v36 = v38;
            }
            v38 += 8;
            v37 -= 8;
          }
          while (v37);
          if (v36)
          {
            *(void *)char v36 = v33;
            --v59;
            goto LABEL_103;
          }
        }
        unsigned int v39 = v58;
        if (HIDWORD(v58) < v58)
        {
          ++HIDWORD(v58);
          *(void *)&v57[8 * v35] = v33;
LABEL_103:
          v49 = sub_1CD554E30(v3, v61);
          unint64_t v50 = *((unsigned int *)v49 + 4);
          if (v50 >= *((unsigned int *)v49 + 5)) {
            llvm::SmallVectorBase<unsigned int>::grow_pod();
          }
          *(void *)(v49[1] + 8 * v50) = v33;
          ++*((_DWORD *)v49 + 4);
          goto LABEL_105;
        }
      }
      else
      {
        unsigned int v39 = v58;
      }
      if (3 * v39 <= 4 * (HIDWORD(v58) - v59)) {
        break;
      }
      if (v39 - HIDWORD(v58) < v39 >> 3) {
        goto LABEL_119;
      }
LABEL_84:
      unsigned int v40 = v39 - 1;
      unsigned int v41 = (v39 - 1) & ((v33 >> 4) ^ (v33 >> 9));
      int v42 = &v34[8 * v41];
      uint64_t v43 = *(void *)v42;
      if (*(void *)v42 == -1)
      {
        uint64_t v44 = 0;
      }
      else
      {
        uint64_t v44 = 0;
        int v45 = 1;
        do
        {
          if (v43 == v33) {
            goto LABEL_105;
          }
          if (v44) {
            BOOL v46 = 0;
          }
          else {
            BOOL v46 = v43 == -2;
          }
          if (v46) {
            uint64_t v44 = v42;
          }
          unsigned int v47 = v41 + v45++;
          unsigned int v41 = v47 & v40;
          int v42 = &v34[8 * (v47 & v40)];
          uint64_t v43 = *(void *)v42;
        }
        while (*(void *)v42 != -1);
      }
      if (v44) {
        __n128 v48 = v44;
      }
      else {
        __n128 v48 = v42;
      }
      if (*(void *)v48 != v33)
      {
        if (*(void *)v48 == -2) {
          --v59;
        }
        else {
          ++HIDWORD(v58);
        }
        *(void *)__n128 v48 = v33;
        goto LABEL_103;
      }
LABEL_105:
      while (1)
      {
        uint64_t v6 = *(void *)(v6 + 8);
        if (!v6) {
          break;
        }
        uint64_t v7 = *(void *)(v6 + 24);
        unsigned int v51 = *(unsigned __int8 *)(v7 + 16);
        if (v7) {
          BOOL v52 = v51 >= 0x1C;
        }
        else {
          BOOL v52 = 0;
        }
        if (v52 && v51 - 29 < 0xB) {
          goto LABEL_71;
        }
      }
LABEL_16:
      if (v57 == v56) {
        goto LABEL_17;
      }
      if (v58 < 0x21 || 4 * (HIDWORD(v58) - v59) >= v58)
      {
        memset(v57, 255, 8 * v58);
LABEL_17:
        HIDWORD(v58) = 0;
        int v59 = 0;
        goto LABEL_18;
      }
      llvm::SmallPtrSetImplBase::shrink_and_clear((void **)&v56);
LABEL_18:
      sub_1CD554E30(v4, v61);
      uint64_t v11 = *(void *)(v5 + 40);
      if (v11 != v5 + 40)
      {
        if (v11) {
          uint64_t v12 = v11 - 24;
        }
        else {
          uint64_t v12 = 0;
        }
        if (*(unsigned char *)(v12 + 16) != 30)
        {
          int v54 = 2;
          switch(*(unsigned char *)(v12 + 16))
          {
            case 0x1E:
              __break(1u);
              JUMPOUT(0x1CC9B4798);
            case 0x1F:
              int v54 = (*(_DWORD *)(v12 + 20) >> 1) & 0x3FFFFFF;
              goto LABEL_130;
            case 0x20:
            case 0x26:
              int v54 = (*(_DWORD *)(v12 + 20) & 0x7FFFFFF) - 1;
              goto LABEL_130;
            case 0x21:
              goto LABEL_27;
            case 0x24:
              int v54 = *(_WORD *)(v12 + 18) & 1;
              goto LABEL_130;
            case 0x25:
              int v54 = 1;
              goto LABEL_27;
            case 0x27:
              int v54 = *(_DWORD *)(v12 + 80) + 1;
LABEL_130:
              if (!v54) {
                goto LABEL_125;
              }
              goto LABEL_27;
            default:
              goto LABEL_125;
          }
        }
        if ((*(_DWORD *)(v12 + 20) & 0x7FFFFFF) == 3) {
          int v54 = 2;
        }
        else {
          int v54 = 1;
        }
LABEL_27:
        unsigned int v13 = 0;
        while (1)
        {
          uint64_t Successor = llvm::Instruction::getSuccessor((llvm::Instruction *)v12, v13);
          uint64_t v15 = Successor;
          uint64_t v16 = v57;
          uint64_t v17 = HIDWORD(v58);
          if (v57 == v56)
          {
            if (HIDWORD(v58))
            {
              float v18 = 0;
              uint64_t v19 = 8 * HIDWORD(v58);
              uint64_t v20 = (uint64_t *)v57;
              while (*v20 != Successor)
              {
                if (*v20 == -2) {
                  float v18 = v20;
                }
                ++v20;
                v19 -= 8;
                if (!v19)
                {
                  if (!v18) {
                    goto LABEL_36;
                  }
                  *float v18 = Successor;
                  --v59;
                  goto LABEL_60;
                }
              }
              goto LABEL_62;
            }
LABEL_36:
            unsigned int v21 = v58;
            if (HIDWORD(v58) < v58)
            {
              ++HIDWORD(v58);
              *(void *)&v57[8 * v17] = Successor;
              goto LABEL_60;
            }
          }
          else
          {
            unsigned int v21 = v58;
          }
          if (3 * v21 <= 4 * (HIDWORD(v58) - v59)) {
            break;
          }
          if (v21 - HIDWORD(v58) < v21 >> 3) {
            goto LABEL_69;
          }
LABEL_41:
          unsigned int v22 = v21 - 1;
          unsigned int v23 = (v21 - 1) & ((v15 >> 4) ^ (v15 >> 9));
          uint64_t v24 = &v16[8 * v23];
          uint64_t v25 = *(void *)v24;
          if (*(void *)v24 != -1)
          {
            unint64_t v26 = 0;
            int v27 = 1;
            while (v25 != v15)
            {
              if (v26) {
                BOOL v28 = 0;
              }
              else {
                BOOL v28 = v25 == -2;
              }
              if (v28) {
                unint64_t v26 = (uint64_t *)v24;
              }
              unsigned int v29 = v23 + v27++;
              unsigned int v23 = v29 & v22;
              uint64_t v24 = &v16[8 * (v29 & v22)];
              uint64_t v25 = *(void *)v24;
              if (*(void *)v24 == -1) {
                goto LABEL_53;
              }
            }
            goto LABEL_62;
          }
          unint64_t v26 = 0;
LABEL_53:
          if (v26) {
            unint64_t v30 = v26;
          }
          else {
            unint64_t v30 = (uint64_t *)v24;
          }
          if (*v30 == v15) {
            goto LABEL_62;
          }
          if (*v30 == -2) {
            --v59;
          }
          else {
            ++HIDWORD(v58);
          }
          *unint64_t v30 = v15;
LABEL_60:
          unint64_t v31 = sub_1CD554E30(v4, v61);
          unint64_t v32 = *((unsigned int *)v31 + 4);
          if (v32 >= *((unsigned int *)v31 + 5)) {
            llvm::SmallVectorBase<unsigned int>::grow_pod();
          }
          *(void *)(v31[1] + 8 * v32) = v15;
          ++*((_DWORD *)v31 + 4);
LABEL_62:
          if (v54 == ++v13) {
            goto LABEL_125;
          }
        }
        if (v21 >= 0x40) {
          v21 *= 2;
        }
        else {
          unsigned int v21 = 128;
        }
LABEL_69:
        llvm::SmallPtrSetImplBase::Grow((llvm::SmallPtrSetImplBase *)&v56, v21);
        unsigned int v21 = v58;
        uint64_t v16 = v57;
        goto LABEL_41;
      }
LABEL_125:
      if (v57 != v56) {
        free(v57);
      }
      uint64_t v2 = *(void *)(v2 + 8);
      if (v2 == v55) {
        return;
      }
    }
    if (v39 >= 0x40) {
      v39 *= 2;
    }
    else {
      unsigned int v39 = 128;
    }
LABEL_119:
    llvm::SmallPtrSetImplBase::Grow((llvm::SmallPtrSetImplBase *)&v56, v39);
    unsigned int v39 = v58;
    char v34 = v57;
    goto LABEL_84;
  }
}

void sub_1CC9B47C4(uint64_t *a1, _DWORD *a2, _DWORD *a3)
{
  v212 = v216;
  v213 = v216;
  uint64_t v214 = 8;
  int v215 = 0;
  sub_1CD683008(&v191, *(void *)(*a1 + 80), (llvm::SmallPtrSetImplBase *)&v212);
  uint64_t v3 = (unsigned char *)*((void *)&v191 + 1);
  long long v209 = v191;
  long long v210 = v192;
  v211[0] = &v212;
  memset(&v211[1], 0, 24);
  uint64_t v4 = (unsigned char *)v192;
  unint64_t v5 = (uint64_t)(v192 - *((void *)&v191 + 1)) >> 5;
  *((void *)&v191 + 1) = 0;
  long long v192 = 0uLL;
  sub_1CBFE1720((void *)&v191 + 1, v3, v4, v5);
  while ((void)v192 != *((void *)&v191 + 1))
    sub_1CD683078((uint64_t)&v191);
  if ((void)v192) {
    operator delete((void *)v192);
  }
  sub_1CD481D8C(&v209);
  *(void *)&long long v209 = v211;
  *((void *)&v209 + 1) = v211;
  *(void *)&long long v210 = 8;
  DWORD2(v210) = 0;
  uint64_t v6 = *a1 + 72;
  uint64_t v7 = *(void *)(*a1 + 80);
  if (v7 != v6)
  {
    while (1)
    {
      uint64_t v16 = v7 ? v7 - 24 : 0;
      uint64_t v17 = *(void *)(v16 + 40);
      if (v17 == v16 + 40) {
        break;
      }
      if (v17) {
        uint64_t v18 = v17 - 24;
      }
      else {
        uint64_t v18 = 0;
      }
      if (*(unsigned char *)(v18 + 16) != 30)
      {
        switch(*(unsigned char *)(v18 + 16))
        {
          case 0x1E:
            __break(1u);
            JUMPOUT(0x1CC9B57E8);
          case 0x1F:
            int v64 = (*(_DWORD *)(v18 + 20) >> 1) & 0x3FFFFFF;
            goto LABEL_139;
          case 0x20:
          case 0x26:
            int v64 = (*(_DWORD *)(v18 + 20) & 0x7FFFFFF) - 1;
            goto LABEL_139;
          case 0x21:
          case 0x25:
            break;
          case 0x24:
            int v64 = *(_WORD *)(v18 + 18) & 1;
            goto LABEL_139;
          case 0x27:
            int v64 = *(_DWORD *)(v18 + 80) + 1;
LABEL_139:
            if (!v64) {
              goto LABEL_36;
            }
            break;
          default:
            goto LABEL_36;
        }
      }
LABEL_33:
      uint64_t v7 = *(void *)(v7 + 8);
      if (v7 == v6) {
        goto LABEL_7;
      }
    }
LABEL_36:
    sub_1CD520EA4(__p, v16, (llvm::SmallPtrSetImplBase *)&v209);
    uint64_t v19 = __p[1];
    long long v191 = *(_OWORD *)__p;
    uint64_t v20 = (unsigned char *)v199;
    long long v192 = v199;
    v193 = &v209;
    *(void *)&long long v195 = 0;
    long long v194 = 0uLL;
    long long v199 = 0uLL;
    __p[1] = 0;
    sub_1CBF340A8(&__p[1], v19, v20, 0xAAAAAAAAAAAAAAABLL * ((v20 - v19) >> 3));
    v205 = v193;
    v207 = 0;
    uint64_t v208 = 0;
    v206 = 0;
    sub_1CBF340A8(&v206, (unsigned char *)v194, *((unsigned char **)&v194 + 1), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)&v194 + 1) - v194) >> 3));
    unsigned int v21 = (char *)v199;
LABEL_37:
    unsigned int v22 = __p[1];
    if (v21 - (char *)__p[1] != v207 - v206) {
      goto LABEL_51;
    }
    if (__p[1] == v21)
    {
LABEL_133:
      if (v206)
      {
        v207 = v206;
        operator delete(v206);
        unsigned int v22 = __p[1];
      }
      if (v22)
      {
        *(void *)&long long v199 = v22;
        operator delete(v22);
      }
      sub_1CD481D8C(&v191);
      goto LABEL_33;
    }
    unsigned int v23 = v206 + 8;
    uint64_t v24 = (char *)__p[1] + 8;
    while (1)
    {
      uint64_t v25 = v24 - 8;
      if (*((void *)v24 - 1) != *((void *)v23 - 1)) {
        goto LABEL_51;
      }
      int v26 = v23[8];
      if (v24[8]) {
        BOOL v27 = v26 == 0;
      }
      else {
        BOOL v27 = 1;
      }
      if (v27)
      {
        if ((v24[8] == 0) == (v26 != 0))
        {
LABEL_51:
          while (*(v21 - 8))
          {
            uint64_t v28 = *((void *)v21 - 2);
            if (v28) {
              goto LABEL_53;
            }
LABEL_107:
            unsigned int v21 = (char *)(v199 - 24);
            *(void *)&long long v199 = v21;
            if (__p[1] == v21) {
              goto LABEL_37;
            }
          }
          uint64_t v28 = *((void *)v21 - 3);
          do
          {
            uint64_t v28 = *(void *)(v28 + 8);
            if (!v28) {
              break;
            }
            uint64_t v51 = *(void *)(v28 + 24);
            unsigned int v52 = *(unsigned __int8 *)(v51 + 16);
            BOOL v53 = v51 && v52 >= 0x1C;
          }
          while (!v53 || v52 - 29 >= 0xB);
          *((void *)v21 - 2) = v28;
          *(v21 - 8) = 1;
          if (!v28) {
            goto LABEL_107;
          }
LABEL_53:
          while (2)
          {
            uint64_t v29 = v28;
            do
            {
              uint64_t v29 = *(void *)(v29 + 8);
              if (!v29) {
                break;
              }
              uint64_t v30 = *(void *)(v29 + 24);
              unsigned int v31 = *(unsigned __int8 *)(v30 + 16);
              BOOL v32 = v30 && v31 >= 0x1C;
            }
            while (!v32 || v31 - 29 > 0xA);
            *((void *)v21 - 2) = v29;
            uint64_t v34 = *(void *)(*(void *)(v28 + 24) + 40);
            uint64_t v35 = __p[0];
            uint64_t v36 = *((void *)__p[0] + 1);
            uint64_t v37 = *((unsigned int *)__p[0] + 5);
            if (v36 == *(void *)__p[0])
            {
              if (v37)
              {
                char v38 = 0;
                uint64_t v39 = 8 * v37;
                unsigned int v40 = (void *)*((void *)__p[0] + 1);
                while (*v40 != v34)
                {
                  if (*v40 == -2) {
                    char v38 = v40;
                  }
                  ++v40;
                  v39 -= 8;
                  if (!v39)
                  {
                    if (!v38) {
                      goto LABEL_70;
                    }
                    *char v38 = v34;
                    --v35[6];
                    goto LABEL_113;
                  }
                }
LABEL_91:
                uint64_t v28 = *((void *)v21 - 2);
                if (!v28) {
                  goto LABEL_107;
                }
                continue;
              }
LABEL_70:
              unsigned int v41 = *((_DWORD *)__p[0] + 4);
              if (v37 < v41)
              {
                *((_DWORD *)__p[0] + 5) = v37 + 1;
                *(void *)(v36 + 8 * v37) = v34;
                goto LABEL_113;
              }
            }
            else
            {
              unsigned int v41 = *((_DWORD *)__p[0] + 4);
            }
            break;
          }
          if (3 * v41 <= 4 * ((int)v37 - *((_DWORD *)__p[0] + 6)))
          {
            if (v41 >= 0x40) {
              v41 *= 2;
            }
            else {
              unsigned int v41 = 128;
            }
          }
          else if (v41 - v37 >= v41 >> 3)
          {
            goto LABEL_75;
          }
          llvm::SmallPtrSetImplBase::Grow((llvm::SmallPtrSetImplBase *)__p[0], v41);
          unsigned int v41 = v35[4];
          uint64_t v36 = *((void *)v35 + 1);
LABEL_75:
          unsigned int v42 = v41 - 1;
          unsigned int v43 = (v41 - 1) & ((v34 >> 4) ^ (v34 >> 9));
          uint64_t v44 = (void *)(v36 + 8 * v43);
          uint64_t v45 = *v44;
          if (*v44 != -1)
          {
            BOOL v46 = 0;
            int v47 = 1;
            while (v45 != v34)
            {
              if (v46) {
                BOOL v48 = 0;
              }
              else {
                BOOL v48 = v45 == -2;
              }
              if (v48) {
                BOOL v46 = v44;
              }
              unsigned int v49 = v43 + v47++;
              unsigned int v43 = v49 & v42;
              uint64_t v44 = (void *)(v36 + 8 * (v49 & v42));
              uint64_t v45 = *v44;
              if (*v44 == -1) {
                goto LABEL_87;
              }
            }
            goto LABEL_91;
          }
          BOOL v46 = 0;
LABEL_87:
          if (v46) {
            unint64_t v50 = v46;
          }
          else {
            unint64_t v50 = v44;
          }
          if (*v50 == v34) {
            goto LABEL_91;
          }
          if (*v50 == -2) {
            --v35[6];
          }
          else {
            ++v35[5];
          }
          *unint64_t v50 = v34;
LABEL_113:
          uint64_t v55 = (unsigned char *)v199;
          if ((unint64_t)v199 >= *((void *)&v199 + 1))
          {
            int v56 = __p[1];
            unint64_t v57 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v199 - (unint64_t)__p[1]) >> 3);
            unint64_t v58 = v57 + 1;
            if (v57 + 1 > 0xAAAAAAAAAAAAAAALL) {
LABEL_325:
            }
              abort();
            if (0x5555555555555556 * ((uint64_t)(*((void *)&v199 + 1) - (unint64_t)__p[1]) >> 3) > v58) {
              unint64_t v58 = 0x5555555555555556 * ((uint64_t)(*((void *)&v199 + 1) - (unint64_t)__p[1]) >> 3);
            }
            if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)&v199 + 1) - (unint64_t)__p[1]) >> 3) >= 0x555555555555555) {
              unint64_t v59 = 0xAAAAAAAAAAAAAAALL;
            }
            else {
              unint64_t v59 = v58;
            }
            if (v59)
            {
              if (v59 > 0xAAAAAAAAAAAAAAALL) {
LABEL_326:
              }
                sub_1CB833614();
              v60 = (char *)operator new(24 * v59);
            }
            else
            {
              v60 = 0;
            }
            v61 = &v60[24 * v57];
            *(void *)v61 = v34;
            v61[8] = 0;
            v61[16] = 0;
            v62 = v61;
            if (v55 != v56)
            {
              do
              {
                long long v63 = *(_OWORD *)(v55 - 24);
                *((void *)v62 - 1) = *((void *)v55 - 1);
                *(_OWORD *)(v62 - 24) = v63;
                v62 -= 24;
                v55 -= 24;
              }
              while (v55 != v56);
              uint64_t v55 = __p[1];
            }
            unsigned int v21 = v61 + 24;
            __p[1] = v62;
            *(void *)&long long v199 = v61 + 24;
            *((void *)&v199 + 1) = &v60[24 * v59];
            if (v55) {
              operator delete(v55);
            }
          }
          else
          {
            *(void *)long long v199 = v34;
            v55[8] = 0;
            unsigned int v21 = v55 + 24;
            v55[16] = 0;
          }
          *(void *)&long long v199 = v21;
          goto LABEL_37;
        }
      }
      else if (*(void *)v24 != *(void *)v23)
      {
        goto LABEL_51;
      }
      v23 += 24;
      v24 += 24;
      if (v25 + 24 == v21) {
        goto LABEL_133;
      }
    }
  }
LABEL_7:
  v205 = 0;
  v206 = 0;
  LODWORD(v207) = 0;
  v202 = 0;
  v203 = 0;
  v204 = 0;
  sub_1CD682E60(&v205, HIDWORD(v214) - v215);
  sub_1CBF7ACFC((uint64_t)&v202, (HIDWORD(v214) - v215));
  uint64_t v8 = *a1 + 72;
  for (uint64_t i = *(void *)(*a1 + 80); i != v8; uint64_t i = *(void *)(i + 8))
  {
    if (i) {
      v65 = (void *)(i - 24);
    }
    else {
      v65 = 0;
    }
    v66 = v212;
    if (v213 == v212)
    {
      int v67 = HIDWORD(v214);
      v68 = &v213[8 * HIDWORD(v214)];
      if (HIDWORD(v214))
      {
        uint64_t v69 = 0;
        while (*(void **)&v213[v69] != v65)
        {
          v69 += 8;
          if (8 * HIDWORD(v214) == v69) {
            goto LABEL_166;
          }
        }
        v68 = &v213[v69];
      }
LABEL_166:
      v66 = v213;
    }
    else
    {
      int v70 = v214 - 1;
      unsigned int v71 = (v214 - 1) & ((v65 >> 4) ^ (v65 >> 9));
      v68 = &v213[8 * v71];
      v72 = *(void **)v68;
      if (*(void *)v68 == -1)
      {
        v73 = 0;
LABEL_198:
        if (v73) {
          v68 = v73;
        }
        int v67 = HIDWORD(v214);
        if (*(void **)v68 != v65) {
          v68 = &v213[8 * v214];
        }
      }
      else
      {
        v73 = 0;
        int v74 = 1;
        while (v72 != v65)
        {
          if (v73) {
            BOOL v75 = 0;
          }
          else {
            BOOL v75 = v72 == (void *)-2;
          }
          if (v75) {
            v73 = v68;
          }
          unsigned int v76 = v71 + v74++;
          unsigned int v71 = v76 & v70;
          v68 = &v213[8 * (v76 & v70)];
          v72 = *(void **)v68;
          if (*(void *)v68 == -1) {
            goto LABEL_198;
          }
        }
        int v67 = HIDWORD(v214);
      }
    }
    if (v213 == v66) {
      int v77 = v67;
    }
    else {
      int v77 = v214;
    }
    if (v68 != &v213[8 * v77])
    {
      uint64_t v78 = v209;
      if (*((void *)&v209 + 1) == (void)v209)
      {
        int v79 = DWORD1(v210);
        v80 = (void *)(*((void *)&v209 + 1) + 8 * DWORD1(v210));
        if (DWORD1(v210))
        {
          uint64_t v81 = 0;
          while (*(void **)(*((void *)&v209 + 1) + v81) != v65)
          {
            v81 += 8;
            if (8 * DWORD1(v210) == v81) {
              goto LABEL_190;
            }
          }
          v80 = (void *)(*((void *)&v209 + 1) + v81);
        }
LABEL_190:
        uint64_t v78 = *((void *)&v209 + 1);
      }
      else
      {
        int v82 = v210 - 1;
        unsigned int v83 = (v210 - 1) & ((v65 >> 4) ^ (v65 >> 9));
        v80 = (void *)(*((void *)&v209 + 1) + 8 * v83);
        v84 = (void *)*v80;
        if (*v80 == -1)
        {
          v85 = 0;
LABEL_204:
          if (v85) {
            v80 = v85;
          }
          int v79 = DWORD1(v210);
          if ((void *)*v80 != v65) {
            v80 = (void *)(*((void *)&v209 + 1) + 8 * v210);
          }
        }
        else
        {
          v85 = 0;
          int v86 = 1;
          while (v84 != v65)
          {
            if (v85) {
              BOOL v87 = 0;
            }
            else {
              BOOL v87 = v84 == (void *)-2;
            }
            if (v87) {
              v85 = v80;
            }
            unsigned int v88 = v83 + v86++;
            unsigned int v83 = v88 & v82;
            v80 = (void *)(*((void *)&v209 + 1) + 8 * (v88 & v82));
            v84 = (void *)*v80;
            if (*v80 == -1) {
              goto LABEL_204;
            }
          }
          int v79 = DWORD1(v210);
        }
      }
      unsigned int v89 = *((void *)&v209 + 1) == v78 ? v79 : v210;
      if (v80 != (void *)(*((void *)&v209 + 1) + 8 * v89))
      {
        uint64_t v90 = v203 - v202;
        *(void *)&long long v191 = v65;
        sub_1CD45F378((uint64_t)&v205, (uint64_t *)&v191)[1] = v90;
        v91 = v203;
        if (v203 >= v204)
        {
          v93 = v202;
          uint64_t v94 = v203 - v202;
          unint64_t v95 = v94 + 1;
          if ((unint64_t)(v94 + 1) >> 61) {
            goto LABEL_325;
          }
          uint64_t v96 = (char *)v204 - (char *)v202;
          if (((char *)v204 - (char *)v202) >> 2 > v95) {
            unint64_t v95 = v96 >> 2;
          }
          if ((unint64_t)v96 >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v97 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v97 = v95;
          }
          if (v97)
          {
            if (v97 >> 61) {
              goto LABEL_326;
            }
            v98 = (char *)operator new(8 * v97);
          }
          else
          {
            v98 = 0;
          }
          v99 = &v98[8 * v94];
          *(void *)v99 = v65;
          v92 = (void **)(v99 + 8);
          if (v91 != v93)
          {
            do
            {
              uint64_t v100 = (uint64_t)*--v91;
              *((void *)v99 - 1) = v100;
              v99 -= 8;
            }
            while (v91 != v93);
            v91 = v202;
          }
          v202 = (void **)v99;
          v203 = v92;
          v204 = (void **)&v98[8 * v97];
          if (v91) {
            operator delete(v91);
          }
        }
        else
        {
          *v203 = v65;
          v92 = v91 + 1;
        }
        v203 = v92;
      }
    }
  }
  sub_1CD3C7F68(a2);
  sub_1CD553F7C(a3);
  uint64_t v11 = v202;
  unint64_t v10 = v203;
  if (v202 == v203) {
    goto LABEL_18;
  }
  char v12 = 0;
  do
  {
    __p[0] = *v11;
    uint64_t v13 = a1[2];
    *(void *)&long long v191 = 0;
    if (sub_1CD40EA84(*(void *)v13, *(_DWORD *)(v13 + 16), (uint64_t)__p[0], &v191)) {
      uint64_t v14 = v191;
    }
    else {
      uint64_t v14 = *(void *)v13 + 16 * *(unsigned int *)(v13 + 16);
    }
    if (v14 != *(void *)a1[2] + 16 * *(unsigned int *)(a1[2] + 16))
    {
      uint64_t v15 = *(void *)(v14 + 8);
      if (v15)
      {
        sub_1CD45F378((uint64_t)a2, (uint64_t *)__p)[1] = v15;
        char v12 = 1;
      }
    }
    ++v11;
  }
  while (v11 != v10);
  uint64_t v11 = v202;
  if ((((unint64_t)((char *)v203 - (char *)v202) > 0xF) & v12) == 0)
  {
LABEL_18:
    if (!v11) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  long long v199 = 0u;
  long long v200 = 0u;
  *(_OWORD *)__p = 0u;
  sub_1CD555750((uint64_t *)__p, v203 - v202);
  v101 = (uint64_t *)v202;
  v102 = (uint64_t *)v203;
  if (v202 != v203)
  {
    do
    {
      uint64_t v197 = *v101;
      *((void *)&v191 + 1) = 0;
      LOBYTE(v192) = 0;
      *((void *)&v192 + 1) = 0;
      LOBYTE(v193) = 0;
      long long v194 = 0u;
      long long v195 = 0u;
      long long v196 = 0u;
      uint64_t v106 = a1[2];
      v217[0] = 0;
      if (sub_1CD40EA84(*(void *)v106, *(_DWORD *)(v106 + 16), v197, v217)) {
        uint64_t v107 = v217[0];
      }
      else {
        uint64_t v107 = *(void *)v106 + 16 * *(unsigned int *)(v106 + 16);
      }
      uint64_t v108 = a1[2];
      if (v107 == *(void *)v108 + 16 * *(unsigned int *)(v108 + 16))
      {
        uint64_t v109 = 0;
        LOBYTE(v192) = 1;
      }
      else
      {
        LOBYTE(v192) = 0;
        uint64_t v109 = sub_1CD45F378(v108, &v197)[1];
      }
      *(void *)&long long v191 = 0x2E8BA2E8BA2E8BA3 * (((char *)__p[1] - (char *)__p[0]) >> 3);
      *((void *)&v191 + 1) = v109;
      if (__p[1] >= (void *)v199) {
        v110 = (void *)sub_1CC3BFC54((uint64_t *)__p, &v191);
      }
      else {
        v110 = (void *)(sub_1CD555940((uint64_t)__p[1], &v191) + 88);
      }
      __p[1] = v110;
      sub_1CD5559B0(&v191);
      ++v101;
    }
    while (v101 != v102);
    v111 = v202;
    v112 = v203;
    v189 = v203;
    while (v111 != v112)
    {
      v113 = *v111;
      v190 = v111;
      *(void *)&long long v191 = *v111;
      v114 = sub_1CD554E30(a1[1], (uint64_t *)&v191);
      uint64_t v115 = *((unsigned int *)v114 + 4);
      if (v115)
      {
        v116 = (uint64_t *)v114[1];
        v117 = &v116[v115];
        do
        {
          uint64_t v118 = *v116;
          v217[0] = *v116;
          if (v207)
          {
            unsigned int v119 = ((v118 >> 4) ^ (v118 >> 9)) & (v207 - 1);
            uint64_t v120 = *(void *)&v205[v119];
            if (v118 == v120)
            {
LABEL_247:
              uint64_t v121 = sub_1CD45F378((uint64_t)&v205, (uint64_t *)&v191)[1];
              uint64_t v122 = sub_1CD45F378((uint64_t)&v205, v217)[1];
              uint64_t v123 = v200;
              if ((unint64_t)v200 >= *((void *)&v200 + 1))
              {
                uint64_t v125 = *((void *)&v199 + 1);
                uint64_t v126 = (uint64_t)(v200 - *((void *)&v199 + 1)) >> 5;
                unint64_t v127 = v126 + 1;
                if ((unint64_t)(v126 + 1) >> 59) {
                  goto LABEL_325;
                }
                uint64_t v128 = *((void *)&v200 + 1) - *((void *)&v199 + 1);
                if ((uint64_t)(*((void *)&v200 + 1) - *((void *)&v199 + 1)) >> 4 > v127) {
                  unint64_t v127 = v128 >> 4;
                }
                if ((unint64_t)v128 >= 0x7FFFFFFFFFFFFFE0) {
                  unint64_t v129 = 0x7FFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v129 = v127;
                }
                if (v129)
                {
                  if (v129 >> 59) {
                    goto LABEL_326;
                  }
                  v130 = (char *)operator new(32 * v129);
                }
                else
                {
                  v130 = 0;
                }
                v131 = &v130[32 * v126];
                *(void *)v131 = v121;
                *((void *)v131 + 1) = v122;
                *((void *)v131 + 2) = 0;
                v131[24] = 0;
                v132 = v131;
                if (v123 != v125)
                {
                  do
                  {
                    long long v133 = *(_OWORD *)(v123 - 32);
                    *(_OWORD *)(v132 - 23) = *(_OWORD *)(v123 - 23);
                    *((_OWORD *)v132 - 2) = v133;
                    v132 -= 32;
                    v123 -= 32;
                  }
                  while (v123 != v125);
                  uint64_t v123 = *((void *)&v199 + 1);
                }
                v124 = v131 + 32;
                *((void *)&v199 + 1) = v132;
                *(void *)&long long v200 = v131 + 32;
                *((void *)&v200 + 1) = &v130[32 * v129];
                if (v123) {
                  operator delete((void *)v123);
                }
              }
              else
              {
                *(void *)long long v200 = v121;
                *(void *)(v123 + 8) = v122;
                *(void *)(v123 + 16) = 0;
                v124 = (char *)(v123 + 32);
                *(unsigned char *)(v123 + 24) = 0;
              }
              *(void *)&long long v200 = v124;
              if (v113 == (void *)v118)
              {
                v134 = sub_1CD45F378((uint64_t)&v205, (uint64_t *)&v191);
                *((unsigned char *)__p[0] + 88 * v134[1] + 32) = 1;
              }
            }
            else
            {
              int v135 = 1;
              while (v120 != -4096)
              {
                unsigned int v136 = v119 + v135++;
                unsigned int v119 = v136 & (v207 - 1);
                uint64_t v120 = *(void *)&v205[v119];
                if (v118 == v120) {
                  goto LABEL_247;
                }
              }
            }
          }
          ++v116;
        }
        while (v116 != v117);
      }
      v112 = v189;
      v111 = v190 + 1;
    }
  }
  uint64_t v104 = *((void *)&v199 + 1);
  uint64_t v103 = v200;
  if (*((void *)&v199 + 1) == (void)v200)
  {
    v105 = (unsigned char *)*((void *)&v199 + 1);
  }
  else
  {
    do
    {
      v137 = (char *)__p[0] + 88 * *(void *)v104;
      unint64_t v140 = *((void *)v137 + 7);
      v139 = v137 + 56;
      unint64_t v138 = v140;
      v142 = v139 - 1;
      v141 = (char *)*(v139 - 1);
      if ((unint64_t)v141 >= v140)
      {
        v144 = (char *)__p[0] + 88 * *(void *)v104;
        v147 = (char *)*((void *)v144 + 5);
        v146 = (char **)(v144 + 40);
        v145 = v147;
        uint64_t v148 = (v141 - v147) >> 3;
        unint64_t v149 = v148 + 1;
        if ((unint64_t)(v148 + 1) >> 61) {
          goto LABEL_325;
        }
        uint64_t v150 = v138 - (void)v145;
        if (v150 >> 2 > v149) {
          unint64_t v149 = v150 >> 2;
        }
        if ((unint64_t)v150 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v151 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v151 = v149;
        }
        if (v151)
        {
          if (v151 >> 61) {
            goto LABEL_326;
          }
          v152 = (char *)operator new(8 * v151);
        }
        else
        {
          v152 = 0;
        }
        v153 = &v152[8 * v148];
        *(void *)v153 = v104;
        v143 = v153 + 8;
        if (v141 != v145)
        {
          do
          {
            uint64_t v154 = *((void *)v141 - 1);
            v141 -= 8;
            *((void *)v153 - 1) = v154;
            v153 -= 8;
          }
          while (v141 != v145);
          v141 = *v146;
        }
        *v146 = v153;
        void *v142 = v143;
        void *v139 = &v152[8 * v151];
        if (v141) {
          operator delete(v141);
        }
      }
      else
      {
        *(void *)v141 = v104;
        v143 = v141 + 8;
      }
      void *v142 = v143;
      uint64_t v155 = *(void *)(v104 + 8);
      v156 = (char *)__p[0] + 88 * v155;
      unint64_t v159 = *((void *)v156 + 10);
      v158 = v156 + 80;
      unint64_t v157 = v159;
      v161 = v158 - 1;
      v160 = (char *)*(v158 - 1);
      if ((unint64_t)v160 >= v159)
      {
        v163 = (char *)__p[0] + 88 * v155;
        v166 = (char *)*((void *)v163 + 8);
        v165 = (char **)(v163 + 64);
        v164 = v166;
        uint64_t v167 = (v160 - v166) >> 3;
        unint64_t v168 = v167 + 1;
        if ((unint64_t)(v167 + 1) >> 61) {
          goto LABEL_325;
        }
        uint64_t v169 = v157 - (void)v164;
        if (v169 >> 2 > v168) {
          unint64_t v168 = v169 >> 2;
        }
        if ((unint64_t)v169 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v170 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v170 = v168;
        }
        if (v170)
        {
          if (v170 >> 61) {
            goto LABEL_326;
          }
          v171 = (char *)operator new(8 * v170);
        }
        else
        {
          v171 = 0;
        }
        v172 = &v171[8 * v167];
        *(void *)v172 = v104;
        v162 = v172 + 8;
        if (v160 != v164)
        {
          do
          {
            uint64_t v173 = *((void *)v160 - 1);
            v160 -= 8;
            *((void *)v172 - 1) = v173;
            v172 -= 8;
          }
          while (v160 != v164);
          v160 = *v165;
        }
        *v165 = v172;
        void *v161 = v162;
        void *v158 = &v171[8 * v170];
        if (v160) {
          operator delete(v160);
        }
      }
      else
      {
        *(void *)v160 = v104;
        v162 = v160 + 8;
      }
      void *v161 = v162;
      v104 += 32;
    }
    while (v104 != v103);
    v105 = (unsigned char *)*((void *)&v199 + 1);
    uint64_t v104 = v200;
  }
  sub_1CD682EAC((uint64_t)&v202, a1[1], v105, (unsigned char *)v104);
  if (__p[1] != __p[0])
  {
    uint64_t v174 = 0;
    unint64_t v175 = ((char *)__p[1] - (char *)__p[0]) / 88;
    if (v175 <= 1) {
      unint64_t v175 = 1;
    }
    v176 = (char *)__p[0] + 72;
    while (*(v176 - 1) != *v176)
    {
      ++v174;
      v176 += 11;
      if (v175 == v174) {
        goto LABEL_316;
      }
    }
    uint64_t v201 = v174;
  }
LABEL_316:
  llvm::applyFlowInference(__p);
  v177 = v202;
  for (j = v203; v177 != j; sub_1CD45F378((uint64_t)a2, (uint64_t *)&v191)[1] = v181)
  {
    uint64_t v179 = (uint64_t)*v177++;
    *(void *)&long long v191 = v179;
    v180 = sub_1CD45F378((uint64_t)&v205, (uint64_t *)&v191);
    uint64_t v181 = *((void *)__p[0] + 11 * v180[1] + 3);
  }
  v183 = (void *)*((void *)&v199 + 1);
  v182 = (void *)v200;
  if (*((void *)&v199 + 1) != (void)v200)
  {
    do
    {
      v184 = v202[v183[1]];
      *(void *)&long long v191 = v202[*v183];
      *((void *)&v191 + 1) = v184;
      uint64_t v185 = v183[2];
      sub_1CD553BAC((uint64_t)a3, (uint64_t *)&v191)[2] = v185;
      v183 += 4;
    }
    while (v183 != v182);
    v183 = (void *)*((void *)&v199 + 1);
  }
  if (v183)
  {
    *(void *)&long long v200 = v183;
    operator delete(v183);
  }
  *(void *)&long long v191 = __p;
  sub_1CC3BFD8C((void ***)&v191);
  uint64_t v11 = v202;
  if (v202)
  {
LABEL_19:
    v203 = v11;
    operator delete(v11);
  }
LABEL_20:
  MEMORY[0x1D25D9CD0](v205, 8);
  if (*((void *)&v209 + 1) != (void)v209) {
    free(*((void **)&v209 + 1));
  }
  if (v213 != v212) {
    free(v213);
  }
}

void sub_1CC9B5818()
{
}

void *sub_1CC9B582C(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *__n128 result = &unk_1F262A930;
  result[1] = v3;
  return result;
}

uint64_t sub_1CC9B5874(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_1F262A930;
  a2[1] = v2;
  return result;
}

void sub_1CC9B58A0()
{
}

void sub_1CC9B58D0()
{
}

void *sub_1CC9B58E4(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *__n128 result = &unk_1F262A978;
  result[1] = v3;
  return result;
}

uint64_t sub_1CC9B592C(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_1F262A978;
  a2[1] = v2;
  return result;
}

void sub_1CC9B5958()
{
}

void sub_1CC9B5988()
{
}

void *sub_1CC9B599C(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *__n128 result = &unk_1F262A9C0;
  result[1] = v3;
  return result;
}

uint64_t sub_1CC9B59E4(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_1F262A9C0;
  a2[1] = v2;
  return result;
}

void sub_1CC9B5A10()
{
}

uint64_t sub_1CC9B5A3C()
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = (int *)"";
  v5.n128_u64[0] = (unint64_t)"filename";
  v5.n128_u64[1] = 8;
  v1.n128_u64[0] = (unint64_t)"Profile file loaded by -sample-profile";
  v1.n128_u64[1] = 38;
  int v4 = 1;
  sub_1CD66C9B4((llvm::cl::Option *)&algn_1EBCE4041[63], "sample-profile-file", (const char **)&v2, &v5, &v1, &v4);
  __cxa_atexit((void (*)(void *))sub_1CD41C8DC, &algn_1EBCE4041[63], &dword_1CB82C000);
  v5.n128_u64[0] = (unint64_t)"filename";
  v5.n128_u64[1] = 8;
  v1.n128_u64[0] = (unint64_t)"Profile remapping file loaded by -sample-profile";
  v1.n128_u64[1] = 48;
  uint64_t v2 = (int *)"";
  int v4 = 1;
  sub_1CD6837B8((const char **)&v2, (long long *)&v5, &v1, &v4);
  __cxa_atexit((void (*)(void *))sub_1CD41C8DC, &qword_1EBCE4168, &dword_1CB82C000);
  LODWORD(v2) = 1;
  LOBYTE(v4) = 0;
  v1.n128_u64[0] = (unint64_t)&v4;
  v5.n128_u64[0] = (unint64_t)"If the sample profile is accurate, we will mark all un-sampled callsite and functio"
                                     "n as having 0 samples. Otherwise, treat un-sampled callsites and functions conserva"
                                     "tively as unknown. ";
  v5.n128_u64[1] = 185;
  sub_1CC025F34((llvm::cl::Option *)&unk_1EBCE3540, "profile-sample-accurate", &v2, &v1, &v5);
  __cxa_atexit((void (*)(void *))sub_1CB9064B0, &unk_1EBCE3540, &dword_1CB82C000);
  LODWORD(v2) = 1;
  LOBYTE(v4) = 0;
  v1.n128_u64[0] = (unint64_t)&v4;
  v5.n128_u64[0] = (unint64_t)"If the sample profile is accurate, we will mark all un-sampled branches and calls a"
                                     "s having 0 samples. Otherwise, treat them conservatively as unknown. ";
  v5.n128_u64[1] = 152;
  sub_1CC025F34((llvm::cl::Option *)&unk_1EBCE3600, "profile-sample-block-accurate", &v2, &v1, &v5);
  __cxa_atexit((void (*)(void *))sub_1CB9064B0, &unk_1EBCE3600, &dword_1CB82C000);
  LODWORD(v2) = 1;
  int v4 = 1;
  LOBYTE(v3) = 1;
  v1.n128_u64[0] = (unint64_t)&v3;
  v5.n128_u64[0] = (unint64_t)"For symbols in profile symbol list, regard their profiles to be accurate. It may be"
                                     " overriden by profile-sample-accurate. ";
  v5.n128_u64[1] = 122;
  sub_1CD683950((llvm::cl::Option *)&unk_1EBCE36C0, "profile-accurate-for-symsinlist", &v2, &v4, &v1, &v5);
  __cxa_atexit((void (*)(void *))sub_1CB9064B0, &unk_1EBCE36C0, &dword_1CB82C000);
  LODWORD(v2) = 1;
  LOBYTE(v4) = 1;
  v1.n128_u64[0] = (unint64_t)&v4;
  v5.n128_u64[0] = (unint64_t)"Merge past inlinee's profile to outline version if sample profile loader decided no"
                                     "t to inline a call site. It will only be enabled when top-down order of profile loa"
                                     "ding is enabled. ";
  v5.n128_u64[1] = 183;
  sub_1CC025F34((llvm::cl::Option *)&algn_1EBCE3741[63], "sample-profile-merge-inlinee", &v2, &v1, &v5);
  __cxa_atexit((void (*)(void *))sub_1CB9064B0, &algn_1EBCE3741[63], &dword_1CB82C000);
  LODWORD(v2) = 1;
  LOBYTE(v4) = 1;
  v1.n128_u64[0] = (unint64_t)&v4;
  v5.n128_u64[0] = (unint64_t)"Do profile annotation and inlining for functions in top-down order of call graph du"
                                     "ring sample profile loading. It only works for new pass manager. ";
  v5.n128_u64[1] = 148;
  sub_1CC025F34((llvm::cl::Option *)&unk_1EBCE3840, "sample-profile-top-down-load", &v2, &v1, &v5);
  __cxa_atexit((void (*)(void *))sub_1CB9064B0, &unk_1EBCE3840, &dword_1CB82C000);
  LOBYTE(v4) = 1;
  v1.n128_u64[0] = (unint64_t)&v4;
  LODWORD(v2) = 1;
  v5.n128_u64[0] = (unint64_t)"Process functions in a top-down order defined by the profiled call graph when -samp"
                                     "le-profile-top-down-load is on.";
  v5.n128_u64[1] = 114;
  sub_1CBA9E5B0((llvm::cl::Option *)&unk_1EBCE3900, "use-profiled-call-graph", &v1, &v2, &v5);
  __cxa_atexit((void (*)(void *))sub_1CB9064B0, &unk_1EBCE3900, &dword_1CB82C000);
  LOBYTE(v4) = 1;
  v1.n128_u64[0] = (unint64_t)&v4;
  LODWORD(v2) = 1;
  v5.n128_u64[0] = (unint64_t)"Sort profiled recursion by edge weights.";
  v5.n128_u64[1] = 40;
  sub_1CBA9E5B0((llvm::cl::Option *)&SortProfiledSCC, "sort-profiled-scc-member", &v1, &v2, &v5);
  __cxa_atexit((void (*)(void *))sub_1CB9064B0, &SortProfiledSCC, &dword_1CB82C000);
  LODWORD(v2) = 1;
  LOBYTE(v4) = 0;
  v1.n128_u64[0] = (unint64_t)&v4;
  v5.n128_u64[0] = (unint64_t)"Inline cold call sites in profile loader if it's beneficial for code size.";
  v5.n128_u64[1] = 74;
  sub_1CC025F34((llvm::cl::Option *)&unk_1EBCE39C0, "sample-profile-inline-size", &v2, &v1, &v5);
  __cxa_atexit((void (*)(void *))sub_1CB9064B0, &unk_1EBCE39C0, &dword_1CB82C000);
  LODWORD(v2) = 1;
  LOBYTE(v4) = 0;
  v1.n128_u64[0] = (unint64_t)&v4;
  v5.n128_u64[0] = (unint64_t)"If true, artifically skip inline transformation in sample-loader pass, and merge (o"
                                     "r scale) profiles (as configured by --sample-profile-merge-inlinee).";
  v5.n128_u64[1] = 151;
  sub_1CC025F34((llvm::cl::Option *)algn_1EBCE3A80, "disable-sample-loader-inlining", &v2, &v1, &v5);
  __cxa_atexit((void (*)(void *))sub_1CB9064B0, algn_1EBCE3A80, &dword_1CB82C000);
  LODWORD(v2) = 1;
  int v4 = 12;
  v1.n128_u64[0] = (unint64_t)&v4;
  v5.n128_u64[0] = (unint64_t)"The size growth ratio limit for proirity-based sample profile loader inlining.";
  v5.n128_u64[1] = 78;
  sub_1CD683AE4(&v2, (int **)&v1, &v5);
  __cxa_atexit((void (*)(void *))sub_1CBB1C45C, &ProfileInlineGrowthLimit, &dword_1CB82C000);
  LODWORD(v2) = 1;
  int v4 = 100;
  v1.n128_u64[0] = (unint64_t)&v4;
  v5.n128_u64[0] = (unint64_t)"The lower bound of size growth limit for proirity-based sample profile loader inlining.";
  v5.n128_u64[1] = 87;
  sub_1CD4954D8((llvm::cl::Option *)&ProfileInlineLimitMin, "sample-profile-inline-limit-min", &v2, &v1, &v5);
  __cxa_atexit((void (*)(void *))sub_1CBB1C45C, &ProfileInlineLimitMin, &dword_1CB82C000);
  LODWORD(v2) = 1;
  int v4 = 10000;
  v1.n128_u64[0] = (unint64_t)&v4;
  v5.n128_u64[0] = (unint64_t)"The upper bound of size growth limit for proirity-based sample profile loader inlining.";
  v5.n128_u64[1] = 87;
  sub_1CD4954D8((llvm::cl::Option *)&ProfileInlineLimitMax, "sample-profile-inline-limit-max", &v2, &v1, &v5);
  __cxa_atexit((void (*)(void *))sub_1CBB1C45C, &ProfileInlineLimitMax, &dword_1CB82C000);
  LODWORD(v2) = 1;
  int v4 = 3000;
  v1.n128_u64[0] = (unint64_t)&v4;
  v5.n128_u64[0] = (unint64_t)"Hot callsite threshold for proirity-based sample profile loader inlining.";
  v5.n128_u64[1] = 73;
  sub_1CD683C5C(&v2, (int **)&v1, &v5);
  __cxa_atexit((void (*)(void *))sub_1CBB1C45C, &SampleHotCallSiteThreshold, &dword_1CB82C000);
  LODWORD(v2) = 1;
  int v4 = 45;
  v1.n128_u64[0] = (unint64_t)&v4;
  v5.n128_u64[0] = (unint64_t)"Threshold for inlining cold callsites";
  v5.n128_u64[1] = 37;
  sub_1CD683DD4(&v2, (int **)&v1, &v5);
  __cxa_atexit((void (*)(void *))sub_1CBB1C45C, &SampleColdCallSiteThreshold, &dword_1CB82C000);
  LODWORD(v2) = 1;
  int v4 = 25;
  v1.n128_u64[0] = (unint64_t)&v4;
  v5.n128_u64[0] = (unint64_t)"Relative hotness percentage threshold for indirect call promotion in proirity-based"
                                     " sample profile loader inlining.";
  v5.n128_u64[1] = 115;
  sub_1CD45A86C((uint64_t)&unk_1EBCE3B40, "sample-profile-icp-relative-hotness", &v2, (int **)&v1, &v5);
  __cxa_atexit((void (*)(void *))sub_1CB8598A4, &unk_1EBCE3B40, &dword_1CB82C000);
  LODWORD(v2) = 1;
  int v4 = 1;
  v1.n128_u64[0] = (unint64_t)&v4;
  v5.n128_u64[0] = (unint64_t)"Skip relative hotness check for ICP up to given number of targets.";
  v5.n128_u64[1] = 66;
  sub_1CD683F4C(&v2, (int **)&v1, (long long *)&v5);
  __cxa_atexit((void (*)(void *))sub_1CB8598A4, &qword_1EBCE3C00, &dword_1CB82C000);
  LODWORD(v2) = 1;
  int v4 = 1;
  LOBYTE(v3) = 0;
  v1.n128_u64[0] = (unint64_t)&v3;
  v5.n128_u64[0] = (unint64_t)"Use call site prioritized inlining for sample profile loader.Currently only CSSPGO is supported.";
  v5.n128_u64[1] = 96;
  sub_1CD684074(&v2, &v4, (char **)&v1, &v5);
  __cxa_atexit((void (*)(void *))sub_1CB9064B0, &qword_1EBCE3CC0, &dword_1CB82C000);
  LODWORD(v2) = 1;
  int v4 = 1;
  LOBYTE(v3) = 0;
  v1.n128_u64[0] = (unint64_t)&v3;
  v5.n128_u64[0] = (unint64_t)"Use the preinliner decisions stored in profile context.";
  v5.n128_u64[1] = 55;
  sub_1CD68420C(&v2, &v4, (char **)&v1, &v5);
  __cxa_atexit((void (*)(void *))sub_1CB9064B0, &qword_1EBCE3D80, &dword_1CB82C000);
  LODWORD(v2) = 1;
  int v4 = 1;
  LOBYTE(v3) = 0;
  v1.n128_u64[0] = (unint64_t)&v3;
  v5.n128_u64[0] = (unint64_t)"Allow sample loader inliner to inline recursive calls.";
  v5.n128_u64[1] = 54;
  sub_1CD683950((llvm::cl::Option *)&unk_1EBCE3E40, "sample-profile-recursive-inline", &v2, &v4, &v1, &v5);
  __cxa_atexit((void (*)(void *))sub_1CB9064B0, &unk_1EBCE3E40, &dword_1CB82C000);
  v5.n128_u64[0] = (unint64_t)"filename";
  v5.n128_u64[1] = 8;
  v1.n128_u64[0] = (unint64_t)"Optimization remarks file containing inline remarks to be replayed by inlining from"
                                     " sample profile loader.";
  v1.n128_u64[1] = 106;
  uint64_t v2 = (int *)"";
  int v4 = 1;
  sub_1CD6843A4((const char **)&v2, (long long *)&v5, &v1, &v4);
  __cxa_atexit((void (*)(void *))sub_1CD41C8DC, &qword_1EBCE4250, &dword_1CB82C000);
  int v4 = 0;
  uint64_t v2 = &v4;
  v5.n128_u64[0] = (unint64_t)&v6;
  uint64_t v6 = "Function";
  uint64_t v7 = 8;
  int v8 = 0;
  BOOL v9 = "Replay on functions that have remarks associated with them (default)";
  uint64_t v10 = 68;
  uint64_t v11 = "Module";
  uint64_t v12 = 6;
  int v13 = 1;
  uint64_t v14 = "Replay on the entire module";
  uint64_t v15 = 27;
  v5.n128_u64[1] = 0x400000002;
  v1.n128_u64[0] = (unint64_t)"Whether inline replay should be applied to the entire Module or just the Functions "
                                     "(default) that are present as callers in remarks during sample profile inlining.";
  v1.n128_u64[1] = 163;
  int v3 = 1;
  sub_1CD68453C(&v2, (uint64_t *)&v5, &v1, &v3);
  if ((const char **)v5.n128_u64[0] != &v6) {
    free((void *)v5.n128_u64[0]);
  }
  __cxa_atexit((void (*)(void *))sub_1CD66B0F4, &qword_1EBCE4338, &dword_1CB82C000);
  int v4 = 0;
  uint64_t v2 = &v4;
  v5.n128_u64[0] = (unint64_t)&v6;
  uint64_t v6 = "Original";
  uint64_t v7 = 8;
  int v8 = 0;
  BOOL v9 = "All decisions not in replay send to original advisor (default)";
  uint64_t v10 = 62;
  uint64_t v11 = "AlwaysInline";
  uint64_t v12 = 12;
  int v13 = 1;
  uint64_t v14 = "All decisions not in replay are inlined";
  uint64_t v15 = 39;
  uint64_t v16 = "NeverInline";
  uint64_t v17 = 11;
  int v18 = 2;
  uint64_t v19 = "All decisions not in replay are not inlined";
  uint64_t v20 = 43;
  v5.n128_u64[1] = 0x400000003;
  v1.n128_u64[0] = (unint64_t)"How sample profile inline replay treats sites that don't come from the replay. Orig"
                                     "inal: defers to original advisor, AlwaysInline: inline all sites not in replay, Nev"
                                     "erInline: inline no sites not in replay";
  v1.n128_u64[1] = 205;
  int v3 = 1;
  sub_1CD6846F0(&v2, (uint64_t *)&v5, &v1, &v3);
  if ((const char **)v5.n128_u64[0] != &v6) {
    free((void *)v5.n128_u64[0]);
  }
  __cxa_atexit((void (*)(void *))sub_1CD66B0F8, &qword_1EBCE4590, &dword_1CB82C000);
  int v4 = 3;
  uint64_t v2 = &v4;
  v5.n128_u64[0] = (unint64_t)&v6;
  uint64_t v6 = "Line";
  uint64_t v7 = 4;
  int v8 = 0;
  BOOL v9 = "<Line Number>";
  uint64_t v10 = 13;
  uint64_t v11 = "LineColumn";
  uint64_t v12 = 10;
  int v13 = 1;
  uint64_t v14 = "<Line Number>:<Column Number>";
  uint64_t v15 = 29;
  uint64_t v16 = "LineDiscriminator";
  uint64_t v17 = 17;
  int v18 = 2;
  uint64_t v19 = "<Line Number>.<Discriminator>";
  uint64_t v20 = 29;
  unsigned int v21 = "LineColumnDiscriminator";
  uint64_t v22 = 23;
  int v23 = 3;
  uint64_t v24 = "<Line Number>:<Column Number>.<Discriminator> (default)";
  uint64_t v25 = 55;
  v5.n128_u64[1] = 0x400000004;
  v1.n128_u64[0] = (unint64_t)"How sample profile inline replay file is formatted";
  v1.n128_u64[1] = 50;
  int v3 = 1;
  sub_1CD6848A4(&v2, (uint64_t *)&v5, &v1, &v3);
  if ((const char **)v5.n128_u64[0] != &v6) {
    free((void *)v5.n128_u64[0]);
  }
  __cxa_atexit((void (*)(void *))sub_1CD66B0FC, &qword_1EBCE47E8, &dword_1CB82C000);
  LODWORD(v2) = 3;
  v1.n128_u64[0] = (unint64_t)&v2;
  int v3 = 1;
  int v4 = 1;
  v5.n128_u64[0] = (unint64_t)"Max number of promotions for a single indirect call callsite in sample profile loader";
  v5.n128_u64[1] = 85;
  sub_1CD4943F8((llvm::cl::Option *)&unk_1EBCE3F00, "sample-profile-icp-max-prom", (int **)&v1, &v4, &v3, &v5);
  __cxa_atexit((void (*)(void *))sub_1CB8598A4, &unk_1EBCE3F00, &dword_1CB82C000);
  LODWORD(v2) = 1;
  LOBYTE(v4) = 0;
  v1.n128_u64[0] = (unint64_t)&v4;
  v5.n128_u64[0] = (unint64_t)"Ignore existing branch weights on IR and always overwrite.";
  v5.n128_u64[1] = 58;
  sub_1CC025F34((llvm::cl::Option *)&unk_1EBCE3FC0, "overwrite-existing-weights", &v2, &v1, &v5);
  return __cxa_atexit((void (*)(void *))sub_1CB9064B0, &unk_1EBCE3FC0, &dword_1CB82C000);
}

void llvm::PseudoProbeVerifier::runAfterPass(llvm::PseudoProbeVerifier *this, const llvm::Module *a2)
{
  uint64_t v2 = (char *)a2 + 24;
  int v3 = (char *)*((void *)a2 + 4);
  if (v3 != (char *)a2 + 24)
  {
    do
    {
      if (v3) {
        __n128 v5 = (const llvm::Function *)(v3 - 56);
      }
      else {
        __n128 v5 = 0;
      }
      llvm::PseudoProbeVerifier::runAfterPass(this, v5);
      int v3 = (char *)*((void *)v3 + 1);
    }
    while (v3 != v2);
  }
}

void llvm::PseudoProbeVerifier::runAfterPass(llvm::PseudoProbeVerifier *this, const llvm::LazyCallGraph::SCC *a2)
{
  uint64_t v2 = *((unsigned int *)a2 + 4);
  if (v2)
  {
    int v4 = (uint64_t *)*((void *)a2 + 1);
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      llvm::PseudoProbeVerifier::runAfterPass(this, *(const llvm::Function **)(v6 + 8));
      v5 -= 8;
    }
    while (v5);
  }
}

void llvm::PseudoProbeVerifier::runAfterPass(llvm::PseudoProbeVerifier *this, const llvm::Loop *a2)
{
}

uint64_t sub_1CC9B65D0(uint64_t a1)
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  if (!a1) {
    return 0;
  }
  if (*(_DWORD *)(a1 + 8) != 2) {
    return 0;
  }
  uint64_t v1 = *(void *)(a1 - 8);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = 0;
  do
  {
    std::to_string(&v21, *(_DWORD *)(v1 + 4));
    if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v3 = (int *)&v21;
    }
    else {
      int v3 = (int *)v21.__r_.__value_.__r.__words[0];
    }
    if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      size_t size = *((unsigned char *)&v21.__r_.__value_.__s + 23) & 0x7F;
    }
    else {
      size_t size = v21.__r_.__value_.__l.__size_;
    }
    long long v23 = xmmword_1CFAC4320;
    uint64_t v24 = 0;
    llvm::MD5::update((int *)&v23, v3, size);
    llvm::MD5::final((int *)&v23, v22);
    uint64_t v5 = *(void *)v22;
    if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v21.__r_.__value_.__l.__data_);
    }
    std::to_string(&v21, *(unsigned __int16 *)(v1 + 2));
    if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v6 = (int *)&v21;
    }
    else {
      uint64_t v6 = (int *)v21.__r_.__value_.__r.__words[0];
    }
    if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      size_t v7 = *((unsigned char *)&v21.__r_.__value_.__s + 23) & 0x7F;
    }
    else {
      size_t v7 = v21.__r_.__value_.__l.__size_;
    }
    long long v23 = xmmword_1CFAC4320;
    uint64_t v24 = 0;
    llvm::MD5::update((int *)&v23, v6, v7);
    llvm::MD5::final((int *)&v23, v22);
    uint64_t v8 = *(void *)v22;
    if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v21.__r_.__value_.__l.__data_);
    }
    uint64_t v9 = *(void *)(v1 - 8 * *(unsigned int *)(v1 + 8));
    if ((*(unsigned char *)v9 & 0xFE) == 0x12)
    {
      long long v10 = xmmword_1CFAC4320;
      do
        uint64_t v9 = *(void *)(v9 - 8 * *(unsigned int *)(v9 + 8) + 8);
      while ((*(unsigned char *)v9 & 0xFE) == 0x12);
    }
    else
    {
      long long v10 = xmmword_1CFAC4320;
    }
    uint64_t v11 = v9 - 8 * *(unsigned int *)(v9 + 8);
    uint64_t v12 = *(void *)(v11 + 24);
    if (!v12 || (v13 = *(void **)(v12 + 8), v16 = *v13, v14 = (int *)(v13 + 3), (size_t v15 = v16) == 0))
    {
      uint64_t v17 = *(void *)(v11 + 16);
      if (v17)
      {
        int v18 = *(void **)(v17 + 8);
        size_t v19 = *v18;
        uint64_t v14 = (int *)(v18 + 3);
        size_t v15 = v19;
      }
      else
      {
        size_t v15 = 0;
        uint64_t v14 = 0;
      }
    }
    long long v23 = v10;
    uint64_t v24 = 0;
    llvm::MD5::update((int *)&v23, v14, v15);
    llvm::MD5::final((int *)&v23, (int *)&v21);
    v2 ^= v5 ^ v8 ^ v21.__r_.__value_.__r.__words[0];
    if (*(_DWORD *)(v1 + 8) != 2) {
      break;
    }
    uint64_t v1 = *(void *)(v1 - 8);
  }
  while (v1);
  return v2;
}

void llvm::SampleProfileProber::computeProbeIdForCallsites(llvm::SampleProfileProber *this)
{
  uint64_t v2 = *(void *)(*(void *)this + 80);
  uint64_t v32 = *(void *)this + 72;
  if (v2 != v32)
  {
    int v4 = (uint64_t *)((char *)this + 80);
    uint64_t v34 = (void *)((char *)this + 96);
    do
    {
      uint64_t v5 = v2 - 24;
      uint64_t v33 = v2;
      if (!v2) {
        uint64_t v5 = 0;
      }
      uint64_t v6 = v5 + 40;
      for (uint64_t i = *(void *)(v5 + 48); i != v6; uint64_t i = *(void *)(i + 8))
      {
        if (i) {
          unint64_t v8 = i - 24;
        }
        else {
          unint64_t v8 = 0;
        }
        int v9 = *(unsigned __int8 *)(v8 + 16);
        if (v9 != 33 && v9 != 39)
        {
          if (v9 != 84) {
            continue;
          }
          uint64_t v10 = *(void *)(v8 - 32);
          if (v10)
          {
            if (!*(unsigned char *)(v10 + 16)
              && *(void *)(v10 + 24) == *(void *)(v8 + 72)
              && (*(unsigned char *)(v10 + 33) & 0x20) != 0)
            {
              continue;
            }
          }
        }
        int v11 = *((_DWORD *)this + 30) + 1;
        *((_DWORD *)this + 30) = v11;
        unint64_t v12 = 0x9DDFEA08EB382D69 * (((8 * v8) + 8) ^ HIDWORD(v8));
        unint64_t v13 = 0x9DDFEA08EB382D69 * (HIDWORD(v8) ^ (v12 >> 47) ^ v12);
        unint64_t v14 = 0x9DDFEA08EB382D69 * (v13 ^ (v13 >> 47));
        unint64_t v15 = *((void *)this + 11);
        if (v15)
        {
          uint8x8_t v16 = (uint8x8_t)vcnt_s8((int8x8_t)v15);
          v16.i16[0] = vaddlv_u8(v16);
          if (v16.u32[0] > 1uLL)
          {
            unint64_t v1 = 0x9DDFEA08EB382D69 * (v13 ^ (v13 >> 47));
            if (v14 >= v15) {
              unint64_t v1 = v14 % v15;
            }
          }
          else
          {
            unint64_t v1 = (v15 - 1) & v14;
          }
          uint64_t v17 = *(void ***)(*v4 + 8 * v1);
          if (v17)
          {
            int v18 = *v17;
            if (*v17)
            {
              do
              {
                unint64_t v19 = v18[1];
                if (v19 == v14)
                {
                  if (v18[2] == v8) {
                    goto LABEL_70;
                  }
                }
                else
                {
                  if (v16.u32[0] > 1uLL)
                  {
                    if (v19 >= v15) {
                      v19 %= v15;
                    }
                  }
                  else
                  {
                    v19 &= v15 - 1;
                  }
                  if (v19 != v1) {
                    break;
                  }
                }
                int v18 = (void *)*v18;
              }
              while (v18);
            }
          }
        }
        int v18 = operator new(0x20uLL);
        *int v18 = 0;
        v18[1] = v14;
        v18[2] = v8;
        *((_DWORD *)v18 + 6) = 0;
        float v20 = (float)(unint64_t)(*((void *)this + 13) + 1);
        float v21 = *((float *)this + 28);
        if (!v15 || (float)(v21 * (float)v15) < v20)
        {
          BOOL v22 = (v15 & (v15 - 1)) != 0;
          if (v15 < 3) {
            BOOL v22 = 1;
          }
          unint64_t v23 = v22 | (2 * v15);
          unint64_t v24 = vcvtps_u32_f32(v20 / v21);
          if (v23 <= v24) {
            size_t prime = v24;
          }
          else {
            size_t prime = v23;
          }
          if (prime == 1)
          {
            size_t prime = 2;
          }
          else if ((prime & (prime - 1)) != 0)
          {
            size_t prime = std::__next_prime(prime);
            unint64_t v15 = *((void *)this + 11);
          }
          if (prime > v15) {
            goto LABEL_72;
          }
          if (prime < v15)
          {
            unint64_t v26 = vcvtps_u32_f32((float)*((unint64_t *)this + 13) / *((float *)this + 28));
            if (v15 < 3 || (uint8x8_t v27 = (uint8x8_t)vcnt_s8((int8x8_t)v15), v27.i16[0] = vaddlv_u8(v27), v27.u32[0] > 1uLL))
            {
              unint64_t v26 = std::__next_prime(v26);
            }
            else
            {
              uint64_t v28 = 1 << -(char)__clz(v26 - 1);
              if (v26 >= 2) {
                unint64_t v26 = v28;
              }
            }
            if (prime <= v26) {
              size_t prime = v26;
            }
            if (prime < v15) {
LABEL_72:
            }
              sub_1CD3F1760((uint64_t)v4, prime);
          }
          unint64_t v15 = *((void *)this + 11);
          if ((v15 & (v15 - 1)) != 0)
          {
            if (v14 >= v15) {
              unint64_t v1 = v14 % v15;
            }
            else {
              unint64_t v1 = v14;
            }
          }
          else
          {
            unint64_t v1 = (v15 - 1) & v14;
          }
        }
        uint64_t v29 = *v4;
        uint64_t v30 = *(void **)(*v4 + 8 * v1);
        if (v30)
        {
          *int v18 = *v30;
        }
        else
        {
          *int v18 = *v34;
          *uint64_t v34 = v18;
          *(void *)(v29 + 8 * v1) = v34;
          if (!*v18) {
            goto LABEL_69;
          }
          unint64_t v31 = *(void *)(*v18 + 8);
          if ((v15 & (v15 - 1)) != 0)
          {
            if (v31 >= v15) {
              v31 %= v15;
            }
          }
          else
          {
            v31 &= v15 - 1;
          }
          uint64_t v30 = (void *)(*v4 + 8 * v31);
        }
        *uint64_t v30 = v18;
LABEL_69:
        ++*((void *)this + 13);
LABEL_70:
        *((_DWORD *)v18 + 6) = v11;
      }
      uint64_t v2 = *(void *)(v33 + 8);
    }
    while (v2 != v32);
  }
}

void *llvm::SampleProfileProber::getBlockId(llvm::SampleProfileProber *this, const llvm::BasicBlock *a2)
{
  __n128 result = sub_1CD4CAC44((void *)this + 5, (unint64_t)a2);
  if (result) {
    return (void *)*((unsigned int *)result + 6);
  }
  return result;
}

uint64_t llvm::SampleProfileProber::getCallsiteId(int8x8_t *this, unint64_t a2)
{
  int8x8_t v2 = this[11];
  if (v2)
  {
    unint64_t v3 = 0x9DDFEA08EB382D69 * (((8 * a2) + 8) ^ HIDWORD(a2));
    unint64_t v4 = 0x9DDFEA08EB382D69 * (HIDWORD(a2) ^ (v3 >> 47) ^ v3);
    unint64_t v5 = 0x9DDFEA08EB382D69 * (v4 ^ (v4 >> 47));
    uint8x8_t v6 = (uint8x8_t)vcnt_s8(v2);
    v6.i16[0] = vaddlv_u8(v6);
    if (v6.u32[0] > 1uLL)
    {
      unint64_t v7 = v5;
      if (v5 >= *(void *)&v2) {
        unint64_t v7 = v5 % *(void *)&v2;
      }
    }
    else
    {
      unint64_t v7 = (*(void *)&v2 - 1) & v5;
    }
    unint64_t v8 = *(uint64_t ****)(*(void *)&this[10] + 8 * v7);
    if (v8)
    {
      for (uint64_t i = *v8; i; uint64_t i = (uint64_t **)*i)
      {
        unint64_t v10 = (unint64_t)i[1];
        if (v5 == v10)
        {
          if (i[2] == (uint64_t *)a2) {
            return *((unsigned int *)i + 6);
          }
        }
        else
        {
          if (v6.u32[0] > 1uLL)
          {
            if (v10 >= *(void *)&v2) {
              v10 %= *(void *)&v2;
            }
          }
          else
          {
            v10 &= *(void *)&v2 - 1;
          }
          if (v10 != v7) {
            return 0;
          }
        }
      }
    }
  }
  return 0;
}

void llvm::SampleProfileProber::instrumentOneFunc(llvm::SampleProfileProber *this, llvm::Function *a2, llvm::TargetMachine *a3)
{
  unint64_t v3 = a2;
  v191[4] = *MEMORY[0x1E4F143B8];
  v165 = (uint64_t **)*((void *)a2 + 5);
  unint64_t v4 = **(uint64_t ***)a2;
  unint64_t v168 = v4;
  unsigned int v160 = a2 >> 4;
  if ((*((unsigned char *)a2 + 23) & 0x10) != 0)
  {
    uint64_t v5 = *v4;
    uint64_t v6 = *(void *)(*v4 + 152);
    uint64_t v7 = *(unsigned int *)(v5 + 168);
    if (v7)
    {
      LODWORD(v8) = (v7 - 1) & ((a2 >> 4) ^ (a2 >> 9));
      uint64_t v9 = v6 + 16 * v8;
      unint64_t v10 = *(llvm::Function **)v9;
      if (*(llvm::Function **)v9 == a2)
      {
LABEL_9:
        unint64_t v13 = *(void **)(v9 + 8);
        size_t v16 = *v13;
        unint64_t v14 = (int *)(v13 + 2);
        size_t v15 = v16;
        goto LABEL_10;
      }
      int v11 = 1;
      while (v10 != (llvm::Function *)-4096)
      {
        int v12 = v8 + v11++;
        uint64_t v8 = v12 & (v7 - 1);
        unint64_t v10 = *(llvm::Function **)(v6 + 16 * v8);
        if (v10 == a2)
        {
          uint64_t v9 = v6 + 16 * v8;
          goto LABEL_9;
        }
      }
    }
    uint64_t v9 = v6 + 16 * v7;
    goto LABEL_9;
  }
  size_t v15 = 0;
  unint64_t v14 = (int *)&byte_1CFBCE98E;
LABEL_10:
  *(_OWORD *)__p = xmmword_1CFAC4320;
  uint64_t v176 = 0;
  llvm::MD5::update((int *)__p, v14, v15);
  llvm::MD5::final((int *)__p, (int *)&v170);
  unint64_t v164 = (unint64_t)v170;
  uint64_t v17 = (uint64_t **)*((void *)this + 7);
  v166 = v3;
  if (v17)
  {
    unsigned int v163 = v160 ^ (v3 >> 9);
    do
    {
      uint8x8_t v27 = v17[2];
      uint64_t v28 = v27 + 5;
      uint64_t v29 = (void *)v27[6];
      uint64_t v30 = v28;
      if (v29 != v28)
      {
        uint64_t v30 = v29;
        while (1)
        {
          unint64_t v31 = v30 - 3;
          if (!v30) {
            unint64_t v31 = 0;
          }
          if (*((unsigned char *)v31 + 16) != 83) {
            break;
          }
          uint64_t v30 = (void *)v30[1];
          if (v30 == v28)
          {
            uint64_t v30 = v28;
            goto LABEL_34;
          }
        }
        unsigned int v32 = *((unsigned __int8 *)v30 - 8) - 38;
        BOOL v33 = v32 > 0x38;
        uint64_t v34 = (1 << v32) & 0x100060000000001;
        if (!v33 && v34 != 0) {
          uint64_t v30 = (void *)v30[1];
        }
      }
LABEL_34:
      uint64_t v36 = *((unsigned int *)v17 + 6);
      if (v30) {
        uint64_t v37 = (uint64_t **)(v30 - 3);
      }
      else {
        uint64_t v37 = 0;
      }
      while (1)
      {
        char v38 = (void *)*v28;
        if ((void *)*v28 == v28)
        {
          uint64_t v39 = 0;
        }
        else
        {
          if (v38) {
            uint64_t v39 = (uint64_t **)(v38 - 3);
          }
          else {
            uint64_t v39 = 0;
          }
          if (*((unsigned __int8 *)v39 + 16) - 29 >= 0xB) {
            uint64_t v39 = 0;
          }
        }
        if (v37 == v39
          || *((unsigned char *)v37 + 16) != 83
          && !sub_1CBF63B28((uint64_t)v37)
          && !llvm::Instruction::isLifetimeStartOrEnd((llvm::Instruction *)v37)
          && v37[6])
        {
          break;
        }
        unsigned int v40 = v37[4];
        if (v40) {
          BOOL v41 = v40 == v37[5] + 5;
        }
        else {
          BOOL v41 = 1;
        }
        if (v41) {
          uint64_t v37 = 0;
        }
        else {
          uint64_t v37 = (uint64_t **)(v40 - 3);
        }
      }
      uint64_t v42 = 0;
      uint64_t v43 = **v37;
      __p[0] = &v176;
      __p[1] = (void *)0x200000000;
      uint64_t v181 = v43;
      v182 = &v190;
      v183 = v191;
      uint64_t v184 = 0;
      int v185 = 0;
      __int16 v186 = 512;
      char v187 = 7;
      uint64_t v179 = 0;
      v180 = 0;
      uint64_t v188 = 0;
      uint64_t v189 = 0;
      v190 = &unk_1F2616E88;
      v191[0] = &unk_1F2617008;
      uint64_t v179 = v37[5];
      v180 = v37 + 3;
      uint64_t v44 = (unsigned __int8 *)v37[6];
      *(void *)&long long v173 = v44;
      if (v44)
      {
        llvm::MetadataTracking::track((uint64_t)&v173, v44, 2);
        uint64_t v42 = v173;
      }
      sub_1CB8461A4((uint64_t)__p, 0, v42);
      if ((void)v173)
      {
        int v83 = *(unsigned __int8 *)v173;
        if ((v83 - 4) > 0x1E)
        {
          if ((v83 - 3) >= 0xFFFFFFFE) {
            uint64_t v92 = v173;
          }
          else {
            uint64_t v92 = 0;
          }
          if ((v83 - 3) >= 0xFFFFFFFE)
          {
            unint64_t v85 = v92 + 8;
LABEL_119:
            unint64_t v170 = (unsigned __int8 *)&v173;
            sub_1CC5FA668(v85 + 16, &v170);
            goto LABEL_59;
          }
          if (v83 == 3) {
            *(void *)(v173 + 8) = 0;
          }
        }
        else if ((*(unsigned char *)(v173 + 1) & 0x7F) == 2 || *(_DWORD *)(v173 + 12))
        {
          uint64_t v84 = *(void *)(v173 + 16);
          if ((v84 & 4) != 0)
          {
            unint64_t v85 = v84 & 0xFFFFFFFFFFFFFFF8;
            if (v85) {
              goto LABEL_119;
            }
          }
        }
      }
LABEL_59:
      llvm::Intrinsic::getType(*v165, 244, 0, 0);
      Type = (llvm::PointerType *)llvm::Intrinsic::getType(*v165, 244, 0, 0);
      llvm::Module::getOrInsertFunction((uint64_t)v165, "llvm.pseudoprobe", (const char *)0x10, Type, 0);
      uint64_t v48 = v47;
      long long v173 = 0u;
      long long v174 = 0u;
      unsigned int v49 = *(llvm::ConstantInt **)(*(void *)v181 + 1984);
      unsigned int v50 = *(_DWORD *)(*(void *)v181 + 1992);
      unsigned int v171 = v50 >> 8;
      if (v50 >> 8 > 0x40) {
        operator new[]();
      }
      if (v50 <= 0xFF) {
        unint64_t v51 = 0;
      }
      else {
        unint64_t v51 = 0xFFFFFFFFFFFFFFFFLL >> ~(BYTE1(v50) + 63);
      }
      unint64_t v170 = (unsigned __int8 *)(v51 & v164);
      BOOL v53 = llvm::ConstantInt::get(v49, (llvm::LLVMContext *)&v170, v46);
      if (v171 >= 0x41 && v170) {
        MEMORY[0x1D25D9CB0](v170, 0x1000C8000313F17);
      }
      *(void *)&long long v173 = v53;
      int v54 = *(llvm::ConstantInt **)(*(void *)v181 + 1984);
      unsigned int v55 = *(_DWORD *)(*(void *)v181 + 1992);
      unsigned int v171 = v55 >> 8;
      if (v55 >> 8 > 0x40) {
        operator new[]();
      }
      if (v55 <= 0xFF) {
        unint64_t v56 = 0;
      }
      else {
        unint64_t v56 = 0xFFFFFFFFFFFFFFFFLL >> ~(BYTE1(v55) + 63);
      }
      unint64_t v170 = (unsigned __int8 *)(v56 & v36);
      unint64_t v58 = llvm::ConstantInt::get(v54, (llvm::LLVMContext *)&v170, v52);
      if (v171 >= 0x41 && v170) {
        MEMORY[0x1D25D9CB0](v170, 0x1000C8000313F17);
      }
      *((void *)&v173 + 1) = v58;
      unint64_t v59 = *(llvm::ConstantInt **)(*(void *)v181 + 1960);
      unsigned int v60 = *(_DWORD *)(*(void *)v181 + 1968);
      unsigned int v171 = v60 >> 8;
      if (v60 >> 8 >= 0x41) {
        operator new[]();
      }
      unint64_t v170 = 0;
      v62 = llvm::ConstantInt::get(v59, (llvm::LLVMContext *)&v170, v57);
      if (v171 >= 0x41 && v170) {
        MEMORY[0x1D25D9CB0](v170, 0x1000C8000313F17);
      }
      *(void *)&long long v174 = v62;
      long long v63 = *(llvm::ConstantInt **)(*(void *)v181 + 1984);
      unsigned int v64 = *(_DWORD *)(*(void *)v181 + 1992);
      unsigned int v171 = v64 >> 8;
      if (v64 >> 8 > 0x40) {
        operator new[]();
      }
      if (v64 <= 0xFF) {
        v65 = 0;
      }
      else {
        v65 = (unsigned __int8 *)(0xFFFFFFFFFFFFFFFFLL >> ~(BYTE1(v64) + 63));
      }
      unint64_t v3 = v166;
      unint64_t v170 = v65;
      v66 = llvm::ConstantInt::get(v63, (llvm::LLVMContext *)&v170, v61);
      if (v171 >= 0x41 && v170) {
        MEMORY[0x1D25D9CB0](v170, 0x1000C8000313F17);
      }
      *((void *)&v174 + 1) = v66;
      if (v48) {
        int v67 = *(uint64_t ***)(v48 + 24);
      }
      else {
        int v67 = 0;
      }
      __int16 v172 = 257;
      v68 = (unsigned __int8 *)(sub_1CB845BAC((uint64_t *)__p, v67, (uint64_t **)v48, (uint64_t *)&v173, 4, (uint64_t)&v170, 0)+ 48);
      if (*(void *)v68 || (*((unsigned char *)v166 + 23) & 0x20) == 0) {
        goto LABEL_79;
      }
      uint64_t v69 = ***(void ***)v166;
      unint64_t v170 = (unsigned __int8 *)v166;
      int v70 = *(_DWORD *)(v69 + 2496);
      if (!v70)
      {
        v93 = 0;
LABEL_123:
        int v74 = (llvm **)sub_1CC609054(v69 + 2480, (uint64_t)&v170, (uint64_t *)&v170, v93);
        uint64_t v94 = v170;
        v74[4] = 0;
        v74[3] = 0;
        *int v74 = (llvm *)v94;
        v74[1] = (llvm *)(v74 + 3);
        v74[2] = (llvm *)0x100000000;
        goto LABEL_94;
      }
      uint64_t v71 = *(void *)(v69 + 2480);
      int v72 = v70 - 1;
      unsigned int v73 = v72 & v163;
      int v74 = (llvm **)(v71 + 40 * (v72 & v163));
      BOOL v75 = *v74;
      if (*v74 != v166)
      {
        unsigned int v76 = 0;
        int v77 = 1;
        while (v75 != (llvm *)-4096)
        {
          if (v76) {
            BOOL v78 = 0;
          }
          else {
            BOOL v78 = v75 == (llvm *)-8192;
          }
          if (v78) {
            unsigned int v76 = v74;
          }
          unsigned int v79 = v73 + v77++;
          unsigned int v73 = v79 & v72;
          int v74 = (llvm **)(v71 + 40 * v73);
          BOOL v75 = *v74;
          if (*v74 == v166) {
            goto LABEL_94;
          }
        }
        if (v76) {
          v93 = v76;
        }
        else {
          v93 = v74;
        }
        goto LABEL_123;
      }
LABEL_94:
      uint64_t v80 = *((unsigned int *)v74 + 4);
      if (!v80) {
        goto LABEL_79;
      }
      uint64_t v81 = (uint64_t *)((char *)v74[1] + 8);
      uint64_t v82 = 16 * v80;
      while (*((_DWORD *)v81 - 2))
      {
        v81 += 2;
        v82 -= 16;
        if (!v82) {
          goto LABEL_79;
        }
      }
      uint64_t v86 = *v81;
      if (!*v81) {
        goto LABEL_79;
      }
      uint64_t v87 = *(void *)(v86 + 16);
      unsigned int v88 = (void *)(v87 & 0xFFFFFFFFFFFFFFF8);
      if ((v87 & 4) != 0) {
        unsigned int v88 = (void *)*v88;
      }
      Impl = (unsigned __int8 *)llvm::DILocation::getImpl(v88, 0, 0, v86, 0, 0, 0, 1);
      uint64_t v169 = Impl;
      if (Impl) {
        llvm::MetadataTracking::track((uint64_t)&v169, Impl, 2);
      }
      if (&v169 != (unsigned __int8 **)v68)
      {
        uint64_t v90 = *(unsigned __int8 **)v68;
        if (!*(void *)v68) {
          goto LABEL_112;
        }
        int v95 = *v90;
        if ((v95 - 4) > 0x1E)
        {
          if ((v95 - 3) >= 0xFFFFFFFE) {
            v98 = *(unsigned __int8 **)v68;
          }
          else {
            v98 = 0;
          }
          if ((v95 - 3) < 0xFFFFFFFE)
          {
            if (v95 == 3) {
              *((void *)v90 + 1) = 0;
            }
            goto LABEL_112;
          }
          unint64_t v97 = (unint64_t)(v98 + 8);
LABEL_137:
          unint64_t v170 = v68;
          sub_1CC5FA668(v97 + 16, &v170);
        }
        else if ((v90[1] & 0x7F) == 2 || *((_DWORD *)v90 + 3))
        {
          uint64_t v96 = *((void *)v90 + 2);
          if ((v96 & 4) != 0)
          {
            unint64_t v97 = v96 & 0xFFFFFFFFFFFFFFF8;
            if (v97) {
              goto LABEL_137;
            }
          }
        }
LABEL_112:
        v91 = v169;
        *(void *)v68 = v169;
        if (v91) {
          llvm::MetadataTracking::retrack((uint64_t)&v169, v91, (uint64_t)v68);
        }
        goto LABEL_79;
      }
      if (v169)
      {
        int v99 = *v169;
        if ((v99 - 4) > 0x1E)
        {
          if ((v99 - 3) >= 0xFFFFFFFE) {
            v102 = v169;
          }
          else {
            v102 = 0;
          }
          if ((v99 - 3) < 0xFFFFFFFE)
          {
            unint64_t v3 = v166;
            if (v99 == 3) {
              *((void *)v169 + 1) = 0;
            }
            goto LABEL_79;
          }
          unint64_t v101 = (unint64_t)(v102 + 8);
        }
        else
        {
          unint64_t v3 = v166;
          if ((v169[1] & 0x7F) != 2 && !*((_DWORD *)v169 + 3)) {
            goto LABEL_79;
          }
          uint64_t v100 = *((void *)v169 + 2);
          if ((v100 & 4) == 0) {
            goto LABEL_79;
          }
          unint64_t v101 = v100 & 0xFFFFFFFFFFFFFFF8;
          if (!v101) {
            goto LABEL_79;
          }
        }
        unint64_t v170 = (unsigned __int8 *)&v169;
        sub_1CC5FA668(v101 + 16, &v170);
        unint64_t v3 = v166;
      }
LABEL_79:
      if (__p[0] != &v176) {
        free(__p[0]);
      }
      uint64_t v17 = (uint64_t **)*v17;
    }
    while (v17);
  }
  int v18 = (uint64_t *)*((void *)this + 12);
  if (v18)
  {
    unsigned int v103 = v160 ^ (v3 >> 9);
    do
    {
      uint64_t v104 = v18[2];
      uint64_t v105 = *(void *)(v104 - 32);
      if (v105 && !*(unsigned char *)(v105 + 16) && *(void *)(v105 + 24) == *(void *)(v104 + 72)) {
        int v106 = 0x8000000;
      }
      else {
        int v106 = 0x4000000;
      }
      int v107 = *((_DWORD *)v18 + 6);
      v110 = *(unsigned __int8 **)(v104 + 48);
      uint64_t v109 = (unsigned __int8 **)(v104 + 48);
      uint64_t v108 = v110;
      if (v110)
      {
        unint64_t v170 = v108;
        goto LABEL_192;
      }
      if ((*((unsigned char *)v3 + 23) & 0x20) == 0) {
        goto LABEL_191;
      }
      uint64_t v111 = ***(void ***)v3;
      __p[0] = v3;
      int v112 = *(_DWORD *)(v111 + 2496);
      if (v112)
      {
        uint64_t v113 = *(void *)(v111 + 2480);
        int v114 = v112 - 1;
        unsigned int v115 = v114 & v103;
        v116 = (llvm::Function **)(v113 + 40 * (v114 & v103));
        v117 = *v116;
        if (*v116 == v3) {
          goto LABEL_187;
        }
        uint64_t v118 = 0;
        int v119 = 1;
        while (v117 != (llvm::Function *)-4096)
        {
          if (v118) {
            BOOL v120 = 0;
          }
          else {
            BOOL v120 = v117 == (llvm::Function *)-8192;
          }
          if (v120) {
            uint64_t v118 = v116;
          }
          unsigned int v121 = v115 + v119++;
          unsigned int v115 = v121 & v114;
          v116 = (llvm::Function **)(v113 + 40 * v115);
          v117 = *v116;
          if (*v116 == v3) {
            goto LABEL_187;
          }
        }
        if (v118) {
          v137 = v118;
        }
        else {
          v137 = v116;
        }
      }
      else
      {
        v137 = 0;
      }
      v116 = (llvm::Function **)sub_1CC609054(v111 + 2480, (uint64_t)__p, (uint64_t *)__p, v137);
      unint64_t v138 = (llvm::Function *)__p[0];
      v116[4] = 0;
      v116[3] = 0;
      uint64_t *v116 = v138;
      v116[1] = (llvm::Function *)(v116 + 3);
      v116[2] = (llvm::Function *)0x100000000;
LABEL_187:
      uint64_t v122 = *((unsigned int *)v116 + 4);
      if (!v122) {
        goto LABEL_191;
      }
      uint64_t v123 = (uint64_t *)((char *)v116[1] + 8);
      uint64_t v124 = 16 * v122;
      while (*((_DWORD *)v123 - 2))
      {
        v123 += 2;
        v124 -= 16;
        if (!v124) {
          goto LABEL_191;
        }
      }
      uint64_t v125 = *v123;
      if (!*v123) {
        goto LABEL_191;
      }
      uint64_t v126 = *(void *)(v125 + 16);
      unint64_t v127 = (void *)(v126 & 0xFFFFFFFFFFFFFFF8);
      if ((v126 & 4) != 0) {
        unint64_t v127 = (void *)*v127;
      }
      uint64_t v128 = (unsigned __int8 *)llvm::DILocation::getImpl(v127, 0, 0, v125, 0, 0, 0, 1);
      unint64_t v170 = v128;
      if (v128) {
        llvm::MetadataTracking::track((uint64_t)&v170, v128, 2);
      }
      if (&v170 != v109)
      {
        unint64_t v129 = *v109;
        if (*v109)
        {
          int v146 = *v129;
          if ((v146 - 4) > 0x1E)
          {
            if ((v146 - 3) >= 0xFFFFFFFE) {
              unint64_t v151 = *v109;
            }
            else {
              unint64_t v151 = 0;
            }
            if ((v146 - 3) < 0xFFFFFFFE)
            {
              if (v146 == 3) {
                *((void *)v129 + 1) = 0;
              }
              goto LABEL_203;
            }
            unint64_t v148 = (unint64_t)(v151 + 8);
          }
          else
          {
            if ((v129[1] & 0x7F) != 2 && !*((_DWORD *)v129 + 3)) {
              goto LABEL_203;
            }
            uint64_t v147 = *((void *)v129 + 2);
            if ((v147 & 4) == 0) {
              goto LABEL_203;
            }
            unint64_t v148 = v147 & 0xFFFFFFFFFFFFFFF8;
            if (!v148) {
              goto LABEL_203;
            }
          }
          __p[0] = v109;
          sub_1CC5FA668(v148 + 16, __p);
        }
LABEL_203:
        v130 = v170;
        *uint64_t v109 = v170;
        if (!v130) {
          goto LABEL_193;
        }
        llvm::MetadataTracking::retrack((uint64_t)&v170, v130, (uint64_t)v109);
        goto LABEL_191;
      }
      if (!v170) {
        goto LABEL_191;
      }
      int v155 = *v170;
      if ((v155 - 4) > 0x1E)
      {
        if ((v155 - 3) >= 0xFFFFFFFE) {
          unint64_t v159 = v170;
        }
        else {
          unint64_t v159 = 0;
        }
        if ((v155 - 3) >= 0xFFFFFFFE)
        {
          unint64_t v157 = (unint64_t)(v159 + 8);
LABEL_303:
          __p[0] = &v170;
          sub_1CC5FA668(v157 + 16, __p);
          unint64_t v3 = v166;
          goto LABEL_191;
        }
        unint64_t v3 = v166;
        if (v155 == 3) {
          *((void *)v170 + 1) = 0;
        }
      }
      else
      {
        unint64_t v3 = v166;
        if ((v170[1] & 0x7F) == 2 || *((_DWORD *)v170 + 3))
        {
          uint64_t v156 = *((void *)v170 + 2);
          if ((v156 & 4) != 0)
          {
            unint64_t v157 = v156 & 0xFFFFFFFFFFFFFFF8;
            if (v157) {
              goto LABEL_303;
            }
          }
        }
      }
LABEL_191:
      uint64_t v108 = *v109;
      unint64_t v170 = v108;
      if (!v108) {
        goto LABEL_193;
      }
LABEL_192:
      llvm::MetadataTracking::track((uint64_t)&v170, v108, 2);
      if (!v170) {
        goto LABEL_193;
      }
      v131 = (unsigned __int8 *)sub_1CD5519E8((uint64_t)v170, v106 | (8 * v107) | 0x3200007u);
      *(void *)&long long v173 = v131;
      if (v131) {
        llvm::MetadataTracking::track((uint64_t)&v173, v131, 2);
      }
      if (v170)
      {
        int v140 = *v170;
        if ((v140 - 4) > 0x1E)
        {
          if ((v140 - 3) >= 0xFFFFFFFE) {
            unint64_t v149 = v170;
          }
          else {
            unint64_t v149 = 0;
          }
          if ((v140 - 3) >= 0xFFFFFFFE)
          {
            unint64_t v142 = (unint64_t)(v149 + 8);
LABEL_258:
            __p[0] = &v170;
            sub_1CC5FA668(v142 + 16, __p);
            goto LABEL_208;
          }
          if (v140 == 3) {
            *((void *)v170 + 1) = 0;
          }
        }
        else if ((v170[1] & 0x7F) == 2 || *((_DWORD *)v170 + 3))
        {
          uint64_t v141 = *((void *)v170 + 2);
          if ((v141 & 4) != 0)
          {
            unint64_t v142 = v141 & 0xFFFFFFFFFFFFFFF8;
            if (v142) {
              goto LABEL_258;
            }
          }
        }
      }
LABEL_208:
      unint64_t v170 = (unsigned __int8 *)v173;
      if ((void)v173)
      {
        llvm::MetadataTracking::retrack((uint64_t)&v173, (unsigned __int8 *)v173, (uint64_t)&v170);
        uint64_t v167 = v170;
        if (v170) {
          llvm::MetadataTracking::track((uint64_t)&v167, v170, 2);
        }
      }
      else
      {
        uint64_t v167 = 0;
      }
      if (&v167 != v109)
      {
        v132 = *v109;
        if (!*v109) {
          goto LABEL_212;
        }
        int v143 = *v132;
        if ((v143 - 4) > 0x1E)
        {
          if ((v143 - 3) >= 0xFFFFFFFE) {
            uint64_t v150 = *v109;
          }
          else {
            uint64_t v150 = 0;
          }
          if ((v143 - 3) < 0xFFFFFFFE)
          {
            if (v143 == 3) {
              *((void *)v132 + 1) = 0;
            }
            goto LABEL_212;
          }
          unint64_t v145 = (unint64_t)(v150 + 8);
LABEL_264:
          __p[0] = v109;
          sub_1CC5FA668(v145 + 16, __p);
        }
        else if ((v132[1] & 0x7F) == 2 || *((_DWORD *)v132 + 3))
        {
          uint64_t v144 = *((void *)v132 + 2);
          if ((v144 & 4) != 0)
          {
            unint64_t v145 = v144 & 0xFFFFFFFFFFFFFFF8;
            if (v145) {
              goto LABEL_264;
            }
          }
        }
LABEL_212:
        long long v133 = v167;
        *uint64_t v109 = v167;
        if (v133)
        {
          llvm::MetadataTracking::retrack((uint64_t)&v167, v133, (uint64_t)v109);
          uint64_t v167 = 0;
        }
        goto LABEL_214;
      }
      if (!v167) {
        goto LABEL_214;
      }
      int v152 = *v167;
      if ((v152 - 4) > 0x1E)
      {
        if ((v152 - 3) >= 0xFFFFFFFE) {
          v158 = v167;
        }
        else {
          v158 = 0;
        }
        if ((v152 - 3) >= 0xFFFFFFFE)
        {
          unint64_t v154 = (unint64_t)(v158 + 8);
LABEL_297:
          __p[0] = &v167;
          sub_1CC5FA668(v154 + 16, __p);
          unint64_t v3 = v166;
          goto LABEL_214;
        }
        unint64_t v3 = v166;
        if (v152 == 3) {
          *((void *)v167 + 1) = 0;
        }
      }
      else
      {
        unint64_t v3 = v166;
        if ((v167[1] & 0x7F) == 2 || *((_DWORD *)v167 + 3))
        {
          uint64_t v153 = *((void *)v167 + 2);
          if ((v153 & 4) != 0)
          {
            unint64_t v154 = v153 & 0xFFFFFFFFFFFFFFF8;
            if (v154) {
              goto LABEL_297;
            }
          }
        }
      }
LABEL_214:
      if (v170)
      {
        int v134 = *v170;
        if ((v134 - 4) > 0x1E)
        {
          if ((v134 - 3) >= 0xFFFFFFFE) {
            v139 = v170;
          }
          else {
            v139 = 0;
          }
          if ((v134 - 3) < 0xFFFFFFFE)
          {
            if (v134 == 3) {
              *((void *)v170 + 1) = 0;
            }
            goto LABEL_193;
          }
          unint64_t v136 = (unint64_t)(v139 + 8);
        }
        else
        {
          if ((v170[1] & 0x7F) != 2 && !*((_DWORD *)v170 + 3)) {
            goto LABEL_193;
          }
          uint64_t v135 = *((void *)v170 + 2);
          if ((v135 & 4) == 0) {
            goto LABEL_193;
          }
          unint64_t v136 = v135 & 0xFFFFFFFFFFFFFFF8;
          if (!v136) {
            goto LABEL_193;
          }
        }
        __p[0] = &v170;
        sub_1CC5FA668(v136 + 16, __p);
      }
LABEL_193:
      int v18 = (uint64_t *)*v18;
    }
    while (v18);
  }
  unint64_t v19 = llvm::MDBuilder::createPseudoProbeDesc(&v168, v164, *((void *)this + 4), v3);
  __p[0] = "llvm.pseudo_probe_desc";
  WORD4(v177) = 259;
  uint64_t NamedMetadata = llvm::Module::getNamedMetadata((llvm::Module *)v165, (const char **)__p);
  __p[0] = v19;
  uint64_t v22 = *(void *)(NamedMetadata + 48);
  uint64_t v23 = *(unsigned int *)(v22 + 8);
  if (v23 >= *(_DWORD *)(v22 + 12))
  {
    sub_1CC608328(*(void *)(NamedMetadata + 48), (unsigned __int8 **)__p);
  }
  else
  {
    unint64_t v24 = (llvm::MDNode **)(*(void *)v22 + 8 * v23);
    *unint64_t v24 = v19;
    if (v19)
    {
      llvm::MetadataTracking::track((uint64_t)v24, (unsigned __int8 *)v19, 2);
      LODWORD(v23) = *(_DWORD *)(v22 + 8);
    }
    *(_DWORD *)(v22 + 8) = v23 + 1;
  }
  int v25 = *((_DWORD *)v166 + 8);
  if ((v25 & 0xF) != 1)
  {
    if (*((unsigned char *)v166 + 16))
    {
      if (*((unsigned char *)v166 + 16) == 3)
      {
        BOOL v26 = (*((_DWORD *)v166 + 5) & 0x7FFFFFF) == 0;
        if (!a3) {
          return;
        }
      }
      else
      {
        BOOL v26 = 0;
        if (!a3) {
          return;
        }
      }
      goto LABEL_313;
    }
    BOOL v26 = (v25 & 0x800000) == 0;
    if (*((llvm **)v166 + 9) != (llvm *)((char *)v166 + 72)) {
      BOOL v26 = 0;
    }
    if (a3)
    {
LABEL_313:
      if (!v26)
      {
        if (*((char *)a3 + 471) < 0)
        {
          sub_1CB8BDF7C((uint64_t)__p, *((const void **)a3 + 56), *((void *)a3 + 57));
        }
        else
        {
          *(_OWORD *)__p = *((_OWORD *)a3 + 28);
          uint64_t v176 = *((void *)a3 + 58);
        }
        uint64_t v178 = *((void *)a3 + 61);
        long long v177 = *(_OWORD *)((char *)a3 + 472);
        if ((HIDWORD(v178) > 9 || ((1 << SBYTE4(v178)) & 0x320) == 0) && (*((unsigned char *)a3 + 1040) & 2) != 0) {
          llvm::getOrCreateFunctionComdat(v166, (llvm::Function *)__p, v21);
        }
        if (SHIBYTE(v176) < 0) {
          operator delete(__p[0]);
        }
      }
    }
  }
}

uint64_t sub_1CC9B7DEC(llvm::PseudoProbeVerifier **a1, const std::string::value_type *a2, std::string::size_type a3, uint64_t *a4)
{
  uint64_t v6 = *a4;
  *a4 = 0;
  uint64_t v7 = *a1;
  if (v6) {
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v6 + 16))(&v9, v6);
  }
  else {
    uint64_t v9 = 0;
  }
  llvm::PseudoProbeVerifier::runAfterPass(v7, a2, a3, &v9);
  uint64_t result = v9;
  uint64_t v9 = 0;
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  if (v6) {
    return (*(uint64_t (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  return result;
}

void *sub_1CC9B7ED4(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  unint64_t v7 = a3 - a2 + 32 * a2;
  unint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      uint64_t v4 = a3 - a2 + 32 * a2;
      if (v7 >= v8) {
        uint64_t v4 = v7 % v8;
      }
    }
    else
    {
      uint64_t v4 = (v8 - 1) & v7;
    }
    unint64_t v10 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v10)
    {
      int v11 = *v10;
      if (*v10)
      {
        do
        {
          unint64_t v12 = v11[1];
          if (v12 == v7)
          {
            if (v11[2] == a2 && v11[3] == a3) {
              return v11;
            }
          }
          else
          {
            if (v9.u32[0] > 1uLL)
            {
              if (v12 >= v8) {
                v12 %= v8;
              }
            }
            else
            {
              v12 &= v8 - 1;
            }
            if (v12 != v4) {
              break;
            }
          }
          int v11 = (void *)*v11;
        }
        while (v11);
      }
    }
  }
  int v11 = operator new(0x28uLL);
  *int v11 = 0;
  v11[1] = v7;
  *((_OWORD *)v11 + 1) = *a4;
  *((_DWORD *)v11 + 8) = 0;
  float v14 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v15 = *(float *)(a1 + 32);
  if (!v8 || (float)(v15 * (float)v8) < v14)
  {
    BOOL v16 = 1;
    if (v8 >= 3) {
      BOOL v16 = (v8 & (v8 - 1)) != 0;
    }
    unint64_t v17 = v16 | (2 * v8);
    unint64_t v18 = vcvtps_u32_f32(v14 / v15);
    if (v17 <= v18) {
      size_t v19 = v18;
    }
    else {
      size_t v19 = v17;
    }
    sub_1CC9B3D48(a1, v19);
    unint64_t v8 = *(void *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v7 >= v8) {
        uint64_t v4 = v7 % v8;
      }
      else {
        uint64_t v4 = v7;
      }
    }
    else
    {
      uint64_t v4 = (v8 - 1) & v7;
    }
  }
  uint64_t v20 = *(void *)a1;
  float v21 = *(void **)(*(void *)a1 + 8 * v4);
  if (v21)
  {
    *int v11 = *v21;
LABEL_42:
    *float v21 = v11;
    goto LABEL_43;
  }
  *int v11 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v11;
  *(void *)(v20 + 8 * v4) = a1 + 16;
  if (*v11)
  {
    unint64_t v22 = *(void *)(*v11 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v22 >= v8) {
        v22 %= v8;
      }
    }
    else
    {
      v22 &= v8 - 1;
    }
    float v21 = (void *)(*(void *)a1 + 8 * v22);
    goto LABEL_42;
  }
LABEL_43:
  ++*(void *)(a1 + 24);
  return v11;
}

uint64_t sub_1CC9B80DC(void **a1, char a2)
{
  unint64_t v3 = (unint64_t)*a1;
  int8x8_t v2 = (char *)a1[1];
  uint64_t v4 = (char *)(v2 - (unsigned char *)*a1);
  unint64_t v5 = (unint64_t)(v4 + 1);
  if ((uint64_t)(v4 + 1) < 0) {
    abort();
  }
  unint64_t v8 = (unint64_t)a1[2] - v3;
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x3FFFFFFFFFFFFFFFLL) {
    size_t v9 = 0x7FFFFFFFFFFFFFFFLL;
  }
  else {
    size_t v9 = v5;
  }
  if (v9) {
    unint64_t v10 = (char *)operator new(v9);
  }
  else {
    unint64_t v10 = 0;
  }
  int v11 = &v10[v9];
  v4[(void)v10] = a2;
  uint64_t v12 = (uint64_t)&v4[(void)v10 + 1];
  if (v2 == (char *)v3)
  {
    unint64_t v10 = &v4[(void)v10];
  }
  else
  {
    unint64_t v13 = &v2[~v3];
    do
    {
      char v14 = *--v2;
      (v13--)[(void)v10] = v14;
    }
    while (v2 != (char *)v3);
    int8x8_t v2 = (char *)*a1;
  }
  *a1 = v10;
  a1[1] = (void *)v12;
  a1[2] = v11;
  if (v2) {
    operator delete(v2);
  }
  return v12;
}

uint64_t sub_1CC9B81B4()
{
  char v3 = 0;
  uint64_t v4 = &v3;
  int v2 = 1;
  v1.n128_u64[0] = (unint64_t)"Do pseudo probe verification";
  v1.n128_u64[1] = 28;
  sub_1CBA9E5B0((llvm::cl::Option *)&unk_1EBCE4A70, "verify-pseudo-probe", &v4, &v2, &v1);
  __cxa_atexit((void (*)(void *))sub_1CB9064B0, &unk_1EBCE4A70, &dword_1CB82C000);
  LODWORD(v4) = 1;
  v1.n128_u64[0] = (unint64_t)"The option to specify the name of the functions to verify.";
  v1.n128_u64[1] = 58;
  sub_1CD685DE0(&v4, (long long *)&v1);
  __cxa_atexit((void (*)(void *))sub_1CD510A20, &qword_1EBCE4BF0, &dword_1CB82C000);
  char v3 = 1;
  uint64_t v4 = &v3;
  int v2 = 1;
  v1.n128_u64[0] = (unint64_t)"Update pseudo probe distribution factor";
  v1.n128_u64[1] = 39;
  sub_1CBA9E5B0((llvm::cl::Option *)&unk_1EBCE4B30, "update-pseudo-probe", &v4, &v2, &v1);
  return __cxa_atexit((void (*)(void *))sub_1CB9064B0, &unk_1EBCE4B30, &dword_1CB82C000);
}

void llvm::initializeIPSCCPLegacyPassPass(llvm *this, llvm::PassRegistry *a2)
{
  int v2 = this;
  if (atomic_load_explicit((atomic_ullong *volatile)&qword_1EBCE4CD8, memory_order_acquire) != -1)
  {
    v4[0] = sub_1CC9B8350;
    v4[1] = &v2;
    char v3 = v4;
    std::__call_once(&qword_1EBCE4CD8, &v3, (void (__cdecl *)(void *))sub_1CB848390);
  }
}

void sub_1CC9B8350(uint64_t a1)
{
}

uint64_t sub_1CC9B8400(uint64_t a1)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = &unk_1EBCE4CD0;
  *(_DWORD *)(a1 + 24) = 4;
  *(void *)a1 = &unk_1F262AA08;
  atomic_ullong PassRegistry = llvm::PassRegistry::getPassRegistry((llvm::PassRegistry *)a1);
  if (atomic_load_explicit((atomic_ullong *volatile)&qword_1EBCE4CD8, memory_order_acquire) != -1)
  {
    v5[0] = sub_1CC9B8350;
    v5[1] = &PassRegistry;
    uint64_t v4 = v5;
    std::__call_once(&qword_1EBCE4CD8, &v4, (void (__cdecl *)(void *))sub_1CB848390);
  }
  return a1;
}

void llvm::initializeFunctionSpecializationLegacyPassPass(llvm *this, llvm::PassRegistry *a2)
{
  int v2 = this;
  if (atomic_load_explicit((atomic_ullong *volatile)&qword_1EBCE4CC8, memory_order_acquire) != -1)
  {
    v4[0] = sub_1CC9B8520;
    v4[1] = &v2;
    char v3 = v4;
    std::__call_once(&qword_1EBCE4CC8, &v3, (void (__cdecl *)(void *))sub_1CB848390);
  }
}

void sub_1CC9B8520(uint64_t a1)
{
}

void sub_1CC9B85D8()
{
}

void sub_1CC9B8618(llvm::Pass *a1)
{
  llvm::Pass::~Pass(a1);

  JUMPOUT(0x1D25D9CE0);
}

void sub_1CC9B8650(uint64_t a1, uint64_t a2)
{
  sub_1CB843600(a2, a2, (uint64_t)llvm::AssumptionCacheTracker::ID);
  sub_1CB843600(a2, a2, (uint64_t)&llvm::DominatorTreeWrapperPass::ID);

  sub_1CB843600(a2, a2, (uint64_t)llvm::TargetLibraryInfoWrapperPass::ID);
}

uint64_t sub_1CC9B86B4(llvm::ModulePass *a1, llvm::LLVMContextImpl ***a2)
{
  v5[4] = *MEMORY[0x1E4F143B8];
  if ((llvm::ModulePass::skipModule(a1, a2) & 1) == 0)
  {
    v5[0] = &unk_1F262AAA8;
    v5[1] = a1;
    v5[3] = v5;
    llvm::runIPSCCP((uint64_t)a2, (uint64_t)(a2 + 34), (uint64_t)v5, (uint64_t)sub_1CC9B8904);
  }
  return 0;
}

void sub_1CC9B87DC()
{
}

void *sub_1CC9B87F0(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = &unk_1F262AAA8;
  result[1] = v3;
  return result;
}

uint64_t sub_1CC9B8838(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_1F262AAA8;
  a2[1] = v2;
  return result;
}

void sub_1CC9B8864(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(uint64_t **)(*(void *)(a1 + 8) + 8);
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4 == v5)
  {
LABEL_4:
    uint64_t v6 = 0;
  }
  else
  {
    while (*(char **)v4 != llvm::TargetLibraryInfoWrapperPass::ID)
    {
      v4 += 16;
      if (v4 == v5) {
        goto LABEL_4;
      }
    }
    uint64_t v6 = *(void *)(v4 + 8);
  }
  uint64_t v7 = (*(uint64_t (**)(uint64_t, char *))(*(void *)v6 + 96))(v6, llvm::TargetLibraryInfoWrapperPass::ID);

  sub_1CBF5AC74(v7, a2);
}

void sub_1CC9B8904(uint64_t *a1, llvm::Function *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*(void *)(*a1 + 8) + 24);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t, void *, llvm::Function *))(*(void *)v4 + 32))(v4, v3, &llvm::DominatorTreeWrapperPass::ID, a2);
  (*(void (**)(uint64_t, void *))(*(void *)v5 + 96))(v5, &llvm::DominatorTreeWrapperPass::ID);
  uint64_t v6 = *(uint64_t **)(v3 + 8);
  uint64_t v7 = *v6;
  uint64_t v8 = v6[1];
  if (v7 == v8)
  {
LABEL_4:
    uint64_t v9 = 0;
  }
  else
  {
    while (*(char **)v7 != llvm::AssumptionCacheTracker::ID)
    {
      v7 += 16;
      if (v7 == v8) {
        goto LABEL_4;
      }
    }
    uint64_t v9 = *(void *)(v7 + 8);
  }
  unint64_t v10 = (llvm::AssumptionCacheTracker *)(*(uint64_t (**)(uint64_t, char *))(*(void *)v9 + 96))(v9, llvm::AssumptionCacheTracker::ID);
  llvm::AssumptionCacheTracker::getAssumptionCache(v10, a2);
  operator new();
}

void sub_1CC9B8A48()
{
}

void sub_1CC9B8AA8(llvm::Pass *a1)
{
  llvm::Pass::~Pass(a1);

  JUMPOUT(0x1D25D9CE0);
}

void sub_1CC9B8AE0(uint64_t a1, uint64_t a2)
{
  sub_1CB843600(a2, a2, (uint64_t)llvm::AssumptionCacheTracker::ID);
  sub_1CB843600(a2, a2, (uint64_t)&llvm::DominatorTreeWrapperPass::ID);
  sub_1CB843600(a2, a2, (uint64_t)llvm::TargetLibraryInfoWrapperPass::ID);

  sub_1CB843600(a2, a2, (uint64_t)llvm::TargetTransformInfoWrapperPass::ID);
}

uint64_t sub_1CC9B8B58(llvm::ModulePass *a1, llvm::LLVMContextImpl ***a2)
{
  v7[4] = *MEMORY[0x1E4F143B8];
  if ((llvm::ModulePass::skipModule(a1, a2) & 1) == 0)
  {
    v7[0] = &unk_1F262AB90;
    v7[1] = a1;
    v7[3] = v7;
    v6[0] = &unk_1F262ABD8;
    v6[1] = a1;
    v6[3] = v6;
    v5[0] = &unk_1F262AC20;
    v5[1] = a1;
    v5[3] = v5;
    llvm::runFunctionSpecialization((uint64_t)a2, (uint64_t)(a2 + 34), (uint64_t)v7, (uint64_t)v6);
  }
  return 0;
}

void sub_1CC9B8D98()
{
}

void *sub_1CC9B8DAC(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = &unk_1F262AB90;
  result[1] = v3;
  return result;
}

uint64_t sub_1CC9B8DF4(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_1F262AB90;
  a2[1] = v2;
  return result;
}

void sub_1CC9B8E20(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(uint64_t **)(*(void *)(a1 + 8) + 8);
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4 == v5)
  {
LABEL_4:
    uint64_t v6 = 0;
  }
  else
  {
    while (*(char **)v4 != llvm::TargetLibraryInfoWrapperPass::ID)
    {
      v4 += 16;
      if (v4 == v5) {
        goto LABEL_4;
      }
    }
    uint64_t v6 = *(void *)(v4 + 8);
  }
  uint64_t v7 = (*(uint64_t (**)(uint64_t, char *))(*(void *)v6 + 96))(v6, llvm::TargetLibraryInfoWrapperPass::ID);

  sub_1CBF5AC74(v7, a2);
}

void sub_1CC9B8EC4()
{
}

void *sub_1CC9B8ED8(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = &unk_1F262ABD8;
  result[1] = v3;
  return result;
}

uint64_t sub_1CC9B8F20(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_1F262ABD8;
  a2[1] = v2;
  return result;
}

uint64_t *sub_1CC9B8F4C(uint64_t a1, const Function *a2)
{
  uint64_t v3 = *(uint64_t **)(*(void *)(a1 + 8) + 8);
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4 == v5)
  {
LABEL_4:
    uint64_t v6 = 0;
  }
  else
  {
    while (*(char **)v4 != llvm::TargetTransformInfoWrapperPass::ID)
    {
      v4 += 16;
      if (v4 == v5) {
        goto LABEL_4;
      }
    }
    uint64_t v6 = *(void *)(v4 + 8);
  }
  uint64_t v7 = (llvm::TargetTransformInfoWrapperPass *)(*(uint64_t (**)(uint64_t, char *))(*(void *)v6 + 96))(v6, llvm::TargetTransformInfoWrapperPass::ID);

  return llvm::TargetTransformInfoWrapperPass::getTTI(v7, a2);
}

void sub_1CC9B8FF0()
{
}

void *sub_1CC9B9004(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = &unk_1F262AC20;
  result[1] = v3;
  return result;
}

uint64_t sub_1CC9B904C(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_1F262AC20;
  a2[1] = v2;
  return result;
}

uint64_t sub_1CC9B9078(uint64_t a1, llvm::Function *a2)
{
  uint64_t v3 = *(uint64_t **)(*(void *)(a1 + 8) + 8);
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4 == v5)
  {
LABEL_4:
    uint64_t v6 = 0;
  }
  else
  {
    while (*(char **)v4 != llvm::AssumptionCacheTracker::ID)
    {
      v4 += 16;
      if (v4 == v5) {
        goto LABEL_4;
      }
    }
    uint64_t v6 = *(void *)(v4 + 8);
  }
  uint64_t v7 = (llvm::AssumptionCacheTracker *)(*(uint64_t (**)(uint64_t, char *))(*(void *)v6 + 96))(v6, llvm::AssumptionCacheTracker::ID);

  return llvm::AssumptionCacheTracker::getAssumptionCache(v7, a2);
}

void sub_1CC9B9118(uint64_t *a1, llvm::Function *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*(void *)(*a1 + 8) + 24);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t, void *, llvm::Function *))(*(void *)v4 + 32))(v4, v3, &llvm::DominatorTreeWrapperPass::ID, a2);
  (*(void (**)(uint64_t, void *))(*(void *)v5 + 96))(v5, &llvm::DominatorTreeWrapperPass::ID);
  uint64_t v6 = *(uint64_t **)(v3 + 8);
  uint64_t v7 = *v6;
  uint64_t v8 = v6[1];
  if (v7 == v8)
  {
LABEL_4:
    uint64_t v9 = 0;
  }
  else
  {
    while (*(char **)v7 != llvm::AssumptionCacheTracker::ID)
    {
      v7 += 16;
      if (v7 == v8) {
        goto LABEL_4;
      }
    }
    uint64_t v9 = *(void *)(v7 + 8);
  }
  unint64_t v10 = (llvm::AssumptionCacheTracker *)(*(uint64_t (**)(uint64_t, char *))(*(void *)v9 + 96))(v9, llvm::AssumptionCacheTracker::ID);
  llvm::AssumptionCacheTracker::getAssumptionCache(v10, a2);
  operator new();
}

void sub_1CC9B9260()
{
}

void *sub_1CC9B9274(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = &unk_1F262AC68;
  result[1] = v3;
  return result;
}

uint64_t sub_1CC9B92BC(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_1F262AC68;
  a2[1] = v2;
  return result;
}

void sub_1CC9B92E8()
{
}

void sub_1CC9B9314()
{
}

void sub_1CC9B93D0()
{
}

void *sub_1CC9B93E4(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = &unk_1F262ACB0;
  result[1] = v3;
  return result;
}

uint64_t sub_1CC9B942C(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_1F262ACB0;
  a2[1] = v2;
  return result;
}

void sub_1CC9B9458()
{
}

void sub_1CC9B9488()
{
}

void *sub_1CC9B949C(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = &unk_1F262ACF8;
  result[1] = v3;
  return result;
}

uint64_t sub_1CC9B94E4(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_1F262ACF8;
  a2[1] = v2;
  return result;
}

void sub_1CC9B9510()
{
}

void sub_1CC9B9540()
{
}

void *sub_1CC9B9554(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = &unk_1F262AD40;
  result[1] = v3;
  return result;
}

uint64_t sub_1CC9B959C(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_1F262AD40;
  a2[1] = v2;
  return result;
}

void sub_1CC9B95C8()
{
}

void sub_1CC9B95F4()
{
}

uint64_t sub_1CC9B96AC(uint64_t a1)
{
  uint64_t v2 = a1 + 24;
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3 != a1 + 24)
  {
    char v4 = 0;
    while (1)
    {
      uint64_t v5 = v3;
      uint64_t v3 = *(void *)(v3 + 8);
      if (v5) {
        uint64_t v6 = v5 - 56;
      }
      else {
        uint64_t v6 = 0;
      }
      if (v5 && *(unsigned char *)(v6 + 16) == 3)
      {
        if ((*(_DWORD *)(v6 + 20) & 0x7FFFFFF) == 0) {
          goto LABEL_9;
        }
      }
      else if (!*(unsigned char *)(v6 + 16) && *(void *)(v6 + 72) == v6 + 72 && (*(unsigned char *)(v6 + 34) & 0x80) == 0)
      {
LABEL_9:
        if (!*(void *)(v6 + 8))
        {
          llvm::Function::eraseFromParent((llvm::Function *)v6);
          char v4 = 1;
        }
      }
      if (v3 == v2) {
        goto LABEL_17;
      }
    }
  }
  char v4 = 0;
LABEL_17:
  uint64_t v7 = a1 + 8;
  uint64_t v8 = *(void *)(a1 + 16);
  while (v8 != v7)
  {
    uint64_t v9 = v8;
    uint64_t v8 = *(void *)(v8 + 8);
    if (v9) {
      uint64_t v10 = v9 - 56;
    }
    else {
      uint64_t v10 = 0;
    }
    if (v9 && *(unsigned char *)(v10 + 16) == 3)
    {
      if ((*(_DWORD *)(v10 + 20) & 0x7FFFFFF) == 0) {
        goto LABEL_25;
      }
    }
    else if (!*(unsigned char *)(v10 + 16) && *(void *)(v10 + 72) == v10 + 72 && (*(unsigned char *)(v10 + 34) & 0x80) == 0)
    {
LABEL_25:
      if (!*(void *)(v10 + 8)) {
        llvm::GlobalVariable::eraseFromParent((llvm::GlobalVariable *)v10);
      }
    }
  }
  return v4 & 1;
}

void llvm::initializeStripDeadPrototypesLegacyPassPass(llvm *this, llvm::PassRegistry *a2)
{
  uint64_t v2 = this;
  if (atomic_load_explicit((atomic_ullong *volatile)&qword_1EBCE4CE8, memory_order_acquire) != -1)
  {
    v4[0] = sub_1CC9B983C;
    v4[1] = &v2;
    uint64_t v3 = v4;
    std::__call_once(&qword_1EBCE4CE8, &v3, (void (__cdecl *)(void *))sub_1CB848390);
  }
}

void sub_1CC9B983C()
{
}

uint64_t sub_1CC9B98D8(uint64_t a1)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = &unk_1EBCE4CE0;
  *(_DWORD *)(a1 + 24) = 4;
  *(void *)a1 = &unk_1F262AD88;
  atomic_ullong PassRegistry = llvm::PassRegistry::getPassRegistry((llvm::PassRegistry *)a1);
  if (atomic_load_explicit((atomic_ullong *volatile)&qword_1EBCE4CE8, memory_order_acquire) != -1)
  {
    v5[0] = sub_1CC9B983C;
    v5[1] = &PassRegistry;
    char v4 = v5;
    std::__call_once(&qword_1EBCE4CE8, &v4, (void (__cdecl *)(void *))sub_1CB848390);
  }
  return a1;
}

void sub_1CC9B9988()
{
}

void sub_1CC9B99C8(llvm::Pass *a1)
{
  llvm::Pass::~Pass(a1);

  JUMPOUT(0x1D25D9CE0);
}

uint64_t sub_1CC9B9A00(llvm::ModulePass *a1, llvm::LLVMContextImpl ***a2)
{
  if (llvm::ModulePass::skipModule(a1, a2)) {
    return 0;
  }

  return sub_1CC9B96AC((uint64_t)a2);
}

void llvm::initializeStripSymbolsPass(llvm *this, llvm::PassRegistry *a2)
{
  uint64_t v2 = this;
  if (atomic_load_explicit((atomic_ullong *volatile)&qword_1EBCE4CF8, memory_order_acquire) != -1)
  {
    v4[0] = sub_1CC9B9ABC;
    v4[1] = &v2;
    uint64_t v3 = v4;
    std::__call_once(&qword_1EBCE4CF8, &v3, (void (__cdecl *)(void *))sub_1CB848390);
  }
}

void sub_1CC9B9ABC()
{
}

uint64_t sub_1CC9B9B58(uint64_t a1, char a2, char a3)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = &unk_1EBCE4CF0;
  *(_DWORD *)(a1 + 24) = 4;
  *(void *)a1 = &unk_1F262AE28;
  *(unsigned char *)(a1 + 28) = a2;
  *(unsigned char *)(a1 + 29) = a3;
  atomic_ullong PassRegistry = llvm::PassRegistry::getPassRegistry((llvm::PassRegistry *)a1);
  if (atomic_load_explicit((atomic_ullong *volatile)&qword_1EBCE4CF8, memory_order_acquire) != -1)
  {
    v7[0] = sub_1CC9B9ABC;
    v7[1] = &PassRegistry;
    uint64_t v6 = v7;
    std::__call_once(&qword_1EBCE4CF8, &v6, (void (__cdecl *)(void *))sub_1CB848390);
  }
  return a1;
}

void llvm::initializeStripNonDebugSymbolsPass(llvm *this, llvm::PassRegistry *a2)
{
  uint64_t v2 = this;
  if (atomic_load_explicit((atomic_ullong *volatile)&qword_1EBCE4D00, memory_order_acquire) != -1)
  {
    v4[0] = sub_1CC9B9C80;
    v4[1] = &v2;
    uint64_t v3 = v4;
    std::__call_once(&qword_1EBCE4D00, &v3, (void (__cdecl *)(void *))sub_1CB848390);
  }
}

void sub_1CC9B9C80()
{
}

uint64_t sub_1CC9B9D1C(uint64_t a1)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = &unk_1EBCE4CF1;
  *(_DWORD *)(a1 + 24) = 4;
  *(void *)a1 = &unk_1F262AEC8;
  atomic_ullong PassRegistry = llvm::PassRegistry::getPassRegistry((llvm::PassRegistry *)a1);
  if (atomic_load_explicit((atomic_ullong *volatile)&qword_1EBCE4D00, memory_order_acquire) != -1)
  {
    v5[0] = sub_1CC9B9C80;
    v5[1] = &PassRegistry;
    char v4 = v5;
    std::__call_once(&qword_1EBCE4D00, &v4, (void (__cdecl *)(void *))sub_1CB848390);
  }
  return a1;
}

void llvm::initializeStripDebugDeclarePass(llvm *this, llvm::PassRegistry *a2)
{
  uint64_t v2 = this;
  if (atomic_load_explicit((atomic_ullong *volatile)&qword_1EBCE4D08, memory_order_acquire) != -1)
  {
    v4[0] = sub_1CC9B9E3C;
    v4[1] = &v2;
    uint64_t v3 = v4;
    std::__call_once(&qword_1EBCE4D08, &v3, (void (__cdecl *)(void *))sub_1CB848390);
  }
}

void sub_1CC9B9E3C()
{
}

void llvm::createStripDebugDeclarePass(llvm *this)
{
}

uint64_t sub_1CC9B9F14(uint64_t a1)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = &unk_1EBCE4CF2;
  *(_DWORD *)(a1 + 24) = 4;
  *(void *)a1 = &unk_1F262AF68;
  atomic_ullong PassRegistry = llvm::PassRegistry::getPassRegistry((llvm::PassRegistry *)a1);
  if (atomic_load_explicit((atomic_ullong *volatile)&qword_1EBCE4D08, memory_order_acquire) != -1)
  {
    v5[0] = sub_1CC9B9E3C;
    v5[1] = &PassRegistry;
    char v4 = v5;
    std::__call_once(&qword_1EBCE4D08, &v4, (void (__cdecl *)(void *))sub_1CB848390);
  }
  return a1;
}

void llvm::initializeStripDeadDebugInfoPass(llvm *this, llvm::PassRegistry *a2)
{
  uint64_t v2 = this;
  if (atomic_load_explicit((atomic_ullong *volatile)&qword_1EBCE4D10, memory_order_acquire) != -1)
  {
    v4[0] = sub_1CC9BA034;
    v4[1] = &v2;
    uint64_t v3 = v4;
    std::__call_once(&qword_1EBCE4D10, &v3, (void (__cdecl *)(void *))sub_1CB848390);
  }
}

void sub_1CC9BA034()
{
}

uint64_t sub_1CC9BA0D0(uint64_t a1)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = &unk_1EBCE4CF3;
  *(_DWORD *)(a1 + 24) = 4;
  *(void *)a1 = &unk_1F262B008;
  atomic_ullong PassRegistry = llvm::PassRegistry::getPassRegistry((llvm::PassRegistry *)a1);
  if (atomic_load_explicit((atomic_ullong *volatile)&qword_1EBCE4D10, memory_order_acquire) != -1)
  {
    v5[0] = sub_1CC9BA034;
    v5[1] = &PassRegistry;
    char v4 = v5;
    std::__call_once(&qword_1EBCE4D10, &v4, (void (__cdecl *)(void *))sub_1CB848390);
  }
  return a1;
}

void sub_1CC9BA180(const llvm::Module *a1, int a2, char a3)
{
  int v146 = v150;
  uint64_t v147 = v150;
  uint64_t v148 = 8;
  int v149 = 0;
  char v4 = (uint64_t *)*((void *)a1 + 14);
  unsigned int v5 = *((_DWORD *)v4 + 8);
  if (v5 <= 1) {
    uint64_t v6 = 1;
  }
  else {
    uint64_t v6 = v5;
  }
  if (v5 <= 8) {
    size_t v7 = v6;
  }
  else {
    size_t v7 = 9;
  }
  uint64_t v143 = *((unsigned int *)v4 + 2);
  if (!v143) {
    goto LABEL_20;
  }
  uint64_t v8 = 0;
  int v9 = 0;
  do
    int v9 = 33 * v9 + aLlvmUsed[v8++];
  while (v7 != v8);
  uint64_t v10 = *v4;
  uint64_t v11 = *v4 + 8 * v143 + 8;
  int v12 = 1;
  int v13 = v9;
  while (1)
  {
    uint64_t v14 = v13 & (v143 - 1);
    float v15 = *(void **)(v10 + 8 * v14);
    if (v15 != (void *)-8)
    {
      if (!v15) {
        goto LABEL_20;
      }
      if (*(_DWORD *)(v11 + 4 * v14) == v9
        && v7 == *v15
        && !memcmp("llvm.used", (char *)v15 + *((unsigned int *)v4 + 5), v7))
      {
        break;
      }
    }
    int v13 = v12 + v14;
    ++v12;
  }
  if (v14 == -1
    || (int)v14 == v143
    || (uint64_t v16 = *(void *)(*(void *)(v10 + 8 * (int)v14) + 8)) == 0
    || *(unsigned char *)(v16 + 16) != 3
    || (*(_DWORD *)(v16 + 32) & 0xFu) - 7 <= 1)
  {
LABEL_20:
    uint64_t v16 = 0;
  }
  sub_1CC9BB964(v16, (llvm::SmallPtrSetImplBase *)&v146);
  unint64_t v17 = (uint64_t *)*((void *)a1 + 14);
  unsigned int v18 = *((_DWORD *)v17 + 8);
  if (v18 <= 1) {
    uint64_t v19 = 1;
  }
  else {
    uint64_t v19 = v18;
  }
  if (v18 <= 0x11) {
    size_t v20 = v19;
  }
  else {
    size_t v20 = 18;
  }
  uint64_t v144 = *((unsigned int *)v17 + 2);
  if (!v144) {
    goto LABEL_40;
  }
  uint64_t v21 = 0;
  int v22 = 0;
  do
    int v22 = 33 * v22 + aLlvmCompilerUs[v21++];
  while (v20 != v21);
  uint64_t v23 = *v17;
  uint64_t v24 = *v17 + 8 * v144 + 8;
  int v25 = 1;
  int v26 = v22;
  while (1)
  {
    uint64_t v27 = v26 & (v144 - 1);
    uint64_t v28 = *(void **)(v23 + 8 * v27);
    if (v28 != (void *)-8)
    {
      if (!v28) {
        goto LABEL_40;
      }
      if (*(_DWORD *)(v24 + 4 * v27) == v22
        && v20 == *v28
        && !memcmp("llvm.compiler.used", (char *)v28 + *((unsigned int *)v17 + 5), v20))
      {
        break;
      }
    }
    int v26 = v25 + v27;
    ++v25;
  }
  if (v27 == -1
    || (int)v27 == v144
    || (uint64_t v29 = *(void *)(*(void *)(v23 + 8 * (int)v27) + 8)) == 0
    || *(unsigned char *)(v29 + 16) != 3
    || (*(_DWORD *)(v29 + 32) & 0xFu) - 7 <= 1)
  {
LABEL_40:
    uint64_t v29 = 0;
  }
  sub_1CC9BB964(v29, (llvm::SmallPtrSetImplBase *)&v146);
  uint64_t v30 = (void *)*((void *)a1 + 2);
  if (v30 != (void *)((char *)a1 + 8))
  {
    while (1)
    {
      if (v30) {
        unint64_t v31 = (uint64_t ***)(v30 - 7);
      }
      else {
        unint64_t v31 = 0;
      }
      if ((v31[4] & 0xFu) - 7 > 1) {
        goto LABEL_89;
      }
      unsigned int v32 = v146;
      if (v147 == v146)
      {
        int v33 = HIDWORD(v148);
        uint64_t v34 = &v147[8 * HIDWORD(v148)];
        if (HIDWORD(v148))
        {
          uint64_t v35 = 0;
          while (*(uint64_t ****)&v147[v35] != v31)
          {
            v35 += 8;
            if (8 * HIDWORD(v148) == v35) {
              goto LABEL_65;
            }
          }
          uint64_t v34 = &v147[v35];
        }
LABEL_65:
        unsigned int v32 = v147;
      }
      else
      {
        int v36 = v148 - 1;
        unsigned int v37 = (v148 - 1) & ((v31 >> 4) ^ (v31 >> 9));
        uint64_t v34 = &v147[8 * v37];
        char v38 = *(uint64_t ****)v34;
        if (*(void *)v34 == -1)
        {
          uint64_t v39 = 0;
LABEL_79:
          if (v39) {
            uint64_t v34 = v39;
          }
          int v33 = HIDWORD(v148);
          if (*(uint64_t ****)v34 != v31) {
            uint64_t v34 = &v147[8 * v148];
          }
        }
        else
        {
          uint64_t v39 = 0;
          int v40 = 1;
          while (v38 != v31)
          {
            if (v39) {
              BOOL v41 = 0;
            }
            else {
              BOOL v41 = v38 == (uint64_t ***)-2;
            }
            if (v41) {
              uint64_t v39 = v34;
            }
            unsigned int v42 = v37 + v40++;
            unsigned int v37 = v42 & v36;
            uint64_t v34 = &v147[8 * (v42 & v36)];
            char v38 = *(uint64_t ****)v34;
            if (*(void *)v34 == -1) {
              goto LABEL_79;
            }
          }
          int v33 = HIDWORD(v148);
        }
      }
      int v43 = v147 == v32 ? v33 : v148;
      if (v34 != &v147[8 * v43]) {
        goto LABEL_89;
      }
      if (!a2 || (*((unsigned char *)v31 + 23) & 0x10) == 0) {
        goto LABEL_87;
      }
      uint64_t v44 = ***v31;
      uint64_t v45 = *(void *)(v44 + 152);
      uint64_t v46 = *(unsigned int *)(v44 + 168);
      if (!v46) {
        goto LABEL_84;
      }
      LODWORD(v47) = (v46 - 1) & ((v31 >> 4) ^ (v31 >> 9));
      uint64_t v48 = (uint64_t ****)(v45 + 16 * v47);
      unsigned int v49 = *v48;
      if (*v48 != v31) {
        break;
      }
LABEL_85:
      unsigned int v52 = v48[1];
      if ((unint64_t)*v52 >= 8 && v52[2] == (uint64_t **)0x6762642E6D766C6CLL) {
        goto LABEL_89;
      }
LABEL_87:
      LOWORD(v154) = 257;
      llvm::Value::setNameImpl((llvm::Value *)v31, v151);
      if (!v30 || *((unsigned char *)v31 + 16)) {
        goto LABEL_89;
      }
      if ((*((unsigned char *)v31 + 23) & 0x10) == 0)
      {
LABEL_106:
        int v66 = 0;
        *((_DWORD *)v31 + 8) &= ~0x2000u;
        goto LABEL_107;
      }
      uint64_t v53 = ***v31;
      uint64_t v54 = *(void *)(v53 + 152);
      uint64_t v55 = *(unsigned int *)(v53 + 168);
      if (!v55) {
        goto LABEL_98;
      }
      LODWORD(v56) = (v55 - 1) & ((v31 >> 4) ^ (v31 >> 9));
      unint64_t v57 = (uint64_t ****)(v54 + 16 * v56);
      unint64_t v58 = *v57;
      if (*v57 != v31)
      {
        int v59 = 1;
        while (v58 != (uint64_t ***)-4096)
        {
          int v60 = v56 + v59++;
          uint64_t v56 = v60 & (v55 - 1);
          unint64_t v58 = *(uint64_t ****)(v54 + 16 * v56);
          if (v58 == v31)
          {
            unint64_t v57 = (uint64_t ****)(v54 + 16 * v56);
            goto LABEL_99;
          }
        }
LABEL_98:
        unint64_t v57 = (uint64_t ****)(v54 + 16 * v55);
      }
LABEL_99:
      v61 = v57[1];
      unint64_t v64 = (unint64_t)*v61;
      v62 = v61 + 2;
      unint64_t v63 = v64;
      if (v64 < 5) {
        goto LABEL_106;
      }
      if (*(_DWORD *)v62 != *(_DWORD *)"llvm." || v62[4] != aLlvm_1[4]) {
        goto LABEL_106;
      }
      *((_DWORD *)v31 + 8) |= 0x2000u;
      int v66 = llvm::Function::lookupIntrinsicID(v62, v63);
LABEL_107:
      *((_DWORD *)v31 + 9) = v66;
LABEL_89:
      uint64_t v30 = (void *)v30[1];
      if (v30 == (void *)((char *)a1 + 8)) {
        goto LABEL_108;
      }
    }
    int v50 = 1;
    while (v49 != (uint64_t ***)-4096)
    {
      int v51 = v47 + v50++;
      uint64_t v47 = v51 & (v46 - 1);
      unsigned int v49 = *(uint64_t ****)(v45 + 16 * v47);
      if (v49 == v31)
      {
        uint64_t v48 = (uint64_t ****)(v45 + 16 * v47);
        goto LABEL_85;
      }
    }
LABEL_84:
    uint64_t v48 = (uint64_t ****)(v45 + 16 * v46);
    goto LABEL_85;
  }
LABEL_108:
  int v67 = (void *)*((void *)a1 + 4);
  if (v67 != (void *)((char *)a1 + 24))
  {
    while (1)
    {
      if (v67) {
        v68 = (uint64_t ***)(v67 - 7);
      }
      else {
        v68 = 0;
      }
      if ((v68[4] & 0xFu) - 7 > 1) {
        goto LABEL_156;
      }
      uint64_t v69 = v146;
      if (v147 == v146)
      {
        int v70 = HIDWORD(v148);
        uint64_t v71 = &v147[8 * HIDWORD(v148)];
        if (HIDWORD(v148))
        {
          uint64_t v72 = 0;
          while (*(uint64_t ****)&v147[v72] != v68)
          {
            v72 += 8;
            if (8 * HIDWORD(v148) == v72) {
              goto LABEL_132;
            }
          }
          uint64_t v71 = &v147[v72];
        }
LABEL_132:
        uint64_t v69 = v147;
      }
      else
      {
        int v73 = v148 - 1;
        unsigned int v74 = (v148 - 1) & ((v68 >> 4) ^ (v68 >> 9));
        uint64_t v71 = &v147[8 * v74];
        BOOL v75 = *(uint64_t ****)v71;
        if (*(void *)v71 == -1)
        {
          unsigned int v76 = 0;
LABEL_146:
          if (v76) {
            uint64_t v71 = v76;
          }
          int v70 = HIDWORD(v148);
          if (*(uint64_t ****)v71 != v68) {
            uint64_t v71 = &v147[8 * v148];
          }
        }
        else
        {
          unsigned int v76 = 0;
          int v77 = 1;
          while (v75 != v68)
          {
            if (v76) {
              BOOL v78 = 0;
            }
            else {
              BOOL v78 = v75 == (uint64_t ***)-2;
            }
            if (v78) {
              unsigned int v76 = v71;
            }
            unsigned int v79 = v74 + v77++;
            unsigned int v74 = v79 & v73;
            uint64_t v71 = &v147[8 * (v79 & v73)];
            BOOL v75 = *(uint64_t ****)v71;
            if (*(void *)v71 == -1) {
              goto LABEL_146;
            }
          }
          int v70 = HIDWORD(v148);
        }
      }
      int v80 = v147 == v69 ? v70 : v148;
      if (v71 != &v147[8 * v80]) {
        goto LABEL_156;
      }
      if (a2 && (*((unsigned char *)v68 + 23) & 0x10) != 0) {
        break;
      }
LABEL_154:
      LOWORD(v154) = 257;
      llvm::Value::setNameImpl((llvm::Value *)v68, v151);
      if (v67 && !*((unsigned char *)v68 + 16))
      {
        if ((*((unsigned char *)v68 + 23) & 0x10) == 0) {
          goto LABEL_224;
        }
        uint64_t v122 = ***v68;
        uint64_t v123 = *(void *)(v122 + 152);
        uint64_t v124 = *(unsigned int *)(v122 + 168);
        if (!v124) {
          goto LABEL_216;
        }
        LODWORD(v125) = (v124 - 1) & ((v68 >> 4) ^ (v68 >> 9));
        uint64_t v126 = (uint64_t ****)(v123 + 16 * v125);
        unint64_t v127 = *v126;
        if (*v126 != v68)
        {
          int v128 = 1;
          while (v127 != (uint64_t ***)-4096)
          {
            int v129 = v125 + v128++;
            uint64_t v125 = v129 & (v124 - 1);
            unint64_t v127 = *(uint64_t ****)(v123 + 16 * v125);
            if (v127 == v68)
            {
              uint64_t v126 = (uint64_t ****)(v123 + 16 * v125);
              goto LABEL_217;
            }
          }
LABEL_216:
          uint64_t v126 = (uint64_t ****)(v123 + 16 * v124);
        }
LABEL_217:
        v130 = v126[1];
        unint64_t v133 = (unint64_t)*v130;
        v131 = v130 + 2;
        unint64_t v132 = v133;
        if (v133 >= 5 && (*(_DWORD *)v131 == *(_DWORD *)"llvm." ? (BOOL v134 = v131[4] == aLlvm_1[4]) : (BOOL v134 = 0), v134))
        {
          *((_DWORD *)v68 + 8) |= 0x2000u;
          int v135 = llvm::Function::lookupIntrinsicID(v131, v132);
        }
        else
        {
LABEL_224:
          int v135 = 0;
          *((_DWORD *)v68 + 8) &= ~0x2000u;
        }
        *((_DWORD *)v68 + 9) = v135;
      }
LABEL_156:
      uint64_t v90 = v68[13];
      if (v90)
      {
        v91 = *v90;
        uint64_t v92 = *((unsigned int *)v90 + 2);
        if (v92)
        {
          for (uint64_t i = v91; !*i || *i == -8; ++i)
            ;
        }
        else
        {
          uint64_t i = v91;
        }
        int v95 = &v91[v92];
        do
        {
LABEL_167:
          if (i == v95) {
            goto LABEL_207;
          }
          uint64_t v96 = *i++;
          unint64_t v97 = *(uint64_t ****)(v96 + 8);
          while (!*i || *i == -8)
            ++i;
        }
        while (*((unsigned __int8 *)v97 + 16) <= 3u && (v97[4] & 0xFu) - 7 > 1);
        if (!a2 || (*((unsigned char *)v97 + 23) & 0x10) == 0) {
          goto LABEL_188;
        }
        uint64_t v99 = ***v97;
        uint64_t v100 = *(void *)(v99 + 152);
        uint64_t v101 = *(unsigned int *)(v99 + 168);
        if (v101)
        {
          LODWORD(v102) = (v101 - 1) & ((v97 >> 4) ^ (v97 >> 9));
          unsigned int v103 = (uint64_t ****)(v100 + 16 * v102);
          uint64_t v104 = *v103;
          if (*v103 != v97)
          {
            int v105 = 1;
            while (v104 != (uint64_t ***)-4096)
            {
              int v106 = v102 + v105++;
              uint64_t v102 = v106 & (v101 - 1);
              uint64_t v104 = *(uint64_t ****)(v100 + 16 * v102);
              if (v104 == v97)
              {
                unsigned int v103 = (uint64_t ****)(v100 + 16 * v102);
                goto LABEL_186;
              }
            }
            goto LABEL_185;
          }
        }
        else
        {
LABEL_185:
          unsigned int v103 = (uint64_t ****)(v100 + 16 * v101);
        }
LABEL_186:
        int v107 = v103[1];
        if ((unint64_t)*v107 >= 8 && v107[2] == (uint64_t **)0x6762642E6D766C6CLL) {
          goto LABEL_167;
        }
LABEL_188:
        LOWORD(v154) = 257;
        llvm::Value::setNameImpl((llvm::Value *)v97, v151);
        if (v97 && !*((unsigned char *)v97 + 16))
        {
          if ((*((unsigned char *)v97 + 23) & 0x10) == 0) {
            goto LABEL_205;
          }
          uint64_t v108 = ***v97;
          uint64_t v109 = *(void *)(v108 + 152);
          uint64_t v110 = *(unsigned int *)(v108 + 168);
          if (!v110) {
            goto LABEL_197;
          }
          LODWORD(v111) = (v110 - 1) & ((v97 >> 4) ^ (v97 >> 9));
          int v112 = (uint64_t ****)(v109 + 16 * v111);
          uint64_t v113 = *v112;
          if (*v112 != v97)
          {
            int v114 = 1;
            while (v113 != (uint64_t ***)-4096)
            {
              int v115 = v111 + v114++;
              uint64_t v111 = v115 & (v110 - 1);
              uint64_t v113 = *(uint64_t ****)(v109 + 16 * v111);
              if (v113 == v97)
              {
                int v112 = (uint64_t ****)(v109 + 16 * v111);
                goto LABEL_198;
              }
            }
LABEL_197:
            int v112 = (uint64_t ****)(v109 + 16 * v110);
          }
LABEL_198:
          v116 = v112[1];
          unint64_t v119 = (unint64_t)*v116;
          v117 = v116 + 2;
          unint64_t v118 = v119;
          if (v119 >= 5 && (*(_DWORD *)v117 == *(_DWORD *)"llvm." ? (BOOL v120 = v117[4] == aLlvm_1[4]) : (BOOL v120 = 0), v120))
          {
            *((_DWORD *)v97 + 8) |= 0x2000u;
            int v121 = llvm::Function::lookupIntrinsicID(v117, v118);
          }
          else
          {
LABEL_205:
            int v121 = 0;
            *((_DWORD *)v97 + 8) &= ~0x2000u;
          }
          *((_DWORD *)v97 + 9) = v121;
          goto LABEL_167;
        }
        goto LABEL_167;
      }
LABEL_207:
      int v67 = (void *)v67[1];
      if (v67 == (void *)((char *)a1 + 24)) {
        goto LABEL_226;
      }
    }
    uint64_t v81 = ***v68;
    uint64_t v82 = *(void *)(v81 + 152);
    uint64_t v83 = *(unsigned int *)(v81 + 168);
    if (v83)
    {
      LODWORD(v84) = (v83 - 1) & ((v68 >> 4) ^ (v68 >> 9));
      unint64_t v85 = (uint64_t ****)(v82 + 16 * v84);
      uint64_t v86 = *v85;
      if (*v85 == v68)
      {
LABEL_152:
        unsigned int v89 = v85[1];
        if ((unint64_t)*v89 >= 8 && v89[2] == (uint64_t **)0x6762642E6D766C6CLL) {
          goto LABEL_156;
        }
        goto LABEL_154;
      }
      int v87 = 1;
      while (v86 != (uint64_t ***)-4096)
      {
        int v88 = v84 + v87++;
        uint64_t v84 = v88 & (v83 - 1);
        uint64_t v86 = *(uint64_t ****)(v82 + 16 * v84);
        if (v86 == v68)
        {
          unint64_t v85 = (uint64_t ****)(v82 + 16 * v84);
          goto LABEL_152;
        }
      }
    }
    unint64_t v85 = (uint64_t ****)(v82 + 16 * v83);
    goto LABEL_152;
  }
LABEL_226:
  if ((a3 & 1) == 0)
  {
    v151[0] = 0;
    v151[1] = 0;
    int v152 = 0;
    uint64_t v153 = 0;
    uint64_t v154 = 0;
    int v155 = 0;
    uint64_t v156 = 0;
    uint64_t v157 = 0;
    int v158 = 0;
    uint64_t v159 = 0;
    uint64_t v160 = 0;
    int v161 = 0;
    unsigned int v163 = 0;
    uint64_t v164 = 0;
    __p = 0;
    char v165 = 0;
    llvm::TypeFinder::run((llvm::TypeFinder *)v151, a1, 0);
    unint64_t v136 = __p;
    if (((v163 - (unsigned char *)__p) & 0x7FFFFFFF8) != 0)
    {
      uint64_t v137 = 0;
      uint64_t v138 = ((unint64_t)(v163 - (unsigned char *)__p) >> 3);
      do
      {
        uint64_t v139 = *((void *)__p + v137);
        if ((*(unsigned char *)(v139 + 9) & 4) == 0)
        {
          int v140 = *(void **)(v139 + 24);
          if (v140)
          {
            if (*v140)
            {
              BOOL v141 = *v140 < 8uLL || a2 == 0;
              if (v141 || v140[2] != 0x6762642E6D766C6CLL) {
                llvm::StructType::setName(v139, "", 0);
              }
            }
          }
        }
        ++v137;
      }
      while (v138 != v137);
      unint64_t v136 = __p;
    }
    if (v136)
    {
      unsigned int v163 = v136;
      operator delete(v136);
    }
    MEMORY[0x1D25D9CD0](v159, 8);
    MEMORY[0x1D25D9CD0](v156, 8);
    MEMORY[0x1D25D9CD0](v153, 8);
    MEMORY[0x1D25D9CD0](v151[0], 8);
  }
  if (v147 != v146) {
    free(v147);
  }
}

void sub_1CC9BACA0(uint64_t *a1)
{
  unsigned int v1 = *((_DWORD *)a1 + 8);
  if (v1 <= 1) {
    uint64_t v2 = 1;
  }
  else {
    uint64_t v2 = v1;
  }
  if (v1 <= 0xF) {
    size_t v3 = v2;
  }
  else {
    size_t v3 = 16;
  }
  uint64_t v4 = *((unsigned int *)a1 + 2);
  if (v4)
  {
    uint64_t v6 = 0;
    int v7 = 0;
    do
      int v7 = 33 * v7 + aLlvmDbgDeclare[v6++];
    while (v3 != v6);
    uint64_t v8 = *a1;
    uint64_t v9 = *a1 + 8 * v4 + 8;
    int v10 = 1;
    int v11 = v7;
    while (1)
    {
      uint64_t v12 = v11 & (v4 - 1);
      int v13 = *(void **)(v8 + 8 * v12);
      if (v13 != (void *)-8)
      {
        if (!v13) {
          return;
        }
        if (*(_DWORD *)(v9 + 4 * v12) == v7
          && v3 == *v13
          && !memcmp("llvm.dbg.declare", (char *)v13 + *((unsigned int *)a1 + 5), v3))
        {
          break;
        }
      }
      int v11 = v10 + v12;
      ++v10;
    }
    if (v12 != -1 && (int)v12 != v4)
    {
      uint64_t v14 = *(void *)(*(void *)(v8 + 8 * (int)v12) + 8);
      if (v14)
      {
        if (!*(unsigned char *)(v14 + 16))
        {
          if (*(void *)(v14 + 8)) {
            llvm::SymbolTableListTraits<llvm::Instruction>::removeNodeFromList();
          }
          llvm::Function::eraseFromParent((llvm::Function *)v14);
        }
      }
    }
  }
}

uint64_t sub_1CC9BB0E0(llvm::Module *a1)
{
  uint64_t v72 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *(void *)a1;
  unsigned int v49 = v51;
  uint64_t v50 = 0x800000000;
  unsigned int v52 = v54;
  uint64_t v53 = 0x800000000;
  uint64_t v55 = v57;
  uint64_t v56 = 0x800000000;
  unint64_t v58 = v60;
  uint64_t v59 = 0x800000000;
  v61 = v63;
  uint64_t v62 = 0x800000000;
  unint64_t v64 = v68;
  v65 = v68;
  uint64_t v66 = 32;
  int v67 = 0;
  llvm::DebugInfoFinder::processModule((llvm::DebugInfoFinder *)&v49, a1);
  uint64_t v46 = v48;
  uint64_t v47 = 0x4000000000;
  v44[0] = 0;
  v44[1] = 0;
  int v45 = 0;
  v43[0] = 0;
  v43[1] = 0;
  unsigned int v42 = v43;
  for (uint64_t i = (void *)*((void *)a1 + 2); i != (void *)((char *)a1 + 8); uint64_t i = (void *)i[1])
  {
    if (i) {
      uint64_t v4 = (unsigned int *)(i - 7);
    }
    else {
      uint64_t v4 = 0;
    }
    uint64_t v69 = (unsigned __int8 *)&v71;
    uint64_t v70 = 0x100000000;
    llvm::GlobalVariable::getDebugInfo(v4, (uint64_t)&v69);
    unsigned int v5 = (unint64_t *)v69;
    if (v70)
    {
      uint64_t v6 = 8 * v70;
      do
      {
        unint64_t v7 = *v5++;
        sub_1CD4C9324((uint64_t *)&v42, v7, v7);
        v6 -= 8;
      }
      while (v6);
      unsigned int v5 = (unint64_t *)v69;
    }
    if (v5 != (unint64_t *)&v71) {
      free(v5);
    }
  }
  int v40 = 0;
  uint64_t v41 = 0;
  uint64_t v39 = &v40;
  if (v53)
  {
    uint64_t v9 = (char *)v52;
    uint64_t v10 = 8 * v53;
    do
    {
      uint64_t v11 = *(void *)v9 - 8 * *(unsigned int *)(*(void *)v9 + 8);
      unint64_t v12 = *(void *)(v11 + 40);
      if (v12) {
        sub_1CD4C9324((uint64_t *)&v39, v12, *(void *)(v11 + 40));
      }
      v9 += 8;
      v10 -= 8;
    }
    while (v10);
  }
  if (!v50)
  {
    char v8 = 0;
    goto LABEL_70;
  }
  unsigned int v37 = a1;
  char v8 = 0;
  char v13 = 0;
  uint64_t v14 = (llvm::MDNode **)v49;
  float v15 = (llvm::MDNode **)((char *)v49 + 8 * v50);
  do
  {
    uint64_t v16 = *v14;
    uint64_t v17 = ((void *)*v14 - *((unsigned int *)*v14 + 2))[6];
    if (v17) {
      unsigned int v18 = (unint64_t *)(v17 - 8 * *(unsigned int *)(v17 + 8));
    }
    else {
      unsigned int v18 = 0;
    }
    if (v18 == (unint64_t *)v17)
    {
      char v19 = 0;
    }
    else
    {
      char v19 = 0;
      do
      {
        unint64_t v20 = *v18;
        unint64_t v38 = v20;
        uint64_t v21 = *(llvm::DIExpression **)(v20 - 8 * *(unsigned int *)(v20 + 8) + 8);
        if (v21 && (llvm::DIExpression::isConstant(v21) & 0xFF00000000) != 0) {
          sub_1CD4C9324((uint64_t *)&v42, v20, v20);
        }
        sub_1CD4C96F8((uint64_t)&v69, (uint64_t)v44, (uint64_t *)&v38);
        if (v71)
        {
          int v22 = v43[0];
          if (!v43[0])
          {
LABEL_35:
            char v19 = 1;
            goto LABEL_38;
          }
          while (1)
          {
            unint64_t v23 = v22[4];
            if (v20 >= v23)
            {
              if (v23 >= v20)
              {
                if (v47 >= (unint64_t)HIDWORD(v47)) {
                  llvm::SmallVectorBase<unsigned int>::grow_pod();
                }
                *((void *)v46 + v47) = v20;
                LODWORD(v47) = v47 + 1;
                break;
              }
              ++v22;
            }
            int v22 = (void *)*v22;
            if (!v22) {
              goto LABEL_35;
            }
          }
        }
LABEL_38:
        ++v18;
      }
      while (v18 != (unint64_t *)v17);
    }
    if (v47)
    {
      sub_1CD4C9324((uint64_t *)&v39, (unint64_t)v16, (uint64_t)v16);
      if (v19) {
        goto LABEL_50;
      }
    }
    else
    {
      for (j = v40; j; j = (void *)*j)
      {
        unint64_t v25 = j[4];
        if ((unint64_t)v16 >= v25)
        {
          if (v25 >= (unint64_t)v16) {
            goto LABEL_49;
          }
          ++j;
        }
      }
      char v13 = 1;
LABEL_49:
      if (v19)
      {
LABEL_50:
        char v8 = 1;
        Impl = llvm::MDTuple::getImpl(v2, v46, v47, 0, 1);
        llvm::MDNode::replaceOperandWith(v16, 6, Impl);
      }
    }
    LODWORD(v47) = 0;
    ++v14;
  }
  while (v14 != v15);
  if (v13)
  {
    uint64_t inserted = llvm::Module::getOrInsertNamedMetadata(v37, "llvm.dbg.cu", 0xBuLL);
    llvm::NamedMDNode::clearOperands(inserted);
    char v8 = 1;
    if (v41)
    {
      uint64_t v28 = v39;
      if (v39 != &v40)
      {
        do
        {
          uint64_t v29 = (unsigned __int8 *)v28[4];
          uint64_t v69 = v29;
          uint64_t v30 = *(void *)(inserted + 48);
          uint64_t v31 = *(unsigned int *)(v30 + 8);
          if (v31 >= *(_DWORD *)(v30 + 12))
          {
            sub_1CC608328(*(void *)(inserted + 48), &v69);
          }
          else
          {
            unsigned int v32 = (unsigned __int8 **)(*(void *)v30 + 8 * v31);
            char *v32 = v29;
            if (v29)
            {
              llvm::MetadataTracking::track((uint64_t)v32, v29, 2);
              LODWORD(v31) = *(_DWORD *)(v30 + 8);
            }
            *(_DWORD *)(v30 + 8) = v31 + 1;
          }
          int v33 = (void *)v28[1];
          if (v33)
          {
            do
            {
              uint64_t v34 = (void **)v33;
              int v33 = (void *)*v33;
            }
            while (v33);
          }
          else
          {
            do
            {
              uint64_t v34 = (void **)v28[2];
              BOOL v35 = *v34 == v28;
              uint64_t v28 = v34;
            }
            while (!v35);
          }
          uint64_t v28 = v34;
        }
        while (v34 != &v40);
        char v8 = 1;
      }
    }
  }
LABEL_70:
  sub_1CD40B1BC(v40);
  sub_1CD40B1BC(v43[0]);
  MEMORY[0x1D25D9CD0](v44[0], 8);
  if (v46 != v48) {
    free(v46);
  }
  if (v65 != v64) {
    free(v65);
  }
  if (v61 != v63) {
    free(v61);
  }
  if (v58 != v60) {
    free(v58);
  }
  if (v55 != v57) {
    free(v55);
  }
  if (v52 != v54) {
    free(v52);
  }
  if (v49 != v51) {
    free(v49);
  }
  return v8 & 1;
}

void sub_1CC9BB628()
{
}

void sub_1CC9BB670(llvm::Pass *a1)
{
  llvm::Pass::~Pass(a1);

  JUMPOUT(0x1D25D9CE0);
}

void sub_1CC9BB6A8(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a2 + 160) = 1;
}

uint64_t sub_1CC9BB6B4(llvm::ModulePass *a1, llvm::LLVMContextImpl ***a2)
{
  if (llvm::ModulePass::skipModule(a1, a2)) {
    return 0;
  }
  uint64_t result = llvm::StripDebugInfo((llvm *)a2, v4);
  if (!*((unsigned char *)a1 + 28))
  {
    sub_1CC9BA180((const llvm::Module *)a2, 0, *((unsigned char *)a1 + 29) == 0);
    return 1;
  }
  return result;
}

void sub_1CC9BB714()
{
}

void sub_1CC9BB754(llvm::Pass *a1)
{
  llvm::Pass::~Pass(a1);

  JUMPOUT(0x1D25D9CE0);
}

void sub_1CC9BB78C(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a2 + 160) = 1;
}

uint64_t sub_1CC9BB798(llvm::ModulePass *a1, llvm::LLVMContextImpl ***a2)
{
  int v3 = llvm::ModulePass::skipModule(a1, a2);
  if ((v3 & 1) == 0) {
    sub_1CC9BA180((const llvm::Module *)a2, 1, 1);
  }
  return v3 ^ 1u;
}

void sub_1CC9BB7D8()
{
}

void sub_1CC9BB818(llvm::Pass *a1)
{
  llvm::Pass::~Pass(a1);

  JUMPOUT(0x1D25D9CE0);
}

void sub_1CC9BB850(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a2 + 160) = 1;
}

uint64_t sub_1CC9BB85C(llvm::ModulePass *a1, uint64_t a2)
{
  int v3 = llvm::ModulePass::skipModule(a1, (llvm::LLVMContextImpl ***)a2);
  if ((v3 & 1) == 0) {
    sub_1CC9BACA0(*(uint64_t **)(a2 + 112));
  }
  return v3 ^ 1u;
}

void sub_1CC9BB894()
{
}

void sub_1CC9BB8D4(llvm::Pass *a1)
{
  llvm::Pass::~Pass(a1);

  JUMPOUT(0x1D25D9CE0);
}

void sub_1CC9BB90C(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a2 + 160) = 1;
}

uint64_t sub_1CC9BB918(llvm::ModulePass *a1, llvm::LLVMContextImpl ***a2)
{
  if (llvm::ModulePass::skipModule(a1, a2)) {
    return 0;
  }

  return sub_1CC9BB0E0((llvm::Module *)a2);
}

void sub_1CC9BB964(uint64_t a1, llvm::SmallPtrSetImplBase *this)
{
  if (!a1) {
    return;
  }
  uint64_t v4 = *((void *)this + 1);
  uint64_t v5 = *((unsigned int *)this + 5);
  if (v4 != *(void *)this)
  {
    unsigned int v9 = *((_DWORD *)this + 4);
    goto LABEL_13;
  }
  if (!v5)
  {
LABEL_10:
    unsigned int v9 = *((_DWORD *)this + 4);
    if (v5 < v9)
    {
      *((_DWORD *)this + 5) = v5 + 1;
      *(void *)(v4 + 8 * v5) = a1;
      goto LABEL_34;
    }
LABEL_13:
    if (3 * v9 <= 4 * ((int)v5 - *((_DWORD *)this + 6)))
    {
      if (v9 >= 0x40) {
        v9 *= 2;
      }
      else {
        unsigned int v9 = 128;
      }
    }
    else if (v9 - v5 >= v9 >> 3)
    {
      goto LABEL_15;
    }
    llvm::SmallPtrSetImplBase::Grow(this, v9);
    unsigned int v9 = *((_DWORD *)this + 4);
    uint64_t v4 = *((void *)this + 1);
LABEL_15:
    unsigned int v10 = v9 - 1;
    unsigned int v11 = (v9 - 1) & ((a1 >> 4) ^ (a1 >> 9));
    unint64_t v12 = (void *)(v4 + 8 * v11);
    uint64_t v13 = *v12;
    if (*v12 == -1)
    {
      uint64_t v14 = 0;
LABEL_27:
      if (v14) {
        unsigned int v18 = v14;
      }
      else {
        unsigned int v18 = v12;
      }
      if (*v18 != a1)
      {
        if (*v18 == -2) {
          --*((_DWORD *)this + 6);
        }
        else {
          ++*((_DWORD *)this + 5);
        }
        *unsigned int v18 = a1;
      }
    }
    else
    {
      uint64_t v14 = 0;
      int v15 = 1;
      while (v13 != a1)
      {
        if (v14) {
          BOOL v16 = 0;
        }
        else {
          BOOL v16 = v13 == -2;
        }
        if (v16) {
          uint64_t v14 = v12;
        }
        unsigned int v17 = v11 + v15++;
        unsigned int v11 = v17 & v10;
        unint64_t v12 = (void *)(v4 + 8 * (v17 & v10));
        uint64_t v13 = *v12;
        if (*v12 == -1) {
          goto LABEL_27;
        }
      }
    }
    goto LABEL_34;
  }
  uint64_t v6 = 0;
  uint64_t v7 = 8 * v5;
  char v8 = (void *)*((void *)this + 1);
  while (*v8 != a1)
  {
    if (*v8 == -2) {
      uint64_t v6 = v8;
    }
    ++v8;
    v7 -= 8;
    if (!v7)
    {
      if (!v6) {
        goto LABEL_10;
      }
      *uint64_t v6 = a1;
      --*((_DWORD *)this + 6);
      break;
    }
  }
LABEL_34:
  uint64_t v19 = *(void *)(a1 - 32);
  int v20 = *(_DWORD *)(v19 + 20);
  uint64_t v21 = v20 & 0x7FFFFFF;
  if ((v20 & 0x7FFFFFF) != 0)
  {
    for (uint64_t i = 0; i != v21; ++i)
    {
      unint64_t v23 = llvm::Value::stripPointerCasts(*(llvm::Value **)(v19 - 32 * (*(_DWORD *)(v19 + 20) & 0x7FFFFFF) + 32 * i));
      if (v23) {
        BOOL v24 = *((unsigned __int8 *)v23 + 16) > 3u;
      }
      else {
        BOOL v24 = 1;
      }
      if (!v24)
      {
        unint64_t v25 = v23;
        uint64_t v26 = *((void *)this + 1);
        uint64_t v27 = *((unsigned int *)this + 5);
        if (v26 != *(void *)this)
        {
          unsigned int v31 = *((_DWORD *)this + 4);
LABEL_51:
          if (3 * v31 <= 4 * ((int)v27 - *((_DWORD *)this + 6)))
          {
            if (v31 >= 0x40) {
              v31 *= 2;
            }
            else {
              unsigned int v31 = 128;
            }
          }
          else if (v31 - v27 >= v31 >> 3)
          {
            goto LABEL_53;
          }
          llvm::SmallPtrSetImplBase::Grow(this, v31);
          unsigned int v31 = *((_DWORD *)this + 4);
          uint64_t v26 = *((void *)this + 1);
LABEL_53:
          unsigned int v32 = v31 - 1;
          unsigned int v33 = (v31 - 1) & ((v25 >> 4) ^ (v25 >> 9));
          uint64_t v34 = (llvm::Value **)(v26 + 8 * v33);
          BOOL v35 = *v34;
          if (*v34 == (llvm::Value *)-1)
          {
            int v36 = 0;
LABEL_65:
            if (v36) {
              int v40 = v36;
            }
            else {
              int v40 = v34;
            }
            if (*v40 != v25)
            {
              if (*v40 == (llvm::Value *)-2) {
                --*((_DWORD *)this + 6);
              }
              else {
                ++*((_DWORD *)this + 5);
              }
              *int v40 = v25;
            }
          }
          else
          {
            int v36 = 0;
            int v37 = 1;
            while (v35 != v25)
            {
              if (v36) {
                BOOL v38 = 0;
              }
              else {
                BOOL v38 = v35 == (llvm::Value *)-2;
              }
              if (v38) {
                int v36 = v34;
              }
              unsigned int v39 = v33 + v37++;
              unsigned int v33 = v39 & v32;
              uint64_t v34 = (llvm::Value **)(v26 + 8 * (v39 & v32));
              BOOL v35 = *v34;
              if (*v34 == (llvm::Value *)-1) {
                goto LABEL_65;
              }
            }
          }
          continue;
        }
        if (v27)
        {
          uint64_t v28 = 0;
          uint64_t v29 = 8 * v27;
          uint64_t v30 = (llvm::Value **)*((void *)this + 1);
          while (*v30 != v23)
          {
            if (*v30 == (llvm::Value *)-2) {
              uint64_t v28 = v30;
            }
            ++v30;
            v29 -= 8;
            if (!v29)
            {
              if (!v28) {
                goto LABEL_48;
              }
              void *v28 = v23;
              --*((_DWORD *)this + 6);
              goto LABEL_72;
            }
          }
          continue;
        }
LABEL_48:
        unsigned int v31 = *((_DWORD *)this + 4);
        if (v27 >= v31) {
          goto LABEL_51;
        }
        *((_DWORD *)this + 5) = v27 + 1;
        *(void *)(v26 + 8 * v27) = v23;
      }
LABEL_72:
      ;
    }
  }
}

void sub_1CC9BBCB0(uint64_t a1, uint64_t a2)
{
  int v3 = v35;
  unsigned int v31 = v35;
  unsigned int v32 = v35;
  uint64_t v33 = 4;
  int v34 = 0;
  int v4 = *(_DWORD *)(a1 + 20);
  if ((v4 & 0x40000000) != 0)
  {
    uint64_t v6 = *(uint64_t **)(a1 - 8);
    uint64_t v5 = v4 & 0x7FFFFFF;
    if ((*(_DWORD *)(a1 + 20) & 0x7FFFFFF) != 0) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = v4 & 0x7FFFFFF;
    uint64_t v6 = (uint64_t *)(a1 - 32 * v5);
    if ((v4 & 0x7FFFFFF) != 0)
    {
LABEL_3:
      unsigned int v7 = 0;
      a2 = 4;
      char v8 = v35;
      unsigned int v9 = &v6[4 * v5];
      while (1)
      {
        uint64_t v10 = *v6;
        uint64_t v11 = *(void *)(*v6 + 8);
        if (v11)
        {
          while (*(void *)(v11 + 24) == a1)
          {
            uint64_t v11 = *(void *)(v11 + 8);
            if (!v11) {
              goto LABEL_7;
            }
          }
          goto LABEL_38;
        }
LABEL_7:
        if (v8 != v3) {
          break;
        }
        if (v7)
        {
          unint64_t v12 = 0;
          uint64_t v13 = 8 * v7;
          uint64_t v14 = v3;
          while (*v14 != v10)
          {
            if (*v14 == -2) {
              unint64_t v12 = v14;
            }
            ++v14;
            v13 -= 8;
            if (!v13)
            {
              if (!v12) {
                goto LABEL_15;
              }
              *unint64_t v12 = v10;
              --v34;
              goto LABEL_37;
            }
          }
          goto LABEL_37;
        }
LABEL_15:
        if (a2 <= v7) {
          break;
        }
        HIDWORD(v33) = v7 + 1;
        *(void *)&v3[8 * v7] = v10;
LABEL_37:
        int v3 = v31;
        char v8 = v32;
        a2 = v33;
        unsigned int v7 = HIDWORD(v33);
LABEL_38:
        v6 += 4;
        if (v6 == v9) {
          goto LABEL_48;
        }
      }
      if (3 * (int)a2 <= 4 * (v7 - v34))
      {
        if (a2 >= 0x40) {
          LODWORD(a2) = 2 * a2;
        }
        else {
          LODWORD(a2) = 128;
        }
      }
      else if (a2 - v7 >= a2 >> 3)
      {
        goto LABEL_19;
      }
      llvm::SmallPtrSetImplBase::Grow((llvm::SmallPtrSetImplBase *)&v31, a2);
      LODWORD(a2) = v33;
      char v8 = v32;
LABEL_19:
      int v15 = a2 - 1;
      unsigned int v16 = (a2 - 1) & ((v10 >> 4) ^ (v10 >> 9));
      unsigned int v17 = &v8[8 * v16];
      uint64_t v18 = *v17;
      if (*v17 == -1)
      {
        uint64_t v19 = 0;
LABEL_31:
        if (v19) {
          unsigned int v17 = v19;
        }
        if (*v17 != v10)
        {
          if (*v17 == -2) {
            --v34;
          }
          else {
            ++HIDWORD(v33);
          }
          *unsigned int v17 = v10;
        }
      }
      else
      {
        uint64_t v19 = 0;
        int v20 = 1;
        while (v18 != v10)
        {
          if (v19) {
            BOOL v21 = 0;
          }
          else {
            BOOL v21 = v18 == -2;
          }
          if (v21) {
            uint64_t v19 = v17;
          }
          unsigned int v22 = v16 + v20++;
          unsigned int v16 = v22 & v15;
          unsigned int v17 = &v8[8 * (v22 & v15)];
          uint64_t v18 = *v17;
          if (*v17 == -1) {
            goto LABEL_31;
          }
        }
      }
      goto LABEL_37;
    }
  }
  char v8 = v35;
LABEL_48:
  if (a1 && *(unsigned char *)(a1 + 16) == 3)
  {
    if ((*(_DWORD *)(a1 + 32) & 0xFu) - 7 <= 1) {
      llvm::GlobalVariable::eraseFromParent((llvm::GlobalVariable *)a1);
    }
  }
  else
  {
    if (*(unsigned char *)(a1 + 16) && (*(_DWORD *)(*(void *)a1 + 8) & 0xFC | 2) == 0x12) {
      llvm::Constant::destroyConstant((int32x2_t ****)a1, (llvm::Constant *)a2);
    }
    int v3 = v31;
    char v8 = v32;
    unint64_t v23 = &v33;
    if (v32 == v31) {
      unint64_t v23 = (uint64_t *)((char *)&v33 + 4);
    }
    uint64_t v24 = *(unsigned int *)v23;
    unint64_t v25 = (unint64_t *)v32;
    if (v24)
    {
      uint64_t v26 = 0;
      while (*(void *)&v32[v26] >= 0xFFFFFFFFFFFFFFFELL)
      {
        v26 += 8;
        if (8 * v24 == v26) {
          goto LABEL_70;
        }
      }
      unint64_t v25 = (unint64_t *)&v32[v26];
    }
    uint64_t v27 = (unint64_t *)&v32[8 * v24];
    if (v25 != v27)
    {
      unint64_t v28 = *v25;
LABEL_65:
      sub_1CC9BBCB0(v28, a2);
      uint64_t v29 = v25 + 1;
      while (v29 != v27)
      {
        unint64_t v30 = *v29++;
        unint64_t v28 = v30;
        if (v30 <= 0xFFFFFFFFFFFFFFFDLL)
        {
          unint64_t v25 = v29 - 1;
          goto LABEL_65;
        }
      }
      int v3 = v31;
      char v8 = v32;
    }
  }
LABEL_70:
  if (v8 != v3) {
    free(v8);
  }
}

void llvm::SyntheticCountsPropagation::run()
{
}

void sub_1CC9BC290(uint64_t a1@<X2>, unsigned char *a2@<X8>)
{
  if (*(unsigned char *)(a1 + 24)) {
    llvm::AnalysisManager<llvm::Function>::getResultImpl();
  }
  *a2 = 0;
  a2[16] = 0;
}

uint64_t *sub_1CC9BC5B0(uint64_t *result, uint64_t a2, unint64_t a3, __int16 a4)
{
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v9 = v4;
  if (v4)
  {
    if (*(unsigned char *)(v4 + 16))
    {
      if (*(unsigned char *)(v4 + 16) != 3 || (*(_DWORD *)(v4 + 20) & 0x7FFFFFF) != 0)
      {
LABEL_9:
        unsigned int v7 = sub_1CD4CB550(*result, &v9);
        uint64_t result = (uint64_t *)sub_1CD45F614(v7[1], *((_WORD *)v7 + 8), a3, a4);
        v7[1] = result;
        *((_WORD *)v7 + 8) = v8;
        if (v8 >= 0x4000)
        {
          v7[1] = -1;
          *((_WORD *)v7 + 8) = 0x3FFF;
        }
      }
    }
    else if (*(void *)(v4 + 72) != v4 + 72 || (*(unsigned char *)(v4 + 34) & 0x80) != 0)
    {
      goto LABEL_9;
    }
  }
  return result;
}

uint64_t sub_1CC9BC674()
{
  int v5 = 1;
  int v2 = 1;
  int v3 = 10;
  uint64_t v4 = &v3;
  v1.n128_u64[0] = (unint64_t)"Initial value of synthetic entry count";
  v1.n128_u64[1] = 38;
  sub_1CD495014((llvm::cl::Option *)&llvm::InitialSyntheticCount, "initial-synthetic-count", &v5, &v4, &v2, &v1);
  __cxa_atexit((void (*)(void *))sub_1CBB1C45C, &llvm::InitialSyntheticCount, &dword_1CB82C000);
  int v5 = 1;
  int v2 = 1;
  int v3 = 15;
  uint64_t v4 = &v3;
  v1.n128_u64[0] = (unint64_t)"Initial synthetic entry count for inline functions.";
  v1.n128_u64[1] = 51;
  sub_1CD495014((llvm::cl::Option *)&unk_1EBCE4D18, "inline-synthetic-count", &v5, &v4, &v2, &v1);
  __cxa_atexit((void (*)(void *))sub_1CBB1C45C, &unk_1EBCE4D18, &dword_1CB82C000);
  int v5 = 1;
  int v2 = 1;
  int v3 = 5;
  uint64_t v4 = &v3;
  v1.n128_u64[0] = (unint64_t)"Initial synthetic entry count for cold functions.";
  v1.n128_u64[1] = 49;
  sub_1CD495014((llvm::cl::Option *)&unk_1EBCE4DD8, "cold-synthetic-count", &v5, &v4, &v2, &v1);
  return __cxa_atexit((void (*)(void *))sub_1CBB1C45C, &unk_1EBCE4DD8, &dword_1CB82C000);
}

void llvm::initializeWriteThinLTOBitcodePass(llvm *this, llvm::PassRegistry *a2)
{
  int v2 = this;
  if (atomic_load_explicit((atomic_ullong *volatile)&qword_1EBCE4EA0, memory_order_acquire) != -1)
  {
    v4[0] = sub_1CC9BC83C;
    v4[1] = &v2;
    int v3 = v4;
    std::__call_once(&qword_1EBCE4EA0, &v3, (void (__cdecl *)(void *))sub_1CB848390);
  }
}

void sub_1CC9BC83C(llvm *a1)
{
  llvm::initializeAssumptionCacheTrackerPass((uint64_t)a1);
  llvm::initializeModuleSummaryIndexWrapperPassPass(a1, v2);
  llvm::initializeTargetLibraryInfoWrapperPassPass((uint64_t)a1);
  llvm::initializeTargetTransformInfoWrapperPassPass((uint64_t)a1);
  operator new();
}

void sub_1CC9BC8F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v152 = *MEMORY[0x1E4F143B8];
  unsigned int v7 = a5 + 3;
  __int16 v8 = (unint64_t *)a5[4];
  uint64_t v9 = a5 + 1;
  uint64_t v10 = a5[2];
  uint64_t v147 = v8;
  uint64_t v148 = v10;
  int v149 = a5 + 3;
  uint64_t v150 = (uint64_t)(a5 + 1);
  while (1)
  {
    if (v8 == v7 && (void *)v10 == v9)
    {
      BOOL v11 = v149 == v7 && v150 == (void)v9;
      if (v11) {
        goto LABEL_37;
      }
    }
    uint64_t v12 = 0;
    do
    {
      uint64_t v13 = (unsigned char *)(*(uint64_t (**)(void **))((char *)&off_1F262B138 + v12))(&v147);
      v12 += 16;
    }
    while (!v13);
    if ((v13[23] & 0x20) == 0) {
      goto LABEL_27;
    }
    uint64_t v14 = ***(void ***)v13;
    uint64_t v137 = v13;
    int v15 = *(_DWORD *)(v14 + 2496);
    if (!v15) {
      break;
    }
    uint64_t v16 = *(void *)(v14 + 2480);
    int v17 = v15 - 1;
    unsigned int v18 = (v15 - 1) & ((v13 >> 4) ^ (v13 >> 9));
    uint64_t v19 = (void *)(v16 + 40 * v18);
    int v20 = (void *)*v19;
    if ((unsigned char *)*v19 != v13)
    {
      BOOL v21 = 0;
      int v22 = 1;
      while (v20 != (void *)-4096)
      {
        if (v21) {
          BOOL v23 = 0;
        }
        else {
          BOOL v23 = v20 == (void *)-8192;
        }
        if (v23) {
          BOOL v21 = v19;
        }
        unsigned int v24 = v18 + v22++;
        unsigned int v18 = v24 & v17;
        uint64_t v19 = (void *)(v16 + 40 * (v24 & v17));
        int v20 = (void *)*v19;
        if ((unsigned char *)*v19 == v13) {
          goto LABEL_21;
        }
      }
      if (v21) {
        uint64_t v29 = v21;
      }
      else {
        uint64_t v29 = v19;
      }
      goto LABEL_35;
    }
LABEL_21:
    uint64_t v25 = *((unsigned int *)v19 + 4);
    if (v25)
    {
      uint64_t v26 = (void *)(v19[1] + 8);
      uint64_t v27 = 16 * v25;
      while (*((_DWORD *)v26 - 2) != 19)
      {
        v26 += 2;
        v27 -= 16;
        if (!v27) {
          goto LABEL_27;
        }
      }
      if (*v26)
      {
        uint64_t v147 = &v149;
        uint64_t v148 = 0x800000000;
        llvm::Module::getModuleFlagsMetadata((llvm::Module *)a5, (uint64_t)&v147);
        if (v148)
        {
          unsigned int v31 = (uint64_t *)((char *)v147 + 16);
          uint64_t v32 = 24 * v148;
          while (1)
          {
            uint64_t v33 = *(void *)(*(v31 - 1) + 8);
            if (*(void *)v33 == 18)
            {
              uint64_t v34 = *(void *)(v33 + 24);
              uint64_t v35 = *(void *)(v33 + 32);
              int v36 = *(unsigned __int16 *)(v33 + 40);
              BOOL v37 = v34 == 0x7053656C62616E45 && v35 == 0x6E554F544C74696CLL;
              if (v37 && v36 == 29801) {
                break;
              }
            }
            v31 += 3;
            v32 -= 24;
            if (!v32) {
              goto LABEL_52;
            }
          }
          uint64_t v39 = *v31;
        }
        else
        {
LABEL_52:
          uint64_t v39 = 0;
        }
        if (v147 == &v149)
        {
          if (v39)
          {
LABEL_55:
            uint64_t v40 = *(void *)(v39 + 128);
            if (!v40) {
              goto LABEL_59;
            }
            uint64_t v41 = (void *)(v40 + 24);
            if (*(_DWORD *)(v40 + 32) >= 0x41u) {
              uint64_t v41 = (void *)*v41;
            }
            if (!*v41) {
              goto LABEL_59;
            }
            v129[0] = a3;
            v129[1] = a4;
            llvm::getUniqueModuleId((llvm *)a5, (uint64_t)v127);
            if (v128 >= 0) {
              uint64_t v44 = v128 & 0x7F;
            }
            else {
              uint64_t v44 = (uint64_t)v127[1];
            }
            if (!v44)
            {
              uint64_t v137 = a5;
              uint64_t v138 = 0;
              LOBYTE(v139) = 0;
              char v140 = 0;
              char v141 = 0;
              char v142 = 0;
              int v143 = 0;
              uint64_t v145 = 0;
              uint64_t v144 = 0;
              int v146 = 0;
              llvm::ProfileSummaryInfo::refresh((uint64_t)&v137);
              llvm::Module::addModuleFlag((uint64_t **)a5, (llvm::Type *)1, "ThinLTO", 7uLL, 0);
              unint64_t v136 = 0;
              v132[0] = &unk_1F262B188;
              unint64_t v133 = v132;
              ((void (*)(void **__return_ptr, void *, void **, void **, void *))llvm::buildModuleSummaryIndex)(&v147, a5, __p, &v137, v132);
              if (v133 == v132)
              {
                (*(void (**)(void *))(v132[0] + 32))(v132);
              }
              else if (v133)
              {
                (*(void (**)(void))(*v133 + 40))();
              }
              if (v136 == __p)
              {
                (*((void (**)(void **))__p[0] + 4))(__p);
              }
              else if (v136)
              {
                (*((void (**)(void))*v136 + 5))();
              }
              llvm::WriteBitcodeToFile();
            }
            if (v128 >= 0) {
              int v45 = v127;
            }
            else {
              int v45 = (void **)v127[0];
            }
            sub_1CC9BF36C(a5, (uint64_t)v45, v44);
            v124[0] = 0;
            v124[1] = 0;
            int v125 = 0;
            v122[0] = 0;
            v122[1] = 0;
            int v123 = 0;
            uint64_t v46 = (void *)a5[2];
            if (v46 == v9)
            {
LABEL_81:
              uint64_t v47 = (char *)operator new(0x2000uLL, (std::align_val_t)8uLL);
              uint64_t v148 = 2;
              int v149 = 0;
              uint64_t v150 = -4096;
              uint64_t v147 = &unk_1F2615EC8;
              uint64_t v151 = 0;
              uint64_t v48 = 0;
              uint64_t v49 = 0x2000;
              uint64_t v50 = v47 + 16;
              do
              {
                uint64_t v51 = v148;
                uint64_t v52 = v150;
                *(v50 - 1) = v148 & 6;
                *uint64_t v50 = 0;
                v50[1] = v52;
                if (v52 != -4096 && v52 != -8192 && v52 != 0)
                {
                  *uint64_t v50 = *(void *)(v51 & 0xFFFFFFFFFFFFFFF8);
                  *(void *)(v51 & 0xFFFFFFFFFFFFFFF8) = v50 - 1;
                  *(v50 - 1) = v51 & 0xFFFFFFFFFFFFFFFELL;
                  if (*v50) {
                    *(void *)*uint64_t v50 = *(void *)*v50 & 7 | (unint64_t)(v47 + 16);
                  }
                  uint64_t v48 = v151;
                }
                *(v50 - 2) = &unk_1F2615EC8;
                v50[2] = v48;
                v50 += 8;
                v47 += 64;
                v49 -= 64;
              }
              while (v49);
              if (v150 != -8192 && v150 != -4096 && v150)
              {
                unint64_t v110 = v148 & 0xFFFFFFFFFFFFFFF8;
                *(void *)(v148 & 0xFFFFFFFFFFFFFFF8) = v149;
                if (v149)
                {
                  *int v149 = *v149 & 7 | v110;
                }
                else
                {
                  uint64_t v111 = v150;
                  int v112 = ***(int32x2_t ****)v150;
                  unint64_t v113 = (unint64_t)v112[303];
                  if (v113 <= v110)
                  {
                    uint64_t v114 = v112[305].u32[0];
                    if (v113 + 16 * v114 > v110)
                    {
                      unsigned int v115 = v114 - 1;
                      LODWORD(v116) = v115 & ((v150 >> 4) ^ (v150 >> 9));
                      v117 = (uint64_t *)(v113 + 16 * v116);
                      uint64_t v118 = *v117;
                      if (v150 != *v117)
                      {
                        int v119 = 1;
                        do
                        {
                          if (v118 == -4096) {
                            goto LABEL_192;
                          }
                          int v120 = v116 + v119++;
                          uint64_t v116 = v120 & v115;
                          uint64_t v118 = *(void *)(v113 + 16 * v116);
                        }
                        while (v150 != v118);
                        v117 = (uint64_t *)(v113 + 16 * v116);
                      }
                      uint64_t *v117 = -8192;
                      v112[304] = vadd_s32(v112[304], (int32x2_t)0x1FFFFFFFFLL);
                      uint64_t v111 = v150;
LABEL_192:
                      *(unsigned char *)(v111 + 17) &= ~1u;
                    }
                  }
                }
              }
              uint64_t v147 = v122;
              uint64_t v148 = (uint64_t)v124;
              int v149 = (unint64_t *)&v126;
              llvm::CloneModule();
            }
            while (2)
            {
              if (v46) {
                uint64_t v54 = (uint64_t ***)(v46 - 7);
              }
              else {
                uint64_t v54 = 0;
              }
              unsigned int v55 = v54 >> 4;
              if ((*((unsigned char *)v54 + 23) & 0x20) != 0)
              {
                uint64_t v56 = ***v54;
                uint64_t v147 = v54;
                int v57 = *(_DWORD *)(v56 + 2496);
                if (!v57)
                {
                  uint64_t v104 = 0;
                  goto LABEL_166;
                }
                uint64_t v58 = *(void *)(v56 + 2480);
                int v59 = v57 - 1;
                unsigned int v60 = v59 & (v55 ^ (v54 >> 9));
                v61 = (void *)(v58 + 40 * v60);
                uint64_t v62 = (void ***)*v61;
                if ((uint64_t ***)*v61 != v54)
                {
                  unint64_t v63 = 0;
                  int v64 = 1;
                  while (v62 != (void ***)-4096)
                  {
                    if (v63) {
                      BOOL v65 = 0;
                    }
                    else {
                      BOOL v65 = v62 == (void ***)-8192;
                    }
                    if (v65) {
                      unint64_t v63 = v61;
                    }
                    unsigned int v66 = v60 + v64++;
                    unsigned int v60 = v66 & v59;
                    v61 = (void *)(v58 + 40 * v60);
                    uint64_t v62 = (void ***)*v61;
                    if ((uint64_t ***)*v61 == v54) {
                      goto LABEL_114;
                    }
                  }
                  if (v63) {
                    uint64_t v104 = v63;
                  }
                  else {
                    uint64_t v104 = v61;
                  }
LABEL_166:
                  v61 = sub_1CC609054(v56 + 2480, (uint64_t)&v147, (uint64_t *)&v147, v104);
                  int v105 = v147;
                  v61[4] = 0;
                  v61[3] = 0;
                  void *v61 = v105;
                  v61[1] = v61 + 3;
                  uint64_t v61[2] = 0x100000000;
                }
LABEL_114:
                uint64_t v67 = *((unsigned int *)v61 + 4);
                if (v67)
                {
                  v68 = (void *)(v61[1] + 8);
                  uint64_t v69 = 16 * v67;
                  while (*((_DWORD *)v68 - 2) != 22)
                  {
                    v68 += 2;
                    v69 -= 16;
                    if (!v69) {
                      goto LABEL_118;
                    }
                  }
                  uint64_t v84 = *v68;
                  if (v84)
                  {
                    unint64_t v85 = *(unsigned __int8 **)(v84 - 8 * *(unsigned int *)(v84 + 8));
                    if (v85)
                    {
                      if (*v85 - 1 <= 1)
                      {
                        uint64_t v86 = (unsigned char *)*((void *)v85 + 16);
                        unsigned int v87 = v86[16];
                        BOOL v88 = v87 > 3 || v87 == 1;
                        if (!v88 && (v86[23] & 0x20) != 0)
                        {
                          uint64_t v89 = ***(void ***)v86;
                          uint64_t v147 = v86;
                          int v90 = *(_DWORD *)(v89 + 2496);
                          if (!v90)
                          {
                            uint64_t v108 = 0;
                            goto LABEL_176;
                          }
                          uint64_t v91 = *(void *)(v89 + 2480);
                          int v92 = v90 - 1;
                          unsigned int v93 = v92 & ((v86 >> 4) ^ (v86 >> 9));
                          uint64_t v94 = (void *)(v91 + 40 * v93);
                          int v95 = (unsigned char *)*v94;
                          if ((unsigned char *)*v94 != v86)
                          {
                            uint64_t v96 = 0;
                            int v97 = 1;
                            while (v95 != (unsigned char *)-4096)
                            {
                              if (v96) {
                                BOOL v98 = 0;
                              }
                              else {
                                BOOL v98 = v95 == (unsigned char *)-8192;
                              }
                              if (v98) {
                                uint64_t v96 = v94;
                              }
                              unsigned int v99 = v93 + v97++;
                              unsigned int v93 = v99 & v92;
                              uint64_t v94 = (void *)(v91 + 40 * v93);
                              int v95 = (unsigned char *)*v94;
                              if ((unsigned char *)*v94 == v86) {
                                goto LABEL_152;
                              }
                            }
                            if (v96) {
                              uint64_t v108 = v96;
                            }
                            else {
                              uint64_t v108 = v94;
                            }
LABEL_176:
                            uint64_t v94 = sub_1CC609054(v89 + 2480, (uint64_t)&v147, (uint64_t *)&v147, v108);
                            uint64_t v109 = v147;
                            v94[4] = 0;
                            v94[3] = 0;
                            *uint64_t v94 = v109;
                            v94[1] = v94 + 3;
                            v94[2] = 0x100000000;
                          }
LABEL_152:
                          uint64_t v100 = *((unsigned int *)v94 + 4);
                          if (v100)
                          {
                            uint64_t v101 = (void *)(v94[1] + 8);
                            uint64_t v102 = 16 * v100;
                            while (*((_DWORD *)v101 - 2) != 19)
                            {
                              v101 += 2;
                              v102 -= 16;
                              if (!v102) {
                                goto LABEL_118;
                              }
                            }
                            if (*v101) {
                              goto LABEL_158;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
LABEL_118:
              if ((*((unsigned char *)v54 + 23) & 0x20) != 0)
              {
                uint64_t v70 = ***v54;
                uint64_t v147 = v54;
                int v71 = *(_DWORD *)(v70 + 2496);
                if (!v71)
                {
                  int v106 = 0;
                  goto LABEL_170;
                }
                uint64_t v72 = *(void *)(v70 + 2480);
                int v73 = v71 - 1;
                unsigned int v74 = v73 & (v55 ^ (v54 >> 9));
                BOOL v75 = (void *)(v72 + 40 * v74);
                unsigned int v76 = (void ***)*v75;
                if ((uint64_t ***)*v75 != v54)
                {
                  int v77 = 0;
                  int v78 = 1;
                  while (v76 != (void ***)-4096)
                  {
                    if (v77) {
                      BOOL v79 = 0;
                    }
                    else {
                      BOOL v79 = v76 == (void ***)-8192;
                    }
                    if (v79) {
                      int v77 = v75;
                    }
                    unsigned int v80 = v74 + v78++;
                    unsigned int v74 = v80 & v73;
                    BOOL v75 = (void *)(v72 + 40 * v74);
                    unsigned int v76 = (void ***)*v75;
                    if ((uint64_t ***)*v75 == v54) {
                      goto LABEL_129;
                    }
                  }
                  if (v77) {
                    int v106 = v77;
                  }
                  else {
                    int v106 = v75;
                  }
LABEL_170:
                  BOOL v75 = sub_1CC609054(v70 + 2480, (uint64_t)&v147, (uint64_t *)&v147, v106);
                  int v107 = v147;
                  v75[4] = 0;
                  v75[3] = 0;
                  *BOOL v75 = v107;
                  v75[1] = v75 + 3;
                  v75[2] = 0x100000000;
                }
LABEL_129:
                uint64_t v81 = *((unsigned int *)v75 + 4);
                if (v81)
                {
                  uint64_t v82 = (void *)(v75[1] + 8);
                  uint64_t v83 = 16 * v81;
                  while (*((_DWORD *)v82 - 2) != 19)
                  {
                    v82 += 2;
                    v83 -= 16;
                    if (!v83) {
                      goto LABEL_161;
                    }
                  }
                  if (*v82)
                  {
LABEL_158:
                    uint64_t v137 = v54[6];
                    if (v137) {
                      sub_1CD4201D0((uint64_t)v122, &v137, (uint64_t)&v147);
                    }
                    uint64_t v103 = (uint64_t)*(v54 - 4);
                    uint64_t v147 = v129;
                    uint64_t v148 = (uint64_t)v124;
                    sub_1CC9BF96C(v103, (uint64_t (*)(void, void))sub_1CC9C04C4, (uint64_t)&v147);
                  }
                }
              }
LABEL_161:
              uint64_t v46 = (void *)v46[1];
              if (v46 == v9) {
                goto LABEL_81;
              }
              continue;
            }
          }
        }
        else
        {
          free(v147);
          if (v39) {
            goto LABEL_55;
          }
        }
LABEL_59:
        llvm::getUniqueModuleId((llvm *)a5, (uint64_t)__p);
        if (v135 >= 0) {
          uint64_t v42 = v135 & 0x7F;
        }
        else {
          uint64_t v42 = (uint64_t)__p[1];
        }
        if (v42)
        {
          if (v135 >= 0) {
            int v43 = __p;
          }
          else {
            int v43 = (void **)__p[0];
          }
          sub_1CC9BF36C(a5, (uint64_t)v43, v42);
          uint64_t v137 = a5;
          uint64_t v138 = 0;
          LOBYTE(v139) = 0;
          char v140 = 0;
          char v141 = 0;
          char v142 = 0;
          int v143 = 0;
          uint64_t v145 = 0;
          uint64_t v144 = 0;
          int v146 = 0;
          llvm::ProfileSummaryInfo::refresh((uint64_t)&v137);
          v131[3] = 0;
          v130[0] = &unk_1F262B188;
          v130[3] = v130;
          ((void (*)(void **__return_ptr, void *, void *, void **, void *))llvm::buildModuleSummaryIndex)(&v147, a5, v131, &v137, v130);
          operator new();
        }
        if (v135 < 0) {
          operator delete(__p[0]);
        }
LABEL_37:
        uint64_t v148 = 0;
        uint64_t v147 = 0;
        LODWORD(v149) = 0;
        llvm::WriteBitcodeToFile();
      }
    }
LABEL_27:
    uint64_t v28 = 0;
    do
    {
      if ((*(uint64_t (**)(void **))((char *)&off_1F262B158 + v28))(&v147)) {
        break;
      }
      BOOL v11 = v28 == 16;
      v28 += 16;
    }
    while (!v11);
    __int16 v8 = (unint64_t *)v147;
    uint64_t v10 = v148;
  }
  uint64_t v29 = 0;
LABEL_35:
  uint64_t v19 = sub_1CC609054(v14 + 2480, (uint64_t)&v137, (uint64_t *)&v137, v29);
  unint64_t v30 = v137;
  v19[4] = 0;
  v19[3] = 0;
  *uint64_t v19 = v30;
  v19[1] = v19 + 3;
  v19[2] = 0x100000000;
  goto LABEL_21;
}

void sub_1CC9BF0AC()
{
}

void sub_1CC9BF180(llvm::Pass *a1)
{
  llvm::Pass::~Pass(a1);

  JUMPOUT(0x1D25D9CE0);
}

const char *sub_1CC9BF1B8()
{
  return "ThinLTO Bitcode Writer";
}

void sub_1CC9BF1C8(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a2 + 160) = 1;
  sub_1CB843600(a2, a2, (uint64_t)llvm::AssumptionCacheTracker::ID);
  sub_1CB843600(a2, a2, (uint64_t)&llvm::ModuleSummaryIndexWrapperPass::ID);
  sub_1CB843600(a2, a2, (uint64_t)llvm::TargetLibraryInfoWrapperPass::ID);

  sub_1CB843600(a2, a2, (uint64_t)llvm::TargetTransformInfoWrapperPass::ID);
}

void sub_1CC9BF248(void *a1, void *a2)
{
  uint64_t v4 = (uint64_t *)a1[1];
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if (v5 == v6)
  {
LABEL_4:
    uint64_t v7 = 0;
  }
  else
  {
    while (*(_UNKNOWN **)v5 != &llvm::ModuleSummaryIndexWrapperPass::ID)
    {
      v5 += 16;
      if (v5 == v6) {
        goto LABEL_4;
      }
    }
    uint64_t v7 = *(void *)(v5 + 8);
  }
  (*(void (**)(uint64_t, void *))(*(void *)v7 + 96))(v7, &llvm::ModuleSummaryIndexWrapperPass::ID);
  uint64_t v8 = a1[4];
  uint64_t v9 = a1[5];
  uint64_t v10 = a1;
  char v11 = 0;
  char v12 = 0;
  char v13 = 0;
  char v14 = 0;
  sub_1CC9BC8F4(v8, v9, (uint64_t)sub_1CC8A9878, (uint64_t)&v10, a2);
}

uint64_t sub_1CC9BF36C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  v85[1] = *MEMORY[0x1E4F143B8];
  v81[0] = a2;
  v81[1] = a3;
  v79[0] = 0;
  v79[1] = 0;
  int v80 = 0;
  v78[0] = v79;
  v78[1] = v81;
  v78[2] = a1;
  uint64_t v4 = a1[14];
  unsigned int v5 = *(_DWORD *)(v4 + 32);
  if (v5 <= 1) {
    uint64_t v6 = 1;
  }
  else {
    uint64_t v6 = v5;
  }
  unsigned int v72 = *(_DWORD *)(v4 + 32);
  if (v5 <= 0xD) {
    size_t v7 = v6;
  }
  else {
    size_t v7 = 14;
  }
  uint64_t v8 = *(unsigned int *)(v4 + 8);
  if (v8)
  {
    uint64_t v9 = 0;
    int v10 = 0;
    do
      int v10 = 33 * v10 + aLlvmTypeTest[v9++];
    while (v7 != v9);
    unsigned int v11 = v8 - 1;
    uint64_t v12 = *(void *)v4;
    uint64_t v70 = *(unsigned int *)(v4 + 8);
    uint64_t v13 = *(void *)v4 + 8 * v8 + 8;
    int v14 = 1;
    int v15 = v10;
    while (1)
    {
      uint64_t v16 = v15 & v11;
      int v17 = *(void **)(v12 + 8 * v16);
      if (v17 != (void *)-8)
      {
        if (!v17) {
          goto LABEL_24;
        }
        if (*(_DWORD *)(v13 + 4 * v16) == v10
          && v7 == *v17
          && !memcmp("llvm.type.test", (char *)v17 + *(unsigned int *)(v4 + 20), v7))
        {
          break;
        }
      }
      int v15 = v14 + v16;
      ++v14;
    }
    if (v16 != -1 && (int)v16 != v70)
    {
      uint64_t v18 = *(void *)(*(void *)(v12 + 8 * (int)v16) + 8);
      if (v18)
      {
        if (!*(unsigned char *)(v18 + 16))
        {
          uint64_t v19 = *(void *)(v18 + 8);
          if (v19)
          {
            do
            {
              sub_1CC9C0C50((uint64_t)v78, *(void *)(v19 + 24), 1u);
              uint64_t v19 = *(void *)(v19 + 8);
            }
            while (v19);
            uint64_t v4 = a1[14];
            unsigned int v72 = *(_DWORD *)(v4 + 32);
          }
        }
      }
    }
  }
LABEL_24:
  if (v72 <= 1) {
    uint64_t v20 = 1;
  }
  else {
    uint64_t v20 = v72;
  }
  if (v72 <= 0x15) {
    size_t v21 = v20;
  }
  else {
    size_t v21 = 22;
  }
  uint64_t v22 = *(unsigned int *)(v4 + 8);
  if (v22)
  {
    uint64_t v23 = 0;
    int v24 = 0;
    do
      int v24 = 33 * v24 + aLlvmTypeChecke[v23++];
    while (v21 != v23);
    unsigned int v25 = v22 - 1;
    uint64_t v26 = *(void *)v4;
    uint64_t v71 = *(unsigned int *)(v4 + 8);
    uint64_t v27 = *(void *)v4 + 8 * v22 + 8;
    int v28 = 1;
    int v29 = v24;
    while (1)
    {
      uint64_t v30 = v29 & v25;
      unsigned int v31 = *(void **)(v26 + 8 * v30);
      if (v31 != (void *)-8)
      {
        if (!v31) {
          goto LABEL_47;
        }
        if (*(_DWORD *)(v27 + 4 * v30) == v24
          && v21 == *v31
          && !memcmp("llvm.type.checked.load", (char *)v31 + *(unsigned int *)(v4 + 20), v21))
        {
          break;
        }
      }
      int v29 = v28 + v30;
      ++v28;
    }
    if (v30 != -1 && (int)v30 != v71)
    {
      uint64_t v32 = *(void *)(*(void *)(v26 + 8 * (int)v30) + 8);
      if (v32)
      {
        if (!*(unsigned char *)(v32 + 16))
        {
          uint64_t v33 = *(void *)(v32 + 8);
          if (v33)
          {
            do
            {
              sub_1CC9C0C50((uint64_t)v78, *(void *)(v33 + 24), 2u);
              uint64_t v33 = *(void *)(v33 + 8);
            }
            while (v33);
            uint64_t v4 = a1[14];
            unsigned int v72 = *(_DWORD *)(v4 + 32);
          }
        }
      }
    }
  }
LABEL_47:
  if (v72 <= 1) {
    uint64_t v34 = 1;
  }
  else {
    uint64_t v34 = v72;
  }
  if (v72 <= 0x1E) {
    size_t v35 = v34;
  }
  else {
    size_t v35 = 31;
  }
  uint64_t v73 = *(unsigned int *)(v4 + 8);
  if (v73)
  {
    uint64_t v36 = 0;
    int v37 = 0;
    do
      int v37 = 33 * v37 + aLlvmTypeChecke_0[v36++];
    while (v35 != v36);
    uint64_t v38 = *(void *)v4;
    uint64_t v39 = *(void *)v4 + 8 * v73 + 8;
    int v40 = 1;
    int v41 = v37;
    while (1)
    {
      uint64_t v42 = v41 & (v73 - 1);
      int v43 = *(void **)(v38 + 8 * v42);
      if (v43 != (void *)-8)
      {
        if (!v43) {
          goto LABEL_69;
        }
        if (*(_DWORD *)(v39 + 4 * v42) == v37
          && v35 == *v43
          && !memcmp("llvm.type.checked.load.relative", (char *)v43 + *(unsigned int *)(v4 + 20), v35))
        {
          break;
        }
      }
      int v41 = v40 + v42;
      ++v40;
    }
    if (v42 != -1 && (int)v42 != v73)
    {
      uint64_t v44 = *(void *)(*(void *)(v38 + 8 * (int)v42) + 8);
      if (v44)
      {
        if (!*(unsigned char *)(v44 + 16))
        {
          for (uint64_t i = *(void *)(v44 + 8); i; uint64_t i = *(void *)(i + 8))
            sub_1CC9C0C50((uint64_t)v78, *(void *)(i + 24), 2u);
        }
      }
    }
  }
LABEL_69:
  uint64_t v46 = a1 + 3;
  uint64_t v47 = a1[4];
  uint64_t v48 = a1 + 1;
  uint64_t v49 = a1[2];
  uint64_t v74 = v47;
  uint64_t v75 = v49;
  unsigned int v76 = a1 + 3;
  int v77 = a1 + 1;
  while (1)
  {
    if ((uint64_t *)v47 == v46 && (uint64_t *)v49 == v48)
    {
      BOOL v50 = v76 == v46 && v77 == v48;
      if (v50) {
        return MEMORY[0x1D25D9CD0](v79[0], 8);
      }
    }
    uint64_t v51 = 0;
    do
    {
      uint64_t v52 = (unsigned int *)(*(uint64_t (**)(uint64_t *))((char *)&off_1F262B138 + v51))(&v74);
      if (v52) {
        BOOL v53 = 1;
      }
      else {
        BOOL v53 = v51 == 16;
      }
      v51 += 16;
    }
    while (!v53);
    uint64_t v54 = (uint64_t)v52;
    uint64_t v83 = v85;
    uint64_t v84 = 0x100000000;
    llvm::Value::getMetadata(v52, 19, (uint64_t)&v83);
    if ((*(unsigned char *)(v54 + 23) & 0x20) != 0)
    {
      uint64_t v66 = ***(void ***)v54 + 2480;
      v82[0] = v54;
      uint64_t v67 = sub_1CC608F78(v66, v82);
      llvm::MDAttachments::erase((llvm::MDAttachments *)(v67 + 1), 19);
      if (!*((_DWORD *)v67 + 4) && (*(unsigned char *)(v54 + 23) & 0x20) != 0)
      {
        v68 = (int32x2_t *)(***(void ***)v54 + 2480);
        v82[0] = v54;
        sub_1CC6035CC(v68, v82);
        *(_DWORD *)(v54 + 20) &= ~0x20000000u;
      }
    }
    unsigned int v55 = (unsigned int **)v83;
    uint64_t v56 = (unsigned int **)((char *)v83 + 8 * v84);
    if (v84)
    {
      do
      {
        Impl = *v55;
        if (v80)
        {
          uint64_t v58 = (uint64_t *)&Impl[-2 * Impl[2]];
          uint64_t v59 = v58[1];
          uint64_t v60 = ((v59 >> 4) ^ (v59 >> 9)) & (v80 - 1);
          uint64_t v61 = *(void *)(v79[0] + 16 * v60);
          if (v59 == v61)
          {
LABEL_86:
            if (v60 != v80)
            {
              uint64_t v62 = *a1;
              v82[0] = *v58;
              v82[1] = *(void *)(v79[0] + 16 * v60 + 8);
              Impl = (unsigned int *)llvm::MDTuple::getImpl(v62, v82, 2, 0, 1);
            }
          }
          else
          {
            int v63 = 1;
            while (v61 != -4096)
            {
              int v64 = v60 + v63++;
              uint64_t v60 = v64 & (v80 - 1);
              uint64_t v61 = *(void *)(v79[0] + 16 * v60);
              if (v59 == v61) {
                goto LABEL_86;
              }
            }
          }
        }
        llvm::Value::addMetadata((llvm::Value *)v54, 19, (llvm::MDNode *)Impl);
        ++v55;
      }
      while (v55 != v56);
      unsigned int v55 = (unsigned int **)v83;
    }
    if (v55 != v85) {
      free(v55);
    }
    uint64_t v65 = 0;
    do
    {
      if ((*(uint64_t (**)(uint64_t *))((char *)&off_1F262B158 + v65))(&v74)) {
        break;
      }
      BOOL v50 = v65 == 16;
      v65 += 16;
    }
    while (!v50);
    uint64_t v47 = v74;
    uint64_t v49 = v75;
  }
}

uint64_t sub_1CC9BF96C(uint64_t result, uint64_t (*a2)(void, void), uint64_t a3)
{
  uint64_t v4 = a2;
  if (!result || *(unsigned char *)(result + 16))
  {
    if (*(unsigned __int8 *)(result + 16) < 4u) {
      return result;
    }
    int v5 = *(_DWORD *)(result + 20);
    if ((v5 & 0x40000000) != 0)
    {
      size_t v7 = *(uint64_t **)(result - 8);
      uint64_t v6 = v5 & 0x7FFFFFF;
      if (!v6) {
        return result;
      }
    }
    else
    {
      uint64_t v6 = v5 & 0x7FFFFFF;
      size_t v7 = (uint64_t *)(result - 32 * v6);
      if (!v6) {
        return result;
      }
    }
    uint64_t v8 = 32 * v6;
    do
    {
      uint64_t v9 = *v7;
      v7 += 4;
      uint64_t result = sub_1CC9BF96C(v9, v4, a3);
      uint64_t v4 = a2;
      v8 -= 32;
    }
    while (v8);
  }
  else
  {
    return a2(a3, result);
  }
  return result;
}

void sub_1CC9BFA28(uint64_t a1, void *a2, int a3)
{
  v27[4] = *MEMORY[0x1E4F143B8];
  unsigned int v25 = v27;
  uint64_t v26 = 0x400000000;
  unsigned int v23 = 0;
  llvm::collectUsedGlobalVariables(a1, (uint64_t)&v25, a3);
  if (v26)
  {
    int v5 = (char *)v25;
    uint64_t v6 = (char *)v25 + 8 * v26;
    while (1)
    {
      size_t v7 = *(uint64_t ****)v5;
      if ((*(unsigned char *)(*(void *)v5 + 23) & 0x10) != 0) {
        break;
      }
      unint64_t v18 = 0;
      int v17 = (unsigned __int8 *)&byte_1CFBCE98E;
LABEL_12:
      uint64_t NamedValue = llvm::Module::getNamedValue((uint64_t)a2, v17, v18);
      if (NamedValue)
      {
        if (*(unsigned char *)(NamedValue + 16))
        {
          if (*(unsigned char *)(NamedValue + 16) != 3 || (*(_DWORD *)(NamedValue + 20) & 0x7FFFFFF) != 0) {
            goto LABEL_19;
          }
        }
        else if (*(void *)(NamedValue + 72) != NamedValue + 72 || (*(unsigned char *)(NamedValue + 34) & 0x80) != 0)
        {
LABEL_19:
          if (v23 >= 4uLL) {
            llvm::SmallVectorBase<unsigned int>::grow_pod();
          }
          v24[v23++] = (llvm::ConstantExpr *)NamedValue;
        }
      }
      v5 += 8;
      if (v5 == v6) {
        goto LABEL_25;
      }
    }
    uint64_t v8 = ***v7;
    uint64_t v9 = *(void *)(v8 + 152);
    uint64_t v10 = *(unsigned int *)(v8 + 168);
    if (v10)
    {
      LODWORD(v11) = (v10 - 1) & ((v7 >> 4) ^ (v7 >> 9));
      uint64_t v12 = (uint64_t ****)(v9 + 16 * v11);
      uint64_t v13 = *v12;
      if (*v12 == v7)
      {
LABEL_11:
        uint64_t v16 = v12[1];
        unint64_t v19 = (unint64_t)*v16;
        int v17 = (unsigned __int8 *)(v16 + 2);
        unint64_t v18 = v19;
        goto LABEL_12;
      }
      int v14 = 1;
      while (v13 != (uint64_t ***)-4096)
      {
        int v15 = v11 + v14++;
        uint64_t v11 = v15 & (v10 - 1);
        uint64_t v13 = *(uint64_t ****)(v9 + 16 * v11);
        if (v13 == v7)
        {
          uint64_t v12 = (uint64_t ****)(v9 + 16 * v11);
          goto LABEL_11;
        }
      }
    }
    uint64_t v12 = (uint64_t ****)(v9 + 16 * v10);
    goto LABEL_11;
  }
LABEL_25:
  if (a3) {
    size_t v21 = "llvm.compiler.used";
  }
  else {
    size_t v21 = "llvm.used";
  }
  if (a3) {
    uint64_t v22 = 18;
  }
  else {
    uint64_t v22 = 9;
  }
  sub_1CD1CF0D0(a2, (unsigned __int8 *)v21, (const char *)v22, v24, v23);
  if (v25 != v27) {
    free(v25);
  }
}

uint64_t sub_1CC9BFC54(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v127 = 0;
  uint64_t v128 = 0;
  int v129 = 0;
  uint64_t v6 = a1 + 3;
  size_t v7 = (void *)a1[4];
  uint64_t v8 = a1 + 1;
  uint64_t v9 = (void *)a1[2];
  uint64_t v10 = a1 + 5;
  uint64_t v11 = (void *)a1[6];
  uint64_t v12 = a1 + 7;
  uint64_t v101 = a1 + 5;
  uint64_t v13 = (void *)a1[8];
  int v119 = v7;
  int v120 = v9;
  int v121 = v11;
  uint64_t v122 = v13;
  int v123 = a1 + 3;
  uint64_t v124 = a1 + 1;
  int v125 = a1 + 5;
  char v126 = a1 + 7;
  int v105 = a1 + 7;
  while (v7 != v6 || v9 != v8 || v11 != v10 || v13 != v12 || v123 != v6 || v124 != v8 || v125 != v10 || v126 != v12)
  {
    int v14 = (unsigned int *)sub_1CC4AD368((uint64_t)&v119);
    if ((v14[8] & 0xF) - 7 > 1) {
      goto LABEL_90;
    }
    int v15 = v14;
    if ((*((unsigned char *)v14 + 23) & 0x10) == 0)
    {
      unint64_t v25 = 0;
      uint64_t v26 = (unsigned __int8 *)&byte_1CFBCE98E;
      goto LABEL_20;
    }
    uint64_t v16 = ***(void ***)v14;
    uint64_t v17 = *(void *)(v16 + 152);
    uint64_t v18 = *(unsigned int *)(v16 + 168);
    if (!v18) {
      goto LABEL_18;
    }
    LODWORD(v19) = (v18 - 1) & ((v14 >> 4) ^ (v14 >> 9));
    uint64_t v20 = (void **)(v17 + 16 * v19);
    size_t v21 = (unsigned int *)*v20;
    if (*v20 != v14)
    {
      int v22 = 1;
      while (v21 != (unsigned int *)-4096)
      {
        int v23 = v19 + v22++;
        uint64_t v19 = v23 & (v18 - 1);
        size_t v21 = *(unsigned int **)(v17 + 16 * v19);
        if (v21 == v14)
        {
          uint64_t v20 = (void **)(v17 + 16 * v19);
          goto LABEL_19;
        }
      }
LABEL_18:
      uint64_t v20 = (void **)(v17 + 16 * v18);
    }
LABEL_19:
    int v24 = v20[1];
    unint64_t v27 = *v24;
    uint64_t v26 = (unsigned __int8 *)(v24 + 2);
    unint64_t v25 = v27;
LABEL_20:
    v109[0] = v14;
    __dst = 0;
    int v28 = 0;
    if ((sub_1CC906108(a5, v109, &__dst) & 1) == 0)
    {
      uint64_t NamedValue = llvm::Module::getNamedValue(a2, v26, v25);
      if (!NamedValue) {
        goto LABEL_90;
      }
      int v28 = (unsigned int *)NamedValue;
      llvm::Constant::removeDeadConstantUsers(NamedValue);
      if (!*((void *)v28 + 1))
      {
        llvm::GlobalValue::eraseFromParent((llvm::GlobalValue *)v28);
        goto LABEL_90;
      }
    }
    if (v25 >= 0x7FFFFFFFFFFFFFF8) {
      abort();
    }
    if (v25 >= 0x17)
    {
      uint64_t v31 = (v25 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v25 | 7) != 0x17) {
        uint64_t v31 = v25 | 7;
      }
      uint64_t v32 = a5;
      uint64_t v33 = v31 + 1;
      p_dst = (void **)operator new(v31 + 1);
      unint64_t v34 = v33 | 0x8000000000000000;
      a5 = v32;
      uint64_t v10 = v101;
      unint64_t v117 = v25;
      int64_t v118 = v34;
      __dst = p_dst;
LABEL_30:
      memmove(p_dst, v26, v25);
      goto LABEL_31;
    }
    HIBYTE(v118) = v25;
    p_dst = (void **)&__dst;
    if (v25) {
      goto LABEL_30;
    }
LABEL_31:
    *((unsigned char *)p_dst + v25) = 0;
    v109[0] = v26;
    v109[1] = (void *)v25;
    uint64_t v110 = a3;
    uint64_t v111 = a4;
    __int16 v112 = 1285;
    llvm::Twine::str((llvm::Twine *)v109, &__p);
    v108.__r_.__value_.__r.__words[0] = 0;
    int v35 = *((unsigned __int8 *)v15 + 16);
    if (v35 != 2)
    {
      uint64_t AliaseeObject = (uint64_t)v15;
      if (v35 != 1 || (uint64_t AliaseeObject = llvm::GlobalAlias::getAliaseeObject((llvm::GlobalAlias *)v15)) != 0)
      {
        std::string::size_type v37 = *(void *)(AliaseeObject + 48);
        v108.__r_.__value_.__r.__words[0] = v37;
        if (v37)
        {
          if (**(void **)v37 == v25 && (!v25 || !memcmp((const void *)(*(void *)v37 + 72), v26, v25)))
          {
            if (v115 >= 0) {
              p_p = (unsigned __int8 *)&__p;
            }
            else {
              p_p = (unsigned __int8 *)__p;
            }
            if (v115 >= 0) {
              size_t v59 = v115 & 0x7F;
            }
            else {
              size_t v59 = v114;
            }
            v107.__r_.__value_.__r.__words[0] = (std::string::size_type)llvm::Module::getOrInsertComdat((uint64_t)a1, p_p, v59);
            sub_1CD686DBC((uint64_t)&v127, &v108, &v107, (uint64_t)v109);
          }
        }
      }
    }
    __int16 v112 = 260;
    v109[0] = &__p;
    llvm::Value::setNameImpl((llvm::Value *)v15, (const char **)v109);
    uint64_t v12 = v105;
    if (!*((unsigned char *)v15 + 16))
    {
      if ((*((unsigned char *)v15 + 23) & 0x10) == 0) {
        goto LABEL_121;
      }
      uint64_t v60 = ***(void ***)v15;
      uint64_t v61 = *(void *)(v60 + 152);
      uint64_t v62 = *(unsigned int *)(v60 + 168);
      if (!v62) {
        goto LABEL_113;
      }
      LODWORD(v63) = (v62 - 1) & ((v15 >> 4) ^ (v15 >> 9));
      int v64 = (unsigned int **)(v61 + 16 * v63);
      uint64_t v65 = *v64;
      if (*v64 != v15)
      {
        int v66 = 1;
        while (v65 != (unsigned int *)-4096)
        {
          int v67 = v63 + v66++;
          uint64_t v63 = v67 & (v62 - 1);
          uint64_t v65 = *(unsigned int **)(v61 + 16 * v63);
          if (v65 == v15)
          {
            int v64 = (unsigned int **)(v61 + 16 * v63);
            goto LABEL_114;
          }
        }
LABEL_113:
        int v64 = (unsigned int **)(v61 + 16 * v62);
      }
LABEL_114:
      unsigned int v76 = v64[1];
      unint64_t v79 = *(void *)v76;
      int v77 = v76 + 4;
      unint64_t v78 = v79;
      if (v79 >= 5 && (*(_DWORD *)v77 == *(_DWORD *)"llvm." ? (BOOL v80 = v77[4] == aLlvm_1[4]) : (BOOL v80 = 0), v80))
      {
        v15[8] |= 0x2000u;
        unsigned int v81 = llvm::Function::lookupIntrinsicID(v77, v78);
      }
      else
      {
LABEL_121:
        unsigned int v81 = 0;
        v15[8] &= ~0x2000u;
      }
      v15[9] = v81;
    }
    unsigned int v38 = v15[8];
    unsigned int v39 = v38 & 0xFFFFFFF0;
    v15[8] = v38 & 0xFFFFFFF0;
    if ((v38 & 0x30) != 0)
    {
      int hasExternalWeakLinkage = llvm::GlobalValue::hasExternalWeakLinkage((llvm::GlobalValue *)v15);
      unsigned int v39 = v15[8];
      if (!hasExternalWeakLinkage) {
        v39 |= 0x4000u;
      }
    }
    unsigned int v41 = v39 & 0xFFFFFFCF | 0x10;
    v15[8] = v41;
    if ((v39 & 0xF) - 7 >= 2)
    {
      if (llvm::GlobalValue::hasExternalWeakLinkage((llvm::GlobalValue *)v15)) {
        goto LABEL_45;
      }
      unsigned int v41 = v15[8];
    }
    v15[8] = v41 | 0x4000;
LABEL_45:
    if (!v28) {
      goto LABEL_51;
    }
    __int16 v112 = 260;
    v109[0] = &__p;
    llvm::Value::setNameImpl((llvm::Value *)v28, (const char **)v109);
    if (!*((unsigned char *)v28 + 16))
    {
      if ((*((unsigned char *)v28 + 23) & 0x10) == 0) {
        goto LABEL_131;
      }
      uint64_t v68 = ***(void ***)v28;
      uint64_t v69 = *(void *)(v68 + 152);
      uint64_t v70 = *(unsigned int *)(v68 + 168);
      if (!v70) {
        goto LABEL_123;
      }
      LODWORD(v71) = (v70 - 1) & ((v28 >> 4) ^ (v28 >> 9));
      unsigned int v72 = (unsigned int **)(v69 + 16 * v71);
      uint64_t v73 = *v72;
      if (*v72 != v28)
      {
        int v74 = 1;
        while (v73 != (unsigned int *)-4096)
        {
          int v75 = v71 + v74++;
          uint64_t v71 = v75 & (v70 - 1);
          uint64_t v73 = *(unsigned int **)(v69 + 16 * v71);
          if (v73 == v28)
          {
            unsigned int v72 = (unsigned int **)(v69 + 16 * v71);
            goto LABEL_124;
          }
        }
LABEL_123:
        unsigned int v72 = (unsigned int **)(v69 + 16 * v70);
      }
LABEL_124:
      uint64_t v82 = v72[1];
      unint64_t v85 = *(void *)v82;
      uint64_t v83 = v82 + 4;
      unint64_t v84 = v85;
      if (v85 >= 5 && (*(_DWORD *)v83 == *(_DWORD *)"llvm." ? (BOOL v86 = v83[4] == aLlvm_1[4]) : (BOOL v86 = 0), v86))
      {
        v28[8] |= 0x2000u;
        unsigned int v87 = llvm::Function::lookupIntrinsicID(v83, v84);
      }
      else
      {
LABEL_131:
        unsigned int v87 = 0;
        v28[8] &= ~0x2000u;
      }
      v28[9] = v87;
    }
    unsigned int v42 = v28[8];
    unsigned int v43 = v42 & 0xFFFFFFCF | 0x10;
    v28[8] = v43;
    if ((v42 & 0xF) - 7 < 2) {
      goto LABEL_50;
    }
    if ((llvm::GlobalValue::hasExternalWeakLinkage((llvm::GlobalValue *)v28) & 1) == 0)
    {
      unsigned int v43 = v28[8];
LABEL_50:
      v28[8] = v43 | 0x4000;
    }
LABEL_51:
    if (!*((unsigned char *)v15 + 16))
    {
      uint64_t v44 = __dst;
      if (v118 >= 0) {
        uint64_t v44 = (void **)&__dst;
      }
      unint64_t v45 = HIBYTE(v118) & 0x7F;
      if (v118 < 0) {
        unint64_t v45 = v117;
      }
      if (v45)
      {
        while (1)
        {
          int v46 = *(unsigned __int8 *)v44;
          BOOL v47 = (v46 - 48) >= 0xA && (v46 & 0xFFFFFFDF) - 65 >= 0x1A;
          if (v47 && v46 != 95 && v46 != 46) {
            break;
          }
          uint64_t v44 = (void **)((char *)v44 + 1);
          if (!--v45) {
            goto LABEL_69;
          }
        }
      }
      else
      {
LABEL_69:
        std::operator+<char>();
        uint64_t v48 = std::string::append(&v106, ",");
        std::string::size_type v49 = v48->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v107.__r_.__value_.__l.__data_ = *(_OWORD *)&v48->__r_.__value_.__l.__data_;
        v107.__r_.__value_.__r.__words[2] = v49;
        v48->__r_.__value_.__l.__size_ = 0;
        v48->__r_.__value_.__r.__words[2] = 0;
        v48->__r_.__value_.__r.__words[0] = 0;
        if (v115 >= 0) {
          BOOL v50 = (const std::string::value_type *)&__p;
        }
        else {
          BOOL v50 = (const std::string::value_type *)__p;
        }
        if (v115 >= 0) {
          std::string::size_type v51 = v115 & 0x7F;
        }
        else {
          std::string::size_type v51 = v114;
        }
        uint64_t v52 = std::string::append(&v107, v50, v51);
        std::string::size_type v53 = v52->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v108.__r_.__value_.__l.__data_ = *(_OWORD *)&v52->__r_.__value_.__l.__data_;
        v108.__r_.__value_.__r.__words[2] = v53;
        v52->__r_.__value_.__l.__size_ = 0;
        v52->__r_.__value_.__r.__words[2] = 0;
        v52->__r_.__value_.__r.__words[0] = 0;
        uint64_t v54 = std::string::append(&v108, "\n");
        std::string::size_type v55 = v54->__r_.__value_.__r.__words[2];
        *(_OWORD *)uint64_t v109 = *(_OWORD *)&v54->__r_.__value_.__l.__data_;
        uint64_t v110 = v55;
        v54->__r_.__value_.__l.__size_ = 0;
        v54->__r_.__value_.__r.__words[2] = 0;
        v54->__r_.__value_.__r.__words[0] = 0;
        if (SHIBYTE(v108.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v108.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v107.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v107.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v106.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v106.__r_.__value_.__l.__data_);
        }
        if (v110 >= 0) {
          uint64_t v56 = v109;
        }
        else {
          uint64_t v56 = (void **)v109[0];
        }
        if (v110 >= 0) {
          std::string::size_type v57 = HIBYTE(v110) & 0x7F;
        }
        else {
          std::string::size_type v57 = (std::string::size_type)v109[1];
        }
        LLVMAppendModuleInlineAsm_0((uint64_t)a1, (const std::string::value_type *)v56, v57);
        if (SHIBYTE(v110) < 0) {
          operator delete(v109[0]);
        }
      }
    }
    if (v115 < 0) {
      operator delete(__p);
    }
    if (SHIBYTE(v118) < 0) {
      operator delete(__dst);
    }
LABEL_90:
    sub_1CC4AD1DC((uint64_t)&v119);
    size_t v7 = v119;
    uint64_t v9 = v120;
    uint64_t v11 = v121;
    uint64_t v13 = v122;
  }
  if (v128)
  {
    BOOL v88 = (void *)a1[4];
    uint64_t v89 = (void *)a1[2];
    int v119 = v88;
    int v120 = v89;
    int v121 = v6;
    uint64_t v122 = v8;
    while (v88 != v6 || v89 != v8 || v121 != v6 || v122 != v8)
    {
      uint64_t v91 = 0;
      do
      {
        int v92 = (llvm::GlobalObject *)(*(uint64_t (**)(void **))((char *)&off_1F262B138 + v91))(&v119);
        v91 += 16;
      }
      while (!v92);
      uint64_t v93 = *((void *)v92 + 6);
      if (v93 && v129)
      {
        uint64_t v94 = (v129 - 1) & ((v93 >> 4) ^ (v93 >> 9));
        uint64_t v95 = *(void *)(v127 + 16 * v94);
        if (v93 == v95)
        {
LABEL_148:
          if (v94 != v129) {
            llvm::GlobalObject::setComdat(v92, *(llvm::Comdat **)(v127 + 16 * v94 + 8));
          }
        }
        else
        {
          int v97 = 1;
          while (v95 != -4096)
          {
            int v98 = v94 + v97++;
            uint64_t v94 = v98 & (v129 - 1);
            uint64_t v95 = *(void *)(v127 + 16 * v94);
            if (v93 == v95) {
              goto LABEL_148;
            }
          }
        }
      }
      uint64_t v96 = 0;
      do
      {
        if ((*(uint64_t (**)(void **))((char *)&off_1F262B158 + v96))(&v119)) {
          break;
        }
        BOOL v80 = v96 == 16;
        v96 += 16;
      }
      while (!v80);
      BOOL v88 = v119;
      uint64_t v89 = v120;
    }
  }
  return MEMORY[0x1D25D9CD0](v127, 8);
}

void sub_1CC9C04C4(uint64_t *a1, llvm::Function *this)
{
  uint64_t v19 = this;
  uint64_t v2 = **(void **)(*((void *)this + 3) + 16);
  BOOL v4 = *(_DWORD *)(v2 + 8) >> 8 <= 0x40u && v2 != 0 && *(_DWORD *)(v2 + 8) == 13;
  if (v4 && *((void *)this + 12))
  {
    if (*((_WORD *)this + 9)) {
      llvm::Function::BuildLazyArguments(this);
    }
    uint64_t v7 = *((void *)this + 11);
    if (!*(void *)(v7 + 8))
    {
      uint64_t v8 = *((void *)this + 11);
      if (*((_WORD *)this + 9))
      {
        llvm::Function::BuildLazyArguments(this);
        uint64_t v7 = *((void *)this + 11);
        if (*((_WORD *)this + 9))
        {
          uint64_t v18 = *((void *)this + 11);
          llvm::Function::BuildLazyArguments(this);
          uint64_t v7 = v18;
        }
        uint64_t v8 = *((void *)this + 11);
      }
      uint64_t v9 = (uint64_t *)(v8 + 40 * *((void *)this + 12));
      uint64_t v10 = (uint64_t *)(v7 + 40);
      while (v10 != v9)
      {
        uint64_t v12 = *v10;
        v10 += 5;
        uint64_t v11 = v12;
        int v13 = *(_DWORD *)(v12 + 8);
        if (*(_DWORD *)(v12 + 8) >> 8 > 0x40u || v11 == 0 || v13 != 13) {
          return;
        }
      }
      if (this && *((unsigned char *)this + 16) == 3)
      {
        if ((*((_DWORD *)this + 5) & 0x7FFFFFF) == 0) {
          return;
        }
      }
      else if (!*((unsigned char *)this + 16) {
             && *((llvm::Function **)this + 9) == (llvm::Function *)((char *)this + 72)
      }
             && (*((unsigned char *)this + 34) & 0x80) == 0)
      {
        return;
      }
      uint64_t v16 = (llvm::Function *)(*(uint64_t (**)(void, llvm::Function *))*a1)(*(void *)(*a1 + 8), this);
      if (llvm::computeFunctionBodyMemoryAccess(this, v16, v17) == 4) {
        sub_1CC85F498(a1[1], &v19, (uint64_t)v20);
      }
    }
  }
}

uint64_t sub_1CC9C0634(uint64_t **a1, llvm::GlobalAlias *this)
{
  int v4 = *((unsigned __int8 *)this + 16);
  if (this && v4 == 1)
  {
    uint64_t AliaseeObject = (llvm::GlobalAlias *)llvm::GlobalAlias::getAliaseeObject(this);
    if (!AliaseeObject) {
      goto LABEL_5;
    }
  }
  else
  {
    uint64_t AliaseeObject = this;
    if (v4 == 2) {
      goto LABEL_5;
    }
  }
  uint64_t v6 = *((void *)AliaseeObject + 6);
  if (v6)
  {
    unsigned int v39 = *a1;
    uint64_t v65 = 0;
    v66[0] = v6;
    if (sub_1CD420258(v39, v66, &v65)) {
      return 1;
    }
  }
LABEL_5:
  if (this && !*((unsigned char *)this + 16))
  {
    uint64_t v7 = a1[1];
    uint64_t v65 = 0;
    v66[0] = (uint64_t)this;
    return sub_1CC020A5C(v7, v66, &v65);
  }
  v66[0] = 0;
  v66[1] = 0;
  int v67 = 0;
  uint64_t v9 = (uint64_t ***)sub_1CC5BE54C((uint64_t)this, (uint64_t)v66);
  MEMORY[0x1D25D9CD0](v66[0], 8);
  if (!v9 || *((unsigned char *)v9 + 16) != 3) {
    return 0;
  }
  unsigned int v10 = v9 >> 4;
  if ((*((unsigned char *)v9 + 23) & 0x20) != 0)
  {
    uint64_t v11 = ***v9;
    v66[0] = (uint64_t)v9;
    int v12 = *(_DWORD *)(v11 + 2496);
    if (v12)
    {
      uint64_t v13 = *(void *)(v11 + 2480);
      int v14 = v12 - 1;
      unsigned int v15 = v14 & (v10 ^ (v9 >> 9));
      uint64_t v16 = (uint64_t ****)(v13 + 40 * v15);
      uint64_t v17 = *v16;
      if (*v16 == v9)
      {
LABEL_21:
        uint64_t v22 = *((unsigned int *)v16 + 4);
        if (!v22) {
          goto LABEL_25;
        }
        int v23 = v16[1] + 1;
        uint64_t v24 = 16 * v22;
        while (*((_DWORD *)v23 - 2) != 22)
        {
          v23 += 2;
          v24 -= 16;
          if (!v24) {
            goto LABEL_25;
          }
        }
        uint64_t v40 = *v23;
        if (!v40) {
          goto LABEL_25;
        }
        unsigned int v41 = *(unsigned __int8 **)(v40 - 8 * *(unsigned int *)(v40 + 8));
        if (!v41 || *v41 - 1 > 1) {
          goto LABEL_25;
        }
        uint64_t v42 = *((void *)v41 + 16);
        unsigned int v43 = *(unsigned __int8 *)(v42 + 16);
        BOOL v44 = v43 > 3 || v43 == 1;
        if (v44 || (*(unsigned char *)(v42 + 23) & 0x20) == 0) {
          goto LABEL_25;
        }
        uint64_t v45 = ***(void ***)v42;
        v66[0] = v42;
        int v46 = *(_DWORD *)(v45 + 2496);
        if (v46)
        {
          uint64_t v47 = *(void *)(v45 + 2480);
          int v48 = v46 - 1;
          unsigned int v49 = v48 & ((v42 >> 4) ^ (v42 >> 9));
          BOOL v50 = (void *)(v47 + 40 * v49);
          uint64_t v51 = *v50;
          if (*v50 == v42)
          {
LABEL_62:
            uint64_t v56 = *((unsigned int *)v50 + 4);
            if (v56)
            {
              std::string::size_type v57 = (void *)(v50[1] + 8);
              uint64_t v58 = 16 * v56;
              while (*((_DWORD *)v57 - 2) != 19)
              {
                v57 += 2;
                v58 -= 16;
                if (!v58) {
                  goto LABEL_25;
                }
              }
              if (*v57) {
                return 1;
              }
            }
            goto LABEL_25;
          }
          uint64_t v52 = 0;
          int v53 = 1;
          while (v51 != -4096)
          {
            if (v52) {
              BOOL v54 = 0;
            }
            else {
              BOOL v54 = v51 == -8192;
            }
            if (v54) {
              uint64_t v52 = v50;
            }
            unsigned int v55 = v49 + v53++;
            unsigned int v49 = v55 & v48;
            BOOL v50 = (void *)(v47 + 40 * v49);
            uint64_t v51 = *v50;
            if (*v50 == v42) {
              goto LABEL_62;
            }
          }
          if (v52) {
            uint64_t v63 = v52;
          }
          else {
            uint64_t v63 = v50;
          }
        }
        else
        {
          uint64_t v63 = 0;
        }
        BOOL v50 = sub_1CC609054(v45 + 2480, (uint64_t)v66, v66, v63);
        uint64_t v64 = v66[0];
        v50[3] = 0;
        v50[4] = 0;
        *BOOL v50 = v64;
        v50[1] = v50 + 3;
        v50[2] = 0x100000000;
        goto LABEL_62;
      }
      uint64_t v18 = 0;
      int v19 = 1;
      while (v17 != (uint64_t ***)-4096)
      {
        if (v18) {
          BOOL v20 = 0;
        }
        else {
          BOOL v20 = v17 == (uint64_t ***)-8192;
        }
        if (v20) {
          uint64_t v18 = v16;
        }
        unsigned int v21 = v15 + v19++;
        unsigned int v15 = v21 & v14;
        uint64_t v16 = (uint64_t ****)(v13 + 40 * v15);
        uint64_t v17 = *v16;
        if (*v16 == v9) {
          goto LABEL_21;
        }
      }
      if (v18) {
        size_t v59 = v18;
      }
      else {
        size_t v59 = v16;
      }
    }
    else
    {
      size_t v59 = 0;
    }
    uint64_t v16 = (uint64_t ****)sub_1CC609054(v11 + 2480, (uint64_t)v66, v66, v59);
    uint64_t v60 = v66[0];
    v16[3] = 0;
    v16[4] = 0;
    *uint64_t v16 = (uint64_t ***)v60;
    v16[1] = (uint64_t ***)(v16 + 3);
    v16[2] = (uint64_t ***)0x100000000;
    goto LABEL_21;
  }
LABEL_25:
  if ((*((unsigned char *)v9 + 23) & 0x20) == 0) {
    return 0;
  }
  uint64_t v25 = ***v9;
  v66[0] = (uint64_t)v9;
  int v26 = *(_DWORD *)(v25 + 2496);
  if (v26)
  {
    uint64_t v27 = *(void *)(v25 + 2480);
    int v28 = v26 - 1;
    unsigned int v29 = v28 & (v10 ^ (v9 >> 9));
    uint64_t v30 = (uint64_t ****)(v27 + 40 * v29);
    uint64_t v31 = *v30;
    if (*v30 == v9) {
      goto LABEL_36;
    }
    uint64_t v32 = 0;
    int v33 = 1;
    while (v31 != (uint64_t ***)-4096)
    {
      if (v32) {
        BOOL v34 = 0;
      }
      else {
        BOOL v34 = v31 == (uint64_t ***)-8192;
      }
      if (v34) {
        uint64_t v32 = v30;
      }
      unsigned int v35 = v29 + v33++;
      unsigned int v29 = v35 & v28;
      uint64_t v30 = (uint64_t ****)(v27 + 40 * v29);
      uint64_t v31 = *v30;
      if (*v30 == v9) {
        goto LABEL_36;
      }
    }
    if (v32) {
      uint64_t v61 = v32;
    }
    else {
      uint64_t v61 = v30;
    }
  }
  else
  {
    uint64_t v61 = 0;
  }
  uint64_t v30 = (uint64_t ****)sub_1CC609054(v25 + 2480, (uint64_t)v66, v66, v61);
  uint64_t v62 = v66[0];
  v30[3] = 0;
  v30[4] = 0;
  *uint64_t v30 = (uint64_t ***)v62;
  v30[1] = (uint64_t ***)(v30 + 3);
  v30[2] = (uint64_t ***)0x100000000;
LABEL_36:
  uint64_t v36 = *((unsigned int *)v30 + 4);
  if (!v36) {
    return 0;
  }
  std::string::size_type v37 = v30[1] + 1;
  uint64_t v38 = 16 * v36;
  while (*((_DWORD *)v37 - 2) != 19)
  {
    uint64_t result = 0;
    v37 += 2;
    v38 -= 16;
    if (!v38) {
      return result;
    }
  }
  return *v37 != 0;
}

llvm::MDNode *sub_1CC9C0A4C(llvm::MDNode *result, unsigned __int8 *a2, size_t a3, unsigned __int8 *a4, size_t a5)
{
  v30[2] = *MEMORY[0x1E4F143B8];
  int v26 = result;
  int v5 = *(uint64_t **)(*(void *)result + 112);
  size_t v6 = *((unsigned int *)v5 + 8);
  if (v6 <= 1) {
    unint64_t v7 = 1;
  }
  else {
    unint64_t v7 = v6;
  }
  if (a3 < v7) {
    unint64_t v7 = a3;
  }
  if (a3 <= v6) {
    unint64_t v7 = a3;
  }
  if ((v6 & 0x80000000) == 0) {
    size_t v9 = v7;
  }
  else {
    size_t v9 = a3;
  }
  uint64_t v29 = *((unsigned int *)v5 + 2);
  if (v29)
  {
    int v11 = 0;
    if (v9)
    {
      size_t v12 = v9;
      uint64_t v13 = a2;
      do
      {
        int v14 = *v13++;
        int v11 = 33 * v11 + v14;
        --v12;
      }
      while (v12);
    }
    uint64_t v15 = *v5;
    uint64_t v16 = *v5 + 8 * v29 + 8;
    int v17 = 1;
    int v18 = v11;
    while (1)
    {
      uint64_t v19 = v18 & (v29 - 1);
      BOOL v20 = *(void **)(v15 + 8 * v19);
      if (v20 != (void *)-8)
      {
        if (!v20) {
          return result;
        }
        if (*(_DWORD *)(v16 + 4 * v19) == v11 && v9 == *v20)
        {
          if (!v9) {
            break;
          }
          uint64_t result = (llvm::MDNode *)memcmp(a2, (char *)v20 + *((unsigned int *)v5 + 5), v9);
          if (!result) {
            break;
          }
        }
      }
      int v18 = v17 + v19;
      ++v17;
    }
    if (v19 != -1 && (int)v19 != v29)
    {
      uint64_t v21 = *(void *)(*(void *)(v15 + 8 * (int)v19) + 8);
      if (v21)
      {
        if (!*(unsigned char *)(v21 + 16) && *(void *)(v21 + 8))
        {
          uint64_t v22 = *((void *)v26 + 1);
          int v23 = (uint64_t *)*((void *)v26 + 2);
          v30[0] = llvm::MDString::get(v23, a2, a3);
          v30[1] = llvm::MDString::get(*((uint64_t **)v26 + 2), a4, a5);
          uint64_t result = llvm::MDTuple::getImpl((uint64_t)v23, v30, 2, 0, 1);
          unsigned int v24 = *(_DWORD *)(v22 + 8);
          if (v24 >= *(_DWORD *)(v22 + 12)) {
            llvm::SmallVectorBase<unsigned int>::grow_pod();
          }
          *(void *)(*(void *)v22 + 8 * v24) = result;
          ++*(_DWORD *)(v22 + 8);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1CC9C0C50(uint64_t result, uint64_t a2, unsigned int a3)
{
  int v3 = *(unsigned __int8 **)(*(void *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF) + 32 * a3) + 24);
  uint64_t v25 = v3;
  if (*v3 - 4 <= 0x1E && (v3[1] & 0x7F) == 1)
  {
    uint64_t v5 = result;
    uint64_t v6 = a3;
    unint64_t v7 = sub_1CD4F8350(*(uint64_t **)result, &v25);
    uint64_t v8 = (unsigned __int8 *)v7[1];
    if (!v8)
    {
      size_t v9 = v7;
      unsigned int v10 = *(uint64_t **)(v5 + 8);
      uint64_t v12 = *v10;
      uint64_t v11 = v10[1];
      v21[0] = *(unsigned int *)(*(void *)v5 + 8);
      v21[2] = v12;
      v21[3] = v11;
      __int16 v22 = 1288;
      llvm::Twine::str((llvm::Twine *)v21, __p);
      uint64_t v13 = v24 >= 0 ? (unsigned __int8 *)__p : (unsigned __int8 *)__p[0];
      int v14 = v24 >= 0 ? (void *)(v24 & 0x7F) : __p[1];
      uint64_t v8 = (unsigned __int8 *)llvm::MDString::get(**(uint64_t ***)(v5 + 16), v13, (size_t)v14);
      v9[1] = v8;
      if (v24 < 0)
      {
        operator delete(__p[0]);
        uint64_t v8 = (unsigned __int8 *)v9[1];
      }
    }
    uint64_t result = llvm::MetadataAsValue::get(**(void **)(v5 + 16), v8);
    uint64_t v15 = a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF);
    uint64_t v16 = v15 + 32 * v6;
    if (*(void *)v16)
    {
      **(void **)(v16 + 16) = *(void *)(v16 + 8);
      uint64_t v17 = *(void *)(v16 + 8);
      if (v17) {
        *(void *)(v17 + 16) = *(void *)(v16 + 16);
      }
    }
    *(void *)uint64_t v16 = result;
    if (result)
    {
      uint64_t v19 = *(void *)(result + 8);
      result += 8;
      uint64_t v18 = v19;
      uint64_t v20 = v15 + 32 * v6;
      *(void *)(v20 + 8) = v19;
      if (v19) {
        *(void *)(v18 + 16) = v20 + 8;
      }
      *(void *)(v20 + 16) = result;
      *(void *)uint64_t result = v16;
    }
  }
  return result;
}

void sub_1CC9C0DC8()
{
}

void *sub_1CC9C0DDC()
{
  uint64_t result = operator new(0x10uLL);
  *uint64_t result = &unk_1F262B188;
  return result;
}

void sub_1CC9C0E14(uint64_t a1, void *a2)
{
  *a2 = &unk_1F262B188;
}

uint64_t sub_1CC9C0E3C()
{
  return 0;
}

void sub_1CC9C0E44()
{
}

uint64_t llvm::wholeprogramdevirt::findLowestOffset(uint64_t a1, uint64_t a2, int a3, unint64_t a4)
{
  if (a2)
  {
    uint64_t v5 = a1;
    unint64_t v49 = a4;
    unint64_t v6 = 0;
    uint64_t v7 = 32 * a2;
    uint64_t v8 = (void **)(a1 + 8);
    uint64_t v9 = a1 + 32 * a2;
    do
    {
      unsigned int v10 = *v8;
      if (a3) {
        unint64_t v11 = *(void *)(*v10 + 8) - v10[1];
      }
      else {
        unint64_t v11 = v10[1];
      }
      if (v6 <= v11) {
        unint64_t v6 = v11;
      }
      v8 += 4;
      v7 -= 32;
    }
    while (v7);
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    int v14 = 0;
    do
    {
      uint64_t v15 = *(void **)(v5 + 8);
      uint64_t v16 = (void *)*v15;
      if (a3)
      {
        uint64_t v17 = v16[11];
        unint64_t v18 = v16[12] - v17;
        uint64_t v19 = v16[1] - v15[1];
      }
      else
      {
        uint64_t v17 = v16[5];
        unint64_t v18 = v16[6] - v17;
        uint64_t v19 = v15[1];
      }
      unint64_t v20 = v6 - v19;
      unint64_t v21 = v18 - v20;
      if (v18 > v20)
      {
        uint64_t v22 = v17 + v20;
        if (v13 >= v12)
        {
          uint64_t v23 = (v13 - v14) >> 4;
          unint64_t v24 = v23 + 1;
          if ((unint64_t)(v23 + 1) >> 60) {
            abort();
          }
          if ((v12 - v14) >> 3 > v24) {
            unint64_t v24 = (v12 - v14) >> 3;
          }
          if ((unint64_t)(v12 - v14) >= 0x7FFFFFFFFFFFFFF0) {
            unint64_t v25 = 0xFFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v25 = v24;
          }
          if (v25)
          {
            if (v25 >> 60) {
              sub_1CB833614();
            }
            int v26 = (char *)operator new(16 * v25);
          }
          else
          {
            int v26 = 0;
          }
          uint64_t v27 = &v26[16 * v23];
          *(void *)uint64_t v27 = v22;
          *((void *)v27 + 1) = v21;
          if (v13 == v14)
          {
            uint64_t v29 = v13;
            int v14 = &v26[16 * v23];
          }
          else
          {
            int v28 = &v26[16 * v23];
            do
            {
              *((_OWORD *)v28 - 1) = *((_OWORD *)v13 - 1);
              v28 -= 16;
              v13 -= 16;
            }
            while (v13 != v14);
            uint64_t v29 = v14;
            int v14 = v28;
          }
          uint64_t v12 = &v26[16 * v25];
          uint64_t v13 = v27 + 16;
          if (v29) {
            operator delete(v29);
          }
        }
        else
        {
          *(void *)uint64_t v13 = v22;
          *((void *)v13 + 1) = v21;
          v13 += 16;
        }
      }
      v5 += 32;
    }
    while (v5 != v9);
    a4 = v49;
  }
  else
  {
    unint64_t v6 = 0;
    int v14 = 0;
    uint64_t v13 = 0;
  }
  if (a4 != 1)
  {
    if (v14 != v13)
    {
      for (unsigned int i = 0; ; ++i)
      {
        unsigned int v43 = v14;
        while (1)
        {
          if (a4 >= 8)
          {
            unint64_t v44 = *((void *)v43 + 1);
            if (v44 > i) {
              break;
            }
          }
LABEL_61:
          v43 += 16;
          if (v43 == v13) {
            goto LABEL_67;
          }
        }
        unsigned int v45 = 1;
        unint64_t v46 = i;
        while (!*(unsigned char *)(*(void *)v43 + v46))
        {
          if (a4 >> 3 > v45)
          {
            unint64_t v46 = i + v45++;
            if (v44 > v46) {
              continue;
            }
          }
          goto LABEL_61;
        }
      }
    }
    unsigned int i = 0;
LABEL_67:
    unint64_t v47 = v6 + i;
LABEL_68:
    uint64_t v41 = 8 * v47;
    if (!v14) {
      return v41;
    }
LABEL_69:
    operator delete(v14);
    return v41;
  }
  if (v14 == v13)
  {
    unsigned int v32 = 0;
LABEL_65:
    unint64_t v47 = v6 + v32;
    goto LABEL_68;
  }
  unsigned int v30 = 0;
  do
  {
    int v31 = 0;
    unsigned int v32 = v30;
    unint64_t v33 = v30;
    BOOL v34 = v14;
    do
    {
      if (*((void *)v34 + 1) > v33) {
        v31 |= *(unsigned __int8 *)(*(void *)v34 + v33);
      }
      v34 += 16;
    }
    while (v34 != v13);
    unsigned int v30 = v32 + 1;
  }
  while (v31 == 255);
  unsigned int v35 = v31 ^ 0xFF;
  if (v35) {
    goto LABEL_65;
  }
  unsigned int v36 = 0;
  unsigned int v37 = 4;
  unsigned int v38 = 15;
  do
  {
    if ((v35 & v38) != 0) {
      unsigned int v39 = 0;
    }
    else {
      unsigned int v39 = v37;
    }
    v35 >>= v39;
    v36 |= v39;
    v38 >>= v37 >> 1;
    BOOL v40 = v37 >= 2;
    v37 >>= 1;
  }
  while (v40);
  uint64_t v41 = 8 * (v6 + v33) + v36;
  if (v14) {
    goto LABEL_69;
  }
  return v41;
}

uint64_t llvm::wholeprogramdevirt::VirtualCallTarget::VirtualCallTarget(uint64_t result, uint64_t a2, uint64_t a3)
{
  *(void *)uint64_t result = a2;
  *(void *)(result + 8) = a3;
  *(_WORD *)(result + 24) = *(unsigned __int8 *)(*(void *)(a2 + 40) + 272);
  return result;
}

{
  *(void *)uint64_t result = a2;
  *(void *)(result + 8) = a3;
  *(_WORD *)(result + 24) = *(unsigned __int8 *)(*(void *)(a2 + 40) + 272);
  return result;
}

void llvm::initializeWholeProgramDevirtPass(llvm *this, llvm::PassRegistry *a2)
{
  uint64_t v2 = this;
  if (atomic_load_explicit((atomic_ullong *volatile)&qword_1EBCE4EB0, memory_order_acquire) != -1)
  {
    v4[0] = sub_1CC9C1208;
    v4[1] = &v2;
    int v3 = v4;
    std::__call_once(&qword_1EBCE4EB0, &v3, (void (__cdecl *)(void *))sub_1CB848390);
  }
}

void sub_1CC9C1208(uint64_t a1)
{
}

void llvm::createWholeProgramDevirtPass(llvm *this, llvm::ModuleSummaryIndex *a2, const llvm::ModuleSummaryIndex *a3)
{
}

void sub_1CC9C13A0()
{
  uint64_t v0 = *MEMORY[0x1E4F143B8];
  operator new();
}

uint64_t sub_1CC9C1C2C(uint64_t a1, llvm::IntegerType **a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  v37[34] = *MEMORY[0x1E4F143B8];
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = a3;
  *(void *)(a1 + 16) = a4;
  *(void *)(a1 + 24) = a7;
  *(void *)(a1 + 32) = a8;
  *(void *)(a1 + 40) = a9;
  *(void *)(a1 + 48) = a10;
  int v14 = (llvm::PointerType *)(*(void *)*a2 + 1912);
  *(void *)(a1 + 56) = v14;
  *(void *)(a1 + 64) = llvm::PointerType::get(v14, 0);
  uint64_t v15 = *a2;
  uint64_t v16 = *(void *)*a2;
  *(void *)(a1 + 72) = v16 + 1960;
  *(void *)(a1 + 80) = v16 + 1984;
  *(void *)(a1 + 88) = llvm::IntegerType::get(v15, (llvm::LLVMContext *)*((unsigned int *)a2[63] + 1));
  *(void *)(a1 + 96) = llvm::ArrayType::get((llvm::ArrayType *)(*(void *)*a2 + 1912), 0);
  uint64_t v17 = *(void *)a1 + 24;
  uint64_t v18 = *(void *)(*(void *)a1 + 32);
  if (v18 == v17)
  {
LABEL_7:
    char isEnabled = 0;
    goto LABEL_8;
  }
  while (1)
  {
    uint64_t v19 = v18 ? v18 - 56 : 0;
    if (*(void *)(v19 + 72) != v19 + 72) {
      break;
    }
    uint64_t v18 = *(void *)(v18 + 8);
    if (v18 == v17) {
      goto LABEL_7;
    }
  }
  int v31 = 0;
  llvm::DiagnosticLocation::DiagnosticLocation(&v32, (const llvm::DebugLoc *)&v31);
  uint64_t v22 = *(void *)(v19 + 80);
  if (v22) {
    uint64_t v23 = v22 - 24;
  }
  else {
    uint64_t v23 = 0;
  }
  llvm::OptimizationRemark::OptimizationRemark((uint64_t)v34, (uint64_t)"wholeprogramdevirt", (uint64_t)"", 0, &v32, v23);
  if (v31)
  {
    int v24 = *v31;
    if ((v24 - 4) > 0x1E)
    {
      if ((v24 - 3) >= 0xFFFFFFFE) {
        int v28 = v31;
      }
      else {
        int v28 = 0;
      }
      if ((v24 - 3) < 0xFFFFFFFE)
      {
        if (v24 == 3) {
          *((void *)v31 + 1) = 0;
        }
        goto LABEL_16;
      }
      unint64_t v29 = (unint64_t)(v28 + 8);
    }
    else
    {
      if ((v31[1] & 0x7F) != 2 && !*((_DWORD *)v31 + 3)) {
        goto LABEL_16;
      }
      uint64_t v30 = *((void *)v31 + 2);
      if ((v30 & 4) == 0) {
        goto LABEL_16;
      }
      unint64_t v29 = v30 & 0xFFFFFFFFFFFFFFF8;
      if (!v29) {
        goto LABEL_16;
      }
    }
    unint64_t v33 = &v31;
    sub_1CC5FA668(v29 + 16, &v33);
  }
LABEL_16:
  char isEnabled = llvm::OptimizationRemark::isEnabled(v34);
  v34[0] = (llvm::Function *)&unk_1F2616800;
  unint64_t v25 = (char *)v35;
  if (v36)
  {
    unint64_t v26 = (unint64_t)v36 << 6;
    do
    {
      uint64_t v27 = (void **)&v25[v26];
      if (v25[v26 - 17] < 0) {
        operator delete(*(v27 - 5));
      }
      if (*((char *)v27 - 41) < 0) {
        operator delete(*(v27 - 8));
      }
      v26 -= 64;
    }
    while (v26);
    unint64_t v25 = (char *)v35;
  }
  if (v25 != (char *)v37) {
    free(v25);
  }
LABEL_8:
  *(unsigned char *)(a1 + 104) = isEnabled;
  *(void *)(a1 + 112) = a5;
  *(void *)(a1 + 120) = a6;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  *(_DWORD *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = 0;
  *(void *)(a1 + 176) = a1 + 208;
  *(void *)(a1 + 184) = a1 + 208;
  *(void *)(a1 + 192) = 8;
  *(_DWORD *)(a1 + 200) = 0;
  *(void *)(a1 + 272) = a1 + 280;
  *(void *)(a1 + 280) = 0;
  *(void *)(a1 + 288) = 0;
  *(void *)(a1 + 296) = 0;
  *(void *)(a1 + 304) = 0;
  *(void *)(a1 + 312) = 0;
  sub_1CC9C7B7C((uint64_t *)(a1 + 296));
  return a1;
}

uint64_t sub_1CC9C1EF4(void *a1)
{
  uint64_t v751 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = a1[5];
  if (v1 && *(unsigned char *)(v1 + 135)) {
    return 0;
  }
  uint64_t v2 = a1[6];
  if (v2)
  {
    if (*(unsigned char *)(v2 + 135)) {
      return 0;
    }
  }
  int v3 = *(uint64_t **)(*a1 + 112);
  unsigned int v4 = *((_DWORD *)v3 + 8);
  if (v4 <= 1) {
    uint64_t v5 = 1;
  }
  else {
    uint64_t v5 = v4;
  }
  if (v4 <= 0xD) {
    size_t v6 = v5;
  }
  else {
    size_t v6 = 14;
  }
  uint64_t v7 = *((unsigned int *)v3 + 2);
  uint64_t v717 = v7;
  uint64_t v695 = *a1;
  uint64_t v698 = a1[5];
  if (!v7) {
    goto LABEL_24;
  }
  uint64_t v8 = 0;
  int v9 = 0;
  do
    int v9 = 33 * v9 + aLlvmTypeTest[v8++];
  while (v6 != v8);
  unsigned int v10 = v7 - 1;
  uint64_t v11 = *v3;
  uint64_t v12 = *v3 + 8 * v7 + 8;
  int v13 = 1;
  int v14 = v9;
  while (1)
  {
    uint64_t v15 = v14 & v10;
    uint64_t v16 = *(void **)(v11 + 8 * v15);
    if (v16 != (void *)-8)
    {
      if (!v16) {
        goto LABEL_25;
      }
      if (*(_DWORD *)(v12 + 4 * v15) == v9
        && v6 == *v16
        && !memcmp("llvm.type.test", (char *)v16 + *((unsigned int *)v3 + 5), v6))
      {
        break;
      }
    }
    int v14 = v13 + v15;
    ++v13;
  }
  if (v15 == -1)
  {
LABEL_25:
    uint64_t v18 = 0;
    uint64_t v7 = v717;
    goto LABEL_26;
  }
  uint64_t v7 = v717;
  if ((int)v15 != v717 && (uint64_t v17 = *(void *)(*(void *)(v11 + 8 * (int)v15) + 8)) != 0)
  {
    if (*(unsigned char *)(v17 + 16)) {
      uint64_t v18 = 0;
    }
    else {
      uint64_t v18 = *(void *)(*(void *)(v11 + 8 * (int)v15) + 8);
    }
  }
  else
  {
LABEL_24:
    uint64_t v18 = 0;
  }
LABEL_26:
  if (v4 <= 1) {
    uint64_t v19 = 1;
  }
  else {
    uint64_t v19 = v4;
  }
  if (v4 <= 0x15) {
    size_t v20 = v19;
  }
  else {
    size_t v20 = 22;
  }
  uint64_t v702 = v18;
  if (!v7) {
    goto LABEL_45;
  }
  uint64_t v21 = 0;
  int v22 = 0;
  do
    int v22 = 33 * v22 + aLlvmTypeChecke[v21++];
  while (v20 != v21);
  unsigned int v23 = v7 - 1;
  uint64_t v24 = *v3;
  uint64_t v25 = *v3 + 8 * v7 + 8;
  int v26 = 1;
  int v27 = v22;
  while (1)
  {
    uint64_t v28 = v27 & v23;
    unint64_t v29 = *(void **)(v24 + 8 * v28);
    if (v29 != (void *)-8)
    {
      if (!v29) {
        goto LABEL_46;
      }
      if (*(_DWORD *)(v25 + 4 * v28) == v22
        && v20 == *v29
        && !memcmp("llvm.type.checked.load", (char *)v29 + *((unsigned int *)v3 + 5), v20))
      {
        break;
      }
    }
    int v27 = v26 + v28;
    ++v26;
  }
  if (v28 == -1)
  {
LABEL_46:
    size_t v31 = 0;
    uint64_t v7 = v717;
    goto LABEL_47;
  }
  uint64_t v7 = v717;
  if ((int)v28 != v717 && (uint64_t v30 = *(void *)(*(void *)(v24 + 8 * (int)v28) + 8)) != 0)
  {
    if (*(unsigned char *)(v30 + 16)) {
      size_t v31 = 0;
    }
    else {
      size_t v31 = *(void *)(*(void *)(v24 + 8 * (int)v28) + 8);
    }
  }
  else
  {
LABEL_45:
    size_t v31 = 0;
  }
LABEL_47:
  if (v4 <= 1) {
    uint64_t v32 = 1;
  }
  else {
    uint64_t v32 = v4;
  }
  if (v4 <= 0x1E) {
    size_t v33 = v32;
  }
  else {
    size_t v33 = 31;
  }
  size_t v714 = v31;
  if (!v7) {
    goto LABEL_66;
  }
  uint64_t v34 = 0;
  int v35 = 0;
  do
    int v35 = 33 * v35 + aLlvmTypeChecke_0[v34++];
  while (v33 != v34);
  unsigned int v36 = v7 - 1;
  uint64_t v37 = *v3;
  uint64_t v38 = *v3 + 8 * v7 + 8;
  int v39 = 1;
  int v40 = v35;
  while (1)
  {
    uint64_t v41 = v40 & v36;
    uint64_t v42 = *(void **)(v37 + 8 * v41);
    if (v42 != (void *)-8)
    {
      if (!v42) {
        goto LABEL_67;
      }
      if (*(_DWORD *)(v38 + 4 * v41) == v35
        && v33 == *v42
        && !memcmp("llvm.type.checked.load.relative", (char *)v42 + *((unsigned int *)v3 + 5), v33))
      {
        break;
      }
    }
    int v40 = v39 + v41;
    ++v39;
  }
  if (v41 == -1)
  {
LABEL_67:
    size_t v44 = 0;
    size_t v31 = v714;
    uint64_t v7 = v717;
    goto LABEL_68;
  }
  size_t v31 = v714;
  uint64_t v7 = v717;
  if ((int)v41 != v717 && (uint64_t v43 = *(void *)(*(void *)(v37 + 8 * (int)v41) + 8)) != 0)
  {
    if (*(unsigned char *)(v43 + 16)) {
      size_t v44 = 0;
    }
    else {
      size_t v44 = *(void *)(*(void *)(v37 + 8 * (int)v41) + 8);
    }
  }
  else
  {
LABEL_66:
    size_t v44 = 0;
  }
LABEL_68:
  if (v4 <= 1) {
    uint64_t v45 = 1;
  }
  else {
    uint64_t v45 = v4;
  }
  if (v4 <= 0xA) {
    size_t v46 = v45;
  }
  else {
    size_t v46 = 11;
  }
  size_t v707 = v44;
  if (!v7)
  {
    uint64_t v59 = 0;
    uint64_t v56 = (uint64_t)a1;
LABEL_90:
    uint64_t v57 = v702;
    if (v698) {
      goto LABEL_113;
    }
    goto LABEL_91;
  }
  uint64_t v47 = 0;
  int v48 = 0;
  do
    int v48 = 33 * v48 + aLlvmAssume_0[v47++];
  while (v46 != v47);
  unsigned int v49 = v7 - 1;
  uint64_t v50 = *v3;
  uint64_t v51 = *v3 + 8 * v7 + 8;
  int v52 = 1;
  int v53 = v48;
  while (1)
  {
    uint64_t v54 = v53 & v49;
    unsigned int v55 = *(void **)(v50 + 8 * v54);
    if (v55 != (void *)-8)
    {
      if (!v55) {
        goto LABEL_89;
      }
      if (*(_DWORD *)(v51 + 4 * v54) == v48
        && v46 == *v55
        && !memcmp("llvm.assume", (char *)v55 + *((unsigned int *)v3 + 5), v46))
      {
        break;
      }
    }
    int v53 = v52 + v54;
    ++v52;
  }
  if (v54 == -1)
  {
LABEL_89:
    uint64_t v59 = 0;
    uint64_t v56 = (uint64_t)a1;
    size_t v44 = v707;
    goto LABEL_90;
  }
  uint64_t v56 = (uint64_t)a1;
  size_t v44 = v707;
  uint64_t v57 = v702;
  if ((int)v54 != v717 && (uint64_t v58 = *(void *)(*(void *)(v50 + 8 * (int)v54) + 8)) != 0)
  {
    if (*(unsigned char *)(v58 + 16)) {
      uint64_t v59 = 0;
    }
    else {
      uint64_t v59 = *(void *)(*(void *)(v50 + 8 * (int)v54) + 8);
    }
    if (v698) {
      goto LABEL_113;
    }
  }
  else
  {
    uint64_t v59 = 0;
    if (v698) {
      goto LABEL_113;
    }
  }
LABEL_91:
  if ((!v57 || !*(void *)(v57 + 8) || !v59 || !*(void *)(v59 + 8))
    && (!v31 || !*(void *)(v31 + 8))
    && (!v44 || !*(void *)(v44 + 8)))
  {
    return 0;
  }
LABEL_113:
  v731[0] = 0;
  v731[1] = 0;
  v732 = 0;
  v728 = 0;
  uint64_t v729 = 0;
  unsigned int v730 = 0;
  v742 = 0;
  v743 = 0;
  unint64_t v61 = -1;
  uint64_t v62 = v695 + 8;
  int v744 = 0;
  do
  {
    uint64_t v62 = *(void *)(v62 + 8);
    ++v61;
  }
  while (v62 != v695 + 8);
  sub_1CD687A5C((unint64_t *)v731, v61);
  uint64_t v63 = &v748;
  unint64_t v746 = (unint64_t)&v748;
  HIDWORD(v747) = 2;
  uint64_t v64 = *(void *)v56 + 8;
  uint64_t v65 = *(void *)(*(void *)v56 + 16);
  if (v65 == v64) {
    goto LABEL_160;
  }
  do
  {
    if (v65) {
      uint64_t v66 = v65 - 56;
    }
    else {
      uint64_t v66 = 0;
    }
    LODWORD(v747) = 0;
    llvm::Value::getMetadata((unsigned int *)v66, 19, (uint64_t)&v746);
    if (v65 && *(unsigned char *)(v66 + 16) == 3)
    {
      BOOL v67 = (*(_DWORD *)(v66 + 20) & 0x7FFFFFF) == 0;
      goto LABEL_122;
    }
    if (!*(unsigned char *)(v66 + 16) && *(void *)(v66 + 72) == v66 + 72)
    {
      BOOL v67 = (*(unsigned char *)(v66 + 34) & 0x80) == 0;
LABEL_122:
      char v68 = v67;
      if (v68) {
        goto LABEL_130;
      }
    }
    if (v747)
    {
      *(void *)__p = v66;
      uint64_t v69 = sub_1CD467E2C((uint64_t)&v742, (uint64_t *)__p);
      if (!v69[1])
      {
        uint64_t v70 = v731[1];
        uint64_t v71 = v732;
        if (v731[1] >= v732)
        {
          v699 = v63;
          uint64_t v89 = v731[0];
          uint64_t v90 = 0x6DB6DB6DB6DB6DB7 * (((char *)v731[1] - (char *)v731[0]) >> 4);
          unint64_t v91 = v90 + 1;
          if ((unint64_t)(v90 + 1) > 0x249249249249249) {
LABEL_1032:
          }
            abort();
          if (0xDB6DB6DB6DB6DB6ELL * ((v732 - (char *)v731[0]) >> 4) > v91) {
            unint64_t v91 = 0xDB6DB6DB6DB6DB6ELL * ((v732 - (char *)v731[0]) >> 4);
          }
          if ((unint64_t)(0x6DB6DB6DB6DB6DB7 * ((v732 - (char *)v731[0]) >> 4)) >= 0x124924924924924) {
            unint64_t v92 = 0x249249249249249;
          }
          else {
            unint64_t v92 = v91;
          }
          v737 = (void **)&v732;
          if (v92 > 0x249249249249249) {
LABEL_1033:
          }
            sub_1CB833614();
          uint64_t v93 = (char *)operator new(112 * v92);
          uint64_t v94 = v93;
          uint64_t v95 = &v93[112 * v90];
          *(_OWORD *)uint64_t v95 = 0u;
          *((_OWORD *)v95 + 1) = 0u;
          *((_OWORD *)v95 + 2) = 0u;
          *((_OWORD *)v95 + 3) = 0u;
          *((_OWORD *)v95 + 4) = 0u;
          *((_OWORD *)v95 + 5) = 0u;
          *((_OWORD *)v95 + 6) = 0u;
          if (v70 == v89)
          {
            int64x2_t v96 = vdupq_n_s64((unint64_t)v70);
            int v97 = v95;
          }
          else
          {
            v696 = v93;
            int v97 = v95;
            do
            {
              v70 -= 7;
              sub_1CD687B58((uint64_t)(v97 - 112), (uint64_t)v70);
            }
            while (v70 != v89);
            int64x2_t v96 = *(int64x2_t *)v731;
            uint64_t v71 = v732;
            uint64_t v94 = v696;
          }
          unsigned int v72 = v95 + 112;
          v731[0] = v97;
          v731[1] = v95 + 112;
          *(int64x2_t *)&__p[8] = v96;
          v732 = &v94[112 * v92];
          v736 = v71;
          *(void *)__p = v96.i64[0];
          sub_1CD687BE4((uint64_t)__p);
          uint64_t v73 = a1;
          uint64_t v63 = v699;
        }
        else
        {
          unsigned int v72 = (char *)v731[1] + 112;
          *((_OWORD *)v731[1] + 5) = 0u;
          v70[6] = 0u;
          v70[3] = 0u;
          v70[4] = 0u;
          v70[1] = 0u;
          v70[2] = 0u;
          *uint64_t v70 = 0u;
          uint64_t v73 = a1;
        }
        v731[1] = v72;
        *((void *)v72 - 14) = v66;
        int v74 = (llvm::DataLayout *)(*v73 + 272);
        int v75 = **(llvm::Type ***)(v66 - 32);
        uint64_t v76 = sub_1CB83544C((uint64_t)v74, (uint64_t)v75);
        BOOL v78 = v77 == 1;
        char Alignment = llvm::DataLayout::getAlignment(v74, v75, 1);
        if (v78) {
        unsigned int v81 = (char *)v731[1] - 112;
        }
        *((void *)v731[1] - 13) = ((1 << Alignment) + ((unint64_t)(v76 + 7) >> 3) - 1) & -(1 << Alignment);
        v69[1] = v81;
        uint64_t v56 = (uint64_t)a1;
      }
      if (v747)
      {
        uint64_t v82 = (char *)v746;
        uint64_t v83 = 8 * v747;
        do
        {
          unint64_t v84 = (void *)(*(void *)v82 - 8 * *(unsigned int *)(*(void *)v82 + 8));
          v726 = (char **)v84[1];
          uint64_t v85 = *(void *)(*v84 + 128);
          BOOL v86 = (unint64_t *)(v85 + 24);
          if (*(_DWORD *)(v85 + 32) >= 0x41u) {
            BOOL v86 = (unint64_t *)*v86;
          }
          unint64_t v87 = *v86;
          BOOL v88 = sub_1CD687DFC((uint64_t)&v728, (uint64_t *)&v726);
          *(void *)__p = v69[1];
          *(void *)&__p[8] = v87;
          sub_1CD687C48((uint64_t)(v88 + 1), *(unint64_t *)__p, v87, __p);
          v82 += 8;
          v83 -= 8;
        }
        while (v83);
      }
    }
LABEL_130:
    uint64_t v65 = *(void *)(v65 + 8);
  }
  while (v65 != v64);
  uint64_t v57 = v702;
  if ((int *)v746 != v63) {
    free((void *)v746);
  }
LABEL_160:
  MEMORY[0x1D25D9CD0](v742, 8);
  if (v57)
  {
    if (v59)
    {
      uint64_t v99 = *(void *)(v57 + 8);
      if (v99)
      {
        uint64_t v100 = v56 + 128;
        while (1)
        {
          uint64_t v101 = *(void *)(v99 + 24);
          uint64_t v99 = *(void *)(v99 + 8);
          if (v101)
          {
            if (*(unsigned char *)(v101 + 16) == 84) {
              break;
            }
          }
LABEL_191:
          if (!v99) {
            goto LABEL_192;
          }
        }
        *(void *)__p = &__p[16];
        *(void *)&__p[8] = 0x100000000;
        unint64_t v746 = (unint64_t)&v748;
        uint64_t v747 = 0x100000000;
        uint64_t v102 = (llvm::DominatorTree *)(*(uint64_t (**)(void, void))(v56 + 24))(*(void *)(v56 + 32), *(void *)(*(void *)(v101 + 40) + 56));
        llvm::findDevirtualizableCallsForTypeTest((uint64_t)__p, (uint64_t)&v746, v101, v102);
        uint64_t v103 = v101 - 32 * (*(_DWORD *)(v101 + 20) & 0x7FFFFFF);
        uint64_t v104 = *(size_t ***)(*(void *)(v103 + 32) + 24);
        if (v747)
        {
          int v105 = llvm::Value::stripPointerCasts(*(llvm::Value **)v103);
          if (*(_DWORD *)&__p[8])
          {
            uint64_t v106 = (uint64_t)v105;
            std::string v107 = *(void **)__p;
            uint64_t v108 = *(void *)__p + 16 * *(unsigned int *)&__p[8];
            do
            {
              uint64_t v109 = (void *)*v107;
              uint64_t v110 = v107[1];
              v107 += 2;
              v742 = (char *)v104;
              v743 = v109;
              uint64_t v111 = (char *)sub_1CC9C93B4(v100, (uint64_t *)&v742);
              sub_1CC9C9B08(v111, v106, v110, 0);
            }
            while (v107 != (void *)v108);
          }
        }
        if (v730)
        {
          unsigned int v112 = (v730 - 1) & ((v104 >> 4) ^ (v104 >> 9));
          unint64_t v113 = (size_t **)v728[4 * v112];
          if (v104 == v113)
          {
LABEL_172:
            uint64_t v56 = (uint64_t)a1;
            uint64_t v114 = a1[6];
            if (v114 && !*(unsigned char *)v104 && !sub_1CD673844(v114, (int *)v104[1] + 6, *v104[1]))
            {
              if (v747) {
                llvm::SymbolTableListTraits<llvm::Instruction>::removeNodeFromList();
              }
              if (!*(void *)(v101 + 8)) {
                goto LABEL_186;
              }
            }
LABEL_187:
            if ((int *)v746 != &v748) {
              free((void *)v746);
            }
            if (*(unsigned char **)__p != &__p[16]) {
              free(*(void **)__p);
            }
            goto LABEL_191;
          }
          int v115 = 1;
          while (v113 != (size_t **)-4096)
          {
            unsigned int v116 = v112 + v115++;
            unsigned int v112 = v116 & (v730 - 1);
            unint64_t v113 = (size_t **)v728[4 * v112];
            if (v104 == v113) {
              goto LABEL_172;
            }
          }
        }
        if (v747) {
          llvm::SymbolTableListTraits<llvm::Instruction>::removeNodeFromList();
        }
        uint64_t v56 = (uint64_t)a1;
        if (!*(void *)(v101 + 8)) {
LABEL_186:
        }
          llvm::SymbolTableListTraits<llvm::Instruction>::removeNodeFromList();
        goto LABEL_187;
      }
    }
  }
LABEL_192:
  if (v714) {
    sub_1CC9C7FDC(v56, v714);
  }
  uint64_t v117 = v707;
  if (v707) {
    sub_1CC9C7FDC(v56, v707);
  }
  if (!*(void *)(v56 + 48))
  {
    if (!v729) {
      goto LABEL_406;
    }
    if (*(void *)(v56 + 40))
    {
      int64_t v118 = *(void **)(v56 + 40);
      unint64_t v746 = 0;
      uint64_t v747 = 0;
      int v748 = 0;
      if (v730)
      {
        uint64_t v164 = 32 * v730;
        int v119 = v728;
        while ((*v119 | 0x1000) == 0xFFFFFFFFFFFFF000)
        {
          v119 += 4;
          v164 -= 32;
          if (!v164) {
            goto LABEL_272;
          }
        }
      }
      else
      {
        int v119 = v728;
      }
      int v120 = &v728[4 * v730];
      if (v119 != v120)
      {
        uint64_t v121 = *v119;
        long long v122 = xmmword_1CFAC4320;
LABEL_203:
        if (!*(unsigned char *)v121)
        {
          uint64_t v123 = *(void *)(v121 + 8);
          size_t v124 = *(void *)v123;
          *(_OWORD *)__p = v122;
          *(void *)&__p[16] = 0;
          long long v718 = v122;
          llvm::MD5::update((int *)__p, (int *)(v123 + 24), v124);
          llvm::MD5::final((int *)__p, (int *)&v742);
          *(void *)__p = v742;
          int v125 = sub_1CD673980((uint64_t)&v746, (uint64_t *)__p);
          sub_1CC95385C(v125 + 1, v121);
          long long v122 = v718;
        }
        while (1)
        {
          v119 += 4;
          if (v119 == v120) {
            break;
          }
          uint64_t v121 = *v119;
          if ((*v119 | 0x1000) != 0xFFFFFFFFFFFFF000)
          {
            if (v119 != v120) {
              goto LABEL_203;
            }
            break;
          }
        }
        int64_t v118 = *(void **)(v56 + 40);
      }
LABEL_272:
      char v165 = (void *)*v118;
      v700 = v118 + 1;
      if ((void *)*v118 != v118 + 1)
      {
        uint64_t v166 = (uint64_t)(a1 + 16);
        do
        {
          uint64_t v167 = (uint64_t *)v165[7];
          size_t v168 = v165[8];
          v703 = v165;
          size_t v715 = v168;
          while (v167 != (uint64_t *)v168)
          {
            v719 = v167;
            uint64_t v169 = *v167;
            int v170 = *(_DWORD *)(*v167 + 8);
            if (v169) {
              BOOL v171 = v170 == 1;
            }
            else {
              BOOL v171 = 0;
            }
            if (v171)
            {
              __int16 v172 = *(void **)(v169 + 104);
              if (v172)
              {
                long long v173 = (_OWORD *)v172[3];
                size_t v708 = v172[4];
                if ((_OWORD *)v708 == v173) {
                  goto LABEL_307;
                }
                do
                {
                  *(_OWORD *)__p = *v173;
                  unint64_t v175 = sub_1CD673980((uint64_t)&v746, (uint64_t *)__p) + 1;
                  unint64_t v174 = *v175;
                  if ((*v175 & 2) != 0)
                  {
                    unint64_t v177 = v174 & 0xFFFFFFFFFFFFFFFCLL;
                    unint64_t v175 = *(unint64_t **)v177;
                    uint64_t v176 = *(void *)v177 + 8 * *(unsigned int *)(v177 + 8);
                  }
                  else
                  {
                    uint64_t v176 = (uint64_t)&v175[v174 > 3];
                  }
                  while (v175 != (unint64_t *)v176)
                  {
                    v742 = (char *)*v175;
                    v743 = *(void **)&__p[8];
                    uint64_t v178 = (void *)sub_1CC9C93B4(v166, (uint64_t *)&v742);
                    uint64_t v179 = v178;
                    uint64_t v181 = (void *)v178[8];
                    unint64_t v180 = v178[9];
                    if ((unint64_t)v181 >= v180)
                    {
                      v183 = (void *)v178[7];
                      uint64_t v184 = v181 - v183;
                      unint64_t v185 = v184 + 1;
                      if ((unint64_t)(v184 + 1) >> 61) {
                        goto LABEL_1032;
                      }
                      uint64_t v186 = v180 - (void)v183;
                      if (v186 >> 2 > v185) {
                        unint64_t v185 = v186 >> 2;
                      }
                      if ((unint64_t)v186 >= 0x7FFFFFFFFFFFFFF8) {
                        unint64_t v187 = 0x1FFFFFFFFFFFFFFFLL;
                      }
                      else {
                        unint64_t v187 = v185;
                      }
                      if (v187)
                      {
                        if (v187 >> 61) {
                          goto LABEL_1033;
                        }
                        uint64_t v188 = (char *)operator new(8 * v187);
                      }
                      else
                      {
                        uint64_t v188 = 0;
                      }
                      uint64_t v189 = &v188[8 * v184];
                      *(void *)uint64_t v189 = v169;
                      v182 = v189 + 8;
                      if (v181 != v183)
                      {
                        do
                        {
                          uint64_t v190 = *--v181;
                          *((void *)v189 - 1) = v190;
                          v189 -= 8;
                        }
                        while (v181 != v183);
                        uint64_t v181 = (void *)v179[7];
                      }
                      v179[7] = v189;
                      v179[8] = v182;
                      v179[9] = &v188[8 * v187];
                      if (v181) {
                        operator delete(v181);
                      }
                    }
                    else
                    {
                      *uint64_t v181 = v169;
                      v182 = v181 + 1;
                    }
                    v179[8] = v182;
                    *((_WORD *)v179 + 12) = 256;
                    ++v175;
                  }
                  ++v173;
                }
                while (v173 != (_OWORD *)v708);
                __int16 v172 = *(void **)(v169 + 104);
                if (v172)
                {
LABEL_307:
                  long long v191 = (_OWORD *)v172[6];
                  size_t v709 = v172[7];
                  if ((_OWORD *)v709 == v191) {
                    goto LABEL_332;
                  }
                  do
                  {
                    *(_OWORD *)__p = *v191;
                    v193 = sub_1CD673980((uint64_t)&v746, (uint64_t *)__p) + 1;
                    unint64_t v192 = *v193;
                    if ((*v193 & 2) != 0)
                    {
                      unint64_t v195 = v192 & 0xFFFFFFFFFFFFFFFCLL;
                      v193 = *(unint64_t **)v195;
                      uint64_t v194 = *(void *)v195 + 8 * *(unsigned int *)(v195 + 8);
                    }
                    else
                    {
                      uint64_t v194 = (uint64_t)&v193[v192 > 3];
                    }
                    while (v193 != (unint64_t *)v194)
                    {
                      v742 = (char *)*v193;
                      v743 = *(void **)&__p[8];
                      long long v196 = (void *)sub_1CC9C93B4(v166, (uint64_t *)&v742);
                      uint64_t v197 = v196;
                      long long v199 = (void *)v196[5];
                      unint64_t v198 = v196[6];
                      if ((unint64_t)v199 >= v198)
                      {
                        uint64_t v201 = (void *)v196[4];
                        uint64_t v202 = v199 - v201;
                        unint64_t v203 = v202 + 1;
                        if ((unint64_t)(v202 + 1) >> 61) {
                          goto LABEL_1032;
                        }
                        uint64_t v204 = v198 - (void)v201;
                        if (v204 >> 2 > v203) {
                          unint64_t v203 = v204 >> 2;
                        }
                        if ((unint64_t)v204 >= 0x7FFFFFFFFFFFFFF8) {
                          unint64_t v205 = 0x1FFFFFFFFFFFFFFFLL;
                        }
                        else {
                          unint64_t v205 = v203;
                        }
                        if (v205)
                        {
                          if (v205 >> 61) {
                            goto LABEL_1033;
                          }
                          v206 = (char *)operator new(8 * v205);
                        }
                        else
                        {
                          v206 = 0;
                        }
                        v207 = &v206[8 * v202];
                        *(void *)v207 = v169;
                        long long v200 = v207 + 8;
                        if (v199 != v201)
                        {
                          do
                          {
                            uint64_t v208 = *--v199;
                            *((void *)v207 - 1) = v208;
                            v207 -= 8;
                          }
                          while (v199 != v201);
                          long long v199 = (void *)v197[4];
                        }
                        v197[4] = v207;
                        v197[5] = v200;
                        v197[6] = &v206[8 * v205];
                        if (v199) {
                          operator delete(v199);
                        }
                      }
                      else
                      {
                        *long long v199 = v169;
                        long long v200 = v199 + 1;
                      }
                      v197[5] = v200;
                      *((unsigned char *)v197 + 24) = 0;
                      ++v193;
                    }
                    ++v191;
                  }
                  while (v191 != (_OWORD *)v709);
                  __int16 v172 = *(void **)(v169 + 104);
                  if (v172)
                  {
LABEL_332:
                    uint64_t v209 = v172[9];
                    size_t v710 = v172[10];
                    if (v710 == v209) {
                      goto LABEL_357;
                    }
                    do
                    {
                      v211 = sub_1CD673980((uint64_t)&v746, (uint64_t *)v209) + 1;
                      unint64_t v210 = *v211;
                      if ((*v211 & 2) != 0)
                      {
                        unint64_t v213 = v210 & 0xFFFFFFFFFFFFFFFCLL;
                        v211 = *(unint64_t **)v213;
                        uint64_t v212 = *(void *)v213 + 8 * *(unsigned int *)(v213 + 8);
                      }
                      else
                      {
                        uint64_t v212 = (uint64_t)&v211[v210 > 3];
                      }
                      while (v211 != (unint64_t *)v212)
                      {
                        uint64_t v214 = *(void *)(v209 + 8);
                        *(void *)__p = *v211;
                        *(void *)&__p[8] = v214;
                        uint64_t v215 = sub_1CC9C93B4(v166, (uint64_t *)__p);
                        v216 = sub_1CC9C9990((uint64_t **)(v215 + 80), *(void **)(v209 + 16), *(void *)(v209 + 24));
                        v217 = v216;
                        v219 = (void *)*((void *)v216 + 8);
                        unint64_t v218 = *((void *)v216 + 9);
                        if ((unint64_t)v219 >= v218)
                        {
                          v221 = (void *)*((void *)v216 + 7);
                          uint64_t v222 = v219 - v221;
                          unint64_t v223 = v222 + 1;
                          if ((unint64_t)(v222 + 1) >> 61) {
                            goto LABEL_1032;
                          }
                          uint64_t v224 = v218 - (void)v221;
                          if (v224 >> 2 > v223) {
                            unint64_t v223 = v224 >> 2;
                          }
                          if ((unint64_t)v224 >= 0x7FFFFFFFFFFFFFF8) {
                            unint64_t v225 = 0x1FFFFFFFFFFFFFFFLL;
                          }
                          else {
                            unint64_t v225 = v223;
                          }
                          if (v225)
                          {
                            if (v225 >> 61) {
                              goto LABEL_1033;
                            }
                            v226 = (char *)operator new(8 * v225);
                          }
                          else
                          {
                            v226 = 0;
                          }
                          v227 = &v226[8 * v222];
                          *(void *)v227 = v169;
                          v220 = v227 + 8;
                          if (v219 != v221)
                          {
                            do
                            {
                              uint64_t v228 = *--v219;
                              *((void *)v227 - 1) = v228;
                              v227 -= 8;
                            }
                            while (v219 != v221);
                            v219 = (void *)*((void *)v217 + 7);
                          }
                          *((void *)v217 + 7) = v227;
                          *((void *)v217 + 8) = v220;
                          *((void *)v217 + 9) = &v226[8 * v225];
                          if (v219) {
                            operator delete(v219);
                          }
                        }
                        else
                        {
                          void *v219 = v169;
                          v220 = v219 + 1;
                        }
                        *((void *)v217 + 8) = v220;
                        *((_WORD *)v217 + 12) = 256;
                        ++v211;
                      }
                      v209 += 40;
                    }
                    while (v209 != v710);
                    __int16 v172 = *(void **)(v169 + 104);
                    if (v172)
                    {
LABEL_357:
                      uint64_t v229 = v172[12];
                      for (size_t i = v172[13]; v229 != i; v229 += 40)
                      {
                        v231 = sub_1CD673980((uint64_t)&v746, (uint64_t *)v229) + 1;
                        unint64_t v230 = *v231;
                        if ((*v231 & 2) != 0)
                        {
                          unint64_t v233 = v230 & 0xFFFFFFFFFFFFFFFCLL;
                          v231 = *(unint64_t **)v233;
                          uint64_t v232 = *(void *)v233 + 8 * *(unsigned int *)(v233 + 8);
                        }
                        else
                        {
                          uint64_t v232 = (uint64_t)&v231[v230 > 3];
                        }
                        while (v231 != (unint64_t *)v232)
                        {
                          uint64_t v234 = *(void *)(v229 + 8);
                          *(void *)__p = *v231;
                          *(void *)&__p[8] = v234;
                          uint64_t v235 = sub_1CC9C93B4(v166, (uint64_t *)__p);
                          v236 = sub_1CC9C9990((uint64_t **)(v235 + 80), *(void **)(v229 + 16), *(void *)(v229 + 24));
                          v237 = v236;
                          v239 = (void *)*((void *)v236 + 5);
                          unint64_t v238 = *((void *)v236 + 6);
                          if ((unint64_t)v239 >= v238)
                          {
                            v241 = (void *)*((void *)v236 + 4);
                            uint64_t v242 = v239 - v241;
                            unint64_t v243 = v242 + 1;
                            if ((unint64_t)(v242 + 1) >> 61) {
                              goto LABEL_1032;
                            }
                            uint64_t v244 = v238 - (void)v241;
                            if (v244 >> 2 > v243) {
                              unint64_t v243 = v244 >> 2;
                            }
                            if ((unint64_t)v244 >= 0x7FFFFFFFFFFFFFF8) {
                              unint64_t v245 = 0x1FFFFFFFFFFFFFFFLL;
                            }
                            else {
                              unint64_t v245 = v243;
                            }
                            if (v245)
                            {
                              if (v245 >> 61) {
                                goto LABEL_1033;
                              }
                              v246 = (char *)operator new(8 * v245);
                            }
                            else
                            {
                              v246 = 0;
                            }
                            v247 = &v246[8 * v242];
                            *(void *)v247 = v169;
                            v240 = v247 + 8;
                            if (v239 != v241)
                            {
                              do
                              {
                                uint64_t v248 = *--v239;
                                *((void *)v247 - 1) = v248;
                                v247 -= 8;
                              }
                              while (v239 != v241);
                              v239 = (void *)*((void *)v237 + 4);
                            }
                            *((void *)v237 + 4) = v247;
                            *((void *)v237 + 5) = v240;
                            *((void *)v237 + 6) = &v246[8 * v245];
                            if (v239) {
                              operator delete(v239);
                            }
                          }
                          else
                          {
                            void *v239 = v169;
                            v240 = v239 + 1;
                          }
                          *((void *)v237 + 5) = v240;
                          v237[24] = 0;
                          ++v231;
                        }
                      }
                    }
                  }
                }
              }
            }
            size_t v168 = v715;
            uint64_t v167 = v719 + 1;
          }
          v249 = v703;
          v250 = (void *)v703[1];
          if (v250)
          {
            do
            {
              v251 = v250;
              v250 = (void *)*v250;
            }
            while (v250);
          }
          else
          {
            do
            {
              v251 = (void *)v249[2];
              BOOL v67 = *v251 == (void)v249;
              v249 = v251;
            }
            while (!v67);
          }
          char v165 = v251;
        }
        while (v251 != v700);
      }
      sub_1CD673D98((uint64_t *)&v746);
      uint64_t v56 = (uint64_t)a1;
    }
    v727[0] = 0;
    v727[1] = 0;
    v726 = v727;
    v252 = *(void **)(v56 + 152);
    v253 = *(void **)(v56 + 160);
    if (v252 == v253)
    {
      char v691 = 0;
LABEL_391:
      if (*(unsigned char *)(v56 + 104))
      {
        uint64_t v254 = (uint64_t)v726;
        if (v726 != v727)
        {
          do
          {
            v600 = *(llvm::Function **)(v254 + 56);
            v601 = (uint64_t ***)(*(uint64_t (**)(void, llvm::Function *))(v56 + 112))(*(void *)(v56 + 120), v600);
            llvm::OptimizationRemark::OptimizationRemark((uint64_t)__p, (uint64_t)"wholeprogramdevirt", (uint64_t)"Devirtualized", 13, v600);
            unint64_t v746 = (unint64_t)"devirtualized ";
            uint64_t v747 = 14;
            sub_1CC59ADEC((uint64_t *)&v739, (uint64_t)&v746);
            char v602 = *(unsigned char *)(v254 + 55);
            if (v602 >= 0) {
              v603 = (void *)(v254 + 32);
            }
            else {
              v603 = *(void **)(v254 + 32);
            }
            if (v602 >= 0) {
              size_t v604 = v602 & 0x7F;
            }
            else {
              size_t v604 = *(void *)(v254 + 40);
            }
            llvm::DiagnosticInfoOptimizationBase::Argument::Argument(__dst, "FunctionName", 0xCuLL, v603, v604);
            v605 = (llvm::DiagnosticInfoOptimizationBase *)sub_1CD3D6290((uint64_t)__p, (long long *)__dst);
            llvm::OptimizationRemarkEmitter::emit(v601, v605);
            if (v725 < 0) {
              operator delete(v724);
            }
            if (v723 < 0) {
              operator delete(__dst[0]);
            }
            *(void *)__p = &unk_1F2616800;
            v606 = (char *)v739;
            if (v740)
            {
              unint64_t v607 = (unint64_t)v740 << 6;
              do
              {
                v608 = (void **)&v606[v607];
                if (v606[v607 - 17] < 0) {
                  operator delete(*(v608 - 5));
                }
                if (*((char *)v608 - 41) < 0) {
                  operator delete(*(v608 - 8));
                }
                v607 -= 64;
              }
              while (v607);
              v606 = (char *)v739;
            }
            if (v606 != (char *)&v741) {
              free(v606);
            }
            v609 = *(char **)(v254 + 8);
            uint64_t v56 = (uint64_t)a1;
            if (v609)
            {
              do
              {
                v610 = (char **)v609;
                v609 = *(char **)v609;
              }
              while (v609);
            }
            else
            {
              do
              {
                v610 = *(char ***)(v254 + 16);
                BOOL v67 = *v610 == (char *)v254;
                uint64_t v254 = (uint64_t)v610;
              }
              while (!v67);
            }
            uint64_t v254 = (uint64_t)v610;
          }
          while (v610 != v727);
        }
      }
      sub_1CC9C91F4((llvm::Value *)v56, v117, v98);
      if ((v691 & 1) == 0 || (v255 = (unint64_t *)v731[0], v731[0] == v731[1]))
      {
LABEL_395:
        uint64_t v256 = *a1 + 8;
        for (uint64_t j = *(void *)(*a1 + 16); j != v256; uint64_t j = *(void *)(j + 8))
        {
          if (j) {
            uint64_t v258 = j - 56;
          }
          else {
            uint64_t v258 = 0;
          }
          if ((*(unsigned char *)(v258 + 23) & 0x20) != 0)
          {
            uint64_t v259 = ***(void ***)v258 + 2480;
            *(void *)__p = v258;
            v260 = sub_1CC608F78(v259, (uint64_t *)__p);
            llvm::MDAttachments::erase((llvm::MDAttachments *)(v260 + 1), 28);
            if (!*((_DWORD *)v260 + 4) && (*(unsigned char *)(v258 + 23) & 0x20) != 0)
            {
              v261 = (int32x2_t *)(***(void ***)v258 + 2480);
              *(void *)__p = v258;
              sub_1CC6035CC(v261, __p);
              *(_DWORD *)(v258 + 20) &= ~0x20000000u;
            }
          }
        }
        sub_1CD4F48E0(v727[0]);
        goto LABEL_406;
      }
      while (1)
      {
        unint64_t v613 = v255[2];
        v611 = (unsigned char *)v255[3];
        v612 = (uint64_t *)(v255 + 2);
        if ((unsigned char *)v613 != v611 || v255[8] != v255[9]) {
          break;
        }
        v255 += 14;
        if (v255 == v731[1]) {
          goto LABEL_395;
        }
      }
      if ((*(_WORD *)(*v255 + 34) & 0x3F) != 0)
      {
        char v614 = (*(_WORD *)(*v255 + 34) & 0x3F) - 1;
      }
      else
      {
        char v614 = llvm::DataLayout::getAlignment((llvm::DataLayout *)(*a1 + 272), *(llvm::Type **)(*v255 + 24), 1);
        unint64_t v613 = v255[2];
        v611 = (unsigned char *)v255[3];
      }
      unint64_t v615 = (unint64_t)&v611[(1 << v614) - v613 - 1] & -(1 << v614);
      if (v615 <= (unint64_t)&v611[-v613])
      {
        if (v615 < (unint64_t)&v611[-v613])
        {
          v611 = (unsigned char *)(v613 + v615);
          v255[3] = v613 + v615;
        }
      }
      else
      {
        sub_1CD674784(v255 + 2, v615 - (void)&v611[-v613]);
        unint64_t v613 = v255[2];
        v611 = (unsigned char *)v255[3];
      }
      unint64_t v616 = (unint64_t)&v611[-v613];
      if ((unint64_t)&v611[-v613] >= 2)
      {
        uint64_t v617 = 0;
        v618 = &v611[~v613];
        do
        {
          uint64_t v619 = *v612;
          char v620 = *(unsigned char *)(*v612 + v617);
          *(unsigned char *)(v619 + v617) = v618[*v612];
          v618[v619] = v620;
          ++v617;
          --v618;
        }
        while (v616 >> 1 != v617);
        unint64_t v613 = v255[2];
        unint64_t v616 = v255[3] - v613;
      }
      v621 = llvm::ArrayType::get((llvm::ArrayType *)(**(void **)*a1 + 1912), (llvm::Type *)v616);
      *(void *)__p = llvm::ConstantDataSequential::getImpl((unsigned char *)v613, (llvm::Type *)v616, v621);
      *(void *)&__p[8] = *(void *)(*v255 - 32);
      v622 = (unsigned char *)v255[8];
      v623 = (llvm::Type *)(v255[9] - (void)v622);
      v624 = llvm::ArrayType::get((llvm::ArrayType *)(**(void **)*a1 + 1912), v623);
      *(void *)&__p[16] = llvm::ConstantDataSequential::getImpl(v622, v623, v624);
      TypeForElements = (llvm::PoisonValue *)llvm::ConstantStruct::getTypeForElements(***(uint64_t ****)__p, (uint64_t)__p, 3u, 0);
      v626 = (llvm::PointerType **)llvm::ConstantStruct::get(TypeForElements, (llvm::Type *)__p, 3);
      v627 = operator new(0x78uLL);
      v628 = (llvm::GlobalObject *)(v627 + 8);
      v627[13] = v627[13] & 0x38000000 | 1;
      *(void *)v627 = 0;
      *((void *)v627 + 1) = 0;
      *((void *)v627 + 2) = 0;
      *((void *)v627 + 3) = v627 + 8;
      uint64_t v629 = *a1;
      v630 = *v626;
      uint64_t v631 = *v255;
      char v632 = *(unsigned char *)(*v255 + 80) & 1;
      LOWORD(v737) = 257;
      llvm::GlobalVariable::GlobalVariable((unint64_t *)v627 + 4, v629, v630, v632, 8, (unint64_t)v626, (const char **)__p, v631, 0, 0, 0);
      v633 = 0;
      size_t v634 = 0;
      v635 = (uint64_t ***)*v255;
      if ((*(unsigned char *)(*v255 + 34) & 0x40) != 0)
      {
        uint64_t v636 = ***v635;
        *(void *)__p = *v255;
        int v637 = *(_DWORD *)(v636 + 2520);
        if (v637)
        {
          uint64_t v638 = *(void *)(v636 + 2504);
          int v639 = v637 - 1;
          unsigned int v640 = v639 & ((v635 >> 4) ^ (v635 >> 9));
          v641 = (uint64_t ****)(v638 + 24 * v640);
          v642 = *v641;
          if (*v641 == v635) {
            goto LABEL_974;
          }
          v677 = 0;
          int v678 = 1;
          while (v642 != (uint64_t ***)-4096)
          {
            if (v677) {
              BOOL v679 = 0;
            }
            else {
              BOOL v679 = v642 == (uint64_t ***)-8192;
            }
            if (v679) {
              v677 = v641;
            }
            unsigned int v680 = v640 + v678++;
            unsigned int v640 = v680 & v639;
            v641 = (uint64_t ****)(v638 + 24 * v640);
            v642 = *v641;
            if (*v641 == v635) {
              goto LABEL_974;
            }
          }
          if (v677) {
            v683 = v677;
          }
          else {
            v683 = v641;
          }
        }
        else
        {
          v683 = 0;
        }
        v641 = (uint64_t ****)sub_1CC5BF31C(v636 + 2504, (uint64_t)__p, (uint64_t *)__p, v683);
        v684 = *(uint64_t ****)__p;
        v641[1] = 0;
        v641[2] = 0;
        *v641 = v684;
LABEL_974:
        v633 = (llvm::GlobalObject *)v641[1];
        size_t v634 = (size_t)v641[2];
      }
      if ((*((unsigned char *)v627 + 66) & 0x40) != 0 || v634)
      {
        if (v634)
        {
          v633 = (llvm::GlobalObject *)llvm::UniqueStringSaver::save(***(void ***)v628 + 2136, v633, v634);
          v644 = v643;
        }
        else
        {
          v644 = 0;
        }
        uint64_t v645 = ***(void ***)v628;
        *(void *)__p = v627 + 8;
        int v646 = *(_DWORD *)(v645 + 2520);
        if (v646)
        {
          uint64_t v647 = *(void *)(v645 + 2504);
          int v648 = v646 - 1;
          unsigned int v649 = v648 & ((v628 >> 4) ^ (v628 >> 9));
          v650 = (llvm::GlobalObject **)(v647 + 24 * v649);
          v651 = *v650;
          if (*v650 == v628) {
            goto LABEL_981;
          }
          v673 = 0;
          int v674 = 1;
          while (v651 != (llvm::GlobalObject *)-4096)
          {
            if (v673) {
              BOOL v675 = 0;
            }
            else {
              BOOL v675 = v651 == (llvm::GlobalObject *)-8192;
            }
            if (v675) {
              v673 = v650;
            }
            unsigned int v676 = v649 + v674++;
            unsigned int v649 = v676 & v648;
            v650 = (llvm::GlobalObject **)(v647 + 24 * v649);
            v651 = *v650;
            if (*v650 == v628) {
              goto LABEL_981;
            }
          }
          if (v673) {
            v681 = v673;
          }
          else {
            v681 = v650;
          }
        }
        else
        {
          v681 = 0;
        }
        v650 = (llvm::GlobalObject **)sub_1CC5BF31C(v645 + 2504, (uint64_t)__p, (uint64_t *)__p, v681);
        v682 = *(llvm::GlobalObject **)__p;
        v650[1] = 0;
        v650[2] = 0;
        *v650 = v682;
LABEL_981:
        v650[1] = v633;
        v650[2] = v644;
        v627[16] = v627[16] & 0xFFBFFFFF | ((v644 != 0) << 22);
      }
      llvm::GlobalObject::setComdat(v628, *(llvm::Comdat **)(*v255 + 48));
      int v652 = ((((*(_WORD *)(*v255 + 34) & 0x3F) << 16) + 16711680) & 0xFF0000) + 0x10000;
      if ((*(_WORD *)(*v255 + 34) & 0x3F) == 0) {
        int v652 = 0;
      }
      v627[16] = v652 | v627[16] & 0xFFC0FFFF;
      llvm::GlobalObject::copyMetadata(v628, (const llvm::GlobalObject *)*v255, *((_DWORD *)v255 + 6) - *((_DWORD *)v255 + 4));
      v654 = **(llvm::PointerType ***)(*v255 - 32);
      int v655 = *(_DWORD *)(*v255 + 32);
      LOWORD(v737) = 257;
      uint64_t v656 = (uint64_t)*v626;
      uint64_t v657 = a1[9];
      v658 = *(llvm::ConstantInt **)v657;
      unsigned int v659 = *(_DWORD *)(v657 + 8);
      LODWORD(v747) = v659 >> 8;
      if (v659 >> 8 >= 0x41) {
        operator new[]();
      }
      unint64_t v746 = 0;
      v661 = (char *)llvm::ConstantInt::get(v658, (llvm::LLVMContext *)&v746, v653);
      if (v747 >= 0x41 && v746) {
        MEMORY[0x1D25D9CB0](v746, 0x1000C8000313F17);
      }
      v742 = v661;
      uint64_t v662 = a1[9];
      v663 = *(llvm::ConstantInt **)v662;
      unint64_t v664 = *(unsigned int *)(v662 + 8);
      LODWORD(v747) = v664 >> 8;
      if (v664 >> 8 > 0x40) {
        operator new[]();
      }
      if (v664 <= 0xFF) {
        LOBYTE(v665) = 0;
      }
      else {
        unint64_t v665 = 0xFFFFFFFFFFFFFFFFLL >> ~(BYTE1(v664) + 63);
      }
      unint64_t v746 = v665 & 1;
      v666 = llvm::ConstantInt::get(v663, (llvm::LLVMContext *)&v746, v660);
      if (v747 >= 0x41 && v746) {
        MEMORY[0x1D25D9CB0](v746, 0x1000C8000313F17);
      }
      v743 = v666;
      unint64_t ElementPtr = llvm::ConstantExpr::getGetElementPtr(v656, (uint64_t *)v628, (uint64_t)&v742, 2, 0, 0, 0);
      v668 = llvm::GlobalAlias::create(v654, 0, v655 & 0xF, (const char **)__p, ElementPtr, *a1);
      v669 = v668;
      int v670 = *(_DWORD *)(*v255 + 32) & 0x30;
      int v671 = *((_DWORD *)v668 + 8);
      unsigned int v672 = v671 & 0xFFFFFFCF | v670;
      *((_DWORD *)v668 + 8) = v672;
      if ((v671 & 0xFu) - 7 < 2)
      {
LABEL_1018:
        *((_DWORD *)v669 + 8) = v672 | 0x4000;
      }
      else if (v670 && (llvm::GlobalValue::hasExternalWeakLinkage((llvm::GlobalValue *)v668) & 1) == 0)
      {
        unsigned int v672 = *((_DWORD *)v669 + 8);
        goto LABEL_1018;
      }
      llvm::Value::takeName((int32x2_t ****)v669, (llvm::Value *)*v255);
      llvm::Value::doRAUW((llvm::ValueAsMetadata *)*v255, (llvm::Value *)v669, (llvm::Value *)1);
      llvm::GlobalVariable::eraseFromParent((llvm::GlobalVariable *)*v255);
    }
    char v691 = 0;
    v693 = *(void **)(v56 + 160);
    while (2)
    {
      v265 = sub_1CD687DFC((uint64_t)&v728, v252);
      uint64_t v266 = *(void *)(v56 + 40);
      if (!v266 || (!*(unsigned char *)*v252 ? (BOOL v267 = v265[3] == 0) : (BOOL v267 = 1), v267))
      {
        v269 = 0;
      }
      else
      {
        v268 = sub_1CD4EFDD8(v266, (int *)(*(void *)(*v252 + 8) + 24), **(void **)(*v252 + 8));
        *(void *)__p = v252 + 1;
        v269 = sub_1CD4F4FFC((uint64_t **)v268 + 5, v252 + 1, (uint64_t)&std::piecewise_construct, (void **)__p) + 40;
        uint64_t v266 = *(void *)(v56 + 40);
      }
      v270 = (void *)v265[1];
      v720 = v265 + 2;
      if (v270 == v265 + 2)
      {
        uint64_t v271 = 0;
LABEL_547:
        if (*(void *)(v56 + 40))
        {
          if (!*(unsigned char *)*v252)
          {
            uint64_t v352 = *(void *)(*v252 + 8);
            size_t v353 = *(void *)v352;
            *(_OWORD *)__p = xmmword_1CFAC4320;
            *(void *)&__p[16] = 0;
            llvm::MD5::update((int *)__p, (int *)(v352 + 24), v353);
            llvm::MD5::final((int *)__p, (int *)&v746);
            v354 = (_OWORD *)v746;
            v355 = (uint64_t *)v252[6];
            v356 = (uint64_t *)v252[7];
            while (v355 != v356)
            {
              uint64_t v357 = *v355++;
              sub_1CD6879A4(v357, (uint64_t)v354);
            }
            v358 = (void *)v252[12];
            if (v358 != v252 + 13)
            {
              do
              {
                v359 = (uint64_t *)v358[11];
                v360 = (uint64_t *)v358[12];
                while (v359 != v360)
                {
                  uint64_t v361 = *v359++;
                  sub_1CD6879A4(v361, (uint64_t)v354);
                }
                v362 = (void *)v358[1];
                if (v362)
                {
                  do
                  {
                    v363 = v362;
                    v362 = (void *)*v362;
                  }
                  while (v362);
                }
                else
                {
                  do
                  {
                    v363 = (void *)v358[2];
                    BOOL v67 = *v363 == (void)v358;
                    v358 = v363;
                  }
                  while (!v67);
                }
                v358 = v363;
              }
              while (v363 != v252 + 13);
            }
          }
        }
        if (v271) {
          operator delete((void *)v271);
        }
        v252 += 15;
        if (v252 == v253) {
          goto LABEL_391;
        }
        continue;
      }
      break;
    }
    v692 = v269;
    uint64_t v271 = 0;
    unint64_t v272 = 0;
    v697 = v252;
    v701 = 0;
    size_t v716 = v252[1];
    uint64_t v694 = v266;
    v704 = (void *)(v266 + 8);
    while (1)
    {
      v273 = *(llvm::GlobalObject **)v270[4];
      if ((*((unsigned char *)v273 + 80) & 1) == 0) {
        goto LABEL_546;
      }
      if (!llvm::GlobalObject::getVCallVisibility(v273)) {
        goto LABEL_546;
      }
      PointerAtOffset = llvm::getPointerAtOffset(*(llvm **)(*(void *)v270[4] - 32), v270[5] + v716, *(void *)v56, *(llvm::Module **)v270[4], v274);
      if (!PointerAtOffset) {
        goto LABEL_546;
      }
      v276 = llvm::Value::stripPointerCasts(PointerAtOffset);
      if (!v276 || *((unsigned char *)v276 + 16) != 0) {
        goto LABEL_546;
      }
      v278 = v276;
      int v279 = *((_DWORD *)v276 + 5);
      size_t v712 = (size_t)(v270 + 4);
      if ((v279 & 0x10000000) == 0)
      {
        unsigned int v288 = v276 >> 4;
        size_t v291 = 0;
        v290 = &byte_1CFBCE98E;
        goto LABEL_440;
      }
      uint64_t v280 = ***(void ***)v276;
      uint64_t v281 = *(void *)(v280 + 152);
      uint64_t v282 = *(unsigned int *)(v280 + 168);
      if (!v282) {
        goto LABEL_438;
      }
      LODWORD(v283) = (v282 - 1) & ((v276 >> 4) ^ (v276 >> 9));
      v284 = (llvm::Value **)(v281 + 16 * v283);
      v285 = *v284;
      if (*v284 != v276) {
        break;
      }
LABEL_439:
      unsigned int v288 = v276 >> 4;
      v289 = v284[1];
      size_t v292 = *(void *)v289;
      v290 = (char *)v289 + 16;
      size_t v291 = v292;
LABEL_440:
      uint64_t v294 = a1[37];
      uint64_t v293 = a1[38];
      while (v294 != v293)
      {
        if (llvm::GlobPattern::match(v294, (uint64_t)v290, v291))
        {
          uint64_t v56 = (uint64_t)a1;
          goto LABEL_546;
        }
        v294 += 96;
      }
      uint64_t v56 = (uint64_t)a1;
      if ((v279 & 0x10000000) == 0) {
        goto LABEL_460;
      }
      uint64_t v295 = ***(void ***)v278;
      uint64_t v296 = *(void *)(v295 + 152);
      uint64_t v297 = *(unsigned int *)(v295 + 168);
      if (!v297) {
        goto LABEL_451;
      }
      LODWORD(v298) = (v297 - 1) & (v288 ^ (v278 >> 9));
      v299 = (llvm::GlobalValue **)(v296 + 16 * v298);
      v300 = *v299;
      if (*v299 != v278)
      {
        int v301 = 1;
        while (v300 != (llvm::GlobalValue *)-4096)
        {
          int v302 = v298 + v301++;
          uint64_t v298 = v302 & (v297 - 1);
          v300 = *(llvm::GlobalValue **)(v296 + 16 * v298);
          if (v300 == v278)
          {
            v299 = (llvm::GlobalValue **)(v296 + 16 * v298);
            goto LABEL_452;
          }
        }
LABEL_451:
        v299 = (llvm::GlobalValue **)(v296 + 16 * v297);
      }
LABEL_452:
      v303 = v299[1];
      if (*(void *)v303 == 18)
      {
        uint64_t v304 = *((void *)v303 + 2);
        uint64_t v305 = *((void *)v303 + 3);
        int v306 = *((unsigned __int16 *)v303 + 16);
        BOOL v307 = v304 == 0x75705F6178635F5FLL && v305 == 0x75747269765F6572;
        if (v307 && v306 == 27745) {
          goto LABEL_498;
        }
      }
LABEL_460:
      if (*((llvm::GlobalValue **)v278 + 9) == (llvm::GlobalValue *)((char *)v278 + 72)
        && (*((unsigned char *)v278 + 34) & 0x80) == 0)
      {
        if (!v694) {
          goto LABEL_479;
        }
        v309 = (char *)sub_1CD4AC784(v278);
        if ((*((unsigned char *)v278 + 23) & 0x10) != 0)
        {
          uint64_t v310 = ***(void ***)v278;
          uint64_t v311 = *(void *)(v310 + 152);
          uint64_t v312 = *(unsigned int *)(v310 + 168);
          if (!v312) {
            goto LABEL_506;
          }
          LODWORD(v313) = (v312 - 1) & (v288 ^ (v278 >> 9));
          v314 = (llvm::GlobalValue **)(v311 + 16 * v313);
          v315 = *v314;
          if (*v314 != v278)
          {
            int v316 = 1;
            while (v315 != (llvm::GlobalValue *)-4096)
            {
              int v317 = v313 + v316++;
              uint64_t v313 = v317 & (v312 - 1);
              v315 = *(llvm::GlobalValue **)(v311 + 16 * v313);
              if (v315 == v278)
              {
                v314 = (llvm::GlobalValue **)(v311 + 16 * v313);
                goto LABEL_507;
              }
            }
LABEL_506:
            v314 = (llvm::GlobalValue **)(v311 + 16 * v312);
          }
LABEL_507:
          v333 = v314[1];
          size_t v336 = *(void *)v333;
          v334 = (int *)((char *)v333 + 16);
          size_t v335 = v336;
        }
        else
        {
          size_t v335 = 0;
          v334 = (int *)&byte_1CFBCE98E;
        }
        *(_OWORD *)__p = xmmword_1CFAC4320;
        *(void *)&__p[16] = 0;
        llvm::MD5::update((int *)__p, v334, v335);
        llvm::MD5::final((int *)__p, (int *)&v746);
        v337 = (void *)*v704;
        if (!*v704) {
          goto LABEL_519;
        }
        v338 = (void *)*v704;
        v339 = v704;
        do
        {
          unint64_t v340 = v338[4];
          BOOL v341 = v340 >= (unint64_t)v309;
          if (v340 >= (unint64_t)v309) {
            v342 = v338;
          }
          else {
            v342 = v338 + 1;
          }
          if (v341) {
            v339 = v338;
          }
          v338 = (void *)*v342;
        }
        while (*v342);
        if (v339 == v704 || v339[4] > (unint64_t)v309) {
LABEL_519:
        }
          v339 = v704;
        uint64_t v343 = *(unsigned __int8 *)(v694 + 133);
        if (v339 == v704) {
          unint64_t v344 = 0;
        }
        else {
          unint64_t v344 = (unint64_t)(v339 + 4);
        }
        unint64_t v345 = v344 & 0xFFFFFFFFFFFFFFF8 | v343;
        if (v345 <= 7 && v309 != (char *)v746)
        {
          if (!v337) {
            goto LABEL_538;
          }
          v347 = v704;
          do
          {
            unint64_t v348 = v337[4];
            BOOL v349 = v348 >= v746;
            if (v348 >= v746) {
              v350 = v337;
            }
            else {
              v350 = v337 + 1;
            }
            if (v349) {
              v347 = v337;
            }
            v337 = (void *)*v350;
          }
          while (*v350);
          if (v347 == v704 || v347[4] > v746) {
LABEL_538:
          }
            v347 = v704;
          unint64_t v351 = (unint64_t)(v347 + 4);
          if (v347 == v704) {
            unint64_t v351 = 0;
          }
          unint64_t v345 = v351 & 0xFFFFFFFFFFFFFFF8 | v343;
        }
        if ((sub_1CC9CDB14(v345) & 1) == 0) {
          goto LABEL_479;
        }
        goto LABEL_498;
      }
      v318 = (void **)*((void *)v278 + 10);
      if (v318) {
        v319 = v318 - 3;
      }
      else {
        v319 = 0;
      }
      v320 = v319[5];
      if (v320) {
        v321 = v320 - 3;
      }
      else {
        v321 = 0;
      }
      if (*((unsigned __int8 *)v321 + 16) - 29 >= 0xB) {
        v321 = 0;
      }
      if (*((unsigned char *)v321 + 16) != 35)
      {
LABEL_479:
        char v322 = *(unsigned char *)(*((void *)v278 + 5) + 272);
        if (v272 >= (unint64_t)v701)
        {
          uint64_t v323 = (uint64_t)(v272 - v271) >> 5;
          unint64_t v324 = v323 + 1;
          if ((unint64_t)(v323 + 1) >> 59) {
            goto LABEL_1032;
          }
          if ((uint64_t)&v701[-v271] >> 4 > v324) {
            unint64_t v324 = (uint64_t)&v701[-v271] >> 4;
          }
          if ((unint64_t)&v701[-v271] >= 0x7FFFFFFFFFFFFFE0) {
            unint64_t v325 = 0x7FFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v325 = v324;
          }
          if (v325)
          {
            if (v325 >> 59) {
              goto LABEL_1033;
            }
            v326 = (char *)operator new(32 * v325);
          }
          else
          {
            v326 = 0;
          }
          v327 = &v326[32 * v323];
          *(void *)v327 = v278;
          *((void *)v327 + 1) = v712;
          v327[24] = v322;
          v327[25] = 0;
          if (v272 == v271)
          {
            v328 = &v326[32 * v323];
          }
          else
          {
            v329 = &v326[32 * v323];
            do
            {
              long long v330 = *(_OWORD *)(v272 - 32);
              v328 = v329 - 32;
              *(_OWORD *)(v329 - 22) = *(_OWORD *)(v272 - 22);
              *((_OWORD *)v329 - 2) = v330;
              v272 -= 32;
              v329 -= 32;
            }
            while (v272 != v271);
          }
          v701 = &v326[32 * v325];
          unint64_t v272 = (unint64_t)(v327 + 32);
          if (v271) {
            operator delete((void *)v271);
          }
          uint64_t v271 = (uint64_t)v328;
        }
        else
        {
          *(void *)unint64_t v272 = v278;
          *(void *)(v272 + 8) = v712;
          *(unsigned char *)(v272 + 24) = v322;
          *(unsigned char *)(v272 + 25) = 0;
          v272 += 32;
        }
      }
LABEL_498:
      v331 = (void *)v270[1];
      if (v331)
      {
        do
        {
          v332 = v331;
          v331 = (void *)*v331;
        }
        while (v331);
      }
      else
      {
        do
        {
          v332 = (void *)v270[2];
          BOOL v67 = *v332 == (void)v270;
          v270 = v332;
        }
        while (!v67);
      }
      v270 = v332;
      if (v332 == v720)
      {
        if (v271 == v272)
        {
          uint64_t v271 = v272;
          goto LABEL_546;
        }
        uint64_t v364 = 0;
        uint64_t v365 = a1[5];
        unint64_t v366 = (uint64_t)(v272 - v271) >> 5;
        v367 = v697 + 2;
        v368 = *(unsigned int **)v271;
        unint64_t v369 = (v272 - v271) & 0xFFFFFFFFFFFFFFE0;
        unint64_t v721 = v271 + v369;
        do
        {
          if (v368 != *(unsigned int **)(v271 + v364)) {
            goto LABEL_577;
          }
          v364 += 32;
        }
        while (v369 != v364);
        if (*((unsigned char *)a1 + 104) || (byte_1EBD0C080 & 1) != 0 || byte_1EA61F098) {
          *(unsigned char *)(v271 + 25) = 1;
        }
        LOBYTE(v742) = 0;
        sub_1CC9C9E74((uint64_t)a1, (uint64_t)v367, (llvm::Value *)v368, (uint64_t)&v742);
        if (!(_BYTE)v742)
        {
          v368 = *(unsigned int **)v271;
LABEL_577:
          uint64_t v370 = **(void **)(*((void *)v368 + 3) + 16);
          unint64_t v371 = *(unsigned int *)(v370 + 8);
          if (v370) {
            BOOL v372 = *(_DWORD *)(v370 + 8) == 13;
          }
          else {
            BOOL v372 = 0;
          }
          if (!v372 || v371 >> 8 > 0x40)
          {
LABEL_583:
            char v373 = 0;
LABEL_584:
            v374 = (unsigned char *)*v697;
            unint64_t v375 = v697[1];
            v376 = (char *)(*(void *)v56 + 216);
            __int16 v750 = 260;
            unint64_t v746 = (unint64_t)v376;
            llvm::Triple::Triple((llvm::Triple *)__p, (const llvm::Twine *)&v746);
            if (v736 != 42 || v366 > dword_1EBCE4F38) {
              goto LABEL_676;
            }
            if (*((unsigned char *)v697 + 40))
            {
              v403 = (void *)v697[12];
              if (v403 == v697 + 13) {
                goto LABEL_676;
              }
              char v404 = 0;
              do
              {
                BOOL v405 = *((unsigned char *)v403 + 80) == 0;
                if (!*((unsigned char *)v403 + 80)) {
                  goto LABEL_589;
                }
                v406 = (void *)v403[1];
                if (v406)
                {
                  do
                  {
                    v407 = v406;
                    v406 = (void *)*v406;
                  }
                  while (v406);
                }
                else
                {
                  do
                  {
                    v407 = (void *)v403[2];
                    BOOL v67 = *v407 == (void)v403;
                    v403 = v407;
                  }
                  while (!v67);
                }
                v404 |= v405;
                v403 = v407;
              }
              while (v407 != v697 + 13);
              if ((v404 & 1) == 0)
              {
LABEL_676:
                if ((__p[23] & 0x80000000) != 0) {
                  operator delete(*(void **)__p);
                }
                v691 |= v373;
                goto LABEL_767;
              }
            }
LABEL_589:
            v378 = (uint64_t **)(***(void ***)v56 + 1576);
            unint64_t v746 = *(void *)(v56 + 64);
            v379 = (llvm::PointerType *)llvm::FunctionType::get(v378, (uint64_t)&v746, 1, 1);
            unint64_t v380 = *(void *)v56;
            v381 = (llvm::Type *)*(unsigned int *)(*(void *)v56 + 284);
            if (*v374)
            {
              unint64_t v746 = (unint64_t)"branch_funnel";
              __int16 v750 = 259;
              v408 = (char *)operator new(0x80uLL);
              v384 = (uint64_t *)(v408 + 8);
              *((_DWORD *)v408 + 7) = *((_DWORD *)v408 + 7) & 0x38000000 | 0x40000000;
              *(void *)v408 = 0;
              llvm::Function::Function((unint64_t *)v408 + 1, v379, 7, v381, (const char **)&v746, v380);
            }
            else
            {
              sub_1CC9CB9F8((uint64_t)&v742, (uint64_t)v374, v375, 0, 0, "branch_funnel", 0xDuLL);
              __int16 v750 = 260;
              unint64_t v746 = (unint64_t)&v742;
              unint64_t v382 = *(void *)v56;
              v383 = (char *)operator new(0x80uLL);
              v384 = (uint64_t *)(v383 + 8);
              *((_DWORD *)v383 + 7) = *((_DWORD *)v383 + 7) & 0x38000000 | 0x40000000;
              *(void *)v383 = 0;
              llvm::Function::Function((unint64_t *)v383 + 1, v379, 0, v381, (const char **)&v746, v382);
              if (v745 < 0) {
                operator delete(v742);
              }
              int v385 = *((_DWORD *)v383 + 10);
              unsigned int v386 = v385 & 0xFFFFFFCF | 0x10;
              *((_DWORD *)v383 + 10) = v386;
              if ((v385 & 0xFu) - 7 < 2)
              {
LABEL_595:
                *((_DWORD *)v383 + 10) = v386 | 0x4000;
              }
              else if ((llvm::GlobalValue::hasExternalWeakLinkage((llvm::GlobalValue *)v384) & 1) == 0)
              {
                unsigned int v386 = *((_DWORD *)v383 + 10);
                goto LABEL_595;
              }
            }
            v384[14] = llvm::AttributeList::addAttributeAtIndex(v384 + 14, *(uint64_t **)*v384, 1, 18);
            if (*((_WORD *)v384 + 9)) {
              llvm::Function::BuildLazyArguments((llvm::Function *)v384);
            }
            uint64_t v409 = v384[11];
            v410 = (char *)operator new(8uLL);
            *(void *)v410 = v409;
            v411 = v410 + 8;
            uint64_t v412 = v271;
            v413 = (uint64_t *)(v410 + 8);
            while (2)
            {
              uint64_t v414 = sub_1CC9CE290((void *)v56, *(uint64_t ****)(v412 + 8));
              uint64_t v415 = v414;
              if (v413 < (uint64_t *)v411)
              {
                uint64_t *v413 = v414;
                v416 = (char *)(v413 + 1);
LABEL_657:
                uint64_t v423 = *(void *)v412;
                if (v416 >= v411)
                {
                  uint64_t v424 = (v416 - v410) >> 3;
                  unint64_t v425 = v424 + 1;
                  if ((unint64_t)(v424 + 1) >> 61) {
                    goto LABEL_1032;
                  }
                  if ((v411 - v410) >> 2 > v425) {
                    unint64_t v425 = (v411 - v410) >> 2;
                  }
                  if ((unint64_t)(v411 - v410) >= 0x7FFFFFFFFFFFFFF8) {
                    unint64_t v426 = 0x1FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v426 = v425;
                  }
                  if (v426)
                  {
                    if (v426 >> 61) {
                      goto LABEL_1033;
                    }
                    v427 = (char *)operator new(8 * v426);
                  }
                  else
                  {
                    v427 = 0;
                  }
                  v428 = &v427[8 * v424];
                  v411 = &v427[8 * v426];
                  *(void *)v428 = v423;
                  v413 = (uint64_t *)(v428 + 8);
                  if (v416 == v410) {
                    goto LABEL_672;
                  }
                  do
                  {
                    uint64_t v429 = *((void *)v416 - 1);
                    v416 -= 8;
                    *((void *)v428 - 1) = v429;
                    v428 -= 8;
                  }
                  while (v416 != v410);
                  if (v410) {
LABEL_672:
                  }
                    operator delete(v410);
                  v410 = v428;
                }
                else
                {
                  *(void *)v416 = v423;
                  v413 = (uint64_t *)(v416 + 8);
                }
                v412 += 32;
                if (v412 == v721)
                {
                  __int16 v750 = 257;
                  operator new();
                }
                continue;
              }
              break;
            }
            uint64_t v417 = ((char *)v413 - v410) >> 3;
            unint64_t v418 = v417 + 1;
            if ((unint64_t)(v417 + 1) >> 61) {
              goto LABEL_1032;
            }
            if ((v411 - v410) >> 2 > v418) {
              unint64_t v418 = (v411 - v410) >> 2;
            }
            if ((unint64_t)(v411 - v410) >= 0x7FFFFFFFFFFFFFF8) {
              unint64_t v419 = 0x1FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v419 = v418;
            }
            if (v419)
            {
              if (v419 >> 61) {
                goto LABEL_1033;
              }
              v420 = (char *)operator new(8 * v419);
            }
            else
            {
              v420 = 0;
            }
            v421 = (uint64_t *)&v420[8 * v417];
            v411 = &v420[8 * v419];
            uint64_t *v421 = v415;
            v416 = (char *)(v421 + 1);
            if (v413 == (uint64_t *)v410)
            {
              v410 = (char *)v413;
            }
            else
            {
              do
              {
                uint64_t v422 = *--v413;
                *--v421 = v422;
              }
              while (v413 != (uint64_t *)v410);
              if (!v410) {
                goto LABEL_656;
              }
            }
            operator delete(v410);
LABEL_656:
            v410 = (char *)v421;
            goto LABEL_657;
          }
          uint64_t v396 = 0;
          unint64_t v687 = v697[1];
          v688 = (char *)*v697;
          unint64_t v690 = v371 >> 8;
          uint64_t v705 = 32 * v366;
          do
          {
            uint64_t v397 = *(void *)(v271 + v396);
            if (v397) {
              BOOL v398 = *(unsigned char *)(v397 + 16) == 3;
            }
            else {
              BOOL v398 = 0;
            }
            if (v398)
            {
              if ((*(_DWORD *)(v397 + 20) & 0x7FFFFFF) == 0) {
                goto LABEL_583;
              }
            }
            else if (!*(unsigned char *)(v397 + 16) {
                   && *(void *)(v397 + 72) == v397 + 72
            }
                   && (*(unsigned char *)(v397 + 34) & 0x80) == 0)
            {
              goto LABEL_583;
            }
            v399 = (llvm::Function *)((uint64_t (*)(void, void))a1[1])(a1[2], *(void *)(v271 + v396));
            if (llvm::computeFunctionBodyMemoryAccess((llvm *)v397, v399, v400) != 4) {
              goto LABEL_583;
            }
            uint64_t v401 = *(void *)(v271 + v396);
            if (!*(void *)(v401 + 96)) {
              goto LABEL_583;
            }
            if (*(_WORD *)(v401 + 18)) {
              llvm::Function::BuildLazyArguments(*(llvm::Function **)(v271 + v396));
            }
            if (*(void *)(*(void *)(v401 + 88) + 8)
              || **(void **)(*(void *)(*(void *)(v271 + v396) + 24) + 16) != v370)
            {
              goto LABEL_583;
            }
            v396 += 32;
          }
          while (v705 != v396);
          v685 = (unsigned char *)v271;
          uint64_t v689 = (uint64_t)(v272 - v271) >> 5;
          v402 = (void *)v697[12];
          if (v402 == v697 + 13)
          {
            char v373 = 1;
            uint64_t v56 = (uint64_t)a1;
            unint64_t v366 = (uint64_t)(v272 - v271) >> 5;
            goto LABEL_584;
          }
          v686 = (unsigned char *)(v271 + 25);
          uint64_t v56 = (uint64_t)a1;
          while (2)
          {
            uint64_t v507 = v402[4];
            size_t v713 = v402[5];
            uint64_t v508 = (uint64_t)(v713 - v507) >> 3;
            uint64_t v509 = v271;
LABEL_796:
            if (*(void *)(*(void *)v509 + 96) != v508 + 1) {
              goto LABEL_861;
            }
            sub_1CC92BD28((uint64_t)__p, *(void *)v56 + 272, 0);
            unint64_t v746 = (unint64_t)&v748;
            uint64_t v747 = 0x200000000;
            NullValue = llvm::Constant::getNullValue(*(llvm::Constant **)(*(void *)(*(void *)(*(void *)v509 + 24) + 16) + 8), v510, v511);
            if (v747 >= (unint64_t)HIDWORD(v747)) {
              llvm::SmallVectorBase<unsigned int>::grow_pod();
            }
            *(void *)(v746 + 8 * v747) = NullValue;
            LODWORD(v747) = v747 + 1;
            if (v713 == v507)
            {
LABEL_816:
              v742 = 0;
              if (!llvm::Evaluator::EvaluateFunction((uint64_t)__p, *(llvm::Function **)v509, (uint64_t *)&v742, &v746)|| v742[16] != 16)
              {
                goto LABEL_821;
              }
              v524 = v742 + 24;
              if (*((_DWORD *)v742 + 8) >= 0x41u) {
                v524 = (void *)*v524;
              }
              int v525 = 0;
              *(void *)(v509 + 16) = *v524;
            }
            else
            {
              uint64_t v515 = 0;
              unsigned int v516 = 2;
              while (1)
              {
                uint64_t v517 = *(void *)(*(void *)(*(void *)(*(void *)v509 + 24) + 16) + 8 * v516);
                unsigned int v518 = *(_DWORD *)(v517 + 8);
                if (!v517 || *(_DWORD *)(v517 + 8) != 13) {
                  break;
                }
                uint64_t v520 = *(void *)(v507 + 8 * v515);
                v521 = *(llvm::ConstantInt **)v517;
                LODWORD(v743) = *(_DWORD *)(v517 + 8) >> 8;
                if (v518 >> 8 > 0x40) {
                  operator new[]();
                }
                unint64_t v522 = 0xFFFFFFFFFFFFFFFFLL >> ~(BYTE1(v518) + 63);
                if (v518 <= 0xFF) {
                  unint64_t v522 = 0;
                }
                v742 = (char *)(v522 & v520);
                v523 = llvm::ConstantInt::get(v521, (llvm::LLVMContext *)&v742, v513);
                uint64_t v56 = (uint64_t)a1;
                if (v743 >= 0x41 && v742) {
                  MEMORY[0x1D25D9CB0](v742, 0x1000C8000313F17);
                }
                if (v747 >= (unint64_t)HIDWORD(v747)) {
                  llvm::SmallVectorBase<unsigned int>::grow_pod();
                }
                *(void *)(v746 + 8 * v747) = v523;
                uint64_t v515 = v516 - 1;
                LODWORD(v747) = v747 + 1;
                ++v516;
                if (v508 == v515) {
                  goto LABEL_816;
                }
              }
LABEL_821:
              int v525 = 1;
            }
            if ((int *)v746 != &v748) {
              free((void *)v746);
            }
            sub_1CC92C014((uint64_t)__p, v512, v513);
            if (v525) {
              goto LABEL_861;
            }
            v509 += 32;
            if (v509 == v721)
            {
              if (v692)
              {
                *(void *)__p = v402 + 4;
                v526 = sub_1CD4F50FC((uint64_t)(v692 + 32), (unint64_t **)v402 + 4, (uint64_t)&std::piecewise_construct, (uint64_t *)__p)+ 7;
              }
              else
              {
                v526 = 0;
              }
              uint64_t v527 = 0;
              uint64_t v528 = *(void *)(v271 + 16);
              while (2)
              {
                if (*(void *)(v271 + v527 + 16) != v528)
                {
                  uint64_t v539 = v402[4];
                  uint64_t v540 = (v402[5] - v539) >> 3;
                  unint64_t v746 = v271;
                  uint64_t v747 = v689;
                  v742 = v688;
                  v743 = (void *)v687;
                  v734[0] = v539;
                  v734[1] = v540;
                  v733 = v526;
                  *(void *)__p = &v746;
                  *(void *)&__p[8] = v56;
                  *(void *)&__p[16] = v402 + 7;
                  v736 = &v733;
                  v737 = (void **)&v742;
                  v738 = v734;
                  if (v690 == 1
                    && ((sub_1CC9CE0B8((uint64_t ******)__p, 1u) & 1) != 0
                     || (sub_1CC9CE0B8((uint64_t ******)__p, 0) & 1) != 0))
                  {
                    goto LABEL_861;
                  }
                  unint64_t LowestOffset = llvm::wholeprogramdevirt::findLowestOffset(v271, v689, 0, v690);
                  unint64_t v542 = llvm::wholeprogramdevirt::findLowestOffset(v271, v689, 1, v690);
                  uint64_t v543 = 0;
                  unint64_t v544 = 0;
                  unint64_t v545 = 0;
                  do
                  {
                    v546 = **(void ***)(v271 + v543 + 8);
                    uint64_t v547 = *(void *)(*(void *)(v271 + v543 + 8) + 8);
                    int64_t v548 = ((LowestOffset + 7) >> 3) + v546[2] + ~(v547 + v546[3]);
                    v544 += v548 & ~(v548 >> 63);
                    uint64_t v549 = ~(v546[1] + v546[9]);
                    v545 += (v547 + ((v542 + 7) >> 3) + v546[8] + v549) & ~((uint64_t)(v547
                                                                                    + ((v542 + 7) >> 3)
                                                                                    + v546[8]
                                                                                    + v549) >> 63);
                    v543 += 32;
                  }
                  while (v705 != v543);
                  unint64_t v550 = v545 >= v544 ? v544 : v545;
                  if (v550 > 0x80) {
                    goto LABEL_861;
                  }
                  unint64_t v746 = 0;
                  v742 = 0;
                  if (v545 >= v544) {
                    llvm::wholeprogramdevirt::setBeforeReturnValues(v685, v689, LowestOffset, v690, &v746, (unint64_t *)&v742);
                  }
                  else {
                    llvm::wholeprogramdevirt::setAfterReturnValues(v685, v689, v542, v690, &v746, (unint64_t *)&v742);
                  }
                  if (*((unsigned char *)a1 + 104) || (byte_1EBD0C080 & 1) != 0 || byte_1EA61F098)
                  {
                    v560 = v686;
                    uint64_t v561 = v705;
                    do
                    {
                      unsigned char *v560 = 1;
                      v560 += 32;
                      v561 -= 32;
                    }
                    while (v561);
                  }
                  if (*((unsigned char *)v402 + 81) || v402[11] != v402[12])
                  {
                    *(_DWORD *)v526 = 3;
                    sub_1CC9CDEF8((uint64_t)a1, (uint64_t)v688, v687, (unint64_t *)v402[4], (uint64_t)(v402[5] - v402[4]) >> 3, "byte", 4uLL, v746, (unsigned int *)v526 + 4);
                    sub_1CC9CDEF8((uint64_t)a1, (uint64_t)v688, v687, (unint64_t *)v402[4], (uint64_t)(v402[5] - v402[4]) >> 3, "bit", 3uLL, 1 << (char)v742, (unsigned int *)v526 + 5);
                  }
                  uint64_t v562 = a1[9];
                  v563 = *(llvm::ConstantInt **)v562;
                  unint64_t v564 = *(unsigned int *)(v562 + 8);
                  *(_DWORD *)&__p[8] = v564 >> 8;
                  if (v564 >> 8 > 0x40) {
                    operator new[]();
                  }
                  if (v564 <= 0xFF) {
                    unint64_t v565 = 0;
                  }
                  else {
                    unint64_t v565 = 0xFFFFFFFFFFFFFFFFLL >> ~(BYTE1(v564) + 63);
                  }
                  *(void *)__p = v565 & v746;
                  v567 = (const char *)llvm::ConstantInt::get(v563, (llvm::LLVMContext *)__p, v551);
                  if (*(_DWORD *)&__p[8] >= 0x41u && *(void *)__p) {
                    MEMORY[0x1D25D9CB0](*(void *)__p, 0x1000C8000313F17);
                  }
                  uint64_t v568 = a1[7];
                  v569 = *(llvm::ConstantInt **)v568;
                  unint64_t v570 = *(unsigned int *)(v568 + 8);
                  *(_DWORD *)&__p[8] = v570 >> 8;
                  if (v570 >> 8 > 0x40) {
                    operator new[]();
                  }
                  if (v570 <= 0xFF) {
                    unint64_t v571 = 0;
                  }
                  else {
                    unint64_t v571 = 0xFFFFFFFFFFFFFFFFLL >> ~(BYTE1(v570) + 63);
                  }
                  *(void *)__p = v571 & (1 << (char)v742);
                  v572 = llvm::ConstantInt::get(v569, (llvm::LLVMContext *)__p, v566);
                  if (*(_DWORD *)&__p[8] >= 0x41u && *(void *)__p) {
                    MEMORY[0x1D25D9CB0](*(void *)__p, 0x1000C8000313F17);
                  }
                  v573 = *(uint64_t ****)v685;
                  if ((*(unsigned char *)(*(void *)v685 + 23) & 0x10) != 0)
                  {
                    uint64_t v574 = ***v573;
                    uint64_t v575 = *(void *)(v574 + 152);
                    uint64_t v576 = *(unsigned int *)(v574 + 168);
                    if (!v576) {
                      goto LABEL_900;
                    }
                    LODWORD(v577) = (v576 - 1) & ((v573 >> 4) ^ (v573 >> 9));
                    v578 = (uint64_t ****)(v575 + 16 * v577);
                    v579 = *v578;
                    if (*v578 != v573)
                    {
                      int v580 = 1;
                      while (v579 != (uint64_t ***)-4096)
                      {
                        int v581 = v577 + v580++;
                        uint64_t v577 = v581 & (v576 - 1);
                        v579 = *(uint64_t ****)(v575 + 16 * v577);
                        if (v579 == v573)
                        {
                          v578 = (uint64_t ****)(v575 + 16 * v577);
                          goto LABEL_901;
                        }
                      }
LABEL_900:
                      v578 = (uint64_t ****)(v575 + 16 * v576);
                    }
LABEL_901:
                    v582 = v578[1];
                    size_t v585 = (size_t)*v582;
                    v583 = (char *)(v582 + 2);
                    size_t v584 = v585;
                  }
                  else
                  {
                    size_t v584 = 0;
                    v583 = &byte_1CFBCE98E;
                  }
                  uint64_t v56 = (uint64_t)a1;
                  sub_1CC9CB07C((uint64_t)a1, (long long **)v402 + 7, v583, v584, v567, (uint64_t)v572);
                  uint64_t v271 = (uint64_t)v685;
                  goto LABEL_861;
                }
                v527 += 32;
                if (v705 != v527) {
                  continue;
                }
                break;
              }
              if (*((unsigned char *)v402 + 81)) {
                BOOL v529 = 0;
              }
              else {
                BOOL v529 = v402[11] == v402[12];
              }
              if (!v529)
              {
                *(_DWORD *)v526 = 1;
                v526[1] = v528;
              }
              v530 = *(unsigned int **)v271;
              if ((*(unsigned char *)(*(void *)v271 + 23) & 0x10) != 0)
              {
                uint64_t v531 = ***(void ***)v530;
                uint64_t v532 = *(void *)(v531 + 152);
                uint64_t v533 = *(unsigned int *)(v531 + 168);
                if (!v533) {
                  goto LABEL_856;
                }
                LODWORD(v534) = (v533 - 1) & ((v530 >> 4) ^ (v530 >> 9));
                v535 = (unsigned int **)(v532 + 16 * v534);
                v536 = *v535;
                if (*v535 != v530)
                {
                  int v537 = 1;
                  while (v536 != (unsigned int *)-4096)
                  {
                    int v538 = v534 + v537++;
                    uint64_t v534 = v538 & (v533 - 1);
                    v536 = *(unsigned int **)(v532 + 16 * v534);
                    if (v536 == v530)
                    {
                      v535 = (unsigned int **)(v532 + 16 * v534);
                      goto LABEL_857;
                    }
                  }
LABEL_856:
                  v535 = (unsigned int **)(v532 + 16 * v533);
                }
LABEL_857:
                v552 = (size_t *)v535[1];
                size_t v555 = *v552;
                v553 = (const llvm::APInt *)(v552 + 2);
                size_t v554 = v555;
              }
              else
              {
                size_t v554 = 0;
                v553 = (const llvm::APInt *)&byte_1CFBCE98E;
              }
              sub_1CC9C9FE8(v56, (long long **)v402 + 7, v553, v554, v528);
              if (*(unsigned char *)(v56 + 104) || (byte_1EBD0C080 & 1) != 0 || byte_1EA61F098)
              {
                v556 = v686;
                uint64_t v557 = v705;
                do
                {
                  unsigned char *v556 = 1;
                  v556 += 32;
                  v557 -= 32;
                }
                while (v557);
              }
LABEL_861:
              v558 = (void *)v402[1];
              if (v558)
              {
                do
                {
                  v559 = v558;
                  v558 = (void *)*v558;
                }
                while (v558);
              }
              else
              {
                do
                {
                  v559 = (void *)v402[2];
                  BOOL v67 = *v559 == (void)v402;
                  v402 = v559;
                }
                while (!v67);
              }
              v402 = v559;
              if (v559 == v697 + 13)
              {
                char v373 = 1;
                unint64_t v366 = v689;
                goto LABEL_584;
              }
              continue;
            }
            goto LABEL_796;
          }
        }
        unsigned int v387 = v368 >> 4;
        if ((v368[8] & 0xF) - 7 <= 1)
        {
          if ((*((unsigned char *)v368 + 23) & 0x10) != 0)
          {
            uint64_t v388 = ***(void ***)v368;
            uint64_t v389 = *(void *)(v388 + 152);
            uint64_t v390 = *(unsigned int *)(v388 + 168);
            if (!v390) {
              goto LABEL_679;
            }
            LODWORD(v391) = (v390 - 1) & (v387 ^ (v368 >> 9));
            v392 = (unsigned int **)(v389 + 16 * v391);
            v393 = *v392;
            if (*v392 != v368)
            {
              int v394 = 1;
              while (v393 != (unsigned int *)-4096)
              {
                int v395 = v391 + v394++;
                uint64_t v391 = v395 & (v390 - 1);
                v393 = *(unsigned int **)(v389 + 16 * v391);
                if (v393 == v368)
                {
                  v392 = (unsigned int **)(v389 + 16 * v391);
                  goto LABEL_680;
                }
              }
LABEL_679:
              v392 = (unsigned int **)(v389 + 16 * v390);
            }
LABEL_680:
            v430 = v392[1];
            uint64_t v433 = *(void *)v430;
            v432 = (char *)(v430 + 4);
            uint64_t v431 = v433;
          }
          else
          {
            uint64_t v431 = 0;
            v432 = &byte_1CFBCE98E;
          }
          LOWORD(v737) = 773;
          *(void *)__p = v432;
          *(void *)&__p[8] = v431;
          *(void *)&__p[16] = ".llvm.merged";
          llvm::Twine::str((llvm::Twine *)__p, &v746);
          v434 = (size_t **)*((void *)v368 + 6);
          if (v434)
          {
            if ((*((unsigned char *)v368 + 23) & 0x10) != 0)
            {
              uint64_t v435 = ***(void ***)v368;
              uint64_t v436 = *(void *)(v435 + 152);
              uint64_t v437 = *(unsigned int *)(v435 + 168);
              if (!v437) {
                goto LABEL_689;
              }
              LODWORD(v438) = (v437 - 1) & (v387 ^ (v368 >> 9));
              v439 = (unsigned int **)(v436 + 16 * v438);
              v440 = *v439;
              if (*v439 != v368)
              {
                int v441 = 1;
                while (v440 != (unsigned int *)-4096)
                {
                  int v442 = v438 + v441++;
                  uint64_t v438 = v442 & (v437 - 1);
                  v440 = *(unsigned int **)(v436 + 16 * v438);
                  if (v440 == v368)
                  {
                    v439 = (unsigned int **)(v436 + 16 * v438);
                    goto LABEL_690;
                  }
                }
LABEL_689:
                v439 = (unsigned int **)(v436 + 16 * v437);
              }
LABEL_690:
              v443 = v439[1];
              uint64_t v446 = *(void *)v443;
              v444 = (char *)(v443 + 4);
              uint64_t v445 = v446;
            }
            else
            {
              uint64_t v445 = 0;
              v444 = &byte_1CFBCE98E;
            }
            size_t v447 = **v434;
            if (v447 == v445 && (!v447 || !memcmp(*v434 + 9, v444, v447)))
            {
              if (v749 >= 0) {
                v448 = (unsigned __int8 *)&v746;
              }
              else {
                v448 = (unsigned __int8 *)v746;
              }
              if (v749 >= 0) {
                size_t v449 = v749 & 0x7F;
              }
              else {
                size_t v449 = v747;
              }
              uint64_t inserted = llvm::Module::getOrInsertComdat(*a1, v448, v449);
              *((_DWORD *)inserted + 2) = *((_DWORD *)v434 + 2);
              uint64_t v451 = *a1 + 24;
              uint64_t v452 = *(void *)(*a1 + 32);
              uint64_t v453 = *a1 + 8;
              uint64_t v454 = *(void *)(*a1 + 16);
              *(void *)__p = v452;
              *(void *)&__p[8] = v454;
              *(void *)&__p[16] = v451;
              v736 = (void *)v453;
              while (v452 != v451 || v454 != v453 || *(void *)&__p[16] != v451 || v736 != (void *)v453)
              {
                uint64_t v456 = 0;
                do
                {
                  v457 = (llvm::GlobalObject *)(*(uint64_t (**)(unsigned char *))((char *)&off_1F262B358 + v456))(__p);
                  if (v457) {
                    BOOL v458 = 1;
                  }
                  else {
                    BOOL v458 = v456 == 16;
                  }
                  v456 += 16;
                }
                while (!v458);
                if (*((size_t ***)v457 + 6) == v434) {
                  llvm::GlobalObject::setComdat(v457, (llvm::Comdat *)inserted);
                }
                uint64_t v459 = 0;
                do
                {
                  if ((*(uint64_t (**)(unsigned char *))((char *)&off_1F262B378 + v459))(__p)) {
                    break;
                  }
                  BOOL v67 = v459 == 16;
                  v459 += 16;
                }
                while (!v67);
                uint64_t v452 = *(void *)__p;
                uint64_t v454 = *(void *)&__p[8];
              }
              uint64_t v56 = (uint64_t)a1;
              unsigned int v387 = v368 >> 4;
            }
          }
          unsigned int v460 = v368[8];
          unsigned int v461 = v460 & 0xFFFFFFF0;
          v368[8] = v460 & 0xFFFFFFF0;
          if ((v460 & 0x30) != 0)
          {
            int hasExternalWeakLinkage = llvm::GlobalValue::hasExternalWeakLinkage((llvm::GlobalValue *)v368);
            unsigned int v461 = v368[8];
            if (!hasExternalWeakLinkage) {
              v461 |= 0x4000u;
            }
          }
          unsigned int v463 = v461 & 0xFFFFFFCF | 0x10;
          v368[8] = v463;
          if ((v461 & 0xF) - 7 < 2)
          {
LABEL_727:
            v368[8] = v463 | 0x4000;
          }
          else if ((llvm::GlobalValue::hasExternalWeakLinkage((llvm::GlobalValue *)v368) & 1) == 0)
          {
            unsigned int v463 = v368[8];
            goto LABEL_727;
          }
          LOWORD(v737) = 260;
          *(void *)__p = &v746;
          llvm::Value::setNameImpl((llvm::Value *)v368, (const char **)__p);
          if (*((unsigned char *)v368 + 16))
          {
LABEL_729:
            if (v749 < 0) {
              operator delete((void *)v746);
            }
            goto LABEL_731;
          }
          if ((*((unsigned char *)v368 + 23) & 0x10) == 0) {
            goto LABEL_927;
          }
          uint64_t v586 = ***(void ***)v368;
          uint64_t v587 = *(void *)(v586 + 152);
          uint64_t v588 = *(unsigned int *)(v586 + 168);
          if (!v588) {
            goto LABEL_919;
          }
          LODWORD(v589) = (v588 - 1) & (v387 ^ (v368 >> 9));
          v590 = (unsigned int **)(v587 + 16 * v589);
          v591 = *v590;
          if (*v590 != v368)
          {
            int v592 = 1;
            while (v591 != (unsigned int *)-4096)
            {
              int v593 = v589 + v592++;
              uint64_t v589 = v593 & (v588 - 1);
              v591 = *(unsigned int **)(v587 + 16 * v589);
              if (v591 == v368)
              {
                v590 = (unsigned int **)(v587 + 16 * v589);
                goto LABEL_920;
              }
            }
LABEL_919:
            v590 = (unsigned int **)(v587 + 16 * v588);
          }
LABEL_920:
          v594 = v590[1];
          unint64_t v597 = *(void *)v594;
          v595 = v594 + 4;
          unint64_t v596 = v597;
          if (v597 >= 5 && (*(_DWORD *)v595 == *(_DWORD *)"llvm." ? (BOOL v598 = v595[4] == aLlvm_1[4]) : (BOOL v598 = 0), v598))
          {
            v368[8] |= 0x2000u;
            unsigned int v599 = llvm::Function::lookupIntrinsicID(v595, v596);
          }
          else
          {
LABEL_927:
            unsigned int v599 = 0;
            v368[8] &= ~0x2000u;
          }
          v368[9] = v599;
          uint64_t v56 = (uint64_t)a1;
          goto LABEL_729;
        }
LABEL_731:
        unint64_t v464 = sub_1CD4AC784((llvm::GlobalValue *)v368);
        v465 = (void *)(v365 + 8);
        v466 = *(void **)(v365 + 8);
        if (!v466) {
          goto LABEL_742;
        }
        v467 = (void *)(v365 + 8);
        do
        {
          unint64_t v468 = v466[4];
          BOOL v469 = v468 >= v464;
          if (v468 >= v464) {
            v470 = v466;
          }
          else {
            v470 = v466 + 1;
          }
          if (v469) {
            v467 = v466;
          }
          v466 = (void *)*v470;
        }
        while (*v470);
        if (v467 == v465 || v467[4] > v464) {
LABEL_742:
        }
          v467 = (void *)(v365 + 8);
        if (v467 == v465) {
          uint64_t v471 = 0;
        }
        else {
          uint64_t v471 = (uint64_t)(v467 + 4);
        }
        *(void *)__p = v471 & 0xFFFFFFFFFFFFFFF8 | *(unsigned __int8 *)(v365 + 133);
        if (*(void *)__p >= 8uLL) {
          sub_1CC9CDB6C(v367, (uint64_t *)__p);
        }
        *(_DWORD *)v692 = 1;
        if ((*((unsigned char *)v368 + 23) & 0x10) == 0)
        {
          size_t v481 = 0;
          __p[23] = 0;
          v484 = __p;
          goto LABEL_764;
        }
        uint64_t v472 = ***(void ***)v368;
        uint64_t v473 = *(void *)(v472 + 152);
        uint64_t v474 = *(unsigned int *)(v472 + 168);
        if (!v474) {
          goto LABEL_755;
        }
        LODWORD(v475) = (v474 - 1) & (v387 ^ (v368 >> 9));
        v476 = (unsigned int **)(v473 + 16 * v475);
        v477 = *v476;
        if (*v476 != v368)
        {
          int v478 = 1;
          while (v477 != (unsigned int *)-4096)
          {
            int v479 = v475 + v478++;
            uint64_t v475 = v479 & (v474 - 1);
            v477 = *(unsigned int **)(v473 + 16 * v475);
            if (v477 == v368)
            {
              v476 = (unsigned int **)(v473 + 16 * v475);
              goto LABEL_756;
            }
          }
LABEL_755:
          v476 = (unsigned int **)(v473 + 16 * v474);
        }
LABEL_756:
        v480 = (unint64_t *)v476[1];
        unint64_t v483 = *v480;
        v482 = v480 + 2;
        size_t v481 = v483;
        if (v483 > 0x7FFFFFFFFFFFFFF7) {
          goto LABEL_1032;
        }
        if (v481 >= 0x17)
        {
          uint64_t v485 = (v481 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v481 | 7) != 0x17) {
            uint64_t v485 = v481 | 7;
          }
          uint64_t v486 = v485 + 1;
          v484 = operator new(v485 + 1);
          unint64_t v487 = v486 | 0x8000000000000000;
          uint64_t v56 = (uint64_t)a1;
          *(void *)&__p[8] = v481;
          *(void *)&__p[16] = v487;
          *(void *)__p = v484;
        }
        else
        {
          __p[23] = v481;
          v484 = __p;
          if (!v481) {
            goto LABEL_764;
          }
        }
        memmove(v484, v482, v481);
LABEL_764:
        v484[v481] = 0;
        v488 = (void **)(v692 + 8);
        if (v692[31] < 0) {
          operator delete(*v488);
        }
        *(_OWORD *)v488 = *(_OWORD *)__p;
        *((void *)v692 + 3) = *(void *)&__p[16];
LABEL_767:
        if (!*(unsigned char *)(v56 + 104) && (byte_1EBD0C080 & 1) == 0 && !byte_1EA61F098)
        {
LABEL_546:
          v252 = v697;
          v253 = v693;
          goto LABEL_547;
        }
        v489 = (unsigned char *)v271;
        while (2)
        {
          if (!v489[25])
          {
LABEL_772:
            v489 += 32;
            if (v489 == (unsigned char *)v272) {
              goto LABEL_546;
            }
            continue;
          }
          break;
        }
        v490 = *(uint64_t ****)v489;
        if ((*(unsigned char *)(*(void *)v489 + 23) & 0x10) != 0)
        {
          uint64_t v491 = ***v490;
          uint64_t v492 = *(void *)(v491 + 152);
          uint64_t v493 = *(unsigned int *)(v491 + 168);
          if (!v493) {
            goto LABEL_781;
          }
          LODWORD(v494) = (v493 - 1) & ((v490 >> 4) ^ (v490 >> 9));
          v495 = (uint64_t ****)(v492 + 16 * v494);
          v496 = *v495;
          if (*v495 != v490)
          {
            int v497 = 1;
            while (v496 != (uint64_t ***)-4096)
            {
              int v498 = v494 + v497++;
              uint64_t v494 = v498 & (v493 - 1);
              v496 = *(uint64_t ****)(v492 + 16 * v494);
              if (v496 == v490)
              {
                v495 = (uint64_t ****)(v492 + 16 * v494);
                goto LABEL_782;
              }
            }
LABEL_781:
            v495 = (uint64_t ****)(v492 + 16 * v493);
          }
LABEL_782:
          v499 = (unint64_t *)v495[1];
          unint64_t v502 = *v499;
          v501 = v499 + 2;
          size_t v500 = v502;
          if (v502 > 0x7FFFFFFFFFFFFFF7) {
            goto LABEL_1032;
          }
          if (v500 >= 0x17)
          {
            uint64_t v504 = (v500 & 0xFFFFFFFFFFFFFFF8) + 8;
            if ((v500 | 7) != 0x17) {
              uint64_t v504 = v500 | 7;
            }
            uint64_t v505 = v504 + 1;
            v503 = operator new(v504 + 1);
            unint64_t v506 = v505 | 0x8000000000000000;
            uint64_t v56 = (uint64_t)a1;
            *(void *)&__p[8] = v500;
            *(void *)&__p[16] = v506;
            *(void *)__p = v503;
          }
          else
          {
            __p[23] = v500;
            v503 = __p;
            if (!v500)
            {
LABEL_790:
              v503[v500] = 0;
              unint64_t v746 = (unint64_t)__p;
              *((void *)sub_1CD6880EC((uint64_t)&v726, (uint64_t)__p, (_OWORD **)&v746) + 7) = v490;
              if ((__p[23] & 0x80000000) != 0) {
                operator delete(*(void **)__p);
              }
              goto LABEL_772;
            }
          }
          memmove(v503, v501, v500);
          goto LABEL_790;
        }
        size_t v500 = 0;
        __p[23] = 0;
        v503 = __p;
        goto LABEL_790;
      }
    }
    int v286 = 1;
    while (v285 != (llvm::Value *)-4096)
    {
      int v287 = v283 + v286++;
      uint64_t v283 = v287 & (v282 - 1);
      v285 = *(llvm::Value **)(v281 + 16 * v283);
      if (v285 == v276)
      {
        v284 = (llvm::Value **)(v281 + 16 * v283);
        goto LABEL_439;
      }
    }
LABEL_438:
    v284 = (llvm::Value **)(v281 + 16 * v282);
    goto LABEL_439;
  }
  uint64_t v126 = *(void *)(v56 + 152);
  uint64_t v127 = *(void *)(v56 + 160);
  while (v126 != v127)
  {
    uint64_t v128 = *(unsigned char **)v126;
    if (!**(unsigned char **)v126)
    {
      unint64_t v129 = *(void *)(v126 + 8);
      v130 = sub_1CD673844(*(void *)(v56 + 48), (int *)(*((void *)v128 + 1) + 24), **((void **)v128 + 1));
      if (v130)
      {
        unint64_t v133 = (void *)v130[6];
        v131 = v130 + 6;
        unint64_t v132 = v133;
        if (v133)
        {
          BOOL v134 = v131;
          do
          {
            unint64_t v135 = v132[4];
            BOOL v136 = v135 >= v129;
            if (v135 >= v129) {
              uint64_t v137 = v132;
            }
            else {
              uint64_t v137 = v132 + 1;
            }
            if (v136) {
              BOOL v134 = v132;
            }
            unint64_t v132 = (void *)*v137;
          }
          while (*v137);
          if (v134 != v131 && v129 >= v134[4])
          {
            if (*((_DWORD *)v134 + 10) == 1)
            {
              char v154 = *((unsigned char *)v134 + 71);
              if (v154 >= 0) {
                int v155 = (unsigned __int8 *)(v134 + 6);
              }
              else {
                int v155 = (unsigned __int8 *)v134[6];
              }
              if (v154 >= 0) {
                uint64_t v156 = (const char *)(v154 & 0x7F);
              }
              else {
                uint64_t v156 = (const char *)v134[7];
              }
              sub_1CD577C30(*(void *)v56, v155, v156, 0, (uint64_t **)(***(void ***)v56 + 1576));
              __p[0] = 0;
              sub_1CC9C9E74(v56, v126 + 16, v157, (uint64_t)__p);
            }
            uint64_t v138 = *(long long ***)(v126 + 96);
            if (v138 != (long long **)(v126 + 104))
            {
              do
              {
                int v139 = (unint64_t *)v138[4];
                char v140 = (unint64_t *)v138[5];
                char v141 = sub_1CD687D4C((uint64_t)(v134 + 9), v139, v140);
                if (v134 + 10 != v141)
                {
                  char v142 = v141;
                  int v143 = *((_DWORD *)v141 + 14);
                  switch(v143)
                  {
                    case 3:
                      uint64_t v145 = (const char *)sub_1CC9CAA74(a1, (uint64_t)v128, v129, v139, v140 - v139, "byte", 4uLL, (llvm::Constant *)a1[9], *((_DWORD *)v141 + 18));
                      int v146 = sub_1CC9CAA74(a1, (uint64_t)v128, v129, (unint64_t *)v138[4], ((char *)v138[5] - (char *)v138[4]) >> 3, "bit", 3uLL, (llvm::Constant *)a1[7], *((_DWORD *)v142 + 19));
                      sub_1CC9CB07C((uint64_t)a1, v138 + 7, "", 0, v145, (uint64_t)v146);
                      break;
                    case 2:
                      uint64_t v144 = sub_1CC9CA304((uint64_t)a1, (uint64_t)v128, v129, v139, v140 - v139, "unique_member", 0xDuLL);
                      sub_1CC9CA3CC((uint64_t)a1, (uint64_t)(v138 + 7), "", 0, v142[8] != 0, (uint64_t)v144);
                      break;
                    case 1:
                      sub_1CC9C9FE8((uint64_t)a1, v138 + 7, (const llvm::APInt *)"", 0, v141[8]);
                      break;
                  }
                }
                uint64_t v147 = v138[1];
                if (v147)
                {
                  do
                  {
                    uint64_t v148 = (long long **)v147;
                    uint64_t v147 = *(long long **)v147;
                  }
                  while (v147);
                }
                else
                {
                  do
                  {
                    uint64_t v148 = (long long **)v138[2];
                    BOOL v67 = *v148 == (long long *)v138;
                    uint64_t v138 = v148;
                  }
                  while (!v67);
                }
                uint64_t v138 = v148;
              }
              while (v148 != (long long **)(v126 + 104));
            }
            uint64_t v56 = (uint64_t)a1;
            if (*((_DWORD *)v134 + 10) == 2)
            {
              uint64_t v149 = *a1;
              sub_1CC9CB9F8((uint64_t)__p, (uint64_t)v128, v129, 0, 0, "branch_funnel", 0xDuLL);
              if (__p[23] >= 0) {
                uint64_t v150 = __p;
              }
              else {
                uint64_t v150 = *(unsigned __int8 **)__p;
              }
              if (__p[23] >= 0) {
                uint64_t v151 = (const char *)(__p[23] & 0x7F);
              }
              else {
                uint64_t v151 = *(const char **)&__p[8];
              }
              sub_1CD577C30(v149, v150, v151, 0, (uint64_t **)(**(void **)*a1 + 1576));
              uint64_t v153 = v152;
              if ((__p[23] & 0x80000000) != 0) {
                operator delete(*(void **)__p);
              }
              __p[0] = 0;
              sub_1CC9CBC54((uint64_t)a1, v126 + 16, v153, (uint64_t)__p);
            }
          }
        }
      }
    }
    v126 += 120;
  }
  sub_1CC9C91F4((llvm::Value *)v56, v117, v98);
  uint64_t v158 = *(void *)v56 + 8;
  for (uint64_t k = *(void *)(*(void *)v56 + 16); k != v158; uint64_t k = *(void *)(k + 8))
  {
    if (k) {
      uint64_t v160 = k - 56;
    }
    else {
      uint64_t v160 = 0;
    }
    if ((*(unsigned char *)(v160 + 23) & 0x20) != 0)
    {
      uint64_t v161 = ***(void ***)v160 + 2480;
      *(void *)__p = v160;
      v162 = sub_1CC608F78(v161, (uint64_t *)__p);
      llvm::MDAttachments::erase((llvm::MDAttachments *)(v162 + 1), 28);
      if (!*((_DWORD *)v162 + 4) && (*(unsigned char *)(v160 + 23) & 0x20) != 0)
      {
        unsigned int v163 = (int32x2_t *)(***(void ***)v160 + 2480);
        *(void *)__p = v160;
        sub_1CC6035CC(v163, __p);
        *(_DWORD *)(v160 + 20) &= ~0x20000000u;
      }
    }
  }
LABEL_406:
  sub_1CD6881A8((uint64_t *)&v728);
  v262 = (char *)v731[0];
  if (v731[0])
  {
    v263 = (char *)v731[1];
    v264 = v731[0];
    if (v731[1] != v731[0])
    {
      do
      {
        sub_1CD468254((uint64_t)(v263 - 48));
        sub_1CD468254((uint64_t)(v263 - 96));
        v263 -= 112;
      }
      while (v263 != v262);
      v264 = v731[0];
    }
    v731[1] = v262;
    operator delete(v264);
  }
  return 1;
}

uint64_t sub_1CC9C5BAC(uint64_t a1)
{
  unsigned int v10 = (void **)(a1 + 296);
  sub_1CC9C7E0C(&v10);
  sub_1CD40B1BC(*(void **)(a1 + 280));
  uint64_t v2 = *(void **)(a1 + 184);
  if (v2 != *(void **)(a1 + 176)) {
    free(v2);
  }
  uint64_t v3 = *(void *)(a1 + 152);
  if (v3)
  {
    uint64_t v4 = *(void *)(a1 + 160);
    uint64_t v5 = *(void **)(a1 + 152);
    if (v4 != v3)
    {
      do
      {
        sub_1CC9C7E80(*(void **)(v4 - 16));
        size_t v6 = *(void **)(v4 - 48);
        if (v6)
        {
          *(void *)(v4 - 40) = v6;
          operator delete(v6);
        }
        uint64_t v7 = *(void **)(v4 - 72);
        if (v7)
        {
          *(void *)(v4 - 64) = v7;
          operator delete(v7);
        }
        uint64_t v8 = *(void **)(v4 - 104);
        if (v8)
        {
          *(void *)(v4 - 96) = v8;
          operator delete(v8);
        }
        v4 -= 120;
      }
      while (v4 != v3);
      uint64_t v5 = *(void **)(a1 + 152);
    }
    *(void *)(a1 + 160) = v3;
    operator delete(v5);
  }
  MEMORY[0x1D25D9CD0](*(void *)(a1 + 128), 8);
  return a1;
}

void llvm::updateVCallVisibilityInModule(uint64_t a1, int a2, uint64_t a3)
{
  if (byte_1EBD08FF0) {
    a2 = 1;
  }
  if (a2 == 1 && byte_1EBD090B0 == 0)
  {
    uint64_t v5 = a1 + 8;
    uint64_t v6 = *(void *)(a1 + 16);
    if (v6 != a1 + 8)
    {
      while (1)
      {
        if (v6) {
          uint64_t v8 = (llvm::GlobalObject *)(v6 - 56);
        }
        else {
          uint64_t v8 = 0;
        }
        if ((*((unsigned char *)v8 + 23) & 0x20) == 0) {
          goto LABEL_30;
        }
        uint64_t v9 = ***(void ***)v8;
        uint64_t v32 = v8;
        int v10 = *(_DWORD *)(v9 + 2496);
        if (!v10) {
          break;
        }
        uint64_t v11 = *(void *)(v9 + 2480);
        int v12 = v10 - 1;
        unsigned int v13 = v12 & ((v8 >> 4) ^ (v8 >> 9));
        int v14 = (llvm::GlobalObject **)(v11 + 40 * v13);
        uint64_t v15 = *v14;
        if (*v14 != v8)
        {
          uint64_t v16 = 0;
          int v17 = 1;
          while (v15 != (llvm::GlobalObject *)-4096)
          {
            if (v16) {
              BOOL v18 = 0;
            }
            else {
              BOOL v18 = v15 == (llvm::GlobalObject *)-8192;
            }
            if (v18) {
              uint64_t v16 = v14;
            }
            unsigned int v19 = v13 + v17++;
            unsigned int v13 = v19 & v12;
            int v14 = (llvm::GlobalObject **)(v11 + 40 * v13);
            uint64_t v15 = *v14;
            if (*v14 == v8) {
              goto LABEL_24;
            }
          }
          if (v16) {
            unsigned int v23 = v16;
          }
          else {
            unsigned int v23 = v14;
          }
          goto LABEL_35;
        }
LABEL_24:
        uint64_t v20 = *((unsigned int *)v14 + 4);
        if (!v20) {
          goto LABEL_30;
        }
        uint64_t v21 = (void *)((char *)v14[1] + 8);
        uint64_t v22 = 16 * v20;
        while (*((_DWORD *)v21 - 2) != 19)
        {
          v21 += 2;
          v22 -= 16;
          if (!v22) {
            goto LABEL_30;
          }
        }
        if (!*v21 || llvm::GlobalObject::getVCallVisibility(v8)) {
          goto LABEL_30;
        }
        uint64_t v25 = sub_1CD4AC784(v8);
        int v26 = *(_DWORD *)(a3 + 16);
        if (!v26) {
          goto LABEL_44;
        }
        int v27 = v26 - 1;
        unsigned int v28 = v27 & (37 * v25);
        uint64_t v29 = *(void *)(*(void *)a3 + 8 * v28);
        if (v25 != v29)
        {
          int v30 = 1;
          while (v29 != -1)
          {
            unsigned int v31 = v28 + v30++;
            unsigned int v28 = v31 & v27;
            uint64_t v29 = *(void *)(*(void *)a3 + 8 * v28);
            if (v25 == v29) {
              goto LABEL_30;
            }
          }
LABEL_44:
          llvm::GlobalObject::setVCallVisibilityMetadata(v8, 1u);
        }
LABEL_30:
        uint64_t v6 = *(void *)(v6 + 8);
        if (v6 == v5) {
          return;
        }
      }
      unsigned int v23 = 0;
LABEL_35:
      int v14 = (llvm::GlobalObject **)sub_1CC609054(v9 + 2480, (uint64_t)&v32, (uint64_t *)&v32, v23);
      uint64_t v24 = (uint64_t)v32;
      v14[4] = 0;
      v14[3] = 0;
      llvm::PointerType *v14 = (llvm::GlobalObject *)v24;
      v14[1] = (llvm::GlobalObject *)(v14 + 3);
      v14[2] = (llvm::GlobalObject *)0x100000000;
      goto LABEL_24;
    }
  }
}

void *llvm::updateVCallVisibilityInIndex(void *result, int a2, uint64_t a3)
{
  if (byte_1EBD08FF0) {
    a2 = 1;
  }
  BOOL v4 = a2 == 1 && byte_1EBD090B0 == 0;
  if (v4)
  {
    uint64_t v6 = (void *)*result++;
    uint64_t v5 = v6;
    if (v6 != result)
    {
      while (1)
      {
        int v7 = *(_DWORD *)(a3 + 16);
        if (!v7) {
          goto LABEL_23;
        }
        uint64_t v8 = v5[4];
        int v9 = v7 - 1;
        unsigned int v10 = (37 * v8) & v9;
        uint64_t v11 = *(void *)(*(void *)a3 + 8 * v10);
        if (v8 != v11) {
          break;
        }
LABEL_12:
        int v12 = (void *)v5[1];
        if (v12)
        {
          do
          {
            unsigned int v13 = v12;
            int v12 = (void *)*v12;
          }
          while (v12);
        }
        else
        {
          do
          {
            unsigned int v13 = (void *)v5[2];
            BOOL v4 = *v13 == (void)v5;
            uint64_t v5 = v13;
          }
          while (!v4);
        }
        uint64_t v5 = v13;
        if (v13 == result) {
          return result;
        }
      }
      int v14 = 1;
      while (v11 != -1)
      {
        unsigned int v15 = v10 + v14++;
        unsigned int v10 = v15 & v9;
        uint64_t v11 = *(void *)(*(void *)a3 + 8 * v10);
        if (v8 == v11) {
          goto LABEL_12;
        }
      }
LABEL_23:
      uint64_t v16 = (uint64_t *)v5[7];
      int v17 = (uint64_t *)v5[8];
      while (v16 != v17)
      {
        uint64_t v18 = *v16;
        if (*v16) {
          BOOL v19 = *(_DWORD *)(*v16 + 8) == 2;
        }
        else {
          BOOL v19 = 0;
        }
        if (v19 && (*(unsigned char *)(v18 + 72) & 0x18) == 0) {
          *(unsigned char *)(v18 + 72) = *(unsigned char *)(v18 + 72) & 0xE7 | 8;
        }
        ++v16;
      }
      goto LABEL_12;
    }
  }
  return result;
}

uint64_t llvm::runWholeProgramDevirtOnIndex(uint64_t a1, uint64_t **a2, uint64_t **a3)
{
  uint64_t v338 = *MEMORY[0x1E4F143B8];
  v318[0] = 0;
  v318[1] = 0;
  int v319 = 0;
  *(_OWORD *)v320 = 0u;
  long long v321 = 0u;
  long long v322 = 0u;
  sub_1CC9C7B7C((uint64_t *)&v321 + 1);
  uint64_t v3 = (void *)a1;
  if (!*(void *)(a1 + 96)) {
    goto LABEL_397;
  }
  v329[0] = 0;
  v329[1] = 0;
  unsigned int v330 = 0;
  BOOL v4 = *(void **)(a1 + 80);
  if (v4 == (void *)(a1 + 88)) {
    goto LABEL_55;
  }
  do
  {
    char v5 = *((unsigned char *)v4 + 55);
    int v6 = v5;
    if (v5 >= 0) {
      int v7 = (int *)(v4 + 4);
    }
    else {
      int v7 = (int *)v4[4];
    }
    size_t v8 = v5 & 0x7F;
    if (v6 >= 0) {
      size_t v9 = v8;
    }
    else {
      size_t v9 = v4[5];
    }
    long long v334 = xmmword_1CFAC4320;
    std::string::size_type v335 = 0;
    llvm::MD5::update((int *)&v334, v7, v9);
    llvm::MD5::final((int *)&v334, (int *)&__dst);
    std::string::size_type v10 = __dst.__r_.__value_.__r.__words[0];
    *(void *)&long long v334 = __dst.__r_.__value_.__r.__words[0];
    if (v330)
    {
      uint64_t v11 = (v330 - 1) & (37 * LODWORD(__dst.__r_.__value_.__l.__data_));
      int v12 = (void *)(v329[0] + 32 * v11);
      uint64_t v13 = *v12;
      if (__dst.__r_.__value_.__r.__words[0] == *v12) {
        goto LABEL_22;
      }
      int v14 = 0;
      int v15 = 1;
      while (v13 != -1)
      {
        if (v14) {
          BOOL v16 = 0;
        }
        else {
          BOOL v16 = v13 == -2;
        }
        if (v16) {
          int v14 = v12;
        }
        int v17 = v11 + v15++;
        uint64_t v11 = v17 & (v330 - 1);
        int v12 = (void *)(v329[0] + 32 * v11);
        uint64_t v13 = *v12;
        if (__dst.__r_.__value_.__r.__words[0] == *v12) {
          goto LABEL_22;
        }
      }
      if (v14) {
        uint64_t v18 = v14;
      }
      else {
        uint64_t v18 = v12;
      }
    }
    else
    {
      uint64_t v18 = 0;
    }
    int v12 = sub_1CC9CE970((uint64_t)v329, (uint64_t *)&v334, v18);
    *int v12 = v10;
    v12[1] = 0;
    v12[2] = 0;
    v12[3] = 0;
LABEL_22:
    char v19 = *((unsigned char *)v4 + 55);
    BOOL v20 = v19 < 0;
    if (v19 >= 0) {
      uint64_t v21 = v4 + 4;
    }
    else {
      uint64_t v21 = (void *)v4[4];
    }
    uint64_t v22 = v19 & 0x7F;
    if (v20) {
      uint64_t v23 = v4[5];
    }
    else {
      uint64_t v23 = v22;
    }
    uint64_t v25 = (char *)v12[2];
    unint64_t v24 = v12[3];
    if ((unint64_t)v25 >= v24)
    {
      int v27 = (char *)v12[1];
      uint64_t v28 = (v25 - v27) >> 4;
      unint64_t v29 = v28 + 1;
      if ((unint64_t)(v28 + 1) >> 60) {
LABEL_409:
      }
        abort();
      uint64_t v30 = v24 - (void)v27;
      if (v30 >> 3 > v29) {
        unint64_t v29 = v30 >> 3;
      }
      if ((unint64_t)v30 >= 0x7FFFFFFFFFFFFFF0) {
        unint64_t v31 = 0xFFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v31 = v29;
      }
      if (v31)
      {
        if (v31 >> 60) {
LABEL_410:
        }
          sub_1CB833614();
        uint64_t v32 = (char *)operator new(16 * v31);
      }
      else
      {
        uint64_t v32 = 0;
      }
      size_t v33 = &v32[16 * v28];
      *(void *)size_t v33 = v21;
      *((void *)v33 + 1) = v23;
      uint64_t v34 = v33;
      if (v25 != v27)
      {
        do
        {
          *((_OWORD *)v34 - 1) = *((_OWORD *)v25 - 1);
          v34 -= 16;
          v25 -= 16;
        }
        while (v25 != v27);
        uint64_t v25 = (char *)v12[1];
      }
      int v26 = v33 + 16;
      v12[1] = v34;
      v12[2] = v33 + 16;
      v12[3] = &v32[16 * v31];
      if (v25) {
        operator delete(v25);
      }
    }
    else
    {
      *(void *)uint64_t v25 = v21;
      *((void *)v25 + 1) = v23;
      int v26 = v25 + 16;
    }
    v12[2] = v26;
    int v35 = (void *)v4[1];
    if (v35)
    {
      do
      {
        unsigned int v36 = v35;
        int v35 = (void *)*v35;
      }
      while (v35);
    }
    else
    {
      do
      {
        unsigned int v36 = (void *)v4[2];
        BOOL v16 = *v36 == (void)v4;
        BOOL v4 = v36;
      }
      while (!v16);
    }
    BOOL v4 = v36;
  }
  while (v36 != (void *)(a1 + 88));
  uint64_t v3 = (void *)a1;
LABEL_55:
  int v39 = (void *)*v3;
  uint64_t v37 = v3 + 1;
  uint64_t v38 = v39;
  if (v39 != v37)
  {
    uint64_t v297 = v37;
    do
    {
      int v40 = (uint64_t *)v38[7];
      uint64_t v41 = (uint64_t *)v38[8];
      v299 = v38;
      v303 = v41;
      while (v40 != v41)
      {
        uint64_t v304 = v40;
        uint64_t v42 = *v40;
        int v43 = *(_DWORD *)(*v40 + 8);
        if (v42) {
          BOOL v44 = v43 == 1;
        }
        else {
          BOOL v44 = 0;
        }
        if (v44)
        {
          uint64_t v45 = *(void **)(v42 + 104);
          if (v45)
          {
            size_t v46 = (_OWORD *)v45[3];
            int v306 = (_OWORD *)v45[4];
            if (v306 == v46) {
              goto LABEL_88;
            }
            do
            {
              v309 = v46;
              *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = *v46;
              uint64_t v47 = sub_1CC9CEC88((uint64_t)v329, (uint64_t *)&__dst);
              unsigned int v49 = (long long *)v47[1];
              int v48 = (long long *)v47[2];
              if (v49 != v48)
              {
                std::string::size_type size = __dst.__r_.__value_.__l.__size_;
                do
                {
                  long long v334 = *v49;
                  std::string::size_type v335 = size;
                  uint64_t v51 = (void *)sub_1CC9CE4B8((uint64_t)v318, &v334);
                  int v52 = v51;
                  uint64_t v54 = (void *)v51[8];
                  unint64_t v53 = v51[9];
                  if ((unint64_t)v54 >= v53)
                  {
                    uint64_t v56 = (void *)v51[7];
                    uint64_t v57 = v54 - v56;
                    unint64_t v58 = v57 + 1;
                    if ((unint64_t)(v57 + 1) >> 61) {
                      goto LABEL_409;
                    }
                    uint64_t v59 = v53 - (void)v56;
                    if (v59 >> 2 > v58) {
                      unint64_t v58 = v59 >> 2;
                    }
                    if ((unint64_t)v59 >= 0x7FFFFFFFFFFFFFF8) {
                      unint64_t v60 = 0x1FFFFFFFFFFFFFFFLL;
                    }
                    else {
                      unint64_t v60 = v58;
                    }
                    if (v60)
                    {
                      if (v60 >> 61) {
                        goto LABEL_410;
                      }
                      unint64_t v61 = (char *)operator new(8 * v60);
                    }
                    else
                    {
                      unint64_t v61 = 0;
                    }
                    uint64_t v62 = &v61[8 * v57];
                    *(void *)uint64_t v62 = v42;
                    unsigned int v55 = v62 + 8;
                    if (v54 != v56)
                    {
                      do
                      {
                        uint64_t v63 = *--v54;
                        *((void *)v62 - 1) = v63;
                        v62 -= 8;
                      }
                      while (v54 != v56);
                      uint64_t v54 = (void *)v52[7];
                    }
                    v52[7] = v62;
                    v52[8] = v55;
                    v52[9] = &v61[8 * v60];
                    if (v54) {
                      operator delete(v54);
                    }
                  }
                  else
                  {
                    *uint64_t v54 = v42;
                    unsigned int v55 = v54 + 1;
                  }
                  v52[8] = v55;
                  *((_WORD *)v52 + 12) = 256;
                  ++v49;
                }
                while (v49 != v48);
              }
              size_t v46 = v309 + 1;
            }
            while (v309 + 1 != v306);
            uint64_t v45 = *(void **)(v42 + 104);
            if (v45)
            {
LABEL_88:
              uint64_t v64 = (_OWORD *)v45[6];
              BOOL v307 = (_OWORD *)v45[7];
              if (v307 == v64) {
                goto LABEL_111;
              }
              do
              {
                uint64_t v310 = v64;
                *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = *v64;
                uint64_t v65 = sub_1CC9CEC88((uint64_t)v329, (uint64_t *)&__dst);
                BOOL v67 = (long long *)v65[1];
                uint64_t v66 = (long long *)v65[2];
                if (v67 != v66)
                {
                  std::string::size_type v68 = __dst.__r_.__value_.__l.__size_;
                  do
                  {
                    long long v334 = *v67;
                    std::string::size_type v335 = v68;
                    uint64_t v69 = (void *)sub_1CC9CE4B8((uint64_t)v318, &v334);
                    uint64_t v70 = v69;
                    unsigned int v72 = (void *)v69[5];
                    unint64_t v71 = v69[6];
                    if ((unint64_t)v72 >= v71)
                    {
                      int v74 = (void *)v69[4];
                      uint64_t v75 = v72 - v74;
                      unint64_t v76 = v75 + 1;
                      if ((unint64_t)(v75 + 1) >> 61) {
                        goto LABEL_409;
                      }
                      uint64_t v77 = v71 - (void)v74;
                      if (v77 >> 2 > v76) {
                        unint64_t v76 = v77 >> 2;
                      }
                      if ((unint64_t)v77 >= 0x7FFFFFFFFFFFFFF8) {
                        unint64_t v78 = 0x1FFFFFFFFFFFFFFFLL;
                      }
                      else {
                        unint64_t v78 = v76;
                      }
                      if (v78)
                      {
                        if (v78 >> 61) {
                          goto LABEL_410;
                        }
                        unint64_t v79 = (char *)operator new(8 * v78);
                      }
                      else
                      {
                        unint64_t v79 = 0;
                      }
                      BOOL v80 = &v79[8 * v75];
                      *(void *)BOOL v80 = v42;
                      uint64_t v73 = v80 + 8;
                      if (v72 != v74)
                      {
                        do
                        {
                          uint64_t v81 = *--v72;
                          *((void *)v80 - 1) = v81;
                          v80 -= 8;
                        }
                        while (v72 != v74);
                        unsigned int v72 = (void *)v70[4];
                      }
                      v70[4] = v80;
                      v70[5] = v73;
                      v70[6] = &v79[8 * v78];
                      if (v72) {
                        operator delete(v72);
                      }
                    }
                    else
                    {
                      void *v72 = v42;
                      uint64_t v73 = v72 + 1;
                    }
                    v70[5] = v73;
                    *((unsigned char *)v70 + 24) = 0;
                    ++v67;
                  }
                  while (v67 != v66);
                }
                uint64_t v64 = v310 + 1;
              }
              while (v310 + 1 != v307);
              uint64_t v45 = *(void **)(v42 + 104);
              if (v45)
              {
LABEL_111:
                uint64_t v82 = v45[9];
                uint64_t v311 = v45[10];
                if (v311 == v82) {
                  goto LABEL_134;
                }
                do
                {
                  uint64_t v83 = sub_1CC9CEC88((uint64_t)v329, (uint64_t *)v82);
                  unint64_t v84 = (long long *)v83[1];
                  uint64_t v85 = (long long *)v83[2];
                  while (v84 != v85)
                  {
                    long long v334 = *v84;
                    std::string::size_type v335 = *(void *)(v82 + 8);
                    unint64_t v86 = sub_1CC9CE4B8((uint64_t)v318, &v334);
                    unint64_t v87 = sub_1CC9C9990((uint64_t **)(v86 + 80), *(void **)(v82 + 16), *(void *)(v82 + 24));
                    BOOL v88 = v87;
                    uint64_t v90 = (void *)*((void *)v87 + 8);
                    unint64_t v89 = *((void *)v87 + 9);
                    if ((unint64_t)v90 >= v89)
                    {
                      unint64_t v92 = (void *)*((void *)v87 + 7);
                      uint64_t v93 = v90 - v92;
                      unint64_t v94 = v93 + 1;
                      if ((unint64_t)(v93 + 1) >> 61) {
                        goto LABEL_409;
                      }
                      uint64_t v95 = v89 - (void)v92;
                      if (v95 >> 2 > v94) {
                        unint64_t v94 = v95 >> 2;
                      }
                      if ((unint64_t)v95 >= 0x7FFFFFFFFFFFFFF8) {
                        unint64_t v96 = 0x1FFFFFFFFFFFFFFFLL;
                      }
                      else {
                        unint64_t v96 = v94;
                      }
                      if (v96)
                      {
                        if (v96 >> 61) {
                          goto LABEL_410;
                        }
                        int v97 = (char *)operator new(8 * v96);
                      }
                      else
                      {
                        int v97 = 0;
                      }
                      int v98 = &v97[8 * v93];
                      *(void *)int v98 = v42;
                      unint64_t v91 = v98 + 8;
                      if (v90 != v92)
                      {
                        do
                        {
                          uint64_t v99 = *--v90;
                          *((void *)v98 - 1) = v99;
                          v98 -= 8;
                        }
                        while (v90 != v92);
                        uint64_t v90 = (void *)*((void *)v88 + 7);
                      }
                      *((void *)v88 + 7) = v98;
                      *((void *)v88 + 8) = v91;
                      *((void *)v88 + 9) = &v97[8 * v96];
                      if (v90) {
                        operator delete(v90);
                      }
                    }
                    else
                    {
                      *uint64_t v90 = v42;
                      unint64_t v91 = v90 + 1;
                    }
                    *((void *)v88 + 8) = v91;
                    *((_WORD *)v88 + 12) = 256;
                    ++v84;
                  }
                  v82 += 40;
                }
                while (v82 != v311);
                uint64_t v45 = *(void **)(v42 + 104);
                if (v45)
                {
LABEL_134:
                  uint64_t v100 = v45[12];
                  for (uint64_t i = v45[13]; v100 != i; v100 += 40)
                  {
                    uint64_t v101 = sub_1CC9CEC88((uint64_t)v329, (uint64_t *)v100);
                    uint64_t v102 = (long long *)v101[1];
                    uint64_t v103 = (long long *)v101[2];
                    while (v102 != v103)
                    {
                      long long v334 = *v102;
                      std::string::size_type v335 = *(void *)(v100 + 8);
                      unint64_t v104 = sub_1CC9CE4B8((uint64_t)v318, &v334);
                      int v105 = sub_1CC9C9990((uint64_t **)(v104 + 80), *(void **)(v100 + 16), *(void *)(v100 + 24));
                      uint64_t v106 = v105;
                      uint64_t v108 = (void *)*((void *)v105 + 5);
                      unint64_t v107 = *((void *)v105 + 6);
                      if ((unint64_t)v108 >= v107)
                      {
                        uint64_t v110 = (void *)*((void *)v105 + 4);
                        uint64_t v111 = v108 - v110;
                        unint64_t v112 = v111 + 1;
                        if ((unint64_t)(v111 + 1) >> 61) {
                          goto LABEL_409;
                        }
                        uint64_t v113 = v107 - (void)v110;
                        if (v113 >> 2 > v112) {
                          unint64_t v112 = v113 >> 2;
                        }
                        if ((unint64_t)v113 >= 0x7FFFFFFFFFFFFFF8) {
                          unint64_t v114 = 0x1FFFFFFFFFFFFFFFLL;
                        }
                        else {
                          unint64_t v114 = v112;
                        }
                        if (v114)
                        {
                          if (v114 >> 61) {
                            goto LABEL_410;
                          }
                          int v115 = (char *)operator new(8 * v114);
                        }
                        else
                        {
                          int v115 = 0;
                        }
                        unsigned int v116 = &v115[8 * v111];
                        *(void *)unsigned int v116 = v42;
                        uint64_t v109 = v116 + 8;
                        if (v108 != v110)
                        {
                          do
                          {
                            uint64_t v117 = *--v108;
                            *((void *)v116 - 1) = v117;
                            v116 -= 8;
                          }
                          while (v108 != v110);
                          uint64_t v108 = (void *)*((void *)v106 + 4);
                        }
                        *((void *)v106 + 4) = v116;
                        *((void *)v106 + 5) = v109;
                        *((void *)v106 + 6) = &v115[8 * v114];
                        if (v108) {
                          operator delete(v108);
                        }
                      }
                      else
                      {
                        *uint64_t v108 = v42;
                        uint64_t v109 = v108 + 1;
                      }
                      *((void *)v106 + 5) = v109;
                      v106[24] = 0;
                      ++v102;
                    }
                  }
                }
              }
            }
          }
        }
        uint64_t v41 = v303;
        int v40 = v304 + 1;
      }
      int64_t v118 = v299;
      int v119 = (void *)v299[1];
      if (v119)
      {
        do
        {
          int v120 = v119;
          int v119 = (void *)*v119;
        }
        while (v119);
      }
      else
      {
        do
        {
          int v120 = (void *)v118[2];
          BOOL v16 = *v120 == (void)v118;
          int64_t v118 = v120;
        }
        while (!v16);
      }
      uint64_t v38 = v120;
    }
    while (v120 != v297);
  }
  v327 = 0;
  uint64_t v328 = 0;
  v326 = &v327;
  uint64_t v121 = (char *)v320[0];
  v308 = (char *)v320[1];
  if (v320[0] == v320[1]) {
    goto LABEL_390;
  }
  while (2)
  {
    *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = *(_OWORD *)v121;
    uint64_t v122 = *(void *)(a1 + 88);
    if (!v122) {
      goto LABEL_171;
    }
    uint64_t v123 = a1 + 96;
    uint64_t v124 = a1 + 88;
    do
    {
      BOOL v125 = sub_1CC9CEFF8(v123, (const void **)(v122 + 32), (uint64_t)&__dst);
      uint64_t v126 = (uint64_t *)(v122 + 8);
      if (!v125)
      {
        uint64_t v126 = (uint64_t *)v122;
        uint64_t v124 = v122;
      }
      uint64_t v122 = *v126;
    }
    while (*v126);
    if (v124 == a1 + 88 || sub_1CC9CF080(v123, (uint64_t)&__dst, (const void **)(v124 + 32)))
    {
LABEL_171:
      char v127 = 0;
      LOBYTE(v334) = 0;
    }
    else
    {
      long long v334 = 0uLL;
      std::string::size_type v335 = 0;
      sub_1CC0C53B4(&v334, *(const void **)(v124 + 56), *(void *)(v124 + 64), (uint64_t)(*(void *)(v124 + 64) - *(void *)(v124 + 56)) >> 4);
      char v127 = 1;
    }
    char v336 = v127;
    uint64_t v128 = sub_1CD4EFDD8(a1, *(int **)v121, *((void *)v121 + 1));
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)(v121 + 16);
    uint64_t v305 = sub_1CD4F4FFC((uint64_t **)v128 + 5, (unint64_t *)v121 + 2, (uint64_t)&std::piecewise_construct, &__dst);
    unint64_t v324 = 0;
    uint64_t v325 = 0;
    __p = 0;
    uint64_t v129 = (uint64_t)sub_1CC0C53B4(&__p, (const void *)v334, *((uint64_t *)&v334 + 1), (uint64_t)(*((void *)&v334 + 1) - v334) >> 4);
    v131 = __p;
    v130 = v324;
    if (__p == v324)
    {
      unint64_t v133 = 0;
      unint64_t v132 = 0;
      int v165 = 1;
      goto LABEL_224;
    }
    unint64_t v132 = 0;
    unint64_t v133 = 0;
    unint64_t v134 = 0;
    uint64_t v135 = *((void *)v121 + 2);
LABEL_174:
    unint64_t v136 = v131[1] & 0xFFFFFFFFFFFFFFF8;
    uint64_t v137 = *(uint64_t **)(v136 + 24);
    uint64_t v138 = *(uint64_t **)(v136 + 32);
    uint64_t v139 = (char *)v138 - (char *)v137;
    if (v138 != v137)
    {
      uint64_t v140 = 0;
      char v141 = 0;
      uint64_t v142 = 8 * (v139 >> 3);
      while (1)
      {
        uint64_t v143 = *v137;
        int v144 = *(_WORD *)(*v137 + 12) & 0xF;
        if (v144 - 7) <= 1 && (v141) {
          break;
        }
        if (!*(_DWORD *)(v143 + 8)) {
          uint64_t v143 = *(void *)(v143 + 72);
        }
        uint64_t v145 = *(uint64_t **)(v143 + 64);
        if (v145)
        {
          uint64_t v147 = *v145;
          uint64_t v146 = v145[1];
          if (v144 != 1 || v146 != v147)
          {
LABEL_188:
            uint64_t v140 = v143;
            if ((*(unsigned char *)(v143 + 72) & 0x18) == 0) {
              break;
            }
          }
        }
        else if (v144 != 1)
        {
          goto LABEL_188;
        }
        v141 |= (v144 - 7) < 2;
        ++v137;
        v142 -= 8;
        if (!v142)
        {
          if (!v140) {
            break;
          }
          uint64_t v313 = v121;
          if ((*(_WORD *)(v140 + 12) & 0x80) != 0)
          {
            uint64_t v149 = *(unint64_t ***)(v140 + 64);
            if (v149)
            {
              uint64_t v150 = *v149;
              uint64_t v151 = v149[1];
              if (v151 != *v149)
              {
                uint64_t v152 = v133;
                uint64_t v300 = v135;
                do
                {
                  if (v150[1] != *v131 + v135) {
                    goto LABEL_200;
                  }
                  uint64_t v153 = v132;
                  unint64_t v154 = *v150;
                  uint64_t v129 = sub_1CC9CDB14(*v150);
                  if (v129)
                  {
                    unint64_t v133 = v152;
                    unint64_t v132 = v153;
                  }
                  else
                  {
                    unint64_t v132 = v153;
                    if ((unint64_t)v152 < v134)
                    {
                      *v152++ = v154;
LABEL_200:
                      unint64_t v133 = v152;
                      goto LABEL_201;
                    }
                    unint64_t v155 = v134;
                    uint64_t v156 = v152 - v153;
                    unint64_t v157 = v156 + 1;
                    if ((unint64_t)(v156 + 1) >> 61) {
                      goto LABEL_409;
                    }
                    uint64_t v158 = v130;
                    unint64_t v159 = v155 - (void)v153;
                    unint64_t v160 = (uint64_t)(v155 - (void)v153) >> 2;
                    if (v160 > v157) {
                      unint64_t v157 = v160;
                    }
                    if (v159 >= 0x7FFFFFFFFFFFFFF8) {
                      unint64_t v161 = 0x1FFFFFFFFFFFFFFFLL;
                    }
                    else {
                      unint64_t v161 = v157;
                    }
                    if (v161)
                    {
                      if (v161 >> 61) {
                        goto LABEL_410;
                      }
                      uint64_t v129 = (uint64_t)operator new(8 * v161);
                      unint64_t v132 = v153;
                    }
                    else
                    {
                      uint64_t v129 = 0;
                    }
                    v162 = (unint64_t *)(v129 + 8 * v156);
                    unint64_t *v162 = v154;
                    unint64_t v133 = v162 + 1;
                    while (v152 != v132)
                    {
                      unint64_t v163 = *--v152;
                      *--v162 = v163;
                    }
                    uint64_t v164 = (void *)(v129 + 8 * v161);
                    if (v132) {
                      operator delete(v132);
                    }
                    unint64_t v132 = v162;
                    v130 = v158;
                    uint64_t v135 = v300;
                    unint64_t v134 = (unint64_t)v164;
                  }
LABEL_201:
                  v150 += 2;
                  uint64_t v152 = v133;
                }
                while (v150 != v151);
              }
            }
          }
          v131 += 2;
          uint64_t v121 = v313;
          if (v131 == v130)
          {
            int v165 = 1;
            goto LABEL_222;
          }
          goto LABEL_174;
        }
      }
    }
    int v165 = 0;
LABEL_222:
    v131 = __p;
LABEL_224:
    if (v132 == v133) {
      int v166 = 0;
    }
    else {
      int v166 = v165;
    }
    if (v131)
    {
      unint64_t v324 = v131;
      uint64_t v167 = v132;
      operator delete(v131);
      unint64_t v132 = v167;
    }
    if (!v166) {
      goto LABEL_334;
    }
    v314 = v121;
    int v301 = v121 + 24;
    uint64_t v168 = *v132;
    uint64_t v333 = v168;
    uint64_t v169 = (unint64_t *)(v168 & 0xFFFFFFFFFFFFFFF8);
    unint64_t v170 = ((char *)v133 - (char *)v132) & 0xFFFFFFFFFFFFFFF8;
    BOOL v171 = v132;
    do
    {
      if (v169 != (unint64_t *)(*v171 & 0xFFFFFFFFFFFFFFF8)) {
        goto LABEL_333;
      }
      ++v171;
      v170 -= 8;
    }
    while (v170);
    unint64_t v173 = v169[3];
    unint64_t v172 = v169[4];
    unint64_t v174 = v172 - v173;
    if (v172 == v173) {
      goto LABEL_333;
    }
    if (v168)
    {
      unint64_t v177 = (uint64_t ***)v169[1];
      if ((*((unsigned char *)v177 + 23) & 0x10) == 0)
      {
        size_t v176 = 0;
        unint64_t v175 = &byte_1CFBCE98E;
        goto LABEL_246;
      }
      uint64_t v178 = ***v177;
      uint64_t v179 = *(void *)(v178 + 152);
      uint64_t v180 = *(unsigned int *)(v178 + 168);
      if (v180)
      {
        LODWORD(v181) = (v180 - 1) & ((v177 >> 4) ^ (v177 >> 9));
        v182 = (uint64_t ****)(v179 + 16 * v181);
        v183 = *v182;
        if (*v182 == v177)
        {
LABEL_245:
          uint64_t v186 = v182[1];
          size_t v187 = (size_t)*v186;
          unint64_t v175 = (char *)(v186 + 2);
          size_t v176 = v187;
          goto LABEL_246;
        }
        int v184 = 1;
        while (v183 != (uint64_t ***)-4096)
        {
          int v185 = v181 + v184++;
          uint64_t v181 = v185 & (v180 - 1);
          v183 = *(uint64_t ****)(v179 + 16 * v181);
          if (v183 == v177)
          {
            v182 = (uint64_t ****)(v179 + 16 * v181);
            goto LABEL_245;
          }
        }
      }
      v182 = (uint64_t ****)(v179 + 16 * v180);
      goto LABEL_245;
    }
    unint64_t v175 = (char *)v169[1];
    size_t v176 = v169[2];
LABEL_246:
    uint64_t v189 = *((void *)&v321 + 1);
    uint64_t v188 = v322;
    while (v189 != v188)
    {
      uint64_t v190 = v132;
      uint64_t v129 = llvm::GlobPattern::match(v189, (uint64_t)v175, v176);
      unint64_t v132 = v190;
      if (v129) {
        goto LABEL_333;
      }
      v189 += 96;
    }
    unint64_t v191 = v174 & 0xFFFFFFFFFFFFFFF8;
    do
    {
      if (v174 >= 9 && (*(_WORD *)(*(void *)v173 + 12) & 0xFu) - 7 < 2) {
        goto LABEL_333;
      }
      v173 += 8;
      v191 -= 8;
    }
    while (v191);
    if (byte_1EBCE4FF8 || (byte_1EBD0C080 & 1) != 0 || byte_1EA61F098)
    {
      unint64_t v192 = v327;
      v193 = &v327;
      uint64_t v194 = &v327;
      if (v327)
      {
        unint64_t v195 = *v169;
        while (1)
        {
          while (1)
          {
            uint64_t v194 = (uint64_t **)v192;
            unint64_t v196 = *(void *)(v192[4] & 0xFFFFFFFFFFFFFFF8);
            if (v195 >= v196) {
              break;
            }
            unint64_t v192 = *v194;
            v193 = v194;
            if (!*v194) {
              goto LABEL_263;
            }
          }
          if (v196 >= v195) {
            break;
          }
          unint64_t v192 = v194[1];
          if (!v192)
          {
            v193 = v194 + 1;
            goto LABEL_263;
          }
        }
      }
      else
      {
LABEL_263:
        uint64_t v197 = v132;
        unint64_t v198 = (uint64_t *)operator new(0x28uLL);
        v198[4] = v168;
        *unint64_t v198 = 0;
        v198[1] = 0;
        v198[2] = (uint64_t)v194;
        unint64_t *v193 = v198;
        if (*v326)
        {
          v326 = (uint64_t **)*v326;
          long long v199 = *v193;
        }
        else
        {
          long long v199 = v198;
        }
        sub_1CB8358B8(v327, v199);
        ++v328;
        uint64_t v169 = (unint64_t *)(v333 & 0xFFFFFFFFFFFFFFF8);
        unint64_t v132 = v197;
      }
    }
    long long v200 = v132;
    uint64_t v201 = (uint64_t *)v169[3];
    uint64_t v129 = sub_1CC9CDB6C(v301, &v333);
    int v202 = v129;
    if (v129)
    {
      __dst.__r_.__value_.__r.__words[0] = *(void *)(v333 & 0xFFFFFFFFFFFFFFF8);
      uint64_t v129 = (uint64_t)sub_1CD3CFB98(a2, (unint64_t *)&__dst, (uint64_t **)&__dst);
    }
    *((_DWORD *)v305 + 10) = 1;
    uint64_t v203 = *v201;
    if ((*(_WORD *)(*v201 + 12) & 0xFu) - 7 > 1)
    {
      unint64_t v210 = v333 & 0xFFFFFFFFFFFFFFF8;
      if ((v333 & 1) == 0) {
        goto LABEL_312;
      }
      v211 = *(uint64_t ****)(v210 + 8);
      if ((*((unsigned char *)v211 + 23) & 0x10) == 0) {
        goto LABEL_351;
      }
      uint64_t v212 = ***v211;
      uint64_t v213 = *(void *)(v212 + 152);
      uint64_t v214 = *(unsigned int *)(v212 + 168);
      if (!v214) {
        goto LABEL_320;
      }
      LODWORD(v215) = (v214 - 1) & ((v211 >> 4) ^ (v211 >> 9));
      v216 = (uint64_t ****)(v213 + 16 * v215);
      v217 = *v216;
      if (*v216 != v211)
      {
        int v218 = 1;
        while (v217 != (uint64_t ***)-4096)
        {
          int v219 = v215 + v218++;
          uint64_t v215 = v219 & (v214 - 1);
          v217 = *(uint64_t ****)(v213 + 16 * v215);
          if (v217 == v211)
          {
LABEL_319:
            v216 = (uint64_t ****)(v213 + 16 * v215);
            goto LABEL_321;
          }
        }
LABEL_320:
        v216 = (uint64_t ****)(v213 + 16 * v214);
      }
LABEL_321:
      uint64_t v242 = v216[1];
      std::string::size_type v243 = (std::string::size_type)*v242;
      v236 = (char *)(v242 + 2);
      std::string::size_type v235 = v243;
LABEL_322:
      if (v235 > 0x7FFFFFFFFFFFFFF7) {
        goto LABEL_409;
      }
      if (v235 >= 0x17)
      {
        uint64_t v245 = (v235 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v235 | 7) != 0x17) {
          uint64_t v245 = v235 | 7;
        }
        uint64_t v246 = v245 + 1;
        p_dst = (std::string *)operator new(v245 + 1);
        __dst.__r_.__value_.__l.__size_ = v235;
        __dst.__r_.__value_.__r.__words[2] = v246 | 0x8000000000000000;
        __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
      }
      else
      {
        *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v235;
        p_dst = &__dst;
        if (!v235) {
          goto LABEL_330;
        }
      }
      uint64_t v129 = (uint64_t)memmove(p_dst, v236, v235);
LABEL_330:
      unint64_t v132 = v200;
      p_dst->__r_.__value_.__s.__data_[v235] = 0;
      v247 = (void **)(v305 + 48);
      if (v305[71] < 0)
      {
        operator delete(*v247);
        unint64_t v132 = v200;
      }
      *(_OWORD *)v247 = *(_OWORD *)&__dst.__r_.__value_.__l.__data_;
      *((void *)v305 + 8) = *((void *)&__dst.__r_.__value_.__l + 2);
      goto LABEL_333;
    }
    if (!v202)
    {
      uint64_t v204 = v333;
      v206 = a3 + 1;
      unint64_t v205 = a3[1];
      if (v205)
      {
        unint64_t v207 = *(void *)(v333 & 0xFFFFFFFFFFFFFFF8);
        while (1)
        {
          while (1)
          {
            uint64_t v208 = (uint64_t **)v205;
            unint64_t v209 = *(void *)(v205[4] & 0xFFFFFFFFFFFFFFF8);
            if (v207 >= v209) {
              break;
            }
            unint64_t v205 = *v208;
            v206 = v208;
            if (!*v208) {
              goto LABEL_291;
            }
          }
          if (v209 >= v207) {
            break;
          }
          unint64_t v205 = v208[1];
          if (!v205)
          {
            v206 = v208 + 1;
            goto LABEL_291;
          }
        }
      }
      else
      {
        uint64_t v208 = a3 + 1;
LABEL_291:
        v220 = (uint64_t *)v208;
        uint64_t v208 = (uint64_t **)operator new(0x40uLL);
        *uint64_t v208 = 0;
        v208[1] = 0;
        v208[4] = (uint64_t *)v204;
        v208[5] = 0;
        v208[6] = 0;
        v208[7] = 0;
        v208[2] = v220;
        char *v206 = (uint64_t *)v208;
        v221 = (uint64_t *)**a3;
        uint64_t v222 = (uint64_t *)v208;
        if (v221)
        {
          *a3 = v221;
          uint64_t v222 = *v206;
        }
        uint64_t v129 = (uint64_t)sub_1CB8358B8(a3[1], v222);
        a3[2] = (uint64_t *)((char *)a3[2] + 1);
      }
      uint64_t v224 = v208[6];
      unint64_t v223 = (unint64_t)v208[7];
      if ((unint64_t)v224 >= v223)
      {
        v227 = v208[5];
        unint64_t v228 = 0xAAAAAAAAAAAAAAABLL * (v224 - v227) + 1;
        if (v228 > 0xAAAAAAAAAAAAAAALL) {
          goto LABEL_409;
        }
        unint64_t v229 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v223 - (void)v227) >> 3);
        if (2 * v229 > v228) {
          unint64_t v228 = 2 * v229;
        }
        if (v229 >= 0x555555555555555) {
          unint64_t v230 = 0xAAAAAAAAAAAAAAALL;
        }
        else {
          unint64_t v230 = v228;
        }
        if (v230)
        {
          if (v230 > 0xAAAAAAAAAAAAAAALL) {
            goto LABEL_410;
          }
          uint64_t v129 = (uint64_t)operator new(24 * v230);
        }
        else
        {
          uint64_t v129 = 0;
        }
        long long v231 = *(_OWORD *)v314;
        uint64_t v232 = (uint64_t *)(v129 + 8 * (v224 - v227));
        v232[2] = *((void *)v314 + 2);
        *(_OWORD *)uint64_t v232 = v231;
        unint64_t v233 = v232;
        if (v224 != v227)
        {
          do
          {
            long long v234 = *(_OWORD *)(v224 - 3);
            *(v233 - 1) = *(v224 - 1);
            *(_OWORD *)(v233 - 3) = v234;
            v233 -= 3;
            v224 -= 3;
          }
          while (v224 != v227);
          uint64_t v224 = v208[5];
        }
        v226 = v232 + 3;
        v208[5] = v233;
        v208[6] = v232 + 3;
        v208[7] = (uint64_t *)(v129 + 24 * v230);
        if (v224) {
          operator delete(v224);
        }
      }
      else
      {
        long long v225 = *(_OWORD *)v314;
        v224[2] = *((void *)v314 + 2);
        *(_OWORD *)uint64_t v224 = v225;
        v226 = v224 + 3;
      }
      v208[6] = v226;
      unint64_t v210 = v333 & 0xFFFFFFFFFFFFFFF8;
      if ((v333 & 1) == 0)
      {
LABEL_312:
        v236 = *(char **)(v210 + 8);
        std::string::size_type v235 = *(void *)(v210 + 16);
        goto LABEL_322;
      }
      v237 = *(uint64_t ****)(v210 + 8);
      if ((*((unsigned char *)v237 + 23) & 0x10) != 0)
      {
        uint64_t v238 = ***v237;
        uint64_t v213 = *(void *)(v238 + 152);
        uint64_t v214 = *(unsigned int *)(v238 + 168);
        if (!v214) {
          goto LABEL_320;
        }
        LODWORD(v215) = (v214 - 1) & ((v237 >> 4) ^ (v237 >> 9));
        v216 = (uint64_t ****)(v213 + 16 * v215);
        v239 = *v216;
        if (*v216 != v237)
        {
          int v240 = 1;
          while (v239 != (uint64_t ***)-4096)
          {
            int v241 = v215 + v240++;
            uint64_t v215 = v241 & (v214 - 1);
            v239 = *(uint64_t ****)(v213 + 16 * v215);
            if (v239 == v237) {
              goto LABEL_319;
            }
          }
          goto LABEL_320;
        }
        goto LABEL_321;
      }
LABEL_351:
      std::string::size_type v235 = 0;
      v236 = &byte_1CFBCE98E;
      goto LABEL_322;
    }
    unint64_t v249 = v333 & 0xFFFFFFFFFFFFFFF8;
    if ((v333 & 1) == 0)
    {
      uint64_t v298 = *(char **)(v249 + 8);
      uint64_t v296 = *(void *)(v249 + 16);
      goto LABEL_355;
    }
    v250 = *(uint64_t ****)(v249 + 8);
    if ((*((unsigned char *)v250 + 23) & 0x10) != 0)
    {
      uint64_t v251 = ***v250;
      uint64_t v252 = *(void *)(v251 + 152);
      uint64_t v253 = *(unsigned int *)(v251 + 168);
      if (!v253) {
        goto LABEL_352;
      }
      LODWORD(v254) = (v253 - 1) & ((v250 >> 4) ^ (v250 >> 9));
      v255 = (uint64_t ****)(v252 + 16 * v254);
      uint64_t v256 = *v255;
      if (*v255 != v250)
      {
        int v257 = 1;
        while (v256 != (uint64_t ***)-4096)
        {
          int v258 = v254 + v257++;
          uint64_t v254 = v258 & (v253 - 1);
          uint64_t v256 = *(uint64_t ****)(v252 + 16 * v254);
          if (v256 == v250)
          {
            v255 = (uint64_t ****)(v252 + 16 * v254);
            goto LABEL_353;
          }
        }
LABEL_352:
        v255 = (uint64_t ****)(v252 + 16 * v253);
      }
LABEL_353:
      uint64_t v259 = v255[1];
      uint64_t v261 = (uint64_t)*v259;
      v260 = (char *)(v259 + 2);
      uint64_t v296 = v261;
    }
    else
    {
      uint64_t v296 = 0;
      v260 = &byte_1CFBCE98E;
    }
    uint64_t v298 = v260;
LABEL_355:
    uint64_t v262 = *(unsigned int *)(a1 + 32);
    if (v262)
    {
      v263 = *(unsigned __int8 **)(v203 + 24);
      size_t v264 = *(void *)(v203 + 32);
      int v265 = 0;
      if (v264)
      {
        uint64_t v266 = *(void *)(v203 + 32);
        BOOL v267 = v263;
        do
        {
          int v268 = *v267++;
          int v265 = 33 * v265 + v268;
          --v266;
        }
        while (v266);
      }
      unsigned int v269 = v262 - 1;
      uint64_t v270 = *(void *)(a1 + 24);
      uint64_t v302 = *(unsigned int *)(a1 + 32);
      uint64_t v271 = v270 + 8 * v262 + 8;
      int v272 = 1;
      int v273 = v265;
      while (1)
      {
        uint64_t v274 = v273 & v269;
        v275 = *(void **)(v270 + 8 * v274);
        if (v275 != (void *)-8)
        {
          if (!v275) {
            goto LABEL_371;
          }
          if (*(_DWORD *)(v271 + 4 * v274) == v265
            && v264 == *v275
            && (!v264 || !memcmp(v263, (char *)v275 + *(unsigned int *)(a1 + 44), v264)))
          {
            break;
          }
        }
        int v273 = v272 + v274;
        ++v272;
      }
      uint64_t v276 = v302;
      if (v274 != -1) {
        uint64_t v276 = (int)v274;
      }
      uint64_t v302 = v276;
    }
    else
    {
      uint64_t v302 = 0;
      uint64_t v270 = *(void *)(a1 + 24);
    }
LABEL_371:
    uint64_t v277 = *(void *)(v270 + 8 * v302);
    long long v331 = *(_OWORD *)(v277 + 16);
    int v332 = *(_DWORD *)(v277 + 32);
    sub_1CD687350(v298, v296, (unsigned int *)&v331, &__dst);
    v278 = (void **)(v305 + 48);
    if (v305[71] < 0) {
      operator delete(*v278);
    }
    *(_OWORD *)v278 = *(_OWORD *)&__dst.__r_.__value_.__l.__data_;
    *((void *)v305 + 8) = *((void *)&__dst.__r_.__value_.__l + 2);
    unint64_t v132 = v200;
LABEL_333:
    uint64_t v121 = v314;
LABEL_334:
    if (v336)
    {
      uint64_t v129 = v334;
      if ((void)v334)
      {
        uint64_t v248 = v132;
        operator delete((void *)v334);
        unint64_t v132 = v248;
      }
    }
    if (v132) {
      operator delete(v132);
    }
    v121 += 128;
    if (v121 != v308) {
      continue;
    }
    break;
  }
  if (byte_1EBCE4FF8)
  {
    int v279 = (uint64_t *)v326;
    if (v326 != &v327)
    {
      do
      {
        uint64_t v280 = (llvm::raw_ostream *)llvm::errs((llvm *)v129);
        uint64_t v281 = (void *)*((void *)v280 + 4);
        if (*((void *)v280 + 3) - (void)v281 > 0x15uLL)
        {
          qmemcpy(v281, "Devirtualized call to ", 22);
          *((void *)v280 + 4) += 22;
        }
        else
        {
          uint64_t v280 = llvm::raw_ostream::write(v280, "Devirtualized call to ", 0x16uLL);
        }
        uint64_t v129 = (uint64_t)sub_1CD662C0C(v280, v279 + 4);
        uint64_t v282 = *(unsigned char **)(v129 + 32);
        if (*(unsigned char **)(v129 + 24) == v282)
        {
          uint64_t v129 = (uint64_t)llvm::raw_ostream::write((llvm::raw_ostream *)v129, "\n", 1uLL);
        }
        else
        {
          *uint64_t v282 = 10;
          ++*(void *)(v129 + 32);
        }
        uint64_t v283 = (uint64_t *)v279[1];
        if (v283)
        {
          do
          {
            v284 = (uint64_t **)v283;
            uint64_t v283 = (uint64_t *)*v283;
          }
          while (v283);
        }
        else
        {
          do
          {
            v284 = (uint64_t **)v279[2];
            BOOL v16 = *v284 == v279;
            int v279 = (uint64_t *)v284;
          }
          while (!v16);
        }
        int v279 = (uint64_t *)v284;
      }
      while (v284 != &v327);
    }
  }
LABEL_390:
  sub_1CBB0D544(v327);
  uint64_t v285 = v329[0];
  if (v330)
  {
    uint64_t v286 = 32 * v330;
    int v287 = (void *)(v329[0] + 16);
    do
    {
      if (*(v287 - 2) <= 0xFFFFFFFFFFFFFFFDLL)
      {
        unsigned int v288 = (void *)*(v287 - 1);
        if (v288)
        {
          *int v287 = v288;
          operator delete(v288);
        }
      }
      v287 += 4;
      v286 -= 32;
    }
    while (v286);
  }
  MEMORY[0x1D25D9CD0](v285, 8);
LABEL_397:
  *(void *)&long long v334 = (char *)&v321 + 8;
  sub_1CC9C7E0C((void ***)&v334);
  v289 = (char *)v320[0];
  if (v320[0])
  {
    v290 = (char *)v320[1];
    size_t v291 = v320[0];
    if (v320[1] != v320[0])
    {
      do
      {
        sub_1CC9C7E80(*((void **)v290 - 2));
        size_t v292 = (void *)*((void *)v290 - 6);
        if (v292)
        {
          *((void *)v290 - 5) = v292;
          operator delete(v292);
        }
        uint64_t v293 = (void *)*((void *)v290 - 9);
        if (v293)
        {
          *((void *)v290 - 8) = v293;
          operator delete(v293);
        }
        uint64_t v294 = (void *)*((void *)v290 - 13);
        if (v294)
        {
          *((void *)v290 - 12) = v294;
          operator delete(v294);
        }
        v290 -= 128;
      }
      while (v290 != v289);
      size_t v291 = v320[0];
    }
    v320[1] = v289;
    operator delete(v291);
  }
  return MEMORY[0x1D25D9CD0](v318[0], 8);
}

void llvm::updateIndexWPDForExports(uint64_t a1, unsigned int (*a2)(uint64_t, void, void), uint64_t a3, void *a4)
{
  BOOL v4 = (void *)*a4;
  uint64_t v47 = a4 + 1;
  if ((void *)*a4 != a4 + 1)
  {
    uint64_t v5 = a1;
    do
    {
      uint64_t v6 = *(void *)((v4[4] & 0xFFFFFFFFFFFFFFF8) + 24);
      if (a2(a3, *(void *)(*(void *)v6 + 24), *(void *)(*(void *)v6 + 32)))
      {
        uint64_t v7 = v4[5];
        uint64_t v49 = v4[6];
        if (v7 != v49)
        {
          uint64_t v48 = v6;
          do
          {
            size_t v8 = sub_1CD673844(v5, *(int **)v7, *(void *)(v7 + 8));
            uint64_t v11 = (void *)v8[6];
            size_t v9 = v8 + 6;
            std::string::size_type v10 = v11;
            if (!v11) {
              goto LABEL_17;
            }
            unint64_t v12 = *(void *)(v7 + 16);
            uint64_t v13 = v9;
            do
            {
              unint64_t v14 = v10[4];
              BOOL v15 = v14 >= v12;
              if (v14 >= v12) {
                BOOL v16 = v10;
              }
              else {
                BOOL v16 = v10 + 1;
              }
              if (v15) {
                uint64_t v13 = v10;
              }
              std::string::size_type v10 = (void *)*v16;
            }
            while (*v16);
            if (v13 == v9 || v12 < v13[4]) {
LABEL_17:
            }
              uint64_t v13 = v9;
            int v17 = (void **)(v13 + 6);
            char v18 = *((unsigned char *)v13 + 71);
            int v19 = v18;
            if (v18 >= 0) {
              BOOL v20 = v13 + 6;
            }
            else {
              BOOL v20 = (unsigned char *)v13[6];
            }
            uint64_t v21 = v18 & 0x7F;
            if (v19 >= 0) {
              uint64_t v22 = v21;
            }
            else {
              uint64_t v22 = v13[7];
            }
            uint64_t v23 = *(unsigned int *)(v5 + 32);
            if (v23)
            {
              uint64_t v51 = v22;
              int v52 = v20;
              unint64_t v24 = *(const void **)(*(void *)v6 + 24);
              size_t v25 = *(void *)(*(void *)v6 + 32);
              uint64_t v53 = v7;
              int v26 = 0;
              if (v25)
              {
                uint64_t v27 = *(void *)(*(void *)v6 + 32);
                uint64_t v28 = *(unsigned __int8 **)(*(void *)v6 + 24);
                do
                {
                  int v29 = *v28++;
                  int v26 = 33 * v26 + v29;
                  --v27;
                }
                while (v27);
              }
              unsigned int v30 = v23 - 1;
              uint64_t v31 = *(void *)(v5 + 24);
              uint64_t v50 = *(unsigned int *)(v5 + 32);
              uint64_t v32 = v31 + 8 * v23 + 8;
              uint64_t v54 = *(unsigned int *)(v5 + 44);
              int v33 = 1;
              for (int i = v26; ; int i = v35 + v33++)
              {
                uint64_t v35 = i & v30;
                unsigned int v36 = *(void **)(v31 + 8 * v35);
                if (v36 != (void *)-8)
                {
                  if (!v36) {
                    goto LABEL_37;
                  }
                  if (*(_DWORD *)(v32 + 4 * v35) == v26 && v25 == *v36)
                  {
                    if (!v25) {
                      break;
                    }
                    uint64_t v37 = v24;
                    int v38 = memcmp(v24, (char *)v36 + v54, v25);
                    unint64_t v24 = v37;
                    if (!v38) {
                      break;
                    }
                  }
                }
              }
              if (v35 == -1)
              {
LABEL_37:
                uint64_t v5 = a1;
                uint64_t v6 = v48;
                int v17 = (void **)(v13 + 6);
                uint64_t v7 = v53;
                uint64_t v22 = v51;
                BOOL v20 = v52;
                uint64_t v39 = v50;
                goto LABEL_38;
              }
              uint64_t v39 = (int)v35;
              uint64_t v5 = a1;
              uint64_t v6 = v48;
              int v17 = (void **)(v13 + 6);
              uint64_t v7 = v53;
              uint64_t v22 = v51;
              BOOL v20 = v52;
            }
            else
            {
              uint64_t v39 = 0;
              uint64_t v31 = *(void *)(v5 + 24);
            }
LABEL_38:
            uint64_t v40 = *(void *)(v31 + 8 * v39);
            long long v55 = *(_OWORD *)(v40 + 16);
            int v56 = *(_DWORD *)(v40 + 32);
            sub_1CD687350(v20, v22, (unsigned int *)&v55, &v57);
            if (*((char *)v13 + 71) < 0) {
              operator delete(*v17);
            }
            *(std::string *)int v17 = v57;
            v7 += 24;
          }
          while (v7 != v49);
        }
      }
      uint64_t v41 = (void *)v4[1];
      if (v41)
      {
        do
        {
          uint64_t v42 = v41;
          uint64_t v41 = (void *)*v41;
        }
        while (v41);
      }
      else
      {
        do
        {
          uint64_t v42 = (void *)v4[2];
          BOOL v43 = *v42 == (void)v4;
          BOOL v4 = v42;
        }
        while (!v43);
      }
      BOOL v4 = v42;
    }
    while (v42 != v47);
  }
}

void sub_1CC9C7758()
{
}

void sub_1CC9C7830(llvm::Pass *a1)
{
  llvm::Pass::~Pass(a1);

  JUMPOUT(0x1D25D9CE0);
}

void sub_1CC9C7868(uint64_t a1, uint64_t a2)
{
  sub_1CB843600(a2, a2, (uint64_t)llvm::AssumptionCacheTracker::ID);
  sub_1CB843600(a2, a2, (uint64_t)llvm::TargetLibraryInfoWrapperPass::ID);
  sub_1CB843600(a2, a2, (uint64_t)&llvm::DominatorTreeWrapperPass::ID);

  sub_1CB843600(a2, a2, (uint64_t)llvm::TargetTransformInfoWrapperPass::ID);
}

uint64_t sub_1CC9C78E0(uint64_t a1, llvm::LLVMContextImpl ***a2)
{
  if (llvm::ModulePass::skipModule((llvm::ModulePass *)a1, a2)) {
    return 0;
  }
  char v18 = &v19;
  uint64_t v19 = 0;
  uint64_t v17 = a1;
  if (*(unsigned char *)(a1 + 28))
  {
    uint64_t v8 = a1;
    char v9 = 0;
    char v14 = 0;
    v15[0] = 0;
    char v16 = 0;
    sub_1CC9C13A0();
  }
  uint64_t v8 = a1;
  char v9 = 0;
  char v14 = 0;
  v15[0] = 0;
  char v16 = 0;
  sub_1CC9C1C2C((uint64_t)v7, (llvm::IntegerType **)a2, (uint64_t)sub_1CC8A9878, (uint64_t)&v8, (uint64_t)sub_1CC9C7A88, (uint64_t)&v18, (uint64_t)sub_1CC9C7AF4, (uint64_t)&v17, *(void *)(a1 + 32), *(void *)(a1 + 40));
  uint64_t v4 = sub_1CC9C1EF4(v7);
  sub_1CC9C5BAC((uint64_t)v7);
  if (v16)
  {
    llvm::AAResults::~AAResults((llvm::AAResults *)v15);
    char v16 = 0;
  }
  if (v14)
  {
    if (v13 != v12) {
      free(v13);
    }
    if (v11 != v10) {
      free(v11);
    }
  }
  uint64_t v5 = v19;
  uint64_t v19 = 0;
  if (v5) {
    sub_1CC0CC1D8((uint64_t)&v19, v5);
  }
  return v4;
}

void sub_1CC9C7A88()
{
}

uint64_t sub_1CC9C7AF4(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(*(void *)a1 + 8) + 24);
  uint64_t v2 = (*(uint64_t (**)(uint64_t))(*(void *)v1 + 32))(v1);
  return (*(uint64_t (**)(uint64_t, void *))(*(void *)v2 + 96))(v2, &llvm::DominatorTreeWrapperPass::ID)
       + 32;
}

void sub_1CC9C7B7C(uint64_t *a1)
{
  uint64_t v42 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = qword_1EBCE50B8;
  uint64_t v2 = unk_1EBCE50C0;
  if (qword_1EBCE50B8 != unk_1EBCE50C0)
  {
    uint64_t v4 = a1 + 2;
    do
    {
      char v5 = *(unsigned char *)(v1 + 23);
      BOOL v6 = v5 < 0;
      if (v5 >= 0) {
        uint64_t v7 = (unsigned char *)v1;
      }
      else {
        uint64_t v7 = *(unsigned char **)v1;
      }
      unint64_t v8 = v5 & 0x7F;
      if (v6) {
        unint64_t v9 = *(void *)(v1 + 8);
      }
      else {
        unint64_t v9 = v8;
      }
      llvm::GlobPattern::create(v7, v9, (uint64_t)&v34);
      char v10 = v41;
      if ((v41 & 1) == 0)
      {
        unint64_t v11 = a1[1];
        unint64_t v12 = a1[2];
        if (v11 >= v12)
        {
          unint64_t v18 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v11 - *a1) >> 5);
          unint64_t v19 = v18 + 1;
          if (v18 + 1 > 0x2AAAAAAAAAAAAAALL) {
            abort();
          }
          unint64_t v20 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v12 - *a1) >> 5);
          if (2 * v20 > v19) {
            unint64_t v19 = 2 * v20;
          }
          if (v20 >= 0x155555555555555) {
            unint64_t v21 = 0x2AAAAAAAAAAAAAALL;
          }
          else {
            unint64_t v21 = v19;
          }
          uint64_t v32 = v4;
          if (v21)
          {
            if (v21 > 0x2AAAAAAAAAAAAAALL) {
              sub_1CB833614();
            }
            uint64_t v22 = (char *)operator new(96 * v21);
          }
          else
          {
            uint64_t v22 = 0;
          }
          uint64_t v23 = &v22[96 * v18];
          *(_OWORD *)uint64_t v23 = v34;
          long long v24 = v36;
          *(_OWORD *)(v23 + 40) = v37;
          long long v25 = v39;
          *(_OWORD *)(v23 + 56) = v38;
          *(_OWORD *)(v23 + 72) = v25;
          __p = v22;
          int v29 = (void **)v23;
          *((void *)v23 + 2) = v35;
          long long v34 = 0uLL;
          uint64_t v35 = 0;
          *((void *)v23 + 11) = v40;
          *(_OWORD *)(v23 + 24) = v24;
          unsigned int v30 = (void **)(v23 + 96);
          uint64_t v31 = &v22[96 * v21];
          sub_1CD6878F0(a1, &__p);
          uint64_t v16 = a1[1];
          int v26 = v29;
          uint64_t v27 = v30;
          while (v27 != v26)
          {
            v27 -= 12;
            int v33 = v27;
            sub_1CB837E88(&v33);
          }
          if (__p) {
            operator delete(__p);
          }
        }
        else
        {
          *(void *)unint64_t v11 = 0;
          *(void *)(v11 + 8) = 0;
          *(void *)(v11 + 16) = 0;
          *(_OWORD *)unint64_t v11 = v34;
          *(void *)(v11 + 16) = v35;
          long long v34 = 0uLL;
          uint64_t v35 = 0;
          *(_OWORD *)(v11 + 24) = v36;
          long long v14 = v38;
          long long v13 = v39;
          uint64_t v15 = v40;
          *(_OWORD *)(v11 + 40) = v37;
          *(void *)(v11 + 88) = v15;
          *(_OWORD *)(v11 + 72) = v13;
          *(_OWORD *)(v11 + 56) = v14;
          uint64_t v16 = v11 + 96;
        }
        a1[1] = v16;
        char v10 = v41;
      }
      if (v10)
      {
        uint64_t v17 = v34;
        *(void *)&long long v34 = 0;
        if (v17) {
          (*(void (**)(uint64_t))(*(void *)v17 + 8))(v17);
        }
      }
      else
      {
        __p = &v34;
        sub_1CB837E88((void ***)&__p);
      }
      v1 += 24;
    }
    while (v1 != v2);
  }
}

void sub_1CC9C7E0C(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (void **)**a1;
  if (v2)
  {
    uint64_t v4 = (void **)v1[1];
    char v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v4 -= 12;
        BOOL v6 = v4;
        sub_1CB837E88(&v6);
      }
      while (v4 != v2);
      char v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_1CC9C7E80(void *a1)
{
  if (a1)
  {
    sub_1CC9C7E80(*a1);
    sub_1CC9C7E80(a1[1]);
    uint64_t v2 = (void *)a1[14];
    if (v2)
    {
      a1[15] = v2;
      operator delete(v2);
    }
    uint64_t v3 = (void *)a1[11];
    if (v3)
    {
      a1[12] = v3;
      operator delete(v3);
    }
    uint64_t v4 = (void *)a1[7];
    if (v4)
    {
      a1[8] = v4;
      operator delete(v4);
    }
    char v5 = (void *)a1[4];
    if (v5)
    {
      a1[5] = v5;
      operator delete(v5);
    }
    operator delete(a1);
  }
}

char *sub_1CC9C7F0C(char **a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = (v3 - *a1) >> 3;
  unint64_t v5 = v4 + 1;
  if ((unint64_t)(v4 + 1) >> 61) {
    abort();
  }
  uint64_t v8 = a1[2] - v2;
  if (v8 >> 2 > v5) {
    unint64_t v5 = v8 >> 2;
  }
  if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF8) {
    unint64_t v9 = 0x1FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v9 = v5;
  }
  if (v9)
  {
    if (v9 >> 61) {
      sub_1CB833614();
    }
    char v10 = (char *)operator new(8 * v9);
  }
  else
  {
    char v10 = 0;
  }
  unint64_t v11 = &v10[8 * v4];
  *(void *)unint64_t v11 = a2;
  unint64_t v12 = v11 + 8;
  while (v3 != v2)
  {
    uint64_t v13 = *((void *)v3 - 1);
    v3 -= 8;
    *((void *)v11 - 1) = v13;
    v11 -= 8;
  }
  *a1 = v11;
  a1[1] = v12;
  a1[2] = &v10[8 * v9];
  if (v2) {
    operator delete(v2);
  }
  return v12;
}

llvm::PointerType *sub_1CC9C7FDC(uint64_t a1, uint64_t a2)
{
  v168[2] = *MEMORY[0x1E4F143B8];
  uint64_t v4 = *(uint64_t ***)a1;
  llvm::Intrinsic::getType(**(uint64_t ***)a1, 299, 0, 0);
  Type = (llvm::PointerType *)llvm::Intrinsic::getType(*v4, 299, 0, 0);
  uint64_t result = llvm::Module::getOrInsertFunction((uint64_t)v4, "llvm.type.test", (const char *)0xE, Type, 0);
  uint64_t v103 = v7;
  uint64_t v8 = *(void *)(a2 + 8);
  if (v8)
  {
    uint64_t v102 = (uint64_t **)(a1 + 272);
    uint64_t v105 = a1;
    uint64_t v101 = a1 + 128;
    while (1)
    {
      unint64_t v9 = *(uint64_t ***)(v8 + 24);
      uint64_t v8 = *(void *)(v8 + 8);
      if (v9)
      {
        if (*((unsigned char *)v9 + 16) == 84) {
          break;
        }
      }
      if (!v8) {
        return result;
      }
    }
    char v10 = &v9[-4 * (*((_DWORD *)v9 + 5) & 0x7FFFFFF)];
    unint64_t v11 = *v10;
    unint64_t v12 = (const char *)v10[4];
    uint64_t v104 = (uint64_t)v10[8];
    uint64_t v13 = *(void **)(v104 + 24);
    int v166 = v168;
    uint64_t v167 = 0x100000000;
    unint64_t v163 = (llvm::ValueAsMetadata **)&v165;
    uint64_t v164 = 0x100000000;
    unint64_t v160 = (llvm::ValueAsMetadata **)&v162;
    uint64_t v161 = 0x100000000;
    char v107 = 0;
    long long v14 = (llvm::DominatorTree *)(*(uint64_t (**)(void, uint64_t))(a1 + 24))(*(void *)(a1 + 32), v9[5][7]);
    llvm::findDevirtualizableCallsForTypeCheckedLoad((uint64_t)&v166, (uint64_t)&v163, (uint64_t)&v160, &v107, (uint64_t)v9, v14);
    uint64_t v15 = (llvm::ValueAsMetadata *)v9;
    if (v164 == 1)
    {
      uint64_t v15 = (llvm::ValueAsMetadata *)v9;
      if (!v107) {
        uint64_t v15 = *v163;
      }
    }
    uint64_t v16 = 0;
    uint64_t v17 = **(void **)v15;
    int v144 = &v146;
    uint64_t v145 = 0x200000000;
    uint64_t v149 = v17;
    uint64_t v150 = &v158;
    uint64_t v151 = &v159;
    uint64_t v152 = 0;
    int v153 = 0;
    __int16 v154 = 512;
    char v155 = 7;
    uint64_t v147 = 0;
    uint64_t v148 = 0;
    uint64_t v156 = 0;
    uint64_t v157 = 0;
    uint64_t v158 = &unk_1F2616E88;
    unint64_t v159 = &unk_1F2617008;
    uint64_t v147 = *((void *)v15 + 5);
    uint64_t v148 = (char *)v15 + 24;
    unint64_t v18 = (void *)*((void *)v15 + 6);
    uint64_t v111 = v18;
    if (v18)
    {
      llvm::MetadataTracking::track((uint64_t)&v111, (unsigned __int8 *)v18, 2);
      uint64_t v16 = v111;
    }
    sub_1CB8461A4((uint64_t)&v144, 0, (uint64_t)v16);
    if (!v111)
    {
LABEL_13:
      uint64_t v19 = *(void *)(a1 + 56);
      if (*(_DWORD *)(a2 + 36) != 298)
      {
        __int16 v130 = 257;
        uint64_t v23 = (unsigned __int8 *)sub_1CB930F7C((uint64_t *)&v144, v19, v11, v12, (uint64_t)v128);
        unint64_t v24 = llvm::PointerType::get(*(llvm::PointerType **)(a1 + 64), 0);
        __int16 v114 = 257;
        if (*(void *)v23 != v24)
        {
          if (v23[16] <= 0x14u)
          {
            uint64_t v32 = (*((uint64_t (**)(void **, uint64_t, unsigned __int8 *, unint64_t))*v150 + 28))(v150, 49, v23, v24);
            uint64_t v23 = (unsigned __int8 *)v32;
            if (v32)
            {
              if (*(unsigned __int8 *)(v32 + 16) >= 0x1Cu)
              {
                (*((void (**)(void **, uint64_t, void **, uint64_t, char *))*v151 + 2))(v151, v32, &v111, v147, v148);
                if (v145)
                {
                  uint64_t v99 = (llvm::MDNode **)v144;
                  uint64_t v100 = (llvm::MDNode **)((char *)v144 + 16 * v145);
                  do
                  {
                    llvm::Instruction::setMetadata((llvm::Instruction *)v23, *(_DWORD *)v99, v99[1]);
                    v99 += 2;
                  }
                  while (v99 != v100);
                }
              }
            }
          }
          else
          {
            __int16 v130 = 257;
            uint64_t v23 = (unsigned __int8 *)llvm::CastInst::Create(49, (uint64_t)v23, v24, (const char **)v128, 0);
            (*((void (**)(void **, unsigned __int8 *, void **, uint64_t, char *))*v151 + 2))(v151, v23, &v111, v147, v148);
            if (v145)
            {
              unint64_t v84 = (llvm::MDNode **)v144;
              uint64_t v85 = (llvm::MDNode **)((char *)v144 + 16 * v145);
              do
              {
                llvm::Instruction::setMetadata((llvm::Instruction *)v23, *(_DWORD *)v84, v84[1]);
                v84 += 2;
              }
              while (v84 != v85);
            }
          }
        }
        int v33 = *(llvm::Type **)(a1 + 64);
        __int16 v114 = 257;
        char Alignment = llvm::DataLayout::getAlignment((llvm::DataLayout *)(*(void *)(*(void *)(v147 + 56) + 40) + 272), v33, 1);
        uint64_t v35 = (char *)operator new(0x60uLL);
        *((_DWORD *)v35 + 13) = *((_DWORD *)v35 + 13) & 0x38000000 | 1;
        long long v36 = (unsigned __int8 *)(v35 + 32);
        *(void *)uint64_t v35 = 0;
        *((void *)v35 + 1) = 0;
        *((void *)v35 + 2) = 0;
        *((void *)v35 + 3) = v35 + 32;
        __int16 v130 = 257;
        llvm::LoadInst::LoadInst((llvm::Value *)(v35 + 32), (uint64_t)v33, (uint64_t)v23, (const char **)v128, 0, Alignment, 0);
        (*((void (**)(void **, unsigned __int8 *, void **, uint64_t, char *))*v151 + 2))(v151, v36, &v111, v147, v148);
        if (v145)
        {
          long long v37 = (llvm::MDNode **)v144;
          long long v38 = (llvm::MDNode **)((char *)v144 + 16 * v145);
          do
          {
            llvm::Instruction::setMetadata((llvm::Instruction *)v36, *(_DWORD *)v37, v37[1]);
            v37 += 2;
          }
          while (v37 != v38);
        }
LABEL_57:
        if (v164)
        {
          llvm::Value::doRAUW(*v163, (llvm::Value *)v36, (llvm::Value *)1);
          llvm::SymbolTableListTraits<llvm::Instruction>::removeNodeFromList();
        }
        BOOL v47 = v161 == 1 && v107 == 0;
        uint64_t v48 = (llvm::ValueAsMetadata *)v9;
        if (v47) {
          uint64_t v48 = *v160;
        }
        uint64_t v49 = 0;
        uint64_t v50 = **(void **)v48;
        v128[0] = &v129;
        v128[1] = (void *)0x200000000;
        uint64_t v133 = v50;
        unint64_t v134 = &v142;
        uint64_t v135 = &v143;
        uint64_t v136 = 0;
        int v137 = 0;
        __int16 v138 = 512;
        char v139 = 7;
        uint64_t v131 = 0;
        unint64_t v132 = 0;
        uint64_t v140 = 0;
        uint64_t v141 = 0;
        uint64_t v142 = &unk_1F2616E88;
        uint64_t v143 = &unk_1F2617008;
        uint64_t v131 = *((void *)v48 + 5);
        unint64_t v132 = (char *)v48 + 24;
        uint64_t v51 = (unsigned __int8 *)*((void *)v48 + 6);
        v109[0] = (uint64_t)v51;
        if (v51)
        {
          llvm::MetadataTracking::track((uint64_t)v109, v51, 2);
          uint64_t v49 = v109[0];
        }
        sub_1CB8461A4((uint64_t)v128, 0, v49);
        if (!v109[0])
        {
LABEL_68:
          if (v103) {
            int v52 = *(uint64_t ***)(v103 + 24);
          }
          else {
            int v52 = 0;
          }
          v109[0] = (uint64_t)v11;
          v109[1] = v104;
          __int16 v114 = 257;
          uint64_t v54 = (uint64_t *)sub_1CB845BAC((uint64_t *)v128, v52, (uint64_t **)v103, v109, 2, (uint64_t)&v111, 0);
          uint64_t v106 = v54;
          if (v161)
          {
            llvm::Value::doRAUW(*v160, (llvm::Value *)v54, (llvm::Value *)1);
            llvm::SymbolTableListTraits<llvm::Instruction>::removeNodeFromList();
          }
          if (!v9[1])
          {
LABEL_79:
            unint64_t v61 = sub_1CD4FD4E8(v102, (unint64_t)v54, &v106);
            uint64_t v62 = v167;
            *((_DWORD *)v61 + 10) = v167;
            uint64_t v63 = v61 + 5;
            if (v107) {
              *uint64_t v63 = v62 + 1;
            }
            if (v62)
            {
              uint64_t v64 = v166;
              uint64_t v65 = &v166[2 * v62];
              do
              {
                uint64_t v66 = *v64;
                uint64_t v67 = v64[1];
                v64 += 2;
                uint64_t v111 = v13;
                uint64_t v112 = v66;
                std::string::size_type v68 = (char *)sub_1CC9C93B4(v101, (uint64_t *)&v111);
                sub_1CC9C9B08(v68, (uint64_t)v11, v67, (uint64_t)v63);
              }
              while (v64 != v65);
            }
            llvm::SymbolTableListTraits<llvm::Instruction>::removeNodeFromList();
          }
          long long v55 = llvm::UndefValue::get((llvm::UndefValue *)*v9, v53);
          uint64_t v56 = 0;
          uint64_t v57 = **v9;
          uint64_t v111 = v113;
          uint64_t v112 = 0x200000000;
          uint64_t v117 = v57;
          int64_t v118 = &v126;
          int v119 = &v127;
          uint64_t v120 = 0;
          int v121 = 0;
          __int16 v122 = 512;
          char v123 = 7;
          int v115 = 0;
          unsigned int v116 = 0;
          uint64_t v124 = 0;
          uint64_t v125 = 0;
          uint64_t v126 = &unk_1F2616E88;
          char v127 = &unk_1F2617008;
          int v115 = v9[5];
          unsigned int v116 = v9 + 3;
          unint64_t v58 = (unsigned __int8 *)v9[6];
          uint64_t v108 = v58;
          if (v58)
          {
            llvm::MetadataTracking::track((uint64_t)&v108, v58, 2);
            uint64_t v56 = (uint64_t)v108;
          }
          sub_1CB8461A4((uint64_t)&v111, 0, v56);
          if (!v108)
          {
LABEL_77:
            LODWORD(v108) = 0;
            __int16 v110 = 257;
            uint64_t v59 = sub_1CC2411F8((uint64_t)&v111, (uint64_t)v55, (uint64_t)v36, &v108, 1, (uint64_t)v109);
            uint64_t v54 = v106;
            LODWORD(v108) = 1;
            __int16 v110 = 257;
            unint64_t v60 = sub_1CC2411F8((uint64_t)&v111, (uint64_t)v59, (uint64_t)v106, &v108, 1, (uint64_t)v109);
            llvm::Value::doRAUW((llvm::ValueAsMetadata *)v9, v60, (llvm::Value *)1);
            if (v111 != v113) {
              free(v111);
            }
            goto LABEL_79;
          }
          int v77 = *v108;
          if ((v77 - 4) > 0x1E)
          {
            if ((v77 - 3) >= 0xFFFFFFFE) {
              uint64_t v90 = v108;
            }
            else {
              uint64_t v90 = 0;
            }
            if ((v77 - 3) < 0xFFFFFFFE)
            {
              if (v77 == 3) {
                *((void *)v108 + 1) = 0;
              }
              goto LABEL_77;
            }
            unint64_t v79 = (unint64_t)(v90 + 8);
          }
          else
          {
            if ((v108[1] & 0x7F) != 2 && !*((_DWORD *)v108 + 3)) {
              goto LABEL_77;
            }
            uint64_t v78 = *((void *)v108 + 2);
            if ((v78 & 4) == 0) {
              goto LABEL_77;
            }
            unint64_t v79 = v78 & 0xFFFFFFFFFFFFFFF8;
            if (!v79) {
              goto LABEL_77;
            }
          }
          v109[0] = (uint64_t)&v108;
          sub_1CC5FA668(v79 + 16, v109);
          goto LABEL_77;
        }
        int v72 = *(unsigned __int8 *)v109[0];
        if ((v72 - 4) > 0x1E)
        {
          if ((v72 - 3) >= 0xFFFFFFFE) {
            uint64_t v81 = v109[0];
          }
          else {
            uint64_t v81 = 0;
          }
          if ((v72 - 3) < 0xFFFFFFFE)
          {
            if (v72 == 3) {
              *(void *)(v109[0] + 8) = 0;
            }
            goto LABEL_68;
          }
          unint64_t v74 = v81 + 8;
        }
        else
        {
          if ((*(unsigned char *)(v109[0] + 1) & 0x7F) != 2 && !*(_DWORD *)(v109[0] + 12)) {
            goto LABEL_68;
          }
          uint64_t v73 = *(void *)(v109[0] + 16);
          if ((v73 & 4) == 0) {
            goto LABEL_68;
          }
          unint64_t v74 = v73 & 0xFFFFFFFFFFFFFFF8;
          if (!v74) {
            goto LABEL_68;
          }
        }
        uint64_t v111 = v109;
        sub_1CC5FA668(v74 + 16, &v111);
        goto LABEL_68;
      }
      __int16 v130 = 257;
      unint64_t v20 = (unsigned __int8 *)sub_1CB930F7C((uint64_t *)&v144, v19, v11, v12, (uint64_t)v128);
      unint64_t v21 = llvm::PointerType::get(*(llvm::PointerType **)(a1 + 72), 0);
      __int16 v114 = 257;
      uint64_t v22 = (llvm::Instruction *)v20;
      if (*(void *)v20 != v21)
      {
        if (v20[16] <= 0x14u)
        {
          uint64_t v25 = (*((uint64_t (**)(void **, uint64_t, unsigned __int8 *, unint64_t))*v150 + 28))(v150, 49, v20, v21);
          uint64_t v22 = (llvm::Instruction *)v25;
          if (v25)
          {
            if (*(unsigned __int8 *)(v25 + 16) >= 0x1Cu)
            {
              (*((void (**)(void **, uint64_t, void **, uint64_t, char *))*v151 + 2))(v151, v25, &v111, v147, v148);
              if (v145)
              {
                int v97 = (llvm::MDNode **)v144;
                int v98 = (llvm::MDNode **)((char *)v144 + 16 * v145);
                do
                {
                  llvm::Instruction::setMetadata(v22, *(_DWORD *)v97, v97[1]);
                  v97 += 2;
                }
                while (v97 != v98);
              }
            }
          }
        }
        else
        {
          __int16 v130 = 257;
          uint64_t v22 = llvm::CastInst::Create(49, (uint64_t)v20, v21, (const char **)v128, 0);
          (*((void (**)(void **, llvm::Instruction *, void **, uint64_t, char *))*v151 + 2))(v151, v22, &v111, v147, v148);
          if (v145)
          {
            uint64_t v82 = (llvm::MDNode **)v144;
            uint64_t v83 = (llvm::MDNode **)((char *)v144 + 16 * v145);
            do
            {
              llvm::Instruction::setMetadata(v22, *(_DWORD *)v82, v82[1]);
              v82 += 2;
            }
            while (v82 != v83);
          }
        }
      }
      int v26 = *(llvm::Type **)(a1 + 72);
      __int16 v114 = 257;
      char v27 = llvm::DataLayout::getAlignment((llvm::DataLayout *)(*(void *)(*(void *)(v147 + 56) + 40) + 272), v26, 1);
      uint64_t v28 = (char *)operator new(0x60uLL);
      *((_DWORD *)v28 + 13) = *((_DWORD *)v28 + 13) & 0x38000000 | 1;
      int v29 = (unsigned __int8 *)(v28 + 32);
      *(void *)uint64_t v28 = 0;
      *((void *)v28 + 1) = 0;
      *((void *)v28 + 2) = 0;
      *((void *)v28 + 3) = v28 + 32;
      __int16 v130 = 257;
      llvm::LoadInst::LoadInst((llvm::Value *)(v28 + 32), (uint64_t)v26, (uint64_t)v22, (const char **)v128, 0, v27, 0);
      (*((void (**)(void **, char *, void **, uint64_t, char *))*v151 + 2))(v151, v28 + 32, &v111, v147, v148);
      if (v145)
      {
        uint64_t v75 = (llvm::MDNode **)v144;
        unint64_t v76 = (llvm::MDNode **)((char *)v144 + 16 * v145);
        do
        {
          llvm::Instruction::setMetadata((llvm::Instruction *)v29, *(_DWORD *)v75, v75[1]);
          v75 += 2;
        }
        while (v75 != v76);
      }
      uint64_t v30 = *(void *)(v105 + 88);
      __int16 v114 = 257;
      if (*(void *)v29 != v30)
      {
        if (v28[48] > 0x14u)
        {
          __int16 v130 = 257;
          int v29 = (unsigned __int8 *)llvm::CastInst::Create(40, (uint64_t)v29, v30, (const char **)v128, 0);
          (*((void (**)(void **, unsigned __int8 *, void **, uint64_t, char *))*v151 + 2))(v151, v29, &v111, v147, v148);
          uint64_t v31 = v105;
          if (v145)
          {
            unint64_t v86 = (llvm::MDNode **)v144;
            unint64_t v87 = (llvm::MDNode **)((char *)v144 + 16 * v145);
            do
            {
              llvm::Instruction::setMetadata((llvm::Instruction *)v29, *(_DWORD *)v86, v86[1]);
              v86 += 2;
            }
            while (v86 != v87);
          }
          goto LABEL_39;
        }
        int v29 = (unsigned __int8 *)(*((uint64_t (**)(void **, uint64_t, unsigned __int8 *, uint64_t))*v150 + 28))(v150, 40, v29, v30);
        if (v29) {
          BOOL v39 = v29[16] >= 0x1Cu;
        }
        else {
          BOOL v39 = 0;
        }
        uint64_t v31 = v105;
        if (!v39)
        {
LABEL_39:
          uint64_t v40 = *(void *)(v31 + 88);
          __int16 v114 = 257;
          if (*(void *)v20 != v40)
          {
            if (v20[16] <= 0x14u)
            {
              unint64_t v20 = (unsigned __int8 *)(*((uint64_t (**)(void **, uint64_t, unsigned __int8 *, uint64_t))*v150
                                        + 28))(v150, 47, v20, v40);
              if (v20) {
                BOOL v41 = v20[16] >= 0x1Cu;
              }
              else {
                BOOL v41 = 0;
              }
              if (v41)
              {
                (*((void (**)(void **, unsigned __int8 *, void **, uint64_t, char *))*v151 + 2))(v151, v20, &v111, v147, v148);
                if (v145)
                {
                  uint64_t v93 = (llvm::MDNode **)v144;
                  unint64_t v94 = (llvm::MDNode **)((char *)v144 + 16 * v145);
                  do
                  {
                    llvm::Instruction::setMetadata((llvm::Instruction *)v20, *(_DWORD *)v93, v93[1]);
                    v93 += 2;
                  }
                  while (v93 != v94);
                  uint64_t v31 = v105;
                }
                else
                {
                  uint64_t v31 = v105;
                }
              }
            }
            else
            {
              __int16 v130 = 257;
              unint64_t v20 = (unsigned __int8 *)llvm::CastInst::Create(47, (uint64_t)v20, v40, (const char **)v128, 0);
              (*((void (**)(void **, unsigned __int8 *, void **, uint64_t, char *))*v151 + 2))(v151, v20, &v111, v147, v148);
              if (v145)
              {
                BOOL v88 = (llvm::MDNode **)v144;
                unint64_t v89 = (llvm::MDNode **)((char *)v144 + 16 * v145);
                do
                {
                  llvm::Instruction::setMetadata((llvm::Instruction *)v20, *(_DWORD *)v88, v88[1]);
                  v88 += 2;
                }
                while (v88 != v89);
              }
            }
          }
          __int16 v130 = 257;
          uint64_t v42 = sub_1CB844A3C((uint64_t)&v144, v20, (uint64_t)v29, (uint64_t)v128, 0, 0);
          long long v36 = (unsigned __int8 *)v42;
          uint64_t v43 = *(void *)(v31 + 64);
          __int16 v114 = 257;
          if (*(void *)v42 != v43)
          {
            if (*((unsigned __int8 *)v42 + 16) <= 0x14u)
            {
              long long v36 = (unsigned __int8 *)(*((uint64_t (**)(void **, uint64_t, llvm::Instruction *, uint64_t))*v150
                                        + 28))(v150, 48, v42, v43);
              if (v36) {
                BOOL v46 = v36[16] >= 0x1Cu;
              }
              else {
                BOOL v46 = 0;
              }
              if (v46)
              {
                (*((void (**)(void **, unsigned __int8 *, void **, uint64_t, char *))*v151 + 2))(v151, v36, &v111, v147, v148);
                if (v145)
                {
                  uint64_t v95 = (llvm::MDNode **)v144;
                  unint64_t v96 = (llvm::MDNode **)((char *)v144 + 16 * v145);
                  do
                  {
                    llvm::Instruction::setMetadata((llvm::Instruction *)v36, *(_DWORD *)v95, v95[1]);
                    v95 += 2;
                  }
                  while (v95 != v96);
                }
              }
            }
            else
            {
              __int16 v130 = 257;
              long long v36 = (unsigned __int8 *)llvm::CastInst::Create(48, (uint64_t)v42, v43, (const char **)v128, 0);
              (*((void (**)(void **, unsigned __int8 *, void **, uint64_t, char *))*v151 + 2))(v151, v36, &v111, v147, v148);
              if (v145)
              {
                BOOL v44 = (llvm::MDNode **)v144;
                uint64_t v45 = (llvm::MDNode **)((char *)v144 + 16 * v145);
                do
                {
                  llvm::Instruction::setMetadata((llvm::Instruction *)v36, *(_DWORD *)v44, v44[1]);
                  v44 += 2;
                }
                while (v44 != v45);
              }
            }
          }
          goto LABEL_57;
        }
        (*((void (**)(void **, unsigned __int8 *, void **, uint64_t, char *))*v151 + 2))(v151, v29, &v111, v147, v148);
        if (v145)
        {
          unint64_t v91 = (llvm::MDNode **)v144;
          unint64_t v92 = (llvm::MDNode **)((char *)v144 + 16 * v145);
          do
          {
            llvm::Instruction::setMetadata((llvm::Instruction *)v29, *(_DWORD *)v91, v91[1]);
            v91 += 2;
          }
          while (v91 != v92);
          uint64_t v31 = v105;
          goto LABEL_39;
        }
      }
      uint64_t v31 = v105;
      goto LABEL_39;
    }
    int v69 = *(unsigned __int8 *)v111;
    if ((v69 - 4) > 0x1E)
    {
      if ((v69 - 3) >= 0xFFFFFFFE) {
        BOOL v80 = v111;
      }
      else {
        BOOL v80 = 0;
      }
      if ((v69 - 3) < 0xFFFFFFFE)
      {
        if (v69 == 3) {
          *((void *)v111 + 1) = 0;
        }
        goto LABEL_13;
      }
      unint64_t v71 = (unint64_t)v80 + 8;
    }
    else
    {
      if ((*((unsigned char *)v111 + 1) & 0x7F) != 2 && !*((_DWORD *)v111 + 3)) {
        goto LABEL_13;
      }
      uint64_t v70 = *((void *)v111 + 2);
      if ((v70 & 4) == 0) {
        goto LABEL_13;
      }
      unint64_t v71 = v70 & 0xFFFFFFFFFFFFFFF8;
      if (!v71) {
        goto LABEL_13;
      }
    }
    v128[0] = &v111;
    sub_1CC5FA668(v71 + 16, v128);
    goto LABEL_13;
  }
  return result;
}

llvm::Value *sub_1CC9C91F4(llvm::Value *result, uint64_t a2, const llvm::APInt *a3)
{
  uint64_t v3 = result;
  uint64_t v4 = **(uint64_t ***)result;
  uint64_t v5 = *v4;
  BOOL v6 = *(llvm::Value **)(*v4 + 1560);
  if (!v6)
  {
    unint64_t v11 = *(llvm::ConstantInt **)(v5 + 1888);
    unsigned int v12 = *(_DWORD *)(v5 + 1896);
    unsigned int v15 = v12 >> 8;
    if (v12 >> 8 > 0x40) {
      operator new[]();
    }
    unint64_t v13 = 0xFFFFFFFFFFFFFFFFLL >> ~(BYTE1(v12) + 63);
    if (v12 <= 0xFF) {
      LOBYTE(v13) = 0;
    }
    long long v14 = (llvm::Value *)(v13 & 1);
    uint64_t result = (llvm::Value *)llvm::ConstantInt::get(v11, (llvm::LLVMContext *)&v14, a3);
    BOOL v6 = result;
    if (v15 >= 0x41)
    {
      uint64_t result = v14;
      if (v14) {
        uint64_t result = (llvm::Value *)MEMORY[0x1D25D9CB0](v14, 0x1000C8000313F17);
      }
    }
    *(void *)(v5 + 1560) = v6;
  }
  uint64_t v7 = (void *)*((void *)v3 + 34);
  if (v7 != (void *)((char *)v3 + 280))
  {
    do
    {
      if (!*((_DWORD *)v7 + 10))
      {
        llvm::Value::doRAUW((llvm::ValueAsMetadata *)v7[4], v6, (llvm::Value *)1);
        llvm::SymbolTableListTraits<llvm::Instruction>::removeNodeFromList();
      }
      uint64_t v8 = (void *)v7[1];
      if (v8)
      {
        do
        {
          unint64_t v9 = v8;
          uint64_t v8 = (void *)*v8;
        }
        while (v8);
      }
      else
      {
        do
        {
          unint64_t v9 = (void *)v7[2];
          BOOL v10 = *v9 == (void)v7;
          uint64_t v7 = v9;
        }
        while (!v10);
      }
      uint64_t v7 = v9;
    }
    while (v9 != (void *)((char *)v3 + 280));
  }
  return result;
}

uint64_t sub_1CC9C93B4(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  BOOL v80 = 0;
  int v6 = sub_1CC9CDA58(*(void *)a1, *(_DWORD *)(a1 + 16), v4, v5, &v80);
  uint64_t v7 = v80;
  if (v6)
  {
    unsigned int v8 = v80[4];
    uint64_t v9 = *(void *)(a1 + 24);
    return v9 + 120 * v8 + 16;
  }
  uint64_t v57 = v80;
  int v10 = *(_DWORD *)(a1 + 8);
  uint64_t v11 = *(unsigned int *)(a1 + 16);
  if (4 * v10 + 4 >= (3 * v11))
  {
    int v12 = 2 * v11;
    goto LABEL_55;
  }
  int v12 = *(_DWORD *)(a1 + 16);
  if ((int)v11 + ~v10 - *(_DWORD *)(a1 + 12) <= v11 >> 3)
  {
LABEL_55:
    uint64_t v40 = *(void *)a1;
    unint64_t v41 = (v12 - 1) | ((unint64_t)(v12 - 1) >> 1);
    unint64_t v42 = v41 | (v41 >> 2) | ((v41 | (v41 >> 2)) >> 4);
    int v43 = ((v42 | (v42 >> 8)) >> 16) | v42 | (v42 >> 8);
    if ((v43 + 1) > 0x40) {
      unsigned int v44 = v43 + 1;
    }
    else {
      unsigned int v44 = 64;
    }
    *(_DWORD *)(a1 + 16) = v44;
    uint64_t v45 = operator new(24 * v44, (std::align_val_t)8uLL);
    *(void *)a1 = v45;
    if (v40)
    {
      *(void *)(a1 + 8) = 0;
      uint64_t v46 = *(unsigned int *)(a1 + 16);
      if (v46)
      {
        uint64_t v47 = 24 * v46;
        do
        {
          *uint64_t v45 = xmmword_1CFB1B710;
          uint64_t v45 = (_OWORD *)((char *)v45 + 24);
          v47 -= 24;
        }
        while (v47);
      }
      if (v11)
      {
        uint64_t v48 = 24 * v11;
        uint64_t v49 = v40;
        do
        {
          uint64_t v50 = *(void *)v49;
          uint64_t v51 = *(void *)(v49 + 8);
          if ((*(void *)v49 != -4096 || v51 != -1) && (v50 != -8192 || v51 != -2))
          {
            *(void *)&long long v69 = 0;
            sub_1CC9CDA58(*(void *)a1, *(_DWORD *)(a1 + 16), v50, v51, &v69);
            uint64_t v54 = v69;
            *(_OWORD *)long long v69 = *(_OWORD *)v49;
            *(_DWORD *)(v54 + 16) = *(_DWORD *)(v49 + 16);
            ++*(_DWORD *)(a1 + 8);
          }
          v49 += 24;
          v48 -= 24;
        }
        while (v48);
      }
      MEMORY[0x1D25D9CD0](v40, 8);
      uint64_t v45 = *(_OWORD **)a1;
      LODWORD(v55) = *(_DWORD *)(a1 + 16);
    }
    else
    {
      *(void *)(a1 + 8) = 0;
      uint64_t v55 = *(unsigned int *)(a1 + 16);
      if (v55)
      {
        uint64_t v56 = 0;
        do
        {
          *(_OWORD *)((char *)v45 + v56) = xmmword_1CFB1B710;
          v56 += 24;
        }
        while (24 * v55 != v56);
      }
    }
    sub_1CC9CDA58((uint64_t)v45, v55, v4, v5, &v57);
    int v10 = *(_DWORD *)(a1 + 8);
    uint64_t v7 = v57;
  }
  *(_DWORD *)(a1 + 8) = v10 + 1;
  if (*v7 != -4096 || v7[1] != -1) {
    --*(_DWORD *)(a1 + 12);
  }
  void *v7 = v4;
  v7[1] = v5;
  *((_DWORD *)v7 + 4) = 0;
  v68[0] = 0;
  v68[1] = 0;
  uint64_t v67 = v68;
  long long v69 = *(_OWORD *)a2;
  v70[1] = 0;
  uint64_t v71 = 0;
  v70[0] = 0;
  uint64_t v59 = 0;
  uint64_t v60 = 1;
  uint64_t v57 = 0;
  unint64_t v58 = 0;
  __int16 v72 = 1;
  long long v73 = 0uLL;
  unint64_t v61 = 0;
  uint64_t v62 = 0;
  uint64_t v74 = 0;
  long long __p = 0uLL;
  uint64_t v76 = 0;
  uint64_t v63 = 0;
  uint64_t v64 = 0;
  uint64_t v65 = 0;
  uint64_t v66 = 0;
  uint64_t v78 = 0;
  uint64_t v79 = 0;
  int v77 = &v78;
  unsigned int v15 = *(char **)(a1 + 32);
  unint64_t v14 = *(void *)(a1 + 40);
  if ((unint64_t)v15 >= v14)
  {
    uint64_t v19 = *(char **)(a1 + 24);
    unint64_t v20 = 0xEEEEEEEEEEEEEEEFLL * ((v15 - v19) >> 3) + 1;
    if (v20 > 0x222222222222222) {
      abort();
    }
    unint64_t v21 = 0xEEEEEEEEEEEEEEEFLL * ((uint64_t)(v14 - (void)v19) >> 3);
    if (2 * v21 > v20) {
      unint64_t v20 = 2 * v21;
    }
    if (v21 >= 0x111111111111111) {
      unint64_t v22 = 0x222222222222222;
    }
    else {
      unint64_t v22 = v20;
    }
    if (v22 > 0x222222222222222) {
      sub_1CB833614();
    }
    uint64_t v23 = 120 * v22;
    unint64_t v24 = (char *)operator new(120 * v22);
    uint64_t v25 = &v24[8 * ((v15 - v19) >> 3)];
    *(_OWORD *)uint64_t v25 = *(_OWORD *)a2;
    int v26 = &v24[v23];
    *((void *)v25 + 3) = 0;
    *((void *)v25 + 4) = 0;
    *((void *)v25 + 2) = 0;
    v70[1] = 0;
    uint64_t v71 = 0;
    v70[0] = 0;
    *((_WORD *)v25 + 20) = 1;
    *((void *)v25 + 6) = 0;
    *((void *)v25 + 7) = 0;
    uint64_t v74 = 0;
    long long v73 = 0uLL;
    *((void *)v25 + 8) = 0;
    *((void *)v25 + 9) = 0;
    *((void *)v25 + 10) = 0;
    *((void *)v25 + 11) = 0;
    long long __p = 0uLL;
    uint64_t v76 = 0;
    *((void *)v25 + 14) = 0;
    *((void *)v25 + 13) = 0;
    char v27 = v25 + 120;
    *((void *)v25 + 12) = v25 + 104;
    if (v15 == v19)
    {
      *(void *)(a1 + 24) = v25;
      *(void *)(a1 + 32) = v27;
      *(void *)(a1 + 40) = v26;
    }
    else
    {
      uint64_t v28 = 0;
      do
      {
        int v29 = &v25[v28];
        uint64_t v30 = &v15[v28];
        *(_OWORD *)(v29 - 120) = *(_OWORD *)&v15[v28 - 120];
        *(_OWORD *)(v29 - 104) = *(_OWORD *)&v15[v28 - 104];
        *((void *)v29 - 11) = *(void *)&v15[v28 - 88];
        *((void *)v30 - 13) = 0;
        *((void *)v30 - 12) = 0;
        *((void *)v30 - 11) = 0;
        *((_WORD *)v29 - 40) = *(_WORD *)&v15[v28 - 80];
        *(_OWORD *)(v29 - 72) = *(_OWORD *)&v15[v28 - 72];
        *((void *)v29 - 7) = *(void *)&v15[v28 - 56];
        *((void *)v30 - 9) = 0;
        *((void *)v30 - 8) = 0;
        *((void *)v30 - 7) = 0;
        *((_OWORD *)v29 - 3) = *(_OWORD *)&v15[v28 - 48];
        *((void *)v29 - 4) = *(void *)&v15[v28 - 32];
        *((void *)v30 - 6) = 0;
        *((void *)v30 - 5) = 0;
        *((void *)v30 - 4) = 0;
        *((void *)v29 - 3) = *(void *)&v15[v28 - 24];
        uint64_t v31 = &v15[v28 - 16];
        uint64_t v32 = *(void *)v31;
        *(void *)&v25[v28 - 16] = *(void *)v31;
        uint64_t v33 = (uint64_t)&v25[v28 - 16];
        uint64_t v34 = *(void *)&v15[v28 - 8];
        *((void *)v29 - 1) = v34;
        if (v34)
        {
          *(void *)(v32 + 16) = v33;
          *((void *)v30 - 3) = v31;
          *(void *)uint64_t v31 = 0;
          *(void *)&v15[v28 - 8] = 0;
        }
        else
        {
          *((void *)v29 - 3) = v33;
        }
        v28 -= 120;
      }
      while (&v15[v28] != v19);
      unsigned int v15 = *(char **)(a1 + 24);
      uint64_t v35 = *(_OWORD **)(a1 + 32);
      *(void *)(a1 + 24) = &v25[v28];
      *(void *)(a1 + 32) = v27;
      *(void *)(a1 + 40) = v26;
      while (v35 != (_OWORD *)v15)
      {
        sub_1CC9C7E80(*((void **)v35 - 2));
        long long v36 = (void *)*((void *)v35 - 6);
        if (v36)
        {
          *((void *)v35 - 5) = v36;
          operator delete(v36);
        }
        long long v37 = (void *)*((void *)v35 - 9);
        if (v37)
        {
          *((void *)v35 - 8) = v37;
          operator delete(v37);
        }
        long long v38 = (void *)*((void *)v35 - 13);
        if (v38)
        {
          *((void *)v35 - 12) = v38;
          operator delete(v38);
        }
        uint64_t v35 = (_OWORD *)((char *)v35 - 120);
      }
    }
    if (v15) {
      operator delete(v15);
    }
  }
  else
  {
    *(_OWORD *)unsigned int v15 = *(_OWORD *)a2;
    *((void *)v15 + 3) = 0;
    *((void *)v15 + 4) = 0;
    *((void *)v15 + 2) = 0;
    *((_OWORD *)v15 + 1) = *(_OWORD *)v70;
    *((void *)v15 + 4) = v71;
    v70[0] = 0;
    v70[1] = 0;
    uint64_t v71 = 0;
    *((_WORD *)v15 + 20) = v72;
    *((void *)v15 + 7) = 0;
    *((void *)v15 + 8) = 0;
    *((void *)v15 + 6) = 0;
    *((_OWORD *)v15 + 3) = v73;
    *((void *)v15 + 8) = v74;
    *((void *)v15 + 9) = 0;
    long long v73 = 0uLL;
    uint64_t v74 = 0;
    *((void *)v15 + 10) = 0;
    *((void *)v15 + 11) = 0;
    *(_OWORD *)(v15 + 72) = __p;
    *((void *)v15 + 11) = v76;
    long long __p = 0uLL;
    uint64_t v76 = 0;
    *((void *)v15 + 12) = v77;
    uint64_t v16 = v78;
    *((void *)v15 + 13) = v78;
    uint64_t v17 = v15 + 104;
    uint64_t v18 = v79;
    *((void *)v15 + 14) = v79;
    if (v18)
    {
      v16[2] = v17;
      int v77 = &v78;
      uint64_t v78 = 0;
      uint64_t v79 = 0;
    }
    else
    {
      *((void *)v15 + 12) = v17;
    }
    char v27 = v15 + 120;
  }
  *(void *)(a1 + 32) = v27;
  sub_1CC9C7E80(v78);
  if ((void)__p)
  {
    *((void *)&__p + 1) = __p;
    operator delete((void *)__p);
  }
  if ((void)v73)
  {
    *((void *)&v73 + 1) = v73;
    operator delete((void *)v73);
  }
  if (v70[0])
  {
    v70[1] = v70[0];
    operator delete(v70[0]);
  }
  sub_1CC9C7E80(v68[0]);
  if (v64)
  {
    uint64_t v65 = v64;
    operator delete(v64);
  }
  if (v61)
  {
    uint64_t v62 = v61;
    operator delete(v61);
  }
  if (v57)
  {
    unint64_t v58 = v57;
    operator delete(v57);
  }
  uint64_t v9 = *(void *)(a1 + 24);
  unsigned int v8 = -286331153 * ((unint64_t)(*(void *)(a1 + 32) - v9) >> 3) - 1;
  *((_DWORD *)v7 + 4) = v8;
  return v9 + 120 * v8 + 16;
}

char *sub_1CC9C9990(uint64_t **a1, void *a2, uint64_t a3)
{
  uint64_t v7 = a1 + 1;
  int v6 = (char *)a1[1];
  if (v6)
  {
    do
    {
      while (1)
      {
        unsigned int v8 = v6;
        uint64_t v9 = (unint64_t *)*((void *)v6 + 4);
        int v10 = (unint64_t *)*((void *)v8 + 5);
        if (v9 == v10) {
          break;
        }
        uint64_t v11 = v9 + 1;
        int v12 = a2;
        while (v12 != (unint64_t *)a3)
        {
          unint64_t v13 = *v12;
          unint64_t v14 = *(v11 - 1);
          if (*v12 < v14) {
            break;
          }
          ++v12;
          if (v14 < v13 || v11++ == v10) {
            goto LABEL_11;
          }
        }
        int v6 = *(char **)v8;
        uint64_t v7 = (uint64_t **)v8;
        if (!*(void *)v8) {
          goto LABEL_26;
        }
      }
LABEL_11:
      if (a2 == (void *)a3) {
        return v8 + 56;
      }
      uint64_t v16 = (char *)(a2 + 1);
      while (v9 != v10)
      {
        unint64_t v17 = *v9;
        unint64_t v18 = *((void *)v16 - 1);
        if (*v9 < v18) {
          break;
        }
        ++v9;
        BOOL v19 = v18 < v17 || v16 == (char *)a3;
        v16 += 8;
        if (v19) {
          return v8 + 56;
        }
      }
      int v6 = (char *)*((void *)v8 + 1);
    }
    while (v6);
    uint64_t v7 = (uint64_t **)(v8 + 8);
  }
  else
  {
    unsigned int v8 = (char *)(a1 + 1);
  }
LABEL_26:
  unint64_t v20 = v8;
  unsigned int v8 = (char *)operator new(0x88uLL);
  *((void *)v8 + 5) = 0;
  *((void *)v8 + 6) = 0;
  *((void *)v8 + 4) = 0;
  sub_1CBFCBA2C((void *)v8 + 4, a2, a3, (a3 - (uint64_t)a2) >> 3);
  *(_OWORD *)(v8 + 72) = 0u;
  *(_OWORD *)(v8 + 56) = 0u;
  v8[80] = 1;
  *(void *)unsigned int v8 = 0;
  *((void *)v8 + 1) = 0;
  *(_OWORD *)(v8 + 88) = 0u;
  *(_OWORD *)(v8 + 104) = 0u;
  *(_OWORD *)(v8 + 120) = 0u;
  *((void *)v8 + 2) = v20;
  void *v7 = (uint64_t *)v8;
  unint64_t v21 = (uint64_t *)**a1;
  unint64_t v22 = (uint64_t *)v8;
  if (v21)
  {
    *a1 = v21;
    unint64_t v22 = *v7;
  }
  sub_1CB8358B8(a1[1], v22);
  a1[2] = (uint64_t *)((char *)a1[2] + 1);
  return v8 + 56;
}

void sub_1CC9C9B08(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  if (*(_DWORD *)(*(void *)a3 + 8) >> 8 <= 0x40u
    && *(void *)a3 != 0
    && *(_DWORD *)(*(void *)a3 + 8) == 13)
  {
    int v10 = *(unsigned __int8 *)(a3 + 16);
    if (v10 == 84) {
      uint64_t v11 = 0;
    }
    else {
      uint64_t v11 = v10 == 39 ? (*(_DWORD *)(a3 + 80) + 1) : 2;
    }
    int v12 = *(_DWORD *)(a3 + 20);
    if (v12 < 0 && (uint64_t v45 = a3 - 32 * (v12 & 0x7FFFFFF), v46 = *(void *)(v45 - 8), (v46 & 0xFFFFFFFF0) != 0))
    {
      uint64_t v14 = -(uint64_t)(v12 & 0x7FFFFFF);
      uint64_t v13 = (*(_DWORD *)(v45 - 12) - *(_DWORD *)(v45 - v46));
    }
    else
    {
      uint64_t v13 = 0;
      uint64_t v14 = -(uint64_t)(v12 & 0x7FFFFFF);
    }
    uint64_t v15 = a3 - 32 * v11 - 32 * v13 - 32;
    uint64_t v16 = a3 + 32 * v14;
    if (v15 != v16)
    {
      if (v10 == 84)
      {
        uint64_t v17 = 0;
      }
      else if (v10 == 39)
      {
        uint64_t v17 = (*(_DWORD *)(a3 + 80) + 1);
      }
      else
      {
        uint64_t v17 = 2;
      }
      if (v12 < 0 && (uint64_t v47 = *(void *)(v16 - 8), (v47 & 0xFFFFFFFF0) != 0)) {
        uint64_t v18 = (*(_DWORD *)(v16 - 12) - *(_DWORD *)(v16 - v47));
      }
      else {
        uint64_t v18 = 0;
      }
      uint64_t v19 = a3 - 32 * v17 - 32 * v18 - 32;
      unint64_t v20 = (uint64_t *)(v16 + 32);
      if (v16 + 32 == v19)
      {
        uint64_t v27 = 0;
        uint64_t v23 = 0;
LABEL_47:
        a1 = sub_1CC9C9990((uint64_t **)a1 + 10, v23, v27);
      }
      else
      {
        unint64_t v21 = 0;
        unint64_t v22 = 0;
        uint64_t v23 = 0;
        while (1)
        {
          uint64_t v24 = *v20;
          BOOL v25 = *v20 && *(unsigned char *)(*v20 + 16) == 16;
          if (!v25 || *(_DWORD *)(v24 + 32) > 0x40u) {
            break;
          }
          uint64_t v26 = *(void *)(v24 + 24);
          if (v21 >= v22)
          {
            uint64_t v28 = (v21 - v23) >> 3;
            unint64_t v29 = v28 + 1;
            if ((unint64_t)(v28 + 1) >> 61) {
              goto LABEL_68;
            }
            if ((v22 - v23) >> 2 > v29) {
              unint64_t v29 = (v22 - v23) >> 2;
            }
            if ((unint64_t)(v22 - v23) >= 0x7FFFFFFFFFFFFFF8) {
              unint64_t v30 = 0x1FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v30 = v29;
            }
            if (v30)
            {
              if (v30 >> 61) {
                goto LABEL_69;
              }
              uint64_t v31 = (char *)operator new(8 * v30);
            }
            else
            {
              uint64_t v31 = 0;
            }
            uint64_t v32 = &v31[8 * v28];
            *(void *)uint64_t v32 = v26;
            uint64_t v27 = (uint64_t)(v32 + 8);
            while (v21 != v23)
            {
              uint64_t v33 = *((void *)v21 - 1);
              v21 -= 8;
              *((void *)v32 - 1) = v33;
              v32 -= 8;
            }
            unint64_t v22 = &v31[8 * v30];
            if (v23) {
              operator delete(v23);
            }
            uint64_t v23 = v32;
          }
          else
          {
            *(void *)unint64_t v21 = v26;
            uint64_t v27 = (uint64_t)(v21 + 8);
          }
          v20 += 4;
          unint64_t v21 = (char *)v27;
          if (v20 == (uint64_t *)v19) {
            goto LABEL_47;
          }
        }
      }
      uint64_t v6 = a2;
      uint64_t v4 = a4;
      if (v23) {
        operator delete(v23);
      }
    }
  }
  a1[24] = 0;
  uint64_t v34 = (void *)*((void *)a1 + 1);
  unint64_t v35 = *((void *)a1 + 2);
  if ((unint64_t)v34 >= v35)
  {
    long long v37 = *(void **)a1;
    unint64_t v38 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v34 - *(void *)a1) >> 3);
    unint64_t v39 = v38 + 1;
    if (v38 + 1 > 0xAAAAAAAAAAAAAAALL) {
LABEL_68:
    }
      abort();
    unint64_t v40 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v35 - (void)v37) >> 3);
    if (2 * v40 > v39) {
      unint64_t v39 = 2 * v40;
    }
    if (v40 >= 0x555555555555555) {
      unint64_t v41 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v41 = v39;
    }
    if (v41)
    {
      if (v41 > 0xAAAAAAAAAAAAAAALL) {
LABEL_69:
      }
        sub_1CB833614();
      unint64_t v42 = (char *)operator new(24 * v41);
      uint64_t v34 = (void *)*((void *)a1 + 1);
    }
    else
    {
      unint64_t v42 = 0;
    }
    int v43 = &v42[24 * v38];
    *(void *)int v43 = v6;
    *((void *)v43 + 1) = a3;
    *((void *)v43 + 2) = v4;
    long long v36 = v43 + 24;
    if (v34 != v37)
    {
      do
      {
        long long v44 = *(_OWORD *)(v34 - 3);
        *((void *)v43 - 1) = *(v34 - 1);
        *(_OWORD *)(v43 - 24) = v44;
        v43 -= 24;
        v34 -= 3;
      }
      while (v34 != v37);
      long long v37 = *(void **)a1;
    }
    *(void *)a1 = v43;
    *((void *)a1 + 1) = v36;
    *((void *)a1 + 2) = &v42[24 * v41];
    if (v37) {
      operator delete(v37);
    }
  }
  else
  {
    *uint64_t v34 = v6;
    v34[1] = a3;
    long long v36 = v34 + 3;
    v34[2] = v4;
  }
  *((void *)a1 + 1) = v36;
}

void sub_1CC9C9E74(uint64_t a1, uint64_t a2, llvm::Value *this, uint64_t a4)
{
  uint64_t v28 = this;
  uint64_t v7 = llvm::Value::stripPointerCasts(this);
  if ((*((unsigned char *)v7 + 23) & 0x10) == 0)
  {
    size_t v18 = 0;
    uint64_t v17 = &byte_1CFBCE98E;
    goto LABEL_10;
  }
  uint64_t v8 = ***(void ***)v7;
  uint64_t v9 = *(void *)(v8 + 152);
  uint64_t v10 = *(unsigned int *)(v8 + 168);
  if (!v10) {
    goto LABEL_8;
  }
  LODWORD(v11) = (v10 - 1) & ((v7 >> 4) ^ (v7 >> 9));
  int v12 = (llvm::Value **)(v9 + 16 * v11);
  uint64_t v13 = *v12;
  if (*v12 != v7)
  {
    int v14 = 1;
    while (v13 != (llvm::Value *)-4096)
    {
      int v15 = v11 + v14++;
      uint64_t v11 = v15 & (v10 - 1);
      uint64_t v13 = *(llvm::Value **)(v9 + 16 * v11);
      if (v13 == v7)
      {
        int v12 = (llvm::Value **)(v9 + 16 * v11);
        goto LABEL_9;
      }
    }
LABEL_8:
    int v12 = (llvm::Value **)(v9 + 16 * v10);
  }
LABEL_9:
  uint64_t v16 = v12[1];
  size_t v19 = *(void *)v16;
  uint64_t v17 = (char *)v16 + 16;
  size_t v18 = v19;
LABEL_10:
  uint64_t v20 = *(void *)(a1 + 296);
  uint64_t v21 = *(void *)(a1 + 304);
  while (v20 != v21)
  {
    if (llvm::GlobPattern::match(v20, (uint64_t)v17, v18)) {
      return;
    }
    v20 += 96;
  }
  v27[0] = a1;
  v27[1] = (uint64_t)&v28;
  v27[2] = a4;
  sub_1CC9CBCE4(v27, a2);
  unint64_t v22 = *(void **)(a2 + 80);
  uint64_t v23 = (void *)(a2 + 88);
  if (v22 != v23)
  {
    do
    {
      sub_1CC9CBCE4(v27, (uint64_t)(v22 + 7));
      uint64_t v24 = (void *)v22[1];
      if (v24)
      {
        do
        {
          BOOL v25 = v24;
          uint64_t v24 = (void *)*v24;
        }
        while (v24);
      }
      else
      {
        do
        {
          BOOL v25 = (void *)v22[2];
          BOOL v26 = *v25 == (void)v22;
          unint64_t v22 = v25;
        }
        while (!v26);
      }
      unint64_t v22 = v25;
    }
    while (v25 != v23);
  }
}

void sub_1CC9C9FE8(uint64_t a1, long long **a2, const llvm::APInt *a3, size_t a4, uint64_t a5)
{
  uint64_t v6 = *a2;
  uint64_t v5 = a2[1];
  if (*a2 != v5)
  {
    uint64_t v34 = (llvm::SmallPtrSetImplBase *)(a1 + 176);
    do
    {
      long long v37 = *v6;
      uint64_t v38 = *((void *)v6 + 2);
      uint64_t v10 = (llvm::ConstantInt ***)*((void *)&v37 + 1);
      uint64_t v11 = *(void *)(a1 + 184);
      uint64_t v12 = *(unsigned int *)(a1 + 196);
      if (v11 == *(void *)(a1 + 176))
      {
        if (v12)
        {
          uint64_t v13 = 0;
          uint64_t v14 = 8 * v12;
          int v15 = *(void **)(a1 + 184);
          do
          {
            if (*v15 == *((void *)&v37 + 1)) {
              goto LABEL_41;
            }
            if (*v15 == -2) {
              uint64_t v13 = v15;
            }
            ++v15;
            v14 -= 8;
          }
          while (v14);
          if (v13)
          {
            void *v13 = *((void *)&v37 + 1);
            --*(_DWORD *)(a1 + 200);
            goto LABEL_35;
          }
        }
        unsigned int v16 = *(_DWORD *)(a1 + 192);
        if (v12 < v16)
        {
          *(_DWORD *)(a1 + 196) = v12 + 1;
          *(void *)(v11 + 8 * v12) = v10;
          goto LABEL_35;
        }
      }
      else
      {
        unsigned int v16 = *(_DWORD *)(a1 + 192);
      }
      if (3 * v16 <= 4 * ((int)v12 - *(_DWORD *)(a1 + 200)))
      {
        if (v16 >= 0x40) {
          v16 *= 2;
        }
        else {
          unsigned int v16 = 128;
        }
      }
      else if (v16 - v12 >= v16 >> 3)
      {
        goto LABEL_16;
      }
      llvm::SmallPtrSetImplBase::Grow(v34, v16);
      unsigned int v16 = *(_DWORD *)(a1 + 192);
      uint64_t v11 = *(void *)(a1 + 184);
LABEL_16:
      unsigned int v17 = v16 - 1;
      unsigned int v18 = (v16 - 1) & ((DWORD2(v37) >> 4) ^ (DWORD2(v37) >> 9));
      size_t v19 = (llvm::ConstantInt ****)(v11 + 8 * v18);
      uint64_t v20 = *v19;
      if (*v19 == (llvm::ConstantInt ***)-1)
      {
        uint64_t v21 = 0;
LABEL_28:
        if (v21) {
          BOOL v25 = v21;
        }
        else {
          BOOL v25 = v19;
        }
        if (*v25 != *((llvm::ConstantInt ****)&v37 + 1))
        {
          if (*v25 == (llvm::ConstantInt ***)-2) {
            --*(_DWORD *)(a1 + 200);
          }
          else {
            ++*(_DWORD *)(a1 + 196);
          }
          *BOOL v25 = v10;
LABEL_35:
          int v26 = *(unsigned __int8 *)(a1 + 104);
          uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 112);
          uint64_t v28 = *(void *)(a1 + 120);
          unint64_t v29 = *v10;
          unint64_t v30 = **v10;
          unint64_t v31 = *((unsigned int *)v29 + 2);
          unsigned int v40 = v31 >> 8;
          if (v31 >> 8 <= 0x40)
          {
            if (v31 <= 0xFF) {
              unint64_t v32 = 0;
            }
            else {
              unint64_t v32 = 0xFFFFFFFFFFFFFFFFLL >> ~(BYTE1(v31) + 63);
            }
            unint64_t v39 = v32 & a5;
            uint64_t v33 = (llvm::Value *)llvm::ConstantInt::get(v30, (llvm::LLVMContext *)&v39, a3);
            if (v40 >= 0x41)
            {
              if (v39) {
                MEMORY[0x1D25D9CB0](v39, 0x1000C8000313F17);
              }
            }
            sub_1CC9CC970((uint64_t)&v37, "uniform-ret-val", 0xFuLL, a3, a4, v26 != 0, v27, v28, v33);
          }
          operator new[]();
        }
      }
      else
      {
        uint64_t v21 = 0;
        int v22 = 1;
        while (v20 != *((llvm::ConstantInt ****)&v37 + 1))
        {
          if (v21) {
            BOOL v23 = 0;
          }
          else {
            BOOL v23 = v20 == (llvm::ConstantInt ***)-2;
          }
          if (v23) {
            uint64_t v21 = v19;
          }
          unsigned int v24 = v18 + v22++;
          unsigned int v18 = v24 & v17;
          size_t v19 = (llvm::ConstantInt ****)(v11 + 8 * (v24 & v17));
          uint64_t v20 = *v19;
          if (*v19 == (llvm::ConstantInt ***)-1) {
            goto LABEL_28;
          }
        }
      }
LABEL_41:
      uint64_t v6 = (long long *)((char *)v6 + 24);
    }
    while (v6 != v5);
  }
  *((unsigned char *)a2 + 24) = 1;
  a2[5] = a2[4];
}

llvm::detail::IEEEFloat *sub_1CC9CA304(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t *a4, uint64_t a5, const void *a6, size_t a7)
{
  uint64_t v8 = *(void *)a1;
  sub_1CC9CB9F8((uint64_t)__p, a2, a3, a4, a5, a6, a7);
  if (v17 >= 0) {
    uint64_t v9 = (unsigned __int8 *)__p;
  }
  else {
    uint64_t v9 = (unsigned __int8 *)__p[0];
  }
  if (v17 >= 0) {
    unint64_t v10 = v17 & 0x7F;
  }
  else {
    unint64_t v10 = (unint64_t)__p[1];
  }
  uint64_t inserted = llvm::Module::getOrInsertGlobal(v8, v9, v10, *(llvm::PointerType **)(a1 + 96));
  if (v17 < 0) {
    operator delete(__p[0]);
  }
  if (*((unsigned char *)inserted + 16) == 3 && inserted != 0)
  {
    int v13 = *((_DWORD *)inserted + 8);
    unsigned int v14 = v13 & 0xFFFFFFCF | 0x10;
    *((_DWORD *)inserted + 8) = v14;
    if ((v13 & 0xFu) - 7 < 2)
    {
LABEL_16:
      *((_DWORD *)inserted + 8) = v14 | 0x4000;
      return inserted;
    }
    if ((llvm::GlobalValue::hasExternalWeakLinkage(inserted) & 1) == 0)
    {
      unsigned int v14 = *((_DWORD *)inserted + 8);
      goto LABEL_16;
    }
  }
  return inserted;
}

void sub_1CC9CA3CC(uint64_t a1, uint64_t a2, void *a3, size_t a4, int a5, uint64_t a6)
{
  v75[1] = *MEMORY[0x1E4F143B8];
  uint64_t v6 = *(void *)a2;
  uint64_t v55 = *(void *)(a2 + 8);
  if (*(void *)a2 != v55)
  {
    uint64_t v50 = (llvm::SmallPtrSetImplBase *)(a1 + 176);
    if (a5) {
      __int16 v9 = 32;
    }
    else {
      __int16 v9 = 33;
    }
    __int16 v52 = v9;
    do
    {
      uint64_t v10 = *(void *)(v6 + 8);
      uint64_t v11 = *(void *)(a1 + 184);
      uint64_t v12 = *(unsigned int *)(a1 + 196);
      if (v11 == *(void *)(a1 + 176))
      {
        if (v12)
        {
          int v13 = 0;
          uint64_t v14 = 8 * v12;
          int v15 = *(void **)(a1 + 184);
          do
          {
            if (*v15 == v10) {
              goto LABEL_60;
            }
            if (*v15 == -2) {
              int v13 = v15;
            }
            ++v15;
            v14 -= 8;
          }
          while (v14);
          if (v13)
          {
            void *v13 = v10;
            --*(_DWORD *)(a1 + 200);
            goto LABEL_38;
          }
        }
        unsigned int v16 = *(_DWORD *)(a1 + 192);
        if (v12 < v16)
        {
          *(_DWORD *)(a1 + 196) = v12 + 1;
          *(void *)(v11 + 8 * v12) = v10;
          goto LABEL_38;
        }
      }
      else
      {
        unsigned int v16 = *(_DWORD *)(a1 + 192);
      }
      if (3 * v16 <= 4 * ((int)v12 - *(_DWORD *)(a1 + 200)))
      {
        if (v16 >= 0x40) {
          v16 *= 2;
        }
        else {
          unsigned int v16 = 128;
        }
      }
      else if (v16 - v12 >= v16 >> 3)
      {
        goto LABEL_19;
      }
      llvm::SmallPtrSetImplBase::Grow(v50, v16);
      unsigned int v16 = *(_DWORD *)(a1 + 192);
      uint64_t v11 = *(void *)(a1 + 184);
LABEL_19:
      unsigned int v17 = v16 - 1;
      unsigned int v18 = (v16 - 1) & ((v10 >> 4) ^ (v10 >> 9));
      size_t v19 = (void *)(v11 + 8 * v18);
      uint64_t v20 = *v19;
      if (*v19 == -1)
      {
        uint64_t v21 = 0;
LABEL_31:
        if (v21) {
          BOOL v25 = v21;
        }
        else {
          BOOL v25 = v19;
        }
        if (*v25 != v10)
        {
          if (*v25 == -2) {
            --*(_DWORD *)(a1 + 200);
          }
          else {
            ++*(_DWORD *)(a1 + 196);
          }
          *BOOL v25 = v10;
LABEL_38:
          uint64_t v26 = 0;
          uint64_t v27 = *(uint64_t ***)(v6 + 8);
          uint64_t v28 = **v27;
          uint64_t v60 = &v62;
          uint64_t v61 = 0x200000000;
          uint64_t v65 = v28;
          uint64_t v66 = &v74;
          uint64_t v67 = v75;
          uint64_t v68 = 0;
          int v69 = 0;
          __int16 v70 = 512;
          char v71 = 7;
          uint64_t v63 = 0;
          uint64_t v64 = 0;
          uint64_t v72 = 0;
          uint64_t v73 = 0;
          uint64_t v74 = &unk_1F2616E88;
          v75[0] = &unk_1F2617008;
          uint64_t v63 = v27[5];
          uint64_t v64 = v27 + 3;
          unint64_t v29 = (unsigned __int8 *)v27[6];
          v56[0] = v29;
          if (v29)
          {
            llvm::MetadataTracking::track((uint64_t)v56, v29, 2);
            uint64_t v26 = v56[0];
          }
          sub_1CB8461A4((uint64_t)&v60, 0, v26);
          if (!v56[0])
          {
LABEL_41:
            unint64_t v30 = *(uint64_t **)v6;
            uint64_t v31 = **(void **)v6;
            __int16 v57 = 257;
            unint64_t v32 = (llvm::Instruction *)a6;
            if (*(void *)a6 != v31)
            {
              if (*(unsigned __int8 *)(a6 + 16) <= 0x14u)
              {
                uint64_t v34 = (*((uint64_t (**)(void **, uint64_t, uint64_t, uint64_t))*v66 + 28))(v66, 49, a6, v31);
                unint64_t v32 = (llvm::Instruction *)v34;
                if (v34)
                {
                  if (*(unsigned __int8 *)(v34 + 16) >= 0x1Cu)
                  {
                    (*(void (**)(void *, uint64_t, void *, uint64_t *, uint64_t **))(*v67 + 16))(v67, v34, v56, v63, v64);
                    if (v61)
                    {
                      uint64_t v47 = (llvm::MDNode **)v60;
                      uint64_t v49 = (llvm::MDNode **)((char *)v60 + 16 * v61);
                      do
                      {
                        llvm::Instruction::setMetadata(v32, *(_DWORD *)v47, v47[1]);
                        v47 += 2;
                      }
                      while (v47 != v49);
                    }
                  }
                }
              }
              else
              {
                __int16 v59 = 257;
                unint64_t v32 = llvm::CastInst::Create(49, a6, v31, v58, 0);
                (*(void (**)(void *, llvm::Instruction *, void *, uint64_t *, uint64_t **))(*v67 + 16))(v67, v32, v56, v63, v64);
                if (v61)
                {
                  uint64_t v33 = (llvm::MDNode **)v60;
                  uint64_t v48 = (llvm::MDNode **)((char *)v60 + 16 * v61);
                  do
                  {
                    llvm::Instruction::setMetadata(v32, *(_DWORD *)v33, v33[1]);
                    v33 += 2;
                  }
                  while (v33 != v48);
                }
              }
            }
            __int16 v59 = 257;
            unint64_t v35 = sub_1CB845F20((uint64_t)&v60, v52, v30, (uint64_t)v32, (uint64_t)v58);
            long long v36 = (unsigned __int8 *)v35;
            uint64_t v37 = **(void **)(v6 + 8);
            __int16 v57 = 257;
            if (*(void *)v35 != v37)
            {
              if (*((unsigned __int8 *)v35 + 16) <= 0x14u)
              {
                long long v36 = (unsigned __int8 *)(*((uint64_t (**)(void **, uint64_t, llvm::Instruction *, uint64_t))*v66
                                          + 28))(v66, 39, v35, v37);
                if (v36) {
                  BOOL v40 = v36[16] >= 0x1Cu;
                }
                else {
                  BOOL v40 = 0;
                }
                if (v40)
                {
                  (*(void (**)(void *, unsigned __int8 *, void *, uint64_t *, uint64_t **))(*v67 + 16))(v67, v36, v56, v63, v64);
                  if (v61)
                  {
                    uint64_t v45 = (llvm::MDNode **)v60;
                    uint64_t v46 = (llvm::MDNode **)((char *)v60 + 16 * v61);
                    do
                    {
                      llvm::Instruction::setMetadata((llvm::Instruction *)v36, *(_DWORD *)v45, v45[1]);
                      v45 += 2;
                    }
                    while (v45 != v46);
                  }
                }
              }
              else
              {
                __int16 v59 = 257;
                long long v36 = (unsigned __int8 *)llvm::CastInst::Create(39, (uint64_t)v35, v37, v58, 0);
                (*(void (**)(void *, unsigned __int8 *, void *, uint64_t *, uint64_t **))(*v67 + 16))(v67, v36, v56, v63, v64);
                if (v61)
                {
                  uint64_t v38 = (llvm::MDNode **)v60;
                  unint64_t v39 = (llvm::MDNode **)((char *)v60 + 16 * v61);
                  do
                  {
                    llvm::Instruction::setMetadata((llvm::Instruction *)v36, *(_DWORD *)v38, v38[1]);
                    v38 += 2;
                  }
                  while (v38 != v39);
                }
              }
            }
            sub_1CC9CC970(v6, "unique-ret-val", 0xEuLL, a3, a4, *(unsigned __int8 *)(a1 + 104), *(uint64_t (**)(uint64_t, uint64_t))(a1 + 112), *(void *)(a1 + 120), (llvm::Value *)v36);
          }
          int v41 = *(unsigned __int8 *)v56[0];
          if ((v41 - 4) > 0x1E)
          {
            if ((v41 - 3) >= 0xFFFFFFFE) {
              uint64_t v44 = v56[0];
            }
            else {
              uint64_t v44 = 0;
            }
            if ((v41 - 3) < 0xFFFFFFFE)
            {
              if (v41 == 3) {
                *(void *)(v56[0] + 8) = 0;
              }
              goto LABEL_41;
            }
            unint64_t v43 = v44 + 8;
          }
          else
          {
            if ((*(unsigned char *)(v56[0] + 1) & 0x7F) != 2 && !*(_DWORD *)(v56[0] + 12)) {
              goto LABEL_41;
            }
            uint64_t v42 = *(void *)(v56[0] + 16);
            if ((v42 & 4) == 0) {
              goto LABEL_41;
            }
            unint64_t v43 = v42 & 0xFFFFFFFFFFFFFFF8;
            if (!v43) {
              goto LABEL_41;
            }
          }
          v58[0] = (const char *)v56;
          sub_1CC5FA668(v43 + 16, v58);
          goto LABEL_41;
        }
      }
      else
      {
        uint64_t v21 = 0;
        int v22 = 1;
        while (v20 != v10)
        {
          if (v21) {
            BOOL v23 = 0;
          }
          else {
            BOOL v23 = v20 == -2;
          }
          if (v23) {
            uint64_t v21 = v19;
          }
          unsigned int v24 = v18 + v22++;
          unsigned int v18 = v24 & v17;
          size_t v19 = (void *)(v11 + 8 * (v24 & v17));
          uint64_t v20 = *v19;
          if (*v19 == -1) {
            goto LABEL_31;
          }
        }
      }
LABEL_60:
      v6 += 24;
    }
    while (v6 != v55);
  }
  *(unsigned char *)(a2 + 24) = 1;
  *(void *)(a2 + 40) = *(void *)(a2 + 32);
}

void *sub_1CC9CAA74(uint64_t *a1, uint64_t a2, unint64_t a3, unint64_t *a4, uint64_t a5, const void *a6, size_t a7, llvm::Constant *a8, int a9)
{
  uint64_t v70 = *MEMORY[0x1E4F143B8];
  if (!sub_1CC9CCB38(*a1))
  {
    uint64_t v50 = *(llvm::ConstantInt **)a8;
    unsigned int v51 = *((_DWORD *)a8 + 2);
    LODWORD(v69) = v51 >> 8;
    if (v51 >> 8 > 0x40) {
      operator new[]();
    }
    if (v51 <= 0xFF) {
      LODWORD(v52) = 0;
    }
    else {
      unint64_t v52 = 0xFFFFFFFFFFFFFFFFLL >> ~(BYTE1(v51) + 63);
    }
    uint64_t v68 = v52 & a9;
    uint64_t v21 = llvm::ConstantInt::get(v50, (llvm::LLVMContext *)&v68, v17);
    if (v69 >= 0x41 && v68) {
      MEMORY[0x1D25D9CB0](v68, 0x1000C8000313F17);
    }
    return v21;
  }
  unsigned int v18 = sub_1CC9CA304((uint64_t)a1, a2, a3, a4, a5, a6, a7);
  size_t v19 = llvm::Value::stripPointerCasts(v18);
  uint64_t v21 = sub_1CC56C0C0((llvm *)0x2F, v18, a8, 0);
  if ((*((unsigned char *)v19 + 23) & 0x20) == 0)
  {
LABEL_17:
    unint64_t v36 = (unint64_t)*((unsigned int *)a8 + 2) >> 8;
    uint64_t v37 = a1[11];
    unsigned int v38 = *(_DWORD *)(v37 + 8);
    if (v36 == v38 >> 8)
    {
      unint64_t v39 = *(llvm::ConstantInt **)v37;
      LODWORD(v69) = v36;
      char v40 = v36 + 63;
      if (v38 >> 8 > 0x40) {
        operator new[]();
      }
      if (v38 <= 0xFF) {
        unint64_t v41 = 0;
      }
      else {
        unint64_t v41 = 0xFFFFFFFFFFFFFFFFLL >> ~v40;
      }
      uint64_t v68 = v41;
      unint64_t v43 = (llvm::ValueAsMetadata *)llvm::ConstantInt::get(v39, (llvm::LLVMContext *)&v68, v20);
      if (v69 >= 0x41 && v68) {
        MEMORY[0x1D25D9CB0](v68, 0x1000C8000313F17);
      }
      uint64_t v45 = llvm::ValueAsMetadata::get(v43, v42);
      uint64_t v46 = a1[11];
      uint64_t v47 = *(llvm::ConstantInt **)v46;
      unint64_t v48 = *(unsigned int *)(v46 + 8);
      LODWORD(v69) = v48 >> 8;
      if (v48 >> 8 > 0x40) {
        operator new[]();
      }
      if (v48 <= 0xFF) {
        unint64_t v49 = 0;
      }
      else {
        unint64_t v49 = 0xFFFFFFFFFFFFFFFFLL >> ~(BYTE1(v48) + 63);
      }
    }
    else
    {
      uint64_t v53 = *(llvm::ConstantInt **)v37;
      LODWORD(v69) = *(_DWORD *)(v37 + 8) >> 8;
      if (v38 >> 8 >= 0x41) {
        operator new[]();
      }
      uint64_t v68 = 0;
      uint64_t v55 = (llvm::ValueAsMetadata *)llvm::ConstantInt::get(v53, (llvm::LLVMContext *)&v68, v20);
      if (v69 >= 0x41 && v68) {
        MEMORY[0x1D25D9CB0](v68, 0x1000C8000313F17);
      }
      uint64_t v56 = 1 << v36;
      uint64_t v45 = llvm::ValueAsMetadata::get(v55, v54);
      uint64_t v57 = a1[11];
      uint64_t v47 = *(llvm::ConstantInt **)v57;
      unint64_t v58 = *(unsigned int *)(v57 + 8);
      LODWORD(v69) = v58 >> 8;
      if (v58 >> 8 > 0x40) {
        operator new[]();
      }
      if (v58 <= 0xFF) {
        unint64_t v59 = 0;
      }
      else {
        unint64_t v59 = 0xFFFFFFFFFFFFFFFFLL >> ~(BYTE1(v58) + 63);
      }
      unint64_t v49 = v59 & v56;
    }
    uint64_t v68 = v49;
    uint64_t v61 = (llvm::ValueAsMetadata *)llvm::ConstantInt::get(v47, (llvm::LLVMContext *)&v68, v44);
    if (v69 >= 0x41 && v68) {
      MEMORY[0x1D25D9CB0](v68, 0x1000C8000313F17);
    }
    uint64_t v62 = llvm::ValueAsMetadata::get(v61, v60);
    uint64_t v63 = *(void *)*a1;
    uint64_t v68 = v45;
    uint64_t v69 = v62;
    Impl = llvm::MDTuple::getImpl(v63, &v68, 2, 0, 1);
    llvm::Value::setMetadata((uint64_t ***)v19, 21, Impl);
    return v21;
  }
  uint64_t v22 = ***(void ***)v19;
  uint64_t v68 = (uint64_t)v19;
  int v23 = *(_DWORD *)(v22 + 2496);
  if (!v23)
  {
    uint64_t v66 = 0;
LABEL_49:
    uint64_t v27 = (llvm::Value **)sub_1CC609054(v22 + 2480, (uint64_t)&v68, &v68, v66);
    uint64_t v67 = v68;
    uint64_t v27[3] = 0;
    v27[4] = 0;
    char *v27 = (llvm::Value *)v67;
    v27[1] = (llvm::Value *)(v27 + 3);
    v27[2] = (llvm::Value *)0x100000000;
    goto LABEL_13;
  }
  uint64_t v24 = *(void *)(v22 + 2480);
  int v25 = v23 - 1;
  unsigned int v26 = v25 & ((v19 >> 4) ^ (v19 >> 9));
  uint64_t v27 = (llvm::Value **)(v24 + 40 * v26);
  uint64_t v28 = *v27;
  if (*v27 != v19)
  {
    unint64_t v29 = 0;
    int v30 = 1;
    while (v28 != (llvm::Value *)-4096)
    {
      if (v29) {
        BOOL v31 = 0;
      }
      else {
        BOOL v31 = v28 == (llvm::Value *)-8192;
      }
      if (v31) {
        unint64_t v29 = v27;
      }
      unsigned int v32 = v26 + v30++;
      unsigned int v26 = v32 & v25;
      uint64_t v27 = (llvm::Value **)(v24 + 40 * v26);
      uint64_t v28 = *v27;
      if (*v27 == v19) {
        goto LABEL_13;
      }
    }
    if (v29) {
      uint64_t v66 = v29;
    }
    else {
      uint64_t v66 = v27;
    }
    goto LABEL_49;
  }
LABEL_13:
  uint64_t v33 = *((unsigned int *)v27 + 4);
  if (!v33) {
    goto LABEL_17;
  }
  uint64_t v34 = (void *)((char *)v27[1] + 8);
  uint64_t v35 = 16 * v33;
  while (*((_DWORD *)v34 - 2) != 21)
  {
    v34 += 2;
    v35 -= 16;
    if (!v35) {
      goto LABEL_17;
    }
  }
  if (!*v34) {
    goto LABEL_17;
  }
  return v21;
}

void sub_1CC9CB07C(uint64_t a1, long long **a2, void *a3, size_t a4, const char *a5, uint64_t a6)
{
  v94[1] = *MEMORY[0x1E4F143B8];
  uint64_t v6 = *a2;
  char v71 = a2[1];
  if (*a2 != v71)
  {
    uint64_t v65 = (llvm::SmallPtrSetImplBase *)(a1 + 176);
    do
    {
      long long v74 = *v6;
      uint64_t v75 = *((void *)v6 + 2);
      uint64_t v8 = (llvm::PointerType **)*((void *)&v74 + 1);
      uint64_t v9 = *(void *)(a1 + 184);
      uint64_t v10 = *(unsigned int *)(a1 + 196);
      if (v9 == *(void *)(a1 + 176))
      {
        if (v10)
        {
          uint64_t v11 = 0;
          uint64_t v12 = 8 * v10;
          int v13 = *(void **)(a1 + 184);
          do
          {
            if (*v13 == *((void *)&v74 + 1)) {
              goto LABEL_63;
            }
            if (*v13 == -2) {
              uint64_t v11 = v13;
            }
            ++v13;
            v12 -= 8;
          }
          while (v12);
          if (v11)
          {
            *uint64_t v11 = *((void *)&v74 + 1);
            --*(_DWORD *)(a1 + 200);
            goto LABEL_35;
          }
        }
        unsigned int v14 = *(_DWORD *)(a1 + 192);
        if (v10 < v14)
        {
          *(_DWORD *)(a1 + 196) = v10 + 1;
          *(void *)(v9 + 8 * v10) = v8;
          goto LABEL_35;
        }
      }
      else
      {
        unsigned int v14 = *(_DWORD *)(a1 + 192);
      }
      if (3 * v14 <= 4 * ((int)v10 - *(_DWORD *)(a1 + 200)))
      {
        if (v14 >= 0x40) {
          v14 *= 2;
        }
        else {
          unsigned int v14 = 128;
        }
      }
      else if (v14 - v10 >= v14 >> 3)
      {
        goto LABEL_16;
      }
      llvm::SmallPtrSetImplBase::Grow(v65, v14);
      unsigned int v14 = *(_DWORD *)(a1 + 192);
      uint64_t v9 = *(void *)(a1 + 184);
LABEL_16:
      unsigned int v15 = v14 - 1;
      unsigned int v16 = (v14 - 1) & ((DWORD2(v74) >> 4) ^ (DWORD2(v74) >> 9));
      unsigned int v17 = (llvm::PointerType ***)(v9 + 8 * v16);
      unsigned int v18 = *v17;
      if (*v17 == (llvm::PointerType **)-1)
      {
        size_t v19 = 0;
LABEL_28:
        if (v19) {
          int v23 = v19;
        }
        else {
          int v23 = v17;
        }
        if (*v23 != *((llvm::PointerType ***)&v74 + 1))
        {
          if (*v23 == (llvm::PointerType **)-2) {
            --*(_DWORD *)(a1 + 200);
          }
          else {
            ++*(_DWORD *)(a1 + 196);
          }
          *int v23 = v8;
LABEL_35:
          uint64_t v24 = 0;
          int v25 = *v8;
          uint64_t v26 = *(void *)*v8;
          uint64_t v79 = &v81;
          uint64_t v80 = 0x200000000;
          uint64_t v84 = v26;
          uint64_t v85 = &v93;
          unint64_t v86 = v94;
          uint64_t v87 = 0;
          int v88 = 0;
          __int16 v89 = 512;
          char v90 = 7;
          uint64_t v82 = 0;
          uint64_t v83 = 0;
          uint64_t v91 = 0;
          uint64_t v92 = 0;
          uint64_t v93 = &unk_1F2616E88;
          v94[0] = &unk_1F2617008;
          uint64_t v82 = v8[5];
          uint64_t v83 = (void **)(v8 + 3);
          uint64_t v27 = (unsigned __int8 *)v8[6];
          v72[0] = v27;
          if (v27)
          {
            llvm::MetadataTracking::track((uint64_t)v72, v27, 2);
            uint64_t v24 = v72[0];
          }
          sub_1CB8461A4((uint64_t)&v79, 0, v24);
          if (!v72[0])
          {
LABEL_38:
            uint64_t v28 = (llvm::Instruction *)v74;
            uint64_t v30 = *(void *)(a1 + 56);
            uint64_t v29 = *(void *)(a1 + 64);
            __int16 v73 = 257;
            if (*(void *)v74 != v29)
            {
              if (*(unsigned __int8 *)(v74 + 16) <= 0x14u)
              {
                uint64_t v32 = (*((uint64_t (**)(void **, uint64_t, void, uint64_t))*v85 + 28))(v85, 49, v74, v29);
                uint64_t v28 = (llvm::Instruction *)v32;
                if (v32)
                {
                  if (*(unsigned __int8 *)(v32 + 16) >= 0x1Cu)
                  {
                    (*(void (**)(void *, uint64_t, void *, llvm::PointerType *, void **))(*v86 + 16))(v86, v32, v72, v82, v83);
                    if (v80)
                    {
                      uint64_t v60 = (llvm::MDNode **)v79;
                      uint64_t v64 = (llvm::MDNode **)((char *)v79 + 16 * v80);
                      do
                      {
                        llvm::Instruction::setMetadata(v28, *(_DWORD *)v60, v60[1]);
                        v60 += 2;
                      }
                      while (v60 != v64);
                    }
                  }
                }
              }
              else
              {
                __int16 v78 = 257;
                uint64_t v28 = llvm::CastInst::Create(49, v74, v29, &v76, 0);
                (*(void (**)(void *, llvm::Instruction *, void *, llvm::PointerType *, void **))(*v86 + 16))(v86, v28, v72, v82, v83);
                if (v80)
                {
                  BOOL v31 = (llvm::MDNode **)v79;
                  uint64_t v63 = (llvm::MDNode **)((char *)v79 + 16 * v80);
                  do
                  {
                    llvm::Instruction::setMetadata(v28, *(_DWORD *)v31, v31[1]);
                    v31 += 2;
                  }
                  while (v31 != v63);
                }
              }
            }
            __int16 v78 = 257;
            uint64_t v33 = (unsigned __int8 *)sub_1CB930F7C((uint64_t *)&v79, v30, (uint64_t *)v28, a5, (uint64_t)&v76);
            if ((*((_DWORD *)v25 + 2) & 0xFFFFFF00) == 0x100)
            {
              uint64_t v34 = *(llvm::Type **)(a1 + 56);
              __int16 v73 = 257;
              char Alignment = llvm::DataLayout::getAlignment((llvm::DataLayout *)(*(void *)(*((void *)v82 + 7) + 40) + 272), v34, 1);
              unint64_t v36 = operator new(0x60uLL);
              v36[13] = v36[13] & 0x38000000 | 1;
              uint64_t v37 = (llvm::Instruction *)(v36 + 8);
              *(void *)unint64_t v36 = 0;
              *((void *)v36 + 1) = 0;
              *((void *)v36 + 2) = 0;
              *((void *)v36 + 3) = v36 + 8;
              __int16 v78 = 257;
              llvm::LoadInst::LoadInst((llvm::Value *)(v36 + 8), (uint64_t)v34, (uint64_t)v33, &v76, 0, Alignment, 0);
              (*(void (**)(void *, llvm::Instruction *, void *, llvm::PointerType *, void **))(*v86 + 16))(v86, v37, v72, v82, v83);
              if (v80)
              {
                uint64_t v55 = (llvm::MDNode **)v79;
                uint64_t v56 = (llvm::MDNode **)((char *)v79 + 16 * v80);
                do
                {
                  llvm::Instruction::setMetadata(v37, *(_DWORD *)v55, v55[1]);
                  v55 += 2;
                }
                while (v55 != v56);
              }
              __int16 v78 = 257;
              unint64_t v39 = sub_1CBF52474((uint64_t)&v79, v37, a6, (uint64_t)&v76);
              uint64_t v40 = *(void *)(a1 + 56);
              unint64_t v41 = *(llvm::ConstantInt **)v40;
              unsigned int v42 = *(_DWORD *)(v40 + 8);
              unsigned int v77 = v42 >> 8;
              if (v42 >> 8 < 0x41)
              {
                uint64_t v76 = 0;
                unint64_t v43 = llvm::ConstantInt::get(v41, (llvm::LLVMContext *)&v76, v38);
                if (v77 >= 0x41)
                {
                  if (v76) {
                    MEMORY[0x1D25D9CB0](v76, 0x1000C8000313F17);
                  }
                }
                __int16 v78 = 257;
                uint64_t v44 = sub_1CB845F20((uint64_t)&v79, 33, v39, (uint64_t)v43, (uint64_t)&v76);
                sub_1CC9CC970((uint64_t)&v74, "virtual-const-prop-1-bit", 0x18uLL, a3, a4, *(unsigned __int8 *)(a1 + 104), *(uint64_t (**)(uint64_t, uint64_t))(a1 + 112), *(void *)(a1 + 120), v44);
              }
              operator new[]();
            }
            unint64_t v45 = llvm::PointerType::get(v25, 0);
            __int16 v73 = 257;
            if (*(void *)v33 != v45)
            {
              if (v33[16] <= 0x14u)
              {
                uint64_t v33 = (unsigned __int8 *)(*((uint64_t (**)(void **, uint64_t, unsigned __int8 *, unint64_t))*v85
                                          + 28))(v85, 49, v33, v45);
                if (v33) {
                  BOOL v48 = v33[16] >= 0x1Cu;
                }
                else {
                  BOOL v48 = 0;
                }
                if (v48)
                {
                  (*(void (**)(void *, unsigned __int8 *, void *, llvm::PointerType *, void **))(*v86 + 16))(v86, v33, v72, v82, v83);
                  if (v80)
                  {
                    uint64_t v61 = (llvm::MDNode **)v79;
                    uint64_t v62 = (llvm::MDNode **)((char *)v79 + 16 * v80);
                    do
                    {
                      llvm::Instruction::setMetadata((llvm::Instruction *)v33, *(_DWORD *)v61, v61[1]);
                      v61 += 2;
                    }
                    while (v61 != v62);
                  }
                }
              }
              else
              {
                __int16 v78 = 257;
                uint64_t v33 = (unsigned __int8 *)llvm::CastInst::Create(49, (uint64_t)v33, v45, &v76, 0);
                (*(void (**)(void *, unsigned __int8 *, void *, llvm::PointerType *, void **))(*v86 + 16))(v86, v33, v72, v82, v83);
                if (v80)
                {
                  uint64_t v46 = (llvm::MDNode **)v79;
                  uint64_t v47 = (llvm::MDNode **)((char *)v79 + 16 * v80);
                  do
                  {
                    llvm::Instruction::setMetadata((llvm::Instruction *)v33, *(_DWORD *)v46, v46[1]);
                    v46 += 2;
                  }
                  while (v46 != v47);
                }
              }
            }
            __int16 v73 = 257;
            char v49 = llvm::DataLayout::getAlignment((llvm::DataLayout *)(*(void *)(*((void *)v82 + 7) + 40) + 272), v25, 1);
            uint64_t v50 = operator new(0x60uLL);
            v50[13] = v50[13] & 0x38000000 | 1;
            unsigned int v51 = (llvm::Instruction *)(v50 + 8);
            *(void *)uint64_t v50 = 0;
            *((void *)v50 + 1) = 0;
            *((void *)v50 + 2) = 0;
            *((void *)v50 + 3) = v50 + 8;
            __int16 v78 = 257;
            llvm::LoadInst::LoadInst((llvm::Value *)(v50 + 8), (uint64_t)v25, (uint64_t)v33, &v76, 0, v49, 0);
            (*(void (**)(void *, llvm::Instruction *, void *, llvm::PointerType *, void **))(*v86 + 16))(v86, v51, v72, v82, v83);
            if (v80)
            {
              uint64_t v57 = (llvm::MDNode **)v79;
              unint64_t v58 = (llvm::MDNode **)((char *)v79 + 16 * v80);
              do
              {
                llvm::Instruction::setMetadata(v51, *(_DWORD *)v57, v57[1]);
                v57 += 2;
              }
              while (v57 != v58);
            }
            sub_1CC9CC970((uint64_t)&v74, "virtual-const-prop", 0x12uLL, a3, a4, *(unsigned __int8 *)(a1 + 104), *(uint64_t (**)(uint64_t, uint64_t))(a1 + 112), *(void *)(a1 + 120), v51);
          }
          int v52 = *(unsigned __int8 *)v72[0];
          if ((v52 - 4) > 0x1E)
          {
            if ((v52 - 3) >= 0xFFFFFFFE) {
              uint64_t v59 = v72[0];
            }
            else {
              uint64_t v59 = 0;
            }
            if ((v52 - 3) < 0xFFFFFFFE)
            {
              if (v52 == 3) {
                *(void *)(v72[0] + 8) = 0;
              }
              goto LABEL_38;
            }
            unint64_t v54 = v59 + 8;
          }
          else
          {
            if ((*(unsigned char *)(v72[0] + 1) & 0x7F) != 2 && !*(_DWORD *)(v72[0] + 12)) {
              goto LABEL_38;
            }
            uint64_t v53 = *(void *)(v72[0] + 16);
            if ((v53 & 4) == 0) {
              goto LABEL_38;
            }
            unint64_t v54 = v53 & 0xFFFFFFFFFFFFFFF8;
            if (!v54) {
              goto LABEL_38;
            }
          }
          uint64_t v76 = (const char *)v72;
          sub_1CC5FA668(v54 + 16, &v76);
          goto LABEL_38;
        }
      }
      else
      {
        size_t v19 = 0;
        int v20 = 1;
        while (v18 != *((llvm::PointerType ***)&v74 + 1))
        {
          if (v19) {
            BOOL v21 = 0;
          }
          else {
            BOOL v21 = v18 == (llvm::PointerType **)-2;
          }
          if (v21) {
            size_t v19 = v17;
          }
          unsigned int v22 = v16 + v20++;
          unsigned int v16 = v22 & v15;
          unsigned int v17 = (llvm::PointerType ***)(v9 + 8 * (v22 & v15));
          unsigned int v18 = *v17;
          if (*v17 == (llvm::PointerType **)-1) {
            goto LABEL_28;
          }
        }
      }
LABEL_63:
      uint64_t v6 = (long long *)((char *)v6 + 24);
    }
    while (v6 != v71);
  }
  *((unsigned char *)a2 + 24) = 1;
  a2[5] = a2[4];
}

void sub_1CC9CB9F8(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t *a4, uint64_t a5, const void *a6, size_t a7)
{
  char v30 = 9;
  int v21 = 0;
  char v25 = 0;
  uint64_t v26 = 0;
  uint64_t v28 = __p;
  strcpy((char *)__p, "__typeid_");
  int v27 = 0;
  int v20 = &unk_1F2646F30;
  uint64_t v22 = 0;
  unint64_t v23 = 0;
  uint64_t v24 = 0;
  uint64_t v13 = *(void *)(a2 + 8);
  if (*(void *)v13
    && (llvm::raw_ostream::write((llvm::raw_ostream *)&v20, (const char *)(v13 + 24), *(void *)v13),
        unsigned int v14 = v24,
        (unint64_t)v24 < v23))
  {
    ++v24;
    unsigned char *v14 = 95;
  }
  else
  {
    llvm::raw_ostream::write((llvm::raw_ostream *)&v20, 95);
  }
  sub_1CD098D14((llvm::raw_ostream *)&v20, a3, 0, 0, 0);
  if (a5)
  {
    uint64_t v15 = 8 * a5;
    do
    {
      unint64_t v16 = *a4;
      unsigned int v17 = v24;
      if ((unint64_t)v24 >= v23)
      {
        llvm::raw_ostream::write((llvm::raw_ostream *)&v20, 95);
      }
      else
      {
        ++v24;
        *unsigned int v17 = 95;
      }
      sub_1CD098D14((llvm::raw_ostream *)&v20, v16, 0, 0, 0);
      ++a4;
      v15 -= 8;
    }
    while (v15);
  }
  unsigned int v18 = v24;
  if ((unint64_t)v24 >= v23)
  {
    llvm::raw_ostream::write((llvm::raw_ostream *)&v20, 95);
  }
  else
  {
    ++v24;
    *unsigned int v18 = 95;
  }
  if (a7 <= v23 - (unint64_t)v24)
  {
    if (a7)
    {
      memcpy(v24, a6, a7);
      v24 += a7;
    }
  }
  else
  {
    llvm::raw_ostream::write((llvm::raw_ostream *)&v20, (const char *)a6, a7);
  }
  if (*((char *)v28 + 23) < 0)
  {
    sub_1CB8BDF7C(a1, *v28, (unint64_t)v28[1]);
  }
  else
  {
    long long v19 = *(_OWORD *)v28;
    *(void *)(a1 + 16) = v28[2];
    *(_OWORD *)a1 = v19;
  }
  int v20 = &unk_1F2646B98;
  if (v27 == 1 && v22) {
    MEMORY[0x1D25D9CB0](v22, 0x1000C8077774924);
  }
  if (v30 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1CC9CBC54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v10[0] = a4;
  v10[1] = a1;
  v10[2] = &v11;
  uint64_t v11 = a3;
  sub_1CC9CCBA0((uint64_t)v10, a2);
  uint64_t v5 = *(void **)(a2 + 80);
  uint64_t v6 = (void *)(a2 + 88);
  if (v5 != v6)
  {
    do
    {
      sub_1CC9CCBA0((uint64_t)v10, (uint64_t)(v5 + 7));
      uint64_t v7 = (void *)v5[1];
      if (v7)
      {
        do
        {
          uint64_t v8 = v7;
          uint64_t v7 = (void *)*v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          uint64_t v8 = (void *)v5[2];
          BOOL v9 = *v8 == (void)v5;
          uint64_t v5 = v8;
        }
        while (!v9);
      }
      uint64_t v5 = v8;
    }
    while (v8 != v6);
  }
}

void sub_1CC9CBCE4(uint64_t *a1, uint64_t a2)
{
  uint64_t v84 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *(void *)a2;
  uint64_t v62 = *(void *)(a2 + 8);
  if (*(void *)a2 != v62)
  {
    uint64_t v3 = *a1;
    uint64_t v60 = (llvm::SmallPtrSetImplBase *)(*a1 + 176);
    while (1)
    {
      uint64_t v4 = *(void *)(v2 + 8);
      uint64_t v5 = *(void *)(v3 + 184);
      uint64_t v6 = *(unsigned int *)(v3 + 196);
      if (v5 == *(void *)(v3 + 176))
      {
        if (v6)
        {
          uint64_t v7 = 0;
          uint64_t v8 = 8 * v6;
          BOOL v9 = *(void **)(v3 + 184);
          while (*v9 != v4)
          {
            if (*v9 == -2) {
              uint64_t v7 = v9;
            }
            ++v9;
            v8 -= 8;
            if (!v8)
            {
              if (!v7) {
                goto LABEL_11;
              }
              void *v7 = v4;
              --*(_DWORD *)(v3 + 200);
              goto LABEL_35;
            }
          }
          goto LABEL_71;
        }
LABEL_11:
        unsigned int v10 = *(_DWORD *)(v3 + 192);
        if (v6 < v10)
        {
          *(_DWORD *)(v3 + 196) = v6 + 1;
          *(void *)(v5 + 8 * v6) = v4;
          goto LABEL_35;
        }
      }
      else
      {
        unsigned int v10 = *(_DWORD *)(v3 + 192);
      }
      if (3 * v10 <= 4 * ((int)v6 - *(_DWORD *)(v3 + 200))) {
        break;
      }
      if (v10 - v6 < v10 >> 3) {
        goto LABEL_94;
      }
LABEL_16:
      unsigned int v11 = v10 - 1;
      unsigned int v12 = (v10 - 1) & ((v4 >> 4) ^ (v4 >> 9));
      uint64_t v13 = (void *)(v5 + 8 * v12);
      uint64_t v14 = *v13;
      if (*v13 != -1)
      {
        uint64_t v15 = 0;
        int v16 = 1;
        while (v14 != v4)
        {
          if (v15) {
            BOOL v17 = 0;
          }
          else {
            BOOL v17 = v14 == -2;
          }
          if (v17) {
            uint64_t v15 = v13;
          }
          unsigned int v18 = v12 + v16++;
          unsigned int v12 = v18 & v11;
          uint64_t v13 = (void *)(v5 + 8 * (v18 & v11));
          uint64_t v14 = *v13;
          if (*v13 == -1) {
            goto LABEL_28;
          }
        }
        goto LABEL_71;
      }
      uint64_t v15 = 0;
LABEL_28:
      if (v15) {
        long long v19 = v15;
      }
      else {
        long long v19 = v13;
      }
      if (*v19 == v4) {
        goto LABEL_71;
      }
      if (*v19 == -2) {
        --*(_DWORD *)(v3 + 200);
      }
      else {
        ++*(_DWORD *)(v3 + 196);
      }
      *long long v19 = v4;
LABEL_35:
      if (!*(unsigned char *)(v3 + 104)) {
        goto LABEL_46;
      }
      int v20 = llvm::Value::stripPointerCasts(*(llvm::Value **)a1[1]);
      if ((*((unsigned char *)v20 + 23) & 0x10) == 0)
      {
        size_t v31 = 0;
        char v30 = &byte_1CFBCE98E;
        goto LABEL_45;
      }
      uint64_t v21 = ***(void ***)v20;
      uint64_t v22 = *(void *)(v21 + 152);
      uint64_t v23 = *(unsigned int *)(v21 + 168);
      if (!v23) {
        goto LABEL_43;
      }
      LODWORD(v24) = (v23 - 1) & ((v20 >> 4) ^ (v20 >> 9));
      char v25 = (llvm::Value **)(v22 + 16 * v24);
      uint64_t v26 = *v25;
      if (*v25 != v20)
      {
        int v27 = 1;
        while (v26 != (llvm::Value *)-4096)
        {
          int v28 = v24 + v27++;
          uint64_t v24 = v28 & (v23 - 1);
          uint64_t v26 = *(llvm::Value **)(v22 + 16 * v24);
          if (v26 == v20)
          {
            char v25 = (llvm::Value **)(v22 + 16 * v24);
            goto LABEL_44;
          }
        }
LABEL_43:
        char v25 = (llvm::Value **)(v22 + 16 * v23);
      }
LABEL_44:
      uint64_t v29 = v25[1];
      size_t v32 = *(void *)v29;
      char v30 = (char *)v29 + 16;
      size_t v31 = v32;
LABEL_45:
      sub_1CC9CC6C4(v2, "single-impl", 0xBuLL, v30, v31, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 112), *(void *)(v3 + 120));
LABEL_46:
      uint64_t v33 = 0;
      uint64_t v34 = *(llvm **)(v2 + 8);
      uint64_t v35 = **(void **)v34;
      uint64_t v66 = v68;
      uint64_t v67 = 0x200000000;
      uint64_t v71 = v35;
      uint64_t v72 = &v80;
      __int16 v73 = &v81;
      uint64_t v74 = 0;
      int v75 = 0;
      __int16 v76 = 512;
      char v77 = 7;
      uint64_t v69 = 0;
      uint64_t v70 = 0;
      uint64_t v78 = 0;
      uint64_t v79 = 0;
      uint64_t v80 = &unk_1F2616E88;
      uint64_t v81 = &unk_1F2617008;
      uint64_t v69 = *((void *)v34 + 5);
      uint64_t v70 = (char *)v34 + 24;
      unint64_t v36 = (uint64_t *)*((void *)v34 + 6);
      v64[0] = v36;
      if (v36)
      {
        llvm::MetadataTracking::track((uint64_t)v64, (unsigned __int8 *)v36, 2);
        uint64_t v33 = v64[0];
      }
      sub_1CB8461A4((uint64_t)&v66, 0, (uint64_t)v33);
      if (!v64[0]) {
        goto LABEL_49;
      }
      int v51 = *(unsigned __int8 *)v64[0];
      if ((v51 - 4) > 0x1E)
      {
        if ((v51 - 3) >= 0xFFFFFFFE) {
          unint64_t v54 = v64[0];
        }
        else {
          unint64_t v54 = 0;
        }
        if ((v51 - 3) < 0xFFFFFFFE)
        {
          if (v51 == 3) {
            v64[0][1] = 0;
          }
          goto LABEL_49;
        }
        unint64_t v53 = (unint64_t)(v54 + 1);
      }
      else
      {
        if ((*((unsigned char *)v64[0] + 1) & 0x7F) != 2 && !*((_DWORD *)v64[0] + 3)) {
          goto LABEL_49;
        }
        uint64_t v52 = v64[0][2];
        if ((v52 & 4) == 0) {
          goto LABEL_49;
        }
        unint64_t v53 = v52 & 0xFFFFFFFFFFFFFFF8;
        if (!v53) {
          goto LABEL_49;
        }
      }
      v82[0] = (const char *)v64;
      sub_1CC5FA668(v53 + 16, v82);
LABEL_49:
      uint64_t v37 = *(llvm::Value **)a1[1];
      unsigned int v38 = (llvm::Value **)((char *)v34 - 32);
      uint64_t v39 = **((void **)v34 - 4);
      __int16 v65 = 257;
      if (*(void *)v37 != v39)
      {
        if (*((unsigned __int8 *)v37 + 16) <= 0x14u)
        {
          uint64_t v41 = (*((uint64_t (**)(void **, uint64_t, llvm::Value *, uint64_t))*v72 + 28))(v72, 49, v37, v39);
          uint64_t v37 = (llvm::Value *)v41;
          if (v41)
          {
            if (*(unsigned __int8 *)(v41 + 16) >= 0x1Cu)
            {
              (*((void (**)(void **, uint64_t, uint64_t **, uint64_t, char *))*v73 + 2))(v73, v41, v64, v69, v70);
              if (v67)
              {
                uint64_t v55 = (llvm::MDNode **)v66;
                uint64_t v59 = (llvm::MDNode **)((char *)v66 + 16 * v67);
                do
                {
                  llvm::Instruction::setMetadata(v37, *(_DWORD *)v55, v55[1]);
                  v55 += 2;
                }
                while (v55 != v59);
              }
            }
          }
        }
        else
        {
          __int16 v83 = 257;
          uint64_t v37 = llvm::CastInst::Create(49, (uint64_t)v37, v39, v82, 0);
          (*((void (**)(void **, llvm::Value *, uint64_t **, uint64_t, char *))*v73 + 2))(v73, v37, v64, v69, v70);
          if (v67)
          {
            uint64_t v40 = (llvm::MDNode **)v66;
            unint64_t v58 = (llvm::MDNode **)((char *)v66 + 16 * v67);
            do
            {
              llvm::Instruction::setMetadata(v37, *(_DWORD *)v40, v40[1]);
              v40 += 2;
            }
            while (v40 != v58);
          }
        }
      }
      if (dword_1EBCE55B8 == 1)
      {
        unsigned int v42 = (void *)*((void *)v34 - 4);
        __int16 v83 = 257;
        unint64_t v43 = sub_1CB845F20((uint64_t)&v66, 33, v42, (uint64_t)v37, (uint64_t)v82);
        sub_1CD1290BC((uint64_t)v43, (uint64_t)v34);
      }
      if (dword_1EBCE55B8 == 2)
      {
        v64[0] = **(uint64_t ***)v3;
        v82[0] = (const char *)0x1000FFFFFLL;
        BranchWeights = (llvm::Instruction **)llvm::MDBuilder::createBranchWeights(v64, (uint64_t)v82, 2);
        llvm::versionCallSite(v34, v37, BranchWeights, v50);
      }
      if (*v38)
      {
        **((void **)v34 - 2) = *((void *)v34 - 3);
        uint64_t v44 = *((void *)v34 - 3);
        if (v44) {
          *(void *)(v44 + 16) = *((void *)v34 - 2);
        }
      }
      *unsigned int v38 = v37;
      if (v37)
      {
        uint64_t v47 = *((void *)v37 + 1);
        uint64_t v46 = (llvm::Value ***)((char *)v37 + 8);
        uint64_t v45 = v47;
        *((void *)v34 - 3) = v47;
        if (v47) {
          *(void *)(v45 + 16) = (char *)v34 - 24;
        }
        *((void *)v34 - 2) = v46;
        *uint64_t v46 = v38;
      }
      llvm::Instruction::setMetadata(v34, 2, 0);
      llvm::Instruction::setMetadata(v34, 23, 0);
      BOOL v48 = *(_DWORD **)(v2 + 16);
      if (v48) {
        --*v48;
      }
      if (v66 != v68) {
        free(v66);
      }
LABEL_71:
      v2 += 24;
      if (v2 == v62) {
        goto LABEL_99;
      }
    }
    if (v10 >= 0x40) {
      v10 *= 2;
    }
    else {
      unsigned int v10 = 128;
    }
LABEL_94:
    llvm::SmallPtrSetImplBase::Grow(v60, v10);
    unsigned int v10 = *(_DWORD *)(v3 + 192);
    uint64_t v5 = *(void *)(v3 + 184);
    goto LABEL_16;
  }
LABEL_99:
  uint64_t v56 = *(void *)(a2 + 32);
  if (*(unsigned char *)(a2 + 25)) {
    BOOL v57 = 0;
  }
  else {
    BOOL v57 = v56 == *(void *)(a2 + 40);
  }
  if (!v57) {
    *(unsigned char *)a1[2] = 1;
  }
  *(unsigned char *)(a2 + 24) = 1;
  *(void *)(a2 + 40) = v56;
}

void sub_1CC9CC6C4(uint64_t a1, void *a2, size_t a3, void *a4, size_t a5, uint64_t (*a6)(uint64_t, uint64_t), uint64_t a7)
{
  v42[34] = *MEMORY[0x1E4F143B8];
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(unsigned __int8 **)(v13 + 48);
  uint64_t v15 = *(void *)(*(void *)(v13 + 40) + 56);
  uint64_t v37 = v14;
  if (v14)
  {
    llvm::MetadataTracking::track((uint64_t)&v37, v14, 2);
    uint64_t v13 = *(void *)(a1 + 8);
  }
  uint64_t v17 = *(void *)(v13 + 40);
  unsigned int v18 = (uint64_t ***)a6(a7, v15);
  llvm::DiagnosticLocation::DiagnosticLocation(&v36, (const llvm::DebugLoc *)&v37);
  llvm::OptimizationRemark::OptimizationRemark((uint64_t)v39, (uint64_t)"wholeprogramdevirt", (uint64_t)a2, a3, &v36, v17);
  llvm::DiagnosticInfoOptimizationBase::Argument::Argument(__dst, "Optimization", 0xCuLL, a2, a3);
  uint64_t v19 = sub_1CD3D6290((uint64_t)v39, (long long *)__dst);
  v38[0] = ": devirtualized a call to ";
  v38[1] = 26;
  sub_1CC59ADEC((uint64_t *)(v19 + 80), (uint64_t)v38);
  llvm::DiagnosticInfoOptimizationBase::Argument::Argument(v28, "FunctionName", 0xCuLL, a4, a5);
  int v20 = (llvm::DiagnosticInfoOptimizationBase *)sub_1CD3D6290(v19, (long long *)v28);
  llvm::OptimizationRemarkEmitter::emit(v18, v20);
  if (v31 < 0) {
    operator delete(__p);
  }
  if (v29 < 0) {
    operator delete(v28[0]);
  }
  if (v35 < 0) {
    operator delete(v34);
  }
  if (v33 < 0) {
    operator delete(__dst[0]);
  }
  v39[0] = &unk_1F2616800;
  uint64_t v21 = (char *)v40;
  if (v41)
  {
    unint64_t v22 = (unint64_t)v41 << 6;
    do
    {
      uint64_t v23 = (void **)&v21[v22];
      if (v21[v22 - 17] < 0) {
        operator delete(*(v23 - 5));
      }
      if (*((char *)v23 - 41) < 0) {
        operator delete(*(v23 - 8));
      }
      v22 -= 64;
    }
    while (v22);
    uint64_t v21 = (char *)v40;
  }
  if (v21 != (char *)v42) {
    free(v21);
  }
  if (v37)
  {
    int v24 = *v37;
    if ((v24 - 4) > 0x1E)
    {
      if ((v24 - 3) >= 0xFFFFFFFE) {
        char v25 = v37;
      }
      else {
        char v25 = 0;
      }
      if ((v24 - 3) >= 0xFFFFFFFE)
      {
        unint64_t v26 = (unint64_t)(v25 + 8);
LABEL_31:
        v39[0] = &v37;
        sub_1CC5FA668(v26 + 16, v39);
        return;
      }
      if (v24 == 3) {
        *((void *)v37 + 1) = 0;
      }
    }
    else if ((v37[1] & 0x7F) == 2 || *((_DWORD *)v37 + 3))
    {
      uint64_t v27 = *((void *)v37 + 2);
      if ((v27 & 4) != 0)
      {
        unint64_t v26 = v27 & 0xFFFFFFFFFFFFFFF8;
        if (v26) {
          goto LABEL_31;
        }
      }
    }
  }
}

void sub_1CC9CC970(uint64_t a1, void *a2, size_t a3, void *a4, size_t a5, int a6, uint64_t (*a7)(uint64_t, uint64_t), uint64_t a8, llvm::Value *a9)
{
  if (a6) {
    sub_1CC9CC6C4(a1, a2, a3, a4, a5, a7, a8);
  }
  llvm::Value::doRAUW(*(llvm::ValueAsMetadata **)(a1 + 8), a9, (llvm::Value *)1);
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10 && *(unsigned char *)(v10 + 16) == 33)
  {
    uint64_t v11 = *(void *)(v10 - 96);
    unsigned int v12 = (char *)operator new(0x60uLL);
    *((_DWORD *)v12 + 13) = *((_DWORD *)v12 + 13) & 0x38000000 | 1;
    *((void *)v12 + 1) = 0;
    *((void *)v12 + 2) = 0;
    *(void *)unsigned int v12 = 0;
    *((void *)v12 + 4) = ***(void ***)v11 + 1576;
    *((void *)v12 + 3) = v12 + 32;
    *((void *)v12 + 5) = 0;
    v12[48] = 30;
    v12[49] = 0;
    *((_WORD *)v12 + 25) = 0;
    *((_DWORD *)v12 + 13) = 1;
    *(_OWORD *)(v12 + 56) = 0u;
    uint64_t v13 = v12 + 56;
    *(_OWORD *)(v12 + 72) = 0u;
    *((_DWORD *)v12 + 22) = 0;
    uint64_t v14 = *(void *)(v10 + 40);
    uint64_t v15 = (uint64_t *)(v10 + 24);
    *((void *)v12 + 9) = v14;
    *(_WORD *)(v14 + 18) &= ~0x8000u;
    if ((v12[55] & 0x10) != 0
      && (uint64_t v20 = *(void *)(v14 + 56)) != 0
      && (uint64_t v21 = *(llvm::ValueSymbolTable **)(v20 + 104)) != 0)
    {
      llvm::ValueSymbolTable::reinsertValue(v21, (llvm::Value *)(v12 + 32));
      uint64_t v22 = *(void *)v12;
      uint64_t v23 = *v15;
      *((void *)v12 + 7) = *v15;
      *((void *)v12 + 8) = v15;
      *(void *)(v23 + 8) = v13;
      *uint64_t v15 = (uint64_t)v13;
      if (v22)
      {
        **((void **)v12 + 2) = *((void *)v12 + 1);
        uint64_t v24 = *((void *)v12 + 1);
        if (v24) {
          *(void *)(v24 + 16) = *((void *)v12 + 2);
        }
      }
    }
    else
    {
      uint64_t v16 = *v15;
      *((void *)v12 + 7) = *v15;
      *((void *)v12 + 8) = v15;
      *(void *)(v16 + 8) = v13;
      *uint64_t v15 = (uint64_t)v13;
    }
    *(void *)unsigned int v12 = v11;
    uint64_t v19 = *(void *)(v11 + 8);
    unsigned int v18 = (void *)(v11 + 8);
    uint64_t v17 = v19;
    *((void *)v12 + 1) = v19;
    if (v19) {
      *(void *)(v17 + 16) = v12 + 8;
    }
    *((void *)v12 + 2) = v18;
    *unsigned int v18 = v12;
    llvm::BasicBlock::removePredecessor(*(llvm::Type **)(v10 - 64), *(llvm::BasicBlock **)(v10 + 40), 0);
  }
  llvm::SymbolTableListTraits<llvm::Instruction>::removeNodeFromList();
}

BOOL sub_1CC9CCB38(uint64_t a1)
{
  __int16 v6 = 260;
  v5[0] = a1 + 216;
  llvm::Triple::Triple((llvm::Triple *)&__p, (const llvm::Twine *)v5);
  int v1 = v9;
  int v2 = v10;
  if (v8 < 0) {
    operator delete(__p);
  }
  return (v1 - 41) < 2 && v2 == 3;
}

void sub_1CC9CCBA0(uint64_t a1, uint64_t a2)
{
  uint64_t v143 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = *(uint64_t ****)(a1 + 8);
  if (*(unsigned char *)(a2 + 25)) {
    BOOL v4 = 0;
  }
  else {
    BOOL v4 = *(void *)(a2 + 32) == *(void *)(a2 + 40);
  }
  if (!v4) {
    **(unsigned char **)a1 = 1;
  }
  if (*(unsigned char *)(a2 + 24)) {
    return;
  }
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  if (*(void *)a2 == v6) {
    return;
  }
  uint64_t v7 = &unk_1EBCBE000;
  do
  {
    char v8 = *(llvm::ValueAsMetadata **)(v5 + 8);
    uint64_t v9 = *(void *)(*(void *)(*((void *)v8 + 5) + 56) + 112);
    if (!v9) {
      goto LABEL_114;
    }
    if (!*(_DWORD *)(v9 + 8)) {
      goto LABEL_114;
    }
    uint64_t v10 = *(void *)(v9 + 40);
    if (!v10) {
      goto LABEL_114;
    }
    int v11 = *(_DWORD *)(v10 + 40);
    if (!v11) {
      goto LABEL_114;
    }
    uint64_t v12 = *(void *)(v10 + 24);
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1EBCBE588, memory_order_acquire) & 1) == 0)
    {
      int v103 = __cxa_guard_acquire(&qword_1EBCBE588);
      uint64_t v7 = &unk_1EBCBE000;
      if (v103)
      {
        unint64_t v104 = llvm::hashing::detail::fixed_seed_override;
        if (!llvm::hashing::detail::fixed_seed_override) {
          unint64_t v104 = 0xFF51AFD7ED558CCDLL;
        }
        qword_1EBCBE580 = v104;
        __cxa_guard_release(&qword_1EBCBE588);
        uint64_t v7 = (void *)&unk_1EBCBE000;
      }
    }
    unint64_t v13 = 0x9DDFEA08EB382D69
        * ((0x9DDFEA08EB382D69 * (v7[176] ^ 0xACC792AF839889B6)) ^ ((0x9DDFEA08EB382D69
                                                                       * (v7[176] ^ 0xACC792AF839889B6)) >> 47) ^ 0xCAEAE6CAE4EAE8C2);
    unsigned int v14 = (-348639895 * ((v13 >> 47) ^ v13)) ^ 0x74616566;
    for (int i = 1; ; ++i)
    {
      unsigned int v16 = v14 & (v11 - 1);
      uint64_t v17 = v12 + 24 * v16;
      unsigned int v18 = *(void **)v17;
      if (*(void *)v17 == -1)
      {
        if ("target-features" == (char *)-1) {
          goto LABEL_29;
        }
        goto LABEL_18;
      }
      if (v18 != (void *)-2) {
        break;
      }
      if ("target-features" == (char *)-2) {
        goto LABEL_29;
      }
LABEL_18:
      if (v18 == (void *)-1) {
        goto LABEL_114;
      }
      unsigned int v14 = i + v16;
    }
    if (*(void *)(v17 + 8) != 15) {
      goto LABEL_18;
    }
    if (*v18 != 0x662D746567726174 || *(void *)((char *)v18 + 7) != 0x7365727574616566) {
      goto LABEL_18;
    }
LABEL_29:
    uint64_t v20 = *(void *)(v17 + 16);
    if (v20)
    {
      uint64_t v21 = *(unsigned int *)(v20 + 16);
      uint64_t v125 = (void *)(v20 + *(unsigned int *)(v20 + 12) + 25);
      uint64_t v126 = v21;
      uint64_t v22 = llvm::StringRef::find((uint64_t *)&v125, "+retpoline", 0xAuLL, 0);
      uint64_t v7 = (void *)&unk_1EBCBE000;
      if (v22 != -1)
      {
        if (*((unsigned char *)v3 + 104))
        {
          uint64_t v23 = llvm::Value::stripPointerCasts(**(llvm::Value ***)(a1 + 16));
          if ((*((unsigned char *)v23 + 23) & 0x10) != 0)
          {
            uint64_t v24 = ***(void ***)v23;
            uint64_t v25 = *(void *)(v24 + 152);
            uint64_t v26 = *(unsigned int *)(v24 + 168);
            if (v26)
            {
              LODWORD(v27) = (v26 - 1) & ((v23 >> 4) ^ (v23 >> 9));
              int v28 = (llvm::Value **)(v25 + 16 * v27);
              char v29 = *v28;
              if (*v28 != v23)
              {
                int v30 = 1;
                do
                {
                  if (v29 == (llvm::Value *)-4096) {
                    goto LABEL_39;
                  }
                  int v31 = v27 + v30++;
                  uint64_t v27 = v31 & (v26 - 1);
                  char v29 = *(llvm::Value **)(v25 + 16 * v27);
                }
                while (v29 != v23);
                int v28 = (llvm::Value **)(v25 + 16 * v27);
              }
            }
            else
            {
LABEL_39:
              int v28 = (llvm::Value **)(v25 + 16 * v26);
            }
            size_t v32 = v28[1];
            size_t v35 = *(void *)v32;
            char v33 = (char *)v32 + 16;
            size_t v34 = v35;
          }
          else
          {
            size_t v34 = 0;
            char v33 = &byte_1CFBCE98E;
          }
          sub_1CC9CC6C4(v5, "branch-funnel", 0xDuLL, v33, v34, (uint64_t (*)(uint64_t, uint64_t))v3[14], (uint64_t)v3[15]);
        }
        uint64_t v116 = a1;
        long long v36 = v3[8];
        uint64_t v37 = operator new(8uLL);
        *uint64_t v37 = v36;
        uint64_t v124 = v37 + 1;
        __int16 v122 = v37;
        char v123 = (char *)(v37 + 1);
        uint64_t v38 = *((void *)v8 + 9);
        uint64_t v39 = (char *)(*(void *)(v38 + 16) + 8);
        uint64_t v40 = 8 * *(unsigned int *)(v38 + 12) - 8;
        sub_1CC8A8B90((uint64_t)&v122, (uint64_t)(v37 + 1), v39, &v39[v40], v40 >> 3);
        __int16 v114 = (llvm::PointerType *)llvm::FunctionType::get(**(uint64_t ****)(*((void *)v8 + 9) + 16), (uint64_t)v122, (v123 - (unsigned char *)v122) >> 3, *(_DWORD *)(*((void *)v8 + 9) + 8) > 0xFFu);
        unint64_t v41 = llvm::PointerType::get(v114, 0);
        uint64_t v42 = 0;
        uint64_t v43 = **(void **)v8;
        uint64_t v125 = &v127;
        uint64_t v126 = 0x200000000;
        uint64_t v130 = v43;
        uint64_t v131 = &v139;
        unint64_t v132 = &v140;
        uint64_t v133 = 0;
        int v134 = 0;
        __int16 v135 = 512;
        char v136 = 7;
        uint64_t v128 = 0;
        uint64_t v129 = 0;
        uint64_t v137 = 0;
        uint64_t v138 = 0;
        char v139 = &unk_1F2616E88;
        uint64_t v140 = &unk_1F2617008;
        uint64_t v128 = *((void *)v8 + 5);
        uint64_t v129 = (char *)v8 + 24;
        uint64_t v44 = (unsigned __int8 *)*((void *)v8 + 6);
        v117[0] = v44;
        if (v44)
        {
          llvm::MetadataTracking::track((uint64_t)v117, v44, 2);
          uint64_t v42 = v117[0];
        }
        sub_1CB8461A4((uint64_t)&v125, 0, v42);
        if (v117[0])
        {
          int v96 = *(unsigned __int8 *)v117[0];
          if ((v96 - 4) > 0x1E)
          {
            if ((v96 - 3) >= 0xFFFFFFFE) {
              uint64_t v102 = v117[0];
            }
            else {
              uint64_t v102 = 0;
            }
            if ((v96 - 3) < 0xFFFFFFFE)
            {
              if (v96 == 3) {
                *(void *)(v117[0] + 8) = 0;
              }
              goto LABEL_45;
            }
            unint64_t v98 = v102 + 8;
          }
          else
          {
            if ((*(unsigned char *)(v117[0] + 1) & 0x7F) != 2 && !*(_DWORD *)(v117[0] + 12)) {
              goto LABEL_45;
            }
            uint64_t v97 = *(void *)(v117[0] + 16);
            if ((v97 & 4) == 0) {
              goto LABEL_45;
            }
            unint64_t v98 = v97 & 0xFFFFFFFFFFFFFFF8;
            if (!v98) {
              goto LABEL_45;
            }
          }
          __src[0] = (const char *)v117;
          sub_1CC5FA668(v98 + 16, __src);
        }
LABEL_45:
        long long __p = 0;
        uint64_t v120 = 0;
        int v121 = 0;
        uint64_t v45 = *(unsigned __int8 **)v5;
        uint64_t v46 = (uint64_t)v3[8];
        __int16 v118 = 257;
        if (*(void *)v45 != v46)
        {
          if (v45[16] <= 0x14u)
          {
            uint64_t v49 = (*((uint64_t (**)(void **, uint64_t, unsigned __int8 *, uint64_t))*v131 + 28))(v131, 49, v45, v46);
            uint64_t v45 = (unsigned __int8 *)v49;
            if (v49)
            {
              if (*(unsigned __int8 *)(v49 + 16) >= 0x1Cu)
              {
                (*((void (**)(void **, uint64_t, void *, uint64_t, char *))*v132 + 2))(v132, v49, v117, v128, v129);
                if (v126)
                {
                  uint64_t v108 = (llvm::MDNode **)v125;
                  uint64_t v109 = (llvm::MDNode **)((char *)v125 + 16 * v126);
                  do
                  {
                    llvm::Instruction::setMetadata((llvm::Instruction *)v45, *(_DWORD *)v108, v108[1]);
                    v108 += 2;
                  }
                  while (v108 != v109);
                }
              }
            }
          }
          else
          {
            __int16 v142 = 257;
            uint64_t v45 = (unsigned __int8 *)llvm::CastInst::Create(49, (uint64_t)v45, v46, __src, 0);
            (*((void (**)(void **, unsigned __int8 *, void *, uint64_t, char *))*v132 + 2))(v132, v45, v117, v128, v129);
            if (v126)
            {
              uint64_t v47 = (llvm::MDNode **)v125;
              BOOL v48 = (llvm::MDNode **)((char *)v125 + 16 * v126);
              do
              {
                llvm::Instruction::setMetadata((llvm::Instruction *)v45, *(_DWORD *)v47, v47[1]);
                v47 += 2;
              }
              while (v47 != v48);
            }
          }
        }
        uint64_t v50 = v120;
        if (v120 >= v121)
        {
          uint64_t v52 = (char *)__p;
          uint64_t v53 = (v120 - (unsigned char *)__p) >> 3;
          unint64_t v54 = v53 + 1;
          if ((unint64_t)(v53 + 1) >> 61) {
LABEL_164:
          }
            abort();
          uint64_t v55 = v121 - (unsigned char *)__p;
          if ((v121 - (unsigned char *)__p) >> 2 > v54) {
            unint64_t v54 = v55 >> 2;
          }
          if ((unint64_t)v55 >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v56 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v56 = v54;
          }
          if (v56)
          {
            if (v56 >> 61) {
LABEL_165:
            }
              sub_1CB833614();
            BOOL v57 = (char *)operator new(8 * v56);
          }
          else
          {
            BOOL v57 = 0;
          }
          unint64_t v58 = (unsigned __int8 **)&v57[8 * v53];
          *unint64_t v58 = v45;
          uint64_t v51 = (uint64_t)(v58 + 1);
          if (v50 != v52)
          {
            do
            {
              uint64_t v59 = (unsigned __int8 *)*((void *)v50 - 1);
              v50 -= 8;
              *--unint64_t v58 = v59;
            }
            while (v50 != v52);
            uint64_t v50 = (char *)__p;
          }
          long long __p = v58;
          uint64_t v120 = (char *)v51;
          int v121 = &v57[8 * v56];
          if (v50) {
            operator delete(v50);
          }
        }
        else
        {
          *(void *)uint64_t v120 = v45;
          uint64_t v51 = (uint64_t)(v50 + 8);
        }
        uint64_t v120 = (char *)v51;
        int v60 = *((_DWORD *)v8 + 5);
        int v61 = *((unsigned __int8 *)v8 + 16);
        if (v61 == 84)
        {
          uint64_t v62 = 0;
        }
        else if (v61 == 39)
        {
          uint64_t v62 = (*((_DWORD *)v8 + 20) + 1);
        }
        else
        {
          uint64_t v62 = 2;
        }
        uint64_t v63 = (uint64_t *)((char *)v8 - 32 * (v60 & 0x7FFFFFF));
        if (v60 < 0 && (uint64_t v105 = *(v63 - 1), (v105 & 0xFFFFFFFF0) != 0)) {
          uint64_t v64 = (*((_DWORD *)v63 - 3) - *(_DWORD *)((char *)v63 - v105));
        }
        else {
          uint64_t v64 = 0;
        }
        __int16 v65 = (uint64_t *)((char *)v8 + -32 * v64 + -32 * v62 - 32);
        sub_1CC233E3C((char **)&__p, v51, v63, v65, ((char *)v65 - (char *)v63) >> 5);
        uint64_t v66 = **(unsigned __int8 ***)(v116 + 16);
        if (*((unsigned char *)v8 + 16) == 84)
        {
          __int16 v118 = 257;
          if (*(void *)v66 != v41)
          {
            if (v66[16] <= 0x14u)
            {
              uint64_t v66 = (unsigned __int8 *)(*((uint64_t (**)(void **, uint64_t, unsigned __int8 *, unint64_t))*v131
                                        + 28))(v131, 49, v66, v41);
              if (v66) {
                BOOL v69 = v66[16] >= 0x1Cu;
              }
              else {
                BOOL v69 = 0;
              }
              if (v69)
              {
                (*((void (**)(void **, unsigned __int8 *, void *, uint64_t, char *))*v132 + 2))(v132, v66, v117, v128, v129);
                if (v126)
                {
                  uint64_t v106 = (llvm::MDNode **)v125;
                  char v107 = (llvm::MDNode **)((char *)v125 + 16 * v126);
                  do
                  {
                    llvm::Instruction::setMetadata((llvm::Instruction *)v66, *(_DWORD *)v106, v106[1]);
                    v106 += 2;
                  }
                  while (v106 != v107);
                }
              }
            }
            else
            {
              __int16 v142 = 257;
              uint64_t v66 = (unsigned __int8 *)llvm::CastInst::Create(49, (uint64_t)v66, v41, __src, 0);
              (*((void (**)(void **, unsigned __int8 *, void *, uint64_t, char *))*v132 + 2))(v132, v66, v117, v128, v129);
              if (v126)
              {
                uint64_t v67 = (llvm::MDNode **)v125;
                uint64_t v68 = (llvm::MDNode **)((char *)v125 + 16 * v126);
                do
                {
                  llvm::Instruction::setMetadata((llvm::Instruction *)v66, *(_DWORD *)v67, v67[1]);
                  v67 += 2;
                }
                while (v67 != v68);
              }
            }
          }
          __int16 v142 = 257;
          uint64_t v70 = sub_1CB845BAC((uint64_t *)&v125, (uint64_t **)v114, (uint64_t **)v66, (uint64_t *)__p, (v120 - (unsigned char *)__p) >> 3, (uint64_t)__src, 0);
        }
        else
        {
          __int16 v118 = 257;
          if (*(void *)v66 != v41)
          {
            if (v66[16] <= 0x14u)
            {
              uint64_t v66 = (unsigned __int8 *)(*((uint64_t (**)(void **, uint64_t, unsigned __int8 *, unint64_t))*v131
                                        + 28))(v131, 49, v66, v41);
              if (v66) {
                BOOL v99 = v66[16] >= 0x1Cu;
              }
              else {
                BOOL v99 = 0;
              }
              if (v99)
              {
                (*((void (**)(void **, unsigned __int8 *, void *, uint64_t, char *))*v132 + 2))(v132, v66, v117, v128, v129);
                if (v126)
                {
                  __int16 v110 = (llvm::MDNode **)v125;
                  uint64_t v111 = (llvm::MDNode **)((char *)v125 + 16 * v126);
                  do
                  {
                    llvm::Instruction::setMetadata((llvm::Instruction *)v66, *(_DWORD *)v110, v110[1]);
                    v110 += 2;
                  }
                  while (v110 != v111);
                }
              }
            }
            else
            {
              __int16 v142 = 257;
              uint64_t v66 = (unsigned __int8 *)llvm::CastInst::Create(49, (uint64_t)v66, v41, __src, 0);
              (*((void (**)(void **, unsigned __int8 *, void *, uint64_t, char *))*v132 + 2))(v132, v66, v117, v128, v129);
              if (v126)
              {
                unint64_t v94 = (llvm::MDNode **)v125;
                uint64_t v95 = (llvm::MDNode **)((char *)v125 + 16 * v126);
                do
                {
                  llvm::Instruction::setMetadata((llvm::Instruction *)v66, *(_DWORD *)v94, v94[1]);
                  v94 += 2;
                }
                while (v94 != v95);
              }
            }
          }
          uint64_t v100 = *((void *)v8 - 12);
          uint64_t v101 = *((void *)v8 - 8);
          __int16 v142 = 257;
          uint64_t v70 = (uint64_t)sub_1CD5AB030((uint64_t)&v125, (uint64_t)v114, (uint64_t)v66, v100, v101, (uint64_t *)__p, (v120 - (unsigned char *)__p) >> 3, (uint64_t)__src);
        }
        uint64_t v71 = (llvm::Value *)v70;
        *(_WORD *)(v70 + 18) = *(_WORD *)(v70 + 18) & 0xF003 | *((_WORD *)v8 + 9) & 0xFFC;
        uint64_t v72 = *((void *)v8 + 8);
        __int16 v73 = **v3;
        __src[0] = (const char *)llvm::Attribute::get(v73, 0x12u, 0);
        uint64_t v74 = llvm::AttributeSetNode::get(v73, __src, 1);
        int v75 = (char *)operator new(8uLL);
        __int16 v76 = v75;
        *(void *)int v75 = v74;
        char v77 = v75 + 8;
        if (!v72)
        {
          uint64_t v78 = 0;
          uint64_t v79 = 0;
          uint64_t v80 = **v3;
          goto LABEL_113;
        }
        uint64_t v81 = (uint64_t *)(v72 + 40);
        LODWORD(v82) = *(_DWORD *)(v72 + 8);
        if (v82 >= 3)
        {
          uint64_t v112 = v71;
          __int16 v83 = v75 + 8;
          unint64_t v84 = 2;
          uint64_t v113 = (uint64_t *)(v72 + 40);
          uint64_t v115 = v72;
          do
          {
            uint64_t v85 = v81[v84];
            if (v77 >= v83)
            {
              unint64_t v86 = v3;
              uint64_t v87 = (v77 - v76) >> 3;
              unint64_t v88 = v87 + 1;
              if ((unint64_t)(v87 + 1) >> 61) {
                goto LABEL_164;
              }
              if ((v83 - v76) >> 2 > v88) {
                unint64_t v88 = (v83 - v76) >> 2;
              }
              if ((unint64_t)(v83 - v76) >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v89 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v89 = v88;
              }
              if (v89)
              {
                if (v89 >> 61) {
                  goto LABEL_165;
                }
                char v90 = (char *)operator new(8 * v89);
              }
              else
              {
                char v90 = 0;
              }
              uint64_t v91 = (uint64_t *)&v90[8 * v87];
              __int16 v83 = &v90[8 * v89];
              uint64_t *v91 = v85;
              uint64_t v92 = (char *)(v91 + 1);
              if (v77 == v76) {
                goto LABEL_105;
              }
              do
              {
                uint64_t v93 = *((void *)v77 - 1);
                v77 -= 8;
                *--uint64_t v91 = v93;
              }
              while (v77 != v76);
              if (v76) {
LABEL_105:
              }
                operator delete(v76);
              __int16 v76 = (char *)v91;
              char v77 = v92;
              uint64_t v3 = v86;
              uint64_t v81 = v113;
              uint64_t v72 = v115;
            }
            else
            {
              *(void *)char v77 = v85;
              v77 += 8;
            }
            ++v84;
            unint64_t v82 = *(unsigned int *)(v72 + 8);
          }
          while (v84 < v82);
          uint64_t v71 = v112;
        }
        uint64_t v80 = **v3;
        if (v82)
        {
          uint64_t v78 = *v81;
          if (v82 == 1) {
            goto LABEL_111;
          }
          uint64_t v79 = *(void *)(v72 + 48);
        }
        else
        {
          uint64_t v78 = 0;
LABEL_111:
          uint64_t v79 = 0;
        }
LABEL_113:
        *((void *)v71 + 8) = llvm::AttributeList::get(v80, v78, v79, v76, (v77 - v76) >> 3);
        llvm::Value::doRAUW(v8, v71, (llvm::Value *)1);
        llvm::SymbolTableListTraits<llvm::Instruction>::removeNodeFromList();
      }
    }
LABEL_114:
    v5 += 24;
  }
  while (v5 != v6);
}

uint64_t sub_1CC9CDA58(uint64_t a1, int a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (a2)
  {
    int v5 = a2 - 1;
    unsigned int v6 = ((a3 >> 4) ^ (a3 >> 9) ^ (37 * a4)) & (a2 - 1);
    uint64_t v7 = (void *)(a1 + 24 * v6);
    uint64_t v8 = *v7;
    uint64_t v9 = v7[1];
    if (*v7 == a3 && v9 == a4)
    {
      uint64_t v11 = 1;
    }
    else
    {
      unint64_t v13 = 0;
      int v14 = 1;
      while (v8 != -4096 || v9 != -1)
      {
        if (v13) {
          BOOL v15 = 0;
        }
        else {
          BOOL v15 = v9 == -2;
        }
        if (v15 && v8 == -8192) {
          unint64_t v13 = v7;
        }
        unsigned int v17 = v6 + v14++;
        unsigned int v6 = v17 & v5;
        uint64_t v7 = (void *)(a1 + 24 * (v17 & v5));
        uint64_t v8 = *v7;
        uint64_t v9 = v7[1];
        uint64_t v11 = 1;
        if (*v7 == a3 && v9 == a4) {
          goto LABEL_9;
        }
      }
      uint64_t v11 = 0;
      if (v13) {
        uint64_t v7 = v13;
      }
    }
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v11 = 0;
  }
LABEL_9:
  *a5 = v7;
  return v11;
}

uint64_t sub_1CC9CDB14(unint64_t a1)
{
  if (a1 >= 8)
  {
    int v1 = *(uint64_t **)((a1 & 0xFFFFFFFFFFFFFFF8) + 24);
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 32) - (void)v1;
    if (v2)
    {
      unint64_t v3 = v2 & 0xFFFFFFFFFFFFFFF8;
      while (1)
      {
        uint64_t v4 = *v1;
        if ((*(_WORD *)(*v1 + 12) & 0x80) == 0 || *(_DWORD *)(v4 + 8) == 1 && (*(unsigned char *)(v4 + 69) & 2) == 0) {
          break;
        }
        ++v1;
        v3 -= 8;
        if (!v3) {
          return 1;
        }
      }
    }
  }
  return 0;
}

BOOL sub_1CC9CDB6C(void *a1, uint64_t *a2)
{
  unint64_t v2 = *a2 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v3 = *(uint64_t **)(v2 + 24);
  if (*(uint64_t **)(v2 + 32) == v3) {
    return 0;
  }
  char v13 = 0;
  int v12 = 3;
  v11[0] = a2;
  v11[1] = (uint64_t *)&v12;
  v11[2] = (uint64_t *)&v13;
  v11[3] = v3;
  sub_1CC9CDC38(v11, a1);
  int v5 = (void *)a1[10];
  unsigned int v6 = a1 + 11;
  if (v5 != v6)
  {
    do
    {
      sub_1CC9CDC38(v11, v5 + 7);
      uint64_t v7 = (void *)v5[1];
      if (v7)
      {
        do
        {
          uint64_t v8 = v7;
          uint64_t v7 = (void *)*v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          uint64_t v8 = (void *)v5[2];
          BOOL v9 = *v8 == (void)v5;
          int v5 = v8;
        }
        while (!v9);
      }
      int v5 = v8;
    }
    while (v8 != v6);
  }
  return v13 != 0;
}

void sub_1CC9CDC38(uint64_t **a1, void *a2)
{
  unint64_t v3 = (uint64_t *)a2[4];
  uint64_t v4 = (uint64_t *)a2[5];
  while (v3 != v4)
  {
    uint64_t v5 = *v3;
    uint64_t v6 = **a1;
    uint64_t v7 = *(unsigned int *)a1[1];
    BOOL v9 = *(char **)(*v3 + 88);
    unint64_t v8 = *(void *)(*v3 + 96);
    if ((unint64_t)v9 >= v8)
    {
      uint64_t v11 = *(char **)(v5 + 80);
      uint64_t v12 = (v9 - v11) >> 4;
      unint64_t v13 = v12 + 1;
      if ((unint64_t)(v12 + 1) >> 60) {
LABEL_52:
      }
        abort();
      uint64_t v14 = v8 - (void)v11;
      if (v14 >> 3 > v13) {
        unint64_t v13 = v14 >> 3;
      }
      if ((unint64_t)v14 >= 0x7FFFFFFFFFFFFFF0) {
        unint64_t v15 = 0xFFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v15 = v13;
      }
      if (v15)
      {
        if (v15 >> 60) {
LABEL_53:
        }
          sub_1CB833614();
        unsigned int v16 = (char *)operator new(16 * v15);
      }
      else
      {
        unsigned int v16 = 0;
      }
      unsigned int v17 = &v16[16 * v12];
      *(void *)unsigned int v17 = v6;
      *((void *)v17 + 1) = v7;
      unsigned int v18 = v17;
      if (v9 != v11)
      {
        do
        {
          *((_OWORD *)v18 - 1) = *((_OWORD *)v9 - 1);
          v18 -= 16;
          v9 -= 16;
        }
        while (v9 != v11);
        BOOL v9 = *(char **)(v5 + 80);
      }
      uint64_t v10 = v17 + 16;
      *(void *)(v5 + 80) = v18;
      *(void *)(v5 + 88) = v17 + 16;
      *(void *)(v5 + 96) = &v16[16 * v15];
      if (v9) {
        operator delete(v9);
      }
    }
    else
    {
      *(void *)BOOL v9 = v6;
      *((void *)v9 + 1) = v7;
      uint64_t v10 = v9 + 16;
    }
    *(void *)(v5 + 88) = v10;
    uint64_t v19 = *a1[3];
    size_t v20 = *(void *)(v19 + 32);
    if (v20 == *(void *)(v5 + 32))
    {
      if (v20) {
        BOOL v21 = memcmp(*(const void **)(v19 + 24), *(const void **)(v5 + 24), v20) != 0;
      }
      else {
        BOOL v21 = 0;
      }
    }
    else
    {
      BOOL v21 = 1;
    }
    *(unsigned char *)a1[2] |= v21;
    ++v3;
  }
  uint64_t v22 = (uint64_t *)a2[7];
  uint64_t v23 = (uint64_t *)a2[8];
  while (v22 != v23)
  {
    uint64_t v24 = *v22;
    uint64_t v25 = **a1;
    uint64_t v26 = *(unsigned int *)a1[1];
    int v28 = *(char **)(*v22 + 88);
    unint64_t v27 = *(void *)(*v22 + 96);
    if ((unint64_t)v28 >= v27)
    {
      int v30 = *(char **)(v24 + 80);
      uint64_t v31 = (v28 - v30) >> 4;
      unint64_t v32 = v31 + 1;
      if ((unint64_t)(v31 + 1) >> 60) {
        goto LABEL_52;
      }
      uint64_t v33 = v27 - (void)v30;
      if (v33 >> 3 > v32) {
        unint64_t v32 = v33 >> 3;
      }
      if ((unint64_t)v33 >= 0x7FFFFFFFFFFFFFF0) {
        unint64_t v34 = 0xFFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v34 = v32;
      }
      if (v34)
      {
        if (v34 >> 60) {
          goto LABEL_53;
        }
        size_t v35 = (char *)operator new(16 * v34);
      }
      else
      {
        size_t v35 = 0;
      }
      long long v36 = &v35[16 * v31];
      *(void *)long long v36 = v25;
      *((void *)v36 + 1) = v26;
      uint64_t v37 = v36;
      if (v28 != v30)
      {
        do
        {
          *((_OWORD *)v37 - 1) = *((_OWORD *)v28 - 1);
          v37 -= 16;
          v28 -= 16;
        }
        while (v28 != v30);
        int v28 = *(char **)(v24 + 80);
      }
      char v29 = v36 + 16;
      *(void *)(v24 + 80) = v37;
      *(void *)(v24 + 88) = v36 + 16;
      *(void *)(v24 + 96) = &v35[16 * v34];
      if (v28) {
        operator delete(v28);
      }
    }
    else
    {
      *(void *)int v28 = v25;
      *((void *)v28 + 1) = v26;
      char v29 = v28 + 16;
    }
    *(void *)(v24 + 88) = v29;
    uint64_t v38 = *a1[3];
    size_t v39 = *(void *)(v38 + 32);
    if (v39 == *(void *)(v24 + 32))
    {
      if (v39) {
        BOOL v40 = memcmp(*(const void **)(v38 + 24), *(const void **)(v24 + 24), v39) != 0;
      }
      else {
        BOOL v40 = 0;
      }
    }
    else
    {
      BOOL v40 = 1;
    }
    *(unsigned char *)a1[2] |= v40;
    ++v22;
  }
}

void sub_1CC9CDEF8(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t *a4, uint64_t a5, const void *a6, size_t a7, unsigned int a8, unsigned int *a9)
{
  if (sub_1CC9CCB38(*(void *)a1))
  {
    uint64_t v18 = *(void *)(a1 + 72);
    uint64_t v19 = a8;
    size_t v20 = *(llvm::ConstantInt **)v18;
    unint64_t v21 = *(unsigned int *)(v18 + 8);
    unsigned int v26 = v21 >> 8;
    if (v21 >> 8 > 0x40) {
      operator new[]();
    }
    if (v21 <= 0xFF) {
      unint64_t v22 = 0;
    }
    else {
      unint64_t v22 = 0xFFFFFFFFFFFFFFFFLL >> ~(BYTE1(v21) + 63);
    }
    unint64_t v25 = v22 & v19;
    uint64_t v23 = (llvm::detail::IEEEFloat *)llvm::ConstantInt::get(v20, (llvm::LLVMContext *)&v25, v17);
    if (v26 >= 0x41 && v25) {
      MEMORY[0x1D25D9CB0](v25, 0x1000C8000313F17);
    }
    uint64_t v24 = sub_1CC56C0C0((llvm *)0x30, v23, *(llvm::Constant **)(a1 + 64), 0);
    sub_1CC9CE400((uint64_t *)a1, a2, a3, a4, a5, a6, a7, (unint64_t)v24);
  }
  else
  {
    *a9 = a8;
  }
}

uint64_t sub_1CC9CE0B8(uint64_t ******a1, unsigned int a2)
{
  uint64_t v4 = (uint64_t)a1[1];
  uint64_t v5 = (*a1)[1];
  if (v5)
  {
    uint64_t v6 = 0;
    uint64_t v7 = 32 * (void)v5;
    unint64_t v8 = **a1 + 2;
    while (1)
    {
      if (*v8 == a2)
      {
        if (v6) {
          return 0;
        }
        uint64_t v6 = (uint64_t ***)*(v8 - 1);
      }
      v8 += 4;
      v7 -= 32;
      if (!v7) {
        goto LABEL_9;
      }
    }
  }
  uint64_t v6 = 0;
LABEL_9:
  uint64_t v9 = sub_1CC9CE290(a1[1], v6);
  uint64_t v10 = (uint64_t)a1[2];
  if (*(unsigned char *)(v10 + 25) || *(void *)(v10 + 32) != *(void *)(v10 + 40))
  {
    uint64_t v11 = (uint64_t *)a1[4];
    uint64_t v12 = (uint64_t)*a1[3];
    *(_DWORD *)uint64_t v12 = 2;
    *(void *)(v12 + 8) = a2;
    sub_1CC9CE400((uint64_t *)v4, *v11, v11[1], (unint64_t *)*a1[5], (uint64_t)a1[5][1], "unique_member", 0xDuLL, v9);
    uint64_t v10 = (uint64_t)a1[2];
  }
  unint64_t v13 = ***a1;
  if ((*((unsigned char *)v13 + 23) & 0x10) != 0)
  {
    uint64_t v14 = ***v13;
    uint64_t v15 = *(void *)(v14 + 152);
    uint64_t v16 = *(unsigned int *)(v14 + 168);
    if (v16)
    {
      LODWORD(v17) = (v16 - 1) & ((v13 >> 4) ^ (v13 >> 9));
      uint64_t v18 = (uint64_t ****)(v15 + 16 * v17);
      uint64_t v19 = *v18;
      if (*v18 == v13)
      {
LABEL_21:
        uint64_t v23 = v18[1];
        size_t v26 = (size_t)*v23;
        uint64_t v24 = (char *)(v23 + 2);
        size_t v25 = v26;
        goto LABEL_22;
      }
      int v20 = 1;
      while (v19 != (uint64_t ***)-4096)
      {
        int v21 = v17 + v20++;
        uint64_t v17 = v21 & (v16 - 1);
        uint64_t v19 = *(uint64_t ****)(v15 + 16 * v17);
        if (v19 == v13)
        {
          uint64_t v18 = (uint64_t ****)(v15 + 16 * v17);
          goto LABEL_21;
        }
      }
    }
    uint64_t v18 = (uint64_t ****)(v15 + 16 * v16);
    goto LABEL_21;
  }
  size_t v25 = 0;
  uint64_t v24 = &byte_1CFBCE98E;
LABEL_22:
  sub_1CC9CA3CC(v4, v10, v24, v25, a2, v9);
  if (!*(unsigned char *)(v4 + 104) && (byte_1EBD0C080 & 1) == 0 && !byte_1EA61F098) {
    return 1;
  }
  unint64_t v27 = (*a1)[1];
  if (!v27) {
    return 1;
  }
  uint64_t v28 = 32 * (void)v27;
  char v29 = (char *)**a1 + 25;
  uint64_t result = 1;
  do
  {
    unsigned char *v29 = 1;
    v29 += 32;
    v28 -= 32;
  }
  while (v28);
  return result;
}

uint64_t sub_1CC9CE290(void *a1, uint64_t ***a2)
{
  uint64_t v4 = **a2;
  uint64_t v5 = (llvm::Constant *)a1[8];
  if ((llvm::Constant *)*v4 != v5) {
    uint64_t v4 = (uint64_t *)sub_1CC56C0C0((llvm *)0x31, (llvm::detail::IEEEFloat *)**a2, v5, 0);
  }
  uint64_t v6 = a1[7];
  uint64_t v7 = a1[10];
  unint64_t v8 = (unint64_t)a2[1];
  uint64_t v9 = *(llvm::ConstantInt **)v7;
  unint64_t v10 = *(unsigned int *)(v7 + 8);
  unsigned int v15 = v10 >> 8;
  if (v10 >> 8 > 0x40) {
    operator new[]();
  }
  if (v10 <= 0xFF) {
    unint64_t v11 = 0;
  }
  else {
    unint64_t v11 = 0xFFFFFFFFFFFFFFFFLL >> ~(BYTE1(v10) + 63);
  }
  uint64_t v14 = (void *)(v11 & v8);
  uint64_t v12 = llvm::ConstantInt::get(v9, (llvm::LLVMContext *)&v14, v5);
  if (v15 >= 0x41 && v14) {
    MEMORY[0x1D25D9CB0](v14, 0x1000C8000313F17);
  }
  uint64_t v14 = v12;
  return llvm::ConstantExpr::getGetElementPtr(v6, v4, (uint64_t)&v14, 1, 0, 0, 0);
}

void sub_1CC9CE400(uint64_t *a1, uint64_t a2, unint64_t a3, unint64_t *a4, uint64_t a5, const void *a6, size_t a7, unint64_t a8)
{
  unint64_t v10 = (llvm::PointerType *)a1[7];
  sub_1CC9CB9F8((uint64_t)__p, a2, a3, a4, a5, a6, a7);
  __int16 v17 = 260;
  uint64_t v16 = __p;
  unint64_t v11 = llvm::GlobalAlias::create(v10, 0, 0, (const char **)&v16, a8, *a1);
  if (v15 < 0) {
    operator delete(__p[0]);
  }
  int v12 = *((_DWORD *)v11 + 8);
  unsigned int v13 = v12 & 0xFFFFFFCF | 0x10;
  *((_DWORD *)v11 + 8) = v13;
  if ((v12 & 0xFu) - 7 >= 2)
  {
    if (llvm::GlobalValue::hasExternalWeakLinkage((llvm::GlobalValue *)v11)) {
      return;
    }
    unsigned int v13 = *((_DWORD *)v11 + 8);
  }
  *((_DWORD *)v11 + 8) = v13 | 0x4000;
}

unint64_t sub_1CC9CE4B8(uint64_t a1, long long *a2)
{
  long long v50 = *a2;
  uint64_t v51 = *((void *)a2 + 2);
  int v52 = 0;
  *(void *)&long long v38 = 0;
  char v4 = sub_1CC9CED44(*(void *)a1, *(_DWORD *)(a1 + 16), (uint64_t)&v50, &v38);
  uint64_t v5 = v38;
  if (v4)
  {
    unsigned int v6 = *(_DWORD *)(v38 + 24);
    uint64_t v7 = *(void *)(a1 + 24);
    return v7 + ((unint64_t)v6 << 7) + 24;
  }
  int v8 = *(_DWORD *)(a1 + 8);
  unsigned int v9 = *(_DWORD *)(a1 + 16);
  if (4 * v8 + 4 >= 3 * v9)
  {
    v9 *= 2;
  }
  else if (v9 + ~v8 - *(_DWORD *)(a1 + 12) > v9 >> 3)
  {
    goto LABEL_5;
  }
  sub_1CC9CEE88(a1, v9);
  *(void *)&long long v38 = 0;
  sub_1CC9CED44(*(void *)a1, *(_DWORD *)(a1 + 16), (uint64_t)&v50, &v38);
  uint64_t v5 = v38;
LABEL_5:
  ++*(_DWORD *)(a1 + 8);
  if (*(void *)(v5 + 8) || *(void *)(v5 + 16) != -1) {
    --*(_DWORD *)(a1 + 12);
  }
  *(_OWORD *)uint64_t v5 = v50;
  *(void *)(v5 + 16) = v51;
  *(_DWORD *)(v5 + 24) = 0;
  long long v38 = *a2;
  uint64_t v39 = *((void *)a2 + 2);
  long long v40 = 0uLL;
  uint64_t v41 = 0;
  __int16 v42 = 1;
  long long v43 = 0uLL;
  uint64_t v44 = 0;
  long long __p = 0uLL;
  uint64_t v46 = 0;
  BOOL v48 = 0;
  uint64_t v49 = 0;
  uint64_t v47 = &v48;
  unint64_t v11 = *(char **)(a1 + 32);
  unint64_t v10 = *(void *)(a1 + 40);
  if ((unint64_t)v11 >= v10)
  {
    uint64_t v16 = *(char **)(a1 + 24);
    uint64_t v17 = (v11 - v16) >> 7;
    unint64_t v18 = v17 + 1;
    if ((unint64_t)(v17 + 1) >> 57) {
      abort();
    }
    uint64_t v19 = v10 - (void)v16;
    if (v19 >> 6 > v18) {
      unint64_t v18 = v19 >> 6;
    }
    if ((unint64_t)v19 >= 0x7FFFFFFFFFFFFF80) {
      unint64_t v20 = 0x1FFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v20 = v18;
    }
    if (v20 >> 57) {
      sub_1CB833614();
    }
    int v21 = (char *)operator new(v20 << 7);
    unint64_t v22 = &v21[128 * v17];
    *(_OWORD *)unint64_t v22 = *a2;
    uint64_t v23 = &v21[128 * v20];
    *((void *)v22 + 2) = *((void *)a2 + 2);
    *((void *)v22 + 3) = 0;
    *((void *)v22 + 4) = 0;
    *((void *)v22 + 5) = 0;
    uint64_t v41 = 0;
    long long v40 = 0uLL;
    *((_WORD *)v22 + 24) = 1;
    *((void *)v22 + 7) = 0;
    *((void *)v22 + 8) = 0;
    uint64_t v44 = 0;
    long long v43 = 0uLL;
    *((void *)v22 + 9) = 0;
    *((void *)v22 + 10) = 0;
    *((void *)v22 + 11) = 0;
    *((void *)v22 + 12) = 0;
    long long __p = 0uLL;
    uint64_t v46 = 0;
    *((void *)v22 + 15) = 0;
    *((void *)v22 + 14) = 0;
    uint64_t v24 = v22 + 128;
    *((void *)v22 + 13) = v22 + 112;
    if (v11 == v16)
    {
      *(void *)(a1 + 24) = v22;
      *(void *)(a1 + 32) = v24;
      *(void *)(a1 + 40) = v23;
    }
    else
    {
      uint64_t v25 = 0;
      do
      {
        size_t v26 = &v22[v25];
        unint64_t v27 = &v11[v25];
        long long v28 = *(_OWORD *)&v11[v25 - 128];
        *((void *)v26 - 14) = *(void *)&v11[v25 - 112];
        *((_OWORD *)v26 - 8) = v28;
        *(_OWORD *)(v26 - 104) = *(_OWORD *)&v11[v25 - 104];
        *((void *)v26 - 11) = *(void *)&v11[v25 - 88];
        *((void *)v27 - 13) = 0;
        *((void *)v27 - 12) = 0;
        *((void *)v27 - 11) = 0;
        *((_WORD *)v26 - 40) = *(_WORD *)&v11[v25 - 80];
        *(_OWORD *)(v26 - 72) = *(_OWORD *)&v11[v25 - 72];
        *((void *)v26 - 7) = *(void *)&v11[v25 - 56];
        *((void *)v27 - 9) = 0;
        *((void *)v27 - 8) = 0;
        *((void *)v27 - 7) = 0;
        *((_OWORD *)v26 - 3) = *(_OWORD *)&v11[v25 - 48];
        *((void *)v26 - 4) = *(void *)&v11[v25 - 32];
        *((void *)v27 - 6) = 0;
        *((void *)v27 - 5) = 0;
        *((void *)v27 - 4) = 0;
        *((void *)v26 - 3) = *(void *)&v11[v25 - 24];
        char v29 = &v11[v25 - 16];
        uint64_t v30 = *(void *)v29;
        *(void *)&v22[v25 - 16] = *(void *)v29;
        uint64_t v31 = (uint64_t)&v22[v25 - 16];
        uint64_t v32 = *(void *)&v11[v25 - 8];
        *((void *)v26 - 1) = v32;
        if (v32)
        {
          *(void *)(v30 + 16) = v31;
          *((void *)v27 - 3) = v29;
          *(void *)char v29 = 0;
          *(void *)&v11[v25 - 8] = 0;
        }
        else
        {
          *((void *)v26 - 3) = v31;
        }
        v25 -= 128;
      }
      while (&v11[v25] != v16);
      unint64_t v11 = *(char **)(a1 + 24);
      uint64_t v33 = *(char **)(a1 + 32);
      *(void *)(a1 + 24) = &v22[v25];
      *(void *)(a1 + 32) = v24;
      *(void *)(a1 + 40) = v23;
      while (v33 != v11)
      {
        sub_1CC9C7E80(*((void **)v33 - 2));
        unint64_t v34 = (void *)*((void *)v33 - 6);
        if (v34)
        {
          *((void *)v33 - 5) = v34;
          operator delete(v34);
        }
        size_t v35 = (void *)*((void *)v33 - 9);
        if (v35)
        {
          *((void *)v33 - 8) = v35;
          operator delete(v35);
        }
        long long v36 = (void *)*((void *)v33 - 13);
        if (v36)
        {
          *((void *)v33 - 12) = v36;
          operator delete(v36);
        }
        v33 -= 128;
      }
    }
    if (v11) {
      operator delete(v11);
    }
  }
  else
  {
    uint64_t v12 = *((void *)a2 + 2);
    *(_OWORD *)unint64_t v11 = *a2;
    *((void *)v11 + 2) = v12;
    *((void *)v11 + 3) = 0;
    *((void *)v11 + 4) = 0;
    *((void *)v11 + 5) = 0;
    *(_OWORD *)(v11 + 24) = v40;
    *((void *)v11 + 5) = v41;
    long long v40 = 0uLL;
    uint64_t v41 = 0;
    *((_WORD *)v11 + 24) = v42;
    *((void *)v11 + 8) = 0;
    *((void *)v11 + 9) = 0;
    *((void *)v11 + 7) = 0;
    *(_OWORD *)(v11 + 56) = v43;
    *((void *)v11 + 9) = v44;
    *((void *)v11 + 10) = 0;
    long long v43 = 0uLL;
    uint64_t v44 = 0;
    *((void *)v11 + 11) = 0;
    *((void *)v11 + 12) = 0;
    *((_OWORD *)v11 + 5) = __p;
    *((void *)v11 + 12) = v46;
    long long __p = 0uLL;
    uint64_t v46 = 0;
    *((void *)v11 + 13) = v47;
    unsigned int v13 = v48;
    *((void *)v11 + 14) = v48;
    uint64_t v14 = v11 + 112;
    uint64_t v15 = v49;
    *((void *)v11 + 15) = v49;
    if (v15)
    {
      v13[2] = v14;
      uint64_t v47 = &v48;
      BOOL v48 = 0;
      uint64_t v49 = 0;
    }
    else
    {
      *((void *)v11 + 13) = v14;
    }
    uint64_t v24 = v11 + 128;
  }
  *(void *)(a1 + 32) = v24;
  sub_1CC9C7E80(v48);
  if ((void)__p)
  {
    *((void *)&__p + 1) = __p;
    operator delete((void *)__p);
  }
  if ((void)v43)
  {
    *((void *)&v43 + 1) = v43;
    operator delete((void *)v43);
  }
  if ((void)v40)
  {
    *((void *)&v40 + 1) = v40;
    operator delete((void *)v40);
  }
  sub_1CC9C7E80(0);
  uint64_t v7 = *(void *)(a1 + 24);
  unsigned int v6 = ((unint64_t)(*(void *)(a1 + 32) - v7) >> 7) - 1;
  *(_DWORD *)(v5 + 24) = v6;
  return v7 + ((unint64_t)v6 << 7) + 24;
}

void *sub_1CC9CE970(uint64_t a1, uint64_t *a2, void *a3)
{
  int v5 = *(_DWORD *)(a1 + 8);
  unsigned int v6 = *(_DWORD *)(a1 + 16);
  if (4 * v5 + 4 >= 3 * v6)
  {
    sub_1CC9CEAE8((uint64_t *)a1, 2 * v6);
    uint64_t v7 = *a2;
    int v9 = *(_DWORD *)(a1 + 16) - 1;
    uint64_t v10 = (37 * *a2) & v9;
    a3 = (void *)(*(void *)a1 + 32 * v10);
    uint64_t v11 = *a3;
    if (*a2 != *a3)
    {
      uint64_t v12 = 0;
      int v13 = 1;
      while (v11 != -1)
      {
        if (v12) {
          BOOL v14 = 0;
        }
        else {
          BOOL v14 = v11 == -2;
        }
        if (v14) {
          uint64_t v12 = a3;
        }
        int v15 = v10 + v13++;
        uint64_t v10 = v15 & v9;
        a3 = (void *)(*(void *)a1 + 32 * v10);
        uint64_t v11 = *a3;
        if (v7 == *a3) {
          goto LABEL_4;
        }
      }
      goto LABEL_27;
    }
  }
  else
  {
    if (v6 + ~v5 - *(_DWORD *)(a1 + 12) > v6 >> 3)
    {
LABEL_3:
      uint64_t v7 = *a3;
      goto LABEL_4;
    }
    sub_1CC9CEAE8((uint64_t *)a1, v6);
    uint64_t v7 = *a2;
    int v16 = *(_DWORD *)(a1 + 16) - 1;
    uint64_t v17 = (37 * *a2) & v16;
    a3 = (void *)(*(void *)a1 + 32 * v17);
    uint64_t v18 = *a3;
    if (*a2 != *a3)
    {
      uint64_t v12 = 0;
      int v19 = 1;
      while (v18 != -1)
      {
        if (v12) {
          BOOL v20 = 0;
        }
        else {
          BOOL v20 = v18 == -2;
        }
        if (v20) {
          uint64_t v12 = a3;
        }
        int v21 = v17 + v19++;
        uint64_t v17 = v21 & v16;
        a3 = (void *)(*(void *)a1 + 32 * v17);
        uint64_t v18 = *a3;
        if (v7 == *a3) {
          goto LABEL_4;
        }
      }
LABEL_27:
      if (v12) {
        a3 = v12;
      }
      goto LABEL_3;
    }
  }
LABEL_4:
  ++*(_DWORD *)(a1 + 8);
  if (v7 != -1) {
    --*(_DWORD *)(a1 + 12);
  }
  return a3;
}

void *sub_1CC9CEAE8(uint64_t *a1, int a2)
{
  uint64_t v3 = *((unsigned int *)a1 + 4);
  char v4 = (uint64_t *)*a1;
  unint64_t v5 = (a2 - 1) | ((unint64_t)(a2 - 1) >> 1);
  unint64_t v6 = v5 | (v5 >> 2) | ((v5 | (v5 >> 2)) >> 4);
  int v7 = ((v6 | (v6 >> 8)) >> 16) | v6 | (v6 >> 8);
  if ((v7 + 1) > 0x40) {
    unsigned int v8 = v7 + 1;
  }
  else {
    unsigned int v8 = 64;
  }
  *((_DWORD *)a1 + 4) = v8;
  uint64_t result = operator new(32 * v8, (std::align_val_t)8uLL);
  *a1 = (uint64_t)result;
  if (v4)
  {
    a1[1] = 0;
    uint64_t v10 = *((unsigned int *)a1 + 4);
    if (v10)
    {
      uint64_t v11 = 32 * v10;
      do
      {
        *uint64_t result = -1;
        result += 4;
        v11 -= 32;
      }
      while (v11);
    }
    if (v3)
    {
      int v12 = 0;
      unsigned int v13 = v10 - 1;
      BOOL v14 = v4;
      do
      {
        unint64_t v15 = *v14;
        if ((unint64_t)*v14 <= 0xFFFFFFFFFFFFFFFDLL)
        {
          uint64_t v16 = (37 * v15) & v13;
          uint64_t v17 = (unint64_t *)(*a1 + 32 * v16);
          unint64_t v18 = *v17;
          if (v15 != *v17)
          {
            int v19 = 0;
            int v20 = 1;
            while (v18 != -1)
            {
              if (v19) {
                BOOL v21 = 0;
              }
              else {
                BOOL v21 = v18 == -2;
              }
              if (v21) {
                int v19 = v17;
              }
              int v22 = v16 + v20++;
              uint64_t v16 = v22 & v13;
              uint64_t v17 = (unint64_t *)(*a1 + 32 * v16);
              unint64_t v18 = *v17;
              if (v15 == *v17) {
                goto LABEL_12;
              }
            }
            if (v19) {
              uint64_t v17 = v19;
            }
          }
LABEL_12:
          *uint64_t v17 = v15;
          v17[1] = 0;
          v17[2] = 0;
          v17[3] = 0;
          *(_OWORD *)(v17 + 1) = *(_OWORD *)(v14 + 1);
          v17[3] = v14[3];
          ++v12;
          v14[1] = 0;
          v14[2] = 0;
          v14[3] = 0;
          *((_DWORD *)a1 + 2) = v12;
        }
        v14 += 4;
      }
      while (v14 != &v4[4 * v3]);
    }
    JUMPOUT(0x1D25D9CD0);
  }
  a1[1] = 0;
  uint64_t v23 = *((unsigned int *)a1 + 4);
  if (v23)
  {
    uint64_t v24 = 32 * v23;
    do
    {
      *uint64_t result = -1;
      result += 4;
      v24 -= 32;
    }
    while (v24);
  }
  return result;
}

void *sub_1CC9CEC88(uint64_t a1, uint64_t *a2)
{
  int v3 = *(_DWORD *)(a1 + 16);
  if (!v3)
  {
    int v12 = 0;
LABEL_13:
    unint64_t v6 = sub_1CC9CE970(a1, a2, v12);
    uint64_t v13 = *a2;
    v6[2] = 0;
    v6[3] = 0;
    *unint64_t v6 = v13;
    v6[1] = 0;
    return v6;
  }
  unsigned int v4 = v3 - 1;
  uint64_t v5 = (37 * *a2) & (v3 - 1);
  unint64_t v6 = (void *)(*(void *)a1 + 32 * v5);
  uint64_t v7 = *v6;
  if (*a2 != *v6)
  {
    unsigned int v8 = 0;
    int v9 = 1;
    while (v7 != -1)
    {
      if (v8) {
        BOOL v10 = 0;
      }
      else {
        BOOL v10 = v7 == -2;
      }
      if (v10) {
        unsigned int v8 = v6;
      }
      int v11 = v5 + v9++;
      uint64_t v5 = v11 & v4;
      unint64_t v6 = (void *)(*(void *)a1 + 32 * v5);
      uint64_t v7 = *v6;
      if (*a2 == *v6) {
        return v6;
      }
    }
    if (v8) {
      int v12 = v8;
    }
    else {
      int v12 = v6;
    }
    goto LABEL_13;
  }
  return v6;
}

uint64_t sub_1CC9CED44(uint64_t a1, int a2, uint64_t a3, void *a4)
{
  if (a2)
  {
    int v8 = sub_1CD0B03C8(*(void **)a3, *(void *)a3 + *(void *)(a3 + 8));
    uint64_t v9 = 0;
    uint64_t v10 = *(void *)(a3 + 16);
    int v11 = (37 * v10) ^ v8;
    unsigned int v12 = a2 - 1;
    uint64_t v13 = *(const void **)a3;
    size_t v14 = *(void *)(a3 + 8);
    for (int i = 1; ; ++i)
    {
      uint64_t v16 = v11 & v12;
      uint64_t v17 = a1 + 32 * v16;
      uint64_t v18 = *(void *)(v17 + 8);
      if (v14 == v18)
      {
        unsigned int v26 = v12;
        int v19 = v13;
        BOOL v20 = !v14 || memcmp(v13, *(const void **)v17, v14) == 0;
        uint64_t v21 = *(void *)(v17 + 16);
        if (v20)
        {
          uint64_t v13 = v19;
          unsigned int v12 = v26;
          if (v10 == v21)
          {
            uint64_t result = 1;
            goto LABEL_29;
          }
        }
        else
        {
          uint64_t v13 = v19;
          unsigned int v12 = v26;
        }
      }
      else
      {
        uint64_t v21 = *(void *)(v17 + 16);
      }
      if (!v18 && v21 == -1) {
        break;
      }
      if (v9) {
        BOOL v23 = 0;
      }
      else {
        BOOL v23 = v21 == -2;
      }
      if (v23 && v18 == 0) {
        uint64_t v9 = a1 + 32 * v16;
      }
      int v11 = v16 + i;
    }
    uint64_t result = 0;
    if (v9) {
      uint64_t v17 = v9;
    }
  }
  else
  {
    uint64_t v17 = 0;
    uint64_t result = 0;
  }
LABEL_29:
  *a4 = v17;
  return result;
}

char *sub_1CC9CEE88(uint64_t a1, int a2)
{
  uint64_t v3 = *(unsigned int *)(a1 + 16);
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = (a2 - 1) | ((unint64_t)(a2 - 1) >> 1);
  unint64_t v6 = v5 | (v5 >> 2) | ((v5 | (v5 >> 2)) >> 4);
  int v7 = ((v6 | (v6 >> 8)) >> 16) | v6 | (v6 >> 8);
  if ((v7 + 1) > 0x40) {
    unsigned int v8 = v7 + 1;
  }
  else {
    unsigned int v8 = 64;
  }
  *(_DWORD *)(a1 + 16) = v8;
  uint64_t result = (char *)operator new(32 * v8, (std::align_val_t)8uLL);
  *(void *)a1 = result;
  if (v4)
  {
    *(void *)(a1 + 8) = 0;
    uint64_t v10 = *(unsigned int *)(a1 + 16);
    if (v10)
    {
      int v11 = &result[32 * v10];
      do
      {
        *(_OWORD *)uint64_t result = xmmword_1CFAC4A20;
        *((void *)result + 2) = -1;
        result += 32;
      }
      while (result != v11);
    }
    if (v3)
    {
      uint64_t v12 = 32 * v3;
      uint64_t v13 = v4;
      do
      {
        if (*(void *)(v13 + 8)) {
          BOOL v14 = 0;
        }
        else {
          BOOL v14 = *(void *)(v13 + 16) > 0xFFFFFFFFFFFFFFFDLL;
        }
        if (!v14)
        {
          uint64_t v19 = 0;
          sub_1CC9CED44(*(void *)a1, *(_DWORD *)(a1 + 16), v13, &v19);
          uint64_t v15 = v19;
          long long v16 = *(_OWORD *)v13;
          *(void *)(v19 + 16) = *(void *)(v13 + 16);
          *(_OWORD *)uint64_t v15 = v16;
          *(_DWORD *)(v15 + 24) = *(_DWORD *)(v13 + 24);
          ++*(_DWORD *)(a1 + 8);
        }
        v13 += 32;
        v12 -= 32;
      }
      while (v12);
    }
    JUMPOUT(0x1D25D9CD0);
  }
  *(void *)(a1 + 8) = 0;
  uint64_t v17 = *(unsigned int *)(a1 + 16);
  if (v17)
  {
    uint64_t v18 = &result[32 * v17];
    do
    {
      *(_OWORD *)uint64_t result = xmmword_1CFAC4A20;
      *((void *)result + 2) = -1;
      result += 32;
    }
    while (result != v18);
  }
  return result;
}

BOOL sub_1CC9CEFF8(uint64_t a1, const void **a2, uint64_t a3)
{
  char v3 = *((unsigned char *)a2 + 23);
  int v4 = v3;
  size_t v5 = v3 & 0x7F;
  if (v4 >= 0) {
    size_t v6 = v5;
  }
  else {
    size_t v6 = (size_t)a2[1];
  }
  size_t v7 = *(void *)(a3 + 8);
  if (v7 >= v6) {
    size_t v8 = v6;
  }
  else {
    size_t v8 = *(void *)(a3 + 8);
  }
  if (v8 && (v4 >= 0 ? (uint64_t v9 = a2) : (uint64_t v9 = *a2), (v10 = memcmp(v9, *(const void **)a3, v8)) != 0))
  {
    int v11 = (v10 >> 31) | 1;
  }
  else
  {
    if (v6 < v7) {
      int v11 = -1;
    }
    else {
      int v11 = 1;
    }
    if (v6 == v7) {
      int v11 = 0;
    }
  }
  return v11 == -1;
}

BOOL sub_1CC9CF080(uint64_t a1, uint64_t a2, const void **a3)
{
  size_t v3 = *(void *)(a2 + 8);
  char v4 = *((unsigned char *)a3 + 23);
  int v5 = v4;
  size_t v6 = v4 & 0x7F;
  if (v5 >= 0) {
    size_t v7 = v6;
  }
  else {
    size_t v7 = (size_t)a3[1];
  }
  if (v7 >= v3) {
    size_t v8 = *(void *)(a2 + 8);
  }
  else {
    size_t v8 = v7;
  }
  if (v8 && (v5 >= 0 ? (uint64_t v9 = a3) : (uint64_t v9 = *a3), (v10 = memcmp(*(const void **)a2, v9, v8)) != 0))
  {
    int v11 = (v10 >> 31) | 1;
  }
  else
  {
    if (v3 < v7) {
      int v11 = -1;
    }
    else {
      int v11 = 1;
    }
    if (v3 == v7) {
      int v11 = 0;
    }
  }
  return v11 == -1;
}

void sub_1CC9CF108()
{
}

void sub_1CC9CF134()
{
}

void sub_1CC9CF160()
{
}

uint64_t sub_1CC9CF18C()
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  *(void *)&long long v2 = "What to do with the summary when running this pass";
  *((void *)&v2 + 1) = 50;
  v5.n128_u64[0] = (unint64_t)&v6;
  size_t v6 = "none";
  uint64_t v7 = 4;
  int v8 = 0;
  uint64_t v9 = "Do nothing";
  uint64_t v10 = 10;
  int v11 = "import";
  uint64_t v12 = 6;
  int v13 = 1;
  BOOL v14 = "Import typeid resolutions from summary and globals";
  uint64_t v15 = 50;
  long long v16 = "export";
  uint64_t v17 = 6;
  int v18 = 2;
  uint64_t v19 = "Export typeid resolutions to summary and globals";
  uint64_t v20 = 48;
  v5.n128_u64[1] = 0x400000003;
  int v4 = 1;
  sub_1CD688220(&v2, (uint64_t *)&v5, &v4);
  if ((const char **)v5.n128_u64[0] != &v6) {
    free((void *)v5.n128_u64[0]);
  }
  __cxa_atexit((void (*)(void *))sub_1CD66F254, &qword_1EBCE52E0, &dword_1CB82C000);
  v5.n128_u64[0] = (unint64_t)"Read summary from given bitcode or YAML file before running pass";
  v5.n128_u64[1] = 64;
  LODWORD(v2) = 1;
  sub_1CD68839C((long long *)&v5, &v2);
  __cxa_atexit((void (*)(void *))sub_1CD41C8DC, &qword_1EBCE5110, &dword_1CB82C000);
  v5.n128_u64[0] = (unint64_t)"Write summary to given bitcode or YAML file after running pass. Output file format "
                                     "is deduced from extension: *.bc means writing bitcode, otherwise YAML";
  v5.n128_u64[1] = 152;
  LODWORD(v2) = 1;
  sub_1CD6884B4((uint64_t)&unk_1EBCE51F8, "wholeprogramdevirt-write-summary", &v5, &v2);
  __cxa_atexit((void (*)(void *))sub_1CD41C8DC, &unk_1EBCE51F8, &dword_1CB82C000);
  int v3 = 10;
  int v4 = 1;
  *(void *)&long long v2 = &v3;
  int v1 = 1;
  v5.n128_u64[0] = (unint64_t)"Maximum number of call targets per call site to enable branch funnels";
  v5.n128_u64[1] = 69;
  sub_1CD6885C8(&v4, (int **)&v2, &v1, &v5);
  __cxa_atexit((void (*)(void *))sub_1CB8598A4, &qword_1EBCE4EB8, &dword_1CB82C000);
  int v3 = 1;
  int v4 = 1;
  LOBYTE(v1) = 0;
  *(void *)&long long v2 = &v1;
  v5.n128_u64[0] = (unint64_t)"Print index-based devirtualization messages";
  v5.n128_u64[1] = 43;
  sub_1CD68875C(&v4, (char **)&v2, &v3, &v5);
  __cxa_atexit((void (*)(void *))sub_1CB9064B0, &qword_1EBCE4F78, &dword_1CB82C000);
  LOBYTE(v1) = 0;
  *(void *)&long long v2 = &v1;
  int v3 = 1;
  int v4 = 1;
  v5.n128_u64[0] = (unint64_t)"Enable whole program visibility";
  v5.n128_u64[1] = 31;
  sub_1CD462280((llvm::cl::Option *)&unk_1EBD08F70, "whole-program-visibility", (unsigned char **)&v2, &v4, &v3, &v5);
  __cxa_atexit((void (*)(void *))sub_1CB9064B0, &unk_1EBD08F70, &dword_1CB82C000);
  LOBYTE(v1) = 0;
  *(void *)&long long v2 = &v1;
  int v3 = 1;
  int v4 = 1;
  v5.n128_u64[0] = (unint64_t)"Disable whole program visibility (overrides enabling options)";
  v5.n128_u64[1] = 61;
  sub_1CD462280((llvm::cl::Option *)&unk_1EBD09030, "disable-whole-program-visibility", (unsigned char **)&v2, &v4, &v3, &v5);
  __cxa_atexit((void (*)(void *))sub_1CB9064B0, &unk_1EBD09030, &dword_1CB82C000);
  v5.n128_u64[0] = (unint64_t)"Prevent function(s) from being devirtualized";
  v5.n128_u64[1] = 44;
  LODWORD(v2) = 1;
  int v3 = 1;
  int v4 = 1;
  sub_1CD6888F4(&v5, &v2, &v4, &v3);
  __cxa_atexit((void (*)(void *))sub_1CD510A20, &qword_1EBCE5038, &dword_1CB82C000);
  int v3 = 1;
  int v4 = 1;
  *(void *)&long long v2 = "Type of checking for incorrect devirtualizations";
  *((void *)&v2 + 1) = 48;
  v5.n128_u64[0] = (unint64_t)&v6;
  size_t v6 = "none";
  uint64_t v7 = 4;
  int v8 = 0;
  uint64_t v9 = "No checking";
  uint64_t v10 = 11;
  int v11 = "trap";
  uint64_t v12 = 4;
  int v13 = 1;
  BOOL v14 = "Trap when incorrect";
  uint64_t v15 = 19;
  long long v16 = "fallback";
  uint64_t v17 = 8;
  int v18 = 2;
  uint64_t v19 = "Fallback to indirect when incorrect";
  uint64_t v20 = 35;
  v5.n128_u64[1] = 0x400000003;
  sub_1CD688A68(&v4, &v3, &v2, (uint64_t)&v5);
  if ((const char **)v5.n128_u64[0] != &v6) {
    free((void *)v5.n128_u64[0]);
  }
  return __cxa_atexit((void (*)(void *))sub_1CD686E50, &qword_1EBCE5538, &dword_1CB82C000);
}

uint64_t llvm::getLazyIRModule@<X0>(const llvm::MemoryBuffer **a1@<X0>, uint64_t a2@<X1>, char **a3@<X8>)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  size_t v6 = *a1;
  uint64_t v7 = (unsigned __int8 *)*((void *)v6 + 1);
  if (v7 == *((unsigned __int8 **)v6 + 2)) {
    goto LABEL_31;
  }
  int v8 = *v7;
  if (v8 == 222)
  {
    if (v7[1] == 192 && v7[2] == 23 && v7[3] == 11) {
      goto LABEL_6;
    }
LABEL_31:
    (*(void (**)(const llvm::MemoryBuffer *))(*(void *)v6 + 16))(v6);
    llvm::parseAssembly();
  }
  if (v8 != 66 || v7[1] != 67 || v7[2] != 192 || v7[3] != 222) {
    goto LABEL_31;
  }
LABEL_6:
  llvm::getOwningLazyBitcodeModule(a1, (uint64_t)&v22);
  uint64_t v9 = v22;
  if (v23)
  {
    int v22 = 0;
    if (v9)
    {
      v16[0] = a2;
      v16[1] = a1;
      if ((*(unsigned int (**)(char *, void *))(*(void *)v9 + 48))(v9, &llvm::ErrorList::ID))
      {
        uint64_t v10 = (uint64_t *)*((void *)v9 + 1);
        int v11 = (uint64_t *)*((void *)v9 + 2);
        if (v10 == v11)
        {
          uint64_t v12 = 0;
        }
        else
        {
          uint64_t v12 = 0;
          do
          {
            uint64_t v20 = v12;
            uint64_t v13 = *v10;
            *uint64_t v10 = 0;
            uint64_t v18 = v13;
            sub_1CC9CFE84(&v19, &v18, (uint64_t)v16);
            sub_1CD451630(&v20, &v19, &v21);
            uint64_t v12 = v21;
            uint64_t v21 = 0;
            if (v19) {
              (*(void (**)(char *))(*(void *)v19 + 8))(v19);
            }
            uint64_t v14 = v18;
            uint64_t v18 = 0;
            if (v14) {
              (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
            }
            if (v20) {
              (*(void (**)(char *))(*(void *)v20 + 8))(v20);
            }
            ++v10;
          }
          while (v10 != v11);
        }
        uint64_t v17 = v12;
      }
      else
      {
        uint64_t v21 = v9;
        sub_1CC9CFE84(&v17, &v21, (uint64_t)v16);
        uint64_t v9 = v21;
        if (!v21)
        {
LABEL_25:
          uint64_t v9 = 0;
          goto LABEL_26;
        }
      }
      (*(void (**)(char *))(*(void *)v9 + 8))(v9);
      goto LABEL_25;
    }
  }
  int v22 = 0;
LABEL_26:
  *a3 = v9;
  return sub_1CC1CC83C((uint64_t)&v22);
}

llvm::Timer *llvm::parseIR@<X0>(unsigned __int8 **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X7>, char **a4@<X8>)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  llvm::NamedRegionTimer::NamedRegionTimer(&v19, "parse", 5uLL, "Parse IR", 8uLL, "irparse", 7uLL, a3, (uint64_t)"LLVM IR Parsing", 15, llvm::TimePassesIsEnabled);
  if (!a1[1]) {
    goto LABEL_33;
  }
  uint64_t v7 = *a1;
  int v8 = **a1;
  if (v8 == 222)
  {
    if (v7[1] == 192 && v7[2] == 23 && v7[3] == 11) {
      goto LABEL_6;
    }
LABEL_33:
    llvm::parseAssembly();
  }
  if (v8 != 66 || v7[1] != 67 || v7[2] != 192 || v7[3] != 222) {
    goto LABEL_33;
  }
LABEL_6:
  long long v9 = *((_OWORD *)a1 + 1);
  v18[0] = *(_OWORD *)a1;
  v18[1] = v9;
  llvm::parseBitcodeFile(v18, (uint64_t)&v25);
  uint64_t v10 = v25;
  if ((v26 & 1) == 0 || (uint64_t v25 = 0, !v10))
  {
    uint64_t v25 = 0;
    goto LABEL_26;
  }
  v17[0] = a2;
  v17[1] = (uint64_t)a1;
  if ((*(unsigned int (**)(char *, void *))(*(void *)v10 + 48))(v10, &llvm::ErrorList::ID))
  {
    int v11 = (uint64_t *)*((void *)v10 + 1);
    uint64_t v12 = (uint64_t *)*((void *)v10 + 2);
    if (v11 == v12)
    {
      uint64_t v13 = 0;
    }
    else
    {
      uint64_t v13 = 0;
      do
      {
        char v23 = v13;
        uint64_t v14 = *v11;
        *int v11 = 0;
        uint64_t v21 = v14;
        sub_1CC9D0184(&v22, &v21, v17);
        sub_1CD451630(&v23, &v22, &v24);
        uint64_t v13 = v24;
        uint64_t v24 = 0;
        if (v22) {
          (*(void (**)(char *))(*(void *)v22 + 8))(v22);
        }
        uint64_t v15 = v21;
        uint64_t v21 = 0;
        if (v15) {
          (*(void (**)(uint64_t))(*(void *)v15 + 8))(v15);
        }
        if (v23) {
          (*(void (**)(char *))(*(void *)v23 + 8))(v23);
        }
        ++v11;
      }
      while (v11 != v12);
    }
    uint64_t v20 = v13;
    goto LABEL_24;
  }
  uint64_t v24 = v10;
  sub_1CC9D0184(&v20, &v24, v17);
  uint64_t v10 = v24;
  if (v24) {
LABEL_24:
  }
    (*(void (**)(char *))(*(void *)v10 + 8))(v10);
  uint64_t v10 = 0;
LABEL_26:
  *a4 = v10;
  sub_1CC1CC83C((uint64_t)&v25);
  uint64_t result = v19;
  if (v19) {
    return (llvm::Timer *)llvm::Timer::stopTimer(v19);
  }
  return result;
}

uint64_t LLVMParseIRInContext(uint64_t a1, void *a2, void *a3, char **a4)
{
  v39[21] = *MEMORY[0x1E4F143B8];
  int v32 = 0;
  *(_OWORD *)uint64_t v30 = 0u;
  long long v31 = 0u;
  long long v29 = 0u;
  long long v33 = 0u;
  long long v34 = 0u;
  long long v35 = 0u;
  long long v36 = 0u;
  uint64_t v37 = 0;
  v38[0] = v39;
  v38[1] = (void *)0x400000000;
  uint64_t v7 = (unsigned __int8 *)a2[1];
  int v8 = (unsigned __int8 *)(a2[2] - (void)v7);
  long long v9 = (unsigned __int8 *)(*(uint64_t (**)(void *))(*a2 + 16))(a2);
  v28[0] = v7;
  v28[1] = v8;
  v28[2] = v9;
  v28[3] = v10;
  llvm::parseIR(v28, (uint64_t)&v29, v11, &v17);
  uint64_t v12 = 0;
  uint64_t v13 = v17;
  *a3 = v17;
  if (!v13)
  {
    if (a4)
    {
      __p[0] = 0;
      __p[1] = 0;
      uint64_t v27 = 0;
      int v18 = 0;
      char v22 = 0;
      uint64_t v23 = 0;
      uint64_t v25 = __p;
      int v24 = 0;
      uint64_t v17 = (char *)&unk_1F2646F30;
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      uint64_t v21 = 0;
      llvm::SMDiagnostic::print((llvm::SMDiagnostic *)&v29, 0, (llvm::raw_ostream *)&v17, 0, 1);
      if (v21 != v19)
      {
        uint64_t v21 = v19;
        llvm::raw_ostream::flush_tied_then_write((llvm::raw_ostream *)&v17, v19);
      }
      char v14 = HIBYTE(v27);
      if (v27 >= 0) {
        uint64_t v15 = __p;
      }
      else {
        uint64_t v15 = (void **)__p[0];
      }
      *a4 = strdup((const char *)v15);
      uint64_t v17 = (char *)&unk_1F2646B98;
      if (v24 == 1 && v19)
      {
        MEMORY[0x1D25D9CB0](v19, 0x1000C8077774924);
        char v14 = HIBYTE(v27);
      }
      if (v14 < 0) {
        operator delete(__p[0]);
      }
    }
    uint64_t v12 = 1;
  }
  (*(void (**)(void *))(*a2 + 8))(a2);
  sub_1CC1925A4(v38);
  if ((void)v36)
  {
    *((void *)&v36 + 1) = v36;
    operator delete((void *)v36);
  }
  if (SHIBYTE(v35) < 0) {
    operator delete(*((void **)&v34 + 1));
  }
  if (SBYTE7(v34) < 0) {
    operator delete((void *)v33);
  }
  if (SBYTE7(v31) < 0) {
    operator delete(v30[0]);
  }
  return v12;
}

uint64_t sub_1CC9CFE84(void *a1, void *a2, uint64_t a3)
{
  v32[20] = *MEMORY[0x1E4F143B8];
  uint64_t result = (*(uint64_t (**)(void, void *))(*(void *)*a2 + 48))(*a2, &llvm::ErrorInfoBase::ID);
  uint64_t v7 = *a2;
  *a2 = 0;
  if (!result)
  {
    *a1 = v7;
    return result;
  }
  int v8 = (const void *)(*(uint64_t (**)(void))(***(void ***)(a3 + 8) + 16))(**(void **)(a3 + 8));
  size_t v10 = v9;
  (*(void (**)(void **__return_ptr, uint64_t))(*(void *)v7 + 24))(__p, v7);
  if (v20 >= 0) {
    uint64_t v11 = __p;
  }
  else {
    uint64_t v11 = (void **)__p[0];
  }
  if (v20 >= 0) {
    size_t v12 = v20 & 0x7F;
  }
  else {
    size_t v12 = (size_t)__p[1];
  }
  v21[0] = 0;
  v21[1] = 0;
  if (v10 > 0x7FFFFFFFFFFFFFF7) {
LABEL_36:
  }
    abort();
  if (v10 >= 0x17)
  {
    uint64_t v14 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v10 | 7) != 0x17) {
      uint64_t v14 = v10 | 7;
    }
    uint64_t v15 = v14 + 1;
    uint64_t v13 = operator new(v14 + 1);
    v22[1] = (void *)v10;
    unint64_t v23 = v15 | 0x8000000000000000;
    v22[0] = v13;
    goto LABEL_16;
  }
  uint64_t v13 = v22;
  HIBYTE(v23) = v10;
  if (v10) {
LABEL_16:
  }
    memmove(v13, v8, v10);
  *((unsigned char *)v13 + v10) = 0;
  uint64_t v24 = -1;
  int v25 = 0;
  if (v12 > 0x7FFFFFFFFFFFFFF7) {
    goto LABEL_36;
  }
  if (v12 >= 0x17)
  {
    uint64_t v17 = (v12 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v12 | 7) != 0x17) {
      uint64_t v17 = v12 | 7;
    }
    uint64_t v18 = v17 + 1;
    long long v16 = operator new(v17 + 1);
    v26[1] = (void *)v12;
    unint64_t v27 = v18 | 0x8000000000000000;
    v26[0] = v16;
  }
  else
  {
    long long v16 = v26;
    HIBYTE(v27) = v12;
    if (!v12) {
      goto LABEL_25;
    }
  }
  memmove(v16, v11, v12);
LABEL_25:
  *((unsigned char *)v16 + v12) = 0;
  *(_OWORD *)long long v29 = 0u;
  long long v30 = 0u;
  *(_OWORD *)long long v28 = 0u;
  v31[0] = v32;
  v31[1] = (void *)0x400000000;
  sub_1CD4D7434(*(void *)a3, (uint64_t)v21);
  sub_1CC1925A4(v31);
  if (v29[1])
  {
    *(void **)&long long v30 = v29[1];
    operator delete(v29[1]);
  }
  if (SHIBYTE(v29[0]) < 0) {
    operator delete(v28[0]);
  }
  if (SHIBYTE(v27) < 0) {
    operator delete(v26[0]);
  }
  if (SHIBYTE(v23) < 0) {
    operator delete(v22[0]);
  }
  if (v20 < 0) {
    operator delete(__p[0]);
  }
  *a1 = 0;
  return (*(uint64_t (**)(uint64_t))(*(void *)v7 + 8))(v7);
}

void sub_1CC9D0178(unsigned char *a1@<X8>)
{
  *a1 = 0;
  a1[24] = 0;
}

uint64_t sub_1CC9D0184(void *a1, void *a2, uint64_t *a3)
{
  v32[20] = *MEMORY[0x1E4F143B8];
  uint64_t result = (*(uint64_t (**)(void, void *))(*(void *)*a2 + 48))(*a2, &llvm::ErrorInfoBase::ID);
  uint64_t v7 = *a2;
  *a2 = 0;
  if (!result)
  {
    *a1 = v7;
    return result;
  }
  uint64_t v8 = a3[1];
  size_t v10 = *(const void **)(v8 + 16);
  size_t v9 = *(void *)(v8 + 24);
  (*(void (**)(void **__return_ptr, uint64_t))(*(void *)v7 + 24))(__p, v7);
  if (v20 >= 0) {
    uint64_t v11 = __p;
  }
  else {
    uint64_t v11 = (void **)__p[0];
  }
  if (v20 >= 0) {
    size_t v12 = v20 & 0x7F;
  }
  else {
    size_t v12 = (size_t)__p[1];
  }
  v21[0] = 0;
  v21[1] = 0;
  if (v9 > 0x7FFFFFFFFFFFFFF7) {
LABEL_36:
  }
    abort();
  if (v9 >= 0x17)
  {
    uint64_t v14 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17) {
      uint64_t v14 = v9 | 7;
    }
    uint64_t v15 = v14 + 1;
    uint64_t v13 = operator new(v14 + 1);
    v22[1] = (void *)v9;
    unint64_t v23 = v15 | 0x8000000000000000;
    v22[0] = v13;
    goto LABEL_16;
  }
  uint64_t v13 = v22;
  HIBYTE(v23) = v9;
  if (v9) {
LABEL_16:
  }
    memmove(v13, v10, v9);
  *((unsigned char *)v13 + v9) = 0;
  uint64_t v24 = -1;
  int v25 = 0;
  if (v12 > 0x7FFFFFFFFFFFFFF7) {
    goto LABEL_36;
  }
  if (v12 >= 0x17)
  {
    uint64_t v17 = (v12 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v12 | 7) != 0x17) {
      uint64_t v17 = v12 | 7;
    }
    uint64_t v18 = v17 + 1;
    long long v16 = operator new(v17 + 1);
    v26[1] = (void *)v12;
    unint64_t v27 = v18 | 0x8000000000000000;
    v26[0] = v16;
  }
  else
  {
    long long v16 = v26;
    HIBYTE(v27) = v12;
    if (!v12) {
      goto LABEL_25;
    }
  }
  memmove(v16, v11, v12);
LABEL_25:
  *((unsigned char *)v16 + v12) = 0;
  *(_OWORD *)long long v29 = 0u;
  long long v30 = 0u;
  *(_OWORD *)long long v28 = 0u;
  v31[0] = v32;
  v31[1] = (void *)0x400000000;
  sub_1CD4D7434(*a3, (uint64_t)v21);
  sub_1CC1925A4(v31);
  if (v29[1])
  {
    *(void **)&long long v30 = v29[1];
    operator delete(v29[1]);
  }
  if (SHIBYTE(v29[0]) < 0) {
    operator delete(v28[0]);
  }
  if (SHIBYTE(v27) < 0) {
    operator delete(v26[0]);
  }
  if (SHIBYTE(v23) < 0) {
    operator delete(v22[0]);
  }
  if (v20 < 0) {
    operator delete(__p[0]);
  }
  *a1 = 0;
  return (*(uint64_t (**)(uint64_t))(*(void *)v7 + 8))(v7);
}

void sub_1CC9D044C(unsigned char *a1@<X8>)
{
  *a1 = 0;
  a1[24] = 0;
}

void sub_1CC9D0458(llvm *a1)
{
  llvm::initializeAssumptionCacheTrackerPass((uint64_t)a1);
  llvm::initializeTargetLibraryInfoWrapperPassPass((uint64_t)a1);
  llvm::initializeTargetTransformInfoWrapperPassPass((uint64_t)a1);
  llvm::initializeDominatorTreeWrapperPassPass((uint64_t)a1);
  llvm::initializeAAResultsWrapperPassPass(a1, v2);
  llvm::initializeGlobalsAAWrapperPassPass(a1, v3);
  llvm::initializeOptimizationRemarkEmitterWrapperPassPass(a1, v4);
  llvm::initializeLazyBlockFrequencyInfoPassPass(a1, v5);
  llvm::initializeProfileSummaryInfoWrapperPassPass(a1, v6);
  operator new();
}

uint64_t sub_1CC9D0538(uint64_t a1)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = &unk_1EBCE5790;
  *(_DWORD *)(a1 + 24) = 2;
  *(void *)a1 = &unk_1F262B3F0;
  *(void *)(a1 + 32) = a1 + 48;
  *(void *)(a1 + 40) = 0x10000000000;
  *(_OWORD *)(a1 + 2096) = 0u;
  *(_DWORD *)(a1 + 2112) = 0;
  *(void *)(a1 + 2120) = 1;
  uint64_t v2 = 2128;
  int64x2_t v3 = vdupq_n_s64(0xFFFFFFFFFFFFF000);
  do
  {
    *(int64x2_t *)(a1 + v2) = v3;
    v2 += 16;
  }
  while (v2 != 2256);
  *(void *)(a1 + 2256) = a1 + 2272;
  *(void *)(a1 + 2264) = 0x1000000000;
  atomic_ullong PassRegistry = llvm::PassRegistry::getPassRegistry((llvm::PassRegistry *)a1);
  if (atomic_load_explicit((atomic_ullong *volatile)&qword_1EBCE5798, memory_order_acquire) != -1)
  {
    v7[0] = sub_1CC9D0458;
    v7[1] = &PassRegistry;
    size_t v6 = v7;
    std::__call_once(&qword_1EBCE5798, &v6, (void (__cdecl *)(void *))sub_1CB848390);
  }
  return a1;
}

void sub_1CC9D0648()
{
}

void sub_1CC9D0684(uint64_t a1)
{
  *(void *)a1 = &unk_1F262B3F0;
  uint64_t v2 = *(void **)(a1 + 2256);
  if (v2 != (void *)(a1 + 2272)) {
    free(v2);
  }
  if ((*(unsigned char *)(a1 + 2120) & 1) == 0) {
    MEMORY[0x1D25D9CD0](*(void *)(a1 + 2128), 8);
  }
  MEMORY[0x1D25D9CD0](*(void *)(a1 + 2096), 8);
  int64x2_t v3 = *(void **)(a1 + 32);
  if (v3 != (void *)(a1 + 48)) {
    free(v3);
  }

  llvm::Pass::~Pass((llvm::Pass *)a1);
}

void sub_1CC9D0728(uint64_t a1)
{
  *(void *)a1 = &unk_1F262B3F0;
  uint64_t v2 = *(void **)(a1 + 2256);
  if (v2 != (void *)(a1 + 2272)) {
    free(v2);
  }
  if ((*(unsigned char *)(a1 + 2120) & 1) == 0) {
    MEMORY[0x1D25D9CD0](*(void *)(a1 + 2128), 8);
  }
  MEMORY[0x1D25D9CD0](*(void *)(a1 + 2096), 8);
  int64x2_t v3 = *(void **)(a1 + 32);
  if (v3 != (void *)(a1 + 48)) {
    free(v3);
  }
  llvm::Pass::~Pass((llvm::Pass *)a1);

  JUMPOUT(0x1D25D9CE0);
}

llvm::AnalysisUsage *sub_1CC9D07E0(llvm::PassRegistry *a1, llvm::LazyBlockFrequencyInfoPass *a2)
{
  uint64_t v3 = (uint64_t)a2 + 112;
  v7[0] = &unk_1F2617E40;
  v7[1] = (char *)a2 + 112;
  atomic_ullong PassRegistry = llvm::PassRegistry::getPassRegistry(a1);
  llvm::PassRegistry::enumerateWith(PassRegistry, (uint64_t)v7);
  sub_1CB843600((uint64_t)a2, (uint64_t)a2, (uint64_t)&llvm::AAResultsWrapperPass::ID);
  sub_1CB843600((uint64_t)a2, (uint64_t)a2, (uint64_t)llvm::AssumptionCacheTracker::ID);
  sub_1CB843600((uint64_t)a2, (uint64_t)a2, (uint64_t)llvm::TargetLibraryInfoWrapperPass::ID);
  sub_1CB843600((uint64_t)a2, (uint64_t)a2, (uint64_t)llvm::TargetTransformInfoWrapperPass::ID);
  sub_1CB843600((uint64_t)a2, (uint64_t)a2, (uint64_t)&llvm::DominatorTreeWrapperPass::ID);
  sub_1CB843600((uint64_t)a2, (uint64_t)a2, (uint64_t)&llvm::OptimizationRemarkEmitterWrapperPass::ID);
  sub_1CB843600((uint64_t)a2, v3, (uint64_t)&llvm::DominatorTreeWrapperPass::ID);
  sub_1CB843600((uint64_t)a2, v3, (uint64_t)&llvm::AAResultsWrapperPass::ID);
  sub_1CB843600((uint64_t)a2, v3, (uint64_t)&llvm::BasicAAWrapperPass::ID);
  sub_1CB843600((uint64_t)a2, v3, (uint64_t)&llvm::GlobalsAAWrapperPass::ID);
  sub_1CB843600((uint64_t)a2, (uint64_t)a2, (uint64_t)llvm::ProfileSummaryInfoWrapperPass::ID);

  return llvm::LazyBlockFrequencyInfoPass::getLazyBFIAnalysisUsage(a2, v5);
}

uint64_t sub_1CC9D0930(llvm::FunctionPass *a1, llvm::Function *a2)
{
  uint64_t v39 = *MEMORY[0x1E4F143B8];
  if ((llvm::FunctionPass::skipFunction(a1, (llvm::LLVMContextImpl ****)a2) & 1) == 0)
  {
    int v4 = (uint64_t *)*((void *)a1 + 1);
    uint64_t v5 = *v4;
    uint64_t v6 = v4[1];
    if (v5 == v6)
    {
LABEL_6:
      uint64_t v7 = 0;
    }
    else
    {
      while (*(_UNKNOWN **)v5 != &llvm::AAResultsWrapperPass::ID)
      {
        v5 += 16;
        if (v5 == v6) {
          goto LABEL_6;
        }
      }
      uint64_t v7 = *(void *)(v5 + 8);
    }
    (*(void (**)(uint64_t, void *))(*(void *)v7 + 96))(v7, &llvm::AAResultsWrapperPass::ID);
    uint64_t v8 = (uint64_t *)*((void *)a1 + 1);
    uint64_t v9 = *v8;
    uint64_t v10 = v8[1];
    if (v9 == v10)
    {
LABEL_11:
      uint64_t v11 = 0;
    }
    else
    {
      while (*(char **)v9 != llvm::AssumptionCacheTracker::ID)
      {
        v9 += 16;
        if (v9 == v10) {
          goto LABEL_11;
        }
      }
      uint64_t v11 = *(void *)(v9 + 8);
    }
    size_t v12 = (llvm::AssumptionCacheTracker *)(*(uint64_t (**)(uint64_t, char *))(*(void *)v11 + 96))(v11, llvm::AssumptionCacheTracker::ID);
    llvm::AssumptionCacheTracker::getAssumptionCache(v12, a2);
    uint64_t v13 = (uint64_t *)*((void *)a1 + 1);
    uint64_t v14 = *v13;
    uint64_t v15 = v13[1];
    if (v14 == v15)
    {
LABEL_16:
      uint64_t v16 = 0;
    }
    else
    {
      while (*(char **)v14 != llvm::TargetLibraryInfoWrapperPass::ID)
      {
        v14 += 16;
        if (v14 == v15) {
          goto LABEL_16;
        }
      }
      uint64_t v16 = *(void *)(v14 + 8);
    }
    uint64_t v17 = (*(uint64_t (**)(uint64_t, char *))(*(void *)v16 + 96))(v16, llvm::TargetLibraryInfoWrapperPass::ID);
    uint64_t v18 = v17 + 32;
    if (!*(unsigned char *)(v17 + 232))
    {
      uint64_t v20 = *((void *)a2 + 5) + 216;
      LOWORD(v23) = 260;
      uint64_t v22 = v20;
      llvm::Triple::Triple((llvm::Triple *)&__p, (const llvm::Twine *)&v22);
      uint64_t v34 = 0;
      uint64_t v33 = 0;
      LODWORD(v35) = 0;
      long long v36 = 0u;
      long long v37 = 0u;
      long long v38 = 0u;
      *(void *)&long long v21 = -1;
      *((void *)&v21 + 1) = -1;
      long long v26 = v21;
      long long v27 = v21;
      long long v28 = v21;
      long long v29 = v21;
      long long v30 = v21;
      long long v31 = v21;
      *(_OWORD *)int v32 = v21;
      *(void *)&v32[13] = -1;
      sub_1CC153974((uint64_t)&v26, (int *)&__p);
      sub_1CD4D04B8(v18, (uint64_t)&v26);
      sub_1CD4CFA4C((uint64_t *)&v26);
      if (v25 < 0) {
        operator delete(__p);
      }
    }
    sub_1CC1569E8(&v26, v18);
  }
  return 0;
}

void sub_1CC9D14D8()
{
}

void *sub_1CC9D14EC()
{
  uint64_t result = operator new(0x10uLL);
  *uint64_t result = &unk_1F262B490;
  return result;
}

void sub_1CC9D1524(uint64_t a1, void *a2)
{
  *a2 = &unk_1F262B490;
}

unint64_t sub_1CC9D1550(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(_DWORD *)(*(void *)(a2 - 32) + 36) < 0x182u)
  {
    unint64_t v7 = 0;
    LOBYTE(v6) = 0;
  }
  else
  {
    uint64_t v5 = *(uint64_t **)(a1 + 8);
    unsigned int v11 = *(_DWORD *)(a3 + 8);
    if (v11 > 0x40) {
      operator new[]();
    }
    uint64_t v10 = *(void *)a3;
    unint64_t v6 = llvm::TargetTransformInfo::simplifyDemandedUseBitsIntrinsic(v5, a1, a2, &v10);
    unint64_t v7 = v6 >> 8;
    if (v11 >= 0x41)
    {
      char v9 = v6;
      if (v10) {
        MEMORY[0x1D25D9CB0](v10, 0x1000C8000313F17);
      }
      LOBYTE(v6) = v9;
    }
  }
  return v6 | (v7 << 8);
}

unint64_t sub_1CC9D1670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  if (*(_DWORD *)(*(void *)(a2 - 32) + 36) < 0x182u)
  {
    unint64_t v13 = 0;
    unsigned __int8 v14 = 0;
  }
  else
  {
    size_t v12 = *(uint64_t **)(a1 + 8);
    unsigned int v18 = *(_DWORD *)(a3 + 8);
    if (v18 > 0x40) {
      operator new[]();
    }
    uint64_t v17 = *(void *)a3;
    sub_1CB90D414((uint64_t)v19, a7);
    unint64_t v15 = llvm::TargetTransformInfo::simplifyDemandedVectorEltsIntrinsic(v12, a1, a2, &v17, a4, a5, a6, (uint64_t)v19);
    unsigned __int8 v14 = v15;
    unint64_t v13 = v15 >> 8;
    if (v20 == v19)
    {
      (*(void (**)(void *))(v19[0] + 32))(v19);
    }
    else if (v20)
    {
      (*(void (**)(void))(*v20 + 40))();
    }
    if (v18 >= 0x41 && v17) {
      MEMORY[0x1D25D9CB0](v17, 0x1000C8000313F17);
    }
  }
  return v14 | (v13 << 8);
}

BOOL sub_1CC9D1850(uint64_t a1, unsigned int a2)
{
  if (a2 <= 0x20 && ((1 << a2) & 0x100010100) != 0) {
    return 1;
  }
  uint64_t v3 = *(void *)(a1 + 80);
  uint64_t v4 = *(void *)(v3 + 32);
  uint64_t v5 = *(char **)(v3 + 40);
  unint64_t v6 = &v5[v4];
  if (a2 <= 0xFF)
  {
    unint64_t v7 = (char *)memchr(*(void **)(v3 + 32), (char)a2, *(void *)(v3 + 40));
    if (v7) {
      unint64_t v6 = v7;
    }
  }
  return &v6[-v4] != v5;
}

uint64_t sub_1CC9D18E0(uint64_t a1, unsigned int a2, unsigned int a3)
{
  if (a2 == 1)
  {
    BOOL v6 = 1;
  }
  else
  {
    uint64_t v7 = *(void *)(a1 + 80);
    uint64_t v8 = *(void *)(v7 + 32);
    char v9 = *(char **)(v7 + 40);
    uint64_t v10 = &v9[v8];
    if (a2 <= 0xFF)
    {
      unsigned int v11 = (char *)memchr(*(void **)(v7 + 32), (char)a2, *(void *)(v7 + 40));
      if (v11) {
        uint64_t v10 = v11;
      }
    }
    BOOL v6 = &v10[-v8] != v9;
  }
  if (a3 == 1)
  {
    BOOL v12 = 1;
  }
  else
  {
    uint64_t v13 = *(void *)(a1 + 80);
    uint64_t v14 = *(void *)(v13 + 32);
    unint64_t v15 = *(char **)(v13 + 40);
    uint64_t v16 = &v15[v14];
    if (a3 <= 0xFF)
    {
      uint64_t v17 = (char *)memchr(*(void **)(v13 + 32), (char)a3, *(void *)(v13 + 40));
      if (v17) {
        uint64_t v16 = v17;
      }
    }
    BOOL v12 = &v16[-v14] != v15;
  }
  if (a3 < a2 && sub_1CC9D1850(a1, a3)) {
    return 1;
  }
  unsigned int v19 = v6 || v12;
  if (a3 <= a2) {
    unsigned int v19 = 1;
  }
  if (!v6 || v12) {
    return v19;
  }
  else {
    return 0;
  }
}

uint64_t sub_1CC9D19EC(uint64_t a1, llvm::Type *this, llvm::Type *a3)
{
  if (*((unsigned char *)this + 8) != 13 || *((unsigned char *)a3 + 8) != 13) {
    return 0;
  }
  unsigned int PrimitiveSizeInBits = llvm::Type::getPrimitiveSizeInBits(this);
  if (v5 == 1) {
  unsigned int v8 = llvm::Type::getPrimitiveSizeInBits(a3);
  }
  if (v7 == 1) {

  }
  return sub_1CC9D18E0(a1, PrimitiveSizeInBits, v8);
}

llvm::Value *sub_1CC9D1AA8(uint64_t a1, unsigned char *a2)
{
  uint64_t result = 0;
  if (a2 && a2[16] == 76)
  {
    uint64_t v5 = *(void *)(a1 + 80);
    unsigned int v6 = *(_DWORD *)(*(void *)a2 + 8);
    if ((v6 & 0xFE) == 0x12) {
      unsigned int v6 = *(_DWORD *)(**(void **)(*(void *)a2 + 16) + 8);
    }
    if (v6 < 0x100) {
      goto LABEL_14;
    }
    unsigned int v7 = v6 >> 8;
    uint64_t v8 = *(unsigned int *)(v5 + 240);
    uint64_t v9 = *(void *)(v5 + 232);
    if (v8)
    {
      uint64_t v9 = *(void *)(v5 + 232);
      unint64_t v10 = *(unsigned int *)(v5 + 240);
      do
      {
        unint64_t v11 = v10 >> 1;
        uint64_t v12 = v9 + 16 * (v10 >> 1);
        unsigned int v13 = *(_DWORD *)(v12 + 8);
        uint64_t v14 = v12 + 16;
        v10 += ~(v10 >> 1);
        if (v13 < v7) {
          uint64_t v9 = v14;
        }
        else {
          unint64_t v10 = v11;
        }
      }
      while (v10);
    }
    if (v9 == *(void *)(v5 + 232) + 16 * v8 || *(_DWORD *)(v9 + 8) != v7) {
LABEL_14:
    }
      uint64_t v9 = *(void *)(v5 + 232);
    uint64_t v15 = *(unsigned int *)(v9 + 4);
    uint64_t v17 = sub_1CB83544C(v5, **((void **)a2 - 4));
    if (v16 == 1) {
    if (v17 != v15)
    }
      return 0;
    uint64_t result = 0;
    unsigned int v18 = (uint64_t *)*((void *)a2 - 4);
    if (v18)
    {
      if (*((unsigned char *)v18 + 16) == 75)
      {
        uint64_t v19 = *(void *)a2;
        int v20 = *(_DWORD *)(v19 + 8);
        if ((v20 & 0xFE) == 0x12) {
          int v20 = *(_DWORD *)(**(void **)(v19 + 16) + 8);
        }
        uint64_t v21 = *(void *)*(v18 - 4);
        unsigned int v22 = *(_DWORD *)(v21 + 8);
        if ((v22 & 0xFE) == 0x12)
        {
          unsigned int v22 = *(_DWORD *)(**(void **)(v21 + 16) + 8);
          if ((v22 ^ v20) >= 0x100) {
            return 0;
          }
        }
        else if ((v22 ^ v20) > 0xFF)
        {
          return 0;
        }
        uint64_t v23 = *(void *)(a1 + 80);
        if (v22 < 0x100) {
          goto LABEL_35;
        }
        unsigned int v24 = v22 >> 8;
        uint64_t v25 = *(unsigned int *)(v23 + 240);
        uint64_t v26 = *(void *)(v23 + 232);
        if (v25)
        {
          uint64_t v26 = *(void *)(v23 + 232);
          unint64_t v27 = *(unsigned int *)(v23 + 240);
          do
          {
            unint64_t v28 = v27 >> 1;
            uint64_t v29 = v26 + 16 * (v27 >> 1);
            unsigned int v30 = *(_DWORD *)(v29 + 8);
            uint64_t v31 = v29 + 16;
            v27 += ~(v27 >> 1);
            if (v30 < v24) {
              uint64_t v26 = v31;
            }
            else {
              unint64_t v27 = v28;
            }
          }
          while (v27);
        }
        if (v26 == *(void *)(v23 + 232) + 16 * v25 || *(_DWORD *)(v26 + 8) != v24) {
LABEL_35:
        }
          uint64_t v26 = *(void *)(v23 + 232);
        uint64_t v32 = *(unsigned int *)(v26 + 4);
        uint64_t v35 = sub_1CB83544C(v23, *v18);
        if (v33 == 1) {
        if (v35 == v32)
        }
        {
          long long v36 = (llvm::CastInst *)*(v18 - 4);
          __int16 v38 = 257;
          return llvm::CastInst::CreateBitOrPointerCast(v36, (llvm::Value *)v19, &v37, (const llvm::Twine *)v18, v34);
        }
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1CC9D1CF4(uint64_t a1, llvm::Instruction *this)
{
  char v3 = 0;
  uint64_t v112 = *MEMORY[0x1E4F143B8];
  int v4 = *((unsigned __int8 *)this + 16);
  unsigned int v98 = v4 - 28;
  uint64_t v5 = (uint64_t *)((char *)this - 64);
  unsigned int v6 = (uint64_t *)((char *)this - 32);
  int v96 = (uint64_t *)((char *)this - 32);
  uint64_t v97 = (_OWORD *)(a1 + 88);
  HIDWORD(v7) = v4 - 41;
  LODWORD(v7) = v4 - 41;
  unsigned int v94 = v7 >> 1;
  uint64_t v92 = (char *)this - 56;
  uint64_t v93 = (char *)this - 24;
  BOOL v99 = (llvm::Instruction *)((char *)this - 64);
  while (2)
  {
    while (2)
    {
      if (llvm::Instruction::isCommutative(this))
      {
        unsigned int v8 = sub_1CC9D2700(*v5);
        if (v8 < sub_1CC9D2700(*v6))
        {
          if (llvm::Instruction::isCommutative(this))
          {
            uint64_t v9 = *v6;
            if (*v5 != *v6)
            {
              *((void *)this - 4) = *v5;
              uint64_t v10 = *((void *)this - 3);
              unint64_t v11 = (uint64_t **)*((void *)this - 2);
              long long v12 = *(_OWORD *)((char *)this - 56);
              *((void *)this - 8) = v9;
              *((void *)this - 7) = v10;
              *((void *)this - 6) = v11;
              *(_OWORD *)((char *)this - 24) = v12;
              *unint64_t v11 = v5;
              uint64_t v13 = *((void *)this - 7);
              if (v13) {
                *(void *)(v13 + 16) = v92;
              }
              **((void **)this - 2) = v6;
              uint64_t v14 = *((void *)this - 3);
              if (v14) {
                *(void *)(v14 + 16) = v93;
              }
            }
            char v3 = 1;
          }
          else
          {
            char v3 = 0;
          }
        }
      }
      uint64_t v15 = *((void *)this - 8);
      unsigned int v16 = *(unsigned __int8 *)(v15 + 16);
      BOOL v17 = v16 - 41 < 0x12 && v16 > 0x1B;
      if (v17) {
        uint64_t v18 = *((void *)this - 8);
      }
      else {
        uint64_t v18 = 0;
      }
      uint64_t v19 = (unsigned __int8 *)*((void *)this - 4);
      unsigned int v20 = v19[16];
      if (v20 - 41 < 0x12 && v20 > 0x1B) {
        uint64_t v22 = *((void *)this - 4);
      }
      else {
        uint64_t v22 = 0;
      }
      int v23 = *((unsigned __int8 *)this + 16);
      switch(*((unsigned char *)this + 16))
      {
        case ')':
        case '-':
          goto LABEL_25;
        case '*':
        case '.':
          if ((~*((unsigned __int8 *)this + 17) & 0x12) == 0) {
            goto LABEL_25;
          }
          goto LABEL_35;
        case '+':
        case ',':
          break;
        default:
          if ((v23 - 56) >= 3) {
            break;
          }
LABEL_25:
          if (v18)
          {
            if (*(unsigned __int8 *)(v18 + 16) == v4)
            {
              uint64_t v24 = *(void *)(v18 - 64);
              uint64_t v25 = *(llvm **)(v18 - 32);
              long long v26 = v97[2];
              *(_OWORD *)char v107 = v97[1];
              *(_OWORD *)&v107[16] = v26;
              *(_OWORD *)uint64_t v106 = *v97;
              *(void *)&v107[16] = this;
              unint64_t v27 = sub_1CC03A350(v98, v25, (llvm::Constant *)v19, (const llvm::DataLayout *)v106, (llvm::DSOLocalEquivalent **)3);
              if (v27)
              {
                uint64_t v28 = (uint64_t)v27;
                sub_1CC9D28DC(a1, (uint64_t)this, 0, v24);
                sub_1CC9D28DC(a1, (uint64_t)this, 1u, v28);
                int v29 = 0;
                int v30 = *((unsigned __int8 *)this + 16);
                HIDWORD(v32) = v30 - 41;
                LODWORD(v32) = v30 - 41;
                unsigned int v31 = v32 >> 1;
                if (v31 <= 6 && ((1 << v31) & 0x47) != 0)
                {
                  if ((*((unsigned char *)this + 17) & 2) == 0
                    || ((HIDWORD(v78) = *(unsigned __int8 *)(v18 + 16) - 41,
                         LODWORD(v78) = HIDWORD(v78),
                         unsigned int v77 = v78 >> 1,
                         BOOL v17 = v77 > 6,
                         int v79 = (1 << v77) & 0x47,
                         !v17)
                      ? (BOOL v80 = v79 == 0)
                      : (BOOL v80 = 1),
                        v80))
                  {
                    int v29 = 0;
                  }
                  else
                  {
                    int v29 = (*(unsigned __int8 *)(v15 + 17) >> 1) & 1;
                  }
                }
                if (v31 > 6
                  || ((1 << v31) & 0x47) == 0
                  || (*((unsigned char *)this + 17) & 4) == 0
                  || (int v81 = v30 - 28, ((v30 - 28) & 0xFFFFFFFD) != 0xD))
                {
                  int v83 = 0;
                  uint64_t v5 = (uint64_t *)v99;
                  goto LABEL_118;
                }
                unint64_t v104 = 0;
                uint64_t v105 = 0;
                *(void *)uint64_t v106 = &v105;
                *(void *)&v106[8] = 0;
                if (!sub_1CBF528D8((uint64_t)v106, (unsigned __int8 *)v25))
                {
                  uint64_t v5 = (uint64_t *)v99;
LABEL_130:
                  int v83 = 0;
LABEL_118:
                  unsigned int v6 = v96;
                  goto LABEL_119;
                }
                uint64_t v109 = &v104;
                __int16 v110 = 0;
                uint64_t v5 = (uint64_t *)v99;
                if ((sub_1CBF528D8((uint64_t)&v109, v19) & 1) == 0) {
                  goto LABEL_130;
                }
                v106[0] = 0;
                if (v81 == 13)
                {
                  llvm::APInt::sadd_ov(v105, v104, v106, (uint64_t)&v102);
                  if (v103 >= 0x41)
                  {
                    uint64_t v82 = v102;
                    if (v102) {
                      goto LABEL_133;
                    }
                  }
                }
                else
                {
                  llvm::APInt::ssub_ov(v105, v104, v106, (uint64_t)&v100);
                  if (v101 >= 0x41)
                  {
                    uint64_t v82 = v100;
                    if (v100) {
LABEL_133:
                    }
                      MEMORY[0x1D25D9CB0](v82, 0x1000C8000313F17);
                  }
                }
                unsigned int v6 = v96;
                int v83 = 0;
                if (!v106[0])
                {
                  HIDWORD(v86) = *(unsigned __int8 *)(v18 + 16) - 41;
                  LODWORD(v86) = HIDWORD(v86);
                  unsigned int v85 = v86 >> 1;
                  if (v85 <= 6 && ((1 << v85) & 0x47) != 0) {
                    int v83 = (*(unsigned __int8 *)(v15 + 17) >> 2) & 1;
                  }
                }
LABEL_119:
                if (!sub_1CB845E74((uint64_t)this)) {
                  *((unsigned char *)this + 17) &= 1u;
                }
                if (v29) {
                  *((unsigned char *)this + 17) |= 2u;
                }
                char v3 = 1;
                if (v83) {
                  *((unsigned char *)this + 17) |= 4u;
                }
                continue;
              }
            }
          }
          if (v22)
          {
            if (*(unsigned __int8 *)(v22 + 16) == v4)
            {
              uint64_t v33 = (llvm *)*((void *)this - 8);
              uint64_t v34 = *(llvm::Constant **)(v22 - 64);
              uint64_t v35 = *(void *)(v22 - 32);
              long long v36 = v97[2];
              *(_OWORD *)char v107 = v97[1];
              *(_OWORD *)&v107[16] = v36;
              *(_OWORD *)uint64_t v106 = *v97;
              *(void *)&v107[16] = this;
              long long v37 = sub_1CC03A350(v98, v33, v34, (const llvm::DataLayout *)v106, (llvm::DSOLocalEquivalent **)3);
              if (v37) {
                goto LABEL_65;
              }
            }
          }
LABEL_35:
          int v23 = *((unsigned __int8 *)this + 16);
          break;
      }
      break;
    }
    switch(v23)
    {
      case ')':
      case '-':
        goto LABEL_39;
      case '*':
      case '.':
        if ((~*((unsigned __int8 *)this + 17) & 0x12) == 0) {
          goto LABEL_39;
        }
        return v3 & 1;
      case '+':
      case ',':
        return v3 & 1;
      default:
        if ((v23 - 56) >= 3) {
          return v3 & 1;
        }
LABEL_39:
        if (!llvm::Instruction::isCommutative(this)) {
          return v3 & 1;
        }
        uint64_t v38 = *(void *)v99;
        if (*(void *)v99)
        {
          unsigned int v39 = *(unsigned __int8 *)(v38 + 16);
          if (v39 >= 0x1C && v39 - 79 >= 0xFFFFFFF3)
          {
            uint64_t v41 = *(void *)(v38 + 8);
            if (v41)
            {
              if (v39 == 67 && !*(void *)(v41 + 8) && (v23 - 56) <= 2)
              {
                uint64_t v42 = *(void *)(v38 - 32);
                if (v42)
                {
                  unsigned int v43 = *(unsigned __int8 *)(v42 + 16);
                  if (v43 >= 0x1C && v43 - 59 >= 0xFFFFFFEE)
                  {
                    uint64_t v44 = *(void *)(v42 + 8);
                    if (v44)
                    {
                      if (v43 == v23 && !*(void *)(v44 + 8))
                      {
                        uint64_t v45 = *v96;
                        if (*v96)
                        {
                          if (*(unsigned __int8 *)(v45 + 16) <= 0x14u)
                          {
                            uint64_t v46 = *(unsigned __int8 **)(v42 - 32);
                            if (v46)
                            {
                              if (v46[16] <= 0x14u)
                              {
                                uint64_t v47 = (llvm *)(v23 - 28);
                                BOOL v48 = (llvm::Constant *)*v96;
                                uint64_t v49 = sub_1CC56C0C0((llvm *)0x27, (llvm::detail::IEEEFloat *)v46, *(llvm::Constant **)v45, 0);
                                uint64_t v51 = (uint64_t)llvm::ConstantFoldBinaryInstruction(v47, v48, v49, v50);
                                if (!v51)
                                {
                                  unint64_t v89 = *(void ***)v48;
                                  if (*(void *)v48)
                                  {
                                    uint64_t v109 = (const llvm::APInt **)v48;
                                    __int16 v110 = v49;
                                    uint64_t v90 = **v89 + 1512;
                                    v106[0] = (char)v47;
                                    v106[1] = 0;
                                    *(_WORD *)&v106[2] = 0;
                                    *(void *)&v106[8] = &v109;
                                    *(void *)char v107 = 2;
                                    memset(&v107[8], 0, 32);
                                    uint64_t v108 = 0;
                                    uint64_t v51 = sub_1CC56C20C(v90, (uint64_t)v89, (unsigned __int8 *)v106);
                                  }
                                  else
                                  {
                                    uint64_t v51 = 0;
                                  }
                                }
                                sub_1CC9D28DC(a1, v38, 0, *(void *)(v42 - 64));
                                char v3 = 1;
                                sub_1CC9D28DC(a1, (uint64_t)this, 1u, v51);
                                uint64_t v5 = (uint64_t *)v99;
                                unsigned int v6 = v96;
                                continue;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        if (v18)
        {
          if (*(unsigned __int8 *)(v18 + 16) == v4)
          {
            int v52 = *(llvm::Constant **)(v18 - 64);
            uint64_t v35 = *(void *)(v18 - 32);
            uint64_t v53 = (llvm *)*((void *)this - 4);
            long long v54 = v97[2];
            *(_OWORD *)char v107 = v97[1];
            *(_OWORD *)&v107[16] = v54;
            *(_OWORD *)uint64_t v106 = *v97;
            *(void *)&v107[16] = this;
            long long v37 = sub_1CC03A350(v98, v53, v52, (const llvm::DataLayout *)v106, (llvm::DSOLocalEquivalent **)3);
            if (v37)
            {
LABEL_65:
              sub_1CC9D28DC(a1, (uint64_t)this, 0, (uint64_t)v37);
              char v3 = 1;
              uint64_t v55 = a1;
              unint64_t v56 = this;
              uint64_t v57 = v35;
LABEL_70:
              sub_1CC9D28DC(v55, (uint64_t)v56, 1u, v57);
              uint64_t v5 = (uint64_t *)v99;
              unsigned int v6 = v96;
              if (!sub_1CB845E74((uint64_t)this)) {
                *((unsigned char *)this + 17) &= 1u;
              }
              continue;
            }
          }
        }
        if (!v22) {
          return v3 & 1;
        }
        if (*(unsigned __int8 *)(v22 + 16) == v4)
        {
          unint64_t v58 = (llvm::Constant *)*((void *)this - 8);
          uint64_t v59 = *(void *)(v22 - 64);
          int v60 = *(llvm **)(v22 - 32);
          long long v61 = v97[2];
          *(_OWORD *)char v107 = v97[1];
          *(_OWORD *)&v107[16] = v61;
          *(_OWORD *)uint64_t v106 = *v97;
          *(void *)&v107[16] = this;
          uint64_t v62 = sub_1CC03A350(v98, v60, v58, (const llvm::DataLayout *)v106, (llvm::DSOLocalEquivalent **)3);
          if (v62)
          {
            uint64_t v63 = v62;
            sub_1CC9D28DC(a1, (uint64_t)this, 0, v59);
            char v3 = 1;
            uint64_t v55 = a1;
            unint64_t v56 = this;
            uint64_t v57 = (uint64_t)v63;
            goto LABEL_70;
          }
        }
        if (v18)
        {
          if (*(unsigned __int8 *)(v18 + 16) == v4 && *(unsigned __int8 *)(v22 + 16) == v4)
          {
            uint64_t v64 = *(void *)(v18 + 8);
            if (v64)
            {
              if (!*(void *)(v64 + 8))
              {
                __int16 v65 = *(void **)(v18 - 64);
                if (v65)
                {
                  uint64_t v66 = *(unsigned __int8 **)(v18 - 32);
                  if (v66)
                  {
                    if (v66[16] <= 0x14u)
                    {
                      uint64_t v67 = *(void *)(v22 + 8);
                      if (v67)
                      {
                        if (!*(void *)(v67 + 8))
                        {
                          uint64_t v68 = *(void *)(v22 - 64);
                          if (v68)
                          {
                            BOOL v69 = *(unsigned __int8 **)(v22 - 32);
                            if (v69)
                            {
                              if (v69[16] <= 0x14u)
                              {
                                HIDWORD(v71) = *((unsigned __int8 *)this + 16) - 41;
                                LODWORD(v71) = HIDWORD(v71);
                                unsigned int v70 = v71 >> 1;
                                if (v70 > 6
                                  || ((1 << v70) & 0x47) == 0
                                  || (*((unsigned char *)this + 17) & 2) == 0
                                  || v94 > 6
                                  || ((1 << v94) & 0x47) == 0
                                  || (*(unsigned char *)(v15 + 17) & 2) == 0
                                  || ((1 << v94) & 0x47) == 0)
                                {
                                  int v72 = 0;
LABEL_94:
                                  __int16 v111 = 257;
                                  __int16 v73 = llvm::BinaryOperator::Create(v98, v65, v68, (const char **)&v109, 0);
                                  goto LABEL_95;
                                }
                                unsigned int v84 = v19[17];
                                int v72 = (v84 >> 1) & 1;
                                if ((v84 & 2) == 0 || v4 != 41) {
                                  goto LABEL_94;
                                }
                                *(_WORD *)&v107[16] = 257;
                                __int16 v73 = llvm::BinaryOperator::Create(13, v65, v68, (const char **)v106, 0);
                                *((unsigned char *)v73 + 17) |= 2u;
                                int v72 = 1;
LABEL_95:
                                if (sub_1CB845E74((uint64_t)v73)) {
                                  *((unsigned char *)v73 + 17) |= *((unsigned char *)this + 17) & *(unsigned char *)(v18 + 17) & *(unsigned char *)(v22 + 17) & 0xFE;
                                }
                                uint64_t v74 = a1;
                                sub_1CC9D2AB4(a1, v73, (uint64_t)this);
                                llvm::Value::takeName((int32x2_t ****)v73, (llvm::Value *)v22);
                                sub_1CC9D28DC(a1, (uint64_t)this, 0, (uint64_t)v73);
                                uint64_t v76 = (uint64_t)llvm::ConstantFoldBinaryInstruction((llvm *)v98, (llvm::Constant *)v66, (llvm::Constant *)v69, v75);
                                if (!v76)
                                {
                                  uint64_t v87 = *(void ***)v66;
                                  if (*(void *)v66)
                                  {
                                    uint64_t v109 = (const llvm::APInt **)v66;
                                    __int16 v110 = v69;
                                    uint64_t v88 = **v87 + 1512;
                                    v106[0] = v4 - 28;
                                    v106[1] = 0;
                                    *(_WORD *)&v106[2] = 0;
                                    *(void *)&v106[8] = &v109;
                                    *(void *)char v107 = 2;
                                    memset(&v107[8], 0, 32);
                                    uint64_t v108 = 0;
                                    uint64_t v76 = sub_1CC56C20C(v88, (uint64_t)v87, (unsigned __int8 *)v106);
                                  }
                                  else
                                  {
                                    uint64_t v76 = 0;
                                  }
                                  uint64_t v74 = a1;
                                }
                                sub_1CC9D28DC(v74, (uint64_t)this, 1u, v76);
                                unsigned int v6 = v96;
                                if (!sub_1CB845E74((uint64_t)this)) {
                                  *((unsigned char *)this + 17) &= 1u;
                                }
                                char v3 = 1;
                                uint64_t v5 = (uint64_t *)v99;
                                if (v72) {
                                  *((unsigned char *)this + 17) |= 2u;
                                }
                                continue;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        return v3 & 1;
    }
  }
}

uint64_t sub_1CC9D2700(uint64_t a1)
{
  unsigned __int8 v1 = *(unsigned char *)(a1 + 16);
  if (v1 >= 0x1Cu)
  {
    if (v1 - 66 >= 0xD)
    {
      if (*(unsigned char *)(a1 + 16) == 43)
      {
        if (sub_1CBF535C4((uint64_t)v12, *(llvm::Constant **)(a1 - 64))) {
          return 4;
        }
        unsigned __int8 v1 = *(unsigned char *)(a1 + 16);
      }
      if (v1 == 5)
      {
        if (*(_WORD *)(a1 + 18) == 30
          && ((sub_1CBF68974((uint64_t)&v11, *(llvm::Constant **)(a1 - 32 * (*(_DWORD *)(a1 + 20) & 0x7FFFFFF) + 32)) & 1) != 0
           || (sub_1CBF68974((uint64_t)&v11, *(llvm::Constant **)(a1 - 32 * (*(_DWORD *)(a1 + 20) & 0x7FFFFFF))) & 1) != 0))
        {
          return 4;
        }
      }
      else if (v1 == 58 {
             && ((sub_1CBF687D0((uint64_t)&v11, *(llvm::Constant **)(a1 - 32)) & 1) != 0
      }
              || (sub_1CBF687D0((uint64_t)&v11, *(llvm::Constant **)(a1 - 64)) & 1) != 0))
      {
        return 4;
      }
      if (!sub_1CB845E74(a1)) {
        return 5;
      }
      unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 0x1B) {
        unsigned int v4 = *(unsigned __int16 *)(a1 + 18);
      }
      else {
        unsigned int v4 = v3 - 28;
      }
      if (v4 != 12)
      {
        if (v4 != 16) {
          return 5;
        }
        if ((*(unsigned char *)(a1 + 17) & 0x10) != 0)
        {
          int v6 = *(_DWORD *)(a1 + 20);
          if ((v6 & 0x40000000) != 0) {
            unint64_t v7 = *(llvm::Constant ***)(a1 - 8);
          }
          else {
            unint64_t v7 = (llvm::Constant **)(a1 - 32 * (v6 & 0x7FFFFFF));
          }
          if (!sub_1CC0241FC((uint64_t)&v14, *v7)) {
            return 5;
          }
        }
        else
        {
          int v8 = *(_DWORD *)(a1 + 20);
          if ((v8 & 0x40000000) != 0) {
            uint64_t v9 = *(llvm::Constant ***)(a1 - 8);
          }
          else {
            uint64_t v9 = (llvm::Constant **)(a1 - 32 * (v8 & 0x7FFFFFF));
          }
          if (!sub_1CC02435C((uint64_t)&v13, *v9)) {
            return 5;
          }
        }
      }
    }
    return 4;
  }
  if (v1 <= 0x14u) {
    return (v1 - 13) < 0xFEu;
  }
  if (*(unsigned char *)(a1 + 16) == 21) {
    return 3;
  }
  BOOL v10 = (v1 - 13) < 0xFEu;
  if (*(unsigned __int8 *)(a1 + 16) <= 0x14u) {
    return v10;
  }
  else {
    return 2;
  }
}

uint64_t sub_1CC9D28DC(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  int v6 = *(_DWORD *)(a2 + 20);
  if ((v6 & 0x40000000) != 0) {
    uint64_t v7 = *(void *)(a2 - 8);
  }
  else {
    uint64_t v7 = a2 - 32 * (v6 & 0x7FFFFFF);
  }
  uint64_t v8 = a3;
  uint64_t v9 = *(void *)(v7 + 32 * a3);
  if (v9) {
    BOOL v10 = *(unsigned __int8 *)(v9 + 16) >= 0x1Cu;
  }
  else {
    BOOL v10 = 0;
  }
  if (!v10) {
    goto LABEL_7;
  }
  uint64_t v19 = *(void *)(a1 + 32);
  uint64_t v33 = v9;
  if (*(unsigned char *)(v19 + 2088))
  {
    uint64_t v21 = v19 + 2096;
    int v20 = 16;
  }
  else
  {
    int v20 = *(_DWORD *)(v19 + 2104);
    if (!v20)
    {
      int v30 = 0;
      goto LABEL_33;
    }
    uint64_t v21 = *(void *)(v19 + 2096);
  }
  int v22 = v20 - 1;
  unsigned int v23 = v22 & ((v9 >> 4) ^ (v9 >> 9));
  uint64_t v24 = (void *)(v21 + 8 * v23);
  uint64_t v25 = *v24;
  if (v9 == *v24) {
    goto LABEL_7;
  }
  long long v26 = 0;
  int v27 = 1;
  while (v25 != -4096)
  {
    if (v26) {
      BOOL v28 = 0;
    }
    else {
      BOOL v28 = v25 == -8192;
    }
    if (v28) {
      long long v26 = v24;
    }
    unsigned int v29 = v23 + v27++;
    unsigned int v23 = v29 & v22;
    uint64_t v24 = (void *)(v21 + 8 * v23);
    uint64_t v25 = *v24;
    if (v9 == *v24) {
      goto LABEL_7;
    }
  }
  if (v26) {
    int v30 = v26;
  }
  else {
    int v30 = v24;
  }
LABEL_33:
  unsigned int v31 = sub_1CBFD5BBC(v19 + 2088, (uint64_t)&v33, &v33, v30);
  *unsigned int v31 = v33;
  unsigned int v32 = *(_DWORD *)(v19 + 2232);
  if (v32 >= *(_DWORD *)(v19 + 2236)) {
    llvm::SmallVectorBase<unsigned int>::grow_pod();
  }
  *(void *)(*(void *)(v19 + 2224) + 8 * v32) = v33;
  ++*(_DWORD *)(v19 + 2232);
  int v6 = *(_DWORD *)(a2 + 20);
LABEL_7:
  if ((v6 & 0x40000000) != 0) {
    uint64_t v11 = *(void *)(a2 - 8);
  }
  else {
    uint64_t v11 = a2 - 32 * (v6 & 0x7FFFFFF);
  }
  uint64_t v12 = v11 + 32 * v8;
  if (*(void *)v12)
  {
    **(void **)(v12 + 16) = *(void *)(v12 + 8);
    uint64_t v13 = *(void *)(v12 + 8);
    if (v13) {
      *(void *)(v13 + 16) = *(void *)(v12 + 16);
    }
  }
  *(void *)uint64_t v12 = a4;
  if (a4)
  {
    uint64_t v16 = *(void *)(a4 + 8);
    uint64_t v15 = (void *)(a4 + 8);
    uint64_t v14 = v16;
    uint64_t v17 = v11 + 32 * v8;
    *(void *)(v17 + 8) = v16;
    if (v16) {
      *(void *)(v14 + 16) = v17 + 8;
    }
    *(void *)(v17 + 16) = v15;
    *uint64_t v15 = v12;
  }
  return a2;
}

llvm::Value *sub_1CC9D2AB4(uint64_t a1, llvm::Value *a2, uint64_t a3)
{
  int v6 = *(unsigned __int8 **)(a3 + 48);
  uint64_t v34 = v6;
  if (v6) {
    llvm::MetadataTracking::track((uint64_t)&v34, v6, 2);
  }
  uint64_t v7 = (unsigned __int8 **)((char *)a2 + 48);
  if (&v34 != (unsigned __int8 **)((char *)a2 + 48))
  {
    uint64_t v8 = *v7;
    if (!*v7) {
      goto LABEL_5;
    }
    int v28 = *v8;
    if ((v28 - 4) > 0x1E)
    {
      if ((v28 - 3) >= 0xFFFFFFFE) {
        uint64_t v33 = *v7;
      }
      else {
        uint64_t v33 = 0;
      }
      if ((v28 - 3) < 0xFFFFFFFE)
      {
        if (v28 == 3) {
          *((void *)v8 + 1) = 0;
        }
        goto LABEL_5;
      }
      unint64_t v30 = (unint64_t)(v33 + 8);
    }
    else if ((v8[1] & 0x7F) != 2 && !*((_DWORD *)v8 + 3) {
           || (uint64_t v29 = *((void *)v8 + 2), (v29 & 4) == 0)
    }
           || (unint64_t v30 = v29 & 0xFFFFFFFFFFFFFFF8) == 0)
    {
LABEL_5:
      uint64_t v9 = v34;
      const char *v7 = v34;
      if (v9)
      {
        llvm::MetadataTracking::retrack((uint64_t)&v34, v9, (uint64_t)a2 + 48);
        uint64_t v34 = 0;
      }
      goto LABEL_7;
    }
    uint64_t v35 = (llvm::Value *)((char *)a2 + 48);
    sub_1CC5FA668(v30 + 16, &v35);
    goto LABEL_5;
  }
  if (v34) {
    llvm::MetadataTracking::untrack((uint64_t)&v34, v34);
  }
LABEL_7:
  uint64_t v10 = *(void *)(a3 + 40);
  uint64_t v11 = (uint64_t *)(a3 + 24);
  *((void *)a2 + 5) = v10;
  *(_WORD *)(v10 + 18) &= ~0x8000u;
  if ((*((unsigned char *)a2 + 23) & 0x10) != 0)
  {
    uint64_t v31 = *(void *)(v10 + 56);
    if (v31)
    {
      unsigned int v32 = *(llvm::ValueSymbolTable **)(v31 + 104);
      if (v32) {
        llvm::ValueSymbolTable::reinsertValue(v32, a2);
      }
    }
  }
  uint64_t v12 = *v11;
  *((void *)a2 + 3) = *v11;
  *((void *)a2 + 4) = v11;
  *(void *)(v12 + 8) = (char *)a2 + 24;
  *uint64_t v11 = (uint64_t)a2 + 24;
  uint64_t v13 = *(void *)(a1 + 32);
  uint64_t v35 = a2;
  if (*(unsigned char *)(v13 + 2088))
  {
    uint64_t v15 = v13 + 2096;
    int v14 = 16;
  }
  else
  {
    int v14 = *(_DWORD *)(v13 + 2104);
    if (!v14)
    {
      uint64_t v24 = 0;
      goto LABEL_24;
    }
    uint64_t v15 = *(void *)(v13 + 2096);
  }
  int v16 = v14 - 1;
  unsigned int v17 = v16 & ((a2 >> 4) ^ (a2 >> 9));
  uint64_t v18 = (llvm::Value **)(v15 + 8 * v17);
  uint64_t v19 = *v18;
  if (*v18 == a2) {
    return a2;
  }
  int v20 = 0;
  int v21 = 1;
  while (v19 != (llvm::Value *)-4096)
  {
    if (v20) {
      BOOL v22 = 0;
    }
    else {
      BOOL v22 = v19 == (llvm::Value *)-8192;
    }
    if (v22) {
      int v20 = v18;
    }
    unsigned int v23 = v17 + v21++;
    unsigned int v17 = v23 & v16;
    uint64_t v18 = (llvm::Value **)(v15 + 8 * v17);
    uint64_t v19 = *v18;
    if (*v18 == a2) {
      return a2;
    }
  }
  if (v20) {
    uint64_t v24 = v20;
  }
  else {
    uint64_t v24 = v18;
  }
LABEL_24:
  uint64_t v25 = sub_1CBFD5BBC(v13 + 2088, (uint64_t)&v35, &v35, v24);
  *uint64_t v25 = v35;
  unsigned int v26 = *(_DWORD *)(v13 + 2232);
  if (v26 >= *(_DWORD *)(v13 + 2236)) {
    llvm::SmallVectorBase<unsigned int>::grow_pod();
  }
  *(void *)(*(void *)(v13 + 2224) + 8 * v26) = v35;
  ++*(_DWORD *)(v13 + 2232);
  return a2;
}

llvm::Instruction *sub_1CC9D2D14(uint64_t a1, uint64_t a2, uint64_t a3, llvm *a4, llvm *a5, llvm *a6, llvm::Constant *a7)
{
  uint64_t v7 = a6;
  uint64_t v13 = *(uint64_t ****)(a2 - 64);
  uint64_t v88 = *(uint64_t ****)(a2 - 32);
  unint64_t v89 = v13;
  int v14 = *(unsigned __int8 *)(a2 + 16);
  uint64_t v15 = (v14 - 28);
  unsigned int v16 = (a3 < 0x1F) & (0x70066000u >> a3);
  if (a3 == 17)
  {
    if ((v15 & 0xFFFFFFFD) == 0xD) {
      goto LABEL_9;
    }
LABEL_14:
    uint64_t v18 = a7;
    goto LABEL_15;
  }
  if (a3 == 29)
  {
    if (v14 == 56) {
      goto LABEL_9;
    }
    goto LABEL_14;
  }
  if (a3 != 28 || (v14 - 57) >= 2) {
    goto LABEL_14;
  }
LABEL_9:
  if (a7 == a4) {
    unsigned int v17 = (a3 < 0x1F) & (0x70066000u >> a3);
  }
  else {
    unsigned int v17 = 0;
  }
  if (a6 != a4 && !v17) {
    goto LABEL_14;
  }
  if (a6 == a4) {
    uint64_t v18 = a7;
  }
  else {
    uint64_t v18 = a6;
  }
  if (a6 != a4) {
    uint64_t v7 = a7;
  }
  long long v26 = *(_OWORD *)(a1 + 120);
  long long v27 = *(_OWORD *)(a1 + 104);
  long long v92 = *(_OWORD *)(a1 + 88);
  long long v93 = v27;
  uint64_t v95 = *((void *)&v26 + 1);
  uint64_t v94 = a2;
  int v28 = sub_1CC03A350(v15, a5, v18, (const llvm::DataLayout *)&v92, (llvm::DSOLocalEquivalent **)3);
  if (!v28)
  {
    uint64_t v55 = v13[1];
    if (!v55) {
      goto LABEL_15;
    }
    if (v55[1]) {
      goto LABEL_15;
    }
    unint64_t v56 = v88[1];
    if (!v56 || v56[1]) {
      goto LABEL_15;
    }
    uint64_t v57 = *(void *)(a1 + 24);
    if ((*((unsigned char *)v88 + 23) & 0x10) == 0)
    {
      int v83 = 0;
      uint64_t v82 = &byte_1CFBCE98E;
LABEL_104:
      LOWORD(v94) = 261;
      *(void *)&long long v92 = v82;
      *((void *)&v92 + 1) = v83;
      int v28 = sub_1CB844E98(v57, v15, (uint64_t)a5, (uint64_t)v18, (uint64_t)&v92, 0);
      if (!v28) {
        goto LABEL_15;
      }
      goto LABEL_34;
    }
    uint64_t v58 = ***v88;
    uint64_t v59 = *(void *)(v58 + 152);
    uint64_t v60 = *(unsigned int *)(v58 + 168);
    if (v60)
    {
      LODWORD(v61) = (v60 - 1) & ((v88 >> 4) ^ (v88 >> 9));
      uint64_t v62 = (uint64_t ****)(v59 + 16 * v61);
      uint64_t v63 = *v62;
      if (*v62 == v88)
      {
LABEL_103:
        int v81 = v62[1];
        unsigned int v84 = *v81;
        uint64_t v82 = (char *)(v81 + 2);
        int v83 = v84;
        goto LABEL_104;
      }
      int v64 = 1;
      while (v63 != (uint64_t ***)-4096)
      {
        int v65 = v61 + v64++;
        uint64_t v61 = v65 & (v60 - 1);
        uint64_t v63 = *(uint64_t ****)(v59 + 16 * v61);
        if (v63 == v88)
        {
          uint64_t v62 = (uint64_t ****)(v59 + 16 * v61);
          goto LABEL_103;
        }
      }
    }
    uint64_t v62 = (uint64_t ****)(v59 + 16 * v60);
    goto LABEL_103;
  }
LABEL_34:
  uint64_t v29 = *(void *)(a1 + 24);
  LOWORD(v94) = 257;
  uint64_t v87 = (unsigned __int8 *)v28;
  int v20 = sub_1CB844E98(v29, a3, (uint64_t)a4, (uint64_t)v28, (uint64_t)&v92, 0);
  if (v20) {
    goto LABEL_35;
  }
LABEL_15:
  if (!sub_1CC9D32F0(v15, a3)) {
    return 0;
  }
  unsigned int v19 = v7 == a5 ? v16 : 0;
  if (v18 != a5 && !v19) {
    return 0;
  }
  if (v18 != a5) {
    uint64_t v7 = v18;
  }
  long long v22 = *(_OWORD *)(a1 + 120);
  long long v23 = *(_OWORD *)(a1 + 104);
  long long v92 = *(_OWORD *)(a1 + 88);
  long long v93 = v23;
  uint64_t v95 = *((void *)&v22 + 1);
  uint64_t v94 = a2;
  uint64_t v24 = sub_1CC03A350(v15, a4, v7, (const llvm::DataLayout *)&v92, (llvm::DSOLocalEquivalent **)3);
  if (v24) {
    goto LABEL_26;
  }
  uint64_t v44 = v89[1];
  if (!v44) {
    return 0;
  }
  if (v44[1]) {
    return 0;
  }
  uint64_t v45 = v88[1];
  if (!v45 || v45[1]) {
    return 0;
  }
  uint64_t v46 = *(void *)(a1 + 24);
  if ((*((unsigned char *)v89 + 23) & 0x10) != 0)
  {
    uint64_t v47 = ***v89;
    uint64_t v48 = *(void *)(v47 + 152);
    uint64_t v49 = *(unsigned int *)(v47 + 168);
    if (v49)
    {
      LODWORD(v50) = (v49 - 1) & ((v89 >> 4) ^ (v89 >> 9));
      uint64_t v51 = (uint64_t ****)(v48 + 16 * v50);
      int v52 = *v51;
      if (*v51 == v89)
      {
LABEL_99:
        unsigned int v77 = v51[1];
        BOOL v80 = *v77;
        unint64_t v78 = (char *)(v77 + 2);
        int v79 = v80;
        goto LABEL_100;
      }
      int v53 = 1;
      while (v52 != (uint64_t ***)-4096)
      {
        int v54 = v50 + v53++;
        uint64_t v50 = v54 & (v49 - 1);
        int v52 = *(uint64_t ****)(v48 + 16 * v50);
        if (v52 == v89)
        {
          uint64_t v51 = (uint64_t ****)(v48 + 16 * v50);
          goto LABEL_99;
        }
      }
    }
    uint64_t v51 = (uint64_t ****)(v48 + 16 * v49);
    goto LABEL_99;
  }
  int v79 = 0;
  unint64_t v78 = &byte_1CFBCE98E;
LABEL_100:
  LOWORD(v94) = 261;
  *(void *)&long long v92 = v78;
  *((void *)&v92 + 1) = v79;
  uint64_t v24 = sub_1CB844E98(v46, v15, (uint64_t)a4, (uint64_t)v7, (uint64_t)&v92, 0);
  if (!v24) {
    return 0;
  }
LABEL_26:
  uint64_t v25 = *(void *)(a1 + 24);
  LOWORD(v94) = 257;
  uint64_t v87 = (unsigned __int8 *)v24;
  int v20 = sub_1CB844E98(v25, a3, (uint64_t)v24, (uint64_t)a5, (uint64_t)&v92, 0);
  if (!v20) {
    return v20;
  }
LABEL_35:
  llvm::Value::takeName((int32x2_t ****)v20, (llvm::Value *)a2);
  unsigned int v30 = *((unsigned __int8 *)v20 + 16);
  BOOL v31 = v30 < 0x1C || v30 - 41 > 0x11;
  HIDWORD(v33) = v30 - 41;
  LODWORD(v33) = v30 - 41;
  unsigned int v32 = v33 >> 1;
  BOOL v34 = v31 || v32 > 6;
  int v35 = (1 << v32) & 0x47;
  if (!v34 && v35 != 0)
  {
    int8x8_t v37 = 0;
    HIDWORD(v39) = *(unsigned __int8 *)(a2 + 16) - 41;
    LODWORD(v39) = HIDWORD(v39);
    unsigned int v38 = v39 >> 1;
    if (v38 > 6)
    {
      long long v40 = v87;
      uint64_t v41 = v88;
    }
    else
    {
      long long v40 = v87;
      uint64_t v41 = v88;
      if (((1 << v38) & 0x47) != 0) {
        int8x8_t v37 = (int8x8_t)vtst_s32(vdup_n_s32(*(void *)(a2 + 17)), (int32x2_t)0x200000004);
      }
    }
    unsigned int v42 = *((unsigned __int8 *)v89 + 16);
    if (v42 < 0x1C)
    {
      if (v42 != 5) {
        goto LABEL_77;
      }
      int v43 = *((unsigned __int16 *)v89 + 9) - 13;
    }
    else
    {
      int v43 = v42 - 41;
    }
    HIDWORD(v67) = v43;
    LODWORD(v67) = v43;
    unsigned int v66 = v67 >> 1;
    if (v66 <= 6 && ((1 << v66) & 0x47) != 0) {
      int8x8_t v37 = vbic_s8(v37, (int8x8_t)vceqz_s32((int32x2_t)vand_s8((int8x8_t)vdup_n_s32(*((unsigned __int8 *)v89 + 17)), (int8x8_t)0x200000004)));
    }
LABEL_77:
    unsigned int v68 = *((unsigned __int8 *)v41 + 16);
    if (v68 < 0x1C)
    {
      if (v68 != 5) {
        goto LABEL_84;
      }
      int v69 = *((unsigned __int16 *)v41 + 9) - 13;
    }
    else
    {
      int v69 = v68 - 41;
    }
    HIDWORD(v71) = v69;
    LODWORD(v71) = v69;
    unsigned int v70 = v71 >> 1;
    if (v70 <= 6 && ((1 << v70) & 0x47) != 0) {
      int8x8_t v37 = vbic_s8(v37, (int8x8_t)vceqz_s32((int32x2_t)vand_s8((int8x8_t)vdup_n_s32(*((unsigned __int8 *)v41 + 17)), (int8x8_t)0x200000004)));
    }
LABEL_84:
    if (a3 != 17 || v15 != 13) {
      return v20;
    }
    uint64_t v91 = 0;
    long long v92 = (unint64_t)&v91;
    int8x8_t v90 = v37;
    int v72 = sub_1CBF528D8((uint64_t)&v92, v40);
    int8x8_t v73 = v90;
    if (!v72) {
      goto LABEL_93;
    }
    unsigned int v74 = *((_DWORD *)v91 + 2);
    if (v74 > 0x40)
    {
      unsigned int v85 = v74 - 1;
      if (((*(void *)(*(void *)v91 + 8 * ((v74 - 1) >> 6)) >> (v74 - 1)) & 1) == 0
        || (int v86 = llvm::APInt::countTrailingZerosSlowCase((unint64_t **)v91), v73 = v90, v86 != v85))
      {
LABEL_89:
        if (v73.i8[0]) {
          char v75 = 4;
        }
        else {
          char v75 = 0;
        }
        *((unsigned char *)v20 + 17) = *((unsigned char *)v20 + 17) & 0xFB | v75;
      }
    }
    else if (*(void *)v91 != 1 << (v74 - 1))
    {
      goto LABEL_89;
    }
LABEL_93:
    if (v73.i8[4]) {
      char v76 = 2;
    }
    else {
      char v76 = 0;
    }
    *((unsigned char *)v20 + 17) = *((unsigned char *)v20 + 17) & 0xFD | v76;
  }
  return v20;
}

BOOL sub_1CC9D32F0(int a1, int a2)
{
  BOOL result = 0;
  if (a2 > 27)
  {
    if (a2 == 28) {
      return (a1 - 29) < 2;
    }
    if (a2 != 29)
    {
      if (a2 == 30) {
        return result;
      }
      return (a1 - 28) < 3 && (a2 - 25) < 3;
    }
    return a1 == 28;
  }
  else
  {
    if ((a2 - 13) < 2) {
      return result;
    }
    if (a2 != 17)
    {
      if (a2 == 18) {
        return result;
      }
      return (a1 - 28) < 3 && (a2 - 25) < 3;
    }
    return (a1 & 0xFFFFFFFD) == 13;
  }
}

int32x2_t ****sub_1CC9D337C(uint64_t a1, unsigned __int8 *a2)
{
  unsigned int v4 = (unsigned __int8 *)*((void *)a2 - 8);
  uint64_t v5 = *((void *)a2 - 4);
  unsigned int v6 = v4[16];
  if (v6 - 41 < 0x12 && v6 > 0x1B) {
    uint64_t v8 = *((void *)a2 - 8);
  }
  else {
    uint64_t v8 = 0;
  }
  unsigned int v9 = *(unsigned __int8 *)(v5 + 16);
  BOOL v10 = v9 - 41 < 0x12 && v9 > 0x1B;
  int v11 = a2[16];
  if (v10) {
    uint64_t v12 = *((void *)a2 - 4);
  }
  else {
    uint64_t v12 = 0;
  }
  *(void *)uint64_t v50 = 0;
  v48[0] = 0;
  if (v8) {
    uint64_t v13 = (llvm::ConstantExpr *)sub_1CC9D37D4(v11 - 28, v8, v50, v48);
  }
  else {
    uint64_t v13 = 0;
  }
  int v54 = 0;
  uint64_t v55 = 0;
  unsigned int v47 = v11 - 28;
  if (v12)
  {
    uint64_t v14 = sub_1CC9D37D4(v11 - 28, v12, &v55, &v54);
    uint64_t v15 = (llvm::ConstantExpr *)v14;
    if (v8) {
      BOOL v16 = v13 == v14;
    }
    else {
      BOOL v16 = 0;
    }
    if (v16)
    {
      uint64_t v17 = a1;
      uint64_t v18 = (int32x2_t ****)sub_1CC9D2D14(a1, (uint64_t)a2, (uint64_t)v13, *(llvm **)v50, v48[0], v55, v54);
      uint64_t v15 = v13;
      if (v18) {
        return v18;
      }
LABEL_26:
      if (*(unsigned __int8 *)(v5 + 16) >= 0x15u)
      {
        BinOpIdentity = llvm::ConstantExpr::getBinOpIdentity(v13, *(llvm::ConstantFP **)v5, 0, 0);
        if (BinOpIdentity)
        {
          uint64_t v18 = (int32x2_t ****)sub_1CC9D2D14(v17, (uint64_t)a2, (uint64_t)v13, *(llvm **)v50, v48[0], (llvm *)v5, BinOpIdentity);
          if (v18) {
            return v18;
          }
        }
      }
      goto LABEL_29;
    }
  }
  else
  {
    uint64_t v15 = 0;
  }
  uint64_t v17 = a1;
  if (v8) {
    goto LABEL_26;
  }
LABEL_29:
  if (!v12
    || v4[16] < 0x15u
    || (int v20 = llvm::ConstantExpr::getBinOpIdentity(v15, *(llvm::ConstantFP **)v4, 0, 0)) == 0
    || (uint64_t v18 = (int32x2_t ****)sub_1CC9D2D14(v17, (uint64_t)a2, (uint64_t)v15, (llvm *)v4, v20, v55, v54)) == 0)
  {
    if (v8)
    {
      int v21 = *(unsigned __int8 *)(v8 + 16);
      uint64_t v22 = (v21 - 28);
      if (sub_1CC9D32F0(v21 - 28, v47))
      {
        long long v23 = *(llvm **)(v8 - 64);
        uint64_t v24 = *(llvm **)(v8 - 32);
        long long v25 = *(_OWORD *)(v17 + 104);
        *(_OWORD *)uint64_t v50 = *(_OWORD *)(v17 + 88);
        long long v51 = v25;
        uint64_t v26 = *(void *)(v17 + 128);
        int v52 = a2;
        uint64_t v53 = v26;
        BYTE1(v53) = 0;
        uint64_t v46 = v23;
        long long v27 = sub_1CC03A350(v47, v23, (llvm::Constant *)v5, (const llvm::DataLayout *)v50, (llvm::DSOLocalEquivalent **)3);
        int v28 = sub_1CC03A350(v47, v24, (llvm::Constant *)v5, (const llvm::DataLayout *)v50, (llvm::DSOLocalEquivalent **)3);
        uint64_t v29 = v28;
        if (v27) {
          BOOL v30 = v28 == 0;
        }
        else {
          BOOL v30 = 1;
        }
        if (!v30)
        {
          uint64_t v33 = *(void *)(v17 + 24);
          __int16 v49 = 257;
          uint64_t v34 = v22;
          uint64_t v35 = (uint64_t)v27;
          uint64_t v36 = (uint64_t)v29;
LABEL_68:
          uint64_t v18 = (int32x2_t ****)sub_1CB844E98(v33, v34, v35, v36, (uint64_t)v48, 0);
          llvm::Value::takeName(v18, (llvm::Value *)a2);
          return v18;
        }
        if (v27
          && v27 == llvm::ConstantExpr::getBinOpIdentity((llvm::ConstantExpr *)v22, *(llvm::ConstantFP **)v27, 0, 0))
        {
          uint64_t v33 = *(void *)(v17 + 24);
          __int16 v49 = 257;
          uint64_t v34 = v47;
          uint64_t v35 = (uint64_t)v24;
        }
        else
        {
          if (!v29
            || v29 != llvm::ConstantExpr::getBinOpIdentity((llvm::ConstantExpr *)v22, *(llvm::ConstantFP **)v29, 0, 0))
          {
            goto LABEL_44;
          }
          uint64_t v33 = *(void *)(v17 + 24);
          __int16 v49 = 257;
          uint64_t v34 = v47;
          uint64_t v35 = (uint64_t)v46;
        }
        uint64_t v36 = v5;
        goto LABEL_68;
      }
    }
LABEL_44:
    if (v12)
    {
      int v31 = *(unsigned __int8 *)(v12 + 16);
      uint64_t v32 = (v31 - 28);
      if (v11 == 45)
      {
        if ((v32 & 0xFFFFFFFD) == 0xD) {
          goto LABEL_53;
        }
      }
      else
      {
        if (v11 != 57)
        {
          if (v11 != 56 || (v31 - 57) >= 2) {
            return sub_1CC9D3890(v17, a2, (llvm *)v4, (llvm *)v5);
          }
LABEL_53:
          int8x8_t v37 = *(llvm::Constant **)(v12 - 64);
          unsigned int v38 = *(llvm::Constant **)(v12 - 32);
          long long v39 = *(_OWORD *)(v17 + 104);
          *(_OWORD *)uint64_t v50 = *(_OWORD *)(v17 + 88);
          long long v51 = v39;
          uint64_t v40 = *(void *)(v17 + 128);
          int v52 = a2;
          uint64_t v53 = v40;
          BYTE1(v53) = 0;
          uint64_t v41 = sub_1CC03A350(v47, (llvm *)v4, v37, (const llvm::DataLayout *)v50, (llvm::DSOLocalEquivalent **)3);
          unsigned int v42 = sub_1CC03A350(v47, (llvm *)v4, v38, (const llvm::DataLayout *)v50, (llvm::DSOLocalEquivalent **)3);
          int v43 = v42;
          if (v41) {
            BOOL v44 = v42 == 0;
          }
          else {
            BOOL v44 = 1;
          }
          if (!v44)
          {
            uint64_t v33 = *(void *)(v17 + 24);
            __int16 v49 = 257;
            uint64_t v34 = v32;
            uint64_t v35 = (uint64_t)v41;
            uint64_t v36 = (uint64_t)v43;
            goto LABEL_68;
          }
          if (v41
            && v41 == llvm::ConstantExpr::getBinOpIdentity((llvm::ConstantExpr *)v32, *(llvm::ConstantFP **)v41, 0, 0))
          {
            uint64_t v33 = *(void *)(v17 + 24);
            __int16 v49 = 257;
            uint64_t v34 = v47;
            uint64_t v35 = (uint64_t)v4;
            uint64_t v36 = (uint64_t)v38;
            goto LABEL_68;
          }
          if (v43
            && v43 == llvm::ConstantExpr::getBinOpIdentity((llvm::ConstantExpr *)v32, *(llvm::ConstantFP **)v43, 0, 0))
          {
            uint64_t v33 = *(void *)(v17 + 24);
            __int16 v49 = 257;
            uint64_t v34 = v47;
            uint64_t v35 = (uint64_t)v4;
            uint64_t v36 = (uint64_t)v37;
            goto LABEL_68;
          }
          return sub_1CC9D3890(v17, a2, (llvm *)v4, (llvm *)v5);
        }
        if (v31 == 56) {
          goto LABEL_53;
        }
      }
    }
    return sub_1CC9D3890(v17, a2, (llvm *)v4, (llvm *)v5);
  }
  return v18;
}

uint64_t sub_1CC9D37D4(int a1, uint64_t a2, void *a3, const llvm::detail::DoubleAPFloat **a4)
{
  *a3 = *(void *)(a2 - 64);
  *a4 = *(const llvm::detail::DoubleAPFloat **)(a2 - 32);
  int v4 = *(unsigned __int8 *)(a2 + 16);
  if ((a1 & 0xFFFFFFFD) != 0xD) {
    return (v4 - 28);
  }
  if (v4 != 5)
  {
    if (v4 != 53) {
      return (v4 - 28);
    }
    unsigned int v6 = *(unsigned __int8 **)(a2 - 32);
    if (!v6 || v6[16] > 0x14u) {
      return (v4 - 28);
    }
LABEL_9:
    uint64_t v7 = (llvm::ConstantExpr *)llvm::ConstantInt::get(*(llvm::ConstantInt **)a2, 1uLL, 0);
    *a4 = llvm::ConstantExpr::getShl(v7, (llvm::Constant *)v6, 0, 0);
    return 17;
  }
  if (*(_WORD *)(a2 + 18) == 25)
  {
    unsigned int v6 = *(unsigned __int8 **)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF) + 32);
    if (v6) {
      goto LABEL_9;
    }
  }
  int v4 = 5;
  return (v4 - 28);
}

int32x2_t ****sub_1CC9D3890(uint64_t a1, unsigned __int8 *a2, llvm *a3, llvm *a4)
{
  uint64_t v48 = 0;
  __int16 v49 = 0;
  uint64_t v46 = 0;
  unsigned int v47 = 0;
  BOOL v44 = 0;
  uint64_t v45 = 0;
  *(void *)&long long v40 = &v49;
  *((void *)&v40 + 1) = &v48;
  *(void *)&long long v41 = &v47;
  int v8 = sub_1CC189B48((void **)&v40, (uint64_t)a3);
  *(void *)&long long v40 = &v46;
  *((void *)&v40 + 1) = &v45;
  *(void *)&long long v41 = &v44;
  int v9 = sub_1CC189B48((void **)&v40, (uint64_t)a4);
  int v10 = v9;
  if ((v8 & 1) != 0 || (Select = 0, v9))
  {
    uint64_t v13 = *(void *)(a1 + 24);
    uint64_t v14 = *(void *)(v13 + 88);
    char v35 = *(unsigned char *)(v13 + 101);
    char v36 = *(unsigned char *)(v13 + 100);
    char v34 = *(unsigned char *)(v13 + 102);
    int v37 = *(_DWORD *)(v13 + 96);
    if (sub_1CB845E74((uint64_t)a2))
    {
      if (a2[17] >> 1 == 127) {
        int v15 = -1;
      }
      else {
        int v15 = a2[17] >> 1;
      }
      *(_DWORD *)(*(void *)(a1 + 24) + 96) = v15;
    }
    else
    {
      int v15 = 0;
    }
    uint64_t v16 = a2[16] - 28;
    long long v17 = *(_OWORD *)(a1 + 120);
    long long v18 = *(_OWORD *)(a1 + 104);
    long long v40 = *(_OWORD *)(a1 + 88);
    long long v41 = v18;
    uint64_t v43 = *((void *)&v17 + 1);
    unsigned int v42 = a2;
    if ((v8 & v10) == 1 && (uint64_t v33 = v49, v49 == v46))
    {
      uint64_t v22 = llvm::SimplifyBinOp(v16, v48, v45, v15, (llvm::Constant **)&v40);
      int v28 = llvm::SimplifyBinOp(v16, v47, v44, v15, (llvm::Constant **)&v40);
      uint64_t v26 = v28;
      uint64_t v29 = *((void *)a3 + 1);
      if (!v29)
      {
LABEL_35:
        int v21 = v33;
        goto LABEL_21;
      }
      int v21 = v33;
      if (!*(void *)(v29 + 8))
      {
        uint64_t v30 = *((void *)a4 + 1);
        if (v30)
        {
          if (!*(void *)(v30 + 8))
          {
            if (v28 && !v22)
            {
              uint64_t v32 = *(void *)(a1 + 24);
              __int16 v39 = 257;
              uint64_t v22 = sub_1CB844E98(v32, v16, (uint64_t)v48, (uint64_t)v45, (uint64_t)v38, 0);
            }
            else if (v22 && !v28)
            {
              uint64_t v31 = *(void *)(a1 + 24);
              __int16 v39 = 257;
              uint64_t v26 = sub_1CB844E98(v31, v16, (uint64_t)v47, (uint64_t)v44, (uint64_t)v38, 0);
            }
            goto LABEL_35;
          }
        }
      }
    }
    else
    {
      if (v8 && (uint64_t v19 = *((void *)a3 + 1)) != 0 && !*(void *)(v19 + 8))
      {
        int v21 = v49;
        uint64_t v22 = llvm::SimplifyBinOp(v16, v48, a4, v15, (llvm::Constant **)&v40);
        long long v25 = v47;
        int v24 = v16;
        long long v23 = a4;
      }
      else
      {
        if (!v10 || (uint64_t v20 = *((void *)a4 + 1)) == 0 || *(void *)(v20 + 8))
        {
          Select = 0;
LABEL_17:
          *(_DWORD *)(v13 + 96) = v37;
          *(void *)(v13 + 88) = v14;
          *(unsigned char *)(v13 + 100) = v36;
          *(unsigned char *)(v13 + 101) = v35;
          *(unsigned char *)(v13 + 102) = v34;
          return Select;
        }
        int v21 = v46;
        uint64_t v22 = llvm::SimplifyBinOp(v16, a3, v45, v15, (llvm::Constant **)&v40);
        long long v23 = v44;
        int v24 = v16;
        long long v25 = a3;
      }
      uint64_t v26 = llvm::SimplifyBinOp(v24, v25, v23, v15, (llvm::Constant **)&v40);
    }
LABEL_21:
    Select = 0;
    if (v22 && v26)
    {
      long long v27 = *(llvm::IRBuilderBase **)(a1 + 24);
      __int16 v39 = 257;
      Select = (int32x2_t ****)llvm::IRBuilderBase::CreateSelect(v27, v21, v22, v26, (const llvm::Twine *)v38, 0);
      llvm::Value::takeName(Select, (llvm::Value *)a2);
    }
    goto LABEL_17;
  }
  return Select;
}

void sub_1CC9D3BA4(uint64_t a1, llvm::Value *a2)
{
  for (uint64_t i = *((void *)a2 + 1); i; uint64_t i = *(void *)(i + 8))
  {
    uint64_t v5 = *(unsigned __int8 **)(i + 24);
    int v6 = v5[16];
    if (v6 == 85)
    {
      uint64_t v7 = *((void *)v5 - 8);
      uint64_t v8 = *((void *)v5 - 4);
      if (v7 != v8)
      {
        uint64_t v9 = *((void *)v5 - 3);
        *((void *)v5 - 8) = v8;
        *((void *)v5 - 4) = v7;
        long long v10 = *(_OWORD *)(v5 - 56);
        int v11 = (void *)*((void *)v5 - 2);
        *((void *)v5 - 7) = v9;
        *((void *)v5 - 6) = v11;
        *(_OWORD *)(v5 - 24) = v10;
        *int v11 = v5 - 64;
        uint64_t v12 = *((void *)v5 - 7);
        if (v12) {
          *(void *)(v12 + 16) = v5 - 56;
        }
        **((void **)v5 - 2) = v5 - 32;
        uint64_t v13 = *((void *)v5 - 3);
        if (v13) {
          *(void *)(v13 + 16) = v5 - 24;
        }
      }
      llvm::Instruction::swapProfMetadata((llvm::Instruction *)v5);
    }
    else if (v6 == 30)
    {
      llvm::BranchInst::swapSuccessors(*(llvm::Instruction **)(i + 24));
    }
    else
    {
      sub_1CC9D3C84(a1, (llvm::ValueAsMetadata *)v5, a2);
    }
  }
}

llvm::UndefValue **sub_1CC9D3C84(uint64_t a1, llvm::ValueAsMetadata *this, llvm::Value *a3)
{
  uint64_t v3 = *((void *)this + 1);
  if (!v3) {
    return 0;
  }
  uint64_t v5 = (llvm::UndefValue **)this;
  uint64_t v7 = *(void *)(a1 + 32);
  int v8 = *(_DWORD *)(v7 + 8);
  do
  {
    uint64_t v9 = *(void *)(v3 + 24);
    uint64_t v24 = v9;
    int v25 = v8;
    int v10 = *(_DWORD *)(v7 + 2080);
    if (v10)
    {
      uint64_t v11 = *(void *)(v7 + 2064);
      int v12 = v10 - 1;
      unsigned int v13 = v12 & ((v9 >> 4) ^ (v9 >> 9));
      uint64_t v14 = (void *)(v11 + 16 * v13);
      uint64_t v15 = *v14;
      if (*v14 == v9) {
        goto LABEL_19;
      }
      uint64_t v16 = 0;
      int v17 = 1;
      while (v15 != -4096)
      {
        if (v16) {
          BOOL v18 = 0;
        }
        else {
          BOOL v18 = v15 == -8192;
        }
        if (v18) {
          uint64_t v16 = v14;
        }
        unsigned int v19 = v13 + v17++;
        unsigned int v13 = v19 & v12;
        uint64_t v14 = (void *)(v11 + 16 * v13);
        uint64_t v15 = *v14;
        if (*v14 == v9) {
          goto LABEL_19;
        }
      }
      if (v16) {
        uint64_t v20 = v16;
      }
      else {
        uint64_t v20 = v14;
      }
    }
    else
    {
      uint64_t v20 = 0;
    }
    int v21 = sub_1CBF569E0((_DWORD *)(v7 + 2064), (uint64_t)&v24, &v24, v20);
    *int v21 = v24;
    *((_DWORD *)v21 + 2) = v25;
    unint64_t v22 = *(unsigned int *)(v7 + 8);
    if (v22 >= *(unsigned int *)(v7 + 12)) {
      llvm::SmallVectorBase<unsigned int>::grow_pod();
    }
    *(void *)(*(void *)v7 + 8 * v22) = v9;
    int v8 = *(_DWORD *)(v7 + 8) + 1;
    *(_DWORD *)(v7 + 8) = v8;
LABEL_19:
    uint64_t v3 = *(void *)(v3 + 8);
  }
  while (v3);
  if (v5 == (llvm::UndefValue **)a3) {
    a3 = llvm::UndefValue::get(*v5, this);
  }
  llvm::Value::doRAUW((llvm::ValueAsMetadata *)v5, a3, (llvm::Value *)1);
  *(unsigned char *)(a1 + 168) = 1;
  return v5;
}

const llvm::detail::DoubleAPFloat *sub_1CC9D3E08(int a1, llvm::ConstantExpr *this, const llvm::APFloat *a3)
{
  v29[2] = *MEMORY[0x1E4F143B8];
  uint64_t v22 = 0;
  uint64_t v24 = &v22;
  int v4 = *((unsigned __int8 *)this + 16);
  if (v4 == 5)
  {
    if (*((_WORD *)this + 9) == 15)
    {
      if (sub_1CC03F414((uint64_t)v23, *((llvm::Constant **)this - 4 * (*((_DWORD *)this + 5) & 0x7FFFFFF))))
      {
        uint64_t v5 = ((void *)this - 4 * (*((_DWORD *)this + 5) & 0x7FFFFFF))[4];
        if (v5) {
          goto LABEL_9;
        }
      }
    }
  }
  else if (v4 == 43)
  {
    if (sub_1CBF535C4((uint64_t)v23, *((llvm::Constant **)this - 8)))
    {
      uint64_t v5 = *((void *)this - 4);
      if (v5)
      {
LABEL_9:
        *uint64_t v24 = v5;
        return (const llvm::detail::DoubleAPFloat *)v22;
      }
    }
  }
  unsigned int v7 = *((unsigned __int8 *)this + 16);
  switch(v7)
  {
    case 0x10u:
      int v8 = *(llvm::ConstantFP **)this;
      if ((*(_DWORD *)(*(void *)this + 8) & 0xFE) == 0x12) {
        unsigned int v9 = *(unsigned __int8 *)(**((void **)v8 + 2) + 8);
      }
      else {
        unsigned int v9 = *(_DWORD *)(*(void *)this + 8);
      }
      if (v9 <= 6) {
        Zero = llvm::ConstantFP::getZero(v8, (llvm::Type *)1, a3);
      }
      else {
        Zero = llvm::Constant::getNullValue(v8, this, a3);
      }
      int v12 = Zero;
      BOOL result = llvm::ConstantFoldBinaryInstruction((llvm *)0xF, Zero, this, v11);
      if (!result)
      {
        unsigned int v13 = *(void ***)v12;
        if (*(void *)v12)
        {
          v29[0] = v12;
          v29[1] = this;
          uint64_t v14 = **v13 + 1512;
          v23[0] = 15;
          v23[1] = 0;
          uint64_t v24 = v29;
          uint64_t v25 = 2;
          long long v26 = 0u;
          long long v27 = 0u;
          uint64_t v28 = 0;
          return (const llvm::detail::DoubleAPFloat *)sub_1CC56C20C(v14, (uint64_t)v13, (unsigned __int8 *)v23);
        }
        return 0;
      }
      return result;
    case 0xFu:
      uint64_t v15 = *(void *)this;
      if (*(unsigned char *)(*(void *)(*(void *)this + 24) + 8) == 13) {
        return llvm::ConstantExpr::getNeg(this, 0, 0);
      }
      break;
    case 0xAu:
      int v16 = *((_DWORD *)this + 5) & 0x7FFFFFF;
      if (v16)
      {
        int v17 = 0;
        while (1)
        {
          BOOL result = (const llvm::detail::DoubleAPFloat *)llvm::Constant::getAggregateElement(this, v17);
          if (!result) {
            break;
          }
          unsigned int v18 = *((unsigned __int8 *)result + 16);
          BOOL v19 = v18 > 0x10;
          int v20 = (1 << v18) & 0x11800;
          if (v19 || v20 == 0) {
            return 0;
          }
          int v17 = (llvm::Type *)(v17 + 1);
          if (v16 == v17) {
            return llvm::ConstantExpr::getNeg(this, 0, 0);
          }
        }
        return result;
      }
      return llvm::ConstantExpr::getNeg(this, 0, 0);
    default:
      if (v7 > 0x14) {
        return 0;
      }
      uint64_t v15 = *(void *)this;
      break;
  }
  if ((*(_DWORD *)(v15 + 8) & 0xFE) != 0x12 || *(unsigned char *)(**(void **)(v15 + 16) + 8) != 13) {
    return 0;
  }
  BOOL result = (const llvm::detail::DoubleAPFloat *)llvm::Constant::getSplatValue(this, 0);
  if (result) {
    return llvm::ConstantExpr::getNeg(this, 0, 0);
  }
  return result;
}

uint64_t ***sub_1CC9D4074(uint64_t a1, uint64_t a2)
{
  uint64_t v69 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = *(void *)(a2 - 64);
  int v4 = *(unsigned __int8 **)(a2 - 32);
  uint64_t v60 = 0;
  uint64_t v61 = &v60;
  if (!sub_1CBC5BEAC(&v61, v3)) {
    return 0;
  }
  unsigned int v9 = v4[16];
  BOOL v10 = v9 == 5 || v4 == 0;
  if (v10 || v9 > 0x14) {
    return 0;
  }
  int v12 = *(_DWORD *)(*(void *)v60 + 8);
  if ((v12 & 0xFE) == 0x12) {
    int v12 = *(_DWORD *)(**(void **)(*(void *)v60 + 16) + 8);
  }
  if (v12 != 269) {
    return 0;
  }
  AllOnesValue = (llvm::Constant *)llvm::Constant::getAllOnesValue(*(llvm::Constant **)a2, v5, v6);
  NullValue = llvm::Constant::getNullValue(*(llvm::Constant **)a2, v14, v15);
  unsigned __int8 v17 = *(unsigned char *)(a2 + 16) - 28;
  int v20 = llvm::ConstantFoldBinaryInstruction((llvm *)(*(unsigned __int8 *)(a2 + 16) - 28), AllOnesValue, (llvm::Constant *)v4, v18);
  if (!v20)
  {
    uint64_t v53 = *(void ***)AllOnesValue;
    if (*(void *)AllOnesValue)
    {
      unint64_t v67 = AllOnesValue;
      unsigned int v68 = v4;
      uint64_t v54 = **v53 + 1512;
      LODWORD(v61) = v17;
      uint64_t v62 = &v67;
      uint64_t v63 = 2;
      long long v64 = 0u;
      long long v65 = 0u;
      uint64_t v66 = 0;
      int v20 = (void *)sub_1CC56C20C(v54, (uint64_t)v53, (unsigned __int8 *)&v61);
    }
    else
    {
      int v20 = 0;
    }
  }
  int v21 = (llvm *)(*(unsigned __int8 *)(a2 + 16) - 28);
  uint64_t v22 = (uint64_t)llvm::ConstantFoldBinaryInstruction(v21, NullValue, (llvm::Constant *)v4, v19);
  if (!v22)
  {
    uint64_t v55 = *(void ***)NullValue;
    if (*(void *)NullValue)
    {
      unint64_t v67 = NullValue;
      unsigned int v68 = v4;
      uint64_t v56 = **v55 + 1512;
      LODWORD(v61) = v21;
      uint64_t v62 = &v67;
      uint64_t v63 = 2;
      long long v64 = 0u;
      long long v65 = 0u;
      uint64_t v66 = 0;
      uint64_t v22 = sub_1CC56C20C(v56, (uint64_t)v55, (unsigned __int8 *)&v61);
    }
    else
    {
      uint64_t v22 = 0;
    }
  }
  uint64_t v23 = v60;
  WORD4(v64) = 257;
  uint64_t v24 = (char *)operator new(0xA0uLL);
  uint64_t v25 = v24;
  uint64_t v26 = 0;
  unsigned int v7 = (uint64_t ***)(v24 + 96);
  *((_DWORD *)v24 + 29) = *((_DWORD *)v24 + 29) & 0x38000000 | 3;
  do
  {
    long long v27 = &v24[v26];
    *(void *)long long v27 = 0;
    *((void *)v27 + 1) = 0;
    *((void *)v27 + 2) = 0;
    *((void *)v27 + 3) = v7;
    v26 += 32;
  }
  while (v26 != 96);
  *((void *)v24 + 12) = *v20;
  *((void *)v24 + 13) = 0;
  unsigned int v28 = *((_DWORD *)v24 + 29) & 0xC0000000 | 3;
  *((_DWORD *)v24 + 28) = 85;
  *((_DWORD *)v24 + 29) = v28;
  *(_OWORD *)(v24 + 120) = 0u;
  *(_OWORD *)(v24 + 136) = 0u;
  *((_DWORD *)v24 + 38) = 0;
  if (*(void *)v24)
  {
    **((void **)v24 + 2) = *((void *)v24 + 1);
    uint64_t v57 = *((void *)v24 + 1);
    if (v57) {
      *(void *)(v57 + 16) = *((void *)v24 + 2);
    }
  }
  *(void *)uint64_t v24 = v23;
  if (v23)
  {
    uint64_t v31 = *(void *)(v23 + 8);
    uint64_t v30 = (void *)(v23 + 8);
    uint64_t v29 = v31;
    *((void *)v24 + 1) = v31;
    if (v31) {
      *(void *)(v29 + 16) = v24 + 8;
    }
    *((void *)v24 + 2) = v30;
    *uint64_t v30 = v24;
  }
  if (*((void *)v24 + 4))
  {
    **((void **)v24 + 6) = *((void *)v24 + 5);
    uint64_t v58 = *((void *)v24 + 5);
    if (v58) {
      *(void *)(v58 + 16) = *((void *)v24 + 6);
    }
  }
  *((void *)v24 + 4) = v20;
  uint64_t v34 = v20[1];
  uint64_t v33 = v20 + 1;
  uint64_t v32 = v34;
  *((void *)v24 + 5) = v34;
  if (v34) {
    *(void *)(v32 + 16) = v24 + 40;
  }
  *((void *)v24 + 6) = v33;
  *uint64_t v33 = v24 + 32;
  char v35 = (uint64_t *)(v24 + 64);
  if (*((void *)v24 + 8))
  {
    **((void **)v24 + 10) = *((void *)v24 + 9);
    uint64_t v59 = *((void *)v24 + 9);
    if (v59) {
      *(void *)(v59 + 16) = *((void *)v24 + 10);
    }
  }
  *char v35 = v22;
  if (v22)
  {
    uint64_t v38 = *(void *)(v22 + 8);
    int v37 = (uint64_t **)(v22 + 8);
    uint64_t v36 = v38;
    *((void *)v24 + 9) = v38;
    if (v38) {
      *(void *)(v36 + 16) = v24 + 72;
    }
    *((void *)v24 + 10) = v37;
    *int v37 = v35;
  }
  llvm::Value::setNameImpl((llvm::Value *)(v24 + 96), (const char **)&v61);
  if (!v25[112])
  {
    if ((v25[119] & 0x10) == 0) {
      goto LABEL_47;
    }
    uint64_t v39 = ***v7;
    uint64_t v40 = *(void *)(v39 + 152);
    uint64_t v41 = *(unsigned int *)(v39 + 168);
    if (v41)
    {
      LODWORD(v42) = (v41 - 1) & ((v7 >> 4) ^ (v7 >> 9));
      uint64_t v43 = (uint64_t ****)(v40 + 16 * v42);
      BOOL v44 = *v43;
      if (*v43 == v7)
      {
LABEL_39:
        unsigned int v47 = v43[1];
        unint64_t v50 = (unint64_t)*v47;
        uint64_t v48 = v47 + 2;
        unint64_t v49 = v50;
        if (v50 >= 5 && *(_DWORD *)v48 == *(_DWORD *)"llvm." && v48[4] == aLlvm_1[4])
        {
          *((_DWORD *)v25 + 32) |= 0x2000u;
          int v52 = llvm::Function::lookupIntrinsicID(v48, v49);
LABEL_46:
          *((_DWORD *)v25 + 33) = v52;
          return v7;
        }
LABEL_47:
        int v52 = 0;
        *((_DWORD *)v25 + 32) &= ~0x2000u;
        goto LABEL_46;
      }
      int v45 = 1;
      while (v44 != (uint64_t ***)-4096)
      {
        int v46 = v42 + v45++;
        uint64_t v42 = v46 & (v41 - 1);
        BOOL v44 = *(uint64_t ****)(v40 + 16 * v42);
        if (v44 == v7)
        {
          uint64_t v43 = (uint64_t ****)(v40 + 16 * v42);
          goto LABEL_39;
        }
      }
    }
    uint64_t v43 = (uint64_t ****)(v40 + 16 * v41);
    goto LABEL_39;
  }
  return v7;
}

uint64_t ***sub_1CC9D447C(uint64_t a1, unsigned char *a2, void *a3, llvm::Constant *a4, BOOL a5)
{
  uint64_t v8 = a3[1];
  if (v8) {
    LOBYTE(v8) = *(void *)(v8 + 8) == 0;
  }
  if ((v8 & 1) == 0 && !a4) {
    return 0;
  }
  unsigned int v9 = (unsigned __int8 *)*(a3 - 8);
  BOOL v10 = (unsigned __int8 *)*(a3 - 4);
  unsigned int v11 = v9[16];
  if (v11 >= 0x15 && v10[16] > 0x14u) {
    return 0;
  }
  int v12 = *(_DWORD *)(*a3 + 8);
  if ((v12 & 0xFE) == 0x12) {
    int v12 = *(_DWORD *)(**(void **)(*a3 + 16) + 8);
  }
  if (v12 == 269) {
    return 0;
  }
  if (a2[16] != 77) {
    goto LABEL_21;
  }
  unsigned int v13 = 0;
  uint64_t v15 = *(void *)a2;
  if ((*(_DWORD *)(*(void *)a2 + 8) & 0xFE) != 0x12) {
    uint64_t v15 = 0;
  }
  uint64_t v16 = **((void **)a2 - 4);
  if ((*(_DWORD *)(v16 + 8) & 0xFE) != 0x12) {
    uint64_t v16 = 0;
  }
  if ((v15 == 0) != (v16 != 0))
  {
    if (!v16
      || (unsigned int v13 = 0,
          int v17 = *(_DWORD *)(v16 + 32),
          BOOL v18 = *(unsigned __int8 *)(v16 + 8) == 19,
          int v19 = *(_DWORD *)(v15 + 32),
          BOOL v20 = *(unsigned __int8 *)(v15 + 8) == 19,
          v17 == v19)
      && ((v18 ^ v20) & 1) == 0)
    {
LABEL_21:
      uint64_t v21 = *(a3 - 12);
      if (!v21) {
        goto LABEL_29;
      }
      unsigned int v22 = *(unsigned __int8 *)(v21 + 16);
      if (v22 < 0x1C || v22 - 83 < 0xFFFFFFFE) {
        goto LABEL_29;
      }
      uint64_t v24 = *(void *)(v21 + 8);
      if (!v24 || *(void *)(v24 + 8)) {
        goto LABEL_29;
      }
      BOOL v44 = *(unsigned __int8 **)(v21 - 64);
      int v45 = *(unsigned __int8 **)(v21 - 32);
      if (v9 != v44)
      {
        if (v11 > 0x14 || !v44 || v44[16] > 0x14u) {
          goto LABEL_48;
        }
        uint64_t v48 = *(void *)v9;
        int v49 = (*(_DWORD *)(*(void *)v9 + 8) & 0xFE) == 0x12
            ? *(unsigned __int8 *)(**(void **)(v48 + 16) + 8)
            : *(_DWORD *)(*(void *)v9 + 8);
        if (v49 != 13) {
          goto LABEL_48;
        }
        if (v48 != *(void *)v44) {
          goto LABEL_48;
        }
        ICmp = (llvm::Constant *)llvm::ConstantExpr::getICmp((llvm::ConstantExpr *)0x20, (llvm::Type *)*(a3 - 8), (llvm::Constant *)v44, 0, a5);
        uint64_t v99 = 0;
        int v96 = (const char *)&v99;
        uint64_t v97 = 1;
        if ((sub_1CBF5295C((uint64_t)&v96, ICmp) & 1) == 0) {
          goto LABEL_48;
        }
        uint64_t v51 = *(unsigned int *)(v99 + 8);
        if (v51 > 0x40)
        {
          int v68 = 0;
          int64_t v69 = (unint64_t)(v51 + 63) >> 6;
          do
          {
            BOOL v70 = v69-- < 1;
            if (v70) {
              break;
            }
            unint64_t v71 = *(void *)(*(void *)v99 + 8 * v69);
            v68 += __clz(v71);
          }
          while (!v71);
          int v72 = v51 | 0xFFFFFFC0;
          if ((v51 & 0x3F) == 0) {
            int v72 = 0;
          }
          if (v68 + v72 != v51 - 1) {
            goto LABEL_48;
          }
        }
        else if (*(void *)v99 != 1)
        {
          goto LABEL_48;
        }
      }
      if (v10 == v45) {
        return 0;
      }
      if (v10 && v10[16] <= 0x14u && v45 && v45[16] <= 0x14u)
      {
        uint64_t v73 = *(void *)v10;
        int v74 = (*(_DWORD *)(*(void *)v10 + 8) & 0xFE) == 0x12
            ? *(unsigned __int8 *)(**(void **)(v73 + 16) + 8)
            : *(_DWORD *)(*(void *)v10 + 8);
        if (v74 == 13 && v73 == *(void *)v45)
        {
          char v75 = (llvm::Constant *)llvm::ConstantExpr::getICmp((llvm::ConstantExpr *)0x20, (llvm::Type *)v10, (llvm::Constant *)v45, 0, a5);
          uint64_t v99 = 0;
          int v96 = (const char *)&v99;
          uint64_t v97 = 1;
          if (sub_1CBF5295C((uint64_t)&v96, v75))
          {
            uint64_t v76 = *(unsigned int *)(v99 + 8);
            if (v76 > 0x40)
            {
              int v85 = 0;
              int64_t v86 = (unint64_t)(v76 + 63) >> 6;
              do
              {
                BOOL v70 = v86-- < 1;
                if (v70) {
                  break;
                }
                unint64_t v87 = *(void *)(*(void *)v99 + 8 * v86);
                v85 += __clz(v87);
              }
              while (!v87);
              int v88 = v76 | 0xFFFFFFC0;
              if ((v76 & 0x3F) == 0) {
                int v88 = 0;
              }
              if (v85 + v88 == v76 - 1) {
                return 0;
              }
            }
            else if (*(void *)v99 == 1)
            {
              return 0;
            }
          }
        }
      }
LABEL_48:
      if (v10 != v44)
      {
        if (!v10 || v10[16] > 0x14u || !v44 || v44[16] > 0x14u) {
          goto LABEL_29;
        }
        uint64_t v46 = *(void *)v10;
        int v47 = (*(_DWORD *)(*(void *)v10 + 8) & 0xFE) == 0x12
            ? *(unsigned __int8 *)(**(void **)(v46 + 16) + 8)
            : *(_DWORD *)(*(void *)v10 + 8);
        if (v47 != 13) {
          goto LABEL_29;
        }
        if (v46 != *(void *)v44) {
          goto LABEL_29;
        }
        int v52 = (llvm::Constant *)llvm::ConstantExpr::getICmp((llvm::ConstantExpr *)0x20, (llvm::Type *)v10, (llvm::Constant *)v44, 0, a5);
        uint64_t v99 = 0;
        int v96 = (const char *)&v99;
        uint64_t v97 = 1;
        if ((sub_1CBF5295C((uint64_t)&v96, v52) & 1) == 0) {
          goto LABEL_29;
        }
        uint64_t v53 = *(unsigned int *)(v99 + 8);
        if (v53 > 0x40)
        {
          int v77 = 0;
          int64_t v78 = (unint64_t)(v53 + 63) >> 6;
          do
          {
            BOOL v70 = v78-- < 1;
            if (v70) {
              break;
            }
            unint64_t v79 = *(void *)(*(void *)v99 + 8 * v78);
            v77 += __clz(v79);
          }
          while (!v79);
          int v80 = v53 | 0xFFFFFFC0;
          if ((v53 & 0x3F) == 0) {
            int v80 = 0;
          }
          if (v77 + v80 != v53 - 1) {
            goto LABEL_29;
          }
        }
        else if (*(void *)v99 != 1)
        {
          goto LABEL_29;
        }
      }
      if (v9 == v45) {
        return 0;
      }
      if (v9[16] > 0x14u || !v45 || v45[16] > 0x14u) {
        goto LABEL_29;
      }
      uint64_t v81 = *(void *)v9;
      int v82 = (*(_DWORD *)(*(void *)v9 + 8) & 0xFE) == 0x12
          ? *(unsigned __int8 *)(**(void **)(v81 + 16) + 8)
          : *(_DWORD *)(*(void *)v9 + 8);
      if (v82 != 13) {
        goto LABEL_29;
      }
      if (v81 != *(void *)v45) {
        goto LABEL_29;
      }
      int v83 = (llvm::Constant *)llvm::ConstantExpr::getICmp((llvm::ConstantExpr *)0x20, (llvm::Type *)v9, (llvm::Constant *)v45, 0, a5);
      uint64_t v99 = 0;
      int v96 = (const char *)&v99;
      uint64_t v97 = 1;
      if ((sub_1CBF5295C((uint64_t)&v96, v83) & 1) == 0) {
        goto LABEL_29;
      }
      uint64_t v84 = *(unsigned int *)(v99 + 8);
      if (v84 <= 0x40)
      {
        if (*(void *)v99 != 1) {
          goto LABEL_29;
        }
        return 0;
      }
      int v89 = 0;
      int64_t v90 = (unint64_t)(v84 + 63) >> 6;
      do
      {
        BOOL v70 = v90-- < 1;
        if (v70) {
          break;
        }
        unint64_t v91 = *(void *)(*(void *)v99 + 8 * v90);
        v89 += __clz(v91);
      }
      while (!v91);
      int v92 = v84 | 0xFFFFFFC0;
      if ((v84 & 0x3F) == 0) {
        int v92 = 0;
      }
      if (v89 + v92 == v84 - 1) {
        return 0;
      }
LABEL_29:
      uint64_t v25 = sub_1CC9D4C54((uint64_t)a2, (llvm::Value *)v9, *(llvm::IRBuilderBase **)(a1 + 24), a4);
      long long v27 = sub_1CC9D4C54((uint64_t)a2, (llvm::Value *)v10, *(llvm::IRBuilderBase **)(a1 + 24), v26);
      uint64_t v28 = *(a3 - 12);
      __int16 v98 = 257;
      uint64_t v29 = (char *)operator new(0xA0uLL);
      uint64_t v30 = v29;
      uint64_t v31 = 0;
      unsigned int v13 = (uint64_t ***)(v29 + 96);
      *((_DWORD *)v29 + 29) = *((_DWORD *)v29 + 29) & 0x38000000 | 3;
      do
      {
        uint64_t v32 = &v29[v31];
        *(void *)uint64_t v32 = 0;
        *((void *)v32 + 1) = 0;
        *((void *)v32 + 2) = 0;
        *((void *)v32 + 3) = v13;
        v31 += 32;
      }
      while (v31 != 96);
      *((void *)v29 + 12) = *(void *)v25;
      *((void *)v29 + 13) = 0;
      unsigned int v33 = *((_DWORD *)v29 + 29) & 0xC0000000 | 3;
      *((_DWORD *)v29 + 28) = 85;
      *((_DWORD *)v29 + 29) = v33;
      *(_OWORD *)(v29 + 120) = 0u;
      *(_OWORD *)(v29 + 136) = 0u;
      *((_DWORD *)v29 + 38) = 0;
      if (*(void *)v29)
      {
        **((void **)v29 + 2) = *((void *)v29 + 1);
        uint64_t v93 = *((void *)v29 + 1);
        if (v93) {
          *(void *)(v93 + 16) = *((void *)v29 + 2);
        }
      }
      *(void *)uint64_t v29 = v28;
      if (v28)
      {
        uint64_t v36 = *(void *)(v28 + 8);
        char v35 = (void *)(v28 + 8);
        uint64_t v34 = v36;
        *((void *)v29 + 1) = v36;
        if (v36) {
          *(void *)(v34 + 16) = v29 + 8;
        }
        *((void *)v29 + 2) = v35;
        *char v35 = v29;
      }
      if (*((void *)v29 + 4))
      {
        **((void **)v29 + 6) = *((void *)v29 + 5);
        uint64_t v94 = *((void *)v29 + 5);
        if (v94) {
          *(void *)(v94 + 16) = *((void *)v29 + 6);
        }
      }
      *((void *)v29 + 4) = v25;
      uint64_t v39 = *((void *)v25 + 1);
      uint64_t v38 = v25 + 8;
      uint64_t v37 = v39;
      *((void *)v29 + 5) = v39;
      if (v39) {
        *(void *)(v37 + 16) = v29 + 40;
      }
      *((void *)v29 + 6) = v38;
      *uint64_t v38 = v29 + 32;
      uint64_t v40 = (unsigned __int8 **)(v29 + 64);
      if (*((void *)v29 + 8))
      {
        **((void **)v29 + 10) = *((void *)v29 + 9);
        uint64_t v95 = *((void *)v29 + 9);
        if (v95) {
          *(void *)(v95 + 16) = *((void *)v29 + 10);
        }
      }
      *uint64_t v40 = v27;
      if (v27)
      {
        uint64_t v43 = *((void *)v27 + 1);
        uint64_t v42 = (unsigned __int8 ***)(v27 + 8);
        uint64_t v41 = v43;
        *((void *)v29 + 9) = v43;
        if (v43) {
          *(void *)(v41 + 16) = v29 + 72;
        }
        *((void *)v29 + 10) = v42;
        *uint64_t v42 = v40;
      }
      llvm::Value::setNameImpl((llvm::Value *)(v29 + 96), &v96);
      if (v30[112]) {
        goto LABEL_45;
      }
      if ((v30[119] & 0x10) == 0) {
        goto LABEL_88;
      }
      uint64_t v54 = ***v13;
      uint64_t v55 = *(void *)(v54 + 152);
      uint64_t v56 = *(unsigned int *)(v54 + 168);
      if (v56)
      {
        LODWORD(v57) = (v56 - 1) & ((v13 >> 4) ^ (v13 >> 9));
        uint64_t v58 = (uint64_t ****)(v55 + 16 * v57);
        uint64_t v59 = *v58;
        if (*v58 == v13)
        {
LABEL_81:
          uint64_t v62 = v58[1];
          unint64_t v65 = (unint64_t)*v62;
          uint64_t v63 = v62 + 2;
          unint64_t v64 = v65;
          if (v65 >= 5 && *(_DWORD *)v63 == *(_DWORD *)"llvm." && v63[4] == aLlvm_1[4])
          {
            *((_DWORD *)v30 + 32) |= 0x2000u;
            int v67 = llvm::Function::lookupIntrinsicID(v63, v64);
LABEL_89:
            *((_DWORD *)v30 + 33) = v67;
LABEL_45:
            llvm::Instruction::copyMetadata((uint64_t)v13, (uint64_t)a3, 0, 0);
            return v13;
          }
LABEL_88:
          int v67 = 0;
          *((_DWORD *)v30 + 32) &= ~0x2000u;
          goto LABEL_89;
        }
        int v60 = 1;
        while (v59 != (uint64_t ***)-4096)
        {
          int v61 = v57 + v60++;
          uint64_t v57 = v61 & (v56 - 1);
          uint64_t v59 = *(uint64_t ****)(v55 + 16 * v57);
          if (v59 == v13)
          {
            uint64_t v58 = (uint64_t ****)(v55 + 16 * v57);
            goto LABEL_81;
          }
        }
      }
      uint64_t v58 = (uint64_t ****)(v55 + 16 * v56);
      goto LABEL_81;
    }
  }
  return v13;
}

unsigned __int8 *sub_1CC9D4C54(uint64_t a1, llvm::Value *a2, llvm::IRBuilderBase *this, llvm::Constant *a4)
{
  uint64_t v5 = (unsigned __int8 *)a2;
  uint64_t v60 = *MEMORY[0x1E4F143B8];
  int v7 = *(unsigned __int8 *)(a1 + 16);
  if ((v7 - 79) < 0xFFFFFFF3)
  {
    if (v7 == 84)
    {
      uint64_t v8 = *(void *)(a1 - 32);
      if (v8)
      {
        if (!*(unsigned char *)(v8 + 16) && *(void *)(v8 + 24) == *(void *)(a1 + 72) && (*(unsigned char *)(v8 + 33) & 0x20) != 0)
        {
          int v43 = 0;
          int v44 = *(_DWORD *)(v8 + 36);
          int v45 = *(_DWORD *)(a1 + 20);
          uint64_t v46 = -(uint64_t)(v45 & 0x7FFFFFF);
          if (v45 < 0)
          {
            uint64_t v49 = a1 - 32 * (v45 & 0x7FFFFFF);
            uint64_t v50 = *(void *)(v49 - 8);
            if ((v50 & 0xFFFFFFFF0) != 0) {
              int v43 = *(_DWORD *)(v49 - 12) - *(_DWORD *)(v49 - v50);
            }
            else {
              int v43 = 0;
            }
          }
          if (((32 * -v43 - 32 - 32 * v46) & 0x1FFFFFFFE0) == 0x20)
          {
            WORD4(v54) = 257;
            return (unsigned __int8 *)llvm::IRBuilderBase::CreateUnaryIntrinsic(this, v44, (llvm::Value *)v5, 0, (const llvm::Twine *)&v51);
          }
          else
          {
            int v47 = *(llvm::Value **)(a1 + 32 * v46 + 32);
            WORD4(v54) = 257;
            return (unsigned __int8 *)llvm::IRBuilderBase::CreateBinaryIntrinsic(this, v44, (llvm::Value *)v5, v47, 0, (const llvm::Twine *)&v51);
          }
        }
      }
    }
    int v9 = *(_DWORD *)(a1 + 20);
    if ((v9 & 0x40000000) != 0) {
      uint64_t v10 = *(void *)(a1 - 8);
    }
    else {
      uint64_t v10 = a1 - 32 * (v9 & 0x7FFFFFF);
    }
    unsigned int v16 = *(unsigned __int8 *)(*(void *)(v10 + 32) + 16);
    int v17 = *(llvm::Constant **)(v10 + 32 * (v16 < 0x15));
    if (a2 && *((unsigned __int8 *)a2 + 16) <= 0x14u)
    {
      unsigned __int8 v18 = v7 - 28;
      int v19 = (llvm *)(v7 - 28);
      if (v16 > 0x14)
      {
        BOOL v20 = llvm::ConstantFoldBinaryInstruction(v19, v17, a2, a4);
        if (!v20)
        {
          uint64_t v21 = *(uint64_t ***)v17;
          if (*(void *)v17)
          {
            uint64_t v57 = v17;
            uint64_t v58 = v5;
            goto LABEL_59;
          }
          return 0;
        }
      }
      else
      {
        BOOL v20 = llvm::ConstantFoldBinaryInstruction(v19, a2, v17, a4);
        if (!v20)
        {
          uint64_t v21 = *(uint64_t ***)v5;
          if (*(void *)v5)
          {
            uint64_t v57 = v5;
            uint64_t v58 = v17;
LABEL_59:
            uint64_t v48 = **v21 + 1512;
            LODWORD(v51) = v18;
            int v52 = &v57;
            uint64_t v53 = 2;
            long long v54 = 0u;
            long long v55 = 0u;
            uint64_t v56 = 0;
            return (unsigned __int8 *)sub_1CC56C20C(v48, (uint64_t)v21, (unsigned __int8 *)&v51);
          }
          return 0;
        }
      }
      return (unsigned __int8 *)v20;
    }
    if (v16 >= 0x15) {
      unsigned int v22 = a2;
    }
    else {
      unsigned int v22 = *(llvm::Value **)(v10 + 32 * (v16 < 0x15));
    }
    if (v16 >= 0x15) {
      uint64_t v23 = *(llvm::Value **)(v10 + 32 * (v16 < 0x15));
    }
    else {
      uint64_t v23 = a2;
    }
    uint64_t v24 = (v7 - 28);
    if ((v5[23] & 0x10) == 0)
    {
      uint64_t v39 = 0;
      uint64_t v38 = &byte_1CFBCE98E;
      goto LABEL_48;
    }
    uint64_t v25 = ***(void ***)v5;
    uint64_t v26 = *(void *)(v25 + 152);
    uint64_t v27 = *(unsigned int *)(v25 + 168);
    if (v27)
    {
      LODWORD(v28) = (v27 - 1) & ((v5 >> 4) ^ (v5 >> 9));
      uint64_t v29 = (unsigned __int8 **)(v26 + 16 * v28);
      uint64_t v30 = *v29;
      if (*v29 == v5)
      {
LABEL_47:
        uint64_t v37 = v29[1];
        uint64_t v40 = *(void ***)v37;
        uint64_t v38 = (const char *)(v37 + 16);
        uint64_t v39 = v40;
LABEL_48:
        WORD4(v54) = 773;
        uint64_t v51 = v38;
        int v52 = v39;
        uint64_t v53 = (uint64_t)".op";
        uint64_t v41 = sub_1CB844E98((uint64_t)this, v24, (uint64_t)v23, (uint64_t)v22, (uint64_t)&v51, 0);
        uint64_t v5 = (unsigned __int8 *)v41;
        if (v41 && *((unsigned __int8 *)v41 + 16) >= 0x1Cu) {
          llvm::Instruction::copyIRFlags((uint64_t)v41, a1, 1);
        }
        return v5;
      }
      int v31 = 1;
      while (v30 != (unsigned __int8 *)-4096)
      {
        int v32 = v28 + v31++;
        uint64_t v28 = v32 & (v27 - 1);
        uint64_t v30 = *(unsigned __int8 **)(v26 + 16 * v28);
        if (v30 == v5)
        {
          uint64_t v29 = (unsigned __int8 **)(v26 + 16 * v28);
          goto LABEL_47;
        }
      }
    }
    uint64_t v29 = (unsigned __int8 **)(v26 + 16 * v27);
    goto LABEL_47;
  }
  uint64_t v11 = *(void *)a1;
  __int16 v59 = 257;
  if (*(void *)a2 != v11)
  {
    uint64_t v12 = (v7 - 28);
    if (v5[16] <= 0x14u)
    {
      uint64_t v5 = (unsigned __int8 *)(*(uint64_t (**)(void, uint64_t, unsigned __int8 *, uint64_t))(**((void **)this + 9) + 224))(*((void *)this + 9), v12, v5, v11);
      if (v5) {
        BOOL v33 = v5[16] >= 0x1Cu;
      }
      else {
        BOOL v33 = 0;
      }
      if (v33)
      {
        (*(void (**)(void, unsigned __int8 *, void **, void, void))(**((void **)this + 10) + 16))(*((void *)this + 10), v5, &v57, *((void *)this + 6), *((void *)this + 7));
        uint64_t v34 = *((unsigned int *)this + 2);
        if (v34)
        {
          uint64_t v35 = *(void *)this;
          uint64_t v36 = v35 + 16 * v34;
          do
          {
            llvm::Instruction::setMetadata((llvm::Instruction *)v5, *(_DWORD *)v35, *(llvm::MDNode **)(v35 + 8));
            v35 += 16;
          }
          while (v35 != v36);
        }
      }
    }
    else
    {
      WORD4(v54) = 257;
      uint64_t v5 = (unsigned __int8 *)llvm::CastInst::Create(v12, (uint64_t)v5, v11, &v51, 0);
      (*(void (**)(void, unsigned __int8 *, void **, void, void))(**((void **)this + 10) + 16))(*((void *)this + 10), v5, &v57, *((void *)this + 6), *((void *)this + 7));
      uint64_t v13 = *((unsigned int *)this + 2);
      if (v13)
      {
        uint64_t v14 = *(void *)this;
        uint64_t v15 = v14 + 16 * v13;
        do
        {
          llvm::Instruction::setMetadata((llvm::Instruction *)v5, *(_DWORD *)v14, *(llvm::MDNode **)(v14 + 8));
          v14 += 16;
        }
        while (v14 != v15);
      }
    }
  }
  return v5;
}

llvm::UndefValue **sub_1CC9D50C0(uint64_t a1, llvm::Instruction *this, uint64_t a3)
{
  uint64_t v319 = *MEMORY[0x1E4F143B8];
  int v3 = *(_DWORD *)(a3 + 20);
  int v310 = v3 & 0x7FFFFFF;
  if ((v3 & 0x7FFFFFF) == 0) {
    return 0;
  }
  uint64_t v7 = *(void *)(a3 + 8);
  if (v7 && *(void *)(v7 + 8))
  {
    do
    {
      uint64_t v8 = *(unsigned __int8 **)(v7 + 24);
      if (v8 != (unsigned __int8 *)this
        && (!llvm::Instruction::isIdenticalToWhenDefined(this, *(const llvm::Instruction **)(v7 + 24))
         || (v8[17] ^ *((unsigned __int8 *)this + 17)) > 1))
      {
        return 0;
      }
      uint64_t v7 = *(void *)(v7 + 8);
    }
    while (v7);
  }
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = v3 & 0x7FFFFFF;
  do
  {
    int v13 = *(_DWORD *)(a3 + 20);
    if ((v13 & 0x40000000) != 0) {
      uint64_t v14 = *(void *)(a3 - 8);
    }
    else {
      uint64_t v14 = a3 - 32 * (v13 & 0x7FFFFFF);
    }
    uint64_t v15 = *(void *)(v14 + v9);
    if (*((unsigned char *)this + 16) == 95)
    {
      if (sub_1CC16A22C((uint64_t ***)v15, 0, 0, 0, 0, 0)) {
        goto LABEL_31;
      }
      unsigned int v16 = *(unsigned __int8 *)(v15 + 16);
    }
    else
    {
      unsigned int v16 = *(unsigned __int8 *)(v15 + 16);
      if (v16 <= 0x14 && v16 != 5) {
        goto LABEL_31;
      }
    }
    if (v16 == 83 || v11 != 0) {
      return 0;
    }
    int v19 = *(_DWORD *)(a3 + 20);
    uint64_t v20 = (v19 & 0x40000000) != 0 ? *(void *)(a3 - 8) : a3 - 32 * (v19 & 0x7FFFFFF);
    uint64_t v11 = *(void *)(v20 + 32 * *(unsigned int *)(a3 + 60) + 8 * v10);
    if (v16 == 33 && *(void *)(v15 + 40) == v11) {
      return 0;
    }
    if (llvm::isPotentiallyReachable(*((void *)this + 5), *(void *)(v20 + 32 * *(unsigned int *)(a3 + 60) + 8 * v10), 0, *(void *)(a1 + 72), *(uint64_t **)(a1 + 160)))return 0; {
LABEL_31:
    }
    ++v10;
    v9 += 32;
  }
  while (v12 != v10);
  if (v11)
  {
    uint64_t v21 = *(void *)(v11 + 40);
    if (v21 != v11 + 40)
    {
      BOOL result = 0;
      uint64_t v23 = v21 - 24;
      if (!v21) {
        uint64_t v23 = 0;
      }
      unsigned int v24 = *(unsigned __int8 *)(v23 + 16) - 40;
      if (v24 < 0xFFFFFFF5) {
        uint64_t v23 = 0;
      }
      if (!v21) {
        return result;
      }
      if (*(unsigned char *)(v23 + 16) != 30 || v24 < 0xFFFFFFF5) {
        return result;
      }
      if ((*(_DWORD *)(v23 + 20) & 0x7FFFFFF) == 1) {
        llvm::DominatorTreeBase<llvm::BasicBlock,false>::isReachableFromEntry();
      }
    }
    return 0;
  }
  uint64_t v26 = *(void *)this;
  int v27 = *(_DWORD *)(a3 + 20) & 0x7FFFFFF;
  WORD4(v313) = 257;
  uint64_t v28 = (char *)operator new(0x48uLL);
  *((void *)v28 + 1) = v26;
  *(void *)uint64_t v28 = 0;
  *((void *)v28 + 2) = 0;
  *((void *)v28 + 3) = 0x4000000000000053;
  *((_OWORD *)v28 + 2) = 0u;
  uint64_t v29 = v28 + 32;
  *((_OWORD *)v28 + 3) = 0u;
  *((_DWORD *)v28 + 16) = 0;
  *((_DWORD *)v28 + 17) = v27;
  uint64_t v30 = (uint64_t ***)(v28 + 8);
  llvm::Value::setNameImpl((llvm::Value *)(v28 + 8), v312);
  unsigned int v31 = (v28 + 8) >> 4;
  if (!v28[24])
  {
    if ((v28[31] & 0x10) == 0) {
      goto LABEL_425;
    }
    uint64_t v284 = ***v30;
    uint64_t v285 = *(void *)(v284 + 152);
    uint64_t v286 = *(unsigned int *)(v284 + 168);
    if (v286)
    {
      LODWORD(v287) = (v286 - 1) & (v31 ^ (v30 >> 9));
      unsigned int v288 = (uint64_t ****)(v285 + 16 * v287);
      v289 = *v288;
      if (*v288 == v30)
      {
LABEL_418:
        size_t v292 = v288[1];
        unint64_t v295 = (unint64_t)*v292;
        uint64_t v293 = v292 + 2;
        unint64_t v294 = v295;
        if (v295 >= 5 && *(_DWORD *)v293 == *(_DWORD *)"llvm." && v293[4] == aLlvm_1[4])
        {
          *((_DWORD *)v28 + 10) |= 0x2000u;
          int v297 = llvm::Function::lookupIntrinsicID(v293, v294);
LABEL_426:
          *((_DWORD *)v28 + 11) = v297;
          goto LABEL_47;
        }
LABEL_425:
        int v297 = 0;
        *((_DWORD *)v28 + 10) &= ~0x2000u;
        goto LABEL_426;
      }
      int v290 = 1;
      while (v289 != (uint64_t ***)-4096)
      {
        int v291 = v287 + v290++;
        uint64_t v287 = v291 & (v286 - 1);
        v289 = *(uint64_t ****)(v285 + 16 * v287);
        if (v289 == v30)
        {
          unsigned int v288 = (uint64_t ****)(v285 + 16 * v287);
          goto LABEL_418;
        }
      }
    }
    unsigned int v288 = (uint64_t ****)(v285 + 16 * v286);
    goto LABEL_418;
  }
LABEL_47:
  v303 = (llvm::Value *)(v28 + 8);
  uint64_t v32 = *((unsigned int *)v28 + 17);
  BOOL v33 = operator new(40 * v32);
  *(void *)uint64_t v28 = v33;
  if (v32)
  {
    uint64_t v34 = &v33[4 * v32];
    do
    {
      *BOOL v33 = 0;
      v33[1] = 0;
      v33[2] = 0;
      v33[3] = v303;
      v33 += 4;
    }
    while (v33 != v34);
  }
  uint64_t v35 = *(void *)(a3 + 40);
  uint64_t v36 = (uint64_t *)(a3 + 24);
  *((void *)v28 + 6) = v35;
  *(_WORD *)(v35 + 18) &= ~0x8000u;
  if ((v28[31] & 0x10) != 0)
  {
    uint64_t v282 = *(void *)(v35 + 56);
    if (v282)
    {
      uint64_t v283 = *(llvm::ValueSymbolTable **)(v282 + 104);
      if (v283) {
        llvm::ValueSymbolTable::reinsertValue(v283, v303);
      }
    }
  }
  uint64_t v37 = *v36;
  *((void *)v28 + 4) = *v36;
  *((void *)v28 + 5) = v36;
  *(void *)(v37 + 8) = v29;
  *uint64_t v36 = (uint64_t)v29;
  uint64_t v38 = *(void *)(a1 + 32);
  v312[0] = v28 + 8;
  if (*(unsigned char *)(v38 + 2088))
  {
    uint64_t v41 = v38 + 2096;
    int v39 = 16;
    int v40 = v310;
LABEL_54:
    int v42 = v39 - 1;
    unsigned int v43 = v42 & (v31 ^ (v303 >> 9));
    int v44 = (llvm::Value **)(v41 + 8 * v43);
    int v45 = *v44;
    if (v303 != *v44)
    {
      uint64_t v46 = 0;
      int v47 = 1;
      while (v45 != (llvm::Value *)-4096)
      {
        if (v46) {
          BOOL v48 = 0;
        }
        else {
          BOOL v48 = v45 == (llvm::Value *)-8192;
        }
        if (v48) {
          uint64_t v46 = v44;
        }
        unsigned int v49 = v43 + v47++;
        unsigned int v43 = v49 & v42;
        int v44 = (llvm::Value **)(v41 + 8 * v43);
        int v45 = *v44;
        if (v303 == *v44) {
          goto LABEL_71;
        }
      }
      if (v46) {
        uint64_t v50 = v46;
      }
      else {
        uint64_t v50 = v44;
      }
      goto LABEL_69;
    }
  }
  else
  {
    int v39 = *(_DWORD *)(v38 + 2104);
    int v40 = v310;
    if (v39)
    {
      uint64_t v41 = *(void *)(v38 + 2096);
      goto LABEL_54;
    }
    uint64_t v50 = 0;
LABEL_69:
    uint64_t v51 = (const char **)sub_1CBFD5BBC(v38 + 2088, (uint64_t)v312, v312, v50);
    *uint64_t v51 = v312[0];
    unsigned int v52 = *(_DWORD *)(v38 + 2232);
    if (v52 >= *(_DWORD *)(v38 + 2236)) {
      llvm::SmallVectorBase<unsigned int>::grow_pod();
    }
    *(const char **)(*(void *)(v38 + 2224) + 8 * v52) = v312[0];
    ++*(_DWORD *)(v38 + 2232);
  }
LABEL_71:
  llvm::Value::takeName((int32x2_t ****)v303, (llvm::Value *)a3);
  v309 = this;
  int v55 = *((unsigned __int8 *)this + 16);
  *(void *)uint64_t v311 = a1;
  if (v55 == 85)
  {
    uint64_t v56 = 0;
    uint64_t v57 = *((void *)this - 8);
    uint64_t v58 = *((void *)this - 4);
    uint64_t v304 = *(void **)(a3 + 40);
    while (1)
    {
      int v59 = *(_DWORD *)(a3 + 20);
      if ((v59 & 0x40000000) != 0) {
        uint64_t v60 = *(void *)(a3 - 8);
      }
      else {
        uint64_t v60 = a3 - 32 * (v59 & 0x7FFFFFF);
      }
      uint64_t v61 = *(void *)(v60 + 32 * *(unsigned int *)(a3 + 60) + 8 * v56);
      Select = (char **)v57;
      if (v57)
      {
        Select = (char **)v57;
        if (*(unsigned char *)(v57 + 16) == 83)
        {
          Select = (char **)v57;
          if (*(void **)(v57 + 40) == v304) {
            Select = (char **)sub_1CBF73380(v57, v61);
          }
        }
      }
      uint64_t v63 = (llvm::Value *)v58;
      if (v58)
      {
        uint64_t v63 = (llvm::Value *)v58;
        if (*(unsigned char *)(v58 + 16) == 83)
        {
          uint64_t v63 = (llvm::Value *)v58;
          if (*(void **)(v58 + 40) == v304) {
            uint64_t v63 = (llvm::Value *)sub_1CBF73380(v58, v61);
          }
        }
      }
      int v64 = *(_DWORD *)(a3 + 20);
      if ((v64 & 0x40000000) != 0) {
        uint64_t v65 = *(void *)(a3 - 8);
      }
      else {
        uint64_t v65 = a3 - 32 * (v64 & 0x7FFFFFF);
      }
      uint64_t v66 = *(void *)(v65 + 32 * v56);
      if (v66) {
        BOOL v67 = *(unsigned char *)(v66 + 16) == 16;
      }
      else {
        BOOL v67 = 0;
      }
      if (v67)
      {
        uint64_t v76 = *(unsigned int *)(v66 + 32);
        if (v76 > 0x40)
        {
          int v107 = 0;
          int64_t v108 = (unint64_t)(v76 + 63) >> 6;
          do
          {
            BOOL v155 = v108-- < 1;
            if (v155) {
              break;
            }
            unint64_t v109 = *(void *)(*(void *)(v66 + 24) + 8 * v108);
            v107 += __clz(v109);
          }
          while (!v109);
          int v110 = v76 | 0xFFFFFFC0;
          if ((v76 & 0x3F) == 0) {
            int v110 = 0;
          }
          BOOL v77 = v107 + v110 == v76;
          int v40 = v310;
        }
        else
        {
          BOOL v77 = *(void *)(v66 + 24) == 0;
        }
        if (v77) {
          Select = (char **)v63;
        }
        goto LABEL_108;
      }
      uint64_t v68 = 0;
      uint64_t v69 = *(void *)(*(void *)v311 + 24);
      uint64_t v70 = *(void *)(v61 + 40);
      if (v70) {
        uint64_t v71 = v70 - 24;
      }
      else {
        uint64_t v71 = 0;
      }
      if (*(unsigned __int8 *)(v71 + 16) - 29 >= 0xB) {
        uint64_t v71 = 0;
      }
      *(void *)(v69 + 48) = *(void *)(v71 + 40);
      *(void *)(v69 + 56) = v71 + 24;
      int v72 = *(unsigned __int8 **)(v71 + 48);
      int v316 = (const char *)v72;
      if (v72)
      {
        llvm::MetadataTracking::track((uint64_t)&v316, v72, 2);
        uint64_t v68 = (uint64_t)v316;
      }
      sub_1CB8461A4(v69, 0, v68);
      int v40 = v310;
      if (v316)
      {
        int v103 = *(unsigned __int8 *)v316;
        if ((v103 - 4) > 0x1E)
        {
          if ((v103 - 3) >= 0xFFFFFFFE) {
            uint64_t v106 = v316;
          }
          else {
            uint64_t v106 = 0;
          }
          if ((v103 - 3) < 0xFFFFFFFE)
          {
            if (v103 == 3) {
              *((void *)v316 + 1) = 0;
            }
            goto LABEL_99;
          }
          unint64_t v105 = (unint64_t)(v106 + 8);
        }
        else
        {
          if ((v316[1] & 0x7F) != 2 && !*((_DWORD *)v316 + 3)) {
            goto LABEL_99;
          }
          uint64_t v104 = *((void *)v316 + 2);
          if ((v104 & 4) == 0) {
            goto LABEL_99;
          }
          unint64_t v105 = v104 & 0xFFFFFFFFFFFFFFF8;
          if (!v105) {
            goto LABEL_99;
          }
        }
        v312[0] = (const char *)&v316;
        sub_1CC5FA668(v105 + 16, v312);
      }
LABEL_99:
      uint64_t v73 = *(llvm::IRBuilderBase **)(*(void *)v311 + 24);
      int v74 = *(_DWORD *)(a3 + 20);
      if ((v74 & 0x40000000) != 0) {
        uint64_t v75 = *(void *)(a3 - 8);
      }
      else {
        uint64_t v75 = a3 - 32 * (v74 & 0x7FFFFFF);
      }
      int64_t v78 = *(llvm::Value **)(v75 + 32 * v56);
      v312[0] = "phi.sel";
      WORD4(v313) = 259;
      Select = (char **)llvm::IRBuilderBase::CreateSelect(v73, v78, (llvm::Value *)Select, v63, (const llvm::Twine *)v312, 0);
LABEL_108:
      int v79 = *((_DWORD *)v28 + 7);
      uint64_t v80 = v79 & 0x7FFFFFF;
      if ((v79 & 0x7FFFFFF) == *((_DWORD *)v28 + 17))
      {
        unsigned int v93 = v80 + (v80 >> 1);
        if (v93 <= 2) {
          uint64_t v94 = 2;
        }
        else {
          uint64_t v94 = v93;
        }
        *((_DWORD *)v28 + 17) = v94;
        if ((v79 & 0x40000000) != 0)
        {
          long long __p = *(uint64_t **)v28;
          uint64_t v95 = v28 + 8;
        }
        else
        {
          uint64_t v95 = v28 + 8;
          long long __p = (uint64_t *)((char *)v303 - 32 * v80);
        }
        int v96 = operator new(40 * v94);
        uint64_t v298 = v94;
        *(void *)uint64_t v28 = v96;
        uint64_t v97 = v96;
        do
        {
          *uint64_t v97 = 0;
          v97[1] = 0;
          v97[2] = 0;
          v97[3] = v95;
          v97 += 4;
        }
        while (v97 != &v96[4 * v94]);
        int v98 = *((_DWORD *)v28 + 7);
        if ((v98 & 0x40000000) != 0) {
          uint64_t v99 = (uint64_t)v96;
        }
        else {
          uint64_t v99 = (uint64_t)&v95[-32 * (v98 & 0x7FFFFFF)];
        }
        sub_1CC5E4108((uint64_t)v312, __p, &__p[4 * v80], v99);
        if (v80)
        {
          memmove((void *)(v99 + 32 * v298), &__p[4 * v80], 8 * v80);
          uint64_t v100 = 4 * v80;
          do
          {
            unsigned int v101 = &__p[v100];
            if (__p[v100 - 4])
            {
              *(void *)*(v101 - 2) = *(v101 - 3);
              uint64_t v102 = *(v101 - 3);
              if (v102) {
                *(void *)(v102 + 16) = *(v101 - 2);
              }
            }
            v100 -= 4;
          }
          while (v100 * 8);
        }
        operator delete(__p);
        int v79 = *((_DWORD *)v28 + 7);
        int v40 = v310;
      }
      uint64_t v81 = (v79 + 1) & 0x7FFFFFF;
      *((_DWORD *)v28 + 7) = v79 & 0xF8000000 | (v79 + 1) & 0x7FFFFFF;
      if ((v79 & 0x40000000) != 0) {
        int v82 = *(char **)v28;
      }
      else {
        int v82 = (char *)v303 - 32 * v81;
      }
      uint64_t v83 = (v81 - 1);
      uint64_t v84 = &v82[32 * v83];
      if (*(void *)v84)
      {
        **((void **)v84 + 2) = *((void *)v84 + 1);
        uint64_t v92 = *((void *)v84 + 1);
        if (v92) {
          *(void *)(v92 + 16) = *((void *)v84 + 2);
        }
      }
      *(void *)uint64_t v84 = Select;
      if (Select)
      {
        unint64_t v87 = Select[1];
        int64_t v86 = Select + 1;
        int v85 = v87;
        int v88 = &v82[32 * v83];
        *((void *)v88 + 1) = v87;
        if (v87) {
          *((void *)v85 + 2) = v88 + 8;
        }
        *((void *)v88 + 2) = v86;
        *int64_t v86 = v84;
      }
      int v89 = *((_DWORD *)v28 + 7);
      uint64_t v90 = v89 & 0x7FFFFFF;
      if ((v89 & 0x40000000) != 0) {
        unint64_t v91 = *(char **)v28;
      }
      else {
        unint64_t v91 = (char *)v303 - 32 * v90;
      }
      *(void *)&v91[32 * *((unsigned int *)v28 + 17) + 8 * (v90 - 1)] = v61;
      ++v56;
      a1 = *(void *)v311;
      if (v40 == v56) {
        goto LABEL_401;
      }
    }
  }
  if ((v55 - 83) >= 0xFFFFFFFE)
  {
    int v146 = *((_DWORD *)this + 5);
    if ((v146 & 0x40000000) != 0) {
      uint64_t v147 = (char *)*((void *)this - 1);
    }
    else {
      uint64_t v147 = (char *)this - 32 * (v146 & 0x7FFFFFF);
    }
    uint64_t v194 = 0;
    unint64_t v195 = (llvm::Constant *)*((void *)v147 + 4);
    __pb = v195;
    do
    {
      int v196 = *(_DWORD *)(a3 + 20);
      if ((v196 & 0x40000000) != 0) {
        uint64_t v197 = *(void *)(a3 - 8);
      }
      else {
        uint64_t v197 = a3 - 32 * (v196 & 0x7FFFFFF);
      }
      uint64_t v198 = *(void *)(v197 + 32 * v194);
      if (v198) {
        BOOL v199 = *(unsigned __int8 *)(v198 + 16) > 0x14u;
      }
      else {
        BOOL v199 = 1;
      }
      if (v199)
      {
        if ((v196 & 0x40000000) != 0) {
          uint64_t v200 = *(void *)(a3 - 8);
        }
        else {
          uint64_t v200 = a3 - 32 * (v196 & 0x7FFFFFF);
        }
        uint64_t v203 = *(void *)(a1 + 24);
        uint64_t v204 = *((_WORD *)v309 + 9) & 0x3F;
        unint64_t v205 = *(void **)(v200 + 32 * v194);
        v312[0] = "phi.cmp";
        WORD4(v313) = 259;
        if (v204 > 0xF) {
          uint64_t FCmpHelper = (uint64_t)sub_1CB845F20(v203, v204, v205, (uint64_t)v195, (uint64_t)v312);
        }
        else {
          uint64_t FCmpHelper = (uint64_t)llvm::IRBuilderBase::CreateFCmpHelper(v203, v204, (uint64_t)v205, (uint64_t)v195, (uint64_t)v312, 0, 0);
        }
      }
      else
      {
        uint64_t v201 = (llvm::ConstantExpr *)(*((_WORD *)v309 + 9) & 0x3F);
        if (v201 <= 0xF) {
          uint64_t FCmpHelper = llvm::ConstantExpr::getFCmp(v201, (uint64_t ***)v198, v195, 0);
        }
        else {
          uint64_t FCmpHelper = (uint64_t)llvm::ConstantExpr::getICmp(v201, (llvm::Type *)v198, v195, 0, v54);
        }
      }
      uint64_t v206 = FCmpHelper;
      int v207 = *(_DWORD *)(a3 + 20);
      if ((v207 & 0x40000000) != 0) {
        uint64_t v208 = *(void *)(a3 - 8);
      }
      else {
        uint64_t v208 = a3 - 32 * (v207 & 0x7FFFFFF);
      }
      uint64_t v209 = *(void *)(v208 + 32 * *(unsigned int *)(a3 + 60) + 8 * v194);
      int v210 = *((_DWORD *)v28 + 7);
      uint64_t v211 = v210 & 0x7FFFFFF;
      if ((v210 & 0x7FFFFFF) == *((_DWORD *)v28 + 17))
      {
        unsigned int v224 = v211 + (v211 >> 1);
        if (v224 <= 2) {
          uint64_t v225 = 2;
        }
        else {
          uint64_t v225 = v224;
        }
        *((_DWORD *)v28 + 17) = v225;
        if ((v210 & 0x40000000) != 0)
        {
          BOOL v307 = *(uint64_t **)v28;
          v226 = v28 + 8;
        }
        else
        {
          v226 = v28 + 8;
          BOOL v307 = (uint64_t *)((char *)v303 - 32 * v211);
        }
        v227 = operator new(40 * v225);
        *(void *)uint64_t v28 = v227;
        unint64_t v228 = v227;
        do
        {
          *unint64_t v228 = 0;
          v228[1] = 0;
          v228[2] = 0;
          v228[3] = v226;
          v228 += 4;
        }
        while (v228 != &v227[4 * v225]);
        int v229 = *((_DWORD *)v28 + 7);
        if ((v229 & 0x40000000) != 0) {
          uint64_t v230 = (uint64_t)v227;
        }
        else {
          uint64_t v230 = (uint64_t)&v226[-32 * (v229 & 0x7FFFFFF)];
        }
        sub_1CC5E4108((uint64_t)v312, v307, &v307[4 * v211], v230);
        if (v211)
        {
          memmove((void *)(v230 + 32 * v225), &v307[4 * v211], 8 * v211);
          uint64_t v231 = 4 * v211;
          do
          {
            uint64_t v232 = &v307[v231];
            if (v307[v231 - 4])
            {
              *(void *)*(v232 - 2) = *(v232 - 3);
              uint64_t v233 = *(v232 - 3);
              if (v233) {
                *(void *)(v233 + 16) = *(v232 - 2);
              }
            }
            v231 -= 4;
          }
          while (v231 * 8);
        }
        operator delete(v307);
        int v210 = *((_DWORD *)v28 + 7);
        a1 = *(void *)v311;
        int v40 = v310;
        unint64_t v195 = __pb;
      }
      uint64_t v212 = (v210 + 1) & 0x7FFFFFF;
      *((_DWORD *)v28 + 7) = v210 & 0xF8000000 | (v210 + 1) & 0x7FFFFFF;
      if ((v210 & 0x40000000) != 0) {
        uint64_t v213 = *(char **)v28;
      }
      else {
        uint64_t v213 = (char *)v303 - 32 * v212;
      }
      uint64_t v214 = (v212 - 1);
      uint64_t v215 = &v213[32 * v214];
      if (*(void *)v215)
      {
        **((void **)v215 + 2) = *((void *)v215 + 1);
        uint64_t v223 = *((void *)v215 + 1);
        if (v223) {
          *(void *)(v223 + 16) = *((void *)v215 + 2);
        }
      }
      *(void *)uint64_t v215 = v206;
      if (v206)
      {
        uint64_t v218 = *(void *)(v206 + 8);
        v217 = (char **)(v206 + 8);
        uint64_t v216 = v218;
        int v219 = &v213[32 * v214];
        *((void *)v219 + 1) = v218;
        if (v218) {
          *(void *)(v216 + 16) = v219 + 8;
        }
        *((void *)v219 + 2) = v217;
        char *v217 = v215;
      }
      int v220 = *((_DWORD *)v28 + 7);
      uint64_t v221 = v220 & 0x7FFFFFF;
      if ((v220 & 0x40000000) != 0) {
        uint64_t v222 = *(char **)v28;
      }
      else {
        uint64_t v222 = (char *)v303 - 32 * v221;
      }
      *(void *)&v222[32 * *((unsigned int *)v28 + 17) + 8 * (v221 - 1)] = v209;
      ++v194;
    }
    while (v40 != v194);
    goto LABEL_401;
  }
  if ((v55 - 59) >= 0xFFFFFFEE)
  {
    uint64_t v148 = 0;
    uint64_t v149 = (char *)this - 64;
    __pa = (char *)this - 64;
    while (1)
    {
      int v150 = *(_DWORD *)(a3 + 20);
      if ((v150 & 0x40000000) != 0) {
        uint64_t v151 = *(void *)(a3 - 8);
      }
      else {
        uint64_t v151 = a3 - 32 * (v150 & 0x7FFFFFF);
      }
      uint64_t v152 = *(unsigned __int8 **)(v151 + 32 * v148);
      unsigned int v153 = *(unsigned __int8 *)(*((void *)v309 - 4) + 16);
      __int16 v154 = *(llvm::Constant **)&v149[32 * (v153 < 0x15)];
      if (v152) {
        BOOL v155 = v152[16] > 0x14u;
      }
      else {
        BOOL v155 = 1;
      }
      if (v155)
      {
        uint64_t v156 = *(void *)(*(void *)v311 + 24);
        if (v153 >= 0x15) {
          uint64_t v157 = *(void *)&v149[32 * (v153 < 0x15)];
        }
        else {
          uint64_t v157 = (uint64_t)v152;
        }
        if (v153 >= 0x15) {
          uint64_t v158 = (uint64_t)v152;
        }
        else {
          uint64_t v158 = *(void *)&v149[32 * (v153 < 0x15)];
        }
        uint64_t v159 = *((unsigned __int8 *)v309 + 16) - 28;
        v312[0] = "phi.bo";
        WORD4(v313) = 259;
        unint64_t v160 = sub_1CB844E98(v156, v159, v157, v158, (uint64_t)v312, 0);
        uint64_t v161 = (uint64_t)v160;
        if (v160) {
          BOOL v162 = *((unsigned __int8 *)v160 + 16) >= 0x1Cu;
        }
        else {
          BOOL v162 = 0;
        }
        if (v162 && sub_1CB845E74((uint64_t)v160)) {
          *(unsigned char *)(v161 + 17) = *((unsigned char *)v309 + 17) & 0xFE | *(unsigned char *)(v161 + 17) & 1;
        }
        goto LABEL_238;
      }
      unsigned __int8 v163 = *((unsigned char *)v309 + 16) - 28;
      uint64_t v164 = (llvm *)(*((unsigned __int8 *)v309 + 16) - 28);
      if (v153 > 0x14)
      {
        uint64_t v161 = (uint64_t)llvm::ConstantFoldBinaryInstruction(v164, v154, (llvm::Constant *)v152, v53);
        if (!v161)
        {
          uint64_t v165 = *(void ***)v154;
          if (*(void *)v154)
          {
            int v316 = (const char *)v154;
            int v317 = v152;
LABEL_274:
            uint64_t v193 = **v165 + 1512;
            LODWORD(v312[0]) = v163;
            v312[1] = (const char *)&v316;
            v312[2] = (const char *)2;
            long long v313 = 0u;
            long long v314 = 0u;
            uint64_t v315 = 0;
            uint64_t v161 = sub_1CC56C20C(v193, (uint64_t)v165, (unsigned __int8 *)v312);
LABEL_275:
            int v40 = v310;
            uint64_t v149 = __pa;
            goto LABEL_238;
          }
LABEL_279:
          uint64_t v161 = 0;
          goto LABEL_275;
        }
      }
      else
      {
        uint64_t v161 = (uint64_t)llvm::ConstantFoldBinaryInstruction(v164, (llvm::Constant *)v152, v154, v53);
        if (!v161)
        {
          uint64_t v165 = *(void ***)v152;
          if (*(void *)v152)
          {
            int v316 = (const char *)v152;
            int v317 = v154;
            goto LABEL_274;
          }
          goto LABEL_279;
        }
      }
LABEL_238:
      int v166 = *(_DWORD *)(a3 + 20);
      if ((v166 & 0x40000000) != 0) {
        uint64_t v167 = *(void *)(a3 - 8);
      }
      else {
        uint64_t v167 = a3 - 32 * (v166 & 0x7FFFFFF);
      }
      uint64_t v168 = *(void *)(v167 + 32 * *(unsigned int *)(a3 + 60) + 8 * v148);
      int v169 = *((_DWORD *)v28 + 7);
      uint64_t v170 = v169 & 0x7FFFFFF;
      if ((v169 & 0x7FFFFFF) == *((_DWORD *)v28 + 17))
      {
        unsigned int v183 = v170 + (v170 >> 1);
        if (v183 <= 2) {
          uint64_t v184 = 2;
        }
        else {
          uint64_t v184 = v183;
        }
        *((_DWORD *)v28 + 17) = v184;
        if ((v169 & 0x40000000) != 0)
        {
          int v306 = *(uint64_t **)v28;
          int v185 = v28 + 8;
        }
        else
        {
          int v185 = v28 + 8;
          int v306 = (uint64_t *)((char *)v303 - 32 * v170);
        }
        uint64_t v186 = operator new(40 * v184);
        *(void *)uint64_t v28 = v186;
        size_t v187 = v186;
        do
        {
          *size_t v187 = 0;
          v187[1] = 0;
          v187[2] = 0;
          v187[3] = v185;
          v187 += 4;
        }
        while (v187 != &v186[4 * v184]);
        int v188 = *((_DWORD *)v28 + 7);
        if ((v188 & 0x40000000) != 0) {
          uint64_t v189 = (uint64_t)v186;
        }
        else {
          uint64_t v189 = (uint64_t)&v185[-32 * (v188 & 0x7FFFFFF)];
        }
        sub_1CC5E4108((uint64_t)v312, v306, &v306[4 * v170], v189);
        if (v170)
        {
          memmove((void *)(v189 + 32 * v184), &v306[4 * v170], 8 * v170);
          uint64_t v190 = 4 * v170;
          do
          {
            unint64_t v191 = &v306[v190];
            if (v306[v190 - 4])
            {
              *(void *)*(v191 - 2) = *(v191 - 3);
              uint64_t v192 = *(v191 - 3);
              if (v192) {
                *(void *)(v192 + 16) = *(v191 - 2);
              }
            }
            v190 -= 4;
          }
          while (v190 * 8);
        }
        operator delete(v306);
        int v169 = *((_DWORD *)v28 + 7);
        int v40 = v310;
        uint64_t v149 = __pa;
      }
      uint64_t v171 = (v169 + 1) & 0x7FFFFFF;
      *((_DWORD *)v28 + 7) = v169 & 0xF8000000 | (v169 + 1) & 0x7FFFFFF;
      if ((v169 & 0x40000000) != 0) {
        unint64_t v172 = *(char **)v28;
      }
      else {
        unint64_t v172 = (char *)v303 - 32 * v171;
      }
      uint64_t v173 = (v171 - 1);
      unint64_t v174 = &v172[32 * v173];
      if (*(void *)v174)
      {
        **((void **)v174 + 2) = *((void *)v174 + 1);
        uint64_t v182 = *((void *)v174 + 1);
        if (v182) {
          *(void *)(v182 + 16) = *((void *)v174 + 2);
        }
      }
      *(void *)unint64_t v174 = v161;
      if (v161)
      {
        uint64_t v177 = *(void *)(v161 + 8);
        size_t v176 = (char **)(v161 + 8);
        uint64_t v175 = v177;
        uint64_t v178 = &v172[32 * v173];
        *((void *)v178 + 1) = v177;
        if (v177) {
          *(void *)(v175 + 16) = v178 + 8;
        }
        *((void *)v178 + 2) = v176;
        void *v176 = v174;
      }
      int v179 = *((_DWORD *)v28 + 7);
      uint64_t v180 = v179 & 0x7FFFFFF;
      if ((v179 & 0x40000000) != 0) {
        uint64_t v181 = *(char **)v28;
      }
      else {
        uint64_t v181 = (char *)v303 - 32 * v180;
      }
      *(void *)&v181[32 * *((unsigned int *)v28 + 17) + 8 * (v180 - 1)] = v168;
      ++v148;
      a1 = *(void *)v311;
      if (v40 == v148) {
        goto LABEL_401;
      }
    }
  }
  if (v55 == 95)
  {
    uint64_t v111 = 0;
    while (1)
    {
      int v112 = *(_DWORD *)(a3 + 20);
      if ((v112 & 0x40000000) != 0) {
        uint64_t v113 = *(void *)(a3 - 8);
      }
      else {
        uint64_t v113 = a3 - 32 * (v112 & 0x7FFFFFF);
      }
      if (*(void *)(v113 + 32 * *(unsigned int *)(a3 + 60) + 8 * v111))
      {
        __int16 v114 = *(llvm::Instruction **)(v113 + 32 * v111);
        if ((v112 & 0x40000000) != 0) {
          goto LABEL_173;
        }
      }
      else
      {
        uint64_t v116 = *(uint64_t **)(a1 + 24);
        uint64_t v117 = *(llvm::Value **)(v113 + 32 * v111);
        int v316 = "phi.fr";
        __int16 v318 = 259;
        __int16 v118 = operator new(0x60uLL);
        v118[13] = v118[13] & 0x38000000 | 1;
        int v119 = (llvm::Instruction *)(v118 + 8);
        *(void *)__int16 v118 = 0;
        *((void *)v118 + 1) = 0;
        *((void *)v118 + 2) = 0;
        *((void *)v118 + 3) = v118 + 8;
        WORD4(v313) = 257;
        uint64_t v120 = v117;
        int v40 = v310;
        llvm::FreezeInst::FreezeInst((llvm::FreezeInst *)(v118 + 8), v120, v312, 0);
        __int16 v114 = sub_1CB844E0C(v116, v119, (uint64_t)&v316);
        int v112 = *(_DWORD *)(a3 + 20);
        if ((v112 & 0x40000000) != 0)
        {
LABEL_173:
          uint64_t v115 = *(void *)(a3 - 8);
          goto LABEL_174;
        }
      }
      uint64_t v115 = a3 - 32 * (v112 & 0x7FFFFFF);
LABEL_174:
      uint64_t v121 = *(void *)(v115 + 32 * *(unsigned int *)(a3 + 60) + 8 * v111);
      int v122 = *((_DWORD *)v28 + 7);
      uint64_t v123 = v122 & 0x7FFFFFF;
      if ((v122 & 0x7FFFFFF) == *((_DWORD *)v28 + 17))
      {
        unsigned int v136 = v123 + (v123 >> 1);
        if (v136 <= 2) {
          uint64_t v137 = 2;
        }
        else {
          uint64_t v137 = v136;
        }
        *((_DWORD *)v28 + 17) = v137;
        if ((v122 & 0x40000000) != 0)
        {
          uint64_t v305 = *(uint64_t **)v28;
          uint64_t v138 = v28 + 8;
        }
        else
        {
          uint64_t v138 = v28 + 8;
          uint64_t v305 = (uint64_t *)((char *)v303 - 32 * v123);
        }
        char v139 = operator new(40 * v137);
        *(void *)uint64_t v28 = v139;
        uint64_t v140 = v139;
        do
        {
          *uint64_t v140 = 0;
          v140[1] = 0;
          v140[2] = 0;
          v140[3] = v138;
          v140 += 4;
        }
        while (v140 != &v139[4 * v137]);
        int v141 = *((_DWORD *)v28 + 7);
        if ((v141 & 0x40000000) != 0) {
          uint64_t v142 = (uint64_t)v139;
        }
        else {
          uint64_t v142 = (uint64_t)&v138[-32 * (v141 & 0x7FFFFFF)];
        }
        sub_1CC5E4108((uint64_t)v312, v305, &v305[4 * v123], v142);
        if (v123)
        {
          memmove((void *)(v142 + 32 * v137), &v305[4 * v123], 8 * v123);
          uint64_t v143 = 4 * v123;
          do
          {
            int v144 = &v305[v143];
            if (v305[v143 - 4])
            {
              *(void *)*(v144 - 2) = *(v144 - 3);
              uint64_t v145 = *(v144 - 3);
              if (v145) {
                *(void *)(v145 + 16) = *(v144 - 2);
              }
            }
            v143 -= 4;
          }
          while (v143 * 8);
        }
        operator delete(v305);
        int v122 = *((_DWORD *)v28 + 7);
        a1 = *(void *)v311;
        int v40 = v310;
      }
      uint64_t v124 = (v122 + 1) & 0x7FFFFFF;
      *((_DWORD *)v28 + 7) = v122 & 0xF8000000 | (v122 + 1) & 0x7FFFFFF;
      if ((v122 & 0x40000000) != 0) {
        uint64_t v125 = *(char **)v28;
      }
      else {
        uint64_t v125 = (char *)v303 - 32 * v124;
      }
      uint64_t v126 = (v124 - 1);
      uint64_t v127 = &v125[32 * v126];
      if (*(void *)v127)
      {
        **((void **)v127 + 2) = *((void *)v127 + 1);
        uint64_t v135 = *((void *)v127 + 1);
        if (v135) {
          *(void *)(v135 + 16) = *((void *)v127 + 2);
        }
      }
      *(void *)uint64_t v127 = v114;
      if (v114)
      {
        uint64_t v130 = *((void *)v114 + 1);
        uint64_t v129 = (char **)((char *)v114 + 8);
        uint64_t v128 = v130;
        uint64_t v131 = &v125[32 * v126];
        *((void *)v131 + 1) = v130;
        if (v130) {
          *(void *)(v128 + 16) = v131 + 8;
        }
        *((void *)v131 + 2) = v129;
        *uint64_t v129 = v127;
      }
      int v132 = *((_DWORD *)v28 + 7);
      uint64_t v133 = v132 & 0x7FFFFFF;
      if ((v132 & 0x40000000) != 0) {
        int v134 = *(char **)v28;
      }
      else {
        int v134 = (char *)v303 - 32 * v133;
      }
      *(void *)&v134[32 * *((unsigned int *)v28 + 17) + 8 * (v133 - 1)] = v121;
      if (v40 == ++v111) {
        goto LABEL_401;
      }
    }
  }
  uint64_t v234 = 0;
  std::string::size_type v235 = *(llvm::Constant ****)this;
  __pc = *(llvm::Constant ****)this;
  do
  {
    int v236 = *(_DWORD *)(a3 + 20);
    if ((v236 & 0x40000000) != 0) {
      uint64_t v237 = *(void *)(a3 - 8);
    }
    else {
      uint64_t v237 = a3 - 32 * (v236 & 0x7FFFFFF);
    }
    uint64_t v238 = *(unsigned __int8 **)(v237 + 32 * v234);
    if (v238) {
      BOOL v239 = v238[16] > 0x14u;
    }
    else {
      BOOL v239 = 1;
    }
    if (v239)
    {
      if ((v236 & 0x40000000) != 0) {
        uint64_t v240 = *(void *)(a3 - 8);
      }
      else {
        uint64_t v240 = a3 - 32 * (v236 & 0x7FFFFFF);
      }
      uint64_t v242 = *(uint64_t **)(a1 + 24);
      Cast = *(llvm::Value **)(v240 + 32 * v234);
      int v243 = *((unsigned __int8 *)v309 + 16);
      uint64_t v244 = *(void *)v309;
      int v316 = "phi.cast";
      __int16 v318 = 259;
      if (*(void *)Cast != v244)
      {
        uint64_t v245 = (v243 - 28);
        if (*((unsigned __int8 *)Cast + 16) <= 0x14u)
        {
          Cast = (llvm::Value *)(*(uint64_t (**)(uint64_t, uint64_t, llvm::Value *, uint64_t))(*(void *)v242[9] + 224))(v242[9], v245, Cast, v244);
          if (Cast) {
            BOOL v247 = *((unsigned __int8 *)Cast + 16) >= 0x1Cu;
          }
          else {
            BOOL v247 = 0;
          }
          if (v247)
          {
            (*(void (**)(uint64_t, llvm::Value *, const char **, uint64_t, uint64_t))(*(void *)v242[10] + 16))(v242[10], Cast, &v316, v242[6], v242[7]);
            uint64_t v277 = *((unsigned int *)v242 + 2);
            if (v277)
            {
              uint64_t v278 = *v242;
              uint64_t v279 = v278 + 16 * v277;
              do
              {
                llvm::Instruction::setMetadata(Cast, *(_DWORD *)v278, *(llvm::MDNode **)(v278 + 8));
                v278 += 16;
              }
              while (v278 != v279);
            }
            a1 = *(void *)v311;
            int v40 = v310;
            std::string::size_type v235 = __pc;
          }
        }
        else
        {
          WORD4(v313) = 257;
          Cast = llvm::CastInst::Create(v245, (uint64_t)Cast, v244, v312, 0);
          (*(void (**)(uint64_t, llvm::Value *, const char **, uint64_t, uint64_t))(*(void *)v242[10] + 16))(v242[10], Cast, &v316, v242[6], v242[7]);
          uint64_t v246 = *((unsigned int *)v242 + 2);
          if (v246)
          {
            uint64_t v275 = *v242;
            uint64_t v276 = v275 + 16 * v246;
            do
            {
              llvm::Instruction::setMetadata(Cast, *(_DWORD *)v275, *(llvm::MDNode **)(v275 + 8));
              v275 += 16;
            }
            while (v275 != v276);
          }
          int v40 = v310;
        }
      }
    }
    else
    {
      Cast = llvm::ConstantExpr::getCast((llvm::ConstantExpr *)(*((unsigned __int8 *)v309 + 16) - 28), (llvm::ConstantExpr *)v238, v235, 0);
    }
    int v248 = *(_DWORD *)(a3 + 20);
    if ((v248 & 0x40000000) != 0) {
      uint64_t v249 = *(void *)(a3 - 8);
    }
    else {
      uint64_t v249 = a3 - 32 * (v248 & 0x7FFFFFF);
    }
    uint64_t v250 = *(void *)(v249 + 32 * *(unsigned int *)(a3 + 60) + 8 * v234);
    int v251 = *((_DWORD *)v28 + 7);
    uint64_t v252 = v251 & 0x7FFFFFF;
    if ((v251 & 0x7FFFFFF) == *((_DWORD *)v28 + 17))
    {
      unsigned int v265 = v252 + (v252 >> 1);
      if (v265 <= 2) {
        uint64_t v266 = 2;
      }
      else {
        uint64_t v266 = v265;
      }
      *((_DWORD *)v28 + 17) = v266;
      if ((v251 & 0x40000000) != 0)
      {
        v308 = *(uint64_t **)v28;
        BOOL v267 = v28 + 8;
      }
      else
      {
        BOOL v267 = v28 + 8;
        v308 = (uint64_t *)((char *)v303 - 32 * v252);
      }
      int v268 = operator new(40 * v266);
      *(void *)uint64_t v28 = v268;
      unsigned int v269 = v268;
      do
      {
        void *v269 = 0;
        v269[1] = 0;
        v269[2] = 0;
        v269[3] = v267;
        v269 += 4;
      }
      while (v269 != &v268[4 * v266]);
      int v270 = *((_DWORD *)v28 + 7);
      if ((v270 & 0x40000000) != 0) {
        uint64_t v271 = (uint64_t)v268;
      }
      else {
        uint64_t v271 = (uint64_t)&v267[-32 * (v270 & 0x7FFFFFF)];
      }
      sub_1CC5E4108((uint64_t)v312, v308, &v308[4 * v252], v271);
      if (v252)
      {
        memmove((void *)(v271 + 32 * v266), &v308[4 * v252], 8 * v252);
        uint64_t v272 = 4 * v252;
        do
        {
          int v273 = &v308[v272];
          if (v308[v272 - 4])
          {
            *(void *)*(v273 - 2) = *(v273 - 3);
            uint64_t v274 = *(v273 - 3);
            if (v274) {
              *(void *)(v274 + 16) = *(v273 - 2);
            }
          }
          v272 -= 4;
        }
        while (v272 * 8);
      }
      operator delete(v308);
      int v251 = *((_DWORD *)v28 + 7);
      a1 = *(void *)v311;
      int v40 = v310;
      std::string::size_type v235 = __pc;
    }
    uint64_t v253 = (v251 + 1) & 0x7FFFFFF;
    *((_DWORD *)v28 + 7) = v251 & 0xF8000000 | (v251 + 1) & 0x7FFFFFF;
    if ((v251 & 0x40000000) != 0) {
      uint64_t v254 = *(char **)v28;
    }
    else {
      uint64_t v254 = (char *)v303 - 32 * v253;
    }
    uint64_t v255 = (v253 - 1);
    uint64_t v256 = &v254[32 * v255];
    if (*(void *)v256)
    {
      **((void **)v256 + 2) = *((void *)v256 + 1);
      uint64_t v264 = *((void *)v256 + 1);
      if (v264) {
        *(void *)(v264 + 16) = *((void *)v256 + 2);
      }
    }
    *(void *)uint64_t v256 = Cast;
    if (Cast)
    {
      uint64_t v259 = *((void *)Cast + 1);
      int v258 = (char **)((char *)Cast + 8);
      uint64_t v257 = v259;
      v260 = &v254[32 * v255];
      *((void *)v260 + 1) = v259;
      if (v259) {
        *(void *)(v257 + 16) = v260 + 8;
      }
      *((void *)v260 + 2) = v258;
      *int v258 = v256;
    }
    int v261 = *((_DWORD *)v28 + 7);
    uint64_t v262 = v261 & 0x7FFFFFF;
    if ((v261 & 0x40000000) != 0) {
      v263 = *(char **)v28;
    }
    else {
      v263 = (char *)v303 - 32 * v262;
    }
    *(void *)&v263[32 * *((unsigned int *)v28 + 17) + 8 * (v262 - 1)] = v250;
    ++v234;
  }
  while (v40 != v234);
LABEL_401:
  uint64_t v280 = *(void *)(a3 + 8);
  while (v280)
  {
    uint64_t v281 = *(llvm::ValueAsMetadata **)(v280 + 24);
    uint64_t v280 = *(void *)(v280 + 8);
    if (v281 != v309)
    {
      sub_1CC9D3C84(a1, v281, v303);
      sub_1CC9D6844(a1, (uint64_t)v281);
    }
  }
  return sub_1CC9D3C84(a1, v309, v303);
}

void sub_1CC9D6844(uint64_t a1, uint64_t a2)
{
  v38[1] = *MEMORY[0x1E4F143B8];
  uint64_t v36 = v38;
  uint64_t v37 = 0x100000000;
  llvm::findDbgUsers((uint64_t)&v36, (uint64_t ***)a2);
  llvm::salvageDebugInfoForDbgValues((llvm::CastInst *)a2, (uint64_t *)v36, v37);
  if (v36 != v38) {
    free(v36);
  }
  int v4 = *(_DWORD *)(a2 + 20);
  if ((v4 & 0x40000000) != 0)
  {
    int v6 = *(void ***)(a2 - 8);
    uint64_t v5 = v4 & 0x7FFFFFF;
    if (!v5) {
      goto LABEL_36;
    }
  }
  else
  {
    uint64_t v5 = v4 & 0x7FFFFFF;
    int v6 = (void **)(a2 - 32 * v5);
    if (!v5)
    {
LABEL_36:
      unsigned int v24 = *(int32x2_t **)(a1 + 32);
      uint64_t v36 = (void *)a2;
      int32x2_t v25 = v24[258];
      uint64_t v26 = v24[260].u32[0];
      if (v26)
      {
        LODWORD(v27) = (v26 - 1) & ((a2 >> 4) ^ (a2 >> 9));
        uint64_t v28 = *(void *)&v25 + 16 * v27;
        uint64_t v29 = *(void *)v28;
        if (*(void *)v28 != a2)
        {
          int v30 = 1;
          do
          {
            if (v29 == -4096) {
              goto LABEL_42;
            }
            int v31 = v27 + v30++;
            uint64_t v27 = v31 & (v26 - 1);
            uint64_t v29 = *(void *)(*(void *)&v25 + 16 * v27);
          }
          while (v29 != a2);
          uint64_t v28 = *(void *)&v25 + 16 * v27;
        }
      }
      else
      {
LABEL_42:
        uint64_t v28 = *(void *)&v25 + 16 * v26;
      }
      if (v28 != *(void *)&v25 + 16 * v26)
      {
        *(void *)(*(void *)v24 + 8 * *(unsigned int *)(v28 + 8)) = 0;
        *(void *)uint64_t v28 = -8192;
        v24[259] = vadd_s32(v24[259], (int32x2_t)0x1FFFFFFFFLL);
      }
      if (sub_1CBFD6090((uint64_t)&v24[261], &v36))
      {
        uint64_t v32 = (void **)v24[278];
        uint64_t v33 = v24[279].u32[0];
        uint64_t v34 = &v32[v33];
        if (v33)
        {
          uint64_t v35 = 8 * v33;
          do
          {
            if (*v32 == v36) {
              goto LABEL_52;
            }
            ++v32;
            v35 -= 8;
          }
          while (v35);
          uint64_t v32 = v34;
        }
LABEL_52:
        if (v34 != v32 + 1)
        {
          memmove(v32, v32 + 1, (char *)v34 - (char *)(v32 + 1));
          LODWORD(v33) = v24[279].i32[0];
        }
        v24[279].i32[0] = v33 - 1;
      }
      llvm::SymbolTableListTraits<llvm::Instruction>::removeNodeFromList();
    }
  }
  uint64_t v7 = &v6[4 * v5];
  while (1)
  {
    uint64_t v8 = *v6;
    if (*v6) {
      BOOL v9 = *((unsigned __int8 *)*v6 + 16) >= 0x1Cu;
    }
    else {
      BOOL v9 = 0;
    }
    if (v9)
    {
      uint64_t v10 = *(void *)(a1 + 32);
      uint64_t v36 = *v6;
      if (*(unsigned char *)(v10 + 2088))
      {
        uint64_t v12 = v10 + 2096;
        int v11 = 16;
      }
      else
      {
        int v11 = *(_DWORD *)(v10 + 2104);
        if (!v11)
        {
          uint64_t v21 = 0;
LABEL_29:
          unsigned int v22 = sub_1CBFD5BBC(v10 + 2088, (uint64_t)&v36, &v36, v21);
          void *v22 = v36;
          unint64_t v23 = *(unsigned int *)(v10 + 2232);
          if (v23 >= *(unsigned int *)(v10 + 2236)) {
            llvm::SmallVectorBase<unsigned int>::grow_pod();
          }
          *(void *)(*(void *)(v10 + 2224) + 8 * v23) = v36;
          ++*(_DWORD *)(v10 + 2232);
          goto LABEL_31;
        }
        uint64_t v12 = *(void *)(v10 + 2096);
      }
      int v13 = v11 - 1;
      unsigned int v14 = v13 & ((v8 >> 4) ^ (v8 >> 9));
      uint64_t v15 = (void *)(v12 + 8 * v14);
      uint64_t v16 = *v15;
      if (v8 != (void *)*v15)
      {
        int v17 = 0;
        int v18 = 1;
        while (v16 != -4096)
        {
          if (v17) {
            BOOL v19 = 0;
          }
          else {
            BOOL v19 = v16 == -8192;
          }
          if (v19) {
            int v17 = v15;
          }
          unsigned int v20 = v14 + v18++;
          unsigned int v14 = v20 & v13;
          uint64_t v15 = (void *)(v12 + 8 * v14);
          uint64_t v16 = *v15;
          if (v8 == (void *)*v15) {
            goto LABEL_31;
          }
        }
        if (v17) {
          uint64_t v21 = v17;
        }
        else {
          uint64_t v21 = v15;
        }
        goto LABEL_29;
      }
    }
LABEL_31:
    v6 += 4;
    if (v6 == v7) {
      goto LABEL_36;
    }
  }
}

uint64_t sub_1CC9D6B70(uint64_t a1, uint64_t a2)
{
  uint64_t result = 0;
  if (*(unsigned char *)(*(void *)(a2 - 64) + 16) == 83) {
    uint64_t v3 = *(void *)(a2 - 64);
  }
  else {
    uint64_t v3 = 0;
  }
  if (*(unsigned char *)(*(void *)(a2 - 32) + 16) == 83) {
    uint64_t v4 = *(void *)(a2 - 32);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v3) {
    BOOL v5 = v4 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (v5) {
    return result;
  }
  uint64_t v6 = *(void *)(v3 + 8);
  if (!v6) {
    return 0;
  }
  if (*(void *)(v6 + 8)) {
    return 0;
  }
  uint64_t v7 = *(void *)(v4 + 8);
  if (!v7) {
    return 0;
  }
  if (*(void *)(v7 + 8)) {
    return 0;
  }
  int v8 = *(_DWORD *)(v3 + 20);
  if ((v8 & 0x7FFFFFF) != 2) {
    return 0;
  }
  if ((*(_DWORD *)(v4 + 20) & 0x7FFFFFF) != 2) {
    return 0;
  }
  uint64_t v9 = *(void *)(a2 + 40);
  if (v9 != *(void *)(v3 + 40) || v9 != *(void *)(v4 + 40)) {
    return 0;
  }
  uint64_t v10 = (v8 & 0x40000000) != 0 ? *(uint64_t **)(v3 - 8) : (uint64_t *)(v3 - 64);
  uint64_t v11 = *v10;
  unsigned int v12 = *(unsigned __int8 *)(*v10 + 16);
  BOOL v13 = v12 == 5 || v11 == 0;
  if (v13 || v12 >= 0x15)
  {
    if ((v8 & 0x40000000) != 0) {
      uint64_t v15 = *(void *)(v3 - 8);
    }
    else {
      uint64_t v15 = v3 - 64;
    }
    uint64_t v17 = *(void *)(v15 + 32);
    unsigned int v18 = *(unsigned __int8 *)(v17 + 16);
    if (v18 == 5 || v17 == 0 || v18 > 0x14) {
      return 0;
    }
    uint64_t v21 = (v8 & 0x40000000) != 0 ? *(void *)(v3 - 8) : v3 - 64;
    uint64_t v24 = *(unsigned int *)(v3 + 60);
    unsigned int v22 = (uint64_t *)(v21 + 32 * v24 + 8);
    unint64_t v23 = (uint64_t *)(v21 + 32 * v24);
  }
  else
  {
    uint64_t v16 = (v8 & 0x40000000) != 0 ? *(void *)(v3 - 8) : v3 - 64;
    unsigned int v22 = (uint64_t *)(v16 + 32 * *(unsigned int *)(v3 + 60));
    unint64_t v23 = v22 + 1;
  }
  uint64_t v25 = *v23;
  uint64_t v26 = sub_1CBF73380(v4, *v22);
  unsigned int v27 = *(unsigned __int8 *)(v26 + 16);
  BOOL v28 = v27 == 5 || v26 == 0;
  if (v28 || v27 > 0x14) {
    return 0;
  }
  uint64_t v30 = *(void *)(v25 + 40);
  if (v30 == v25 + 40) {
    return 0;
  }
  uint64_t result = 0;
  if (v30) {
    uint64_t v31 = v30 - 24;
  }
  else {
    uint64_t v31 = 0;
  }
  unsigned int v32 = *(unsigned __int8 *)(v31 + 16) - 40;
  if (v32 >= 0xFFFFFFF5) {
    uint64_t v33 = v31;
  }
  else {
    uint64_t v33 = 0;
  }
  if (v30)
  {
    if (*(unsigned char *)(v33 + 16) == 30 && v32 >= 0xFFFFFFF5)
    {
      if ((*(_DWORD *)(v33 + 20) & 0x7FFFFFF) != 3) {
        llvm::DominatorTreeBase<llvm::BasicBlock,false>::isReachableFromEntry();
      }
      return 0;
    }
  }
  return result;
}

void *sub_1CC9D74E0(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, BOOL a5)
{
  if (*(unsigned __int8 *)(*((void *)a2 - 4) + 16) > 0x14u) {
    return 0;
  }
  uint64_t v5 = *((void *)a2 - 8);
  int v6 = *(unsigned __int8 *)(v5 + 16);
  if (v5 && v6 == 85)
  {
    uint64_t result = sub_1CC9D447C(a1, a2, (void *)v5, 0, a5);
    if (result) {
      return result;
    }
    return 0;
  }
  if (!v5) {
    return 0;
  }
  if (v6 != 83) {
    return 0;
  }
  uint64_t result = sub_1CC9D50C0(a1, (llvm::Instruction *)a2, v5);
  if (!result) {
    return 0;
  }
  return result;
}

llvm::Constant *sub_1CC9D7540(uint64_t a1, uint64_t a2, unsigned int *a3, unsigned char *a4)
{
  if (a2)
  {
    unsigned int v8 = *(unsigned __int8 *)(a2 + 16);
    if (v8 <= 0x14)
    {
      if (v8 == 16)
      {
        uint64_t v9 = *(unsigned int *)(a2 + 32);
        if (v9 >= 0x41)
        {
          int v110 = 0;
          int64_t v111 = (unint64_t)(v9 + 63) >> 6;
          do
          {
            BOOL v14 = v111-- < 1;
            if (v14) {
              break;
            }
            unint64_t v112 = *(void *)(*(void *)(a2 + 24) + 8 * v111);
            v110 += __clz(v112);
          }
          while (!v112);
          int v113 = v9 | 0xFFFFFFC0;
          if ((v9 & 0x3F) == 0) {
            int v113 = 0;
          }
          if (v110 + v113 == v9) {
            goto LABEL_18;
          }
        }
        else if (!*(void *)(a2 + 24))
        {
          goto LABEL_18;
        }
      }
      else if (v8 == 17)
      {
        if (sub_1CB844168(a2, 0.0)) {
          goto LABEL_18;
        }
      }
      else if (v8 - 18 < 3 || v8 == 13)
      {
        goto LABEL_18;
      }
      if (sub_1CC03F414((uint64_t)&__src, (llvm::Constant *)a2)) {
        goto LABEL_18;
      }
    }
  }
  uint64_t v10 = a3[2];
  if (v10 < 0x41)
  {
    if (!*(void *)a3) {
      return 0;
    }
    if (*(void *)a3 != 1) {
      goto LABEL_24;
    }
LABEL_18:
    Splat = (llvm::Constant *)a2;
    goto LABEL_19;
  }
  int v11 = 0;
  int64_t v12 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v13 = v12;
  do
  {
    BOOL v14 = v13-- < 1;
    if (v14) {
      break;
    }
    unint64_t v15 = *(void *)(*(void *)a3 + 8 * v13);
    v11 += __clz(v15);
  }
  while (!v15);
  int v16 = v10 | 0xFFFFFFC0;
  if ((v10 & 0x3F) == 0) {
    int v16 = 0;
  }
  if ((v10 - v11 - v16) < 0x41 && **(void **)a3 == 1) {
    goto LABEL_18;
  }
  int v18 = 0;
  do
  {
    BOOL v14 = v12-- < 1;
    if (v14) {
      break;
    }
    unint64_t v19 = *(void *)(*(void *)a3 + 8 * v12);
    v18 += __clz(v19);
  }
  while (!v19);
  if (v18 + v16 == v10) {
    return 0;
  }
LABEL_24:
  uint64_t v118 = a1;
  int v21 = sub_1CBAB77A4(a3);
  unsigned int v22 = *(unsigned __int8 *)(a2 + 16);
  if (a2 && v22 == 16)
  {
    uint64_t v23 = 0;
    unsigned int v24 = 0;
    uint64_t v25 = (void *)a2;
LABEL_27:
    unsigned int v26 = a3[2];
    unsigned int v122 = v26;
    if (v26 > 0x40) {
      operator new[]();
    }
    __src = *(void **)a3;
    unsigned int v120 = v26;
    __s1 = __src;
    llvm::APInt::sdivrem((llvm::APInt *)(v25 + 3), (const llvm::APInt *)a3, (const llvm::APInt *)&__src, (llvm::APInt *)&__s1, v20);
    if (v120 > 0x40)
    {
      int v55 = 0;
      int64_t v56 = ((unint64_t)v120 + 63) >> 6;
      uint64_t v57 = __s1;
      do
      {
        BOOL v14 = v56-- < 1;
        if (v14) {
          break;
        }
        unint64_t v58 = *((void *)__s1 + v56);
        v55 += __clz(v58);
      }
      while (!v58);
      unsigned int v59 = v120 | 0xFFFFFFC0;
      if ((v120 & 0x3F) == 0) {
        unsigned int v59 = 0;
      }
      if (v55 + v59 != v120)
      {
        int v54 = 1;
LABEL_124:
        if (v57) {
          MEMORY[0x1D25D9CB0](v57, 0x1000C8000313F17);
        }
        goto LABEL_126;
      }
    }
    else if (__s1)
    {
      int v54 = 1;
LABEL_126:
      Splat = (llvm::Constant *)v25;
      goto LABEL_127;
    }
    uint64_t v60 = (llvm::Type *)*v25;
    Splat = (llvm::Constant *)llvm::ConstantInt::get(*(llvm::ConstantInt **)v60, (llvm::LLVMContext *)&__src, v53);
    if ((*((_DWORD *)v60 + 2) & 0xFE) == 0x12) {
      Splat = llvm::ConstantVector::getSplat((llvm::Type *)(*((unsigned int *)v60 + 8) | ((unint64_t)(*((_DWORD *)v60 + 2) == 19) << 32)), (uint64_t)Splat);
    }
    *a4 = 1;
    int v54 = 2;
    if (v120 < 0x41)
    {
LABEL_127:
      if (v122 >= 0x41 && __src) {
        MEMORY[0x1D25D9CB0](__src, 0x1000C8000313F17);
      }
      if (v54 != 2) {
        return 0;
      }
      goto LABEL_131;
    }
    uint64_t v57 = __s1;
    uint64_t v25 = Splat;
    goto LABEL_124;
  }
  int v27 = 0;
  unsigned int v24 = 0;
  uint64_t v23 = 0;
  uint64_t v25 = (void *)a2;
  while (1)
  {
    if (v22 >= 0x1C && v22 - 59 >= 0xFFFFFFEE)
    {
      if (v22 == 45)
      {
        BOOL v28 = (*((unsigned char *)v25 + 17) & 4) == 0;
        *a4 = (*((unsigned char *)v25 + 17) & 4) >> 2;
        if (v27 & v28) {
          return 0;
        }
        uint64_t v29 = *(v25 - 4);
        if (v29 && *(unsigned char *)(v29 + 16) == 16)
        {
          Splat = (llvm::Constant *)*(v25 - 8);
          uint64_t v30 = *(unsigned int *)(v29 + 32);
          if (v30 > 0x40)
          {
            if (!memcmp(*(const void **)(v29 + 24), *(const void **)a3, ((unint64_t)(v30 + 63) >> 3) & 0x3FFFFFF8))goto LABEL_131; {
          }
            }
          else if (*(void *)(v29 + 24) == *(void *)a3)
          {
            goto LABEL_131;
          }
          uint64_t v48 = v25[1];
          if (!v48 || *(void *)(v48 + 8)) {
            return 0;
          }
          unsigned int v24 = 1;
        }
        else
        {
          uint64_t v47 = v25[1];
          if (!v47 || *(void *)(v47 + 8)) {
            return 0;
          }
          unsigned int v24 = 0;
        }
        goto LABEL_89;
      }
      if (v21 >= 1 && v22 == 53)
      {
        uint64_t v31 = *(v25 - 4);
        if (*(unsigned char *)(v31 + 16) == 16) {
          break;
        }
      }
    }
    uint64_t v32 = v25[1];
    if (!v32 || *(void *)(v32 + 8)) {
      return 0;
    }
    Splat = 0;
    if (v22 < 0x1C || v22 - 79 < 0xFFFFFFF3) {
      return Splat;
    }
    if (v22 != 68)
    {
      if ((v22 != 66) | v27 & 1) {
        return 0;
      }
      unsigned int PrimitiveSizeInBits = llvm::Type::getPrimitiveSizeInBits(*(llvm::Type **)*(v25 - 4));
      if (v40 == 1) {
      llvm::APInt::sext((uint64_t)a3, PrimitiveSizeInBits, (uint64_t)&__src);
      }
      if (a3[2] >= 0x41 && *(void *)a3) {
        MEMORY[0x1D25D9CB0](*(void *)a3, 0x1000C8000313F17);
      }
      *(void *)a3 = __src;
      a3[2] = v122;
      int v43 = llvm::Type::getPrimitiveSizeInBits((llvm::Type *)*v25);
      if (v42 == 1) {
      unsigned int v24 = 0;
      }
      int v27 = 0;
      if (v21 + 1 == v43) {
        int v21 = -1;
      }
LABEL_89:
      uint64_t v23 = (uint64_t)v25;
      goto LABEL_90;
    }
    unsigned int v34 = llvm::Type::getPrimitiveSizeInBits(*(llvm::Type **)*(v25 - 4));
    if (v33 == 1) {
    unsigned int v35 = a3[2];
    }
    if (v34 > 0x40)
    {
      if (v35 != v34) {
        operator new[]();
      }
      sub_1CD0463BC((uint64_t)&__src, (uint64_t)a3);
    }
    else
    {
      uint64_t v36 = a3;
      if (v35 >= 0x41) {
        uint64_t v36 = *(unsigned int **)a3;
      }
      uint64_t v37 = *(void *)v36;
      unsigned int v122 = v34;
      unint64_t v38 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v34;
      if (!v34) {
        unint64_t v38 = 0;
      }
      __src = (void *)(v38 & v37);
    }
    llvm::APInt::sext((uint64_t)&__src, a3[2], (uint64_t)&__s1);
    if (v120 > 0x40)
    {
      int v44 = __s1;
      int v45 = memcmp(__s1, *(const void **)a3, (((unint64_t)v120 + 63) >> 3) & 0x3FFFFFF8);
      if (v44) {
        MEMORY[0x1D25D9CB0](v44, 0x1000C8000313F17);
      }
      if (!v45)
      {
LABEL_57:
        if (a3[2] > 0x40 || (unsigned int v39 = v122, v122 > 0x40))
        {
          if (&__src != (void **)a3)
          {
            llvm::APInt::reallocate((uint64_t)a3, v122);
            uint64_t v51 = a3[2];
            if (v51 <= 0x40)
            {
              unsigned int v24 = 0;
              *(void *)a3 = __src;
              goto LABEL_79;
            }
            memcpy(*(void **)a3, __src, ((unint64_t)(v51 + 63) >> 3) & 0x3FFFFFF8);
          }
          unsigned int v24 = 0;
        }
        else
        {
          unsigned int v24 = 0;
          *(void *)a3 = __src;
          a3[2] = v39;
        }
LABEL_79:
        int v46 = 1;
        uint64_t v23 = (uint64_t)v25;
        int v27 = 1;
        goto LABEL_80;
      }
    }
    else if (__s1 == *(void **)a3)
    {
      goto LABEL_57;
    }
    int v46 = 0;
LABEL_80:
    if (v122 >= 0x41 && __src) {
      MEMORY[0x1D25D9CB0](__src, 0x1000C8000313F17);
    }
    if (!v46) {
      return 0;
    }
LABEL_90:
    int v49 = *(_DWORD *)(v23 + 20);
    if ((v49 & 0x40000000) != 0) {
      uint64_t v50 = *(void *)(v23 - 8);
    }
    else {
      uint64_t v50 = v23 - 32 * (v49 & 0x7FFFFFF);
    }
    uint64_t v25 = *(void **)(v50 + 32 * v24);
    unsigned int v22 = *((unsigned __int8 *)v25 + 16);
    if (v25 && v22 == 16) {
      goto LABEL_27;
    }
  }
  BOOL v98 = (*((unsigned char *)v25 + 17) & 4) == 0;
  *a4 = (*((unsigned char *)v25 + 17) & 4) >> 2;
  if (v27 & v98) {
    return 0;
  }
  Splat = (llvm::Constant *)*(v25 - 8);
  unint64_t v100 = a3[2];
  uint64_t v101 = *(unsigned int *)(v31 + 32);
  if (v101 >= 0x41)
  {
    int v103 = 0;
    int64_t v104 = (unint64_t)(v101 + 63) >> 6;
    do
    {
      BOOL v14 = v104-- < 1;
      if (v14) {
        break;
      }
      unint64_t v105 = *(void *)(*(void *)(v31 + 24) + 8 * v104);
      v103 += __clz(v105);
    }
    while (!v105);
    int v106 = v101 | 0xFFFFFFC0;
    if ((v101 & 0x3F) == 0) {
      int v106 = 0;
    }
    if ((v101 - v103 - v106) <= 0x40)
    {
      unint64_t v102 = **(void **)(v31 + 24);
      goto LABEL_202;
    }
  }
  else
  {
    unint64_t v102 = *(void *)(v31 + 24);
LABEL_202:
    if (v102 <= v100) {
      LODWORD(v100) = v102;
    }
  }
  BOOL v107 = __OFSUB__(v100, v21);
  int v108 = v100 - v21;
  if (v108)
  {
    if (v108 < 0 != v107) {
      return 0;
    }
    uint64_t v109 = v25[1];
    if (!v109 || *(void *)(v109 + 8)) {
      return 0;
    }
    Splat = (llvm::Constant *)llvm::ConstantInt::get((llvm::ConstantInt *)*v25, v108, 0);
    unsigned int v24 = 1;
    uint64_t v23 = (uint64_t)v25;
  }
LABEL_131:
  if (!Splat || (unsigned int v61 = *((unsigned __int8 *)Splat + 16), v61 > 0x14))
  {
    uint64_t v62 = v118;
LABEL_139:
    if (!v23) {
      return Splat;
    }
    sub_1CC9D28DC(v62, v23, v24, (uint64_t)Splat);
    uint64_t v64 = *(void *)(v62 + 32);
    unsigned int v65 = *(_DWORD *)(v64 + 8);
    __src = (void *)v23;
    unsigned int v122 = v65;
    int v66 = *(_DWORD *)(v64 + 2080);
    if (v66)
    {
      uint64_t v67 = *(void *)(v64 + 2064);
      int v68 = v66 - 1;
      unsigned int v69 = v68 & ((v23 >> 4) ^ (v23 >> 9));
      uint64_t v70 = (void *)(v67 + 16 * v69);
      uint64_t v71 = *v70;
      if (*v70 == v23) {
        goto LABEL_156;
      }
      int v72 = 0;
      int v73 = 1;
      while (v71 != -4096)
      {
        if (v72) {
          BOOL v74 = 0;
        }
        else {
          BOOL v74 = v71 == -8192;
        }
        if (v74) {
          int v72 = v70;
        }
        unsigned int v75 = v69 + v73++;
        unsigned int v69 = v75 & v68;
        uint64_t v70 = (void *)(v67 + 16 * v69);
        uint64_t v71 = *v70;
        if (*v70 == v23) {
          goto LABEL_156;
        }
      }
      if (v72) {
        uint64_t v76 = v72;
      }
      else {
        uint64_t v76 = v70;
      }
    }
    else
    {
      uint64_t v76 = 0;
    }
    BOOL v77 = sub_1CBF569E0((_DWORD *)(v64 + 2064), (uint64_t)&__src, (uint64_t *)&__src, v76);
    *BOOL v77 = __src;
    *((_DWORD *)v77 + 2) = v122;
    unsigned int v78 = *(_DWORD *)(v64 + 8);
    if (v78 >= *(_DWORD *)(v64 + 12)) {
      llvm::SmallVectorBase<unsigned int>::grow_pod();
    }
    *(void *)(*(void *)v64 + 8 * v78) = v23;
    ++*(_DWORD *)(v64 + 8);
    while (1)
    {
LABEL_156:
      int v79 = *(unsigned __int8 *)(v23 + 16);
      if (v23 && (v79 - 59) >= 0xFFFFFFEE)
      {
        unsigned int v80 = *(unsigned __int8 *)(v23 + 17);
        int v81 = (v80 >> 2) & 1;
        int v82 = *a4 & (v80 >> 2);
        *a4 = v82;
        if (v82 == v81) {
          goto LABEL_177;
        }
        *(unsigned char *)(v23 + 17) = *(unsigned char *)(v23 + 17) & 0xFB | (4 * (v82 != 0));
        uint64_t v83 = *(void *)(v62 + 32);
        unsigned int v84 = *(_DWORD *)(v83 + 8);
        __src = (void *)v23;
        unsigned int v122 = v84;
        int v85 = *(_DWORD *)(v83 + 2080);
        if (v85)
        {
          uint64_t v86 = *(void *)(v83 + 2064);
          int v87 = v85 - 1;
          unsigned int v88 = v87 & ((v23 >> 4) ^ (v23 >> 9));
          int v89 = (void *)(v86 + 16 * v88);
          uint64_t v90 = *v89;
          if (*v89 == v23) {
            goto LABEL_177;
          }
          unint64_t v91 = 0;
          int v92 = 1;
          while (v90 != -4096)
          {
            if (v91) {
              BOOL v93 = 0;
            }
            else {
              BOOL v93 = v90 == -8192;
            }
            if (v93) {
              unint64_t v91 = v89;
            }
            unsigned int v94 = v88 + v92++;
            unsigned int v88 = v94 & v87;
            int v89 = (void *)(v86 + 16 * v88);
            uint64_t v90 = *v89;
            if (*v89 == v23) {
              goto LABEL_177;
            }
          }
          if (v91) {
            uint64_t v95 = v91;
          }
          else {
            uint64_t v95 = v89;
          }
        }
        else
        {
          uint64_t v95 = 0;
        }
        int v96 = sub_1CBF569E0((_DWORD *)(v83 + 2064), (uint64_t)&__src, (uint64_t *)&__src, v95);
        *int v96 = __src;
        *((_DWORD *)v96 + 2) = v122;
        unint64_t v97 = *(unsigned int *)(v83 + 8);
        if (v97 >= *(unsigned int *)(v83 + 12)) {
          llvm::SmallVectorBase<unsigned int>::grow_pod();
        }
        *(void *)(*(void *)v83 + 8 * v97) = v23;
        ++*(_DWORD *)(v83 + 8);
      }
      else if (v79 == 66)
      {
        *a4 = 0;
      }
LABEL_177:
      if (v23 == a2) {
        return (llvm::Constant *)a2;
      }
      uint64_t v23 = *(void *)(*(void *)(v23 + 8) + 24);
    }
  }
  uint64_t v62 = v118;
  if (v61 != 16)
  {
    if (v61 == 17)
    {
      if (sub_1CB844168((uint64_t)Splat, 0.0)) {
        goto LABEL_19;
      }
    }
    else if (v61 - 18 < 3 || v61 == 13)
    {
      goto LABEL_19;
    }
LABEL_136:
    if (sub_1CC03F414((uint64_t)&__src, Splat)) {
      goto LABEL_19;
    }
    goto LABEL_139;
  }
  uint64_t v63 = *((unsigned int *)Splat + 8);
  if (v63 >= 0x41)
  {
    int v114 = 0;
    int64_t v115 = (unint64_t)(v63 + 63) >> 6;
    do
    {
      BOOL v14 = v115-- < 1;
      if (v14) {
        break;
      }
      unint64_t v116 = *(void *)(*((void *)Splat + 3) + 8 * v115);
      v114 += __clz(v116);
    }
    while (!v116);
    int v117 = v63 | 0xFFFFFFC0;
    if ((v63 & 0x3F) == 0) {
      int v117 = 0;
    }
    uint64_t v62 = v118;
    if (v114 + v117 == v63) {
      goto LABEL_19;
    }
    goto LABEL_136;
  }
  if (*((void *)Splat + 3)) {
    goto LABEL_136;
  }
LABEL_19:
  *a4 = 1;
  return Splat;
}

unint64_t sub_1CC9D812C(uint64_t a1, unsigned __int8 *a2)
{
  v141[10] = *MEMORY[0x1E4F143B8];
  if ((*(_DWORD *)(*(void *)a2 + 8) & 0xFE) != 0x12) {
    return 0;
  }
  int v4 = a2[16];
  uint64_t v5 = (v4 - 28);
  uint64_t v6 = *((void *)a2 - 8);
  uint64_t v7 = *((void *)a2 - 4);
  uint64_t v126 = 0;
  uint64_t v127 = 0;
  uint64_t v124 = 0;
  uint64_t v125 = 0;
  if (v6)
  {
    if (*(unsigned char *)(v6 + 16) == 91)
    {
      uint64_t v8 = *(void *)(v6 - 64);
      if (v8)
      {
        uint64_t v9 = *(void *)(v6 - 32);
        if (v9)
        {
          uint64_t v10 = (llvm::Type *)*(unsigned int *)(v6 + 72);
          uint64_t v124 = *(unsigned int **)(v6 + 64);
          uint64_t v125 = v10;
          long long __p = &v127;
          uint64_t v131 = (uint64_t)&v126;
          int v132 = (void **)&v124;
          if (sub_1CC9E8C9C((uint64_t)&__p, v7))
          {
            uint64_t v11 = *(void *)(v6 + 8);
            if (v11)
            {
              if (!*(void *)(v11 + 8))
              {
                uint64_t v12 = *(void *)(v7 + 8);
                if (v12)
                {
                  if (!*(void *)(v12 + 8)
                    && llvm::ShuffleVectorInst::isConcat((llvm::ShuffleVectorInst *)v6)
                    && llvm::ShuffleVectorInst::isConcat((llvm::ShuffleVectorInst *)v7))
                  {
                    uint64_t v90 = *(void *)(a1 + 24);
                    LOWORD(v134) = 257;
                    unint64_t v91 = sub_1CB844E98(v90, v5, v8, v127, (uint64_t)&__p, 0);
                    int v92 = (uint64_t **)v91;
                    if (v91)
                    {
                      unsigned int v93 = *((unsigned __int8 *)v91 + 16);
                      if (v93 >= 0x1C && v93 - 59 >= 0xFFFFFFEE) {
                        llvm::Instruction::copyIRFlags((uint64_t)v91, (uint64_t)a2, 1);
                      }
                    }
                    uint64_t v94 = *(void *)(a1 + 24);
                    LOWORD(v134) = 257;
                    uint64_t v95 = sub_1CB844E98(v94, v5, v9, v126, (uint64_t)&__p, 0);
                    int v96 = (uint64_t **)v95;
                    if (v95)
                    {
                      unsigned int v97 = *((unsigned __int8 *)v95 + 16);
                      if (v97 >= 0x1C && v97 - 59 >= 0xFFFFFFEE) {
                        llvm::Instruction::copyIRFlags((uint64_t)v95, (uint64_t)a2, 1);
                      }
                    }
                    BOOL v98 = (char *)operator new(0xA8uLL);
                    *((_DWORD *)v98 + 21) = *((_DWORD *)v98 + 21) & 0x38000000 | 2;
                    unint64_t v13 = (unint64_t)(v98 + 64);
                    *(void *)BOOL v98 = 0;
                    *((void *)v98 + 1) = 0;
                    *((void *)v98 + 2) = 0;
                    *((void *)v98 + 3) = v98 + 64;
                    *((void *)v98 + 4) = 0;
                    *((void *)v98 + 5) = 0;
                    *((void *)v98 + 6) = 0;
                    *((void *)v98 + 7) = v98 + 64;
                    unint64_t v58 = v124;
                    unsigned int v59 = v125;
                    LOWORD(v134) = 257;
                    int64_t v56 = (uint64_t ***)(v98 + 64);
                    uint64_t v57 = v92;
                    int v55 = v96;
LABEL_88:
                    llvm::ShuffleVectorInst::ShuffleVectorInst(v56, v57, v55, v58, v59, (const char **)&__p, 0);
                    return v13;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  unint64_t v13 = 0;
  if (llvm::isSafeToSpeculativelyExecute((uint64_t)a2, 0, 0, 0))
  {
    unsigned int v122 = 0;
    uint64_t v123 = 0;
    long long __p = &v123;
    int v132 = (void **)&v124;
    if (sub_1CC9E8D20((uint64_t)&__p, v6))
    {
      char v139 = (void **)&v122;
      v141[0] = &v124;
      if (sub_1CC9E8EB8((uint64_t)&v139, v7)
        && *(void *)v123 == *v122
        && ((uint64_t v45 = *(void *)(v6 + 8)) != 0 && !*(void *)(v45 + 8)
         || (uint64_t v46 = *(void *)(v7 + 8)) != 0 && !*(void *)(v46 + 8)
         || v6 == v7))
      {
        uint64_t v47 = v124;
        uint64_t v48 = v125;
        uint64_t v49 = *(void *)(a1 + 24);
        LOWORD(v134) = 257;
        uint64_t v50 = sub_1CB844E98(v49, (v4 - 28), (uint64_t)v123, (uint64_t)v122, (uint64_t)&__p, 0);
        uint64_t v51 = (llvm::PoisonValue **)v50;
        if (v50)
        {
          unsigned int v52 = *((unsigned __int8 *)v50 + 16);
          if (v52 >= 0x1C && v52 - 59 >= 0xFFFFFFEE) {
            llvm::Instruction::copyIRFlags((uint64_t)v50, (uint64_t)a2, 1);
          }
        }
        uint64_t v53 = operator new(0xA8uLL);
        v53[21] = v53[21] & 0x38000000 | 2;
        unint64_t v13 = (unint64_t)(v53 + 16);
        *(void *)uint64_t v53 = 0;
        *((void *)v53 + 1) = 0;
        *((void *)v53 + 2) = 0;
        *((void *)v53 + 3) = v53 + 16;
        *((void *)v53 + 4) = 0;
        *((void *)v53 + 5) = 0;
        *((void *)v53 + 6) = 0;
        *((void *)v53 + 7) = v53 + 16;
        LOWORD(v134) = 257;
        int v55 = (uint64_t **)llvm::PoisonValue::get(*v51, v54);
        int64_t v56 = (uint64_t ***)v13;
        uint64_t v57 = (uint64_t **)v51;
        unint64_t v58 = v47;
        unsigned int v59 = v48;
        goto LABEL_88;
      }
    }
    if (llvm::Instruction::isCommutative((llvm::Instruction *)a2))
    {
      if (v6)
      {
        if (*(unsigned char *)(v6 + 16) == 91)
        {
          uint64_t v14 = *(void *)(v6 - 64);
          if (v14)
          {
            uint64_t v123 = *(llvm::Constant **)(v6 - 64);
            unint64_t v15 = *(void **)(v6 - 32);
            if (v15)
            {
              unsigned int v122 = *(void **)(v6 - 32);
              int v16 = (llvm::Type *)*(unsigned int *)(v6 + 72);
              uint64_t v124 = *(unsigned int **)(v6 + 64);
              uint64_t v125 = v16;
              long long __p = v15;
              uint64_t v131 = v14;
              int v132 = (void **)&v124;
              if (sub_1CC9E9058(&__p, v7))
              {
                size_t v17 = *(unsigned int *)(**(void **)(v6 - 64) + 32);
                if (v17 == *(_DWORD *)(v6 + 72))
                {
                  int v18 = *(__int32 **)(v6 + 64);
                  if (llvm::ShuffleVectorInst::isSelectMask(v18, *(unsigned int *)(**(void **)(v6 - 64) + 32)))
                  {
                    unint64_t v19 = wmemchr(v18, -1, v17);
                    unsigned int v20 = v19 ? v19 : &v18[v17];
                    if (v17 == v20 - v18)
                    {
                      size_t v21 = *(unsigned int *)(**(void **)(v7 - 64) + 32);
                      if (v21 == *(_DWORD *)(v7 + 72))
                      {
                        unsigned int v22 = *(__int32 **)(v7 + 64);
                        if (llvm::ShuffleVectorInst::isSelectMask(v22, *(unsigned int *)(**(void **)(v7 - 64) + 32)))
                        {
                          uint64_t v23 = wmemchr(v22, -1, v21);
                          unsigned int v24 = v23 ? v23 : &v22[v21];
                          uint64_t v5 = (v4 - 28);
                          if (v21 == v24 - v22)
                          {
                            LOWORD(v134) = 257;
                            unint64_t v13 = (unint64_t)llvm::BinaryOperator::Create(v4 - 28, v123, (uint64_t)v122, (const char **)&__p, 0);
                            llvm::Instruction::copyIRFlags(v13, (uint64_t)a2, 1);
                            return v13;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    uint64_t v121 = 0;
    uint64_t v25 = *(void *)a2;
    if (!*(void *)a2) {
      goto LABEL_113;
    }
    if (*(unsigned char *)(v25 + 8) != 18) {
      goto LABEL_113;
    }
    long long __p = &v123;
    int v132 = (void **)&v124;
    uint64_t v133 = &v121;
    uint64_t v134 = 0;
    if (!sub_1CC9E90DC((uint64_t)&__p, (uint64_t)a2, (uint64_t)&v121)
      || *(_DWORD *)(*(void *)v123 + 32) > *(_DWORD *)(v25 + 32))
    {
      goto LABEL_113;
    }
    unint64_t v13 = *(unsigned int *)(*(void *)v123 + 32);
    int v27 = *(llvm::UndefValue **)v121;
    v120[0] = v5;
    if ((*(_DWORD *)(*(void *)v121 + 8) & 0xFE) == 0x12) {
      int v27 = (llvm::UndefValue *)**((void **)v27 + 2);
    }
    BOOL v28 = v124;
    unsigned int v118 = *(unsigned __int8 *)(v7 + 16);
    uint64_t v29 = llvm::UndefValue::get(v27, v26);
    long long __p = &v132;
    uint64_t v131 = 0x1000000000;
    unint64_t v116 = v29;
    sub_1CBFC6B20((uint64_t)&__p, v13, (uint64_t)v29);
    int v117 = (llvm::Type *)*(unsigned int *)(v25 + 32);
    if (v117)
    {
      for (unint64_t i = 0; (llvm::Type *)i != v117; ++i)
      {
        AggregateElement = (llvm::Constant *)llvm::Constant::getAggregateElement(v121, (llvm::Type *)i);
        uint64_t v33 = (uint64_t *)AggregateElement;
        uint64_t v34 = v28[i];
        if ((v34 & 0x80000000) == 0)
        {
          if (!AggregateElement) {
            goto LABEL_76;
          }
          unsigned int v35 = v28;
          char v36 = 0;
          uint64_t v37 = (llvm::Constant *)*((void *)__p + v34);
          BOOL v39 = *((unsigned __int8 *)v37 + 16) - 11 < 2 || v37 == AggregateElement;
          if (i >= v13) {
            goto LABEL_110;
          }
          unint64_t v40 = v13;
          if (!v39) {
            goto LABEL_110;
          }
          *((void *)__p + v34) = AggregateElement;
          BOOL v28 = v35;
          goto LABEL_54;
        }
        unint64_t v40 = v13;
        if (v118 > 0x14)
        {
          uint64_t v41 = (uint64_t)llvm::ConstantFoldBinaryInstruction((llvm *)v120[0], AggregateElement, v116, v32);
          if (!v41)
          {
            uint64_t v41 = *v33;
            if (*v33)
            {
              uint64_t v135 = v33;
              uint64_t v136 = (uint64_t)v116;
              goto LABEL_71;
            }
          }
        }
        else
        {
          uint64_t v41 = (uint64_t)llvm::ConstantFoldBinaryInstruction((llvm *)v120[0], v116, AggregateElement, v32);
          if (!v41)
          {
            uint64_t v41 = *(void *)v116;
            if (*(void *)v116)
            {
              uint64_t v135 = v116;
              uint64_t v136 = (uint64_t)v33;
LABEL_71:
              uint64_t v43 = **(void **)v41 + 1512;
              LODWORD(v139) = LOBYTE(v120[0]);
              uint64_t v140 = &v135;
              v141[0] = 2;
              memset(&v141[1], 0, 40);
              uint64_t v41 = sub_1CC56C20C(v43, v41, (unsigned __int8 *)&v139);
            }
          }
        }
        unsigned int v42 = (*(unsigned char *)(v41 + 16) - 11);
        if (v42 >= 2)
        {
          if (v42 < 0xFD) {
            goto LABEL_76;
          }
          char v139 = (void **)&v141[2];
          uint64_t v140 = (void **)&v141[2];
          v141[0] = 8;
          LODWORD(v141[1]) = 0;
          uint64_t v135 = v137;
          uint64_t v136 = 0x800000000;
          uint64_t v128 = (const char **)&v139;
          uint64_t v129 = &v135;
          unint64_t v13 = 0;
          if (sub_1CC04C108((llvm::SmallPtrSetImplBase **)&v128, v41))
          {
            do
            {
              unint64_t v13 = v136 == 0;
              if (!v136) {
                break;
              }
              uint64_t v44 = *((void *)v135 + v136 - 1);
              LODWORD(v136) = v136 - 1;
            }
            while ((sub_1CC04C108((llvm::SmallPtrSetImplBase **)&v128, v44) & 1) != 0);
          }
          if (v135 != v137) {
            free(v135);
          }
          if (v140 == v139)
          {
            if (!v13) {
              goto LABEL_76;
            }
          }
          else
          {
            free(v140);
            if (!v13)
            {
LABEL_76:
              char v36 = 0;
              goto LABEL_110;
            }
          }
        }
LABEL_54:
        unint64_t v13 = v40;
      }
    }
    uint64_t v60 = (llvm::FixedVectorType ***)__p;
    uint64_t v61 = v131;
    Impl = llvm::ConstantVector::getImpl((llvm::FixedVectorType ***)__p, (llvm::Type *)v131);
    if (!Impl)
    {
      llvm::FixedVectorType::get(**v60, (llvm::Type *)v61);
      Impl = (llvm::Constant *)sub_1CC56A4DC(**v63 + 1288, (uint64_t)v63, v60, v61);
    }
    unsigned int v64 = a2[16];
    if (v64 <= 0x33 && ((1 << v64) & 0xD800000000000) != 0 || v64 - 53 <= 2 && v118 <= 0x14) {
      Impl = sub_1CD689470((llvm::ConstantExpr *)v120[0], Impl, (llvm::Type *)(v118 < 0x15));
    }
    unsigned int v65 = v124;
    if (v118 >= 0x15) {
      int v66 = Impl;
    }
    else {
      int v66 = v123;
    }
    if (v118 >= 0x15) {
      uint64_t v67 = v123;
    }
    else {
      uint64_t v67 = Impl;
    }
    int v68 = v125;
    uint64_t v69 = *(void *)(a1 + 24);
    LOWORD(v141[2]) = 257;
    uint64_t v70 = sub_1CB844E98(v69, v120[0], (uint64_t)v66, (uint64_t)v67, (uint64_t)&v139, 0);
    uint64_t v71 = (llvm::PoisonValue **)v70;
    if (v70)
    {
      unsigned int v72 = *((unsigned __int8 *)v70 + 16);
      if (v72 >= 0x1C && v72 - 59 >= 0xFFFFFFEE) {
        llvm::Instruction::copyIRFlags((uint64_t)v70, (uint64_t)a2, 1);
      }
    }
    BOOL v74 = operator new(0xA8uLL);
    v74[21] = v74[21] & 0x38000000 | 2;
    unint64_t v13 = (unint64_t)(v74 + 16);
    *(void *)BOOL v74 = 0;
    *((void *)v74 + 1) = 0;
    *((void *)v74 + 2) = 0;
    *((void *)v74 + 3) = v74 + 16;
    *((void *)v74 + 4) = 0;
    *((void *)v74 + 5) = 0;
    *((void *)v74 + 6) = 0;
    *((void *)v74 + 7) = v74 + 16;
    LOWORD(v141[2]) = 257;
    uint64_t v76 = (uint64_t **)llvm::PoisonValue::get(*v71, v75);
    llvm::ShuffleVectorInst::ShuffleVectorInst((uint64_t ***)v13, (uint64_t **)v71, v76, v65, v68, (const char **)&v139, 0);
    char v36 = 1;
LABEL_110:
    if (__p != &v132) {
      free(__p);
    }
    uint64_t v5 = v120[0];
    if ((v36 & 1) == 0)
    {
LABEL_113:
      BOOL v77 = (const char *)(*(void *)(*(void *)(*((void *)a2 + 5) + 56) + 40) + 216);
      LOWORD(v141[2]) = 260;
      char v139 = (void **)v77;
      llvm::Triple::Triple((llvm::Triple *)&__p, (const llvm::Twine *)&v139);
      if (v133 > 0x31 || ((1 << (char)v133) & 0x300003C000000) == 0)
      {
        unint64_t v13 = 0;
        switch(a2[16])
        {
          case ')':
          case '-':
            goto LABEL_121;
          case '*':
          case '.':
            if ((~a2[17] & 0x12) != 0) {
              goto LABEL_115;
            }
            goto LABEL_121;
          case '+':
          case ',':
            goto LABEL_116;
          default:
            if (a2[16] - 56 >= 3) {
              goto LABEL_116;
            }
LABEL_121:
            if (!llvm::Instruction::isCommutative((llvm::Instruction *)a2)) {
              goto LABEL_115;
            }
            int v79 = *(unsigned __int8 *)(v7 + 16);
            uint64_t v80 = v79 == 91 ? v6 : v7;
            uint64_t v81 = v79 == 91 ? v7 : v6;
            *(void *)&v120[1] = 0;
            uint64_t v128 = 0;
            uint64_t v129 = 0;
            char v139 = (void **)&v120[1];
            v141[0] = &v128;
            uint64_t v82 = *(void *)(v81 + 8);
            if (!v82 || *(void *)(v82 + 8) || !sub_1CC9E8D20((uint64_t)&v139, v81) || !v129) {
              goto LABEL_115;
            }
            unsigned int v84 = (llvm::SmallPtrSetImplBase *)v128;
            uint64_t v85 = 4 * (void)v129;
            uint64_t v86 = 4 * (void)v129;
            int v87 = (llvm::SmallPtrSetImplBase *)v128;
            break;
        }
        while (1)
        {
          unsigned int v88 = (const llvm::Value *)*(unsigned int *)v87;
          if (v88 != -1) {
            break;
          }
          int v87 = (llvm::SmallPtrSetImplBase *)((char *)v87 + 4);
          v86 -= 4;
          if (!v86) {
            goto LABEL_115;
          }
        }
        while (v88 == *(_DWORD *)v84 || *(_DWORD *)v84 == -1)
        {
          unsigned int v84 = (llvm::SmallPtrSetImplBase *)((char *)v84 + 4);
          v85 -= 4;
          if (!v85)
          {
            if (**(void **)&v120[1] != *(void *)a2) {
              break;
            }
            uint64_t v99 = *(void *)(v80 + 8);
            if (!v99 || *(void *)(v99 + 8)) {
              break;
            }
            int v100 = *(unsigned __int8 *)(v80 + 16);
            if (v4 == v100)
            {
              uint64_t v101 = *(const void ***)(v80 - 64);
              if (!v101) {
                break;
              }
              unint64_t v102 = *(const void ***)(v80 - 32);
              if (!v102) {
                break;
              }
            }
            else
            {
              if (v100 != 5) {
                break;
              }
              if (v5 != *(unsigned __int16 *)(v80 + 18)) {
                break;
              }
              unint64_t v105 = (const void ***)(v80 - 32 * (*(_DWORD *)(v80 + 20) & 0x7FFFFFF));
              uint64_t v101 = *v105;
              if (!*v105) {
                break;
              }
              unint64_t v102 = v105[4];
              if (!v102) {
                break;
              }
            }
            if (llvm::isSplatValue(v102, (const llvm::Value *)*(unsigned int *)v87, 0, v83))
            {
              uint64_t v104 = (uint64_t)v102;
              unint64_t v102 = v101;
            }
            else
            {
              int isSplatValue = llvm::isSplatValue(v101, v88, 0, v103);
              uint64_t v104 = (uint64_t)v101;
              if (!isSplatValue) {
                break;
              }
            }
            uint64_t v107 = *(void *)(a1 + 24);
            LOWORD(v141[2]) = 257;
            int v119 = sub_1CB844E98(v107, v5, *(uint64_t *)&v120[1], v104, (uint64_t)&v139, 0);
            unsigned int v109 = v129;
            char v139 = (void **)v141;
            HIDWORD(v140) = 8;
            if ((unint64_t)v129 >= 9)
            {
              LODWORD(v140) = 0;
              llvm::SmallVectorBase<unsigned int>::grow_pod();
            }
            if (v129)
            {
              int v110 = v141;
              int64_t v111 = v129;
              do
              {
                *v110++ = v88;
                int64_t v111 = (void **)((char *)v111 - 1);
              }
              while (v111);
            }
            LODWORD(v140) = v109;
            uint64_t v112 = *(void *)(a1 + 24);
            __int16 v138 = 257;
            int v113 = llvm::PoisonValue::get(*(llvm::PoisonValue **)v119, v108);
            int v114 = sub_1CB935A74(v112, (uint64_t)v119, (uint64_t)v113, v141, (llvm::Type *)v109, (uint64_t)&v135);
            __int16 v138 = 257;
            unint64_t v13 = (unint64_t)llvm::BinaryOperator::Create(v5, v114, (uint64_t)v102, (const char **)&v135, 0);
            if (sub_1CB845E74(v13))
            {
              *(unsigned char *)(v13 + 17) = a2[17] & 0xFE | *(unsigned char *)(v13 + 17) & 1;
              llvm::Instruction::andIRFlags(v13, v80);
            }
            unsigned int v115 = *((unsigned __int8 *)v119 + 16);
            if (v115 >= 0x1C && v115 - 59 >= 0xFFFFFFEE) {
              llvm::Instruction::copyIRFlags((uint64_t)v119, v13, 1);
            }
            if (v139 != v141) {
              free(v139);
            }
            goto LABEL_116;
          }
        }
      }
LABEL_115:
      unint64_t v13 = 0;
LABEL_116:
      if (SHIBYTE(v132) < 0) {
        operator delete(__p);
      }
    }
  }
  return v13;
}

llvm::Value *sub_1CC9D8DBC(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a2 + 16);
  if (v4 == 43) {
    uint64_t v5 = *(void *)(a2 - 64);
  }
  else {
    uint64_t v5 = *(void *)(a2 - 32);
  }
  if (v4 == 43) {
    uint64_t v6 = *(void *)(a2 - 32);
  }
  else {
    uint64_t v6 = *(void *)(a2 - 64);
  }
  char v36 = 0;
  uint64_t v32 = &v36;
  int v7 = sub_1CBC5BEAC(&v32, v6);
  if (v7)
  {
    uint64_t v8 = 40;
  }
  else
  {
    uint64_t v32 = &v36;
    if ((sub_1CBC5BE40(&v32, v6) & 1) == 0) {
      return 0;
    }
    uint64_t v8 = 39;
  }
  unsigned int v35 = 0;
  uint64_t v32 = &v35;
  uint64_t v33 = &v35;
  if (((sub_1CBC5BE40(&v32, v5) & 1) != 0 || sub_1CBC5BEAC(&v33, v5))
    && (v11 = v35, uint64_t v10 = v36, *(void *)v36 == *(void *)v35)
    && (!v5 || (unsigned int v12 = *(unsigned __int8 *)(v5 + 16), v12 <= 0x1B)
      ? (unsigned int v13 = *(unsigned __int16 *)(v5 + 18))
      : (unsigned int v13 = v12 - 28),
        v13 == v8))
  {
    uint64_t v14 = *(void *)(v6 + 8);
    if (v14 && !*(void *)(v14 + 8)) {
      goto LABEL_33;
    }
    uint64_t v15 = *(void *)(v5 + 8);
    if (v15)
    {
      if (!*(void *)(v15 + 8)) {
        goto LABEL_33;
      }
    }
  }
  else
  {
    uint64_t v14 = *(void *)(v6 + 8);
  }
  if (!v14 || *(void *)(v14 + 8)) {
    return 0;
  }
  if (*(unsigned __int8 *)(v5 + 16) > 0x14u || v5 == 0) {
    return 0;
  }
  uint64_t v11 = sub_1CC56C0C0((llvm *)0x26, (llvm::detail::IEEEFloat *)v5, *(llvm::Constant **)v36, 0);
  if (llvm::ConstantExpr::getCast((llvm::ConstantExpr *)v8, v11, *(llvm::Constant ****)a2, 0) != (llvm::ConstantExpr *)v5) {
    return 0;
  }
  unsigned int v35 = v11;
  uint64_t v10 = v36;
LABEL_33:
  int v17 = *(unsigned __int8 *)(a2 + 16);
  if (v17 == 43)
  {
    unsigned int v35 = v10;
    char v36 = v11;
    int v18 = *(const llvm::DataLayout **)(a1 + 56);
    unsigned int v20 = *(const llvm::Instruction **)(a1 + 72);
    unint64_t v19 = *(const llvm::Value **)(a1 + 80);
    if (v7) {
      int v21 = llvm::computeOverflowForSignedSub(v11, v10, v19, v18, (llvm::AssumptionCache *)a2, v20, v9);
    }
    else {
      int v21 = llvm::computeOverflowForUnsignedSub(v11, v10, v19, v18, (llvm::AssumptionCache *)a2, v20, v9);
    }
  }
  else if (v17 == 45)
  {
    unsigned int v22 = *(const llvm::DataLayout **)(a1 + 56);
    unsigned int v24 = *(const llvm::Instruction **)(a1 + 72);
    uint64_t v23 = *(const llvm::Value **)(a1 + 80);
    if (v7) {
      int v21 = llvm::computeOverflowForSignedMul(v10, v11, v23, v22, (llvm::AssumptionCache *)a2, v24, (const llvm::DominatorTree *)1);
    }
    else {
      int v21 = llvm::computeOverflowForUnsignedMul(v10, v11, v23, v22, (llvm::AssumptionCache *)a2, v24, (const llvm::DominatorTree *)1);
    }
  }
  else if (v7)
  {
    int v21 = sub_1CC16A7F0((uint64_t)v10, (uint64_t)v11, 0, *(const llvm::DataLayout **)(a1 + 80), *(void *)(a1 + 56), (const llvm::DataLayout *)a2, *(void *)(a1 + 72));
  }
  else
  {
    int v21 = llvm::computeOverflowForUnsignedAdd(v10, v11, *(const llvm::Value **)(a1 + 80), *(const llvm::DataLayout **)(a1 + 56), (llvm::AssumptionCache *)a2, *(const llvm::Instruction **)(a1 + 72), (const llvm::DominatorTree *)1);
  }
  if (v21 != 3) {
    return 0;
  }
  uint64_t v25 = *(void *)(a1 + 24);
  uint64_t v26 = *(unsigned __int8 *)(a2 + 16) - 28;
  uint64_t v32 = (llvm::Value **)"narrow";
  __int16 v34 = 259;
  int v27 = sub_1CB844E98(v25, v26, (uint64_t)v36, (uint64_t)v35, (uint64_t)&v32, 0);
  if (v27)
  {
    unsigned int v28 = *((unsigned __int8 *)v27 + 16);
    if (v28 >= 0x1C && v28 - 59 >= 0xFFFFFFEE)
    {
      if (v7) {
        char v29 = 4;
      }
      else {
        char v29 = 2;
      }
      *((unsigned char *)v27 + 17) |= v29;
    }
  }
  uint64_t v30 = *(llvm::Constant ****)a2;
  __int16 v34 = 257;
  return llvm::CastInst::Create(v8, (uint64_t)v27, (uint64_t)v30, (const char **)&v32, 0);
}

BOOL sub_1CC9D9080(uint64_t a1, uint64_t a2)
{
  BOOL result = 1;
  if (sub_1CC543B10(a1))
  {
    if ((sub_1CC543B10(a2) & 1) == 0)
    {
      uint64_t v3 = *(void *)(a2 + 8);
      if (!v3 || *(void *)(v3 + 8)) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1CC9D90D0(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(a1 + 17) & 2) != 0) {
    goto LABEL_5;
  }
  if ((*(unsigned char *)(a2 + 17) & 2) == 0) {
    return 0;
  }
  uint64_t result = sub_1CC543B10(a1);
  if (result)
  {
LABEL_5:
    if ((*(unsigned char *)(a2 + 17) & 2) != 0)
    {
      return 1;
    }
    else
    {
      return sub_1CC543B10(a2);
    }
  }
  return result;
}

void *sub_1CC9D913C(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t a4, const char **a5, uint64_t a6)
{
  uint64_t v12 = (a4 + 1);
  BOOL v13 = a4 == -1;
  uint64_t v14 = operator new(32 * v12 + 80);
  uint64_t v15 = &v14[4 * v12];
  *((_DWORD *)v15 + 5) = *((_DWORD *)v15 + 5) & 0x38000000 | v12 & 0x7FFFFFF;
  if (!v13)
  {
    do
    {
      void *v14 = 0;
      v14[1] = 0;
      v14[2] = 0;
      v14[3] = v15;
      v14 += 4;
    }
    while (v14 != v15);
  }
  sub_1CB845A7C(a1, a2, (uint64_t)a3, a4);
  *uint64_t v15 = v16;
  v15[1] = 0;
  int v17 = *((_DWORD *)v15 + 5) & 0xC0000000 | v12 & 0x7FFFFFF;
  *((_DWORD *)v15 + 4) = 62;
  *((_DWORD *)v15 + 5) = v17;
  *(_OWORD *)(v15 + 3) = 0u;
  int v18 = v15 + 3;
  *(_OWORD *)(v15 + 5) = 0u;
  *((_DWORD *)v15 + 14) = 0;
  if (a6)
  {
    uint64_t v20 = *(void *)(a6 + 40);
    int v21 = (uint64_t *)(a6 + 24);
    v15[5] = v20;
    *(_WORD *)(v20 + 18) &= ~0x8000u;
    if ((*((unsigned char *)v15 + 23) & 0x10) != 0)
    {
      uint64_t v23 = *(void *)(v20 + 56);
      if (v23)
      {
        unsigned int v24 = *(llvm::ValueSymbolTable **)(v23 + 104);
        if (v24) {
          llvm::ValueSymbolTable::reinsertValue(v24, (llvm::Value *)v15);
        }
      }
    }
    uint64_t v22 = *v21;
    v15[3] = *v21;
    v15[4] = v21;
    *(void *)(v22 + 8) = v18;
    *int v21 = (uint64_t)v18;
  }
  v15[8] = a1;
  v15[9] = llvm::GetElementPtrInst::getIndexedType(a1, (uint64_t)a3, a4);
  llvm::GetElementPtrInst::init((uint64_t ***)v15, (uint64_t **)a2, a3, a4, a5);
  *((unsigned char *)v15 + 17) |= 2u;
  return v15;
}

llvm::UndefValue **sub_1CC9D92A8(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = a1;
  uint64_t v876 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = *((_DWORD *)a2 + 5) & 0x7FFFFFF;
  int v4 = &a2[-4 * v3];
  uint64_t v7 = *v4;
  uint64_t v5 = v4 + 4;
  uint64_t v6 = v7;
  v867 = v869;
  uint64_t v868 = 0x800000000;
  if ((unint64_t)((char *)a2 - (char *)v5) >= 0x101) {
    llvm::SmallVectorBase<unsigned int>::grow_pod();
  }
  uint64_t v8 = (uint64_t *)v869;
  if (v5 != a2)
  {
    uint64_t v9 = v869;
    uint64_t v10 = 32 - 32 * v3;
    do
    {
      *v9++ = *(uint64_t *)((char *)a2 + v10);
      v10 += 32;
    }
    while (v10);
    uint64_t v8 = (uint64_t *)v867;
  }
  LODWORD(v868) = (unint64_t)((char *)a2 - (char *)v5) >> 5;
  uint64_t v11 = *a2;
  uint64_t v12 = (unsigned __int8 *)a2[8];
  BOOL v13 = (llvm::UndefValue **)v12[8];
  int v14 = (*((unsigned __int8 *)a2 + 17) >> 1) & 1;
  long long v15 = *(_OWORD *)(a1 + 120);
  long long v16 = *(_OWORD *)(a1 + 104);
  long long v870 = *(_OWORD *)(a1 + 88);
  long long v871 = v16;
  uint64_t v873 = *((void *)&v15 + 1);
  v872 = a2;
  int v17 = sub_1CC036F6C((llvm::Type *)v12, (unsigned __int8 *)v6, v8, v868, v14, (uint64_t)&v870);
  if (v17)
  {
    BOOL v13 = sub_1CC9D3C84(v2, (llvm::ValueAsMetadata *)a2, v17);
    goto LABEL_340;
  }
  int v848 = (int)v13;
  BOOL v18 = *(unsigned char *)(v11 + 8) != 18 || v11 == 0;
  if (v18) {
    goto LABEL_25;
  }
  unsigned int v19 = *(_DWORD *)(v11 + 32);
  DWORD2(v870) = v19;
  if (v19 > 0x40) {
    operator new[]();
  }
  *(void *)&long long v870 = 0;
  if (v19) {
    unint64_t v20 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v19;
  }
  else {
    unint64_t v20 = 0;
  }
  unsigned int v860 = v19;
  unint64_t v859 = v20;
  int v21 = sub_1CCABD934(v2, (uint64_t)a2, (llvm::APInt *)&v859, (void **)&v870, 0, 0);
  if (v860 >= 0x41 && v859) {
    MEMORY[0x1D25D9CB0](v859, 0x1000C8000313F17);
  }
  if (v21)
  {
    BOOL v13 = (llvm::UndefValue **)a2;
    if (v21 != (llvm::UndefValue *)a2) {
      BOOL v13 = sub_1CC9D3C84(v2, (llvm::ValueAsMetadata *)a2, v21);
    }
  }
  if (DWORD2(v870) >= 0x41 && (void)v870) {
    MEMORY[0x1D25D9CB0](v870, 0x1000C8000313F17);
  }
  if (!v21)
  {
LABEL_25:
    uint64_t v22 = *(void *)(v2 + 80);
    uint64_t v23 = *(void *)a2[-4 * (*((_DWORD *)a2 + 5) & 0x7FFFFFF)];
    unsigned int v24 = *(_DWORD *)(v23 + 8);
    if ((v24 & 0xFE) == 0x12)
    {
      uint64_t v25 = *(uint64_t **)(v23 + 16);
      uint64_t v23 = *v25;
      unsigned int v24 = *(_DWORD *)(*v25 + 8);
    }
    if ((v24 & 0xFE) == 0x12) {
      unsigned int v24 = *(_DWORD *)(**(void **)(v23 + 16) + 8);
    }
    uint64_t v26 = *(void *)(v22 + 232);
    if (v24 < 0x100) {
      goto LABEL_38;
    }
    unsigned int v27 = v24 >> 8;
    unint64_t v28 = *(unsigned int *)(v22 + 240);
    uint64_t v29 = *(void *)(v22 + 232);
    if (v28)
    {
      uint64_t v29 = v26;
      unint64_t v30 = v28;
      do
      {
        unint64_t v31 = v30 >> 1;
        uint64_t v32 = v29 + 16 * (v30 >> 1);
        unsigned int v33 = *(_DWORD *)(v32 + 8);
        uint64_t v34 = v32 + 16;
        v30 += ~(v30 >> 1);
        if (v33 < v27) {
          uint64_t v29 = v34;
        }
        else {
          unint64_t v30 = v31;
        }
      }
      while (v30);
    }
    if (v29 == v26 + 16 * v28 || *(_DWORD *)(v29 + 8) != v27) {
LABEL_38:
    }
      uint64_t v29 = v26;
    unsigned int v35 = (uint64_t **)llvm::IntegerType::get(*(llvm::IntegerType **)v23, (llvm::LLVMContext *)*(unsigned int *)(v29 + 12));
    unint64_t v38 = v35;
    v841 = v13;
    if ((*(_DWORD *)(v23 + 8) & 0xFE) == 0x12)
    {
      v782 = (llvm::Type *)*(unsigned int *)(v23 + 32);
      if (*(_DWORD *)(v23 + 8) == 19) {
        llvm::ScalableVectorType::get(v35, v782);
      }
      else {
        llvm::FixedVectorType::get((llvm::FixedVectorType *)v35, v782);
      }
      unint64_t v38 = v783;
    }
    if (*((unsigned char *)a2 + 16) == 62) {
      BOOL v39 = a2 + 8;
    }
    else {
      BOOL v39 = a2 + 3;
    }
    uint64_t v40 = *v39;
    int v41 = *((_DWORD *)a2 + 5);
    uint64_t v845 = (uint64_t)v12;
    v846 = (llvm::Type *)v11;
    if ((v41 & 0x40000000) != 0)
    {
      uint64_t v44 = (uint64_t *)*(a2 - 1);
      uint64_t v43 = -(uint64_t)(v41 & 0x7FFFFFF);
    }
    else
    {
      uint64_t v42 = v41 & 0x7FFFFFF;
      uint64_t v43 = -v42;
      uint64_t v44 = &a2[-4 * v42];
    }
    uint64_t v45 = v40 | 4;
    v857 = (llvm::Constant **)(v44 + 4);
    uint64_t v858 = v45;
    uint64_t v46 = &a2[4 * v43];
    uint64_t v47 = v46 + 4;
    if (v46 + 4 == a2) {
      goto LABEL_116;
    }
    uint64_t v842 = v6;
    char v48 = 0;
    while (1)
    {
      uint64_t v49 = v47;
      if ((v45 & 4) == 0) {
        goto LABEL_98;
      }
      uint64_t v50 = *(llvm::Constant **)*v47;
      if ((*((_DWORD *)v50 + 2) & 0xFE) == 0x12)
      {
        uint64_t v51 = (llvm::Type *)*((unsigned int *)v50 + 8);
        if (*((_DWORD *)v50 + 2) == 19) {
          llvm::ScalableVectorType::get(v38, v51);
        }
        else {
          llvm::FixedVectorType::get((llvm::FixedVectorType *)v38, v51);
        }
        uint64_t v53 = v52;
        uint64_t v45 = v858;
        uint64_t v54 = v858 & 4;
      }
      else
      {
        uint64_t v54 = 1;
        uint64_t v53 = (llvm::Constant *)v38;
      }
      unint64_t v55 = v45 & 0xFFFFFFFFFFFFFFF8;
      if (!v54 || !v55)
      {
        AggregateElement = *v857;
        if (*v857) {
          BOOL v57 = *((unsigned char *)*v857 + 16) == 16;
        }
        else {
          BOOL v57 = 0;
        }
        if (!v57) {
          AggregateElement = (llvm::Constant *)llvm::Constant::getAggregateElement(AggregateElement, 0);
        }
        uint64_t v60 = (unsigned int *)*((void *)AggregateElement + 3);
        unint64_t v58 = (unsigned int *)((char *)AggregateElement + 24);
        unsigned int v59 = v60;
        if (v58[2] < 0x41) {
          unsigned int v59 = v58;
        }
        unint64_t v55 = *(void *)(*(void *)(v55 + 16) + 8 * *v59);
      }
      unsigned int v61 = *(unsigned __int8 *)(v55 + 8);
      if (v61 > 0x11) {
        goto LABEL_84;
      }
      if (((1 << v61) & 0xAC7F) != 0) {
        goto LABEL_66;
      }
      if (((1 << v61) & 0x30000) == 0)
      {
LABEL_84:
        if ((v61 & 0xFE) != 0x12 && v61 != 21) {
          goto LABEL_88;
        }
      }
      if (!llvm::Type::isSizedDerivedType(v55, 0)) {
        goto LABEL_88;
      }
LABEL_66:
      uint64_t v62 = v2;
      uint64_t v63 = *(llvm::DataLayout **)(v2 + 80);
      unint64_t v64 = (unint64_t)(sub_1CB83544C((uint64_t)v63, v55) + 7) >> 3;
      char Alignment = llvm::DataLayout::getAlignment(v63, (llvm::Type *)v55, 1);
      if ((v64 + ~(-1 << Alignment)) >> Alignment)
      {
        uint64_t v2 = v62;
        goto LABEL_88;
      }
      uint64_t v68 = *v49;
      unsigned int v69 = *(unsigned __int8 *)(*v49 + 16);
      uint64_t v2 = v62;
      if (v69 > 0x14) {
        goto LABEL_73;
      }
      if (v69 != 16)
      {
        if (v69 == 17)
        {
          if (sub_1CB844168(*v49, 0.0)) {
            goto LABEL_88;
          }
        }
        else if (v69 - 18 < 3 || v69 == 13)
        {
          goto LABEL_88;
        }
        goto LABEL_72;
      }
      uint64_t v70 = *(unsigned int *)(v68 + 32);
      if (v70 < 0x41)
      {
        if (!*(void *)(v68 + 24)) {
          goto LABEL_88;
        }
LABEL_72:
        if (sub_1CC03F414((uint64_t)&v870, (llvm::Constant *)v68)) {
          goto LABEL_88;
        }
LABEL_73:
        NullValue = llvm::Constant::getNullValue(v53, v66, v67);
        if (*v49)
        {
          *(void *)v46[6] = v46[5];
          uint64_t v72 = v46[5];
          if (v72) {
            *(void *)(v72 + 16) = v46[6];
          }
        }
        uint64_t *v49 = (uint64_t)NullValue;
        if (NullValue)
        {
          uint64_t v75 = *((void *)NullValue + 1);
          int v73 = (uint64_t **)((char *)NullValue + 8);
          uint64_t v74 = v75;
          v46[5] = v75;
          if (v75) {
            *(void *)(v74 + 16) = v46 + 5;
          }
          v46[6] = (uint64_t)v73;
          llvm::IRBuilderBase *v73 = v49;
        }
        char v48 = 1;
        goto LABEL_88;
      }
      int v84 = 0;
      int64_t v85 = (unint64_t)(v70 + 63) >> 6;
      do
      {
        BOOL v712 = v85-- < 1;
        if (v712) {
          break;
        }
        unint64_t v86 = *(void *)(*(void *)(v68 + 24) + 8 * v85);
        v84 += __clz(v86);
      }
      while (!v86);
      int v87 = v70 | 0xFFFFFFC0;
      if ((v70 & 0x3F) == 0) {
        int v87 = 0;
      }
      uint64_t v2 = v62;
      if (v84 + v87 != v70) {
        goto LABEL_72;
      }
LABEL_88:
      if (v50 != v53)
      {
        uint64_t v77 = *(void *)(v2 + 24);
        unsigned int v78 = (llvm::CastInst *)*v49;
        LOWORD(v872) = 257;
        int v79 = sub_1CBF56614(v77, v78, (llvm::Type ***)v53, (llvm::Type *)1, (uint64_t)&v870, v37);
        if (*v49)
        {
          *(void *)v46[6] = v46[5];
          uint64_t v80 = v46[5];
          if (v80) {
            *(void *)(v80 + 16) = v46[6];
          }
        }
        uint64_t *v49 = (uint64_t)v79;
        if (v79)
        {
          uint64_t v83 = *((void *)v79 + 1);
          uint64_t v81 = (uint64_t **)((char *)v79 + 8);
          uint64_t v82 = v83;
          v46[5] = v83;
          if (v83) {
            *(void *)(v82 + 16) = v46 + 5;
          }
          v46[6] = (uint64_t)v81;
          *uint64_t v81 = v49;
        }
        sub_1CB8460E4((uint64_t)&v857);
        uint64_t v47 = v49 + 4;
        if (v49 + 4 == a2) {
          goto LABEL_115;
        }
        char v48 = 1;
        goto LABEL_99;
      }
LABEL_98:
      sub_1CB8460E4((uint64_t)&v857);
      uint64_t v47 = v49 + 4;
      if (v49 + 4 == a2)
      {
        uint64_t v6 = v842;
        if (v48) {
          goto LABEL_115;
        }
LABEL_116:
        int v89 = *(unsigned __int8 *)(v6 + 16);
        if (v89 != 83)
        {
          unint64_t v91 = (void *)v2;
          uint64_t v94 = (llvm::Value *)v6;
          uint64_t v90 = v846;
          goto LABEL_149;
        }
        uint64_t v90 = v846;
        unint64_t v91 = (void *)v2;
        if (!v6)
        {
          uint64_t v94 = 0;
          goto LABEL_149;
        }
        int v92 = *(_DWORD *)(v6 + 20);
        if ((v92 & 0x40000000) != 0) {
          unsigned int v93 = *(uint64_t **)(v6 - 8);
        }
        else {
          unsigned int v93 = (uint64_t *)(v6 - 32 * (v92 & 0x7FFFFFF));
        }
        unsigned int v88 = 0;
        uint64_t v95 = *v93;
        if (*(unsigned char *)(v95 + 16) == 62) {
          int v96 = (uint64_t *)v95;
        }
        else {
          int v96 = 0;
        }
        if (v96) {
          BOOL v97 = v96 == a2;
        }
        else {
          BOOL v97 = 1;
        }
        if (v97) {
          goto LABEL_339;
        }
        if ((v92 & 0x40000000) != 0)
        {
          uint64_t v99 = *(void *)(v6 - 8);
          uint64_t v98 = v92 & 0x7FFFFFF;
        }
        else
        {
          uint64_t v98 = v92 & 0x7FFFFFF;
          uint64_t v99 = v6 - 32 * v98;
        }
        if (v98 != 1)
        {
          int v114 = (uint64_t *)(v99 + 32 * v98);
          unsigned int v115 = (uint64_t *)(v99 + 32);
          unsigned int v116 = -1;
          uint64_t v843 = v6;
          do
          {
            unsigned int v88 = 0;
            uint64_t v117 = *v115;
            if (!*v115 || *(unsigned char *)(v117 + 16) != 62) {
              goto LABEL_339;
            }
            uint64_t v118 = *((_DWORD *)v96 + 5) & 0x7FFFFFF;
            if (v118 != (*(_DWORD *)(v117 + 20) & 0x7FFFFFF)) {
              goto LABEL_338;
            }
            if ((uint64_t *)v117 == a2 || v96[8] != *(void *)(v117 + 64)) {
              goto LABEL_338;
            }
            if (v118)
            {
              unint64_t v120 = 0;
              TypeAtIndex = 0;
              uint64_t v122 = *v115;
              uint64_t v123 = v96;
              do
              {
                uint64_t v124 = (llvm::Type *)v123[-4 * (*((_DWORD *)v96 + 5) & 0x7FFFFFF)];
                uint64_t v125 = *(llvm::Type **)(v122 - 32 * (*(_DWORD *)(v117 + 20) & 0x7FFFFFF));
                if (*(void *)v124 != *(void *)v125) {
                  goto LABEL_338;
                }
                if (v124 != v125)
                {
                  if (v116 != -1 || v120 > 1 && *((unsigned char *)TypeAtIndex + 8) == 16) {
                    goto LABEL_338;
                  }
                  unsigned int v116 = v120;
                }
                if (v120)
                {
                  if (v120 == 1) {
                    TypeAtIndex = (llvm::GetElementPtrInst *)v96[8];
                  }
                  else {
                    TypeAtIndex = (llvm::GetElementPtrInst *)llvm::GetElementPtrInst::getTypeAtIndex(TypeAtIndex, v124, v36);
                  }
                }
                ++v120;
                v123 += 4;
                v122 += 32;
              }
              while (v118 != v120);
            }
            v115 += 4;
            uint64_t v90 = v846;
          }
          while (v115 != v114);
          if (v116 == -1) {
            goto LABEL_134;
          }
          uint64_t v126 = *(void *)(v843 + 8);
          if (v126 && !*(void *)(v126 + 8))
          {
            uint64_t v127 = v96;
            uint64_t v94 = (llvm::Value *)llvm::Instruction::clone((llvm::Instruction *)v96);
            uint64_t v128 = v91[3];
            *(void *)v874 = v128;
            *(_OWORD *)&v874[8] = *(_OWORD *)(v128 + 48);
            uint64_t v129 = *(unsigned int *)(v128 + 8);
            if (v129)
            {
              v764 = (void *)(*(void *)v128 + 8);
              uint64_t v765 = 16 * v129;
              while (*((_DWORD *)v764 - 2))
              {
                v764 += 2;
                v765 -= 16;
                if (!v765) {
                  goto LABEL_189;
                }
              }
              *(void *)&v874[24] = *v764;
              if (*(void *)&v874[24])
              {
                llvm::MetadataTracking::track((uint64_t)&v874[24], *(unsigned __int8 **)&v874[24], 2);
                uint64_t v128 = v91[3];
              }
            }
            else
            {
LABEL_189:
              *(void *)&v874[24] = 0;
            }
            *(void *)(v128 + 48) = *(void *)(v843 + 40);
            *(void *)(v128 + 56) = v843 + 24;
            uint64_t v130 = *(unsigned __int8 **)(v843 + 48);
            v861 = v130;
            if (v130)
            {
              llvm::MetadataTracking::track((uint64_t)&v861, v130, 2);
              uint64_t v131 = (uint64_t)v861;
            }
            else
            {
              uint64_t v131 = 0;
            }
            sub_1CB8461A4(v128, 0, v131);
            if (v861)
            {
              int v694 = *v861;
              if ((v694 - 4) > 0x1E)
              {
                if ((v694 - 3) >= 0xFFFFFFFE) {
                  v753 = v861;
                }
                else {
                  v753 = 0;
                }
                if ((v694 - 3) < 0xFFFFFFFE)
                {
                  if (v694 == 3) {
                    *((void *)v861 + 1) = 0;
                  }
                  goto LABEL_193;
                }
                unint64_t v696 = (unint64_t)(v753 + 8);
              }
              else
              {
                if ((v861[1] & 0x7F) != 2 && !*((_DWORD *)v861 + 3)) {
                  goto LABEL_193;
                }
                uint64_t v695 = *((void *)v861 + 2);
                if ((v695 & 4) == 0) {
                  goto LABEL_193;
                }
                unint64_t v696 = v695 & 0xFFFFFFFFFFFFFFF8;
                if (!v696) {
                  goto LABEL_193;
                }
              }
              *(void *)&long long v870 = &v861;
              sub_1CC5FA668(v696 + 16, &v870);
            }
LABEL_193:
            uint64_t v132 = v91[3];
            uint64_t v133 = *(void *)v127[4 * v116 + -4 * (*((_DWORD *)v127 + 5) & 0x7FFFFFF)];
            int v134 = *(_DWORD *)(v843 + 20) & 0x7FFFFFF;
            LOWORD(v872) = 257;
            uint64_t v135 = sub_1CB93113C(v132, v133, v134, (uint64_t)&v870);
            uint64_t v136 = *(void *)v874;
            if (*(void *)&v874[8])
            {
              sub_1CBF5385C(*(uint64_t *)v874, *(uint64_t *)&v874[8], *(uint64_t *)&v874[16]);
              uint64_t v136 = *(void *)v874;
            }
            else
            {
              *(void *)(*(void *)v874 + 48) = 0;
              *(void *)(v136 + 56) = 0;
            }
            v861 = *(unsigned __int8 **)&v874[24];
            if (*(void *)&v874[24])
            {
              llvm::MetadataTracking::track((uint64_t)&v861, *(unsigned __int8 **)&v874[24], 2);
              uint64_t v615 = (uint64_t)v861;
            }
            else
            {
              uint64_t v615 = 0;
            }
            sub_1CB8461A4(v136, 0, v615);
            if (v861)
            {
              int v766 = *v861;
              if ((v766 - 4) > 0x1E)
              {
                if ((v766 - 3) >= 0xFFFFFFFE) {
                  v779 = v861;
                }
                else {
                  v779 = 0;
                }
                if ((v766 - 3) < 0xFFFFFFFE)
                {
                  if (v766 == 3) {
                    *((void *)v861 + 1) = 0;
                  }
                  goto LABEL_723;
                }
                unint64_t v768 = (unint64_t)(v779 + 8);
              }
              else
              {
                if ((v861[1] & 0x7F) != 2 && !*((_DWORD *)v861 + 3)) {
                  goto LABEL_723;
                }
                uint64_t v767 = *((void *)v861 + 2);
                if ((v767 & 4) == 0) {
                  goto LABEL_723;
                }
                unint64_t v768 = v767 & 0xFFFFFFFFFFFFFFF8;
                if (!v768) {
                  goto LABEL_723;
                }
              }
              *(void *)&long long v870 = &v861;
              sub_1CC5FA668(v768 + 16, &v870);
            }
LABEL_723:
            if (*(void *)&v874[24])
            {
              int v769 = **(unsigned char **)&v874[24];
              if ((v769 - 4) > 0x1E)
              {
                if ((v769 - 3) >= 0xFFFFFFFE) {
                  uint64_t v780 = *(void *)&v874[24];
                }
                else {
                  uint64_t v780 = 0;
                }
                if ((v769 - 3) < 0xFFFFFFFE)
                {
                  if (v769 == 3) {
                    *(void *)(*(void *)&v874[24] + 8) = 0;
                  }
                  goto LABEL_724;
                }
                unint64_t v771 = v780 + 8;
              }
              else
              {
                if ((*(unsigned char *)(*(void *)&v874[24] + 1) & 0x7F) != 2 && !*(_DWORD *)(*(void *)&v874[24] + 12)) {
                  goto LABEL_724;
                }
                uint64_t v770 = *(void *)(*(void *)&v874[24] + 16);
                if ((v770 & 4) == 0) {
                  goto LABEL_724;
                }
                unint64_t v771 = v770 & 0xFFFFFFFFFFFFFFF8;
                if (!v771) {
                  goto LABEL_724;
                }
              }
              *(void *)&long long v870 = &v874[24];
              sub_1CC5FA668(v771 + 16, &v870);
            }
LABEL_724:
            uint64_t v837 = v116;
            uint64_t v616 = v843;
            int v617 = *(_DWORD *)(v843 + 20);
            if ((v617 & 0x40000000) != 0)
            {
              uint64_t v619 = *(uint64_t **)(v843 - 8);
              uint64_t v618 = v617 & 0x7FFFFFF;
            }
            else
            {
              uint64_t v618 = v617 & 0x7FFFFFF;
              uint64_t v619 = (uint64_t *)(v843 - 32 * v618);
            }
            if (v618)
            {
              uint64_t v620 = 32 * v116;
              v621 = &v619[4 * v618];
              v835 = v621;
              uint64_t v836 = v620;
              do
              {
                uint64_t v622 = *v619;
                int v623 = *(_DWORD *)(*v619 + 20);
                if ((v623 & 0x40000000) != 0) {
                  uint64_t v624 = *(void *)(v622 - 8);
                }
                else {
                  uint64_t v624 = v622 - 32 * (v623 & 0x7FFFFFF);
                }
                int v625 = *(_DWORD *)(v616 + 20);
                if ((v625 & 0x40000000) != 0) {
                  uint64_t v626 = *(void *)(v616 - 8);
                }
                else {
                  uint64_t v626 = v616 - 32 * (v625 & 0x7FFFFFF);
                }
                uint64_t v627 = *(void *)(v624 + v620);
                uint64_t v628 = *(void *)(v626
                                 + 32 * *(unsigned int *)(v616 + 60)
                                 + 8 * (((unint64_t)v619 - v626) >> 5));
                int v629 = *((_DWORD *)v135 + 5);
                uint64_t v630 = v629 & 0x7FFFFFF;
                if ((v629 & 0x7FFFFFF) == *((_DWORD *)v135 + 15))
                {
                  unsigned int v643 = v630 + (v630 >> 1);
                  if (v643 <= 2) {
                    uint64_t v644 = 2;
                  }
                  else {
                    uint64_t v644 = v643;
                  }
                  *((_DWORD *)v135 + 15) = v644;
                  if ((v629 & 0x40000000) != 0) {
                    uint64_t v645 = (uint64_t *)*((void *)v135 - 1);
                  }
                  else {
                    uint64_t v645 = (uint64_t *)((char *)v135 - 32 * v630);
                  }
                  long long __p = v645;
                  int v646 = operator new(40 * v644);
                  *((void *)v135 - 1) = v646;
                  uint64_t v647 = v646;
                  do
                  {
                    *uint64_t v647 = 0;
                    v647[1] = 0;
                    v647[2] = 0;
                    v647[3] = v135;
                    v647 += 4;
                  }
                  while (v647 != &v646[4 * v644]);
                  int v648 = *((_DWORD *)v135 + 5);
                  if ((v648 & 0x40000000) != 0) {
                    uint64_t v649 = (uint64_t)v646;
                  }
                  else {
                    uint64_t v649 = (uint64_t)v135 - 32 * (v648 & 0x7FFFFFF);
                  }
                  sub_1CC5E4108((uint64_t)&v870, __p, &__p[4 * v630], v649);
                  if (v630)
                  {
                    memmove((void *)(v649 + 32 * v644), &__p[4 * v630], 8 * v630);
                    uint64_t v650 = 4 * v630;
                    do
                    {
                      v651 = &__p[v650];
                      if (__p[v650 - 4])
                      {
                        *(void *)*(v651 - 2) = *(v651 - 3);
                        uint64_t v652 = *(v651 - 3);
                        if (v652) {
                          *(void *)(v652 + 16) = *(v651 - 2);
                        }
                      }
                      v650 -= 4;
                    }
                    while (v650 * 8);
                  }
                  operator delete(__p);
                  int v629 = *((_DWORD *)v135 + 5);
                  v621 = v835;
                  uint64_t v620 = v836;
                }
                uint64_t v631 = (v629 + 1) & 0x7FFFFFF;
                *((_DWORD *)v135 + 5) = v629 & 0xF8000000 | (v629 + 1) & 0x7FFFFFF;
                if ((v629 & 0x40000000) != 0) {
                  char v632 = (char *)*((void *)v135 - 1);
                }
                else {
                  char v632 = (char *)v135 - 32 * v631;
                }
                uint64_t v633 = (v631 - 1);
                size_t v634 = &v632[32 * v633];
                if (*(void *)v634)
                {
                  **((void **)v634 + 2) = *((void *)v634 + 1);
                  uint64_t v642 = *((void *)v634 + 1);
                  if (v642) {
                    *(void *)(v642 + 16) = *((void *)v634 + 2);
                  }
                }
                *(void *)size_t v634 = v627;
                if (v627)
                {
                  uint64_t v637 = *(void *)(v627 + 8);
                  uint64_t v636 = (char **)(v627 + 8);
                  uint64_t v635 = v637;
                  uint64_t v638 = &v632[32 * v633];
                  *((void *)v638 + 1) = v637;
                  if (v637) {
                    *(void *)(v635 + 16) = v638 + 8;
                  }
                  *((void *)v638 + 2) = v636;
                  *uint64_t v636 = v634;
                }
                int v639 = *((_DWORD *)v135 + 5);
                uint64_t v640 = v639 & 0x7FFFFFF;
                if ((v639 & 0x40000000) != 0) {
                  v641 = (char *)*((void *)v135 - 1);
                }
                else {
                  v641 = (char *)v135 - 32 * v640;
                }
                uint64_t v616 = v843;
                *(void *)&v641[32 * *((unsigned int *)v135 + 15) + 8 * (v640 - 1)] = v628;
                v619 += 4;
              }
              while (v619 != v621);
            }
            v653 = (void *)((char *)v94 - 32 * (*((_DWORD *)v94 + 5) & 0x7FFFFFF));
            v654 = (llvm::Instruction **)&v653[4 * v837];
            if (*v654)
            {
              *(void *)v654[2] = v654[1];
              int v655 = v654[1];
              if (v655) {
                *((void *)v655 + 2) = v654[2];
              }
            }
            llvm::PointerType *v654 = v135;
            if (v135)
            {
              uint64_t v658 = *((void *)v135 + 1);
              uint64_t v657 = (llvm::Instruction ***)((char *)v135 + 8);
              uint64_t v656 = v658;
              unsigned int v659 = &v653[4 * v837];
              v659[1] = v658;
              if (v658) {
                *(void *)(v656 + 16) = v659 + 1;
              }
              v659[2] = v657;
              *uint64_t v657 = v654;
            }
            uint64_t v90 = v846;
            goto LABEL_135;
          }
          goto LABEL_338;
        }
LABEL_134:
        uint64_t v94 = (llvm::Value *)llvm::Instruction::clone((llvm::Instruction *)v96);
LABEL_135:
        int v100 = (void **)a2[5];
        uint64_t v101 = (uint64_t *)(v100 + 5);
        unint64_t v102 = v100[6];
        if (v102 != (uint64_t *)(v100 + 5))
        {
          while (1)
          {
            unsigned int v103 = v102 - 3;
            if (!v102) {
              unsigned int v103 = 0;
            }
            if (*((unsigned char *)v103 + 16) != 83) {
              break;
            }
            unint64_t v102 = (uint64_t *)v102[1];
            if (v102 == v101) {
              goto LABEL_147;
            }
          }
          unsigned int v104 = *((unsigned __int8 *)v102 - 8) - 38;
          BOOL v712 = v104 > 0x38;
          uint64_t v105 = (1 << v104) & 0x100060000000001;
          if (v712 || v105 == 0) {
            uint64_t v101 = v102;
          }
          else {
            uint64_t v101 = (uint64_t *)v102[1];
          }
        }
LABEL_147:
        *((void *)v94 + 5) = v100;
        *((_WORD *)v100 + 9) &= ~0x8000u;
        if ((*((unsigned char *)v94 + 23) & 0x10) != 0)
        {
          __int16 v154 = v100[7];
          if (v154)
          {
            BOOL v155 = (llvm::ValueSymbolTable *)v154[13];
            if (v155) {
              llvm::ValueSymbolTable::reinsertValue(v155, v94);
            }
          }
        }
        uint64_t v107 = *v101;
        *((void *)v94 + 4) = v101;
        *((void *)v94 + 3) = v107;
        *(void *)(v107 + 8) = (char *)v94 + 24;
        uint64_t *v101 = (uint64_t)v94 + 24;
        sub_1CC9D28DC((uint64_t)v91, (uint64_t)a2, 0, (uint64_t)v94);
        int v89 = *((unsigned __int8 *)v94 + 16);
LABEL_149:
        if (v89 != 62 && (v89 != 5 || *((_WORD *)v94 + 9) != 34)) {
          goto LABEL_278;
        }
        BOOL v18 = v89 == 62;
        uint64_t v108 = 32;
        if (v18) {
          uint64_t v108 = 72;
        }
        if (*(void *)((char *)v94 + v108) != a2[8] || !sub_1CC9D9080((uint64_t)a2, (uint64_t)v94)) {
          goto LABEL_278;
        }
        int v109 = *((_DWORD *)v94 + 5);
        if ((v109 & 0x7FFFFFF) != 2 || (*((_DWORD *)a2 + 5) & 0x7FFFFFF) != 2)
        {
          uint64_t v111 = (uint64_t)v91;
          goto LABEL_197;
        }
        uint64_t v110 = *((void *)v94 + 1);
        uint64_t v111 = (uint64_t)v91;
        if (!v110 || *(void *)(v110 + 8)) {
          goto LABEL_197;
        }
        uint64_t v112 = *(a2 - 4);
        int v113 = (v109 & 0x40000000) != 0 ? (llvm::Value *)*((void *)v94 - 1) : (llvm::Value *)((char *)v94 - 64);
        uint64_t v507 = (uint64_t *)v91[20];
        if (!v507) {
          goto LABEL_197;
        }
        int v508 = *((_DWORD *)v507 + 4);
        if (!v508) {
          goto LABEL_197;
        }
        uint64_t v509 = *((void *)v113 + 4);
        v510 = (void **)a2[5];
        uint64_t v511 = *v507;
        unsigned int v512 = v508 - 1;
        uint64_t v513 = ((v510 >> 4) ^ (v510 >> 9)) & (v508 - 1);
        v514 = *(void ***)(v511 + 16 * v513);
        if (v510 != v514)
        {
          int v515 = 1;
          while (v514 != (void **)-4096)
          {
            int v516 = v513 + v515++;
            uint64_t v513 = v516 & v512;
            v514 = *(void ***)(v511 + 16 * v513);
            if (v510 == v514) {
              goto LABEL_599;
            }
          }
          goto LABEL_197;
        }
LABEL_599:
        uint64_t v517 = v511 + 16 * v513;
        uint64_t v518 = *(void *)(v517 + 8);
        if (!v518) {
          goto LABEL_197;
        }
        if (!llvm::Loop::isLoopInvariant(*(void *)(v517 + 8), *(a2 - 4)))
        {
          int v109 = *((_DWORD *)v94 + 5);
          goto LABEL_197;
        }
        uint64_t v519 = v111;
        BOOL isLoopInvariant = llvm::Loop::isLoopInvariant(v518, v509);
        int v109 = *((_DWORD *)v94 + 5);
        if (isLoopInvariant)
        {
LABEL_197:
          if ((v109 & 0x40000000) != 0) {
            uint64_t v137 = (uint64_t *)*((void *)v94 - 1);
          }
          else {
            uint64_t v137 = (uint64_t *)((char *)v94 - 32 * (v109 & 0x7FFFFFF));
          }
          uint64_t v138 = *v137;
          int v139 = *(unsigned __int8 *)(*v137 + 16);
          if ((v139 == 62 || v139 == 5 && *(_WORD *)(v138 + 18) == 34) && (*(_DWORD *)(v138 + 20) & 0x7FFFFFF) == 2)
          {
            unint64_t v91 = (void *)v111;
            if (!sub_1CC9D9080((uint64_t)v94, v138))
            {
              int v109 = *((_DWORD *)v94 + 5);
              goto LABEL_206;
            }
LABEL_278:
            int v206 = v848;
            if ((*((_DWORD *)a2 + 5) & 0x7FFFFFF) == 2 && v848 != 19)
            {
              uint64_t v207 = *(void *)*(a2 - 8);
              unsigned int v208 = *(_DWORD *)(v207 + 8);
              if ((v208 & 0xFE) == 0x12) {
                unsigned int v208 = *(_DWORD *)(**(void **)(v207 + 16) + 8);
              }
              uint64_t v209 = *(void *)*(a2 - 4);
              if ((*(_DWORD *)(v209 + 8) & 0xFE) == 0x12) {
                uint64_t v209 = **(void **)(v209 + 16);
              }
              int PrimitiveSizeInBits = llvm::Type::getPrimitiveSizeInBits((llvm::Type *)v209);
              uint64_t v211 = v91[10];
              if (v208 < 0x100) {
                goto LABEL_293;
              }
              unsigned int v212 = v208 >> 8;
              uint64_t v213 = *(unsigned int *)(v211 + 240);
              uint64_t v214 = *(void *)(v211 + 232);
              if (v213)
              {
                uint64_t v214 = *(void *)(v211 + 232);
                unint64_t v215 = *(unsigned int *)(v211 + 240);
                do
                {
                  unint64_t v216 = v215 >> 1;
                  uint64_t v217 = v214 + 16 * (v215 >> 1);
                  unsigned int v218 = *(_DWORD *)(v217 + 8);
                  uint64_t v219 = v217 + 16;
                  v215 += ~(v215 >> 1);
                  if (v218 < v212) {
                    uint64_t v214 = v219;
                  }
                  else {
                    unint64_t v215 = v216;
                  }
                }
                while (v215);
              }
              if (v214 == *(void *)(v211 + 232) + 16 * v213 || *(_DWORD *)(v214 + 8) != v212) {
LABEL_293:
              }
                uint64_t v214 = *(void *)(v211 + 232);
              if (*(_DWORD *)(v214 + 12) == PrimitiveSizeInBits)
              {
                unint64_t v220 = (unint64_t)(sub_1CB83544C(v91[10], v845) + 7) >> 3;
                char v221 = llvm::DataLayout::getAlignment((llvm::DataLayout *)v211, (llvm::Type *)v845, 1);
                uint64_t v222 = ((1 << v221) + v220 - 1) & -(1 << v221);
                *(void *)v874 = 0;
                v861 = 0;
                uint64_t v223 = *((_DWORD *)a2 + 5) & 0x7FFFFFF;
                unsigned int v224 = (llvm **)&a2[-4 * v223];
                uint64_t v225 = v224[4];
                if (v222 == 1)
                {
                  v861 = (unsigned __int8 *)v224[4];
                  v864 = 0;
                  v226 = *v224;
                  goto LABEL_328;
                }
                uint64_t v227 = -v223;
                *(void *)&long long v870 = &v861;
                *((void *)&v870 + 1) = v874;
                int v228 = *((unsigned __int8 *)v225 + 16);
                if (v228 == 5)
                {
                  if (*((_WORD *)v225 + 9) != 27) {
                    goto LABEL_311;
                  }
                  uint64_t v234 = (unsigned __int8 **)((char *)v225 - 32 * (*((_DWORD *)v225 + 5) & 0x7FFFFFF));
                  if (!*v234) {
                    goto LABEL_311;
                  }
                  v861 = *v234;
                  char v581 = sub_1CD497E24((void **)&v870 + 1, (uint64_t)v234[4]);
                  int v582 = *((_DWORD *)a2 + 5);
                  if ((v581 & 1) == 0)
                  {
                    uint64_t v227 = -(uint64_t)(v582 & 0x7FFFFFF);
                    goto LABEL_311;
                  }
                  LOBYTE(v233) = v874[0];
                  uint64_t v227 = -(uint64_t)(v582 & 0x7FFFFFF);
LABEL_307:
                  v864 = 0;
                  if (v222 == 1 << (char)v233) {
                    goto LABEL_327;
                  }
                }
                else
                {
                  if (v228 != 55 || !*((void *)v225 - 8)) {
                    goto LABEL_311;
                  }
                  v861 = (unsigned __int8 *)*((void *)v225 - 8);
                  uint64_t v229 = *((void *)v225 - 4);
                  if (!v229 || *(unsigned char *)(v229 + 16) != 16) {
                    goto LABEL_311;
                  }
                  uint64_t v231 = (void *)(v229 + 24);
                  uint64_t v232 = *(unsigned int *)(v229 + 32);
                  if (v232 < 0x41)
                  {
LABEL_306:
                    uint64_t v233 = (void *)*v231;
                    *(void *)v874 = v233;
                    goto LABEL_307;
                  }
                  int v818 = 0;
                  int64_t v819 = (unint64_t)(v232 + 63) >> 6;
                  do
                  {
                    BOOL v712 = v819-- < 1;
                    if (v712) {
                      break;
                    }
                    unint64_t v820 = *(void *)(*v231 + 8 * v819);
                    v818 += __clz(v820);
                  }
                  while (!v820);
                  int v821 = v232 | 0xFFFFFFC0;
                  if ((v232 & 0x3F) == 0) {
                    int v821 = 0;
                  }
                  if ((v232 - v818 - v821) <= 0x40)
                  {
                    uint64_t v231 = (void *)*v231;
                    goto LABEL_306;
                  }
LABEL_311:
                  std::string::size_type v235 = (void **)a2[4 * v227 + 4];
                  *(void *)&long long v870 = &v861;
                  *((void *)&v870 + 1) = v874;
                  int v236 = *((unsigned __int8 *)v235 + 16);
                  if (v236 != 48)
                  {
                    if (v236 == 5) {
                      LOBYTE(v227) = *((_WORD *)v235 + 9) == 20
                    }
                                  && (uint64_t v242 = (unsigned __int8 **)&v235[-4 * (*((_DWORD *)v235 + 5) & 0x7FFFFFF)], *v242)
                                  && (v861 = *v242, (sub_1CD497E24((void **)&v870 + 1, (uint64_t)v242[4]) & 1) != 0);
                    int v241 = (v236 == 5) & v227;
                    uint64_t v227 = -(uint64_t)(*((_DWORD *)a2 + 5) & 0x7FFFFFF);
                    goto LABEL_325;
                  }
                  if (!*(v235 - 8)) {
                    goto LABEL_336;
                  }
                  v861 = (unsigned __int8 *)*(v235 - 8);
                  uint64_t v237 = (uint64_t)*(v235 - 4);
                  if (!v237 || *(unsigned char *)(v237 + 16) != 16) {
                    goto LABEL_336;
                  }
                  BOOL v239 = (void *)(v237 + 24);
                  uint64_t v240 = *(unsigned int *)(v237 + 32);
                  if (v240 < 0x41)
                  {
LABEL_319:
                    *(void *)v874 = *v239;
                    int v241 = 1;
LABEL_325:
                    v864 = 0;
                    if (!v241 || v222 != *(void *)v874) {
                      goto LABEL_336;
                    }
LABEL_327:
                    v226 = (llvm *)a2[4 * v227];
LABEL_328:
                    int v243 = v861;
                    *(void *)&long long v870 = &v864;
                    *((void *)&v870 + 1) = v226;
                    int v244 = v861[16];
                    if (v244 == 5)
                    {
                      if (*((_WORD *)v861 + 9) != 15
                        || !sub_1CC03F934((void **)&v870, *(void *)&v861[-32 * (*((_DWORD *)v861 + 5) & 0x7FFFFFF)])|| !sub_1CD497D64((void *)&v870 + 1, *(void *)&v243[-32 * (*((_DWORD *)v243 + 5) & 0x7FFFFFF) + 32]))
                      {
                        goto LABEL_336;
                      }
                    }
                    else if (v244 != 43 {
                           || !sub_1CC03F934((void **)&v870, *((void *)v861 - 8))
                    }
                           || (sub_1CC0452A0((void *)&v870 + 1, *((void *)v243 - 4)) & 1) == 0)
                    {
                      goto LABEL_336;
                    }
                    UnderlyingObject = llvm::getUnderlyingObject(v226, (const llvm::Value *)6);
                    if (UnderlyingObject != llvm::getUnderlyingObject(v864, (const llvm::Value *)6)) {
                      goto LABEL_336;
                    }
                    BOOL v247 = v864;
                    LOWORD(v872) = 257;
                    int v248 = v90;
LABEL_789:
                    uint64_t PointerBitCastOrAddrSpaceCast = (uint64_t)llvm::CastInst::CreatePointerBitCastOrAddrSpaceCast(v247, v248, (const char **)&v870, 0, v246);
LABEL_790:
                    unsigned int v88 = (uint64_t ***)PointerBitCastOrAddrSpaceCast;
LABEL_339:
                    BOOL v13 = (llvm::UndefValue **)v88;
                    break;
                  }
                  int v814 = 0;
                  int64_t v815 = (unint64_t)(v240 + 63) >> 6;
                  do
                  {
                    BOOL v712 = v815-- < 1;
                    if (v712) {
                      break;
                    }
                    unint64_t v816 = *(void *)(*v239 + 8 * v815);
                    v814 += __clz(v816);
                  }
                  while (!v816);
                  int v817 = v240 | 0xFFFFFFC0;
                  if ((v240 & 0x3F) == 0) {
                    int v817 = 0;
                  }
                  if ((v240 - v814 - v817) <= 0x40)
                  {
                    BOOL v239 = (void *)*v239;
                    goto LABEL_319;
                  }
                }
LABEL_336:
                int v206 = v848;
              }
            }
            if ((*((_DWORD *)v90 + 2) & 0xFE) == 0x12) {
              goto LABEL_338;
            }
            uint64_t v250 = llvm::Value::stripPointerCasts(v94);
            uint64_t v252 = (unsigned __int8 *)v845;
            uint64_t v840 = (uint64_t)v91;
            if (v250 == v94) {
              goto LABEL_490;
            }
            uint64_t v253 = (uint64_t *)v250;
            uint64_t v254 = *(void *)v250;
            if (!*(void *)(*(void *)v250 + 24)) {
              goto LABEL_490;
            }
            uint64_t v255 = (uint64_t)v91;
            uint64_t v256 = **(void **)(v254 + 16);
            uint64_t v257 = *((_DWORD *)a2 + 5) & 0x7FFFFFF;
            int v258 = &a2[-4 * v257];
            v260 = v258 + 4;
            uint64_t v259 = (void **)v258[4];
            if (v259) {
              BOOL v261 = *((unsigned char *)v259 + 16) == 16;
            }
            else {
              BOOL v261 = 0;
            }
            if (!v261) {
              goto LABEL_352;
            }
            uint64_t v262 = *((unsigned int *)v259 + 8);
            if (v262 <= 0x40)
            {
              if (v259[3]) {
                goto LABEL_352;
              }
LABEL_406:
              if (!v845 || *(unsigned char *)(v845 + 8) != 17) {
                goto LABEL_490;
              }
              uint64_t v339 = *(void *)(v845 + 24);
              if (v339 != v256)
              {
                if (*(unsigned char *)(v256 + 8) == 17 && v256 && v339 == *(void *)(v256 + 24))
                {
                  uint64_t v340 = *(void *)*v258;
                  unsigned int v341 = *(_DWORD *)(v340 + 8);
                  if ((v341 & 0xFE) == 0x12) {
                    unsigned int v341 = *(_DWORD *)(**(void **)(v340 + 16) + 8);
                  }
                  if ((v341 ^ *(_DWORD *)(v254 + 8)) <= 0xFF)
                  {
                    a2[8] = v256;
                    uint64_t PointerBitCastOrAddrSpaceCast = sub_1CC9D28DC((uint64_t)v91, (uint64_t)a2, 0, (uint64_t)v250);
                    goto LABEL_790;
                  }
                  *(void *)&long long v870 = &v871;
                  *((void *)&v870 + 1) = 0x800000000;
                  unint64_t v567 = (char *)a2 - (char *)v260;
                  if ((unint64_t)((char *)a2 - (char *)v260) >= 0x101) {
                    llvm::SmallVectorBase<unsigned int>::grow_pod();
                  }
                  uint64_t v568 = (uint64_t *)&v871;
                  if (v260 != a2)
                  {
                    v569 = &v871;
                    uint64_t v570 = 32 - 32 * v257;
                    do
                    {
                      *(void *)v569 = *(uint64_t *)((char *)a2 + v570);
                      v569 = (long long *)((char *)v569 + 8);
                      v570 += 32;
                    }
                    while (v570);
                    uint64_t v568 = (uint64_t *)v870;
                  }
                  uint64_t v571 = (v567 >> 5);
                  DWORD2(v870) = v567 >> 5;
                  v572 = (uint64_t *)v91[3];
                  if ((*((unsigned char *)a2 + 23) & 0x10) != 0)
                  {
                    uint64_t v573 = **(void **)*a2;
                    uint64_t v574 = *(void *)(v573 + 152);
                    uint64_t v575 = *(unsigned int *)(v573 + 168);
                    if (!v575) {
                      goto LABEL_780;
                    }
                    LODWORD(v576) = (v575 - 1) & ((a2 >> 4) ^ (a2 >> 9));
                    uint64_t v577 = (uint64_t **)(v574 + 16 * v576);
                    v578 = *v577;
                    if (*v577 != a2)
                    {
                      int v579 = 1;
                      while (v578 != (uint64_t *)-4096)
                      {
                        int v580 = v576 + v579++;
                        uint64_t v576 = v580 & (v575 - 1);
                        v578 = *(uint64_t **)(v574 + 16 * v576);
                        if (v578 == a2)
                        {
                          uint64_t v577 = (uint64_t **)(v574 + 16 * v576);
                          goto LABEL_781;
                        }
                      }
LABEL_780:
                      uint64_t v577 = (uint64_t **)(v574 + 16 * v575);
                    }
LABEL_781:
                    v661 = v577[1];
                    uint64_t v664 = *v661;
                    v663 = (char *)(v661 + 2);
                    uint64_t v662 = v664;
                    if ((*((unsigned char *)a2 + 17) & 2) == 0)
                    {
LABEL_782:
                      LOWORD(v875) = 261;
                      *(void *)v874 = v663;
                      *(void *)&v874[8] = v662;
                      uint64_t v665 = sub_1CC27CEC0(v572, v256, v253, v568, v571, (uint64_t)v874);
                      goto LABEL_842;
                    }
                  }
                  else
                  {
                    uint64_t v662 = 0;
                    v663 = &byte_1CFBCE98E;
                    if ((*((unsigned char *)a2 + 17) & 2) == 0) {
                      goto LABEL_782;
                    }
                  }
                  LOWORD(v875) = 261;
                  *(void *)v874 = v663;
                  *(void *)&v874[8] = v662;
                  uint64_t v665 = sub_1CC57EEA0(v572, v256, v253, v568, v571, (uint64_t)v874);
LABEL_842:
                  v697 = (llvm::Value *)v665;
                  uint64_t v698 = operator new(0x60uLL);
                  v698[13] = v698[13] & 0x38000000 | 1;
                  unsigned int v88 = (uint64_t ***)(v698 + 8);
                  *(void *)uint64_t v698 = 0;
                  *((void *)v698 + 1) = 0;
                  *((void *)v698 + 2) = 0;
                  *((void *)v698 + 3) = v698 + 8;
                  LOWORD(v875) = 257;
                  v551 = (const char **)v874;
                  v552 = (llvm::AddrSpaceCastInst *)(v698 + 8);
                  v553 = v697;
                  size_t v554 = v846;
LABEL_843:
                  llvm::AddrSpaceCastInst::AddrSpaceCastInst(v552, v553, v554, v551, 0);
                  goto LABEL_898;
                }
LABEL_490:
                int v403 = *((unsigned __int8 *)v94 + 16);
                char v404 = v94;
                if (v403 == 78)
                {
                  BOOL v405 = (llvm::Value *)*((void *)v94 - 4);
                  if (*((unsigned char *)v405 + 16) != 77) {
                    BOOL v405 = 0;
                  }
                  if (v405) {
                    char v404 = v405;
                  }
                  else {
                    char v404 = v94;
                  }
                  int v403 = *((unsigned __int8 *)v404 + 16);
                }
                if (v403 != 77) {
                  goto LABEL_529;
                }
                uint64_t v406 = *((void *)v404 - 4);
                uint64_t v407 = *(void *)v406;
                if (!*(void *)(*(void *)v406 + 24)) {
                  goto LABEL_529;
                }
                uint64_t v408 = **(void **)(v407 + 16);
                uint64_t v409 = a2;
                if ((*((_DWORD *)a2 + 5) & 0x7FFFFFF) != 3) {
                  goto LABEL_500;
                }
                uint64_t v477 = a2[8];
                int v478 = *(unsigned __int8 *)(v477 + 8);
                if (v478 == 17
                  && *(unsigned char *)(v408 + 8) == 18
                  && **(void **)(v477 + 16) == *(void *)(v408 + 24)
                  && *(void *)(v477 + 32) == *(_DWORD *)(v408 + 32))
                {
                  int v497 = *(llvm::DataLayout **)(v840 + 80);
                  unint64_t v498 = (unint64_t)(sub_1CB83544C((uint64_t)v497, a2[8]) + 7) >> 3;
                  BOOL v851 = v499 == 1;
                  char v500 = llvm::DataLayout::getAlignment(v497, (llvm::Type *)v477, 1);
                  uint64_t v501 = ((1 << v500) + v498 - 1) & -(1 << v500);
                  uint64_t v502 = sub_1CB83544C((uint64_t)v497, v408);
                  BOOL v504 = v503 == 1;
                  unint64_t v505 = (unint64_t)(v502 + 7) >> 3;
                  char v506 = llvm::DataLayout::getAlignment(v497, (llvm::Type *)v408, 1);
                  BOOL v18 = v501 == (((1 << v506) + v505 - 1) & -(1 << v506));
                  uint64_t v409 = a2;
                  if (!v18 || ((v851 ^ v504 ^ 1) & 1) == 0)
                  {
                    int v478 = *(unsigned __int8 *)(v477 + 8);
                    goto LABEL_572;
                  }
LABEL_578:
                  uint64_t v488 = *((_DWORD *)v409 + 5) & 0x7FFFFFF;
                  uint64_t v489 = (uint64_t)&v409[-4 * v488 + 4];
                  *(void *)&long long v870 = &v871;
                  *((void *)&v870 + 1) = 0x800000000;
                  unint64_t v490 = -(-32 * v488 + 32);
                  if (v490 >= 0x101) {
                    llvm::SmallVectorBase<unsigned int>::grow_pod();
                  }
                  uint64_t v491 = (uint64_t *)&v871;
                  if ((uint64_t *)v489 != a2)
                  {
                    uint64_t v492 = &v871;
                    uint64_t v493 = 32 - 32 * v488;
                    do
                    {
                      *(void *)uint64_t v492 = *(uint64_t *)((char *)a2 + v493);
                      uint64_t v492 = (long long *)((char *)v492 + 8);
                      v493 += 32;
                    }
                    while (v493);
                    uint64_t v491 = (uint64_t *)v870;
                  }
                  uint64_t v494 = (v490 >> 5);
                  DWORD2(v870) = v490 >> 5;
                  v495 = *(uint64_t **)(v840 + 24);
                  if ((*((unsigned char *)a2 + 17) & 2) != 0)
                  {
                    LOWORD(v875) = 257;
                    v496 = (int32x2_t ****)sub_1CC57EEA0(v495, v408, (uint64_t *)v406, v491, v494, (uint64_t)v874);
                  }
                  else
                  {
                    LOWORD(v875) = 257;
                    v496 = (int32x2_t ****)sub_1CC27CEC0(v495, v408, (uint64_t *)v406, v491, v494, (uint64_t)v874);
                  }
                  v827 = (llvm::Value *)v496;
                  llvm::Value::takeName(v496, (llvm::Value *)a2);
                  unsigned int v828 = *(_DWORD *)(*(void *)v827 + 8);
                  if ((v828 & 0xFE) == 0x12) {
                    unsigned int v828 = *(_DWORD *)(**(void **)(*(void *)v827 + 16) + 8);
                  }
                  uint64_t v829 = *(void *)a2[-4 * (*((_DWORD *)a2 + 5) & 0x7FFFFFF)];
                  int v830 = *(_DWORD *)(v829 + 8);
                  if ((v830 & 0xFE) == 0x12) {
                    int v830 = *(_DWORD *)(**(void **)(v829 + 16) + 8);
                  }
                  if ((v830 ^ v828) >= 0x100)
                  {
                    v831 = operator new(0x60uLL);
                    unsigned int v88 = (uint64_t ***)(v831 + 8);
                    v831[13] = v831[13] & 0x38000000 | 1;
                    *(void *)v831 = 0;
                    *((void *)v831 + 1) = 0;
                    *((void *)v831 + 2) = 0;
                    *((void *)v831 + 3) = v831 + 8;
                    v832 = (llvm::Type *)*a2;
                    LOWORD(v875) = 257;
                    llvm::AddrSpaceCastInst::AddrSpaceCastInst((llvm::AddrSpaceCastInst *)(v831 + 8), v827, v832, (const char **)v874, 0);
                  }
                  else
                  {
                    unsigned int v88 = (uint64_t ***)sub_1CC9D3C84(v840, (llvm::ValueAsMetadata *)a2, v827);
                  }
                  if ((long long *)v870 != &v871) {
                    free((void *)v870);
                  }
LABEL_528:
                  if (v88) {
                    goto LABEL_339;
                  }
LABEL_529:
                  if ((*((unsigned char *)a2 + 17) & 2) != 0) {
                    goto LABEL_857;
                  }
                  uint64_t v433 = *(void *)(v840 + 80);
                  unsigned int v434 = *(_DWORD *)(*(void *)v94 + 8);
                  if ((v434 & 0xFE) == 0x12) {
                    unsigned int v434 = *(_DWORD *)(**(void **)(*(void *)v94 + 16) + 8);
                  }
                  uint64_t v435 = (uint64_t ***)v841;
                  if (v434 < 0x100) {
                    goto LABEL_541;
                  }
                  unsigned int v436 = v434 >> 8;
                  uint64_t v437 = *(unsigned int *)(v433 + 240);
                  uint64_t v438 = *(void *)(v433 + 232);
                  if (v437)
                  {
                    uint64_t v438 = *(void *)(v433 + 232);
                    unint64_t v439 = *(unsigned int *)(v433 + 240);
                    do
                    {
                      unint64_t v440 = v439 >> 1;
                      uint64_t v441 = v438 + 16 * (v439 >> 1);
                      unsigned int v442 = *(_DWORD *)(v441 + 8);
                      uint64_t v443 = v441 + 16;
                      v439 += ~(v439 >> 1);
                      if (v442 < v436) {
                        uint64_t v438 = v443;
                      }
                      else {
                        unint64_t v439 = v440;
                      }
                    }
                    while (v439);
                  }
                  if (v438 == *(void *)(v433 + 232) + 16 * v437 || *(_DWORD *)(v438 + 8) != v436) {
LABEL_541:
                  }
                    uint64_t v438 = *(void *)(v433 + 232);
                  unsigned int v444 = *(_DWORD *)(v438 + 12);
                  *(_DWORD *)&v874[8] = v444;
                  if (v444 > 0x40) {
                    operator new[]();
                  }
                  *(void *)v874 = 0;
                  uint64_t v445 = llvm::Value::stripAndAccumulateConstantOffsets(v94, (llvm::DataLayout *)v433, (llvm::APInt *)v874, 0, 0, 0, v251);
                  if (!v445) {
                    goto LABEL_852;
                  }
                  size_t v447 = v445;
                  if (*((unsigned char *)v445 + 16) != 59) {
                    goto LABEL_852;
                  }
                  int v448 = *((_DWORD *)a2 + 5);
                  if ((v448 & 0x40000000) != 0)
                  {
                    v450 = (uint64_t *)*(a2 - 1);
                    uint64_t v449 = v448 & 0x7FFFFFF;
                  }
                  else
                  {
                    uint64_t v449 = v448 & 0x7FFFFFF;
                    v450 = &a2[-4 * v449];
                  }
                  uint64_t v451 = *(llvm::DataLayout **)(v840 + 80);
                  *(void *)&long long v870 = &v871;
                  *((void *)&v870 + 1) = 0x600000000;
                  unint64_t v452 = 32 * v449 - 32;
                  if (v452 >= 0xC1) {
                    llvm::SmallVectorBase<unsigned int>::grow_pod();
                  }
                  uint64_t v453 = (llvm::Constant **)&v871;
                  if (v449 != 1)
                  {
                    uint64_t v454 = v450 + 4;
                    v455 = &v871;
                    uint64_t v456 = 32 * v449 - 32;
                    do
                    {
                      uint64_t v457 = *v454;
                      v454 += 4;
                      *(void *)v455 = v457;
                      v455 = (long long *)((char *)v455 + 8);
                      v456 -= 32;
                    }
                    while (v456);
                    uint64_t v453 = (llvm::Constant **)v870;
                  }
                  uint64_t v435 = (uint64_t ***)v841;
                  DWORD2(v870) = v452 >> 5;
                  if (*((unsigned char *)a2 + 16) == 62) {
                    BOOL v458 = a2 + 8;
                  }
                  else {
                    BOOL v458 = a2 + 3;
                  }
                  int v459 = llvm::GEPOperator::accumulateConstantOffset(*v458, v453, (v452 >> 5), v451, (llvm::APInt *)v874, 0, v446);
                  if ((long long *)v870 == &v871)
                  {
                    if (v459) {
                      goto LABEL_557;
                    }
                    goto LABEL_852;
                  }
                  free((void *)v870);
                  if (!v459) {
                    goto LABEL_852;
                  }
LABEL_557:
                  unsigned int v460 = v874;
                  if (*(_DWORD *)&v874[8] >= 0x41u) {
                    unsigned int v460 = (void *)(*(void *)v874 + 8 * ((*(_DWORD *)&v874[8] - 1) >> 6));
                  }
                  if ((*v460 >> (v874[8] - 1)))
                  {
LABEL_852:
                    int v702 = 1;
                    goto LABEL_853;
                  }
                  unsigned int v461 = *(llvm::DataLayout **)(v840 + 80);
                  v462 = (llvm::Type *)*((void *)v447 + 8);
                  unint64_t v463 = (unint64_t)(sub_1CB83544C((uint64_t)v461, (uint64_t)v462) + 7) >> 3;
                  char v464 = llvm::DataLayout::getAlignment(v461, v462, 1);
                  uint64_t v465 = ((1 << v464) + v463 - 1) & -(1 << v464);
                  unint64_t v466 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v444;
                  if (!v444) {
                    unint64_t v466 = 0;
                  }
                  unint64_t v467 = v466 & v465;
                  uint64_t v435 = (uint64_t ***)v841;
                  if (*(_DWORD *)&v874[8] <= 0x40u)
                  {
                    if (*(void *)v874 <= v467) {
                      goto LABEL_564;
                    }
LABEL_849:
                    char v536 = 0;
LABEL_850:
                    if ((v536 & 1) == 0) {
                      goto LABEL_852;
                    }
                    int v702 = 0;
LABEL_853:
                    unsigned int v88 = v435;
                    if (*(_DWORD *)&v874[8] >= 0x41u && *(void *)v874) {
                      MEMORY[0x1D25D9CB0](*(void *)v874, 0x1000C8000313F17);
                    }
                    if (!v702) {
                      goto LABEL_339;
                    }
LABEL_857:
                    v703 = *(uint64_t **)(v840 + 24);
                    uint64_t v704 = *((_DWORD *)a2 + 5) & 0x7FFFFFF;
                    uint64_t v705 = &a2[-4 * v704];
                    if (v704 != 1)
                    {
                      unsigned int v706 = 1;
                      while (*(unsigned char *)(v705[4 * v706] + 16) == 16)
                      {
                        if (v704 == ++v706) {
                          goto LABEL_861;
                        }
                      }
                      goto LABEL_338;
                    }
LABEL_861:
                    unsigned int v88 = 0;
                    uint64_t v707 = *v705;
                    if (!*v705 || *(unsigned char *)(v707 + 16) != 85) {
                      goto LABEL_339;
                    }
                    int v708 = *(_DWORD *)(v707 + 20);
                    if ((v708 & 0x40000000) != 0) {
                      size_t v709 = *(uint64_t **)(v707 - 8);
                    }
                    else {
                      size_t v709 = (uint64_t *)(v707 - 32 * (v708 & 0x7FFFFFF));
                    }
                    uint64_t v710 = *v709;
                    if (!*v709
                      || ((v711 = v709[4]) != 0 ? (BOOL v712 = *(unsigned __int8 *)(v711 + 16) > 0x14u) : (BOOL v712 = 1),
                          v712
                       || ((uint64_t v713 = v709[8]) != 0 ? (v714 = *(unsigned __int8 *)(v713 + 16) > 0x14u) : (v714 = 1), v714)))
                    {
LABEL_338:
                      unsigned int v88 = 0;
                      goto LABEL_339;
                    }
                    *(void *)&long long v870 = &v871;
                    *((void *)&v870 + 1) = 0x400000000;
                    unint64_t v715 = -(-32 * v704 + 32);
                    if (v715 >= 0x81) {
                      llvm::SmallVectorBase<unsigned int>::grow_pod();
                    }
                    size_t v716 = (uint64_t *)&v871;
                    if (v705 + 4 != a2)
                    {
                      uint64_t v717 = &v871;
                      uint64_t v718 = 32 - 32 * v704;
                      do
                      {
                        *(void *)uint64_t v717 = *(uint64_t *)((char *)a2 + v718);
                        uint64_t v717 = (long long *)((char *)v717 + 8);
                        v718 += 32;
                      }
                      while (v718);
                      size_t v716 = (uint64_t *)v870;
                    }
                    uint64_t v719 = (v715 >> 5);
                    DWORD2(v870) = v715 >> 5;
                    uint64_t v720 = a2[8];
                    if ((*((unsigned char *)a2 + 17) & 2) != 0)
                    {
                      LOWORD(v875) = 257;
                      unint64_t v721 = (void *)sub_1CC57EEA0(v703, v720, (uint64_t *)v711, v716, v719, (uint64_t)v874);
                      LOWORD(v875) = 257;
                      uint64_t v722 = sub_1CC57EEA0(v703, v720, (uint64_t *)v713, (uint64_t *)v870, DWORD2(v870), (uint64_t)v874);
                    }
                    else
                    {
                      __int16 v863 = 257;
                      unint64_t v721 = (void *)sub_1CC27CEC0(v703, v720, (uint64_t *)v711, v716, v719, (uint64_t)&v861);
                      __int16 v863 = 257;
                      uint64_t v722 = sub_1CC27CEC0(v703, v720, (uint64_t *)v713, (uint64_t *)v870, DWORD2(v870), (uint64_t)&v861);
                    }
                    uint64_t v723 = v722;
                    LOWORD(v875) = 257;
                    v724 = (char *)operator new(0xA0uLL);
                    char v725 = v724;
                    uint64_t v726 = 0;
                    unsigned int v88 = (uint64_t ***)(v724 + 96);
                    *((_DWORD *)v724 + 29) = *((_DWORD *)v724 + 29) & 0x38000000 | 3;
                    do
                    {
                      v727 = &v724[v726];
                      *(void *)v727 = 0;
                      *((void *)v727 + 1) = 0;
                      *((void *)v727 + 2) = 0;
                      *((void *)v727 + 3) = v88;
                      v726 += 32;
                    }
                    while (v726 != 96);
                    *((void *)v724 + 12) = *v721;
                    *((void *)v724 + 13) = 0;
                    unsigned int v728 = *((_DWORD *)v724 + 29) & 0xC0000000 | 3;
                    *((_DWORD *)v724 + 28) = 85;
                    *((_DWORD *)v724 + 29) = v728;
                    *(_OWORD *)(v724 + 120) = 0u;
                    *(_OWORD *)(v724 + 136) = 0u;
                    *((_DWORD *)v724 + 38) = 0;
                    if (*(void *)v724)
                    {
                      **((void **)v724 + 2) = *((void *)v724 + 1);
                      uint64_t v823 = *((void *)v724 + 1);
                      if (v823) {
                        *(void *)(v823 + 16) = *((void *)v724 + 2);
                      }
                    }
                    *(void *)v724 = v710;
                    uint64_t v731 = *(void *)(v710 + 8);
                    unsigned int v730 = (void *)(v710 + 8);
                    uint64_t v729 = v731;
                    *((void *)v724 + 1) = v731;
                    if (v731) {
                      *(void *)(v729 + 16) = v724 + 8;
                    }
                    *((void *)v724 + 2) = v730;
                    *unsigned int v730 = v724;
                    if (*((void *)v724 + 4))
                    {
                      **((void **)v724 + 6) = *((void *)v724 + 5);
                      uint64_t v824 = *((void *)v724 + 5);
                      if (v824) {
                        *(void *)(v824 + 16) = *((void *)v724 + 6);
                      }
                    }
                    *((void *)v724 + 4) = v721;
                    uint64_t v734 = v721[1];
                    v733 = v721 + 1;
                    uint64_t v732 = v734;
                    *((void *)v724 + 5) = v734;
                    if (v734) {
                      *(void *)(v732 + 16) = v724 + 40;
                    }
                    *((void *)v724 + 6) = v733;
                    void *v733 = v724 + 32;
                    v735 = (uint64_t *)(v724 + 64);
                    if (*((void *)v724 + 8))
                    {
                      **((void **)v724 + 10) = *((void *)v724 + 9);
                      uint64_t v825 = *((void *)v724 + 9);
                      if (v825) {
                        *(void *)(v825 + 16) = *((void *)v724 + 10);
                      }
                    }
                    uint64_t *v735 = v723;
                    if (v723)
                    {
                      uint64_t v738 = *(void *)(v723 + 8);
                      v737 = (uint64_t **)(v723 + 8);
                      uint64_t v736 = v738;
                      *((void *)v724 + 9) = v738;
                      if (v738) {
                        *(void *)(v736 + 16) = v724 + 72;
                      }
                      *((void *)v724 + 10) = v737;
                      *v737 = v735;
                    }
                    llvm::Value::setNameImpl((llvm::Value *)(v724 + 96), (const char **)v874);
                    if (v725[112])
                    {
LABEL_897:
                      llvm::Instruction::copyMetadata((uint64_t)v88, v707, 0, 0);
                      goto LABEL_898;
                    }
                    if ((v725[119] & 0x10) == 0) {
                      goto LABEL_917;
                    }
                    uint64_t v739 = ***v88;
                    uint64_t v740 = *(void *)(v739 + 152);
                    uint64_t v741 = *(unsigned int *)(v739 + 168);
                    if (!v741) {
                      goto LABEL_909;
                    }
                    LODWORD(v742) = (v741 - 1) & ((v88 >> 4) ^ (v88 >> 9));
                    v743 = (void **)(v740 + 16 * v742);
                    int v744 = (uint64_t ***)*v743;
                    if (*v743 != v88)
                    {
                      int v745 = 1;
                      while (v744 != (uint64_t ***)-4096)
                      {
                        int v746 = v742 + v745++;
                        uint64_t v742 = v746 & (v741 - 1);
                        int v744 = *(uint64_t ****)(v740 + 16 * v742);
                        if (v744 == v88)
                        {
                          v743 = (void **)(v740 + 16 * v742);
                          goto LABEL_910;
                        }
                      }
LABEL_909:
                      v743 = (void **)(v740 + 16 * v741);
                    }
LABEL_910:
                    uint64_t v747 = v743[1];
                    unint64_t v750 = *v747;
                    int v748 = v747 + 2;
                    unint64_t v749 = v750;
                    if (v750 >= 5
                      && (*(_DWORD *)v748 == *(_DWORD *)"llvm." ? (BOOL v751 = v748[4] == aLlvm_1[4]) : (BOOL v751 = 0), v751))
                    {
                      *((_DWORD *)v725 + 32) |= 0x2000u;
                      int v752 = llvm::Function::lookupIntrinsicID(v748, v749);
                    }
                    else
                    {
LABEL_917:
                      int v752 = 0;
                      *((_DWORD *)v725 + 32) &= ~0x2000u;
                    }
                    *((_DWORD *)v725 + 33) = v752;
                    goto LABEL_897;
                  }
                  unint64_t v699 = (((unint64_t)*(unsigned int *)&v874[8] + 63) >> 3) & 0x3FFFFFF8;
                  while (v699)
                  {
                    unint64_t v700 = *(void *)(*(void *)v874 - 8 + v699);
                    unint64_t v701 = *(void *)(v467 - 8 + v699);
                    v699 -= 8;
                    if (v700 != v701)
                    {
                      uint64_t v435 = (uint64_t ***)v841;
                      if (v700 <= v701) {
                        break;
                      }
                      goto LABEL_849;
                    }
                  }
LABEL_564:
                  uint64_t v468 = a2[8];
                  if ((*((unsigned char *)a2 + 23) & 0x10) != 0)
                  {
                    uint64_t v469 = **(void **)*a2;
                    uint64_t v470 = *(void *)(v469 + 152);
                    uint64_t v471 = *(unsigned int *)(v469 + 168);
                    if (!v471) {
                      goto LABEL_615;
                    }
                    LODWORD(v472) = (v471 - 1) & ((a2 >> 4) ^ (a2 >> 9));
                    uint64_t v473 = (uint64_t **)(v470 + 16 * v472);
                    uint64_t v474 = *v473;
                    if (*v473 != a2)
                    {
                      int v475 = 1;
                      while (v474 != (uint64_t *)-4096)
                      {
                        int v476 = v472 + v475++;
                        uint64_t v472 = v476 & (v471 - 1);
                        uint64_t v474 = *(uint64_t **)(v470 + 16 * v472);
                        if (v474 == a2)
                        {
                          uint64_t v473 = (uint64_t **)(v470 + 16 * v472);
                          goto LABEL_616;
                        }
                      }
LABEL_615:
                      uint64_t v473 = (uint64_t **)(v470 + 16 * v471);
                    }
LABEL_616:
                    uint64_t v532 = v473[1];
                    uint64_t v535 = *v532;
                    uint64_t v533 = (char *)(v532 + 2);
                    uint64_t v534 = v535;
                  }
                  else
                  {
                    uint64_t v534 = 0;
                    uint64_t v533 = &byte_1CFBCE98E;
                  }
                  LOWORD(v872) = 261;
                  *(void *)&long long v870 = v533;
                  *((void *)&v870 + 1) = v534;
                  uint64_t v435 = (uint64_t ***)sub_1CC9D913C(v468, (uint64_t *)v94, (uint64_t *)v867, v868, (const char **)&v870, 0);
                  char v536 = 1;
                  goto LABEL_850;
                }
LABEL_572:
                uint64_t v409 = a2;
                if (v478 == 18
                  && *(unsigned char *)(v408 + 8) == 17
                  && **(void **)(v408 + 16) == *(void *)(v477 + 24)
                  && *(void *)(v408 + 32) == *(_DWORD *)(v477 + 32))
                {
                  int v479 = *(llvm::DataLayout **)(v840 + 80);
                  unint64_t v480 = (unint64_t)(sub_1CB83544C((uint64_t)v479, v408) + 7) >> 3;
                  BOOL v850 = v481 == 1;
                  char v482 = llvm::DataLayout::getAlignment(v479, (llvm::Type *)v408, 1);
                  uint64_t v483 = ((1 << v482) + v480 - 1) & -(1 << v482);
                  uint64_t v484 = sub_1CB83544C((uint64_t)v479, v477);
                  BOOL v847 = v485 == 1;
                  unint64_t v486 = (unint64_t)(v484 + 7) >> 3;
                  char v487 = llvm::DataLayout::getAlignment(v479, (llvm::Type *)v477, 1);
                  if (v483 == (((1 << v487) + v486 - 1) & -(1 << v487)) && ((v850 ^ v847 ^ 1) & 1) != 0) {
                    goto LABEL_578;
                  }
                }
LABEL_500:
                uint64_t v410 = *(void *)(v840 + 80);
                unsigned int v411 = *(_DWORD *)(*v409 + 8);
                if ((v411 & 0xFE) == 0x12) {
                  unsigned int v411 = *(_DWORD *)(**(void **)(*v409 + 16) + 8);
                }
                uint64_t v412 = *(void *)(v410 + 232);
                if (v411 < 0x100) {
                  goto LABEL_511;
                }
                unsigned int v413 = v411 >> 8;
                unint64_t v414 = *(unsigned int *)(v410 + 240);
                uint64_t v415 = *(void *)(v410 + 232);
                if (v414)
                {
                  uint64_t v415 = v412;
                  unint64_t v416 = v414;
                  do
                  {
                    unint64_t v417 = v416 >> 1;
                    uint64_t v418 = v415 + 16 * (v416 >> 1);
                    unsigned int v419 = *(_DWORD *)(v418 + 8);
                    uint64_t v420 = v418 + 16;
                    v416 += ~(v416 >> 1);
                    if (v419 < v413) {
                      uint64_t v415 = v420;
                    }
                    else {
                      unint64_t v416 = v417;
                    }
                  }
                  while (v416);
                }
                if (v415 == v412 + 16 * v414 || *(_DWORD *)(v415 + 8) != v413) {
LABEL_511:
                }
                  uint64_t v415 = v412;
                unsigned int v865 = *(_DWORD *)(v415 + 12);
                if (v865 >= 0x41) {
                  operator new[]();
                }
                v864 = 0;
                if (*(unsigned char *)(v406 + 16) != 77)
                {
                  v421 = *(llvm::DataLayout **)(v840 + 80);
                  int v422 = *((_DWORD *)a2 + 5);
                  if ((v422 & 0x40000000) != 0)
                  {
                    uint64_t v424 = (uint64_t *)*(a2 - 1);
                    uint64_t v423 = v422 & 0x7FFFFFF;
                  }
                  else
                  {
                    uint64_t v423 = v422 & 0x7FFFFFF;
                    uint64_t v424 = &a2[-4 * v423];
                  }
                  *(void *)&long long v870 = &v871;
                  *((void *)&v870 + 1) = 0x600000000;
                  unint64_t v425 = 32 * v423 - 32;
                  if (v425 >= 0xC1) {
                    llvm::SmallVectorBase<unsigned int>::grow_pod();
                  }
                  unint64_t v426 = (llvm::Constant **)&v871;
                  if (v423 != 1)
                  {
                    v427 = v424 + 4;
                    v428 = &v871;
                    uint64_t v429 = 32 * v423 - 32;
                    do
                    {
                      uint64_t v430 = *v427;
                      v427 += 4;
                      *(void *)v428 = v430;
                      v428 = (long long *)((char *)v428 + 8);
                      v429 -= 32;
                    }
                    while (v429);
                    unint64_t v426 = (llvm::Constant **)v870;
                  }
                  DWORD2(v870) = v425 >> 5;
                  if (*((unsigned char *)a2 + 16) == 62) {
                    uint64_t v431 = a2 + 8;
                  }
                  else {
                    uint64_t v431 = a2 + 3;
                  }
                  int v432 = llvm::GEPOperator::accumulateConstantOffset(*v431, v426, (v425 >> 5), v421, (llvm::APInt *)&v864, 0, v251);
                  if ((long long *)v870 == &v871)
                  {
                    if (!v432) {
                      goto LABEL_526;
                    }
LABEL_673:
                    if (byte_1EBD04470) {
                      int v587 = 59;
                    }
                    else {
                      int v587 = 63;
                    }
                    sub_1CC095244(v406, v587, *(uint64_t **)(v840 + 64), &v870);
                    if (!BYTE8(v871))
                    {
                      if (v865 <= 0x40)
                      {
                        if (v864)
                        {
                          *(void *)&long long v870 = &v871;
                          *((void *)&v870 + 1) = 0x800000000;
                          uint64_t v591 = (uint64_t)((void)v864 << -(uint64_t)v865) >> -(uint64_t)v865;
                          goto LABEL_680;
                        }
LABEL_1010:
                        if (*(unsigned char *)(v406 + 16) == 59
                          && (v794 = (int32x2_t ****)sub_1CCA437AC(v840, v404, v588, v589, v590)) != 0)
                        {
                          v795 = v794;
                          unsigned int v88 = (uint64_t ***)a2;
                          if (v794 != (int32x2_t ****)v404)
                          {
                            llvm::Value::takeName(v794, v404);
                            uint64_t v796 = *((void *)v404 + 5);
                            v795[5] = (int32x2_t ***)v796;
                            *(_WORD *)(v796 + 18) &= ~0x8000u;
                            if ((*((unsigned char *)v795 + 23) & 0x10) != 0)
                            {
                              uint64_t v833 = *(void *)(v796 + 56);
                              if (v833)
                              {
                                v834 = *(llvm::ValueSymbolTable **)(v833 + 104);
                                if (v834) {
                                  llvm::ValueSymbolTable::reinsertValue(v834, (llvm::Value *)v795);
                                }
                              }
                            }
                            uint64_t v797 = *((void *)v404 + 3);
                            v795[4] = (int32x2_t ***)((char *)v404 + 24);
                            v795[3] = (int32x2_t ***)v797;
                            *(void *)(v797 + 8) = v795 + 3;
                            *((void *)v404 + 3) = v795 + 3;
                            sub_1CC9D3C84(v840, v404, (llvm::Value *)v795);
                            unsigned int v88 = (uint64_t ***)a2;
                          }
                        }
                        else
                        {
                          int v788 = *(_DWORD *)(v407 + 8);
                          if ((v788 & 0xFE) == 0x12) {
                            int v788 = *(_DWORD *)(**(void **)(v407 + 16) + 8);
                          }
                          uint64_t v789 = *(void *)a2[-4 * (*((_DWORD *)a2 + 5) & 0x7FFFFFF)];
                          int v790 = *(_DWORD *)(v789 + 8);
                          if ((v790 & 0xFE) == 0x12) {
                            int v790 = *(_DWORD *)(**(void **)(v789 + 16) + 8);
                          }
                          unsigned int v791 = v790 ^ v788;
                          v792 = operator new(0x60uLL);
                          unsigned int v88 = (uint64_t ***)(v792 + 8);
                          v792[13] = v792[13] & 0x38000000 | 1;
                          *(void *)v792 = 0;
                          *((void *)v792 + 1) = 0;
                          *((void *)v792 + 2) = 0;
                          *((void *)v792 + 3) = v792 + 8;
                          v793 = (llvm::Type *)*a2;
                          LOWORD(v872) = 257;
                          if (v791 >= 0x100) {
                            llvm::AddrSpaceCastInst::AddrSpaceCastInst((llvm::AddrSpaceCastInst *)(v792 + 8), (llvm::Value *)v406, v793, (const char **)&v870, 0);
                          }
                          else {
                            llvm::BitCastInst::BitCastInst((llvm::BitCastInst *)(v792 + 8), (llvm::Value *)v406, v793, (const char **)&v870, 0);
                          }
                        }
LABEL_527:
                        if (v865 >= 0x41 && v864) {
                          MEMORY[0x1D25D9CB0](v864, 0x1000C8000313F17);
                        }
                        goto LABEL_528;
                      }
                      int v784 = 0;
                      int64_t v785 = ((unint64_t)v865 + 63) >> 6;
                      do
                      {
                        BOOL v712 = v785-- < 1;
                        if (v712) {
                          break;
                        }
                        unint64_t v786 = *((void *)v864 + v785);
                        v784 += __clz(v786);
                      }
                      while (!v786);
                      unsigned int v787 = v865 | 0xFFFFFFC0;
                      if ((v865 & 0x3F) == 0) {
                        unsigned int v787 = 0;
                      }
                      if (v784 + v787 == v865) {
                        goto LABEL_1010;
                      }
                      *(void *)&long long v870 = &v871;
                      *((void *)&v870 + 1) = 0x800000000;
                      uint64_t v591 = *(void *)v864;
LABEL_680:
                      unsigned int v88 = *(uint64_t ****)(v840 + 80);
                      v866 = 0;
                      int v592 = **(unsigned __int8 ***)(v407 + 16);
                      v866 = (llvm::Type *)v592;
                      unsigned int v593 = v592[8];
                      if (v593 > 0x11) {
                        goto LABEL_709;
                      }
                      if (((1 << v593) & 0x30000) != 0) {
                        goto LABEL_682;
                      }
                      if (((1 << v593) & 0xAC7F) != 0)
                      {
LABEL_685:
                        unsigned int v594 = *(_DWORD *)(v407 + 8);
                        if ((v594 & 0xFE) == 0x12) {
                          unsigned int v594 = *(_DWORD *)(**(void **)(v407 + 16) + 8);
                        }
                        if (v594 < 0x100) {
                          goto LABEL_696;
                        }
                        unsigned int v595 = v594 >> 8;
                        uint64_t v596 = *((unsigned int *)v88 + 60);
                        unint64_t v597 = v88[29];
                        if (v596)
                        {
                          unint64_t v597 = v88[29];
                          unint64_t v598 = *((unsigned int *)v88 + 60);
                          do
                          {
                            unint64_t v599 = v598 >> 1;
                            v600 = &v597[2 * (v598 >> 1)];
                            unsigned int v601 = *((_DWORD *)v600 + 2);
                            char v602 = v600 + 2;
                            v598 += ~(v598 >> 1);
                            if (v601 < v595) {
                              unint64_t v597 = v602;
                            }
                            else {
                              unint64_t v598 = v599;
                            }
                          }
                          while (v598);
                        }
                        if (v597 == &v88[29][2 * v596] || *((_DWORD *)v597 + 2) != v595) {
LABEL_696:
                        }
                          unint64_t v597 = v88[29];
                        unsigned int v603 = *((_DWORD *)v597 + 3);
                        unsigned int v862 = v603;
                        if (v603 > 0x40) {
                          operator new[]();
                        }
                        if (v603) {
                          unint64_t v604 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v603;
                        }
                        else {
                          unint64_t v604 = 0;
                        }
                        v861 = (unsigned __int8 *)(v604 & v591);
                        llvm::DataLayout::getGEPIndicesForOffset((llvm::DataLayout *)v88, &v866, (llvm::APInt *)&v861, (uint64_t)v874);
                        if (v862 > 0x40)
                        {
                          int v798 = 0;
                          int64_t v799 = ((unint64_t)v862 + 63) >> 6;
                          do
                          {
                            BOOL v712 = v799-- < 1;
                            if (v712) {
                              break;
                            }
                            unint64_t v800 = *(void *)&v861[8 * v799];
                            v798 += __clz(v800);
                          }
                          while (!v800);
                          unsigned int v801 = v862 | 0xFFFFFFC0;
                          if ((v862 & 0x3F) == 0) {
                            unsigned int v801 = 0;
                          }
                          if (v798 + v801 != v862) {
                            goto LABEL_1028;
                          }
LABEL_702:
                          if (*(_DWORD *)&v874[8])
                          {
                            v606 = *(llvm::LLVMContext **)v874;
                            uint64_t v607 = 16 * *(unsigned int *)&v874[8];
                            do
                            {
                              v608 = llvm::ConstantInt::get(*(llvm::ConstantInt **)v407, v606, v605);
                              if (DWORD2(v870) >= (unint64_t)HIDWORD(v870)) {
                                llvm::SmallVectorBase<unsigned int>::grow_pod();
                              }
                              *(void *)(v870 + 8 * DWORD2(v870)) = v608;
                              ++DWORD2(v870);
                              v606 = (llvm::LLVMContext *)((char *)v606 + 16);
                              v607 -= 16;
                            }
                            while (v607);
                          }
                          v609 = v866;
                        }
                        else
                        {
                          if (!v861) {
                            goto LABEL_702;
                          }
LABEL_1028:
                          v609 = 0;
                        }
                        unsigned int v88 = *(uint64_t ****)v874;
                        if (*(_DWORD *)&v874[8])
                        {
                          uint64_t v802 = 2 * *(unsigned int *)&v874[8];
                          do
                          {
                            if (LODWORD(v88[v802 - 1]) >= 0x41)
                            {
                              v803 = v88[v802 - 2];
                              if (v803) {
                                MEMORY[0x1D25D9CB0](v803, 0x1000C8000313F17);
                              }
                            }
                            v802 -= 2;
                          }
                          while (v802 * 8);
                          unsigned int v88 = *(uint64_t ****)v874;
                        }
                        if (v88 != (uint64_t ***)&v874[16]) {
                          free(v88);
                        }
                        if (v862 >= 0x41 && v861) {
                          MEMORY[0x1D25D9CB0](v861, 0x1000C8000313F17);
                        }
                        if (v609)
                        {
                          v804 = *(uint64_t **)(v840 + 24);
                          if ((*((unsigned char *)a2 + 17) & 2) != 0)
                          {
                            LOWORD(v875) = 257;
                            v805 = (llvm::Value *)sub_1CC57EEA0(v804, v408, (uint64_t *)v406, (uint64_t *)v870, DWORD2(v870), (uint64_t)v874);
                          }
                          else
                          {
                            LOWORD(v875) = 257;
                            v805 = (llvm::Value *)sub_1CC27CEC0(v804, v408, (uint64_t *)v406, (uint64_t *)v870, DWORD2(v870), (uint64_t)v874);
                          }
                          v807 = v805;
                          if (*(void *)v805 == *a2)
                          {
                            unsigned int v88 = (uint64_t ***)sub_1CC9D3C84(v840, (llvm::ValueAsMetadata *)a2, v805);
                          }
                          else
                          {
                            llvm::Value::takeName((int32x2_t ****)v805, (llvm::Value *)a2);
                            int v808 = *(_DWORD *)(*(void *)v807 + 8);
                            if ((v808 & 0xFE) == 0x12) {
                              int v808 = *(_DWORD *)(**(void **)(*(void *)v807 + 16) + 8);
                            }
                            uint64_t v809 = *(void *)a2[-4 * (*((_DWORD *)a2 + 5) & 0x7FFFFFF)];
                            int v810 = *(_DWORD *)(v809 + 8);
                            if ((v810 & 0xFE) == 0x12) {
                              int v810 = *(_DWORD *)(**(void **)(v809 + 16) + 8);
                            }
                            unsigned int v811 = v810 ^ v808;
                            v812 = operator new(0x60uLL);
                            unsigned int v88 = (uint64_t ***)(v812 + 8);
                            v812[13] = v812[13] & 0x38000000 | 1;
                            *(void *)v812 = 0;
                            *((void *)v812 + 1) = 0;
                            *((void *)v812 + 2) = 0;
                            *((void *)v812 + 3) = v812 + 8;
                            v813 = (llvm::Type *)*a2;
                            LOWORD(v875) = 257;
                            if (v811 >= 0x100) {
                              llvm::AddrSpaceCastInst::AddrSpaceCastInst((llvm::AddrSpaceCastInst *)(v812 + 8), v807, v813, (const char **)v874, 0);
                            }
                            else {
                              llvm::BitCastInst::BitCastInst((llvm::BitCastInst *)(v812 + 8), v807, v813, (const char **)v874, 0);
                            }
                          }
                          int v806 = 0;
                          goto LABEL_1052;
                        }
                      }
                      else
                      {
LABEL_709:
                        if ((v593 & 0xFE) == 0x12 || v593 == 21)
                        {
LABEL_682:
                          if (llvm::Type::isSizedDerivedType((uint64_t)v592, 0)) {
                            goto LABEL_685;
                          }
                        }
                      }
                      int v806 = 1;
LABEL_1052:
                      if ((long long *)v870 == &v871)
                      {
                        if (!v806) {
                          goto LABEL_527;
                        }
                      }
                      else
                      {
                        free((void *)v870);
                        if (!v806) {
                          goto LABEL_527;
                        }
                      }
                    }
                  }
                  else
                  {
                    free((void *)v870);
                    if (v432) {
                      goto LABEL_673;
                    }
                  }
                }
LABEL_526:
                unsigned int v88 = 0;
                goto LABEL_527;
              }
              *(void *)&long long v870 = &v871;
              *((void *)&v870 + 1) = 0x800000000;
              unint64_t v343 = -(-32 * v257 + 64);
              if (v343 >= 0x101) {
                llvm::SmallVectorBase<unsigned int>::grow_pod();
              }
              unint64_t v344 = (uint64_t *)&v871;
              if (v258 + 8 != a2)
              {
                unint64_t v345 = &v871;
                uint64_t v346 = 64 - 32 * v257;
                do
                {
                  *(void *)unint64_t v345 = *(uint64_t *)((char *)a2 + v346);
                  unint64_t v345 = (long long *)((char *)v345 + 8);
                  v346 += 32;
                }
                while (v346);
                unint64_t v344 = (uint64_t *)v870;
              }
              uint64_t v347 = (v343 >> 5);
              DWORD2(v870) = v343 >> 5;
              if ((*((unsigned char *)a2 + 23) & 0x10) != 0)
              {
                uint64_t v348 = **(void **)*a2;
                uint64_t v349 = *(void *)(v348 + 152);
                uint64_t v350 = *(unsigned int *)(v348 + 168);
                if (!v350) {
                  goto LABEL_620;
                }
                LODWORD(v351) = (v350 - 1) & ((a2 >> 4) ^ (a2 >> 9));
                uint64_t v352 = (uint64_t **)(v349 + 16 * v351);
                size_t v353 = *v352;
                if (*v352 != a2)
                {
                  int v354 = 1;
                  while (v353 != (uint64_t *)-4096)
                  {
                    int v355 = v351 + v354++;
                    uint64_t v351 = v355 & (v350 - 1);
                    size_t v353 = *(uint64_t **)(v349 + 16 * v351);
                    if (v353 == a2)
                    {
                      uint64_t v352 = (uint64_t **)(v349 + 16 * v351);
                      goto LABEL_621;
                    }
                  }
LABEL_620:
                  uint64_t v352 = (uint64_t **)(v349 + 16 * v350);
                }
LABEL_621:
                int v537 = v352[1];
                uint64_t v540 = *v537;
                int v538 = (char *)(v537 + 2);
                uint64_t v539 = v540;
              }
              else
              {
                uint64_t v539 = 0;
                int v538 = &byte_1CFBCE98E;
              }
              LOWORD(v875) = 261;
              *(void *)v874 = v538;
              *(void *)&v874[8] = v539;
              uint64_t v541 = (v347 + 1);
              unint64_t v542 = operator new(32 * v541 + 80);
              uint64_t v543 = &v542[4 * v541];
              *((_DWORD *)v543 + 5) = *((_DWORD *)v543 + 5) & 0x38000000 | v541 & 0x7FFFFFF;
              if (v347 != -1)
              {
                do
                {
                  *unint64_t v542 = 0;
                  v542[1] = 0;
                  v542[2] = 0;
                  v542[3] = v543;
                  v542 += 4;
                }
                while (v542 != v543);
              }
              sub_1CB845A7C(v256, v253, (uint64_t)v344, v347);
              *uint64_t v543 = v544;
              v543[1] = 0;
              int v545 = *((_DWORD *)v543 + 5) & 0xC0000000 | v541 & 0x7FFFFFF;
              *((_DWORD *)v543 + 4) = 62;
              *((_DWORD *)v543 + 5) = v545;
              *(_OWORD *)(v543 + 3) = 0u;
              *(_OWORD *)(v543 + 5) = 0u;
              *((_DWORD *)v543 + 14) = 0;
              v543[8] = v256;
              v543[9] = llvm::GetElementPtrInst::getIndexedType(v256, (uint64_t)v344, v347);
              llvm::GetElementPtrInst::init((uint64_t ***)v543, (uint64_t **)v253, v344, v347, (const char **)v874);
              *((unsigned char *)v543 + 17) = *((unsigned char *)v543 + 17) & 0xFD | *((unsigned char *)a2 + 17) & 2;
              uint64_t v546 = *(void *)a2[-4 * (*((_DWORD *)a2 + 5) & 0x7FFFFFF)];
              unsigned int v547 = *(_DWORD *)(v546 + 8);
              if ((v547 & 0xFE) == 0x12) {
                unsigned int v547 = *(_DWORD *)(**(void **)(v546 + 16) + 8);
              }
              if ((v547 ^ *(_DWORD *)(v254 + 8)) >= 0x100)
              {
                int64_t v548 = operator new(0x60uLL);
                unsigned int v88 = (uint64_t ***)(v548 + 8);
                v548[13] = v548[13] & 0x38000000 | 1;
                *(void *)int64_t v548 = 0;
                *((void *)v548 + 1) = 0;
                *((void *)v548 + 2) = 0;
                *((void *)v548 + 3) = v548 + 8;
                uint64_t v549 = *(uint64_t **)(v840 + 24);
                LOWORD(v875) = 257;
                (*(void (**)(uint64_t, void *, unsigned char *, uint64_t, uint64_t))(*(void *)v549[10] + 16))(v549[10], v543, v874, v549[6], v549[7]);
                uint64_t v550 = *((unsigned int *)v549 + 2);
                if (v550)
                {
                  uint64_t v679 = *v549;
                  uint64_t v680 = v679 + 16 * v550;
                  do
                  {
                    llvm::Instruction::setMetadata((llvm::Instruction *)v543, *(_DWORD *)v679, *(llvm::MDNode **)(v679 + 8));
                    v679 += 16;
                  }
                  while (v679 != v680);
                }
                __int16 v863 = 257;
                v551 = (const char **)&v861;
                v552 = (llvm::AddrSpaceCastInst *)v88;
                v553 = (llvm::Value *)v543;
                size_t v554 = v846;
                goto LABEL_843;
              }
              unsigned int v88 = (uint64_t ***)v543;
LABEL_898:
              if ((long long *)v870 != &v871) {
                free((void *)v870);
              }
              goto LABEL_339;
            }
            int v335 = 0;
            int64_t v336 = (unint64_t)(v262 + 63) >> 6;
            do
            {
              BOOL v712 = v336-- < 1;
              if (v712) {
                break;
              }
              unint64_t v337 = v259[3][v336];
              v335 += __clz(v337);
            }
            while (!v337);
            int v338 = v262 | 0xFFFFFFC0;
            if ((v262 & 0x3F) == 0) {
              int v338 = 0;
            }
            if (v335 + v338 == v262) {
              goto LABEL_406;
            }
LABEL_352:
            if (v257 != 2 || v206 == 19) {
              goto LABEL_490;
            }
            v849 = **(llvm::Type ***)(v254 + 16);
            if (*(unsigned char *)(v256 + 8) == 17)
            {
              v263 = (llvm::DataLayout *)v91[10];
              uint64_t v264 = (llvm::Type *)**((void **)v849 + 2);
              unint64_t v265 = (unint64_t)(sub_1CB83544C(*(void *)(v255 + 80), (uint64_t)v264) + 7) >> 3;
              BOOL v267 = v266 == 1;
              char v268 = llvm::DataLayout::getAlignment(v263, v264, 1);
              uint64_t v269 = v255;
              uint64_t v270 = ((1 << v268) + v265 - 1) & -(1 << v268);
              uint64_t v271 = *(llvm::DataLayout **)(v269 + 80);
              uint64_t v272 = sub_1CB83544C((uint64_t)v271, v845);
              BOOL v274 = v273 == 1;
              unint64_t v275 = (unint64_t)(v272 + 7) >> 3;
              char v276 = llvm::DataLayout::getAlignment(v271, (llvm::Type *)v845, 1);
              unint64_t v277 = (1 << v276) + v275;
              uint64_t v252 = (unsigned __int8 *)v845;
              BOOL v18 = v270 == ((v277 - 1) & -(1 << v276));
              uint64_t v255 = v269;
              if (v18 && ((v267 ^ v274 ^ 1) & 1) != 0)
              {
                uint64_t v278 = *(void *)(v269 + 80);
                uint64_t v279 = v846;
                unsigned int v280 = *((_DWORD *)v846 + 2);
                if ((v280 & 0xFE) == 0x12) {
                  unsigned int v280 = *(_DWORD *)(**((void **)v846 + 2) + 8);
                }
                uint64_t v281 = *(void *)(v278 + 232);
                if (v280 < 0x100) {
                  goto LABEL_369;
                }
                unsigned int v282 = v280 >> 8;
                unint64_t v283 = *(unsigned int *)(v278 + 240);
                uint64_t v284 = *(void *)(v278 + 232);
                if (v283)
                {
                  uint64_t v284 = v281;
                  unint64_t v285 = v283;
                  do
                  {
                    unint64_t v286 = v285 >> 1;
                    uint64_t v287 = v284 + 16 * (v285 >> 1);
                    unsigned int v288 = *(_DWORD *)(v287 + 8);
                    uint64_t v289 = v287 + 16;
                    v285 += ~(v285 >> 1);
                    if (v288 < v282) {
                      uint64_t v284 = v289;
                    }
                    else {
                      unint64_t v285 = v286;
                    }
                  }
                  while (v285);
                }
                if (v284 == v281 + 16 * v283 || *(_DWORD *)(v284 + 8) != v282) {
LABEL_369:
                }
                  uint64_t v284 = v281;
                int v290 = (uint64_t **)llvm::IntegerType::get(*(llvm::IntegerType **)v846, (llvm::LLVMContext *)*(unsigned int *)(v284 + 12));
                if ((*((_DWORD *)v846 + 2) & 0xFE) == 0x12)
                {
                  v822 = (llvm::Type *)*((unsigned int *)v846 + 8);
                  if (*((_DWORD *)v846 + 2) == 19) {
                    llvm::ScalableVectorType::get(v290, v822);
                  }
                  else {
                    llvm::FixedVectorType::get((llvm::FixedVectorType *)v290, v822);
                  }
                  uint64_t v255 = v269;
                  uint64_t v279 = v846;
                }
                uint64_t v293 = llvm::Constant::getNullValue((llvm::Constant *)v290, v291, v292);
                int v294 = *((_DWORD *)a2 + 5);
                unint64_t v295 = (void **)a2[-4 * (v294 & 0x7FFFFFF) + 4];
                *(void *)v874 = v293;
                *(void *)&v874[8] = v295;
                uint64_t v296 = *(uint64_t **)(v255 + 24);
                uint64_t v297 = (uint64_t)v849;
                if ((v294 & 0x10000000) != 0)
                {
                  uint64_t v298 = **(void **)*a2;
                  uint64_t v299 = *(void *)(v298 + 152);
                  uint64_t v300 = *(unsigned int *)(v298 + 168);
                  if (!v300) {
                    goto LABEL_484;
                  }
                  LODWORD(v301) = (v300 - 1) & ((a2 >> 4) ^ (a2 >> 9));
                  uint64_t v302 = (uint64_t **)(v299 + 16 * v301);
                  v303 = *v302;
                  if (*v302 != a2)
                  {
                    int v304 = 1;
                    while (v303 != (uint64_t *)-4096)
                    {
                      int v305 = v301 + v304++;
                      uint64_t v301 = v305 & (v300 - 1);
                      v303 = *(uint64_t **)(v299 + 16 * v301);
                      if (v303 == a2)
                      {
                        uint64_t v302 = (uint64_t **)(v299 + 16 * v301);
                        goto LABEL_485;
                      }
                    }
LABEL_484:
                    uint64_t v302 = (uint64_t **)(v299 + 16 * v300);
                  }
LABEL_485:
                  v399 = v302[1];
                  uint64_t v402 = *v399;
                  uint64_t v401 = (char *)(v399 + 2);
                  uint64_t v400 = v402;
                  if ((*((unsigned char *)a2 + 17) & 2) == 0)
                  {
LABEL_486:
                    LOWORD(v872) = 261;
                    *(void *)&long long v870 = v401;
                    *((void *)&v870 + 1) = v400;
                    goto LABEL_487;
                  }
                }
                else
                {
                  uint64_t v400 = 0;
                  uint64_t v401 = &byte_1CFBCE98E;
                  if ((*((unsigned char *)a2 + 17) & 2) == 0) {
                    goto LABEL_486;
                  }
                }
                LOWORD(v872) = 261;
                *(void *)&long long v870 = v401;
                *((void *)&v870 + 1) = v400;
LABEL_671:
                BOOL v247 = (llvm::CastInst *)sub_1CC57EEA0(v296, v297, v253, (uint64_t *)v874, 2, (uint64_t)&v870);
LABEL_788:
                LOWORD(v872) = 257;
                int v248 = v279;
                goto LABEL_789;
              }
            }
            unsigned int v306 = v252[8];
            uint64_t v307 = (uint64_t)v849;
            if (v306 > 0x11) {
              goto LABEL_435;
            }
            if (((1 << v306) & 0xAC7F) != 0) {
              goto LABEL_380;
            }
            if (((1 << v306) & 0x30000) == 0)
            {
LABEL_435:
              if ((v306 & 0xFE) != 0x12 && v306 != 21) {
                goto LABEL_439;
              }
            }
            if (!llvm::Type::isSizedDerivedType((uint64_t)v252, 0))
            {
LABEL_439:
              unsigned int v356 = v252[8];
              if (v356 > 0x11) {
                goto LABEL_482;
              }
              if (((1 << v356) & 0xAC7F) != 0) {
                goto LABEL_441;
              }
              if (((1 << v356) & 0x30000) == 0)
              {
LABEL_482:
                if ((v356 & 0xFE) != 0x12 && v356 != 21) {
                  goto LABEL_490;
                }
              }
              if (!llvm::Type::isSizedDerivedType((uint64_t)v252, 0)) {
                goto LABEL_490;
              }
LABEL_441:
              unsigned int v357 = *(unsigned __int8 *)(v307 + 8);
              if (v357 > 0x11) {
                goto LABEL_489;
              }
              if (((1 << v357) & 0xAC7F) != 0) {
                goto LABEL_443;
              }
              if (((1 << v357) & 0x30000) == 0)
              {
LABEL_489:
                if ((v357 & 0xFE) != 0x12 && v357 != 21) {
                  goto LABEL_490;
                }
              }
              if (!llvm::Type::isSizedDerivedType(v307, 0)) {
                goto LABEL_490;
              }
              unsigned int v357 = *(unsigned __int8 *)(v307 + 8);
LABEL_443:
              if (v357 != 17) {
                goto LABEL_490;
              }
              v358 = *(llvm::DataLayout **)(v255 + 80);
              unint64_t v359 = (unint64_t)(sub_1CB83544C((uint64_t)v358, (uint64_t)v252) + 7) >> 3;
              char v360 = llvm::DataLayout::getAlignment(v358, (llvm::Type *)v252, 1);
              unint64_t v361 = (1 << v360) + v359 - 1;
              uint64_t v362 = *(void *)(v255 + 80);
              v363 = (llvm::Type *)**((void **)v849 + 2);
              uint64_t v364 = sub_1CB83544C(v362, (uint64_t)v363);
              uint64_t v365 = (llvm::DataLayout *)v362;
              unint64_t v366 = v849;
              char v367 = llvm::DataLayout::getAlignment(v365, v363, 1);
              if (!(v361 >> v360)) {
                goto LABEL_490;
              }
              unint64_t v368 = v361 & -(1 << v360);
              unint64_t v369 = ((1 << v367) + ((unint64_t)(v364 + 7) >> 3) - 1) & -(1 << v367);
              unint64_t v370 = v369 / v368;
              if (v369 % v368) {
                goto LABEL_490;
              }
              unint64_t v371 = (llvm::Type **)a2[-4 * (*((_DWORD *)a2 + 5) & 0x7FFFFFF) + 4];
              unsigned int v373 = llvm::Type::getPrimitiveSizeInBits(*v371);
              if (v372 == 1) {
              LOBYTE(v861) = 0;
              }
              unsigned int v854 = v373;
              if (v373 > 0x40) {
                operator new[]();
              }
              unint64_t v374 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v373;
              if (!v373) {
                unint64_t v374 = 0;
              }
              unint64_t v853 = v374 & v370;
              unint64_t v375 = sub_1CC9D7540(v255, (uint64_t)v371, (unsigned int *)&v853, &v861);
              if (v854 >= 0x41 && v853) {
                MEMORY[0x1D25D9CB0](v853, 0x1000C8000313F17);
              }
              if (!v375) {
                goto LABEL_490;
              }
              uint64_t v376 = *(void *)(v255 + 80);
              unsigned int v377 = *((_DWORD *)v846 + 2);
              if ((v377 & 0xFE) == 0x12) {
                unsigned int v377 = *(_DWORD *)(**((void **)v846 + 2) + 8);
              }
              uint64_t v378 = *(void *)(v376 + 232);
              if (v377 < 0x100) {
                goto LABEL_466;
              }
              unsigned int v379 = v377 >> 8;
              unint64_t v380 = *(unsigned int *)(v376 + 240);
              uint64_t v381 = *(void *)(v376 + 232);
              if (v380)
              {
                uint64_t v381 = v378;
                unint64_t v382 = v380;
                do
                {
                  unint64_t v383 = v382 >> 1;
                  uint64_t v384 = v381 + 16 * (v382 >> 1);
                  unsigned int v385 = *(_DWORD *)(v384 + 8);
                  uint64_t v386 = v384 + 16;
                  v382 += ~(v382 >> 1);
                  if (v385 < v379) {
                    uint64_t v381 = v386;
                  }
                  else {
                    unint64_t v382 = v383;
                  }
                }
                while (v382);
              }
              if (v381 == v378 + 16 * v380 || *(_DWORD *)(v381 + 8) != v379) {
LABEL_466:
              }
                uint64_t v381 = v378;
              unsigned int v387 = (uint64_t **)llvm::IntegerType::get(*(llvm::IntegerType **)v846, (llvm::LLVMContext *)*(unsigned int *)(v381 + 12));
              if ((*((_DWORD *)v846 + 2) & 0xFE) == 0x12)
              {
                v826 = (llvm::Type *)*((unsigned int *)v846 + 8);
                if (*((_DWORD *)v846 + 2) == 19) {
                  llvm::ScalableVectorType::get(v387, v826);
                }
                else {
                  llvm::FixedVectorType::get((llvm::FixedVectorType *)v387, v826);
                }
                unint64_t v366 = v849;
              }
              *(void *)v874 = llvm::Constant::getNullValue((llvm::Constant *)v387, v388, v389);
              *(void *)&v874[8] = v375;
              int v390 = ((_BYTE)v861 != 0) & (*((unsigned __int8 *)a2 + 17) >> 1);
              uint64_t v296 = *(uint64_t **)(v255 + 24);
              if ((*((unsigned char *)a2 + 23) & 0x10) != 0)
              {
                uint64_t v391 = **(void **)*a2;
                uint64_t v392 = *(void *)(v391 + 152);
                uint64_t v393 = *(unsigned int *)(v391 + 168);
                uint64_t v279 = v846;
                if (!v393) {
                  goto LABEL_715;
                }
                LODWORD(v394) = (v393 - 1) & ((a2 >> 4) ^ (a2 >> 9));
                int v395 = (uint64_t **)(v392 + 16 * v394);
                uint64_t v396 = *v395;
                if (*v395 != a2)
                {
                  int v397 = 1;
                  while (v396 != (uint64_t *)-4096)
                  {
                    int v398 = v394 + v397++;
                    uint64_t v394 = v398 & (v393 - 1);
                    uint64_t v396 = *(uint64_t **)(v392 + 16 * v394);
                    if (v396 == a2)
                    {
                      int v395 = (uint64_t **)(v392 + 16 * v394);
                      goto LABEL_716;
                    }
                  }
LABEL_715:
                  int v395 = (uint64_t **)(v392 + 16 * v393);
                }
LABEL_716:
                v611 = v395[1];
                uint64_t v614 = *v611;
                unint64_t v613 = (char *)(v611 + 2);
                uint64_t v612 = v614;
                if (v390)
                {
LABEL_717:
                  LOWORD(v872) = 261;
                  *(void *)&long long v870 = v613;
                  *((void *)&v870 + 1) = v612;
                  uint64_t v297 = (uint64_t)v366;
                  goto LABEL_671;
                }
              }
              else
              {
                uint64_t v612 = 0;
                unint64_t v613 = &byte_1CFBCE98E;
                uint64_t v279 = v846;
                if (v390) {
                  goto LABEL_717;
                }
              }
              LOWORD(v872) = 261;
              *(void *)&long long v870 = v613;
              *((void *)&v870 + 1) = v612;
              uint64_t v297 = (uint64_t)v366;
LABEL_487:
              BOOL v247 = (llvm::CastInst *)sub_1CC27CEC0(v296, v297, v253, (uint64_t *)v874, 2, (uint64_t)&v870);
              goto LABEL_788;
            }
LABEL_380:
            unsigned int v308 = *((unsigned __int8 *)v849 + 8);
            if (v308 > 0x11) {
              goto LABEL_438;
            }
            if (((1 << v308) & 0xAC7F) != 0) {
              goto LABEL_382;
            }
            if (((1 << v308) & 0x30000) == 0)
            {
LABEL_438:
              if ((v308 & 0xFE) != 0x12 && v308 != 21) {
                goto LABEL_439;
              }
            }
            if (!llvm::Type::isSizedDerivedType((uint64_t)v849, 0)) {
              goto LABEL_439;
            }
LABEL_382:
            v309 = *(llvm::DataLayout **)(v255 + 80);
            unint64_t v310 = (unint64_t)(sub_1CB83544C((uint64_t)v309, (uint64_t)v252) + 7) >> 3;
            char v311 = llvm::DataLayout::getAlignment(v309, (llvm::Type *)v252, 1);
            unint64_t v312 = (1 << v311) + v310 - 1;
            uint64_t v313 = *(void *)(v255 + 80);
            uint64_t v314 = sub_1CB83544C(v313, (uint64_t)v849);
            uint64_t v315 = (llvm::DataLayout *)v313;
            uint64_t v307 = (uint64_t)v849;
            char v316 = llvm::DataLayout::getAlignment(v315, v849, 1);
            if (!(v312 >> v311)) {
              goto LABEL_439;
            }
            unint64_t v317 = v312 & -(1 << v311);
            unint64_t v318 = ((1 << v316) + ((unint64_t)(v314 + 7) >> 3) - 1) & -(1 << v316);
            unint64_t v319 = v318 / v317;
            if (v318 % v317) {
              goto LABEL_439;
            }
            v320 = (llvm::Type **)a2[-4 * (*((_DWORD *)a2 + 5) & 0x7FFFFFF) + 4];
            unsigned int v322 = llvm::Type::getPrimitiveSizeInBits(*v320);
            if (v321 == 1) {
            v874[0] = 0;
            }
            unsigned int v856 = v322;
            if (v322 > 0x40) {
              operator new[]();
            }
            unint64_t v323 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v322;
            if (!v322) {
              unint64_t v323 = 0;
            }
            unint64_t v855 = v323 & v319;
            unint64_t v324 = sub_1CC9D7540(v255, (uint64_t)v320, (unsigned int *)&v855, v874);
            if (v856 >= 0x41 && v855) {
              MEMORY[0x1D25D9CB0](v855, 0x1000C8000313F17);
            }
            if (!v324) {
              goto LABEL_439;
            }
            int v325 = (v874[0] != 0) & (*((unsigned __int8 *)a2 + 17) >> 1);
            v326 = *(uint64_t **)(v255 + 24);
            if ((*((unsigned char *)a2 + 23) & 0x10) != 0)
            {
              uint64_t v327 = **(void **)*a2;
              uint64_t v328 = *(void *)(v327 + 152);
              uint64_t v329 = *(unsigned int *)(v327 + 168);
              uint64_t v279 = v846;
              if (!v329) {
                goto LABEL_659;
              }
              LODWORD(v330) = (v329 - 1) & ((a2 >> 4) ^ (a2 >> 9));
              long long v331 = (uint64_t **)(v328 + 16 * v330);
              int v332 = *v331;
              if (*v331 != a2)
              {
                int v333 = 1;
                while (v332 != (uint64_t *)-4096)
                {
                  int v334 = v330 + v333++;
                  uint64_t v330 = v334 & (v329 - 1);
                  int v332 = *(uint64_t **)(v328 + 16 * v330);
                  if (v332 == a2)
                  {
                    long long v331 = (uint64_t **)(v328 + 16 * v330);
                    goto LABEL_660;
                  }
                }
LABEL_659:
                long long v331 = (uint64_t **)(v328 + 16 * v329);
              }
LABEL_660:
              v583 = v331[1];
              uint64_t v586 = *v583;
              size_t v585 = (char *)(v583 + 2);
              uint64_t v584 = v586;
              if (v325)
              {
LABEL_661:
                LOWORD(v872) = 261;
                *(void *)&long long v870 = v585;
                *((void *)&v870 + 1) = v584;
                BOOL v247 = sub_1CC278130(v326, (uint64_t)v849, v253, (const char *)v324, (uint64_t)&v870);
                goto LABEL_788;
              }
            }
            else
            {
              uint64_t v584 = 0;
              size_t v585 = &byte_1CFBCE98E;
              uint64_t v279 = v846;
              if (v325) {
                goto LABEL_661;
              }
            }
            LOWORD(v872) = 261;
            *(void *)&long long v870 = v585;
            *((void *)&v870 + 1) = v584;
            BOOL v247 = sub_1CB930F7C(v326, (uint64_t)v849, v253, (const char *)v324, (uint64_t)&v870);
            goto LABEL_788;
          }
LABEL_206:
          *(void *)&long long v870 = &v871;
          *((void *)&v870 + 1) = 0x800000000;
          uint64_t v140 = 24;
          if (*((unsigned char *)v94 + 16) == 62) {
            uint64_t v140 = 64;
          }
          uint64_t v141 = *(void *)((char *)v94 + v140);
          if ((v109 & 0x40000000) != 0)
          {
            uint64_t v143 = (void *)*((void *)v94 - 1);
            uint64_t v142 = v109 & 0x7FFFFFF;
          }
          else
          {
            uint64_t v142 = v109 & 0x7FFFFFF;
            uint64_t v143 = (void *)((char *)v94 - 32 * v142);
          }
          *(void *)v874 = v143 + 4;
          *(void *)&v874[8] = v141 | 4;
          if (v142 == 1) {
            goto LABEL_215;
          }
          int v144 = &v143[4 * v142];
          do
          {
            char v145 = v874[8];
            sub_1CB8460E4((uint64_t)v874);
          }
          while (*(void **)v874 != v144);
          if ((v145 & 4) == 0)
          {
LABEL_215:
            uint64_t v146 = a2[-4 * (*((_DWORD *)a2 + 5) & 0x7FFFFFF) + 4];
            unsigned int v147 = *(unsigned __int8 *)(v146 + 16);
            if (v147 > 0x14) {
              goto LABEL_241;
            }
            if (v147 == 16)
            {
              uint64_t v148 = *(unsigned int *)(v146 + 32);
              if (v148 < 0x41)
              {
                if (!*(void *)(v146 + 24)) {
                  goto LABEL_219;
                }
LABEL_241:
                int v167 = DWORD2(v870);
LABEL_242:
                if (v167)
                {
                  int v168 = sub_1CC9D90D0((uint64_t)v94, (uint64_t)a2);
                  uint64_t v169 = 24;
                  if (*((unsigned char *)v94 + 16) == 62) {
                    uint64_t v169 = 64;
                  }
                  uint64_t v170 = *(void *)((char *)v94 + v169);
                  int v171 = *((_DWORD *)v94 + 5);
                  if (v168)
                  {
                    if ((v171 & 0x40000000) != 0) {
                      unint64_t v172 = (uint64_t **)*((void *)v94 - 1);
                    }
                    else {
                      unint64_t v172 = (uint64_t **)((char *)v94 - 32 * (v171 & 0x7FFFFFF));
                    }
                    unint64_t v174 = *v172;
                    if ((*((unsigned char *)a2 + 23) & 0x10) != 0)
                    {
                      uint64_t v175 = **(void **)*a2;
                      uint64_t v176 = *(void *)(v175 + 152);
                      uint64_t v177 = *(unsigned int *)(v175 + 168);
                      if (!v177) {
                        goto LABEL_267;
                      }
                      LODWORD(v178) = (v177 - 1) & ((a2 >> 4) ^ (a2 >> 9));
                      int v179 = (uint64_t **)(v176 + 16 * v178);
                      uint64_t v180 = *v179;
                      if (*v179 != a2)
                      {
                        int v181 = 1;
                        while (v180 != (uint64_t *)-4096)
                        {
                          int v182 = v178 + v181++;
                          uint64_t v178 = v182 & (v177 - 1);
                          uint64_t v180 = *(uint64_t **)(v176 + 16 * v178);
                          if (v180 == a2)
                          {
                            int v179 = (uint64_t **)(v176 + 16 * v178);
                            goto LABEL_268;
                          }
                        }
LABEL_267:
                        int v179 = (uint64_t **)(v176 + 16 * v177);
                      }
LABEL_268:
                      uint64_t v193 = v179[1];
                      uint64_t v196 = *v193;
                      uint64_t v194 = (char *)(v193 + 2);
                      uint64_t v195 = v196;
                    }
                    else
                    {
                      uint64_t v195 = 0;
                      uint64_t v194 = &byte_1CFBCE98E;
                    }
                    LOWORD(v875) = 261;
                    *(void *)v874 = v194;
                    *(void *)&v874[8] = v195;
                    unsigned int v88 = (uint64_t ***)sub_1CC9D913C(v170, v174, (uint64_t *)v870, DWORD2(v870), (const char **)v874, 0);
LABEL_275:
                    unint64_t v91 = (void *)v111;
                    if ((long long *)v870 != &v871) {
                      free((void *)v870);
                    }
                    if (!v88) {
                      goto LABEL_278;
                    }
                    goto LABEL_339;
                  }
                  if ((v171 & 0x40000000) != 0) {
                    uint64_t v173 = (uint64_t **)*((void *)v94 - 1);
                  }
                  else {
                    uint64_t v173 = (uint64_t **)((char *)v94 - 32 * (v171 & 0x7FFFFFF));
                  }
                  v844 = *v173;
                  unsigned int v183 = (uint64_t *)v870;
                  uint64_t v184 = DWORD2(v870);
                  *(void *)v839 = v111;
                  if ((*((unsigned char *)a2 + 23) & 0x10) != 0)
                  {
                    uint64_t v185 = **(void **)*a2;
                    uint64_t v186 = *(void *)(v185 + 152);
                    uint64_t v187 = *(unsigned int *)(v185 + 168);
                    if (!v187) {
                      goto LABEL_270;
                    }
                    LODWORD(v188) = (v187 - 1) & ((a2 >> 4) ^ (a2 >> 9));
                    uint64_t v189 = (uint64_t **)(v186 + 16 * v188);
                    uint64_t v190 = *v189;
                    if (*v189 != a2)
                    {
                      int v191 = 1;
                      while (v190 != (uint64_t *)-4096)
                      {
                        int v192 = v188 + v191++;
                        uint64_t v188 = v192 & (v187 - 1);
                        uint64_t v190 = *(uint64_t **)(v186 + 16 * v188);
                        if (v190 == a2)
                        {
                          uint64_t v189 = (uint64_t **)(v186 + 16 * v188);
                          goto LABEL_271;
                        }
                      }
LABEL_270:
                      uint64_t v189 = (uint64_t **)(v186 + 16 * v187);
                    }
LABEL_271:
                    uint64_t v197 = v170;
                    uint64_t v198 = v189[1];
                    uint64_t v201 = *v198;
                    BOOL v199 = (char *)(v198 + 2);
                    uint64_t v200 = v201;
                  }
                  else
                  {
                    uint64_t v197 = v170;
                    uint64_t v200 = 0;
                    BOOL v199 = &byte_1CFBCE98E;
                  }
                  LOWORD(v875) = 261;
                  *(void *)v874 = v199;
                  *(void *)&v874[8] = v200;
                  uint64_t v202 = (DWORD2(v870) + 1);
                  uint64_t v203 = (uint64_t ***)operator new(32 * v202 + 80);
                  unsigned int v88 = &v203[4 * v202];
                  *((_DWORD *)v88 + 5) = *((_DWORD *)v88 + 5) & 0x38000000 | v202 & 0x7FFFFFF;
                  if (v184 != -1)
                  {
                    do
                    {
                      *uint64_t v203 = 0;
                      v203[1] = 0;
                      v203[2] = 0;
                      v203[3] = (uint64_t **)v88;
                      v203 += 4;
                    }
                    while (v203 != v88);
                  }
                  sub_1CB845A7C(v197, v844, (uint64_t)v183, v184);
                  *unsigned int v88 = v204;
                  v88[1] = 0;
                  int v205 = *((_DWORD *)v88 + 5) & 0xC0000000 | v202 & 0x7FFFFFF;
                  *((_DWORD *)v88 + 4) = 62;
                  *((_DWORD *)v88 + 5) = v205;
                  *(_OWORD *)(v88 + 3) = 0u;
                  *(_OWORD *)(v88 + 5) = 0u;
                  *((_DWORD *)v88 + 14) = 0;
                  v88[8] = (uint64_t **)v197;
                  v88[9] = (uint64_t **)llvm::GetElementPtrInst::getIndexedType(v197, (uint64_t)v183, v184);
                  llvm::GetElementPtrInst::init(v88, (uint64_t **)v844, v183, v184, (const char **)v874);
                  uint64_t v111 = *(void *)v839;
                  goto LABEL_275;
                }
LABEL_248:
                unsigned int v88 = 0;
                goto LABEL_275;
              }
              int v775 = 0;
              int64_t v776 = (unint64_t)(v148 + 63) >> 6;
              do
              {
                BOOL v712 = v776-- < 1;
                if (v712) {
                  break;
                }
                unint64_t v777 = *(void *)(*(void *)(v146 + 24) + 8 * v776);
                v775 += __clz(v777);
              }
              while (!v777);
              int v778 = v148 | 0xFFFFFFC0;
              if ((v148 & 0x3F) == 0) {
                int v778 = 0;
              }
              if (v775 + v778 != v148) {
                goto LABEL_241;
              }
            }
            else if (v147 == 17)
            {
              if ((sub_1CB844168(v146, 0.0) & 1) == 0) {
                goto LABEL_241;
              }
            }
            else if (v147 - 18 >= 3 && v147 != 13)
            {
              goto LABEL_241;
            }
LABEL_219:
            int v149 = *((_DWORD *)v94 + 5);
            uint64_t v150 = v149 & 0x7FFFFFF;
            if ((v149 & 0x7FFFFFF) == 1) {
              goto LABEL_241;
            }
            if ((v149 & 0x40000000) != 0)
            {
              uint64_t v151 = (void *)*((void *)v94 - 1);
            }
            else
            {
              uint64_t v150 = v150;
              uint64_t v151 = (void *)((char *)v94 - 32 * v150);
            }
            uint64_t v521 = 32 * v150 - 32;
            int v522 = DWORD2(v870);
            if ((unint64_t)DWORD2(v870) + (v521 >> 5) > HIDWORD(v870)) {
              llvm::SmallVectorBase<unsigned int>::grow_pod();
            }
            if (v150 != 1)
            {
              v523 = v151 + 4;
              v524 = (void *)(v870 + 8 * DWORD2(v870));
              uint64_t v525 = 32 * v150 - 32;
              do
              {
                uint64_t v526 = *v523;
                v523 += 4;
                *v524++ = v526;
                v525 -= 32;
              }
              while (v525);
            }
            uint64_t v527 = v522 + ((unint64_t)v521 >> 5);
            DWORD2(v870) = v527;
            uint64_t v528 = *((_DWORD *)a2 + 5) & 0x7FFFFFF;
            if (v527 + (-(-32 * v528 + 64) >> 5) > (unint64_t)HIDWORD(v870)) {
              llvm::SmallVectorBase<unsigned int>::grow_pod();
            }
            if (&a2[-4 * v528 + 8] != a2)
            {
              BOOL v529 = (void *)(v870 + 8 * v527);
              uint64_t v530 = 64 - 32 * v528;
              do
              {
                *v529++ = *(uint64_t *)((char *)a2 + v530);
                v530 += 32;
              }
              while (v530);
            }
            int v167 = v527 + ((unint64_t)-(-32 * v528 + 64) >> 5);
            DWORD2(v870) = v167;
            goto LABEL_242;
          }
          int v152 = *((_DWORD *)v94 + 5);
          if ((v152 & 0x40000000) != 0) {
            unsigned int v153 = (void *)*((void *)v94 - 1);
          }
          else {
            unsigned int v153 = (void *)((char *)v94 - 32 * (v152 & 0x7FFFFFF));
          }
          uint64_t v156 = (llvm::Constant *)v153[4 * (v152 & 0x7FFFFFFu) - 4];
          uint64_t v157 = (llvm *)a2[-4 * (*((_DWORD *)a2 + 5) & 0x7FFFFFF) + 4];
          if (*(void *)v156 == *(void *)v157)
          {
            long long v158 = *(_OWORD *)(v111 + 120);
            *(_OWORD *)&v874[16] = *(_OWORD *)(v111 + 104);
            long long v875 = v158;
            *(_OWORD *)v874 = *(_OWORD *)(v111 + 88);
            *(void *)&long long v875 = a2;
            uint64_t v159 = sub_1CC02A5B0(v157, v156, 0, 0, (uint64_t)v874, (llvm::DSOLocalEquivalent **)3);
            if (v159)
            {
              uint64_t v160 = (uint64_t)v159;
              int v161 = *((_DWORD *)v94 + 5);
              uint64_t v162 = v161 & 0x7FFFFFF;
              if ((v161 & 0x7FFFFFF) != 2)
              {
                if ((v161 & 0x40000000) != 0)
                {
                  uint64_t v531 = (void *)*((void *)v94 - 1);
                }
                else
                {
                  uint64_t v162 = v162;
                  uint64_t v531 = (void *)((char *)v94 - 32 * v162);
                }
                uint64_t v555 = 32 * (v162 - 1) - 32;
                int v556 = DWORD2(v870);
                if ((unint64_t)DWORD2(v870) + (v555 >> 5) > HIDWORD(v870)) {
                  llvm::SmallVectorBase<unsigned int>::grow_pod();
                }
                if (v162 != 2)
                {
                  uint64_t v557 = v531 + 4;
                  v558 = (void *)(v870 + 8 * DWORD2(v870));
                  uint64_t v559 = 32 * v162 - 64;
                  do
                  {
                    uint64_t v560 = *v557;
                    v557 += 4;
                    *v558++ = v560;
                    v559 -= 32;
                  }
                  while (v559);
                }
                unsigned int v561 = v556 + ((unint64_t)v555 >> 5);
                DWORD2(v870) = v561;
                if (v561 >= HIDWORD(v870)) {
                  llvm::SmallVectorBase<unsigned int>::grow_pod();
                }
                *(void *)(v870 + 8 * v561) = v159;
                int v562 = ++DWORD2(v870);
                uint64_t v563 = *((_DWORD *)a2 + 5) & 0x7FFFFFF;
                uint64_t v564 = -(-32 * v563 + 64);
                if ((unint64_t)DWORD2(v870) + (v564 >> 5) > HIDWORD(v870)) {
                  llvm::SmallVectorBase<unsigned int>::grow_pod();
                }
                if (&a2[-4 * v563 + 8] != a2)
                {
                  unint64_t v565 = (void *)(v870 + 8 * DWORD2(v870));
                  uint64_t v566 = 64 - 32 * v563;
                  do
                  {
                    *v565++ = *(uint64_t *)((char *)a2 + v566);
                    v566 += 32;
                  }
                  while (v566);
                }
                int v167 = v562 + ((unint64_t)v564 >> 5);
                DWORD2(v870) = v167;
                goto LABEL_242;
              }
              if (sub_1CC9D90D0((uint64_t)v94, (uint64_t)a2)) {
                char v163 = 2;
              }
              else {
                char v163 = 0;
              }
              *((unsigned char *)a2 + 17) = *((unsigned char *)a2 + 17) & 0xFD | v163;
              int v164 = *((_DWORD *)v94 + 5);
              if ((v164 & 0x40000000) != 0) {
                uint64_t v165 = (uint64_t *)*((void *)v94 - 1);
              }
              else {
                uint64_t v165 = (uint64_t *)((char *)v94 - 32 * (v164 & 0x7FFFFFF));
              }
              unsigned int v88 = (uint64_t ***)a2;
              sub_1CC9D28DC(v111, (uint64_t)a2, 0, *v165);
              sub_1CC9D28DC(v111, (uint64_t)a2, 1u, v160);
              goto LABEL_275;
            }
          }
          goto LABEL_248;
        }
        if ((v109 & 0x40000000) != 0) {
          v660 = (uint64_t **)*((void *)v94 - 1);
        }
        else {
          v660 = (uint64_t **)((char *)v94 - 32 * (v109 & 0x7FFFFFF));
        }
        if ((*(_DWORD *)(*a2 + 8) & 0xFE) != 0x12 || (v666 = *v660, (*(_DWORD *)(**v660 + 8) & 0xFE) == 0x12))
        {
          if ((v109 & 0x40000000) != 0) {
            v667 = (void *)*((void *)v94 - 1);
          }
          else {
            v667 = (void *)((char *)v94 - 32 * (v109 & 0x7FFFFFF));
          }
          v668 = v667 + 4;
          if (v667[4])
          {
            *(void *)v667[6] = v667[5];
            uint64_t v669 = v667[5];
            if (v669) {
              *(void *)(v669 + 16) = v667[6];
            }
          }
          void *v668 = v112;
          if (v112)
          {
            uint64_t v672 = *(void *)(v112 + 8);
            int v671 = (void *)(v112 + 8);
            uint64_t v670 = v672;
            v667[5] = v672;
            if (v672) {
              *(void *)(v670 + 16) = v667 + 5;
            }
            v667[6] = v671;
            *int v671 = v668;
          }
          v673 = &a2[-4 * (*((_DWORD *)a2 + 5) & 0x7FFFFFF)];
          int v674 = v673 + 4;
          if (v673[4])
          {
            *(void *)v673[6] = v673[5];
            BOOL v675 = (void **)v673[5];
            if (v675) {
              v675[2] = (void *)v673[6];
            }
          }
          *int v674 = v509;
          if (v509)
          {
            int v678 = *(void ***)(v509 + 8);
            v677 = (uint64_t **)(v509 + 8);
            unsigned int v676 = v678;
            v673[5] = (uint64_t)v678;
            if (v678) {
              v676[2] = v673 + 5;
            }
            v673[6] = (uint64_t)v677;
            *v677 = v674;
          }
LABEL_115:
          unsigned int v88 = (uint64_t ***)a2;
          goto LABEL_339;
        }
        uint64_t v681 = *(void *)(v111 + 24);
        *(void *)(v681 + 48) = *((void *)v94 + 5);
        *(void *)(v681 + 56) = (char *)v94 + 24;
        v682 = (unsigned __int8 *)*((void *)v94 + 6);
        *(void *)v874 = v682;
        if (v682)
        {
          llvm::MetadataTracking::track((uint64_t)v874, v682, 2);
          uint64_t v683 = *(void *)v874;
        }
        else
        {
          uint64_t v683 = 0;
        }
        sub_1CB8461A4(v681, 0, v683);
        if (*(void *)v874)
        {
          int v772 = **(unsigned char **)v874;
          if ((v772 - 4) > 0x1E)
          {
            if ((v772 - 3) >= 0xFFFFFFFE) {
              uint64_t v781 = *(void *)v874;
            }
            else {
              uint64_t v781 = 0;
            }
            if ((v772 - 3) < 0xFFFFFFFE)
            {
              if (v772 == 3) {
                *(void *)(*(void *)v874 + 8) = 0;
              }
              goto LABEL_824;
            }
            unint64_t v774 = v781 + 8;
          }
          else
          {
            if ((*(unsigned char *)(*(void *)v874 + 1) & 0x7F) != 2 && !*(_DWORD *)(*(void *)v874 + 12)) {
              goto LABEL_824;
            }
            uint64_t v773 = *(void *)(*(void *)v874 + 16);
            if ((v773 & 4) == 0) {
              goto LABEL_824;
            }
            unint64_t v774 = v773 & 0xFFFFFFFFFFFFFFF8;
            if (!v774) {
              goto LABEL_824;
            }
          }
          *(void *)&long long v870 = v874;
          sub_1CC5FA668(v774 + 16, &v870);
        }
LABEL_824:
        v684 = *(uint64_t **)(v519 + 24);
        uint64_t v685 = a2[8];
        if ((*((unsigned char *)v94 + 23) & 0x10) != 0)
        {
          uint64_t v686 = ***(void ***)v94;
          uint64_t v687 = *(void *)(v686 + 152);
          uint64_t v688 = *(unsigned int *)(v686 + 168);
          if (!v688) {
            goto LABEL_925;
          }
          LODWORD(v689) = (v688 - 1) & ((v94 >> 4) ^ (v94 >> 9));
          unint64_t v690 = (llvm::Value **)(v687 + 16 * v689);
          char v691 = *v690;
          if (*v690 != v94)
          {
            int v692 = 1;
            while (v691 != (llvm::Value *)-4096)
            {
              int v693 = v689 + v692++;
              uint64_t v689 = v693 & (v688 - 1);
              char v691 = *(llvm::Value **)(v687 + 16 * v689);
              if (v691 == v94)
              {
                unint64_t v690 = (llvm::Value **)(v687 + 16 * v689);
                goto LABEL_926;
              }
            }
LABEL_925:
            unint64_t v690 = (llvm::Value **)(v687 + 16 * v688);
          }
LABEL_926:
          v754 = v690[1];
          uint64_t v757 = *(void *)v754;
          v755 = (char *)v754 + 16;
          uint64_t v756 = v757;
        }
        else
        {
          uint64_t v756 = 0;
          v755 = &byte_1CFBCE98E;
        }
        LOWORD(v872) = 261;
        *(void *)&long long v870 = v755;
        *((void *)&v870 + 1) = v756;
        v758 = sub_1CB930F7C(v684, v685, v666, (const char *)v112, (uint64_t)&v870);
        v759 = (uint64_t *)v758;
        if (v758 && *((unsigned char *)v758 + 16) == 62) {
          *((unsigned char *)v758 + 17) = *((unsigned char *)v758 + 17) & 0xFD | *((unsigned char *)v94 + 17) & 2;
        }
        uint64_t v760 = a2[8];
        *(void *)v874 = v509;
        LOWORD(v872) = 257;
        v761 = (char *)operator new(0x90uLL);
        *((_DWORD *)v761 + 21) = *((_DWORD *)v761 + 21) & 0x38000000 | 2;
        unsigned int v88 = (uint64_t ***)(v761 + 64);
        *(void *)v761 = 0;
        *((void *)v761 + 1) = 0;
        *((void *)v761 + 2) = 0;
        *((void *)v761 + 3) = v761 + 64;
        *((void *)v761 + 4) = 0;
        *((void *)v761 + 5) = 0;
        *((void *)v761 + 6) = 0;
        *((void *)v761 + 7) = v761 + 64;
        sub_1CB845A7C(v760, v759, (uint64_t)v874, 1);
        *((void *)v761 + 8) = v762;
        *((void *)v761 + 9) = 0;
        unsigned int v763 = *((_DWORD *)v761 + 21) & 0xC0000000 | 2;
        *((_DWORD *)v761 + 20) = 62;
        *((_DWORD *)v761 + 21) = v763;
        *(_OWORD *)(v761 + 88) = 0u;
        *(_OWORD *)(v761 + 104) = 0u;
        *((_DWORD *)v761 + 30) = 0;
        *((void *)v761 + 16) = v760;
        *((void *)v761 + 17) = llvm::GetElementPtrInst::getIndexedType(v760, (uint64_t)v874, 1);
        llvm::GetElementPtrInst::init((uint64_t ***)v761 + 8, (uint64_t **)v759, (uint64_t *)v874, 1, (const char **)&v870);
        v761[81] = v761[81] & 0xFD | *((unsigned char *)a2 + 17) & 2;
        goto LABEL_339;
      }
LABEL_99:
      uint64_t v45 = v858;
      uint64_t v46 = v49;
    }
  }
LABEL_340:
  if (v867 != v869) {
    free(v867);
  }
  return v13;
}

uint64_t sub_1CC9DDA74(uint64_t *a1, uint64_t a2)
{
  v105[4] = *MEMORY[0x1E4F143B8];
  int v100 = v102;
  uint64_t v101 = 0x4000000000;
  BOOL v97 = v99;
  uint64_t v98 = 0x800000000;
  if (*(unsigned char *)(a2 + 16) == 59)
  {
    llvm::findDbgUsers((uint64_t)&v97, (uint64_t ***)a2);
    operator new();
  }
  int v4 = (uint64_t *)a1[8];
  unsigned int v103 = v105;
  uint64_t v104 = 0x400000000;
  llvm::getAllocationFamily(a2, v4, (uint64_t)&__s2);
  if (v104 >= HIDWORD(v104)) {
    llvm::SmallVectorBase<unsigned int>::grow_pod();
  }
  v103[v104] = a2;
  unsigned int v10 = v104 + 1;
  while (1)
  {
    uint64_t v11 = (void *)v103[--v10];
    LODWORD(v104) = v10;
    uint64_t v12 = v11[1];
    if (v12) {
      break;
    }
LABEL_111:
    if (!v10)
    {
      int v41 = 1;
      goto LABEL_114;
    }
  }
  while (1)
  {
    uint64_t v13 = *(void *)(v12 + 24);
    uint64_t v86 = v13;
    unsigned int v14 = *(unsigned __int8 *)(v13 + 16);
    if (v14 <= 0x4C)
    {
      if (v14 == 61)
      {
        if (*(_WORD *)(v13 + 18)) {
          goto LABEL_113;
        }
        int v21 = *(void **)(v13 - 32);
        goto LABEL_39;
      }
      if (v14 != 62) {
        goto LABEL_113;
      }
LABEL_32:
      int v19 = v101;
      if (v101 >= HIDWORD(v101)) {
        goto LABEL_81;
      }
      unint64_t v20 = (llvm::ValueHandleBase *)((char *)v100 + 24 * v101);
      *(void *)unint64_t v20 = 6;
      *((void *)v20 + 1) = 0;
      *((void *)v20 + 2) = v13;
      if (v13 != -8192 && v13 != -4096 && v13)
      {
LABEL_55:
        llvm::ValueHandleBase::AddToUseList(v20);
        int v19 = v101;
      }
LABEL_56:
      LODWORD(v101) = v19 + 1;
LABEL_57:
      if (v104 >= (unint64_t)HIDWORD(v104)) {
        llvm::SmallVectorBase<unsigned int>::grow_pod();
      }
      v103[v104] = v86;
      LODWORD(v104) = v104 + 1;
      goto LABEL_72;
    }
    if (v14 - 77 < 2) {
      goto LABEL_32;
    }
    if (v14 == 81)
    {
      if ((*(_WORD *)(v13 + 18) & 0x3E) != 0x20) {
        goto LABEL_113;
      }
      uint64_t v24 = *(void *)(v13 - 64 + 32 * (*(void *)(v13 - 64) == (void)v11));
      int v25 = *(unsigned __int8 *)(v24 + 16);
      if (v25 != 19)
      {
        if (v25 == 60)
        {
          if (*(unsigned char *)(*(void *)(v24 - 32) + 16) != 3) {
            goto LABEL_113;
          }
        }
        else
        {
          if (byte_1EBD04470) {
            int v27 = 43;
          }
          else {
            int v27 = 47;
          }
          sub_1CC095244(v24, v27, v4, &__s1);
          if (v24 == a2 || v93 == 0) {
            goto LABEL_113;
          }
        }
      }
      goto LABEL_66;
    }
    if (v14 != 84) {
      goto LABEL_113;
    }
    uint64_t v15 = *(void *)(v13 - 32);
    if (v15)
    {
      if (!*(unsigned char *)(v15 + 16) && *(void *)(v15 + 24) == *(void *)(v13 + 72) && (*(unsigned char *)(v15 + 33) & 0x20) != 0) {
        break;
      }
    }
    if (!*(void *)(v13 + 8)
      && llvm::Instruction::willReturn((llvm::Instruction *)v13)
      && ((uint64_t v16 = *(void *)(v13 + 64)) != 0 && (*(unsigned char *)(v16 + 16) & 0x20) != 0
       || llvm::CallBase::hasFnAttrOnCalledFunction(v13, 37)))
    {
      llvm::MemoryLocation::getForDest((llvm::Instruction *)v13, v4, (uint64_t)&__s1);
      if (v95)
      {
        if (__s1 == v11) {
          goto LABEL_66;
        }
      }
    }
    uint64_t v17 = v86;
    char v96 = 0;
    BOOL v18 = (uint64_t ***)sub_1CC0960E8(v86, &v96);
    if (!v18
      || v96
      || (LODWORD(__s1) = 0, !v4)
      || (uint64_t v40 = (llvm::Function *)v18, !llvm::TargetLibraryInfoImpl::getLibFunc(*v4, v18, &__s1))
      || ((*(void *)(v4[1] + (((unint64_t)__s1 >> 3) & 0x1FFFFFF8)) >> (char)__s1) & 1) != 0
      || ((*(unsigned __int8 *)(*v4 + ((unint64_t)__s1 >> 2)) >> (2 * (__s1 & 3))) & 3) == 0
      || !llvm::isLibFreeFunction(v40, (int)__s1)
      || *(unsigned char *)(v17 + 16) != 84)
    {
LABEL_23:
      sub_1CC095244(v86, 16, v4, &__s1);
      if (!v93) {
        goto LABEL_113;
      }
      llvm::getAllocationFamily(v86, v4, (uint64_t)&__s1);
      if (v92 && v89)
      {
        uint64_t v6 = (const llvm::APInt *)__n;
        if (__n != v88 || __n && memcmp(__s1, __s2, __n)) {
          goto LABEL_113;
        }
      }
      else if ((v92 == 0) == (v89 != 0))
      {
        goto LABEL_113;
      }
      int v19 = v101;
      if (v101 < HIDWORD(v101))
      {
        uint64_t v26 = v86;
        unint64_t v20 = (llvm::ValueHandleBase *)((char *)v100 + 24 * v101);
        *(void *)unint64_t v20 = 6;
        *((void *)v20 + 1) = 0;
        *((void *)v20 + 2) = v26;
        if (v26 != -8192 && v26 != -4096 && v26) {
          goto LABEL_55;
        }
        goto LABEL_56;
      }
LABEL_81:
      sub_1CC9E6F68((unsigned int *)&v100, &v86);
      goto LABEL_57;
    }
    llvm::getAllocationFamily(v86, v4, (uint64_t)&__s1);
    if (v92 && v89)
    {
      uint64_t v6 = (const llvm::APInt *)__n;
      if (__n != v88 || __n && memcmp(__s1, __s2, __n)) {
        goto LABEL_23;
      }
    }
    else if ((v92 == 0) == (v89 != 0))
    {
      goto LABEL_23;
    }
LABEL_66:
    int v22 = v101;
    if (v101 >= HIDWORD(v101))
    {
LABEL_82:
      sub_1CC9E6F68((unsigned int *)&v100, &v86);
      goto LABEL_72;
    }
    uint64_t v29 = v86;
    uint64_t v23 = (llvm::ValueHandleBase *)((char *)v100 + 24 * v101);
    *(void *)uint64_t v23 = 6;
    *((void *)v23 + 1) = 0;
    *((void *)v23 + 2) = v29;
    if (v29 != -8192 && v29 != -4096 && v29)
    {
LABEL_70:
      llvm::ValueHandleBase::AddToUseList(v23);
      int v22 = v101;
    }
LABEL_71:
    LODWORD(v101) = v22 + 1;
LABEL_72:
    uint64_t v12 = *(void *)(v12 + 8);
    if (!v12)
    {
      unsigned int v10 = v104;
      goto LABEL_111;
    }
  }
  int v30 = *(_DWORD *)(v15 + 36);
  if (v30 > 235)
  {
    if (v30 == 236) {
      goto LABEL_40;
    }
    if (v30 != 290) {
      goto LABEL_113;
    }
    goto LABEL_32;
  }
  uint64_t v31 = (v30 - 163);
  if (v31 > 0x24)
  {
LABEL_94:
    if (v30 != 7) {
      goto LABEL_113;
    }
    goto LABEL_40;
  }
  if (((1 << (v30 + 93)) & 0x33) != 0) {
    goto LABEL_40;
  }
  if (((1 << (v30 + 93)) & 0x1480000000) == 0)
  {
    if (v31 == 3) {
      goto LABEL_32;
    }
    goto LABEL_94;
  }
  uint64_t v32 = (void *)(v13 - 32 * (*(_DWORD *)(v13 + 20) & 0x7FFFFFF));
  uint64_t v33 = v32[12];
  uint64_t v34 = *(unsigned int *)(v33 + 32);
  if (v34 <= 0x40)
  {
    if (*(void *)(v33 + 24)) {
      goto LABEL_113;
    }
LABEL_92:
    int v21 = (void *)*v32;
LABEL_39:
    if (v21 != v11) {
      goto LABEL_113;
    }
LABEL_40:
    int v22 = v101;
    if (v101 >= HIDWORD(v101)) {
      goto LABEL_82;
    }
    uint64_t v23 = (llvm::ValueHandleBase *)((char *)v100 + 24 * v101);
    *(void *)uint64_t v23 = 6;
    *((void *)v23 + 1) = 0;
    *((void *)v23 + 2) = v13;
    if (v13 != -8192 && v13 != -4096 && v13) {
      goto LABEL_70;
    }
    goto LABEL_71;
  }
  int v35 = 0;
  int64_t v36 = (unint64_t)(v34 + 63) >> 6;
  do
  {
    BOOL v37 = v36-- < 1;
    if (v37) {
      break;
    }
    unint64_t v38 = *(void *)(*(void *)(v33 + 24) + 8 * v36);
    v35 += __clz(v38);
  }
  while (!v38);
  int v39 = v34 | 0xFFFFFFC0;
  if ((v34 & 0x3F) == 0) {
    int v39 = 0;
  }
  if (v35 + v39 == v34) {
    goto LABEL_92;
  }
LABEL_113:
  int v41 = 0;
LABEL_114:
  if (v103 != v105) {
    free(v103);
  }
  if (v41)
  {
    if (v101)
    {
      uint64_t v42 = 0;
      do
      {
        uint64_t v43 = *((void *)v100 + 3 * v42 + 2);
        if (v43)
        {
          if (*(unsigned char *)(v43 + 16) == 84)
          {
            uint64_t v44 = *(void *)(v43 - 32);
            if (v44)
            {
              if (!*(unsigned char *)(v44 + 16)
                && *(void *)(v44 + 24) == *(void *)(v43 + 72)
                && (*(unsigned char *)(v44 + 33) & 0x20) != 0
                && *(_DWORD *)(v44 + 36) == 236)
              {
                uint64_t v45 = llvm::lowerObjectSizeCall((llvm::Instruction *)v43, a1[10], a1[8], a1[6], 1, v8, v9);
                sub_1CC9D3C84((uint64_t)a1, (llvm::ValueAsMetadata *)v43, v45);
                sub_1CC9D6844((uint64_t)a1, v43);
              }
            }
          }
        }
        ++v42;
      }
      while (v42 != v101);
      uint64_t v46 = 0;
      do
      {
        uint64_t v47 = (llvm::DbgVariableIntrinsic *)*((void *)v100 + 3 * v46 + 2);
        if (v47)
        {
          int v48 = *((unsigned __int8 *)v47 + 16);
          if (v48 == 61)
          {
            if (v98)
            {
              unint64_t v58 = (llvm **)v97;
              uint64_t v59 = 8 * v98;
              do
              {
                if (*(_DWORD *)(*((void *)*v58 - 4) + 36) != 58) {
                  llvm::ConvertDebugDeclareToDebugValue(*v58, v47, 0, v7);
                }
                ++v58;
                v59 -= 8;
              }
              while (v59);
            }
          }
          else
          {
            if (v48 == 81)
            {
              uint64_t v49 = ***(void ***)v47;
              unsigned int v50 = *((_WORD *)v47 + 9) & 0x3F;
              BOOL v37 = v50 > 0x28;
              uint64_t v51 = (1 << v50) & 0x15600000055;
              uint64_t v53 = !v37 && v51 != 0;
              uint64_t v54 = *(llvm::ConstantInt **)(v49 + 1888);
              unint64_t v55 = *(unsigned int *)(v49 + 1896);
              LODWORD(__n) = v55 >> 8;
              if (v55 >> 8 > 0x40) {
                operator new[]();
              }
              if (v55 <= 0xFF) {
                unint64_t v56 = 0;
              }
              else {
                unint64_t v56 = 0xFFFFFFFFFFFFFFFFLL >> ~(BYTE1(v55) + 63);
              }
              __s1 = (void *)(v56 & v53);
              BOOL v57 = (llvm::Value *)llvm::ConstantInt::get(v54, (llvm::LLVMContext *)&__s1, v6);
              if (__n >= 0x41)
              {
                if (__s1) {
                  MEMORY[0x1D25D9CB0](__s1, 0x1000C8000313F17);
                }
              }
            }
            else
            {
              BOOL v57 = (llvm::Value *)llvm::PoisonValue::get(*(llvm::PoisonValue **)v47, v5);
            }
            sub_1CC9D3C84((uint64_t)a1, v47, v57);
          }
          sub_1CC9D6844((uint64_t)a1, (uint64_t)v47);
        }
        ++v46;
      }
      while (v46 != v101);
    }
    if (*(unsigned char *)(a2 + 16) == 33)
    {
      uint64_t v80 = *(uint64_t ***)(*(void *)(*(void *)(a2 + 40) + 56) + 40);
      llvm::Intrinsic::getType(*v80, 60, 0, 0);
      Type = (llvm::PointerType *)llvm::Intrinsic::getType(*v80, 60, 0, 0);
      llvm::Module::getOrInsertFunction((uint64_t)v80, "llvm.donothing", (const char *)0xE, Type, 0);
      uint64_t v83 = 0;
      if (v82) {
        uint64_t v83 = *(void *)(v82 + 24);
      }
      uint64_t v84 = *(void *)(a2 - 96);
      uint64_t v85 = *(void *)(a2 - 64);
      __int16 v94 = 257;
      sub_1CD689980(v83, v82, v84, v85, (const char **)&__s1, *(llvm::BasicBlock **)(a2 + 40));
    }
    if (v98)
    {
      uint64_t v60 = (uint64_t *)v97;
      uint64_t v61 = 8 * v98;
      do
      {
        uint64_t v62 = *v60;
        if (*(_DWORD *)(*(void *)(*v60 - 32) + 36) != 58
          || (uint64_t v63 = *(void **)(*(void *)(*(void *)(v62 - 32 * (*(_DWORD *)(v62 + 20) & 0x7FFFFFF) + 64) + 24)
                               + 24),
              ((*(void *)(*(void *)(*(void *)(v62 - 32 * (*(_DWORD *)(v62 + 20) & 0x7FFFFFF) + 64) + 24) + 32)
              - (void)v63) & 0x7FFFFFFF8) != 0)
          && *v63 == 6)
        {
          llvm::SymbolTableListTraits<llvm::Instruction>::removeNodeFromList();
        }
        ++v60;
        v61 -= 8;
      }
      while (v61);
    }
    sub_1CC9D6844((uint64_t)a1, a2);
  }
  if (v97 != v99) {
    free(v97);
  }
  unint64_t v64 = (char *)v100;
  if (v101)
  {
    unsigned int v65 = (char *)v100 + 24 * v101;
    do
    {
      uint64_t v66 = *((void *)v65 - 1);
      if (v66 && v66 != -8192 && v66 != -4096)
      {
        unint64_t v67 = *((void *)v65 - 3) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v67 = *((void *)v65 - 2);
        uint64_t v68 = (unint64_t *)*((void *)v65 - 2);
        if (v68)
        {
          unint64_t *v68 = *v68 & 7 | v67;
        }
        else
        {
          uint64_t v69 = *((void *)v65 - 1);
          uint64_t v70 = ***(int32x2_t ****)v69;
          unint64_t v71 = (unint64_t)v70[303];
          if (v71 <= v67)
          {
            uint64_t v72 = v70[305].u32[0];
            if (v71 + 16 * v72 > v67)
            {
              unsigned int v73 = v72 - 1;
              LODWORD(v74) = v73 & ((v69 >> 4) ^ (v69 >> 9));
              uint64_t v75 = (uint64_t *)(v71 + 16 * v74);
              uint64_t v76 = *v75;
              if (v69 == *v75)
              {
LABEL_182:
                *uint64_t v75 = -8192;
                v70[304] = vadd_s32(v70[304], (int32x2_t)0x1FFFFFFFFLL);
                uint64_t v69 = *((void *)v65 - 1);
              }
              else
              {
                int v77 = 1;
                while (v76 != -4096)
                {
                  int v78 = v74 + v77++;
                  uint64_t v74 = v78 & v73;
                  uint64_t v76 = *(void *)(v71 + 16 * v74);
                  if (v69 == v76)
                  {
                    uint64_t v75 = (uint64_t *)(v71 + 16 * v74);
                    goto LABEL_182;
                  }
                }
              }
              *(unsigned char *)(v69 + 17) &= ~1u;
            }
          }
        }
      }
      v65 -= 24;
    }
    while (v65 != v64);
    unint64_t v64 = (char *)v100;
  }
  if (v64 != v102) {
    free(v64);
  }
  return 0;
}

uint64_t sub_1CC9DE718(uint64_t a1, llvm::Instruction *a2)
{
  uint64_t v2 = (uint64_t)a2;
  uint64_t v57 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = *((void *)a2 - 4 * (*((_DWORD *)a2 + 5) & 0x7FFFFFF));
  int v5 = *(unsigned __int8 *)(v4 + 16);
  if ((v5 - 11) <= 1)
  {
    sub_1CD6895C8(a1, a2);
    goto LABEL_4;
  }
  if (v5 == 84)
  {
    uint64_t v8 = *(void *)(v4 + 8);
    if (v8)
    {
      if (!*(void *)(v8 + 8))
      {
        sub_1CC095244(*((void *)a2 - 4 * (*((_DWORD *)a2 + 5) & 0x7FFFFFF)), 16, *(uint64_t **)(a1 + 64), &v49);
        if (v51)
        {
          uint64_t v7 = sub_1CC9D3C84(a1, (llvm::ValueAsMetadata *)v4, *(llvm::Value **)(v4 - 32 * (*(_DWORD *)(v4 + 20) & 0x7FFFFFF)));
          uint64_t v6 = a1;
LABEL_5:
          sub_1CC9D6844(v6, (uint64_t)v7);
        }
      }
    }
  }
  else if (v5 == 19)
  {
LABEL_4:
    uint64_t v6 = a1;
    uint64_t v7 = (llvm::UndefValue **)v2;
    goto LABEL_5;
  }
  if (!*(unsigned char *)(a1 + 40)) {
    return 0;
  }
  unsigned int v41 = 0;
  if (!sub_1CC0A4DF4(*(uint64_t **)(a1 + 64), v2, &v41)) {
    return 0;
  }
  uint64_t v9 = *(void **)(a1 + 64);
  if ((*(void *)(v9[1] + (((unint64_t)v41 >> 3) & 0x1FFFFFF8)) >> v41)) {
    return 0;
  }
  if (v41 != 259) {
    return 0;
  }
  if ((*(unsigned char *)(*v9 + 64) & 0xC0) == 0) {
    return 0;
  }
  uint64_t v11 = *(const llvm::DataLayout **)(a1 + 80);
  uint64_t v12 = *(llvm::Value **)(v2 - 32 * (*(_DWORD *)(v2 + 20) & 0x7FFFFFF));
  uint64_t v13 = *(llvm::BasicBlock **)(v2 + 40);
  uint64_t SinglePredecessor = llvm::BasicBlock::getSinglePredecessor(v13);
  if (!SinglePredecessor) {
    return 0;
  }
  uint64_t v16 = (void *)((char *)v13 + 40);
  uint64_t v15 = (void *)*((void *)v13 + 5);
  if (v15 == (void *)((char *)v13 + 40)) {
    return 0;
  }
  uint64_t v17 = v15 ? (uint64_t)(v15 - 3) : 0;
  unsigned int v18 = *(unsigned __int8 *)(v17 + 16) - 40;
  uint64_t v19 = v18 >= 0xFFFFFFF5 ? v17 : 0;
  if (!v15) {
    return 0;
  }
  BOOL v20 = *(unsigned char *)(v19 + 16) == 30 && v18 >= 0xFFFFFFF5;
  if (!v20 || (*(_DWORD *)(v19 + 20) & 0x7FFFFFF) != 1) {
    return 0;
  }
  uint64_t v21 = SinglePredecessor;
  uint64_t v22 = *(void *)(v19 - 32);
  uint64_t v23 = 3;
  uint64_t v24 = (void *)((char *)v13 + 40);
  do
  {
    uint64_t v24 = (void *)v24[1];
    --v23;
  }
  while (v24 != v16);
  if (v23)
  {
    llvm::BasicBlock::instructionsWithoutDebug(v13, 1, (uint64_t)&v49);
    long long v46 = v49;
    if (v53)
    {
      if (v53 == &v50)
      {
        int v48 = v47;
        (*((void (**)(void))*v53 + 3))();
      }
      else
      {
        int v48 = (void *)(*((uint64_t (**)(void))*v53 + 2))();
      }
    }
    else
    {
      int v48 = 0;
    }
    long long v43 = v54;
    if (v56)
    {
      if (v56 == v55)
      {
        uint64_t v45 = v44;
        (*(void (**)(void))(*v56 + 24))();
      }
      else
      {
        uint64_t v45 = (void *)(*(uint64_t (**)(void))(*v56 + 16))();
      }
    }
    else
    {
      uint64_t v45 = 0;
    }
    uint64_t v25 = v46;
LABEL_49:
    while (v25 != (void)v43)
    {
      if (v25) {
        uint64_t v26 = (unsigned __int8 *)(v25 - 24);
      }
      else {
        uint64_t v26 = 0;
      }
      if (v26 != (unsigned __int8 *)v2 && v26 != (unsigned __int8 *)v19)
      {
        if (v25 && v26[16] - 79 >= 0xFFFFFFF3 && llvm::CastInst::isNoopCast((llvm::CastInst *)v26, v11))
        {
          uint64_t v25 = v46;
          goto LABEL_61;
        }
        if (v45 == v44)
        {
          (*(void (**)(void *))(v44[0] + 32))(v44);
        }
        else if (v45)
        {
          (*(void (**)(void))(*v45 + 40))();
        }
        if (v48 == v47)
        {
          (*(void (**)(void *))(v47[0] + 32))(v47);
        }
        else if (v48)
        {
          (*(void (**)(void))(*v48 + 40))();
        }
        if (v56 == v55)
        {
          (*(void (**)(void *))(v55[0] + 32))(v55);
        }
        else if (v56)
        {
          (*(void (**)(void))(*v56 + 40))();
        }
        if (v53 == &v50)
        {
          (*((void (**)(llvm::Value **))v50 + 4))(&v50);
        }
        else if (v53)
        {
          (*((void (**)(void))*v53 + 5))();
        }
        return 0;
      }
LABEL_61:
      while (1)
      {
        uint64_t v25 = *(void *)(v25 + 8);
        *(void *)&long long v46 = v25;
        if (v25 == *((void *)&v46 + 1)) {
          break;
        }
        if (!v48)
        {
          sub_1CB920400();
          goto LABEL_118;
        }
        char v28 = (*(uint64_t (**)(void))(*v48 + 48))();
        uint64_t v25 = v46;
        if (v28) {
          goto LABEL_49;
        }
      }
    }
    if (v45 == v44)
    {
      (*(void (**)(void *))(v44[0] + 32))(v44);
    }
    else if (v45)
    {
      (*(void (**)(void))(*v45 + 40))();
    }
    if (v48 == v47)
    {
      (*(void (**)(void *))(v47[0] + 32))(v47);
    }
    else if (v48)
    {
      (*(void (**)(void))(*v48 + 40))();
    }
    uint64_t v29 = v56;
    if (v56 == v55)
    {
      (*(void (**)(void *))(v55[0] + 32))(v55);
    }
    else
    {
LABEL_118:
      if (v29) {
        (*(void (**)(void *))(*v29 + 40))(v29);
      }
    }
    if (v53 == &v50)
    {
      (*((void (**)(llvm::Value **))v50 + 4))(&v50);
    }
    else if (v53)
    {
      (*((void (**)(void))*v53 + 5))();
    }
  }
  uint64_t v30 = *(void *)(v21 + 40);
  if (v30 == v21 + 40)
  {
    uint64_t v32 = 0;
  }
  else
  {
    uint64_t v31 = v30 ? v30 - 24 : 0;
    uint64_t v32 = *(unsigned __int8 *)(v31 + 16) - 29 >= 0xB ? 0 : v31;
  }
  *(void *)&long long v46 = 0;
  *(void *)&long long v43 = 0;
  int v42 = 0;
  uint64_t v33 = llvm::Value::stripPointerCasts(v12);
  *(void *)&long long v49 = &v42;
  *((void *)&v49 + 1) = v12;
  unsigned int v50 = v33;
  unsigned int v52 = &v46;
  uint64_t v53 = (llvm::Value **)&v43;
  if (!v32) {
    return 0;
  }
  if (*(unsigned char *)(v32 + 16) != 30) {
    return 0;
  }
  if ((*(_DWORD *)(v32 + 20) & 0x7FFFFFF) != 3) {
    return 0;
  }
  if (!sub_1CD689A54((uint64_t)&v49, *(void *)(v32 - 96))) {
    return 0;
  }
  uint64_t v34 = *(void *)(v32 - 32);
  if (!v34) {
    return 0;
  }
  *(void *)&long long v46 = *(void *)(v32 - 32);
  uint64_t v35 = *(void *)(v32 - 64);
  if (!v35) {
    return 0;
  }
  *(void *)&long long v43 = *(void *)(v32 - 64);
  if ((v42 - 34) < 0xFFFFFFFE) {
    return 0;
  }
  if (v42 != 32) {
    uint64_t v34 = v35;
  }
  if (v22 != v34) {
    return 0;
  }
  int64_t v36 = (void *)*((void *)v13 + 6);
  while (v36 != v16)
  {
    BOOL v37 = v36 ? (llvm::Instruction *)(v36 - 3) : 0;
    if (v37 == (llvm::Instruction *)v19) {
      break;
    }
    int64_t v36 = (void *)v36[1];
    llvm::Instruction::moveBefore(v37, (llvm::Instruction *)v32);
  }
  *(void *)&long long v49 = *(void *)(v2 + 64);
  uint64_t v38 = llvm::AttributeList::removeAttributeAtIndex((uint64_t *)&v49, **(uint64_t ***)v2, 1, 39);
  *(void *)&long long v49 = v38;
  uint64_t AttributeAtIndex = llvm::AttributeList::getAttributeAtIndex((uint64_t *)&v49, 1, 76);
  if (AttributeAtIndex)
  {
    uint64_t v40 = *(void *)(AttributeAtIndex + 16);
    *(void *)&long long v49 = llvm::AttributeList::removeAttributeAtIndex((uint64_t *)&v49, **(uint64_t ***)v2, 1, 76);
    uint64_t v38 = llvm::AttributeList::addDereferenceableOrNullParamAttr((llvm::AttributeList *)&v49, **(llvm::LLVMContext ***)v2, 0, v40);
  }
  *(void *)(v2 + 64) = v38;
  return v2;
}

llvm::LandingPadInst *sub_1CC9DEFFC(llvm::LandingPadInst *a1, const llvm::Value *a2)
{
  uint64_t v2 = a1;
  v163[16] = *MEMORY[0x1E4F143B8];
  uint64_t v3 = *(void *)(*((void *)a1 + 5) + 56);
  int v4 = *(_DWORD *)(v3 + 20);
  if ((v4 & 0x40000000) != 0) {
    int v5 = *(llvm::Value ***)(v3 - 8);
  }
  else {
    int v5 = (llvm::Value **)(v3 - 32 * (v4 & 0x7FFFFFF));
  }
  unsigned __int8 v6 = llvm::classifyEHPersonality(*v5, a2);
  int v161 = v163;
  uint64_t v162 = 0x1000000000;
  char v144 = *((_WORD *)v2 + 9) & 1;
  unsigned int v153 = v157;
  __int16 v154 = v157;
  uint64_t v155 = 16;
  int v156 = 0;
  int v10 = *((_DWORD *)v2 + 5);
  uint64_t v11 = v10 & 0x7FFFFFF;
  uint64_t v143 = v2;
  if ((v10 & 0x7FFFFFF) == 0)
  {
    int v145 = 0;
    goto LABEL_198;
  }
  unsigned __int8 v12 = v6;
  uint64_t v13 = 0;
  int v145 = 0;
  uint64_t v141 = v10 & 0x7FFFFFF;
  while (1)
  {
    uint64_t v14 = v13++;
    int v15 = *((_DWORD *)v2 + 5);
    uint64_t v16 = (v15 & 0x40000000) != 0
        ? (llvm::LandingPadInst *)*((void *)v2 - 1)
        : (llvm::LandingPadInst *)((char *)v2 - 32 * (v15 & 0x7FFFFFF));
    uint64_t v17 = (llvm::Value *)*((void *)v16 + 4 * v14);
    uint64_t v18 = *(void *)v17;
    if (*(unsigned char *)(*(void *)v17 + 8) != 17) {
      break;
    }
    uint64_t v19 = *(void *)(v18 + 32);
    if (!v19)
    {
      if (v162 >= HIDWORD(v162)) {
        llvm::SmallVectorBase<unsigned int>::grow_pod();
      }
      char v144 = 0;
      v161[v162] = v17;
      unint64_t v89 = (v162 + 1);
      LODWORD(v162) = v162 + 1;
      int v90 = (v11 != v13) | v145;
      goto LABEL_199;
    }
    long long v158 = v160;
    uint64_t v159 = 0x1000000000;
    if (*((unsigned char *)v17 + 16) == 13)
    {
      NullValue = llvm::Constant::getNullValue(*(llvm::Constant **)(v18 + 24), (llvm::Type *)v7, v8);
      uint64_t v21 = NullValue;
      if (((1 << v12) & 0x37F0) == 0) {
        goto LABEL_20;
      }
      unsigned int v22 = *((unsigned __int8 *)NullValue + 16);
      if (NullValue) {
        BOOL v23 = v22 == 16;
      }
      else {
        BOOL v23 = 0;
      }
      if (v23)
      {
        uint64_t v24 = *((unsigned int *)NullValue + 8);
        if (v24 >= 0x41)
        {
          int v85 = 0;
          int64_t v86 = (unint64_t)(v24 + 63) >> 6;
          do
          {
            BOOL v56 = v86-- < 1;
            if (v56) {
              break;
            }
            unint64_t v87 = *(void *)(*((void *)NullValue + 3) + 8 * v86);
            v85 += __clz(v87);
          }
          while (!v87);
          int v88 = v24 | 0xFFFFFFC0;
          if ((v24 & 0x3F) == 0) {
            int v88 = 0;
          }
          if (v85 + v88 == v24) {
            goto LABEL_171;
          }
          goto LABEL_20;
        }
        if (*((void *)NullValue + 3)) {
          goto LABEL_20;
        }
      }
      else
      {
        if (NullValue) {
          BOOL v78 = v22 == 17;
        }
        else {
          BOOL v78 = 0;
        }
        if (!v78)
        {
          BOOL v56 = v22 > 0x14;
          int v79 = (1 << v22) & 0x1C2000;
          if (!v56 && v79 != 0) {
            goto LABEL_171;
          }
LABEL_20:
          if (v159 >= (unint64_t)HIDWORD(v159)) {
            llvm::SmallVectorBase<unsigned int>::grow_pod();
          }
          *((void *)v158 + v159) = v21;
          unsigned int v25 = v159 + 1;
          LODWORD(v159) = v159 + 1;
          if (v19 > 1)
          {
LABEL_125:
            uint64_t v74 = llvm::ArrayType::get(*(llvm::ArrayType **)(v18 + 24), (llvm::Type *)v25);
            uint64_t v17 = llvm::ConstantArray::get(v74, (llvm::Type *)v158, v159);
            char v26 = 1;
            int v145 = 1;
          }
          else
          {
            char v26 = 0;
          }
          goto LABEL_144;
        }
        if ((sub_1CB844168((uint64_t)NullValue, 0.0) & 1) == 0) {
          goto LABEL_20;
        }
      }
LABEL_171:
      int v72 = 4;
      int v145 = 1;
      goto LABEL_148;
    }
    uint64_t v148 = (BOOL (*)(uint64_t, uint64_t))v152;
    int v149 = (BOOL (*)(uint64_t, uint64_t))v152;
    uint64_t v150 = 16;
    int v151 = 0;
    if (v19 >= 0x11uLL) {
      llvm::SmallVectorBase<unsigned int>::grow_pod();
    }
    uint64_t v34 = 0;
    while (1)
    {
      uint64_t v35 = (llvm::Value *)*((void *)v17 + 4 * v34 + -4 * (*((_DWORD *)v17 + 5) & 0x7FFFFFF));
      int64_t v36 = llvm::Value::stripPointerCasts(v35);
      BOOL v37 = v36;
      if (((1 << v12) & 0x37F0) == 0) {
        goto LABEL_44;
      }
      unsigned int v38 = *((unsigned __int8 *)v36 + 16);
      if (v36 && v38 == 16) {
        break;
      }
      if (v36) {
        BOOL v55 = v38 == 17;
      }
      else {
        BOOL v55 = 0;
      }
      if (v55)
      {
        if (sub_1CB844168((uint64_t)v36, 0.0)) {
          goto LABEL_104;
        }
      }
      else
      {
        BOOL v56 = v38 > 0x14;
        int v57 = (1 << v38) & 0x1C2000;
        if (!v56 && v57 != 0) {
          goto LABEL_104;
        }
      }
LABEL_44:
      unsigned int v41 = v149;
      uint64_t v42 = HIDWORD(v150);
      if (v149 == v148)
      {
        if (HIDWORD(v150))
        {
          long long v43 = 0;
          uint64_t v44 = 8 * HIDWORD(v150);
          uint64_t v45 = v149;
          while (*(llvm::Value **)v45 != v37)
          {
            if (*(void *)v45 == -2) {
              long long v43 = (llvm::Value **)v45;
            }
            uint64_t v45 = (BOOL (*)(uint64_t, uint64_t))((char *)v45 + 8);
            v44 -= 8;
            if (!v44)
            {
              if (!v43) {
                goto LABEL_52;
              }
              *long long v43 = v37;
              --v151;
              goto LABEL_76;
            }
          }
          goto LABEL_78;
        }
LABEL_52:
        unint64_t v7 = v150;
        if (HIDWORD(v150) < v150)
        {
          ++HIDWORD(v150);
          *((void *)v149 + v42) = v37;
          goto LABEL_76;
        }
      }
      else
      {
        unint64_t v7 = v150;
      }
      if (3 * (int)v7 <= (4 * (HIDWORD(v150) - v151)))
      {
        if (v7 >= 0x40) {
          LODWORD(v7) = 2 * v7;
        }
        else {
          LODWORD(v7) = 128;
        }
LABEL_96:
        llvm::SmallPtrSetImplBase::Grow((llvm::SmallPtrSetImplBase *)&v148, v7);
        unint64_t v7 = v150;
        unsigned int v41 = v149;
        goto LABEL_57;
      }
      if ((int)v7 - HIDWORD(v150) < v7 >> 3) {
        goto LABEL_96;
      }
LABEL_57:
      int v46 = v7 - 1;
      unsigned int v47 = (v7 - 1) & ((v37 >> 4) ^ (v37 >> 9));
      int v48 = (llvm::Value **)((char *)v41 + 8 * v47);
      long long v49 = *v48;
      if (*v48 != (llvm::Value *)-1)
      {
        unsigned int v50 = 0;
        int v51 = 1;
        while (v49 != v37)
        {
          if (v50) {
            BOOL v52 = 0;
          }
          else {
            BOOL v52 = v49 == (llvm::Value *)-2;
          }
          if (v52) {
            unsigned int v50 = v48;
          }
          unsigned int v53 = v47 + v51++;
          unsigned int v47 = v53 & v46;
          int v48 = (llvm::Value **)((char *)v41 + 8 * (v53 & v46));
          long long v49 = *v48;
          if (*v48 == (llvm::Value *)-1) {
            goto LABEL_69;
          }
        }
        goto LABEL_78;
      }
      unsigned int v50 = 0;
LABEL_69:
      if (v50) {
        long long v54 = v50;
      }
      else {
        long long v54 = v48;
      }
      if (*v54 == v37) {
        goto LABEL_78;
      }
      if (*v54 == (llvm::Value *)-2) {
        --v151;
      }
      else {
        ++HIDWORD(v150);
      }
      *long long v54 = v37;
LABEL_76:
      if (v159 >= (unint64_t)HIDWORD(v159)) {
        llvm::SmallVectorBase<unsigned int>::grow_pod();
      }
      *((void *)v158 + v159) = v35;
      LODWORD(v159) = v159 + 1;
LABEL_78:
      if (++v34 == v19)
      {
        char v71 = 0;
        int v72 = 0;
        goto LABEL_119;
      }
    }
    uint64_t v40 = *((unsigned int *)v36 + 8);
    if (v40 < 0x41)
    {
      if (!*((void *)v36 + 3)) {
        goto LABEL_104;
      }
      goto LABEL_44;
    }
    int v59 = 0;
    int64_t v60 = (unint64_t)(v40 + 63) >> 6;
    do
    {
      BOOL v56 = v60-- < 1;
      if (v56) {
        break;
      }
      unint64_t v61 = *(void *)(*((void *)v36 + 3) + 8 * v60);
      v59 += __clz(v61);
    }
    while (!v61);
    int v62 = v40 | 0xFFFFFFC0;
    if ((v40 & 0x3F) == 0) {
      int v62 = 0;
    }
    if (v59 + v62 != v40) {
      goto LABEL_44;
    }
LABEL_104:
    int v72 = 4;
    int v145 = 1;
    char v71 = 1;
LABEL_119:
    unint64_t v73 = v159;
    if (v149 != v148) {
      free(v149);
    }
    if (v71)
    {
      uint64_t v2 = v143;
      uint64_t v11 = v141;
      goto LABEL_148;
    }
    if (v19 > v73)
    {
      unsigned int v25 = v159;
      uint64_t v2 = v143;
      uint64_t v11 = v141;
      goto LABEL_125;
    }
    char v26 = 0;
    uint64_t v2 = v143;
    uint64_t v11 = v141;
LABEL_144:
    if (v162 >= (unint64_t)HIDWORD(v162)) {
      llvm::SmallVectorBase<unsigned int>::grow_pod();
    }
    v161[v162] = v17;
    LODWORD(v162) = v162 + 1;
    v144 &= !(v26 & (v159 == 0));
    if ((v26 & (v159 == 0)) != 0) {
      int v72 = 2;
    }
    else {
      int v72 = 0;
    }
LABEL_148:
    if (v158 != v160) {
      free(v158);
    }
    if ((v72 | 4) != 4) {
      goto LABEL_198;
    }
LABEL_151:
    if (v13 == v11) {
      goto LABEL_198;
    }
  }
  int v27 = llvm::Value::stripPointerCasts(v17);
  uint64_t v28 = (uint64_t)v27;
  uint64_t v29 = v154;
  uint64_t v30 = HIDWORD(v155);
  if (v154 == v153)
  {
    if (HIDWORD(v155))
    {
      uint64_t v31 = 0;
      uint64_t v32 = 8 * HIDWORD(v155);
      uint64_t v33 = (llvm::Value **)v154;
      while (*v33 != v27)
      {
        if (*v33 == (llvm::Value *)-2) {
          uint64_t v31 = v33;
        }
        ++v33;
        v32 -= 8;
        if (!v32)
        {
          if (!v31) {
            goto LABEL_31;
          }
          *uint64_t v31 = v27;
          --v156;
          goto LABEL_134;
        }
      }
      goto LABEL_142;
    }
LABEL_31:
    unint64_t v7 = v155;
    if (HIDWORD(v155) < v155)
    {
      ++HIDWORD(v155);
      *(void *)&v154[8 * v30] = v27;
      goto LABEL_134;
    }
  }
  else
  {
    unint64_t v7 = v155;
  }
  if (3 * (int)v7 <= (4 * (HIDWORD(v155) - v156)))
  {
    if (v7 >= 0x40) {
      LODWORD(v7) = 2 * v7;
    }
    else {
      LODWORD(v7) = 128;
    }
  }
  else if ((int)v7 - HIDWORD(v155) >= v7 >> 3)
  {
    goto LABEL_108;
  }
  llvm::SmallPtrSetImplBase::Grow((llvm::SmallPtrSetImplBase *)&v153, v7);
  unint64_t v7 = v155;
  uint64_t v29 = v154;
LABEL_108:
  int v63 = v7 - 1;
  unsigned int v64 = (v7 - 1) & ((v28 >> 4) ^ (v28 >> 9));
  unsigned int v65 = &v29[8 * v64];
  uint64_t v66 = *(void *)v65;
  if (*(void *)v65 != -1)
  {
    unint64_t v67 = 0;
    int v68 = 1;
    while (v66 != v28)
    {
      if (v67) {
        BOOL v69 = 0;
      }
      else {
        BOOL v69 = v66 == -2;
      }
      if (v69) {
        unint64_t v67 = (uint64_t *)v65;
      }
      unsigned int v70 = v64 + v68++;
      unsigned int v64 = v70 & v63;
      unsigned int v65 = &v29[8 * (v70 & v63)];
      uint64_t v66 = *(void *)v65;
      if (*(void *)v65 == -1) {
        goto LABEL_127;
      }
    }
    goto LABEL_142;
  }
  unint64_t v67 = 0;
LABEL_127:
  if (v67) {
    uint64_t v75 = v67;
  }
  else {
    uint64_t v75 = (uint64_t *)v65;
  }
  if (*v75 == v28)
  {
LABEL_142:
    int v145 = 1;
  }
  else
  {
    if (*v75 == -2) {
      --v156;
    }
    else {
      ++HIDWORD(v155);
    }
    *uint64_t v75 = v28;
LABEL_134:
    if (v162 >= (unint64_t)HIDWORD(v162)) {
      llvm::SmallVectorBase<unsigned int>::grow_pod();
    }
    v161[v162] = v17;
    LODWORD(v162) = v162 + 1;
  }
  if (((1 << v12) & 0x37F0) == 0) {
    goto LABEL_151;
  }
  unsigned int v76 = *(unsigned __int8 *)(v28 + 16);
  if (v28 && v76 == 16)
  {
    uint64_t v77 = *(unsigned int *)(v28 + 32);
    if (v77 >= 0x41)
    {
      int v81 = 0;
      int64_t v82 = (unint64_t)(v77 + 63) >> 6;
      do
      {
        BOOL v56 = v82-- < 1;
        if (v56) {
          break;
        }
        unint64_t v83 = *(void *)(*(void *)(v28 + 24) + 8 * v82);
        v81 += __clz(v83);
      }
      while (!v83);
      int v84 = v77 | 0xFFFFFFC0;
      if ((v77 & 0x3F) == 0) {
        int v84 = 0;
      }
      if (v81 + v84 != v77) {
        goto LABEL_151;
      }
    }
    else if (*(void *)(v28 + 24))
    {
      goto LABEL_151;
    }
  }
  else if (v28 && v76 == 17)
  {
    if ((sub_1CB844168(v28, 0.0) & 1) == 0) {
      goto LABEL_151;
    }
  }
  else if (v76 > 0x14 || ((1 << v76) & 0x1C2000) == 0)
  {
    goto LABEL_151;
  }
  char v144 = 0;
  v145 |= v11 != v13;
LABEL_198:
  unint64_t v89 = v162;
  int v90 = v145;
LABEL_199:
  if (v89 >= 2)
  {
    unsigned int v91 = 0;
    char v92 = (const std::nothrow_t *)MEMORY[0x1E4FBA2D0];
    do
    {
      unsigned int v93 = v91;
      unsigned int v94 = v89;
      if (v91 != v89)
      {
        while (*(unsigned char *)(*(void *)v161[v93] + 8) == 17)
        {
          if (v89 == ++v93)
          {
            unsigned int v94 = v89;
            goto LABEL_206;
          }
        }
        unsigned int v94 = v93;
      }
LABEL_206:
      unsigned int v95 = v91;
      while (1)
      {
        unsigned int v96 = v95 + 1;
        if (v95 + 1 >= v94) {
          break;
        }
        unint64_t v97 = *(void *)(*(void *)v161[v95++] + 32);
        if (*(void *)(*(void *)v161[v96] + 32) < v97)
        {
          uint64_t v98 = (char *)&v161[v91];
          uint64_t v99 = &v161[v94];
          uint64_t v148 = sub_1CC9DFE04;
          if ((char *)v99 - v98 < 1025)
          {
LABEL_213:
            sub_1CD68A0FC((uint64_t)v98, v99, (uint64_t (**)(uint64_t, uint64_t))&v148, ((char *)v99 - v98) >> 3, 0, 0);
          }
          else
          {
            unint64_t v100 = ((char *)v99 - v98) >> 3;
            while (1)
            {
              uint64_t v101 = (uint64_t *)operator new(8 * v100, v92);
              if (v101) {
                break;
              }
              BOOL v56 = v100 > 1;
              v100 >>= 1;
              if (!v56) {
                goto LABEL_213;
              }
            }
            unint64_t v102 = v101;
            sub_1CD68A0FC((uint64_t)v98, v99, (uint64_t (**)(uint64_t, uint64_t))&v148, ((char *)v99 - v98) >> 3, v101, v100);
            operator delete(v102);
          }
          int v90 = 1;
          uint64_t v2 = v143;
          break;
        }
      }
      unsigned int v91 = v94 + 1;
    }
    while (v94 + 2 < v89);
    unint64_t v89 = v162;
    if (v162 >= 2)
    {
      uint64_t v103 = 0;
      unint64_t v104 = 1;
      do
      {
        uint64_t v105 = v161[v103];
        if (*(void *)v105) {
          BOOL v106 = *(unsigned char *)(*(void *)v105 + 8) == 17;
        }
        else {
          BOOL v106 = 0;
        }
        if (v106)
        {
          uint64_t v107 = (v89 - 1);
          if (v103 != v107)
          {
            uint64_t v108 = *(void *)(*(void *)v105 + 32);
            unint64_t v142 = v104;
            uint64_t v147 = v161[v103];
            do
            {
              int v109 = (uint64_t **)&v161[v107];
              uint64_t v110 = *v109;
              uint64_t v111 = **v109;
              if (v111) {
                BOOL v112 = *(unsigned char *)(v111 + 8) == 17;
              }
              else {
                BOOL v112 = 0;
              }
              if (v112)
              {
                if (!v108)
                {
                  unsigned int v115 = v109 + 1;
                  int v116 = v162;
                  uint64_t v117 = (uint64_t **)&v161[v162];
                  if (v117 != v109 + 1) {
                    goto LABEL_238;
                  }
                  goto LABEL_239;
                }
                uint64_t v113 = *(void *)(v111 + 32);
                if (v108 <= v113)
                {
                  int v114 = *(unsigned __int8 *)(v105 + 16);
                  if (*((unsigned char *)v110 + 16) == 13)
                  {
                    if (v114 == 13)
                    {
                      unsigned int v115 = v109 + 1;
                      int v116 = v162;
                      uint64_t v117 = (uint64_t **)&v161[v162];
                      if (v117 != v109 + 1) {
                        goto LABEL_238;
                      }
                      goto LABEL_239;
                    }
                  }
                  else
                  {
                    uint64_t v118 = v113;
                    if (v114 == 13)
                    {
                      uint64_t v119 = 0;
                      while (1)
                      {
                        uint64_t v120 = v110[4 * v119 + -4 * (*((_DWORD *)v110 + 5) & 0x7FFFFFF)];
                        unsigned int v121 = *(unsigned __int8 *)(v120 + 16);
                        if (v120) {
                          BOOL v122 = v121 == 16;
                        }
                        else {
                          BOOL v122 = 0;
                        }
                        if (v122)
                        {
                          uint64_t v123 = *(unsigned int *)(v120 + 32);
                          if (v123 >= 0x41)
                          {
                            int v127 = 0;
                            int64_t v128 = (unint64_t)(v123 + 63) >> 6;
                            do
                            {
                              BOOL v56 = v128-- < 1;
                              if (v56) {
                                break;
                              }
                              unint64_t v129 = *(void *)(*(void *)(v120 + 24) + 8 * v128);
                              v127 += __clz(v129);
                            }
                            while (!v129);
                            int v130 = v123 | 0xFFFFFFC0;
                            if ((v123 & 0x3F) == 0) {
                              int v130 = 0;
                            }
                            if (v127 + v130 == v123)
                            {
LABEL_270:
                              unsigned int v115 = v109 + 1;
                              int v116 = v162;
                              uint64_t v117 = (uint64_t **)&v161[v162];
                              if (v117 != v109 + 1)
                              {
                                uint64_t v105 = v147;
                                goto LABEL_238;
                              }
                              uint64_t v105 = v147;
                              goto LABEL_239;
                            }
                          }
                          else if (!*(void *)(v120 + 24))
                          {
                            goto LABEL_270;
                          }
                        }
                        else
                        {
                          if (v120) {
                            BOOL v124 = v121 == 17;
                          }
                          else {
                            BOOL v124 = 0;
                          }
                          if (v124)
                          {
                            if (sub_1CB844168(v120, 0.0)) {
                              goto LABEL_270;
                            }
                          }
                          else
                          {
                            BOOL v56 = v121 > 0x14;
                            int v125 = (1 << v121) & 0x1C2000;
                            if (!v56 && v125 != 0) {
                              goto LABEL_270;
                            }
                          }
                        }
                        if (++v119 == v118) {
                          goto LABEL_280;
                        }
                      }
                    }
                    int v146 = v90;
                    uint64_t v131 = 0;
                    while (2)
                    {
                      uint64_t v132 = llvm::Value::stripPointerCasts(*(llvm::Value **)(v105
                                                                            - 32
                                                                            * (*(_DWORD *)(v105 + 20) & 0x7FFFFFF)
                                                                            + 32 * v131));
                      uint64_t v133 = v118;
                      int v134 = v110;
                      while (llvm::Value::stripPointerCasts((llvm::Value *)v134[-4
                                                                               * (*((_DWORD *)v110 + 5) & 0x7FFFFFF)]) != v132)
                      {
                        v134 += 4;
                        if (!--v133)
                        {
                          int v90 = v146;
LABEL_280:
                          uint64_t v105 = v147;
                          goto LABEL_240;
                        }
                      }
                      ++v131;
                      uint64_t v105 = v147;
                      if (v131 != v108) {
                        continue;
                      }
                      break;
                    }
                    unsigned int v115 = v109 + 1;
                    int v116 = v162;
                    uint64_t v117 = (uint64_t **)&v161[v162];
                    if (v117 != v109 + 1)
                    {
LABEL_238:
                      memmove(v109, v115, (char *)v117 - (unsigned char *)v115);
                      int v116 = v162;
                    }
LABEL_239:
                    LODWORD(v162) = v116 - 1;
                    int v90 = 1;
                  }
                }
              }
LABEL_240:
              uint64_t v107 = (v107 - 1);
            }
            while (v103 != v107);
            unint64_t v89 = v162;
            uint64_t v2 = v143;
            unint64_t v104 = v142;
          }
        }
        ++v104;
        ++v103;
      }
      while (v104 < v89);
    }
  }
  if (v90)
  {
    uint64_t v138 = *(llvm::LandingPadInst **)v2;
    v152[0] = 257;
    uint64_t v2 = llvm::LandingPadInst::Create(v138, (llvm::Type *)v89, (const char **)&v148, 0, v9);
    if (v162)
    {
      unint64_t v139 = 0;
      uint64_t v140 = 8 * v162;
      do
      {
        llvm::LandingPadInst::addClause(v2, (llvm::Constant *)v161[v139 / 8]);
        v139 += 8;
      }
      while (v140 != v139);
      char v136 = (v162 == 0) | v144;
    }
    else
    {
      char v136 = 1;
    }
    __int16 v135 = *((_WORD *)v2 + 9);
LABEL_286:
    *((_WORD *)v2 + 9) = v135 & 0xFFFE | v136 & 1;
  }
  else
  {
    __int16 v135 = *((_WORD *)v2 + 9);
    char v136 = v144;
    if ((v144 & 1) != (v135 & 1)) {
      goto LABEL_286;
    }
    uint64_t v2 = 0;
  }
  if (v154 != v153) {
    free(v154);
  }
  if (v161 != v163) {
    free(v161);
  }
  return v2;
}

BOOL sub_1CC9DFE04(uint64_t a1, uint64_t a2)
{
  return *(void *)(*(void *)a1 + 32) < *(void *)(*(void *)a2 + 32);
}

void *sub_1CC9DFE20(void *result, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *a2;
  if (*a2) {
    BOOL v6 = *(unsigned __int8 *)(*a2 + 16) >= 0x1Cu;
  }
  else {
    BOOL v6 = 0;
  }
  if (!v6)
  {
LABEL_25:
    *(void *)a2[2] = a2[1];
    uint64_t v20 = a2[1];
    if (v20) {
      *(void *)(v20 + 16) = a2[2];
    }
    goto LABEL_27;
  }
  uint64_t v7 = result[4];
  uint64_t v24 = *a2;
  if (*(unsigned char *)(v7 + 2088))
  {
    uint64_t v9 = v7 + 2096;
    int v8 = 16;
  }
  else
  {
    int v8 = *(_DWORD *)(v7 + 2104);
    if (!v8)
    {
      uint64_t v18 = 0;
      goto LABEL_22;
    }
    uint64_t v9 = *(void *)(v7 + 2096);
  }
  int v10 = v8 - 1;
  unsigned int v11 = v10 & ((v5 >> 4) ^ (v5 >> 9));
  unsigned __int8 v12 = (void *)(v9 + 8 * v11);
  uint64_t v13 = *v12;
  if (v5 == *v12) {
    goto LABEL_25;
  }
  uint64_t v14 = 0;
  int v15 = 1;
  while (v13 != -4096)
  {
    if (v14) {
      BOOL v16 = 0;
    }
    else {
      BOOL v16 = v13 == -8192;
    }
    if (v16) {
      uint64_t v14 = v12;
    }
    unsigned int v17 = v11 + v15++;
    unsigned int v11 = v17 & v10;
    unsigned __int8 v12 = (void *)(v9 + 8 * v11);
    uint64_t v13 = *v12;
    if (v5 == *v12) {
      goto LABEL_24;
    }
  }
  if (v14) {
    uint64_t v18 = v14;
  }
  else {
    uint64_t v18 = v12;
  }
LABEL_22:
  uint64_t result = sub_1CBFD5BBC(v7 + 2088, (uint64_t)&v24, &v24, v18);
  *uint64_t result = v24;
  unsigned int v19 = *(_DWORD *)(v7 + 2232);
  if (v19 >= *(_DWORD *)(v7 + 2236)) {
    llvm::SmallVectorBase<unsigned int>::grow_pod();
  }
  *(void *)(*(void *)(v7 + 2224) + 8 * v19) = v24;
  ++*(_DWORD *)(v7 + 2232);
  uint64_t v5 = *a2;
LABEL_24:
  if (v5) {
    goto LABEL_25;
  }
LABEL_27:
  *a2 = a3;
  if (a3)
  {
    uint64_t v23 = *(void *)(a3 + 8);
    unsigned int v22 = (void *)(a3 + 8);
    uint64_t v21 = v23;
    a2[1] = v23;
    if (v23) {
      *(void *)(v21 + 16) = a2 + 1;
    }
    a2[2] = (uint64_t)v22;
    void *v22 = a2;
  }
  return result;
}

uint64_t sub_1CC9DFFA4(std::string::size_type a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v170[15] = *MEMORY[0x1E4F143B8];
  while (1)
  {
    int v8 = *(int32x2_t **)(a1 + 32);
    unsigned __int32 v9 = v8[1].u32[0];
    uint64_t v10 = v8[279].u32[0];
    if (v9)
    {
      if (v8[279].i32[0]) {
        goto LABEL_6;
      }
      goto LABEL_32;
    }
    if (!v8[279].i32[0]) {
      break;
    }
LABEL_6:
    while (1)
    {
      uint64_t v11 = *(void *)&v8[278] + 8 * v10;
      unsigned __int8 v12 = *(void **)(v11 - 8);
      sub_1CBFD6090((uint64_t)&v8[261], (void *)(v11 - 8));
      --v8[279].i32[0];
      if (!v12) {
        break;
      }
      if (!v12[1] && llvm::wouldInstructionBeTriviallyDead((uint64_t)v12, *(uint64_t **)(a1 + 64))) {
        sub_1CC9D6844(a1, (uint64_t)v12);
      }
      uint64_t v13 = *(void *)(a1 + 32);
      int v14 = *(_DWORD *)(v13 + 8);
      int v168 = v12;
      LODWORD(v169) = v14;
      int v15 = *(_DWORD *)(v13 + 2080);
      if (!v15)
      {
        unsigned int v25 = 0;
LABEL_22:
        char v26 = sub_1CBF569E0((_DWORD *)(v13 + 2064), (uint64_t)&v168, (uint64_t *)&v168, v25);
        void *v26 = v168;
        *((_DWORD *)v26 + 2) = v169;
        unint64_t v27 = *(unsigned int *)(v13 + 8);
        if (v27 >= *(unsigned int *)(v13 + 12)) {
          llvm::SmallVectorBase<unsigned int>::grow_pod();
        }
        *(void *)(*(void *)v13 + 8 * v27) = v12;
        ++*(_DWORD *)(v13 + 8);
        goto LABEL_24;
      }
      uint64_t v16 = *(void *)(v13 + 2064);
      int v17 = v15 - 1;
      unsigned int v18 = v17 & ((v12 >> 4) ^ (v12 >> 9));
      unsigned int v19 = (void *)(v16 + 16 * v18);
      uint64_t v20 = (void *)*v19;
      if ((void *)*v19 != v12)
      {
        uint64_t v21 = 0;
        int v22 = 1;
        while (v20 != (void *)-4096)
        {
          if (v21) {
            BOOL v23 = 0;
          }
          else {
            BOOL v23 = v20 == (void *)-8192;
          }
          if (v23) {
            uint64_t v21 = v19;
          }
          unsigned int v24 = v18 + v22++;
          unsigned int v18 = v24 & v17;
          unsigned int v19 = (void *)(v16 + 16 * v18);
          uint64_t v20 = (void *)*v19;
          if ((void *)*v19 == v12) {
            goto LABEL_24;
          }
        }
        if (v21) {
          unsigned int v25 = v21;
        }
        else {
          unsigned int v25 = v19;
        }
        goto LABEL_22;
      }
LABEL_24:
      int v8 = *(int32x2_t **)(a1 + 32);
      uint64_t v10 = v8[279].u32[0];
      if (!v10) {
        goto LABEL_31;
      }
    }
    int v8 = *(int32x2_t **)(a1 + 32);
LABEL_31:
    unsigned __int32 v9 = v8[1].u32[0];
    if (!v9) {
      continue;
    }
LABEL_32:
    uint64_t v28 = *(llvm::LandingPadInst **)(*(void *)v8 + 8 * v9 - 8);
    v8[1].i32[0] = v9 - 1;
    __int32 v29 = v8[260].i32[0];
    unsigned int v30 = v28 >> 4;
    if (v29)
    {
      int32x2_t v31 = v8[258];
      __int32 v32 = v29 - 1;
      LODWORD(v33) = (v30 ^ (v28 >> 9)) & (v29 - 1);
      uint64_t v34 = (llvm::LandingPadInst **)(*(void *)&v31 + 16 * v33);
      uint64_t v35 = *v34;
      if (v28 == *v34)
      {
LABEL_38:
        *uint64_t v34 = (llvm::LandingPadInst *)-8192;
        v8[259] = vadd_s32(v8[259], (int32x2_t)0x1FFFFFFFFLL);
      }
      else
      {
        int v36 = 1;
        while (v35 != (llvm::LandingPadInst *)-4096)
        {
          int v37 = v33 + v36++;
          uint64_t v33 = v37 & v32;
          uint64_t v35 = *(llvm::LandingPadInst **)(*(void *)&v31 + 16 * v33);
          if (v28 == v35)
          {
            uint64_t v34 = (llvm::LandingPadInst **)(*(void *)&v31 + 16 * v33);
            goto LABEL_38;
          }
        }
      }
    }
    if (!v28) {
      continue;
    }
    if (*((void *)v28 + 1)) {
      goto LABEL_241;
    }
    if (llvm::wouldInstructionBeTriviallyDead((uint64_t)v28, *(uint64_t **)(a1 + 64))) {
      sub_1CC9D6844(a1, (uint64_t)v28);
    }
    if (*((void *)v28 + 1))
    {
LABEL_241:
      int v38 = *((_DWORD *)v28 + 5);
      if ((v38 & 0x7FFFFFF) == 0
        || ((v38 & 0x40000000) != 0
          ? (int v39 = (void ***)*((void *)v28 - 1))
          : (int v39 = (void ***)((char *)v28 - 32 * (v38 & 0x7FFFFFF))),
            *((unsigned __int8 *)*v39 + 16) <= 0x14u))
      {
        uint64_t v40 = llvm::ConstantFoldInstruction((uint64_t)v28, *(llvm::DataLayout **)(a1 + 80), *(llvm::DSOLocalEquivalent ***)(a1 + 64), a4, a5, a6, a7);
        if (v40)
        {
          sub_1CC9D3C84(a1, v28, v40);
          if (!*((void *)v28 + 1)
            && llvm::wouldInstructionBeTriviallyDead((uint64_t)v28, *(uint64_t **)(a1 + 64)))
          {
            goto LABEL_229;
          }
          goto LABEL_230;
        }
      }
    }
    if (byte_1EBCE5838)
    {
      unsigned int v41 = (void **)*((void *)v28 + 1);
      if (v41)
      {
        uint64_t v42 = 0;
        long long v43 = (void **)*((void *)v28 + 5);
        while (1)
        {
          uint64_t v44 = (uint64_t)v41[3];
          if (!sub_1CBF698E4(v44) && !sub_1CC27D470(v44)) {
            break;
          }
          unsigned int v41 = (void **)v41[1];
          if (!v41) {
            goto LABEL_80;
          }
        }
        if (v44 && *(unsigned char *)(v44 + 16) == 83)
        {
          int v45 = *(_DWORD *)(v44 + 20);
          uint64_t v46 = v45 & 0x7FFFFFF;
          if ((v45 & 0x7FFFFFF) != 0)
          {
            uint64_t v47 = 0;
            uint64_t v48 = 0;
            uint64_t v49 = 32 * v46;
            uint64_t v50 = v44 - 32 * v46;
            do
            {
              uint64_t v51 = v50;
              if ((v45 & 0x40000000) != 0) {
                uint64_t v51 = *(void *)(v44 - 8);
              }
              if (*(llvm::LandingPadInst **)(v51 + v48) == v28)
              {
                if (v42)
                {
                  uint64_t v52 = v50;
                  if ((v45 & 0x40000000) != 0) {
                    uint64_t v52 = *(void *)(v44 - 8);
                  }
                  if (v42 != *(void ***)(v52 + 32 * *(unsigned int *)(v44 + 60) + v47)) {
                    goto LABEL_80;
                  }
                }
                uint64_t v53 = v50;
                if ((v45 & 0x40000000) != 0) {
                  uint64_t v53 = *(void *)(v44 - 8);
                }
                uint64_t v42 = *(void ***)(v53 + 32 * *(unsigned int *)(v44 + 60) + v47);
              }
              v48 += 32;
              v47 += 8;
            }
            while (v49 != v48);
          }
        }
        else
        {
          uint64_t v42 = *(void ***)(v44 + 40);
        }
        if (v42 != v43) {
          llvm::DominatorTreeBase<llvm::BasicBlock,false>::isReachableFromEntry();
        }
      }
    }
LABEL_80:
    uint64_t v54 = *(void *)(a1 + 24);
    BOOL v55 = (uint64_t *)((char *)v28 + 24);
    *(void *)(v54 + 48) = *((void *)v28 + 5);
    *(void *)(v54 + 56) = (char *)v28 + 24;
    BOOL v56 = (unsigned __int8 *)*((void *)v28 + 6);
    v170[0] = v56;
    if (v56)
    {
      llvm::MetadataTracking::track((uint64_t)v170, v56, 2);
      uint64_t v57 = v170[0];
    }
    else
    {
      uint64_t v57 = 0;
    }
    sub_1CB8461A4(v54, 0, v57);
    if (v170[0])
    {
      int v129 = *(unsigned __int8 *)v170[0];
      if ((v129 - 4) > 0x1E)
      {
        if ((v129 - 3) >= 0xFFFFFFFE) {
          uint64_t v132 = v170[0];
        }
        else {
          uint64_t v132 = 0;
        }
        if ((v129 - 3) < 0xFFFFFFFE)
        {
          if (v129 == 3) {
            *(void *)(v170[0] + 8) = 0;
          }
          goto LABEL_83;
        }
        unint64_t v131 = v132 + 8;
      }
      else
      {
        if ((*(unsigned char *)(v170[0] + 1) & 0x7F) != 2 && !*(_DWORD *)(v170[0] + 12)) {
          goto LABEL_83;
        }
        uint64_t v130 = *(void *)(v170[0] + 16);
        if ((v130 & 4) == 0) {
          goto LABEL_83;
        }
        unint64_t v131 = v130 & 0xFFFFFFFFFFFFFFF8;
        if (!v131) {
          goto LABEL_83;
        }
      }
      int v168 = v170;
      sub_1CC5FA668(v131 + 16, &v168);
    }
LABEL_83:
    char v58 = 0;
    uint64_t v59 = 0;
    uint64_t v60 = *(void *)(a1 + 24);
    v170[0] = 0x1E00000000;
    unsigned int v61 = v30 ^ (v28 >> 9);
    while (2)
    {
      char v62 = v58;
      unsigned int v63 = *((_DWORD *)v170 + v59);
      uint64_t v64 = *((void *)v28 + 6);
      if (!v64 && (*((unsigned char *)v28 + 23) & 0x20) == 0)
      {
LABEL_86:
        uint64_t v64 = 0;
        goto LABEL_87;
      }
      if (v63)
      {
        if ((*((unsigned char *)v28 + 23) & 0x20) == 0) {
          goto LABEL_86;
        }
        uint64_t v70 = ***(void ***)v28;
        int v168 = v28;
        int v71 = *(_DWORD *)(v70 + 2496);
        if (!v71)
        {
          int v84 = 0;
          goto LABEL_110;
        }
        uint64_t v72 = *(void *)(v70 + 2480);
        int v73 = v71 - 1;
        unsigned int v74 = v73 & v61;
        uint64_t v75 = (void *)(v72 + 40 * (v73 & v61));
        unsigned int v76 = (void ***)*v75;
        if ((llvm::LandingPadInst *)*v75 != v28)
        {
          uint64_t v77 = 0;
          int v78 = 1;
          while (v76 != (void ***)-4096)
          {
            if (v77) {
              BOOL v79 = 0;
            }
            else {
              BOOL v79 = v76 == (void ***)-8192;
            }
            if (v79) {
              uint64_t v77 = v75;
            }
            unsigned int v80 = v74 + v78++;
            unsigned int v74 = v80 & v73;
            uint64_t v75 = (void *)(v72 + 40 * v74);
            unsigned int v76 = (void ***)*v75;
            if ((llvm::LandingPadInst *)*v75 == v28) {
              goto LABEL_101;
            }
          }
          if (v77) {
            int v84 = v77;
          }
          else {
            int v84 = v75;
          }
LABEL_110:
          uint64_t v75 = sub_1CC609054(v70 + 2480, (uint64_t)&v168, (uint64_t *)&v168, v84);
          int v85 = v168;
          v75[4] = 0;
          void v75[3] = 0;
          *uint64_t v75 = v85;
          v75[1] = v75 + 3;
          v75[2] = 0x100000000;
        }
LABEL_101:
        uint64_t v81 = *((unsigned int *)v75 + 4);
        if (!v81) {
          goto LABEL_86;
        }
        int64_t v82 = (uint64_t *)(v75[1] + 8);
        uint64_t v83 = 16 * v81;
        while (*((_DWORD *)v82 - 2) != v63)
        {
          uint64_t v64 = 0;
          v82 += 2;
          v83 -= 16;
          if (!v83) {
            goto LABEL_87;
          }
        }
        uint64_t v64 = *v82;
      }
LABEL_87:
      sub_1CB8461A4(v60, v63, v64);
      char v58 = 1;
      uint64_t v59 = 1;
      if ((v62 & 1) == 0) {
        continue;
      }
      break;
    }
    int64_t v86 = sub_1CC9E1A40(a1, v28, v65, v66, v67, v68, v69);
    if (!v86) {
      continue;
    }
    unint64_t v87 = v86;
    if (v86 != v28)
    {
      int v168 = (void *)0x1E00000000;
      llvm::Instruction::copyMetadata((uint64_t)v86, (uint64_t)v28, (int *)&v168, 2);
      llvm::Value::doRAUW(v28, v87, (llvm::Value *)1);
      llvm::Value::takeName((int32x2_t ****)v87, v28);
      int v88 = (void **)*((void *)v28 + 5);
      int v89 = *((unsigned __int8 *)v28 + 16);
      if ((*((unsigned char *)v87 + 16) == 83) != (v89 == 83))
      {
        BOOL v55 = (uint64_t *)(v88 + 5);
        int v90 = v88[6];
        if (v89 == 83)
        {
          while (1)
          {
            if (v90 == v55) {
              goto LABEL_191;
            }
            unsigned int v91 = v90 - 3;
            if (!v90) {
              unsigned int v91 = 0;
            }
            if (*((unsigned char *)v91 + 16) != 83) {
              break;
            }
            int v90 = (uint64_t *)v90[1];
          }
          unsigned int v125 = *((unsigned __int8 *)v90 - 8) - 38;
          BOOL v126 = v125 > 0x38;
          uint64_t v127 = (1 << v125) & 0x100060000000001;
          if (v126 || v127 == 0) {
            BOOL v55 = v90;
          }
          else {
            BOOL v55 = (uint64_t *)v90[1];
          }
        }
        else
        {
          while (v90 != v55)
          {
            char v92 = v90 - 3;
            if (v90) {
              unsigned int v93 = v90 - 3;
            }
            else {
              unsigned int v93 = 0;
            }
            if (*((unsigned char *)v93 + 16) != 83) {
              goto LABEL_190;
            }
            int v90 = (uint64_t *)v90[1];
          }
          char v92 = 0;
LABEL_190:
          BOOL v55 = v92 + 3;
        }
      }
LABEL_191:
      *((void *)v87 + 5) = v88;
      *((_WORD *)v88 + 9) &= ~0x8000u;
      if ((*((unsigned char *)v87 + 23) & 0x10) != 0)
      {
        uint64_t v165 = v88[7];
        if (v165)
        {
          int v166 = (llvm::ValueSymbolTable *)v165[13];
          if (v166) {
            llvm::ValueSymbolTable::reinsertValue(v166, v87);
          }
        }
      }
      uint64_t v133 = *v55;
      *((void *)v87 + 3) = *v55;
      *((void *)v87 + 4) = v55;
      *(void *)(v133 + 8) = (char *)v87 + 24;
      *BOOL v55 = (uint64_t)v87 + 24;
      uint64_t v134 = *(void *)(a1 + 32);
      uint64_t v135 = *((void *)v87 + 1);
      if (v135)
      {
        while (2)
        {
          char v136 = *(void **)(v135 + 24);
          int v137 = *(_DWORD *)(v134 + 8);
          int v168 = v136;
          LODWORD(v169) = v137;
          int v138 = *(_DWORD *)(v134 + 2080);
          if (v138)
          {
            uint64_t v139 = *(void *)(v134 + 2064);
            int v140 = v138 - 1;
            unsigned int v141 = v140 & ((v136 >> 4) ^ (v136 >> 9));
            unint64_t v142 = (void *)(v139 + 16 * v141);
            uint64_t v143 = (void *)*v142;
            if ((void *)*v142 != v136)
            {
              char v144 = 0;
              int v145 = 1;
              while (v143 != (void *)-4096)
              {
                if (v144) {
                  BOOL v146 = 0;
                }
                else {
                  BOOL v146 = v143 == (void *)-8192;
                }
                if (v146) {
                  char v144 = v142;
                }
                unsigned int v147 = v141 + v145++;
                unsigned int v141 = v147 & v140;
                unint64_t v142 = (void *)(v139 + 16 * v141);
                uint64_t v143 = (void *)*v142;
                if ((void *)*v142 == v136) {
                  goto LABEL_209;
                }
              }
              if (v144) {
                uint64_t v148 = v144;
              }
              else {
                uint64_t v148 = v142;
              }
LABEL_207:
              int v149 = sub_1CBF569E0((_DWORD *)(v134 + 2064), (uint64_t)&v168, (uint64_t *)&v168, v148);
              *int v149 = v168;
              *((_DWORD *)v149 + 2) = v169;
              unint64_t v150 = *(unsigned int *)(v134 + 8);
              if (v150 >= *(unsigned int *)(v134 + 12)) {
                llvm::SmallVectorBase<unsigned int>::grow_pod();
              }
              *(void *)(*(void *)v134 + 8 * v150) = v136;
              ++*(_DWORD *)(v134 + 8);
            }
LABEL_209:
            uint64_t v135 = *(void *)(v135 + 8);
            if (!v135)
            {
              uint64_t v134 = *(void *)(a1 + 32);
              goto LABEL_213;
            }
            continue;
          }
          break;
        }
        uint64_t v148 = 0;
        goto LABEL_207;
      }
LABEL_213:
      int v151 = *(_DWORD *)(v134 + 8);
      int v168 = v87;
      LODWORD(v169) = v151;
      int v152 = *(_DWORD *)(v134 + 2080);
      if (!v152)
      {
        uint64_t v162 = 0;
        goto LABEL_227;
      }
      uint64_t v153 = *(void *)(v134 + 2064);
      int v154 = v152 - 1;
      unsigned int v155 = v154 & ((v87 >> 4) ^ (v87 >> 9));
      int v156 = (void *)(v153 + 16 * v155);
      uint64_t v157 = *v156;
      if ((llvm::LandingPadInst *)*v156 != v87)
      {
        long long v158 = 0;
        int v159 = 1;
        while (v157 != -4096)
        {
          if (v158) {
            BOOL v160 = 0;
          }
          else {
            BOOL v160 = v157 == -8192;
          }
          if (v160) {
            long long v158 = v156;
          }
          unsigned int v161 = v155 + v159++;
          unsigned int v155 = v161 & v154;
          int v156 = (void *)(v153 + 16 * v155);
          uint64_t v157 = *v156;
          if ((llvm::LandingPadInst *)*v156 == v87) {
            goto LABEL_229;
          }
        }
        if (v158) {
          uint64_t v162 = v158;
        }
        else {
          uint64_t v162 = v156;
        }
LABEL_227:
        char v163 = sub_1CBF569E0((_DWORD *)(v134 + 2064), (uint64_t)&v168, (uint64_t *)&v168, v162);
        void *v163 = v168;
        *((_DWORD *)v163 + 2) = v169;
        unint64_t v164 = *(unsigned int *)(v134 + 8);
        if (v164 >= *(unsigned int *)(v134 + 12)) {
          llvm::SmallVectorBase<unsigned int>::grow_pod();
        }
        *(void *)(*(void *)v134 + 8 * v164) = v87;
        ++*(_DWORD *)(v134 + 8);
      }
LABEL_229:
      sub_1CC9D6844(a1, (uint64_t)v28);
    }
    unsigned int v94 = (void **)*((void *)v28 + 1);
    if (v94)
    {
      uint64_t v95 = *(void *)(a1 + 32);
      goto LABEL_129;
    }
    if (llvm::wouldInstructionBeTriviallyDead((uint64_t)v28, *(uint64_t **)(a1 + 64))) {
      goto LABEL_229;
    }
    unsigned int v94 = (void **)*((void *)v28 + 1);
    uint64_t v95 = *(void *)(a1 + 32);
    if (v94)
    {
LABEL_129:
      while (1)
      {
        unsigned int v96 = v94[3];
        int v97 = *(_DWORD *)(v95 + 8);
        int v168 = v96;
        LODWORD(v169) = v97;
        int v98 = *(_DWORD *)(v95 + 2080);
        if (!v98) {
          break;
        }
        uint64_t v99 = *(void *)(v95 + 2064);
        int v100 = v98 - 1;
        unsigned int v101 = v100 & ((v96 >> 4) ^ (v96 >> 9));
        unint64_t v102 = (void *)(v99 + 16 * v101);
        uint64_t v103 = (void *)*v102;
        if ((void *)*v102 != v96)
        {
          unint64_t v104 = 0;
          int v105 = 1;
          while (v103 != (void *)-4096)
          {
            if (v104) {
              BOOL v106 = 0;
            }
            else {
              BOOL v106 = v103 == (void *)-8192;
            }
            if (v106) {
              unint64_t v104 = v102;
            }
            unsigned int v107 = v101 + v105++;
            unsigned int v101 = v107 & v100;
            unint64_t v102 = (void *)(v99 + 16 * v101);
            uint64_t v103 = (void *)*v102;
            if ((void *)*v102 == v96) {
              goto LABEL_145;
            }
          }
          if (v104) {
            uint64_t v108 = v104;
          }
          else {
            uint64_t v108 = v102;
          }
          goto LABEL_143;
        }
LABEL_145:
        unsigned int v94 = (void **)v94[1];
        if (!v94)
        {
          uint64_t v95 = *(void *)(a1 + 32);
          goto LABEL_149;
        }
      }
      uint64_t v108 = 0;
LABEL_143:
      int v109 = sub_1CBF569E0((_DWORD *)(v95 + 2064), (uint64_t)&v168, (uint64_t *)&v168, v108);
      *int v109 = v168;
      *((_DWORD *)v109 + 2) = v169;
      unint64_t v110 = *(unsigned int *)(v95 + 8);
      if (v110 >= *(unsigned int *)(v95 + 12)) {
        llvm::SmallVectorBase<unsigned int>::grow_pod();
      }
      *(void *)(*(void *)v95 + 8 * v110) = v96;
      ++*(_DWORD *)(v95 + 8);
      goto LABEL_145;
    }
LABEL_149:
    int v111 = *(_DWORD *)(v95 + 8);
    int v168 = v28;
    LODWORD(v169) = v111;
    int v112 = *(_DWORD *)(v95 + 2080);
    if (!v112)
    {
      BOOL v122 = 0;
      goto LABEL_163;
    }
    uint64_t v113 = *(void *)(v95 + 2064);
    int v114 = v112 - 1;
    unsigned int v115 = v114 & v61;
    int v116 = (void *)(v113 + 16 * (v114 & v61));
    uint64_t v117 = (void ***)*v116;
    if ((llvm::LandingPadInst *)*v116 != v28)
    {
      uint64_t v118 = 0;
      int v119 = 1;
      while (v117 != (void ***)-4096)
      {
        if (v118) {
          BOOL v120 = 0;
        }
        else {
          BOOL v120 = v117 == (void ***)-8192;
        }
        if (v120) {
          uint64_t v118 = v116;
        }
        unsigned int v121 = v115 + v119++;
        unsigned int v115 = v121 & v114;
        int v116 = (void *)(v113 + 16 * v115);
        uint64_t v117 = (void ***)*v116;
        if ((llvm::LandingPadInst *)*v116 == v28) {
          goto LABEL_230;
        }
      }
      if (v118) {
        BOOL v122 = v118;
      }
      else {
        BOOL v122 = v116;
      }
LABEL_163:
      uint64_t v123 = sub_1CBF569E0((_DWORD *)(v95 + 2064), (uint64_t)&v168, (uint64_t *)&v168, v122);
      *uint64_t v123 = v168;
      *((_DWORD *)v123 + 2) = v169;
      unint64_t v124 = *(unsigned int *)(v95 + 8);
      if (v124 >= *(unsigned int *)(v95 + 12)) {
        llvm::SmallVectorBase<unsigned int>::grow_pod();
      }
      *(void *)(*(void *)v95 + 8 * v124) = v28;
      ++*(_DWORD *)(v95 + 8);
    }
LABEL_230:
    *(unsigned char *)(a1 + 168) = 1;
  }
  sub_1CBF568A4(&v8[258]);
  return *(unsigned __int8 *)(a1 + 168);
}

llvm::LandingPadInst *sub_1CC9E1A40(std::string::size_type a1, llvm::BranchInst *this, const llvm::APInt *a3, uint64_t a4, llvm::Type *a5, llvm::DSOLocalEquivalent **a6, uint64_t a7)
{
  uint64_t v365 = *MEMORY[0x1E4F143B8];
  uint64_t v7 = this;
  unsigned __int32 v9 = 0;
  switch(*((unsigned char *)this + 16))
  {
    case 0x1E:
      int v13 = *((_DWORD *)this + 5) & 0x7FFFFFF;
      if (v13 == 1)
      {
        int v14 = (llvm::BranchInst *)((char *)this + 24);
        int v15 = *(llvm::BranchInst **)(*((void *)this + 5) + 48);
        if ((llvm::BranchInst *)((char *)this + 24) != v15)
        {
          while (1)
          {
            int v14 = *(llvm::BranchInst **)v14;
            if (v14 == v15) {
              break;
            }
            if (v14) {
              uint64_t v16 = (char *)v14 - 24;
            }
            else {
              uint64_t v16 = 0;
            }
            if (!sub_1CBF63B28((uint64_t)v16)
              && !sub_1CC27D470((uint64_t)v16)
              && (v16[16] != 77 || *(unsigned char *)(*(void *)v16 + 8) != 15))
            {
              goto LABEL_93;
            }
          }
          int v14 = v15;
        }
LABEL_93:
        if (v14) {
          uint64_t v22 = (uint64_t)v14 - 24;
        }
        else {
          uint64_t v22 = 0;
        }
        if (v14)
        {
          if (*(unsigned char *)(v22 + 16) == 61)
          {
            unsigned __int32 v9 = v7;
            if (sub_1CCA7FB7C(a1, v22)) {
              return v9;
            }
          }
        }
        return 0;
      }
      int v354 = 0;
      unint64_t v359 = &v354;
      if (v13 == 3
        && sub_1CBF686A0((void **)&v359, 30, *((void *)this - 12))
        && *((unsigned __int8 *)v354 + 16) >= 0x15u)
      {
        llvm::BranchInst::swapSuccessors(v7);
        False = v354;
        return (llvm::LandingPadInst *)sub_1CC9D28DC(a1, (uint64_t)v7, 0, (uint64_t)False);
      }
      uint64_t v17 = *((void *)v7 - 12);
      int v18 = *(unsigned __int8 *)(v17 + 16);
      if (v18 != 16 && *((void *)v7 - 4) == *((void *)v7 - 8))
      {
        False = llvm::ConstantInt::getFalse(*(uint64_t ***)v17, this, a3);
        return (llvm::LandingPadInst *)sub_1CC9D28DC(a1, (uint64_t)v7, 0, (uint64_t)False);
      }
      if ((*((_DWORD *)v7 + 5) & 0x7FFFFFF) != 3) {
        return 0;
      }
      uint64_t v19 = *(void *)(v17 + 8);
      if (!v19) {
        return 0;
      }
      uint64_t v20 = *(void *)(v19 + 8);
      if (v18 != 82 || v20 != 0) {
        return 0;
      }
      __int16 v153 = *(_WORD *)(v17 + 18);
      if ((v153 & 0x3Fu) > 0x29 || ((1 << (v153 & 0x3F)) & 0x2AA00000068) == 0) {
        return 0;
      }
      *(_WORD *)(v17 + 18) = word_1CFB27598[(v153 & 0x3F) - 3] | v153 & 0xFFC0;
      llvm::BranchInst::swapSuccessors(v7);
      uint64_t v155 = *(void *)(a1 + 32);
      int v156 = *(_DWORD *)(v155 + 8);
      unint64_t v359 = (void *)v17;
      LODWORD(v360) = v156;
      int v157 = *(_DWORD *)(v155 + 2080);
      if (!v157)
      {
        int v273 = 0;
LABEL_533:
        BOOL v274 = sub_1CBF569E0((_DWORD *)(v155 + 2064), (uint64_t)&v359, (uint64_t *)&v359, v273);
        void *v274 = v359;
        *((_DWORD *)v274 + 2) = v360;
        unsigned int v275 = *(_DWORD *)(v155 + 8);
        if (v275 >= *(_DWORD *)(v155 + 12)) {
          llvm::SmallVectorBase<unsigned int>::grow_pod();
        }
        *(void *)(*(void *)v155 + 8 * v275) = v17;
        ++*(_DWORD *)(v155 + 8);
        return v7;
      }
      uint64_t v158 = *(void *)(v155 + 2064);
      int v159 = v157 - 1;
      unsigned int v160 = v159 & ((v17 >> 4) ^ (v17 >> 9));
      unsigned int v161 = (void *)(v158 + 16 * v160);
      uint64_t v162 = *v161;
      if (*v161 != v17)
      {
        char v163 = 0;
        int v164 = 1;
        while (v162 != -4096)
        {
          if (v163) {
            BOOL v165 = 0;
          }
          else {
            BOOL v165 = v162 == -8192;
          }
          if (v165) {
            char v163 = v161;
          }
          unsigned int v166 = v160 + v164++;
          unsigned int v160 = v166 & v159;
          unsigned int v161 = (void *)(v158 + 16 * v160);
          uint64_t v162 = *v161;
          if (*v161 == v17) {
            return v7;
          }
        }
        if (v163) {
          int v273 = v163;
        }
        else {
          int v273 = v161;
        }
        goto LABEL_533;
      }
      return v7;
    case 0x1F:
      unsigned int v108 = *((_DWORD *)this + 5);
      if ((v108 & 0x40000000) != 0) {
        int v109 = (char *)*((void *)this - 1);
      }
      else {
        int v109 = (char *)this - 32 * (v108 & 0x7FFFFFF);
      }
      uint64_t v110 = *(void *)v109;
      unsigned int v111 = *(unsigned __int8 *)(*(void *)v109 + 16);
      if (v111 == 5)
      {
        if (*(_WORD *)(v110 + 18) != 13) {
          goto LABEL_283;
        }
        int v192 = (uint64_t *)(v110 - 32 * (*(_DWORD *)(v110 + 20) & 0x7FFFFFF));
        uint64_t v112 = *v192;
        if (!*v192) {
          goto LABEL_283;
        }
        uint64_t v113 = (llvm::Constant *)v192[4];
      }
      else
      {
        if (v111 != 41) {
          goto LABEL_283;
        }
        uint64_t v112 = *(void *)(v110 - 64);
        if (!v112) {
          goto LABEL_283;
        }
        uint64_t v113 = *(llvm::Constant **)(v110 - 32);
      }
      if (v113) {
        BOOL v114 = *((unsigned char *)v113 + 16) == 16;
      }
      else {
        BOOL v114 = 0;
      }
      if (v114)
      {
        uint64_t v195 = ((v108 >> 1) & 0x3FFFFFF) - 1;
        if (v195)
        {
          uint64_t v196 = 0;
          uint64_t v197 = 2 * v195;
          do
          {
            int v198 = *((_DWORD *)v7 + 5);
            if ((v198 & 0x40000000) != 0) {
              BOOL v199 = (char *)*((void *)v7 - 1);
            }
            else {
              BOOL v199 = (char *)v7 - 32 * (v198 & 0x7FFFFFF);
            }
            uint64_t v200 = (v196 + 2) & 0xFFFFFFFE;
            Sub = llvm::ConstantExpr::getSub(*(llvm::ConstantExpr **)&v199[32 * v200], v113, 0, 0);
            int v202 = *((_DWORD *)v7 + 5);
            if ((v202 & 0x40000000) != 0) {
              uint64_t v203 = (char *)*((void *)v7 - 1);
            }
            else {
              uint64_t v203 = (char *)v7 - 32 * (v202 & 0x7FFFFFF);
            }
            uint64_t v204 = &v203[32 * v200];
            if (*(void *)v204)
            {
              **((void **)v204 + 2) = *((void *)v204 + 1);
              uint64_t v209 = *((void *)v204 + 1);
              if (v209) {
                *(void *)(v209 + 16) = *((void *)v204 + 2);
              }
            }
            *(void *)uint64_t v204 = Sub;
            if (Sub)
            {
              uint64_t v207 = *((void *)Sub + 1);
              int v205 = (char **)((char *)Sub + 8);
              uint64_t v206 = v207;
              unsigned int v208 = &v203[32 * v200];
              *((void *)v208 + 1) = v207;
              if (v207) {
                *(void *)(v206 + 16) = v208 + 8;
              }
              *((void *)v208 + 2) = v205;
              void *v205 = v204;
            }
            v196 += 2;
          }
          while (v197 != v196);
        }
        return (llvm::LandingPadInst *)sub_1CC9D28DC(a1, (uint64_t)v7, 0, v112);
      }
LABEL_283:
      uint64_t v115 = *(void *)(a1 + 56);
      uint64_t v116 = *(void *)(a1 + 72);
      uint64_t v117 = this;
      if (!*((void *)this + 5))
      {
        if (v111 < 0x1C || (uint64_t v117 = (llvm::BranchInst *)v110, !*(void *)(v110 + 40))) {
          uint64_t v117 = 0;
        }
      }
      unint64_t v359 = *(void **)(a1 + 80);
      uint64_t v360 = v115;
      uint64_t v361 = (uint64_t)v117;
      uint64_t v362 = v116;
      uint64_t v363 = 0;
      char v364 = 1;
      unint64_t v344 = (llvm::Instruction *)v110;
      sub_1CC16089C((uint64_t *)v110, 0, (const llvm::DataLayout **)&v359, (uint64_t)&v345);
      unsigned int v118 = v346;
      if (v346 > 0x40)
      {
        unsigned int v119 = llvm::APInt::countLeadingOnesSlowCase((llvm::APInt *)&v345);
      }
      else if (v346)
      {
        unsigned int v119 = __clz(~((void)v345 << -(char)v346));
      }
      else
      {
        unsigned int v119 = 0;
      }
      uint64_t v120 = v348;
      if (v348 > 0x40)
      {
        uint64_t v340 = v348;
        unsigned int v341 = llvm::APInt::countLeadingOnesSlowCase((llvm::APInt *)&v347);
        uint64_t v120 = v340;
        unsigned int v121 = v341;
      }
      else if (v348)
      {
        unsigned int v121 = __clz(~(v347 << -(char)v348));
      }
      else
      {
        unsigned int v121 = 0;
      }
      unsigned int v122 = *((_DWORD *)v7 + 5);
      if (((v122 >> 1) & 0x3FFFFFF) != 1)
      {
        uint64_t v123 = 0;
        do
        {
          unint64_t v124 = (char *)v7 - 32 * (v122 & 0x7FFFFFF);
          if ((v122 & 0x40000000) != 0) {
            unint64_t v124 = (char *)*((void *)v7 - 1);
          }
          uint64_t v125 = *(void *)&v124[32 * ((v123 + 2) & 0xFFFFFFFE)];
          BOOL v126 = (llvm::APInt *)(v125 + 24);
          unsigned int v127 = *(_DWORD *)(v125 + 32);
          if (v127 > 0x40)
          {
            uint64_t v343 = v120;
            unsigned int v128 = llvm::APInt::countLeadingZerosSlowCase(v126);
            uint64_t v120 = v343;
          }
          else
          {
            unsigned int v128 = v127 + __clz(*(void *)v126) - 64;
          }
          if (v128 < v119) {
            unsigned int v119 = v128;
          }
          int v129 = (char *)v7 - 32 * (v122 & 0x7FFFFFF);
          if ((v122 & 0x40000000) != 0) {
            int v129 = (char *)*((void *)v7 - 1);
          }
          uint64_t v130 = *(void *)&v129[32 * ((v123 + 2) & 0xFFFFFFFE)];
          unint64_t v131 = (llvm::APInt *)(v130 + 24);
          unsigned int v132 = *(_DWORD *)(v130 + 32);
          if (v132 > 0x40)
          {
            uint64_t v339 = v120;
            unsigned int v133 = llvm::APInt::countLeadingOnesSlowCase(v131);
            uint64_t v120 = v339;
          }
          else if (v132)
          {
            unsigned int v133 = __clz(~(*(void *)v131 << -(char)v132));
          }
          else
          {
            unsigned int v133 = 0;
          }
          if (v133 < v121) {
            unsigned int v121 = v133;
          }
          v123 += 2;
        }
        while (2 * (((v122 >> 1) & 0x3FFFFFF) - 1) != v123);
      }
      if (v119 <= v121) {
        unsigned int v134 = v121;
      }
      else {
        unsigned int v134 = v119;
      }
      uint64_t v135 = (llvm::LLVMContext *)(v118 - v134);
      if (v118 == v134 || v135 >= v118)
      {
        unsigned __int32 v9 = 0;
      }
      else
      {
        int v193 = v120;
        if (sub_1CC9D18E0(a1, v118, v118 - v134))
        {
          uint64_t v232 = llvm::IntegerType::get(**(llvm::IntegerType ***)v7, v135);
          uint64_t v233 = *(void *)(a1 + 24);
          *(void *)(v233 + 48) = *((void *)v7 + 5);
          *(void *)(v233 + 56) = (char *)v7 + 24;
          uint64_t v234 = (void *)*((void *)v7 + 6);
          unint64_t v359 = v234;
          if (v234)
          {
            llvm::MetadataTracking::track((uint64_t)&v359, (unsigned __int8 *)v234, 2);
            std::string::size_type v235 = v359;
          }
          else
          {
            std::string::size_type v235 = 0;
          }
          sub_1CB8461A4(v233, 0, (uint64_t)v235);
          if (v359) {
            llvm::MetadataTracking::untrack((uint64_t)&v359, (unsigned __int8 *)v359);
          }
          uint64_t v237 = *(void *)(a1 + 24);
          int v354 = (llvm::MDNode *)"trunc";
          __int16 v358 = 259;
          if (*(void *)v344 != v232)
          {
            if (*((unsigned __int8 *)v344 + 16) <= 0x14u)
            {
              uint64_t v270 = (unsigned __int8 *)(*(uint64_t (**)(void, uint64_t, llvm::Instruction *, uint64_t))(**(void **)(v237 + 72) + 224))(*(void *)(v237 + 72), 38, v344, v232);
              unint64_t v344 = (llvm::Instruction *)v270;
              if (v270) {
                BOOL v271 = v270[16] >= 0x1Cu;
              }
              else {
                BOOL v271 = 0;
              }
              if (v271) {
                unint64_t v344 = sub_1CB844E0C((uint64_t *)v237, (llvm::Instruction *)v270, (uint64_t)&v354);
              }
            }
            else
            {
              LOWORD(v363) = 257;
              unint64_t v344 = llvm::CastInst::Create(38, (uint64_t)v344, v232, (const char **)&v359, 0);
              (*(void (**)(void))(**(void **)(v237 + 80) + 16))(*(void *)(v237 + 80));
              uint64_t v238 = *(unsigned int *)(v237 + 8);
              if (v238)
              {
                uint64_t v290 = *(void *)v237;
                uint64_t v291 = *(void *)v237 + 16 * v238;
                do
                {
                  llvm::Instruction::setMetadata(v344, *(_DWORD *)v290, *(llvm::MDNode **)(v290 + 8));
                  v290 += 16;
                }
                while (v290 != v291);
              }
            }
          }
          int v239 = (*((_DWORD *)v7 + 5) >> 1) & 0x3FFFFFF;
          uint64_t v240 = (v239 - 1);
          if (v239 != 1)
          {
            uint64_t v241 = 0;
            do
            {
              int v242 = *((_DWORD *)v7 + 5);
              if ((v242 & 0x40000000) != 0) {
                int v243 = (char *)*((void *)v7 - 1);
              }
              else {
                int v243 = (char *)v7 - 32 * (v242 & 0x7FFFFFF);
              }
              uint64_t v244 = (2 * v241 + 2);
              uint64_t v245 = *(void *)&v243[32 * v244];
              uint64_t v246 = (unint64_t *)(v245 + 24);
              unsigned int v247 = *(_DWORD *)(v245 + 32);
              if (v135 > 0x40)
              {
                if (v247 != v135) {
                  operator new[]();
                }
                sub_1CD0463BC((uint64_t)&v359, (uint64_t)v246);
              }
              else
              {
                if (v247 >= 0x41) {
                  uint64_t v246 = (unint64_t *)*v246;
                }
                unint64_t v248 = *v246;
                LODWORD(v360) = v135;
                unint64_t v359 = (void *)(v248 & (0xFFFFFFFFFFFFFFFFLL >> -(char)v135));
              }
              uint64_t v249 = llvm::ConstantInt::get(**(llvm::ConstantInt ***)v7, (llvm::LLVMContext *)&v359, v236);
              int v250 = *((_DWORD *)v7 + 5);
              if ((v250 & 0x40000000) != 0) {
                uint64_t v251 = (char *)*((void *)v7 - 1);
              }
              else {
                uint64_t v251 = (char *)v7 - 32 * (v250 & 0x7FFFFFF);
              }
              uint64_t v252 = &v251[32 * v244];
              if (*(void *)v252)
              {
                **((void **)v252 + 2) = *((void *)v252 + 1);
                uint64_t v257 = *((void *)v252 + 1);
                if (v257) {
                  *(void *)(v257 + 16) = *((void *)v252 + 2);
                }
              }
              *(void *)uint64_t v252 = v249;
              if (v249)
              {
                uint64_t v255 = v249[1];
                uint64_t v253 = (char **)(v249 + 1);
                uint64_t v254 = v255;
                uint64_t v256 = &v251[32 * v244];
                *((void *)v256 + 1) = v255;
                if (v255) {
                  *(void *)(v254 + 16) = v256 + 8;
                }
                *((void *)v256 + 2) = v253;
                uint64_t *v253 = v252;
              }
              if (v360 >= 0x41 && v359) {
                MEMORY[0x1D25D9CB0](v359, 0x1000C8000313F17);
              }
              ++v241;
            }
            while (v241 != v240);
          }
          unsigned __int32 v9 = (llvm::Value *)sub_1CC9D28DC(a1, (uint64_t)v7, 0, (uint64_t)v344);
          LODWORD(v120) = v348;
        }
        else
        {
          unsigned __int32 v9 = 0;
          LODWORD(v120) = v193;
        }
      }
      if (v120 >= 0x41 && v347) {
        MEMORY[0x1D25D9CB0](v347, 0x1000C8000313F17);
      }
      if (v346 >= 0x41)
      {
        int v137 = (llvm::MDNode *)v345;
        if (v345) {
          goto LABEL_382;
        }
      }
      return v9;
    case 0x20:
    case 0x22:
    case 0x24:
    case 0x25:
    case 0x26:
    case 0x40:
    case 0x4F:
    case 0x50:
    case 0x56:
    case 0x57:
    case 0x58:
      return v9;
    case 0x21:
      return (llvm::LandingPadInst *)sub_1CD68B0B0(a1, (llvm::LLVMContext ***)this);
    case 0x23:
      PrevNonDebugInstruction = (unsigned __int8 *)llvm::Instruction::getPrevNonDebugInstruction(this, 0);
      if (PrevNonDebugInstruction)
      {
        char v221 = (llvm::PoisonValue **)PrevNonDebugInstruction;
        unsigned int v222 = PrevNonDebugInstruction[16] - 38;
        BOOL v27 = v222 > 0x38;
        uint64_t v223 = (1 << v222) & 0x100060000000001;
        BOOL v224 = v27 || v223 == 0;
        if (v224
          && llvm::isGuaranteedToTransferExecutionToSuccessor((llvm *)PrevNonDebugInstruction, v220))
        {
          v226 = (llvm::Value *)llvm::PoisonValue::get(*v221, v225);
          sub_1CC9D3C84(a1, (llvm::ValueAsMetadata *)v221, v226);
          sub_1CC9D6844(a1, (uint64_t)v221);
        }
      }
      return 0;
    case 0x27:
      return (llvm::LandingPadInst *)sub_1CD68B0B0(a1, (llvm::LLVMContext ***)this);
    case 0x28:
      return (llvm::LandingPadInst *)sub_1CC9F41A8(a1, this, (uint64_t)a3, a4, a5);
    case 0x29:
      return sub_1CC9EAC38(a1, (const llvm::Value **)this);
    case 0x2A:
      return (llvm::LandingPadInst *)sub_1CC9EFDF8(a1, (unsigned __int8 *)this);
    case 0x2B:
      return sub_1CC9F15B4(a1, (uint64_t)this);
    case 0x2C:
      return (llvm::LandingPadInst *)sub_1CC9F4B54(a1, (uint64_t)this);
    case 0x2D:
      return sub_1CCA81A4C(a1, this, (uint64_t)a3, a4, a5, a6);
    case 0x2E:
      return (llvm::LandingPadInst *)sub_1CCA83948(a1, (uint64_t)this);
    case 0x2F:
      return sub_1CCA86B18(a1, this, (uint64_t)a3, a4, (uint64_t)a5, a6);
    case 0x30:
      return sub_1CCA876CC(a1, (uint64_t ***)this);
    case 0x31:
      return (llvm::LandingPadInst *)sub_1CCA88060(a1, (uint64_t)this);
    case 0x32:
      return sub_1CCA89374(a1, this, (uint64_t)a3, a4, (uint64_t)a5, a6);
    case 0x33:
      return (llvm::LandingPadInst *)sub_1CCA89610(a1, this);
    case 0x34:
      return (llvm::LandingPadInst *)sub_1CCA89E58(a1, (unsigned __int8 *)this);
    case 0x35:
      return sub_1CCAACAAC(a1, (uint64_t)this);
    case 0x36:
      return sub_1CCAAF48C(a1, (unsigned __int8 *)this);
    case 0x37:
      return sub_1CCAB1414(a1, this);
    case 0x38:
      return sub_1CCA01EAC(a1, (uint64_t *)this, (uint64_t)a3, a4, a5, a6);
    case 0x39:
      return sub_1CCA07AFC(a1, (uint64_t)this, (uint64_t)a3, a4, a5, a6);
    case 0x3A:
      return sub_1CCA0BBD0(a1, (llvm **)this, (uint64_t)a3, a4, a5, a6);
    case 0x3B:
      return (llvm::LandingPadInst *)sub_1CCA7A2F0((void *)a1, (llvm::ArrayType **)this);
    case 0x3C:
      return (llvm::LandingPadInst *)sub_1CCA7C2FC(a1, this);
    case 0x3D:
      return (llvm::LandingPadInst *)sub_1CCA7DCEC(a1, (uint64_t)this);
    case 0x3E:
      return (llvm::LandingPadInst *)sub_1CC9D92A8(a1, (uint64_t *)this);
    case 0x3F:
      return (llvm::LandingPadInst *)sub_1CCA303B0(a1, this);
    case 0x41:
      return (llvm::LandingPadInst *)sub_1CC9FB564(a1, (uint64_t)this, a3);
    case 0x42:
      return sub_1CCA3A208(a1, this, (uint64_t)a3, a4, (BOOL)a5);
    case 0x43:
      return (llvm::LandingPadInst *)sub_1CCA3F824(a1, this, (uint64_t)a3, a4, (BOOL)a5);
    case 0x44:
      return sub_1CCA411F4((void *)a1, this, (uint64_t)a3, a4, (BOOL)a5);
    case 0x45:
      return sub_1CCA42E14(a1, (unsigned __int8 *)this);
    case 0x46:
      return sub_1CCA42E14(a1, (unsigned __int8 *)this);
    case 0x47:
    case 0x48:
      goto LABEL_171;
    case 0x49:
      return sub_1CCA41CC0(a1, this, (uint64_t)a3, a4, (BOOL)a5);
    case 0x4A:
      uint64_t v60 = *((void *)this - 4);
      if (*(unsigned __int8 *)(v60 + 16) - 71 <= 1)
      {
        uint64_t v228 = *(void *)this;
        if (sub_1CCA429E8(*((uint64_t **)this - 4)))
        {
          int v229 = *(unsigned __int8 *)(v60 + 16) - 28;
          uint64_t v230 = *(void *)(v60 - 32);
          LOWORD(v363) = 257;
          return llvm::CastInst::Create(v229, v230, v228, (const char **)&v359, 0);
        }
      }
LABEL_171:
      return sub_1CCA39904(a1, v7, (uint64_t)a3, a4, (BOOL)a5);
    case 0x4B:
      return sub_1CCA4328C(a1, this);
    case 0x4C:
      return sub_1CCA42E64(a1, this);
    case 0x4D:
      return sub_1CCA437AC(a1, this, (uint64_t)a3, a4, (uint64_t)a5);
    case 0x4E:
      return sub_1CCA4721C(a1, this, (uint64_t)a3, a4, (BOOL)a5);
    case 0x51:
      return sub_1CCA6A6A0(a1, (uint64_t ***)this);
    case 0x52:
      return (llvm::LandingPadInst *)sub_1CCA747F4(a1, (uint64_t ***)this);
    case 0x53:
      return (llvm::LandingPadInst *)sub_1CCA93834(a1, this, (uint64_t)a3, a4, a5, a6, a7);
    case 0x54:
      uint64_t v11 = *((void *)this - 4);
      if (v11
        && !*(unsigned char *)(v11 + 16)
        && *(void *)(v11 + 24) == *((void *)this + 9)
        && (int v12 = *(_DWORD *)(v11 + 36), v12 > 57)
        && v12 > 196
        && v12 > 313
        && v12 == 314)
      {
        return (llvm::LandingPadInst *)sub_1CD68AE90(a1, (uint64_t)this);
      }
      else
      {
        return (llvm::LandingPadInst *)sub_1CCA18294(a1, this);
      }
    case 0x55:
      return sub_1CCA9F6B0(a1, (llvm::Type **)this);
    case 0x59:
      return (llvm::LandingPadInst *)sub_1CCAC1290(a1, (llvm::UndefValue **)this);
    case 0x5A:
      return (llvm::LandingPadInst *)sub_1CCAC4138(a1, this, (uint64_t)a3, a4, a5);
    case 0x5B:
      return (llvm::LandingPadInst *)sub_1CCAC6724(a1, this);
    case 0x5C:
      uint64_t v23 = *((void *)this - 4);
      unsigned int v24 = (unsigned int *)*((void *)this + 8);
      uint64_t v25 = *((unsigned int *)this + 18);
      unsigned int v26 = *(unsigned __int8 *)(v23 + 16);
      if (v23) {
        BOOL v27 = v26 > 0x14;
      }
      else {
        BOOL v27 = 1;
      }
      if (v27)
      {
        if (v26 != 93) {
          goto LABEL_113;
        }
        uint64_t v61 = *((void *)this - 4);
        while (1)
        {
          unsigned int v62 = *(_DWORD *)(v61 + 72);
          unsigned int v63 = v62 >= v25 ? v25 : *(_DWORD *)(v61 + 72);
          if (!memcmp(*(const void **)(v61 + 64), v24, 4 * v63)) {
            break;
          }
          uint64_t v61 = *(void *)(v61 - 64);
          int v64 = 93;
          if (!v61 || *(unsigned char *)(v61 + 16) != 93) {
            goto LABEL_190;
          }
        }
        if (v62 == v25)
        {
          int v105 = *(llvm::Constant **)(v61 - 32);
          if (v105)
          {
LABEL_260:
            uint64_t v106 = a1;
            unsigned int v107 = v7;
            goto LABEL_261;
          }
        }
        int v64 = 93;
      }
      else
      {
        if (!v25)
        {
          int v105 = (llvm::Constant *)*((void *)this - 4);
          goto LABEL_260;
        }
        int v105 = (llvm::Constant *)*((void *)this - 4);
        while (1)
        {
          AggregateElement = (llvm::Constant *)llvm::Constant::getAggregateElement(v105, (llvm::Type *)*v24);
          if (!AggregateElement) {
            break;
          }
          int v105 = AggregateElement;
          ++v24;
          if (!--v25) {
            goto LABEL_260;
          }
        }
        int v64 = *(unsigned __int8 *)(v23 + 16);
      }
LABEL_190:
      if (!v23 || v64 != 93) {
        goto LABEL_113;
      }
      unsigned int v65 = (unsigned int *)*((void *)v7 + 8);
      uint64_t v66 = *((unsigned int *)v7 + 18);
      uint64_t v67 = *(unsigned int *)(v23 + 72);
      if (v66 && v67)
      {
        uint64_t v68 = 4 * v66;
        uint64_t v69 = 4 * v66 - 4;
        uint64_t v70 = 4 * v67 - 4;
        int v71 = (char *)*((void *)v7 + 8);
        uint64_t v72 = *(_DWORD **)(v23 + 64);
        do
        {
          if (*v72 != *(_DWORD *)v71)
          {
            int v167 = *(uint64_t **)(v23 - 64);
            LOWORD(v363) = 257;
            int v168 = (char *)operator new(0x80uLL);
            unsigned __int32 v9 = (llvm::Value *)(v168 + 32);
            *((_DWORD *)v168 + 13) = *((_DWORD *)v168 + 13) & 0x38000000 | 1;
            *(void *)int v168 = 0;
            *((void *)v168 + 1) = 0;
            *((void *)v168 + 2) = 0;
            *((void *)v168 + 3) = v168 + 32;
            uint64_t v169 = *v167;
            uint64_t v170 = v65;
            while (1)
            {
              unint64_t v171 = *v170;
              int v172 = *(unsigned __int8 *)(v169 + 8);
              if (v169 && v172 == 17)
              {
                if (*(void *)(v169 + 32) <= v171)
                {
LABEL_648:
                  uint64_t v173 = 0;
LABEL_358:
                  *((void *)v168 + 4) = v173;
                  *((void *)v168 + 5) = 0;
                  *((void *)v168 + 6) = 0x10000005CLL;
                  *(_OWORD *)(v168 + 56) = 0u;
                  *(_OWORD *)(v168 + 72) = 0u;
                  *((_DWORD *)v168 + 22) = 0;
                  uint64_t v175 = v167 + 1;
                  uint64_t v176 = v167[1];
                  *(void *)int v168 = v167;
                  *((void *)v168 + 1) = v176;
                  if (v176) {
                    *(void *)(v176 + 16) = v168 + 8;
                  }
                  *((void *)v168 + 2) = v175;
                  *uint64_t v175 = v168;
                  *((void *)v168 + 12) = v168 + 112;
                  *((void *)v168 + 13) = 0x400000000;
                  int v151 = (llvm::Value *)(v168 + 32);
                  int v152 = v65;
                  uint64_t v141 = v66;
                  goto LABEL_361;
                }
                unint64_t v174 = (uint64_t *)(v169 + 24);
              }
              else
              {
                uint64_t v173 = 0;
                if (!v169 || v172 != 16) {
                  goto LABEL_358;
                }
                if (v171 >= *(_DWORD *)(v169 + 12)) {
                  goto LABEL_648;
                }
                unint64_t v174 = (uint64_t *)(*(void *)(v169 + 16) + 8 * v171);
              }
              uint64_t v169 = *v174;
              ++v170;
              uint64_t v173 = v169;
              v68 -= 4;
              if (!v68) {
                goto LABEL_358;
              }
            }
          }
          v71 += 4;
          ++v72;
          if (!v69) {
            break;
          }
          v69 -= 4;
          uint64_t v73 = v70;
          v70 -= 4;
        }
        while (v73);
      }
      else
      {
        uint64_t v72 = *(_DWORD **)(v23 + 64);
        int v71 = (char *)*((void *)v7 + 8);
      }
      uint64_t v103 = &v65[v66];
      uint64_t v104 = *(void *)(v23 + 64) + 4 * v67;
      if (v71 == (char *)v103 && v72 == (_DWORD *)v104)
      {
        int v105 = *(llvm::Constant **)(v23 - 32);
        goto LABEL_260;
      }
      if (v71 == (char *)v103)
      {
        uint64_t v178 = *(void *)(a1 + 24);
        int v179 = *(uint64_t **)(v23 - 64);
        LOWORD(v363) = 257;
        uint64_t v180 = sub_1CC2415A4(v178, v179, v65, v66, (uint64_t)&v359);
        uint64_t v181 = *(void *)(v23 - 32);
        uint64_t v182 = v104 - (void)v72;
        LOWORD(v363) = 257;
        unsigned int v183 = (char *)operator new(0xA0uLL);
        uint64_t v184 = v72;
        *((void *)v183 + 1) = 0;
        *((void *)v183 + 2) = 0;
        *(void *)unsigned int v183 = 0;
        *((void *)v183 + 5) = 0;
        *((void *)v183 + 6) = 0;
        *((void *)v183 + 4) = 0;
        *((void *)v183 + 8) = *(void *)v180;
        unsigned __int32 v9 = (llvm::Value *)(v183 + 64);
        *((void *)v183 + 3) = v183 + 64;
        *((void *)v183 + 7) = v183 + 64;
        *((void *)v183 + 9) = 0;
        v183[80] = 93;
        v183[81] = 0;
        *((_WORD *)v183 + 41) = 0;
        *((_DWORD *)v183 + 21) = 2;
        *((_DWORD *)v183 + 30) = 0;
        *(_OWORD *)(v183 + 104) = 0u;
        *(_OWORD *)(v183 + 88) = 0u;
        *((void *)v183 + 16) = v183 + 144;
        *((void *)v183 + 17) = 0x400000000;
        llvm::InsertValueInst::init((llvm::Value *)(v183 + 64), (uint64_t)v180, v181, v184, v182 >> 2, (const char **)&v359);
        return v9;
      }
      if (v72 != (_DWORD *)v104)
      {
LABEL_113:
        int v28 = sub_1CC062BC4(v23);
        if (v23 && v28)
        {
          if (!**((_DWORD **)v7 + 8))
          {
            int v82 = *(_DWORD *)(*(void *)(v23 - 32) + 36);
            if (v82 == 309 || v82 == 278)
            {
              if (sub_1CBF687D0((uint64_t)&v359, *(llvm::Constant **)(v23 - 32 * (*(_DWORD *)(v23 + 20) & 0x7FFFFFF) + 32)))
              {
                int v84 = *(llvm::BinaryOperator **)(v23 - 32 * (*(_DWORD *)(v23 + 20) & 0x7FFFFFF));
                LOWORD(v363) = 257;
                return llvm::BinaryOperator::CreateNeg(v84, (llvm::Value *)&v359, 0, v83);
              }
            }
          }
          uint64_t v31 = *(void *)(v23 + 8);
          if (v31 && !*(void *)(v31 + 8))
          {
            if (!**((_DWORD **)v7 + 8))
            {
              uint64_t v177 = (llvm::Value *)llvm::PoisonValue::get(*(llvm::PoisonValue **)v23, v29);
              sub_1CC9D3C84(a1, (llvm::ValueAsMetadata *)v23, v177);
              sub_1CC9D6844(a1, v23);
            }
            uint64_t v353 = 0;
            int64_t v86 = *(unsigned __int8 **)(v23 - 32 * (*(_DWORD *)(v23 + 20) & 0x7FFFFFF) + 32);
            unint64_t v359 = &v353;
            uint64_t v360 = 0;
            if (sub_1CBF528D8((uint64_t)&v359, v86))
            {
              int v87 = 13;
              unsigned int v88 = *(_DWORD *)(*(void *)(v23 - 32) + 36) - 262;
              if (((1 << (*(unsigned char *)(*(void *)(v23 - 32) + 36) - 6)) & 0xC000000003) == 0)
              {
                if (((1 << v88) & 0x6000000600000) != 0) {
                  int v87 = 15;
                }
                else {
                  int v87 = 17;
                }
              }
              if (v88 <= 0x16 && ((1 << v88) & 0x610003) != 0) {
                int v89 = 2;
              }
              else {
                int v89 = 1;
              }
              llvm::ConstantRange::makeExactNoWrapRegion(v87, v353, v89, (uint64_t)&v354);
              int v352 = 0;
              LODWORD(v346) = 1;
              unint64_t v345 = 0;
              unsigned int v351 = 1;
              uint64_t v350 = 0;
              llvm::ConstantRange::getEquivalentICmp((llvm::ConstantRange *)&v354, &v352, (unsigned int *)&v345, (uint64_t)&v350);
              uint64_t v91 = v23 - 32 * (*(_DWORD *)(v23 + 20) & 0x7FFFFFF);
              uint64_t v92 = **(void **)(v91 + 32);
              unsigned int v93 = *(llvm::Instruction **)v91;
              unsigned int v94 = v350;
              if (v351 >= 0x41)
              {
                int v215 = 0;
                int64_t v216 = ((unint64_t)v351 + 63) >> 6;
                do
                {
                  BOOL v27 = v216-- < 1;
                  if (v27) {
                    break;
                  }
                  unint64_t v217 = v350[v216];
                  v215 += __clz(v217);
                }
                while (!v217);
                unsigned int v218 = v351 | 0xFFFFFFC0;
                if ((v351 & 0x3F) == 0) {
                  unsigned int v218 = 0;
                }
                if (v351 - v215 - v218 > 0x40)
                {
LABEL_240:
                  uint64_t v95 = *(void *)(a1 + 24);
                  Splat = llvm::ConstantInt::get(*(llvm::ConstantInt **)v92, (llvm::LLVMContext *)&v350, v90);
                  if ((*(_DWORD *)(v92 + 8) & 0xFE) == 0x12) {
                    Splat = llvm::ConstantVector::getSplat((llvm::Type *)(*(unsigned int *)(v92 + 32) | ((unint64_t)(*(_DWORD *)(v92 + 8) == 19) << 32)), (uint64_t)Splat);
                  }
                  LOWORD(v363) = 257;
                  unsigned int v93 = sub_1CB844A3C(v95, v93, (uint64_t)Splat, (uint64_t)&v359, 0, 0);
LABEL_243:
                  int v97 = operator new(0x80uLL);
                  unsigned __int32 v9 = (llvm::Value *)(v97 + 16);
                  v97[21] = v97[21] & 0x38000000 | 2;
                  *(void *)int v97 = 0;
                  *((void *)v97 + 1) = 0;
                  *((void *)v97 + 2) = 0;
                  *((void *)v97 + 3) = v97 + 16;
                  *((void *)v97 + 4) = 0;
                  *((void *)v97 + 5) = 0;
                  *((void *)v97 + 6) = 0;
                  *((void *)v97 + 7) = v97 + 16;
                  int v98 = dword_1CFB275E8[v352];
                  int v100 = llvm::ConstantInt::get(*(llvm::ConstantInt **)v92, (llvm::LLVMContext *)&v345, v99);
                  if ((*(_DWORD *)(v92 + 8) & 0xFE) == 0x12) {
                    int v100 = llvm::ConstantVector::getSplat((llvm::Type *)(*(unsigned int *)(v92 + 32) | ((unint64_t)(*(_DWORD *)(v92 + 8) == 19) << 32)), (uint64_t)v100);
                  }
                  LOWORD(v363) = 257;
                  uint64_t v101 = *(void *)v93;
                  uint64_t v102 = ***(void ***)v93 + 1888;
                  if (*(void *)v93 && (*(_DWORD *)(v101 + 8) & 0xFE) == 0x12)
                  {
                    char v276 = (uint64_t **)(***(void ***)v93 + 1888);
                    unint64_t v277 = (llvm::Type *)*(unsigned int *)(v101 + 32);
                    if (*(_DWORD *)(v101 + 8) == 19) {
                      llvm::ScalableVectorType::get(v276, v277);
                    }
                    else {
                      llvm::FixedVectorType::get((llvm::FixedVectorType *)v276, v277);
                    }
                    uint64_t v102 = v278;
                  }
                  llvm::CmpInst::CmpInst(v9, v102, 53, v98, (uint64_t)v93, (uint64_t)v100, (const char **)&v359, 0, 0);
                  if (v351 >= 0x41 && v350) {
                    MEMORY[0x1D25D9CB0](v350, 0x1000C8000313F17);
                  }
                  if (v346 >= 0x41 && v345) {
                    MEMORY[0x1D25D9CB0](v345, 0x1000C8000313F17);
                  }
                  if (v357 < 0x41)
                  {
LABEL_380:
                    if (v355 >= 0x41)
                    {
                      int v137 = v354;
                      if (v354) {
LABEL_382:
                      }
                        MEMORY[0x1D25D9CB0](v137, 0x1000C8000313F17);
                    }
                    return v9;
                  }
LABEL_254:
                  if (v356) {
                    MEMORY[0x1D25D9CB0](v356, 0x1000C8000313F17);
                  }
                  goto LABEL_380;
                }
                unsigned int v94 = (void *)*v350;
              }
              if (!v94) {
                goto LABEL_243;
              }
              goto LABEL_240;
            }
          }
        }
        unsigned __int32 v9 = 0;
        if (!v23 || *(unsigned char *)(v23 + 16) != 60) {
          return v9;
        }
        if ((*(_WORD *)(v23 + 18) & 0x381) != 0) {
          return 0;
        }
        uint64_t v32 = *(void *)(v23 + 8);
        if (!v32 || *(void *)(v32 + 8)) {
          return 0;
        }
        unint64_t v359 = &v361;
        uint64_t v360 = 0x400000000;
        uint64_t v33 = **(void **)(*(void *)(a1 + 24) + 64);
        uint64_t v34 = *(llvm::ConstantInt **)(v33 + 1960);
        unsigned int v35 = *(_DWORD *)(v33 + 1968);
        LODWORD(v355) = v35 >> 8;
        if (v35 >> 8 >= 0x41) {
          operator new[]();
        }
        int v354 = 0;
        int v37 = llvm::ConstantInt::get(v34, (llvm::LLVMContext *)&v354, v30);
        if (v355 >= 0x41 && v354) {
          MEMORY[0x1D25D9CB0](v354, 0x1000C8000313F17);
        }
        if (v360 >= HIDWORD(v360)) {
          llvm::SmallVectorBase<unsigned int>::grow_pod();
        }
        *((void *)v359 + v360) = v37;
        LODWORD(v360) = v360 + 1;
        uint64_t v38 = *((unsigned int *)v7 + 18);
        if (v38)
        {
          int v39 = (unsigned int *)*((void *)v7 + 8);
          uint64_t v40 = 4 * v38;
          do
          {
            uint64_t v41 = *v39;
            uint64_t v42 = **(void **)(*(void *)(a1 + 24) + 64);
            long long v43 = *(llvm::ConstantInt **)(v42 + 1960);
            unint64_t v44 = *(unsigned int *)(v42 + 1968);
            LODWORD(v355) = v44 >> 8;
            if (v44 >> 8 > 0x40) {
              operator new[]();
            }
            if (v44 <= 0xFF) {
              unint64_t v45 = 0;
            }
            else {
              unint64_t v45 = 0xFFFFFFFFFFFFFFFFLL >> ~(BYTE1(v44) + 63);
            }
            int v354 = (llvm::MDNode *)(v45 & v41);
            uint64_t v46 = llvm::ConstantInt::get(v43, (llvm::LLVMContext *)&v354, v36);
            if (v355 >= 0x41 && v354) {
              MEMORY[0x1D25D9CB0](v354, 0x1000C8000313F17);
            }
            if (v360 >= (unint64_t)HIDWORD(v360)) {
              llvm::SmallVectorBase<unsigned int>::grow_pod();
            }
            *((void *)v359 + v360) = v46;
            LODWORD(v360) = v360 + 1;
            ++v39;
            v40 -= 4;
          }
          while (v40);
        }
        uint64_t v47 = *(void *)(a1 + 24);
        *(void *)(v47 + 48) = *(void *)(v23 + 40);
        *(void *)(v47 + 56) = v23 + 24;
        uint64_t v48 = *(llvm::SmallPtrSetImplBase **)(v23 + 48);
        unint64_t v345 = (void **)v48;
        if (v48)
        {
          llvm::MetadataTracking::track((uint64_t)&v345, (unsigned __int8 *)v48, 2);
          uint64_t v49 = (llvm::SmallPtrSetImplBase *)v345;
        }
        else
        {
          uint64_t v49 = 0;
        }
        sub_1CB8461A4(v47, 0, (uint64_t)v49);
        if (v345)
        {
          int v212 = *(unsigned __int8 *)v345;
          if ((v212 - 4) > 0x1E)
          {
            if ((v212 - 3) >= 0xFFFFFFFE) {
              uint64_t v231 = v345;
            }
            else {
              uint64_t v231 = 0;
            }
            if ((v212 - 3) < 0xFFFFFFFE)
            {
              if (v212 == 3) {
                v345[1] = 0;
              }
              goto LABEL_138;
            }
            unint64_t v214 = (unint64_t)(v231 + 1);
          }
          else
          {
            if ((*((unsigned char *)v345 + 1) & 0x7F) != 2 && !*((_DWORD *)v345 + 3)) {
              goto LABEL_138;
            }
            unint64_t v213 = (unint64_t)v345[2];
            if ((v213 & 4) == 0) {
              goto LABEL_138;
            }
            unint64_t v214 = v213 & 0xFFFFFFFFFFFFFFF8;
            if (!v214) {
              goto LABEL_138;
            }
          }
          int v354 = (llvm::MDNode *)&v345;
          sub_1CC5FA668(v214 + 16, &v354);
        }
LABEL_138:
        uint64_t v50 = *(uint64_t **)(a1 + 24);
        uint64_t v51 = *(llvm::PoisonValue **)v23;
        uint64_t v52 = *(uint64_t **)(v23 - 32);
        __int16 v358 = 257;
        uint64_t v53 = sub_1CC57EEA0(v50, (uint64_t)v51, v52, (uint64_t *)v359, v360, (uint64_t)&v354);
        uint64_t v54 = *(uint64_t **)(a1 + 24);
        BOOL v55 = *(llvm::Type **)v7;
        __int16 v349 = 257;
        char Alignment = llvm::DataLayout::getAlignment((llvm::DataLayout *)(*(void *)(*(void *)(v54[6] + 56) + 40) + 272), v55, 1);
        uint64_t v57 = operator new(0x60uLL);
        v57[13] = v57[13] & 0x38000000 | 1;
        char v58 = (llvm::Instruction *)(v57 + 8);
        *(void *)uint64_t v57 = 0;
        *((void *)v57 + 1) = 0;
        *((void *)v57 + 2) = 0;
        *((void *)v57 + 3) = v57 + 8;
        __int16 v358 = 257;
        llvm::LoadInst::LoadInst((llvm::Value *)(v57 + 8), (uint64_t)v55, v53, (const char **)&v354, 0, Alignment, 0);
        (*(void (**)(uint64_t, _DWORD *, void ***, uint64_t, uint64_t))(*(void *)v54[10] + 16))(v54[10], v57 + 8, &v345, v54[6], v54[7]);
        uint64_t v59 = *((unsigned int *)v54 + 2);
        if (v59)
        {
          uint64_t v210 = *v54;
          uint64_t v211 = *v54 + 16 * v59;
          do
          {
            llvm::Instruction::setMetadata(v58, *(_DWORD *)v210, *(llvm::MDNode **)(v210 + 8));
            v210 += 16;
          }
          while (v210 != v211);
        }
        llvm::Instruction::getAAMetadata((uint64_t ***)v23, &v354);
        if (v354 || *((void *)v57 + 10) || (*((unsigned char *)v57 + 55) & 0x20) != 0) {
          llvm::Value::setMetadata((uint64_t ***)v58, 1, v354);
        }
        if (v355 || *((void *)v57 + 10) || (*((unsigned char *)v57 + 55) & 0x20) != 0) {
          llvm::Value::setMetadata((uint64_t ***)v58, 5, v355);
        }
        if (v356 || *((void *)v57 + 10) || (*((unsigned char *)v57 + 55) & 0x20) != 0) {
          llvm::Value::setMetadata((uint64_t ***)v58, 7, v356);
        }
        if (v357 || *((void *)v57 + 10) || (*((unsigned char *)v57 + 55) & 0x20) != 0) {
          llvm::Value::setMetadata((uint64_t ***)v58, 8, v357);
        }
        unsigned __int32 v9 = (llvm::Value *)sub_1CC9D3C84(a1, v7, v58);
        if (v359 != &v361) {
          free(v359);
        }
        return v9;
      }
      int v138 = *(uint64_t **)(v23 - 32);
      uint64_t v139 = (char *)v103 - v71;
      LOWORD(v363) = 257;
      int v140 = (char *)operator new(0x80uLL);
      unsigned __int32 v9 = (llvm::Value *)(v140 + 32);
      *((_DWORD *)v140 + 13) = *((_DWORD *)v140 + 13) & 0x38000000 | 1;
      *(void *)int v140 = 0;
      *((void *)v140 + 1) = 0;
      *((void *)v140 + 2) = 0;
      *((void *)v140 + 3) = v140 + 32;
      uint64_t v141 = v139 >> 2;
      uint64_t v142 = *v138;
      unint64_t v143 = v139 & 0xFFFFFFFFFFFFFFFCLL;
      char v144 = v71;
      while (1)
      {
        unint64_t v145 = *(unsigned int *)v144;
        int v146 = *(unsigned __int8 *)(v142 + 8);
        if (!v142 || v146 != 17) {
          break;
        }
        if (*(void *)(v142 + 32) <= v145) {
          goto LABEL_654;
        }
        uint64_t v148 = (uint64_t *)(v142 + 24);
LABEL_328:
        uint64_t v142 = *v148;
        v144 += 4;
        uint64_t v147 = v142;
        v143 -= 4;
        if (!v143) {
          goto LABEL_329;
        }
      }
      uint64_t v147 = 0;
      if (!v142 || v146 != 16) {
        goto LABEL_329;
      }
      if (v145 < *(_DWORD *)(v142 + 12))
      {
        uint64_t v148 = (uint64_t *)(*(void *)(v142 + 16) + 8 * v145);
        goto LABEL_328;
      }
LABEL_654:
      uint64_t v147 = 0;
LABEL_329:
      *((void *)v140 + 4) = v147;
      *((void *)v140 + 5) = 0;
      *((void *)v140 + 6) = 0x10000005CLL;
      *(_OWORD *)(v140 + 56) = 0u;
      *(_OWORD *)(v140 + 72) = 0u;
      *((_DWORD *)v140 + 22) = 0;
      int v149 = v138 + 1;
      uint64_t v150 = v138[1];
      *(void *)int v140 = v138;
      *((void *)v140 + 1) = v150;
      if (v150) {
        *(void *)(v150 + 16) = v140 + 8;
      }
      *((void *)v140 + 2) = v149;
      *int v149 = v140;
      *((void *)v140 + 12) = v140 + 112;
      *((void *)v140 + 13) = 0x400000000;
      int v151 = (llvm::Value *)(v140 + 32);
      int v152 = (unsigned int *)v71;
LABEL_361:
      llvm::ExtractValueInst::init(v151, v152, v141, (const char **)&v359);
      return v9;
    case 0x5D:
      return (llvm::LandingPadInst *)sub_1CCAC401C(a1, this);
    case 0x5E:
      return sub_1CC9DEFFC(this, this);
    case 0x5F:
      uint64_t v258 = *((void *)this - 4);
      int v259 = sub_1CC16A22C((uint64_t ***)v258, *(void *)(a1 + 112), (uint64_t)this, *(void *)(a1 + 104), 0, 0);
      if (v258) {
        BOOL v262 = v259 == 0;
      }
      else {
        BOOL v262 = 1;
      }
      if (!v262)
      {
        uint64_t v106 = a1;
        unsigned int v107 = v7;
        int v105 = (llvm::Constant *)v258;
LABEL_261:
        return (llvm::LandingPadInst *)sub_1CC9D3C84(v106, v107, v105);
      }
      if (v258)
      {
        if (*(unsigned char *)(v258 + 16) == 83)
        {
          unsigned __int32 v9 = (llvm::Value *)sub_1CC9D50C0(a1, v7, v258);
          if (v9) {
            return v9;
          }
        }
      }
      uint64_t v263 = *((void *)v7 - 4);
      if (!v263) {
        goto LABEL_507;
      }
      unsigned int v264 = *(unsigned __int8 *)(v263 + 16);
      if (v264 < 0x1C) {
        goto LABEL_507;
      }
      uint64_t v265 = *(void *)(v263 + 8);
      if (!v265) {
        goto LABEL_507;
      }
      uint64_t v266 = *(void *)(v265 + 8);
      BOOL v267 = v264 != 83 && v266 == 0;
      if (!v267 || (sub_1CC169B54(*((void *)v7 - 4), 0, 0) & 1) != 0) {
        goto LABEL_507;
      }
      int v279 = *(_DWORD *)(v263 + 20);
      if ((v279 & 0x40000000) != 0)
      {
        uint64_t v281 = *(uint64_t *****)(v263 - 8);
        uint64_t v280 = v279 & 0x7FFFFFF;
      }
      else
      {
        uint64_t v280 = v279 & 0x7FFFFFF;
        uint64_t v281 = (uint64_t ****)(v263 - 32 * v280);
      }
      if (!v280)
      {
        llvm::Instruction::dropPoisonGeneratingFlags((llvm::Instruction *)v263);
        goto LABEL_583;
      }
      size_t v292 = 0;
      uint64_t v293 = 32 * v280;
      while (1)
      {
        int v294 = sub_1CC16A22C(*v281, 0, 0, 0, 0, 0);
        int v295 = v292 != 0;
        if (v294) {
          int v295 = 3;
        }
        if (v295 != 3 && v295 != 0) {
          break;
        }
        if (v292) {
          int v297 = 1;
        }
        else {
          int v297 = v294;
        }
        if (!v297) {
          size_t v292 = (uint64_t *)v281;
        }
        v281 += 4;
        v293 -= 32;
        if (!v293)
        {
          llvm::Instruction::dropPoisonGeneratingFlags((llvm::Instruction *)v263);
          if (v292)
          {
            uint64_t v298 = operator new(0x60uLL);
            uint64_t v299 = v298;
            uint64_t v300 = (llvm::Value *)(v298 + 8);
            v298[13] = v298[13] & 0x38000000 | 1;
            *(void *)uint64_t v298 = 0;
            *((void *)v298 + 1) = 0;
            *((void *)v298 + 2) = 0;
            *((void *)v298 + 3) = v298 + 8;
            uint64_t v301 = (llvm::Value *)*v292;
            if ((*(unsigned char *)(*v292 + 23) & 0x10) != 0)
            {
              uint64_t v302 = ***(void ***)v301;
              uint64_t v303 = *(void *)(v302 + 152);
              uint64_t v304 = *(unsigned int *)(v302 + 168);
              if (v304)
              {
                LODWORD(v305) = (v304 - 1) & ((v301 >> 4) ^ (v301 >> 9));
                unsigned int v306 = (llvm::Value **)(v303 + 16 * v305);
                uint64_t v307 = *v306;
                if (*v306 != v301)
                {
                  int v308 = 1;
                  do
                  {
                    if (v307 == (llvm::Value *)-4096) {
                      goto LABEL_589;
                    }
                    int v309 = v305 + v308++;
                    uint64_t v305 = v309 & (v304 - 1);
                    uint64_t v307 = *(llvm::Value **)(v303 + 16 * v305);
                  }
                  while (v307 != v301);
                  unsigned int v306 = (llvm::Value **)(v303 + 16 * v305);
                }
              }
              else
              {
LABEL_589:
                unsigned int v306 = (llvm::Value **)(v303 + 16 * v304);
              }
              unint64_t v310 = v306[1];
              uint64_t v313 = *(void *)v310;
              char v311 = (char *)v310 + 16;
              uint64_t v312 = v313;
            }
            else
            {
              uint64_t v312 = 0;
              char v311 = &byte_1CFBCE98E;
            }
            LOWORD(v363) = 773;
            unint64_t v359 = v311;
            uint64_t v360 = v312;
            uint64_t v361 = (uint64_t)".fr";
            llvm::FreezeInst::FreezeInst((llvm::FreezeInst *)(v298 + 8), v301, (const char **)&v359, 0);
            sub_1CC9DFE20((void *)a1, v292, (uint64_t)v300);
            uint64_t v314 = *(void *)(v263 + 40);
            *((void *)v299 + 9) = v314;
            *(_WORD *)(v314 + 18) &= ~0x8000u;
            if ((*((unsigned char *)v299 + 55) & 0x10) != 0)
            {
              uint64_t v334 = *(void *)(v314 + 56);
              if (v334)
              {
                int v335 = *(llvm::ValueSymbolTable **)(v334 + 104);
                if (v335) {
                  llvm::ValueSymbolTable::reinsertValue(v335, v300);
                }
              }
            }
            uint64_t v315 = *(void *)(v263 + 24);
            *((void *)v299 + 7) = v315;
            *((void *)v299 + 8) = v263 + 24;
            char v316 = v299 + 14;
            *(void *)(v315 + 8) = v316;
            *(void *)(v263 + 24) = v316;
          }
LABEL_583:
          uint64_t v317 = a1;
          unint64_t v318 = v7;
          unint64_t v319 = (llvm::Value *)v263;
          return (llvm::LandingPadInst *)sub_1CC9D3C84(v317, v318, v319);
        }
      }
LABEL_507:
      unsigned int v268 = (*(unsigned char *)(v258 + 16) - 11);
      if (v268 >= 2)
      {
        if (v268 < 0xFD) {
          goto LABEL_509;
        }
        unint64_t v359 = &v363;
        uint64_t v360 = (uint64_t)&v363;
        uint64_t v361 = 8;
        LODWORD(v362) = 0;
        int v354 = (llvm::MDNode *)&v356;
        int v355 = (llvm::MDNode *)0x800000000;
        unint64_t v345 = &v359;
        uint64_t v346 = &v354;
        BOOL v320 = 0;
        if (sub_1CC04C108((llvm::SmallPtrSetImplBase **)&v345, v258))
        {
          do
          {
            BOOL v320 = v355 == 0;
            if (!v355) {
              break;
            }
            uint64_t v342 = *((void *)v354 + v355 - 1);
            LODWORD(v355) = v355 - 1;
          }
          while ((sub_1CC04C108((llvm::SmallPtrSetImplBase **)&v345, v342) & 1) != 0);
        }
        if (v354 != (llvm::MDNode *)&v356) {
          free(v354);
        }
        if ((void *)v360 != v359) {
          free((void *)v360);
        }
        if (!v320)
        {
LABEL_509:
          uint64_t v269 = (unsigned __int8 *)*((void *)v7 - 4);
          if (v269[16] < 0x15u) {
            return 0;
          }
          LOBYTE(v354) = 0;
          unint64_t v359 = (void *)a1;
          uint64_t v360 = (uint64_t)v7;
          uint64_t v361 = (uint64_t)&v354;
          llvm::Value::replaceUsesWithIf((llvm::Value *)v269, v7, (unsigned int (*)(uint64_t, uint64_t))sub_1CC9E9790, (uint64_t)&v359);
          if ((_BYTE)v354) {
            return v7;
          }
          else {
            return 0;
          }
        }
      }
      NullValue = llvm::Constant::getNullValue(*(llvm::Constant **)v7, v260, v261);
      uint64_t v323 = *((void *)v7 + 1);
      if (!v323)
      {
        int v325 = 0;
LABEL_616:
        uint64_t v317 = a1;
        unint64_t v318 = v7;
        unint64_t v319 = v325;
        return (llvm::LandingPadInst *)sub_1CC9D3C84(v317, v318, v319);
      }
      unint64_t v324 = NullValue;
      int v325 = 0;
      while (1)
      {
        uint64_t v326 = *(void *)(v323 + 24);
        int v327 = *(unsigned __int8 *)(v326 + 16);
        if (v327 == 57 || v327 == 5 && *(_WORD *)(v326 + 18) == 29)
        {
          AllOnesValue = (llvm::Value *)llvm::Constant::getAllOnesValue(*(llvm::Constant **)v7, (llvm::Type *)v326, v322);
        }
        else
        {
          uint64_t v329 = v324;
          if (!sub_1CD68A508((uint64_t)v7, v326)) {
            goto LABEL_603;
          }
          long long v331 = *(llvm::IntegerType ***)v7;
          int v332 = **(uint64_t ***)v7;
          uint64_t v333 = *v332;
          uint64_t v329 = *(llvm::Value **)(*v332 + 1560);
          if (!v329)
          {
            int64_t v336 = *(llvm::ConstantInt **)(v333 + 1888);
            unsigned int v337 = *(_DWORD *)(v333 + 1896);
            LODWORD(v360) = v337 >> 8;
            if (v337 >> 8 > 0x40) {
              operator new[]();
            }
            if (v337 <= 0xFF) {
              char v338 = 0;
            }
            else {
              char v338 = 0xFFFFFFFFFFFFFFFFLL >> ~(BYTE1(v337) + 63);
            }
            unint64_t v359 = (void *)(v338 & 1);
            uint64_t v329 = (llvm::Value *)llvm::ConstantInt::get(v336, (llvm::LLVMContext *)&v359, v322);
            if (v360 >= 0x41 && v359) {
              MEMORY[0x1D25D9CB0](v359, 0x1000C8000313F17);
            }
            *(void *)(v333 + 1560) = v329;
          }
          if ((v331[1] & 0xFE) != 0x12) {
            goto LABEL_603;
          }
          AllOnesValue = llvm::ConstantVector::getSplat((llvm::Type *)(*((unsigned int *)v331 + 8) | ((unint64_t)(*((_DWORD *)v331 + 2) == 19) << 32)), (uint64_t)v329);
        }
        uint64_t v329 = AllOnesValue;
LABEL_603:
        if (v325 == v329) {
          uint64_t v330 = v325;
        }
        else {
          uint64_t v330 = v324;
        }
        if (v325) {
          int v325 = v330;
        }
        else {
          int v325 = v329;
        }
        uint64_t v323 = *(void *)(v323 + 8);
        if (!v323) {
          goto LABEL_616;
        }
      }
    default:
      uint64_t v74 = *((_DWORD *)this + 5) & 0x7FFFFFF;
      if (!v74) {
        return 0;
      }
      uint64_t v75 = (uint64_t *)*((void *)this - 4 * v74);
      unsigned int v76 = (llvm::Constant ***)*v75;
      if (*(unsigned char *)(*v75 + 8) != 13) {
        return 0;
      }
      unsigned int v77 = *((unsigned __int8 *)v75 + 16);
      if (v77 < 0x15) {
        return 0;
      }
      if (v77 == 84)
      {
        if ((*((_WORD *)v75 + 9) & 3) == 2) {
          return 0;
        }
        uint64_t v78 = *(void *)(a1 + 56);
        uint64_t v80 = *(void *)(a1 + 72);
        BOOL v79 = *(void **)(a1 + 80);
        uint64_t v81 = this;
        if (*((void *)this + 5))
        {
LABEL_366:
          unint64_t v359 = v79;
          uint64_t v360 = v78;
          uint64_t v361 = (uint64_t)v81;
          uint64_t v362 = v80;
          uint64_t v363 = 0;
          char v364 = 1;
          sub_1CC16089C(v75, 0, (const llvm::DataLayout **)&v359, (uint64_t)&v354);
          if (v355 > 0x40)
          {
            __int32 v187 = 0;
            unint64_t v282 = ((unint64_t)v355 + 63) >> 6;
            unint64_t v283 = v354;
            do
            {
              int8x8_t v284 = *(int8x8_t *)v283;
              unint64_t v283 = (llvm::MDNode *)((char *)v283 + 8);
              uint8x8_t v285 = (uint8x8_t)vcnt_s8(v284);
              v285.i16[0] = vaddlv_u8(v285);
              v187 += v285.i32[0];
              --v282;
            }
            while (v282);
          }
          else
          {
            uint8x8_t v186 = (uint8x8_t)vcnt_s8((int8x8_t)v354);
            v186.i16[0] = vaddlv_u8(v186);
            __int32 v187 = v186.i32[0];
          }
          unsigned int v188 = v357;
          if (v357 > 0x40)
          {
            __int32 v190 = 0;
            unint64_t v286 = ((unint64_t)v357 + 63) >> 6;
            uint64_t v287 = v356;
            do
            {
              int8x8_t v288 = *(int8x8_t *)v287;
              uint64_t v287 = (llvm::MDNode *)((char *)v287 + 8);
              uint8x8_t v289 = (uint8x8_t)vcnt_s8(v288);
              v289.i16[0] = vaddlv_u8(v289);
              v190 += v289.i32[0];
              --v286;
            }
            while (v286);
          }
          else
          {
            uint8x8_t v189 = (uint8x8_t)vcnt_s8((int8x8_t)v356);
            v189.i16[0] = vaddlv_u8(v189);
            __int32 v190 = v189.i32[0];
          }
          if (v190 + v187 == v355)
          {
            IntegerValue = llvm::Constant::getIntegerValue(v76, (llvm::Type *)&v356, v185);
            unsigned __int32 v9 = (llvm::Value *)sub_1CC9D28DC(a1, (uint64_t)v7, 0, (uint64_t)IntegerValue);
            unsigned int v188 = v357;
          }
          else
          {
            unsigned __int32 v9 = 0;
          }
          if (v188 < 0x41) {
            goto LABEL_380;
          }
          goto LABEL_254;
        }
      }
      else
      {
        uint64_t v78 = *(void *)(a1 + 56);
        uint64_t v80 = *(void *)(a1 + 72);
        BOOL v79 = *(void **)(a1 + 80);
        if (*((void *)this + 5))
        {
          uint64_t v81 = this;
          goto LABEL_366;
        }
        if (v77 < 0x1C)
        {
LABEL_489:
          uint64_t v81 = 0;
          goto LABEL_366;
        }
      }
      uint64_t v81 = (llvm::BranchInst *)v75;
      if (v75[5]) {
        goto LABEL_366;
      }
      goto LABEL_489;
  }
}

double llvm::InstCombinePass::InstCombinePass(llvm::InstCombinePass *this)
{
  *(void *)this = (char *)this + 16;
  *((void *)this + 1) = 0x10000000000;
  *((_OWORD *)this + 129) = 0u;
  *((_DWORD *)this + 520) = 0;
  *((void *)this + 261) = 1;
  uint64_t v1 = 2096;
  int64x2_t v2 = vdupq_n_s64(0xFFFFFFFFFFFFF000);
  do
  {
    *(int64x2_t *)((char *)this + v1) = v2;
    v1 += 16;
  }
  while (v1 != 2224);
  *((void *)this + 278) = (char *)this + 2240;
  *(void *)&double result = 0x1000000000;
  *((void *)this + 279) = 0x1000000000;
  *((_DWORD *)this + 592) = dword_1EBD09170;
  return result;
}

{
  uint64_t v1;
  int64x2_t v2;
  double result;

  *(void *)this = (char *)this + 16;
  *((void *)this + 1) = 0x10000000000;
  *((_OWORD *)this + 129) = 0u;
  *((_DWORD *)this + 520) = 0;
  *((void *)this + 261) = 1;
  uint64_t v1 = 2096;
  int64x2_t v2 = vdupq_n_s64(0xFFFFFFFFFFFFF000);
  do
  {
    *(int64x2_t *)((char *)this + v1) = v2;
    v1 += 16;
  }
  while (v1 != 2224);
  *((void *)this + 278) = (char *)this + 2240;
  *(void *)&double result = 0x1000000000;
  *((void *)this + 279) = 0x1000000000;
  *((_DWORD *)this + 592) = dword_1EBD09170;
  return result;
}

double llvm::InstCombinePass::InstCombinePass(llvm::InstCombinePass *this, int a2)
{
  *(void *)this = (char *)this + 16;
  *((void *)this + 1) = 0x10000000000;
  *((_OWORD *)this + 129) = 0u;
  *((_DWORD *)this + 520) = 0;
  *((void *)this + 261) = 1;
  uint64_t v2 = 2096;
  int64x2_t v3 = vdupq_n_s64(0xFFFFFFFFFFFFF000);
  do
  {
    *(int64x2_t *)((char *)this + v2) = v3;
    v2 += 16;
  }
  while (v2 != 2224);
  *((void *)this + 278) = (char *)this + 2240;
  *(void *)&double result = 0x1000000000;
  *((void *)this + 279) = 0x1000000000;
  *((_DWORD *)this + 592) = a2;
  return result;
}

{
  uint64_t v2;
  int64x2_t v3;
  double result;

  *(void *)this = (char *)this + 16;
  *((void *)this + 1) = 0x10000000000;
  *((_OWORD *)this + 129) = 0u;
  *((_DWORD *)this + 520) = 0;
  *((void *)this + 261) = 1;
  uint64_t v2 = 2096;
  int64x2_t v3 = vdupq_n_s64(0xFFFFFFFFFFFFF000);
  do
  {
    *(int64x2_t *)((char *)this + v2) = v3;
    v2 += 16;
  }
  while (v2 != 2224);
  *((void *)this + 278) = (char *)this + 2240;
  *(void *)&double result = 0x1000000000;
  *((void *)this + 279) = 0x1000000000;
  *((_DWORD *)this + 592) = a2;
  return result;
}

void llvm::InstCombinePass::run()
{
}

uint64_t sub_1CC9E4FB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned int a11, uint64_t a12)
{
  uint64_t v12 = MEMORY[0x1F4188790](a1, a2, a3, a4);
  uint64_t v220 = v15;
  uint64_t v221 = v16;
  uint64_t v219 = v17;
  uint64_t v230 = v18;
  uint64_t v217 = v19;
  uint64_t v20 = v13;
  uint64_t v21 = (llvm *)v12;
  int v22 = a11;
  uint64_t v294 = *MEMORY[0x1E4F143B8];
  uint64_t v23 = *(void *)(v12 + 40) + 272;
  if (dword_1EBD09170 < a11) {
    int v22 = dword_1EBD09170;
  }
  unsigned int v222 = v22;
  uint64_t v24 = **(void **)v12;
  uint64_t v249 = (void (**)(void **))&unk_1F262B578;
  *(void *)&long long v250 = v13;
  uint64_t v218 = v14;
  *((void *)&v250 + 1) = v14;
  uint64_t v251 = (void **)&v249;
  uint64_t v252 = &unk_1F2616B68;
  uint64_t v255 = &v253;
  uint64_t v253 = &unk_1F262B578;
  long long v254 = v250;
  v256[0] = v257;
  v256[1] = (void *)0x200000000;
  v257[6] = v24;
  v257[7] = v263;
  v257[8] = &v264;
  v257[9] = 0;
  int v258 = 0;
  __int16 v259 = 512;
  char v260 = 7;
  v257[5] = 0;
  v257[4] = 0;
  uint64_t v261 = 0;
  uint64_t v262 = 0;
  v263[0] = &unk_1F2602158;
  int v229 = (llvm::DataLayout *)v23;
  v263[1] = v23;
  unsigned int v264 = &unk_1F2616B68;
  BOOL v267 = &v265;
  uint64_t v265 = &unk_1F262B578;
  long long v266 = v250;
  llvm::IRBuilderCallbackInserter::~IRBuilderCallbackInserter((llvm::IRBuilderCallbackInserter *)&v252);
  if (v251 == (void **)&v249)
  {
    v249[4]((void **)&v249);
  }
  else if (v251)
  {
    (*((void (**)(void))*v251 + 5))();
  }
  if (dword_1EBCE5B38) {
    uint64_t wouldInstructionBeTriviallyDead = llvm::LowerDbgDeclare(v21, v25);
  }
  else {
    uint64_t wouldInstructionBeTriviallyDead = 0;
  }
  int v223 = 0;
  BOOL v224 = v21;
  uint64_t v225 = (_DWORD *)(v20 + 2064);
  v226 = (char *)v21 + 72;
  uint64_t v227 = v20;
  do
  {
    if (v223 + 1 > dword_1EBCE59B8)
    {
      uint64_t v244 = "Instruction Combining seems stuck in an infinite loop after ";
      v248[0] = 259;
      v235[0] = 264;
      LODWORD(v231) = dword_1EBCE59B8;
      sub_1CD3E3950((uint64_t *)&v244, (uint64_t *)&v231, (uint64_t)&v268);
      uint64_t v291 = (uint64_t)" iterations.";
      v293[8] = 259;
      sub_1CD3E3950((uint64_t *)&v268, &v291, (uint64_t)&v271);
      llvm::report_fatal_error((llvm *)&v271, (const llvm::Twine *)1);
    }
    LOBYTE(v31) = wouldInstructionBeTriviallyDead;
    if (v223 + 1 > v222) {
      goto LABEL_390;
    }
    char v216 = wouldInstructionBeTriviallyDead;
    ++v223;
    char v32 = 0;
    uint64_t v244 = (const char *)v248;
    uint64_t v245 = (char *)v248;
    uint64_t v246 = 32;
    int v247 = 0;
    BOOL v271 = v273;
    uint64_t v33 = *((void *)v224 + 10);
    BOOL v48 = v33 == 0;
    uint64_t v34 = v33 - 24;
    if (v48) {
      uint64_t v34 = 0;
    }
    v273[0] = v34;
    uint64_t v272 = 0x10000000001;
    unsigned int v268 = v270;
    uint64_t v269 = 0x8000000000;
    uint64_t v241 = 0;
    uint64_t v242 = 0;
    unsigned int v243 = 0;
    uint64_t v231 = (char *)v235;
    uint64_t v232 = (char *)v235;
    uint64_t v233 = 8;
    int v234 = 0;
    int v236 = v240;
    uint64_t v237 = v240;
    uint64_t v238 = 8;
    unsigned int v35 = 1;
    int v239 = 0;
    do
    {
      while (1)
      {
        uint64_t v36 = *((void *)v271 + v35 - 1);
        LODWORD(v272) = v35 - 1;
        int v37 = v245;
        uint64_t v38 = HIDWORD(v246);
        if (v245 == v244)
        {
          if (HIDWORD(v246))
          {
            int v39 = 0;
            uint64_t v40 = 8 * HIDWORD(v246);
            uint64_t v41 = v245;
            do
            {
              if (*(void *)v41 == v36) {
                goto LABEL_223;
              }
              if (*(void *)v41 == -2) {
                int v39 = v41;
              }
              v41 += 8;
              v40 -= 8;
            }
            while (v40);
            if (v39)
            {
              *(void *)int v39 = v36;
              --v247;
              goto LABEL_48;
            }
          }
          uint64_t v25 = (llvm::Function *)v246;
          if (HIDWORD(v246) < v246)
          {
            ++HIDWORD(v246);
            *(void *)&v245[8 * v38] = v36;
            goto LABEL_48;
          }
        }
        else
        {
          uint64_t v25 = (llvm::Function *)v246;
        }
        if (3 * (int)v25 <= (4 * (HIDWORD(v246) - v247)))
        {
          if (v25 >= 0x40) {
            LODWORD(v25) = 2 * v25;
          }
          else {
            LODWORD(v25) = 128;
          }
LABEL_242:
          llvm::SmallPtrSetImplBase::Grow((llvm::SmallPtrSetImplBase *)&v244, v25);
          uint64_t v25 = (llvm::Function *)v246;
          int v37 = v245;
          goto LABEL_29;
        }
        if ((int)v25 - HIDWORD(v246) < v25 >> 3) {
          goto LABEL_242;
        }
LABEL_29:
        int v42 = v25 - 1;
        unsigned int v43 = (v25 - 1) & ((v36 >> 4) ^ (v36 >> 9));
        unint64_t v44 = &v37[8 * v43];
        uint64_t v45 = *(void *)v44;
        if (*(void *)v44 != -1)
        {
          uint64_t v46 = 0;
          int v47 = 1;
          while (v45 != v36)
          {
            if (v46) {
              BOOL v48 = 0;
            }
            else {
              BOOL v48 = v45 == -2;
            }
            if (v48) {
              uint64_t v46 = v44;
            }
            unsigned int v49 = v43 + v47++;
            unsigned int v43 = v49 & v42;
            unint64_t v44 = &v37[8 * (v49 & v42)];
            uint64_t v45 = *(void *)v44;
            if (*(void *)v44 == -1) {
              goto LABEL_41;
            }
          }
          goto LABEL_223;
        }
        uint64_t v46 = 0;
LABEL_41:
        if (v46) {
          uint64_t v50 = v46;
        }
        else {
          uint64_t v50 = v44;
        }
        if (*(void *)v50 == v36) {
          goto LABEL_223;
        }
        if (*(void *)v50 == -2) {
          --v247;
        }
        else {
          ++HIDWORD(v246);
        }
        *(void *)uint64_t v50 = v36;
LABEL_48:
        uint64_t v51 = (void *)(v36 + 40);
        uint64_t v52 = *(void **)(v36 + 48);
        uint64_t v228 = (void *)(v36 + 40);
        while (v52 != v51)
        {
          uint64_t v53 = (uint64_t ***)(v52 - 3);
          BOOL v48 = v52 == 0;
          uint64_t v52 = (void *)v52[1];
          if (v48) {
            uint64_t v54 = 0;
          }
          else {
            uint64_t v54 = v53;
          }
          if (v54[1])
          {
            int v55 = *((_DWORD *)v54 + 5);
            if ((v55 & 0x7FFFFFF) == 0
              || ((v55 & 0x40000000) != 0 ? (BOOL v56 = (uint64_t ***)*(v54 - 1)) : (BOOL v56 = &v54[-4 * (v55 & 0x7FFFFFF)]),
                  *((unsigned __int8 *)*v56 + 16) <= 0x14u))
            {
              uint64_t v57 = llvm::ConstantFoldInstruction((uint64_t)v54, v229, v230, v26, v27, v28, v29);
              if (v57)
              {
                char v32 = 1;
                llvm::Value::doRAUW((llvm::ValueAsMetadata *)v54, v57, (llvm::Value *)1);
                if (!v54[1])
                {
                  uint64_t wouldInstructionBeTriviallyDead = llvm::wouldInstructionBeTriviallyDead((uint64_t)v54, (uint64_t *)v230);
                  if (wouldInstructionBeTriviallyDead) {
                    llvm::SymbolTableListTraits<llvm::Instruction>::removeNodeFromList();
                  }
                }
                goto LABEL_138;
              }
            }
          }
          int v58 = *((_DWORD *)v54 + 5);
          if ((v58 & 0x40000000) != 0)
          {
            uint64_t v60 = (uint64_t *)*(v54 - 1);
            uint64_t v59 = v58 & 0x7FFFFFF;
          }
          else
          {
            uint64_t v59 = v58 & 0x7FFFFFF;
            uint64_t v60 = (uint64_t *)&v54[-4 * v59];
          }
          uint64_t v61 = &v60[4 * v59];
          if (v59)
          {
            while (1)
            {
              uint64_t v62 = *v60;
              int v63 = *(unsigned __int8 *)(*v60 + 16);
              if (v63 == 10 || v63 == 5) {
                break;
              }
LABEL_106:
              v60 += 4;
              if (v60 == v61) {
                goto LABEL_134;
              }
            }
            unsigned int v65 = v62 >> 4;
            if (!v243)
            {
              uint64_t v67 = 0;
              goto LABEL_85;
            }
            unsigned int v66 = (v243 - 1) & (v65 ^ (v62 >> 9));
            uint64_t v67 = (uint64_t *)(v241 + 16 * v66);
            uint64_t v68 = *v67;
            if (v62 != *v67)
            {
              uint64_t v69 = 0;
              int v70 = 1;
              while (v68 != -4096)
              {
                if (v69) {
                  BOOL v71 = 0;
                }
                else {
                  BOOL v71 = v68 == -8192;
                }
                if (v71) {
                  uint64_t v69 = v67;
                }
                unsigned int v72 = v66 + v70++;
                unsigned int v66 = v72 & (v243 - 1);
                uint64_t v67 = (uint64_t *)(v241 + 16 * v66);
                uint64_t v68 = *v67;
                if (v62 == *v67) {
                  goto LABEL_91;
                }
              }
              if (v69) {
                uint64_t v67 = v69;
              }
LABEL_85:
              if (4 * (int)v242 + 4 < 3 * v243)
              {
                if (v243 + ~v242 - HIDWORD(v242) > v243 >> 3) {
                  goto LABEL_87;
                }
                sub_1CC02A420((uint64_t)&v241, v243);
                if (v243)
                {
                  unsigned int v86 = (v243 - 1) & (v65 ^ (v62 >> 9));
                  uint64_t v67 = (uint64_t *)(v241 + 16 * v86);
                  uint64_t v87 = *v67;
                  if (*v67 != v62)
                  {
                    int v82 = 0;
                    int v88 = 1;
                    while (v87 != -4096)
                    {
                      if (v82) {
                        BOOL v89 = 0;
                      }
                      else {
                        BOOL v89 = v87 == -8192;
                      }
                      if (v89) {
                        int v82 = v67;
                      }
                      unsigned int v90 = v86 + v88++;
                      unsigned int v86 = v90 & (v243 - 1);
                      uint64_t v67 = (uint64_t *)(v241 + 16 * v86);
                      uint64_t v87 = *v67;
                      if (*v67 == v62) {
                        goto LABEL_87;
                      }
                    }
                    goto LABEL_130;
                  }
                }
                else
                {
                  uint64_t v67 = 0;
                }
                goto LABEL_87;
              }
              sub_1CC02A420((uint64_t)&v241, 2 * v243);
              unsigned int v80 = (v243 - 1) & (v65 ^ (v62 >> 9));
              uint64_t v67 = (uint64_t *)(v241 + 16 * v80);
              uint64_t v81 = *v67;
              if (v62 == *v67)
              {
LABEL_117:
                uint64_t v73 = v62;
              }
              else
              {
                int v82 = 0;
                int v83 = 1;
                while (v81 != -4096)
                {
                  if (v82) {
                    BOOL v84 = 0;
                  }
                  else {
                    BOOL v84 = v81 == -8192;
                  }
                  if (v84) {
                    int v82 = v67;
                  }
                  unsigned int v85 = v80 + v83++;
                  unsigned int v80 = v85 & (v243 - 1);
                  uint64_t v67 = (uint64_t *)(v241 + 16 * v80);
                  uint64_t v81 = *v67;
                  if (v62 == *v67) {
                    goto LABEL_117;
                  }
                }
LABEL_130:
                if (v82) {
                  uint64_t v67 = v82;
                }
LABEL_87:
                uint64_t v73 = *v67;
              }
              LODWORD(v242) = v242 + 1;
              if (v73 != -4096) {
                --HIDWORD(v242);
              }
              *uint64_t v67 = v62;
              v67[1] = 0;
            }
LABEL_91:
            uint64_t v74 = (llvm::Value *)v67[1];
            if (!v74)
            {
              uint64_t v291 = 1;
              for (uint64_t i = 8; i != 72; i += 16)
                *(uint64_t *)((char *)&v291 + i) = -4096;
              uint64_t v74 = sub_1CBFB8694(v62, v229, (BOOL)v230, (uint64_t)&v291);
              if ((v291 & 1) == 0) {
                MEMORY[0x1D25D9CD0](v292, 8);
              }
              v67[1] = (uint64_t)v74;
            }
            if (v74 != (llvm::Value *)v62)
            {
              if (*v60)
              {
                *(void *)v60[2] = v60[1];
                unsigned int v76 = (void **)v60[1];
                if (v76) {
                  v76[2] = (void *)v60[2];
                }
              }
              uint64_t *v60 = (uint64_t)v74;
              if (v74)
              {
                BOOL v79 = (void **)*((void *)v74 + 1);
                uint64_t v78 = (uint64_t **)((char *)v74 + 8);
                unsigned int v77 = v79;
                v60[1] = (uint64_t)v79;
                if (v79) {
                  v77[2] = v60 + 1;
                }
                v60[2] = (uint64_t)v78;
                *uint64_t v78 = v60;
              }
              char v32 = 1;
            }
            goto LABEL_106;
          }
LABEL_134:
          uint64_t wouldInstructionBeTriviallyDead = sub_1CBF63B28((uint64_t)v54);
          if ((wouldInstructionBeTriviallyDead & 1) == 0)
          {
            uint64_t wouldInstructionBeTriviallyDead = sub_1CC27D470((uint64_t)v54);
            if ((wouldInstructionBeTriviallyDead & 1) == 0)
            {
              if (v269 >= (unint64_t)HIDWORD(v269)) {
                llvm::SmallVectorBase<unsigned int>::grow_pod();
              }
              *((void *)v268 + v269) = v54;
              LODWORD(v269) = v269 + 1;
              if ((*((unsigned char *)v54 + 23) & 0x20) != 0)
              {
                uint64_t v91 = ***v54;
                uint64_t v291 = (uint64_t)v54;
                int v92 = *(_DWORD *)(v91 + 2496);
                unsigned int v93 = v54 >> 4;
                if (!v92)
                {
                  unsigned int v122 = 0;
                  goto LABEL_176;
                }
                uint64_t v94 = *(void *)(v91 + 2480);
                int v95 = v92 - 1;
                unsigned int v96 = v95 & (v93 ^ (v54 >> 9));
                int v97 = (void *)(v94 + 40 * v96);
                int v98 = (void ***)*v97;
                if ((uint64_t ***)*v97 != v54)
                {
                  uint64_t v99 = 0;
                  int v100 = 1;
                  while (v98 != (void ***)-4096)
                  {
                    if (v99) {
                      BOOL v101 = 0;
                    }
                    else {
                      BOOL v101 = v98 == (void ***)-8192;
                    }
                    if (v101) {
                      uint64_t v99 = v97;
                    }
                    unsigned int v102 = v96 + v100++;
                    unsigned int v96 = v102 & v95;
                    int v97 = (void *)(v94 + 40 * v96);
                    int v98 = (void ***)*v97;
                    if ((uint64_t ***)*v97 == v54) {
                      goto LABEL_149;
                    }
                  }
                  if (v99) {
                    unsigned int v122 = v99;
                  }
                  else {
                    unsigned int v122 = v97;
                  }
LABEL_176:
                  int v97 = sub_1CC609054(v91 + 2480, (uint64_t)&v291, &v291, v122);
                  uint64_t v123 = v291;
                  v97[4] = 0;
                  v97[3] = 0;
                  *int v97 = v123;
                  v97[1] = v97 + 3;
                  v97[2] = 0x100000000;
                }
LABEL_149:
                uint64_t v103 = *((unsigned int *)v97 + 4);
                if (v103)
                {
                  uint64_t v104 = (unsigned __int8 **)(v97[1] + 8);
                  uint64_t v105 = 16 * v103;
                  while (*((_DWORD *)v104 - 2) != 7)
                  {
                    v104 += 2;
                    v105 -= 16;
                    if (!v105) {
                      goto LABEL_153;
                    }
                  }
                  uint64_t v106 = *v104;
                }
                else
                {
LABEL_153:
                  uint64_t v106 = 0;
                }
                sub_1CC9E88A0(v106, (llvm::SmallPtrSetImplBase *)&v231);
                if ((*((unsigned char *)v54 + 23) & 0x20) == 0) {
                  goto LABEL_170;
                }
                uint64_t v107 = ***v54;
                uint64_t v291 = (uint64_t)v54;
                int v108 = *(_DWORD *)(v107 + 2496);
                if (!v108)
                {
                  unint64_t v124 = 0;
                  goto LABEL_180;
                }
                uint64_t v109 = *(void *)(v107 + 2480);
                int v110 = v108 - 1;
                unsigned int v111 = v110 & (v93 ^ (v54 >> 9));
                uint64_t v112 = (void *)(v109 + 40 * v111);
                uint64_t v113 = (void ***)*v112;
                if ((uint64_t ***)*v112 != v54)
                {
                  BOOL v114 = 0;
                  int v115 = 1;
                  while (v113 != (void ***)-4096)
                  {
                    if (v114) {
                      BOOL v116 = 0;
                    }
                    else {
                      BOOL v116 = v113 == (void ***)-8192;
                    }
                    if (v116) {
                      BOOL v114 = v112;
                    }
                    unsigned int v117 = v111 + v115++;
                    unsigned int v111 = v117 & v110;
                    uint64_t v112 = (void *)(v109 + 40 * v111);
                    uint64_t v113 = (void ***)*v112;
                    if ((uint64_t ***)*v112 == v54) {
                      goto LABEL_166;
                    }
                  }
                  if (v114) {
                    unint64_t v124 = v114;
                  }
                  else {
                    unint64_t v124 = v112;
                  }
LABEL_180:
                  uint64_t v112 = sub_1CC609054(v107 + 2480, (uint64_t)&v291, &v291, v124);
                  uint64_t v125 = v291;
                  v112[4] = 0;
                  v112[3] = 0;
                  *uint64_t v112 = v125;
                  v112[1] = v112 + 3;
                  v112[2] = 0x100000000;
                }
LABEL_166:
                uint64_t v118 = *((unsigned int *)v112 + 4);
                if (v118)
                {
                  unsigned int v119 = (unsigned __int8 **)(v112[1] + 8);
                  uint64_t v120 = 16 * v118;
                  while (*((_DWORD *)v119 - 2) != 8)
                  {
                    v119 += 2;
                    v120 -= 16;
                    if (!v120) {
                      goto LABEL_170;
                    }
                  }
                  unsigned int v121 = *v119;
                }
                else
                {
LABEL_170:
                  unsigned int v121 = 0;
                }
                sub_1CC9E88A0(v121, (llvm::SmallPtrSetImplBase *)&v236);
              }
            }
          }
LABEL_138:
          uint64_t v51 = v228;
        }
        BOOL v126 = (void *)*v228;
        if ((void *)*v228 == v228)
        {
          unsigned int v127 = 0;
          int v136 = 0;
          uint64_t v20 = v227;
          goto LABEL_222;
        }
        unsigned int v127 = (llvm::Instruction *)(v126 - 3);
        BOOL v128 = v126 == 0;
        if (v126) {
          uint64_t v129 = (uint64_t)(v126 - 3);
        }
        else {
          uint64_t v129 = 0;
        }
        unsigned int v130 = *(unsigned __int8 *)(v129 + 16) - 40;
        if (v130 >= 0xFFFFFFF5) {
          uint64_t v31 = v129;
        }
        else {
          uint64_t v31 = 0;
        }
        int v131 = *(unsigned __int8 *)(v31 + 16);
        if (v130 < 0xFFFFFFF5) {
          BOOL v128 = 1;
        }
        if (v131 == 30 && !v128) {
          break;
        }
        char v137 = v131 != 31 || v128;
        uint64_t v20 = v227;
        if ((v137 & 1) == 0)
        {
          int v138 = *(_DWORD *)(v31 + 20);
          uint64_t v139 = (v138 & 0x40000000) != 0 ? *(uint64_t **)(v31 - 8) : (uint64_t *)(v31 - 32 * (v138 & 0x7FFFFFF));
          uint64_t v140 = *v139;
          int v141 = *(unsigned __int8 *)(*v139 + 16);
          if (v140 && v141 == 16)
          {
            uint64_t wouldInstructionBeTriviallyDead = sub_1CC025540(v31, v140);
            int v144 = *(_DWORD *)(v31 + 20);
            if ((v144 & 0x40000000) != 0) {
              uint64_t v145 = *(void *)(v31 - 8);
            }
            else {
              uint64_t v145 = v31 - 32 * (v144 & 0x7FFFFFF);
            }
            if (v25 == 4294967294) {
              uint64_t v146 = 1;
            }
            else {
              uint64_t v146 = (2 * v25 + 3);
            }
            uint64_t v135 = *(void *)(v145 + 32 * v146);
            goto LABEL_232;
          }
        }
        if (!v128)
        {
LABEL_217:
          if (*((unsigned char *)v126 - 8) != 30)
          {
            int v143 = 0;
            switch(*((unsigned char *)v126 - 8))
            {
              case 0x1E:
                __break(1u);
                goto LABEL_394;
              case 0x1F:
                int v143 = (*((_DWORD *)v126 - 1) >> 1) & 0x3FFFFFF;
                goto LABEL_221;
              case 0x20:
              case 0x26:
                int v143 = (*((_DWORD *)v126 - 1) & 0x7FFFFFF) - 1;
                goto LABEL_221;
              case 0x21:
                int v143 = 2;
                goto LABEL_221;
              case 0x24:
                int v143 = *((_WORD *)v126 - 3) & 1;
                goto LABEL_221;
              case 0x25:
                int v143 = 1;
                goto LABEL_221;
              case 0x27:
                int v143 = *((_DWORD *)v126 + 14) + 1;
                goto LABEL_221;
              default:
                goto LABEL_221;
            }
          }
          if ((*((_DWORD *)v126 - 1) & 0x7FFFFFF) == 3) {
            int v143 = 2;
          }
          else {
            int v143 = 1;
          }
LABEL_221:
          int v136 = v143;
          goto LABEL_222;
        }
        int v136 = 0;
LABEL_222:
        uint64_t wouldInstructionBeTriviallyDead = (uint64_t)sub_1CBFC9784((uint64_t)&v271, (uint64_t)v271 + 8 * v272, v127, 0, (uint64_t)v127, v136);
LABEL_223:
        unsigned int v35 = v272;
        if (!v272) {
          goto LABEL_249;
        }
      }
      uint64_t v20 = v227;
      if ((*(_DWORD *)(v31 + 20) & 0x7FFFFFF) != 3) {
        goto LABEL_217;
      }
      uint64_t v132 = *(void *)(v31 - 96);
      if (*(unsigned char *)(v132 + 16) != 16) {
        goto LABEL_217;
      }
      unsigned int v133 = (void *)(v132 + 24);
      if (*(_DWORD *)(v132 + 32) >= 0x41u) {
        unsigned int v133 = (void *)*v133;
      }
      if (*v133) {
        uint64_t v134 = 0;
      }
      else {
        uint64_t v134 = -1;
      }
      uint64_t v135 = *(void *)(v31 + 32 * v134 - 32);
LABEL_232:
      if (v272 >= (unint64_t)HIDWORD(v272)) {
        llvm::SmallVectorBase<unsigned int>::grow_pod();
      }
      *((void *)v271 + v272) = v135;
      unsigned int v35 = v272 + 1;
      LODWORD(v272) = v35;
    }
    while (v35);
LABEL_249:
    for (uint64_t j = *((void *)v224 + 10); (char *)j != v226; uint64_t j = *(void *)(j + 8))
    {
      if (j) {
        uint64_t v148 = (llvm *)(j - 24);
      }
      else {
        uint64_t v148 = 0;
      }
      int v149 = v244;
      if (v245 == v244)
      {
        int v150 = HIDWORD(v246);
        int v151 = &v245[8 * HIDWORD(v246)];
        if (HIDWORD(v246))
        {
          uint64_t v152 = 0;
          while (*(llvm **)&v245[v152] != v148)
          {
            v152 += 8;
            if (8 * HIDWORD(v246) == v152) {
              goto LABEL_273;
            }
          }
          int v151 = &v245[v152];
        }
LABEL_273:
        int v149 = v245;
      }
      else
      {
        int v153 = v246 - 1;
        unsigned int v154 = (v246 - 1) & ((v148 >> 4) ^ (v148 >> 9));
        int v151 = &v245[8 * v154];
        uint64_t v155 = *(llvm **)v151;
        if (*(void *)v151 == -1)
        {
          int v156 = 0;
LABEL_281:
          if (v156) {
            int v151 = v156;
          }
          int v150 = HIDWORD(v246);
          if (*(llvm **)v151 != v148) {
            int v151 = &v245[8 * v246];
          }
        }
        else
        {
          int v156 = 0;
          int v157 = 1;
          while (v155 != v148)
          {
            if (v156) {
              BOOL v158 = 0;
            }
            else {
              BOOL v158 = v155 == (llvm *)-2;
            }
            if (v158) {
              int v156 = v151;
            }
            unsigned int v159 = v154 + v157++;
            unsigned int v154 = v159 & v153;
            int v151 = &v245[8 * (v159 & v153)];
            uint64_t v155 = *(llvm **)v151;
            if (*(void *)v151 == -1) {
              goto LABEL_281;
            }
          }
          int v150 = HIDWORD(v246);
        }
      }
      if (v245 == v149) {
        int v160 = v150;
      }
      else {
        int v160 = v246;
      }
      if (v151 == &v245[8 * v160])
      {
        uint64_t v161 = llvm::removeAllNonTerminatorAndEHPadInstructions(v148, v25);
        v32 |= v161 + HIDWORD(v161) != 0;
      }
    }
    if ((unint64_t)v269 + 16 > *(unsigned int *)(v20 + 12)) {
      llvm::SmallVectorBase<unsigned int>::grow_pod();
    }
    if (v269)
    {
      unint64_t v162 = (4 * (int)v269 / 3u + 1) | ((unint64_t)(4 * (int)v269 / 3u + 1) >> 1);
      unint64_t v163 = v162 | (v162 >> 2) | ((v162 | (v162 >> 2)) >> 4);
      unsigned int v164 = ((v163 | (v163 >> 8)) >> 16) | v163 | (v163 >> 8);
      if (*(_DWORD *)(v20 + 2080) <= v164) {
        sub_1CBF56B18((uint64_t)v225, v164 + 1);
      }
    }
    if (v269)
    {
      BOOL v165 = (char *)v268;
      unsigned int v166 = (char *)v268 + 8 * v269;
      while (1)
      {
        uint64_t v168 = *((void *)v166 - 1);
        v166 -= 8;
        uint64_t v167 = v168;
        if (!*(void *)(v168 + 8) && (llvm::wouldInstructionBeTriviallyDead(v167, (uint64_t *)v230) & 1) != 0) {
          goto LABEL_354;
        }
        if (sub_1CC9E8BD8(v167))
        {
          uint64_t v169 = *(void *)(*(void *)(v167 - 32 * (*(_DWORD *)(v167 + 20) & 0x7FFFFFF)) + 24);
          uint64_t v170 = *(unsigned __int8 **)(v169 - 8 * *(unsigned int *)(v169 + 8));
          if (*v170 - 4 > 0x1E) {
            goto LABEL_354;
          }
          unint64_t v171 = v231;
          if (v232 == v231)
          {
            int v172 = &v232[8 * HIDWORD(v233)];
            if (HIDWORD(v233))
            {
              uint64_t v173 = 0;
              while (*(unsigned __int8 **)&v232[v173] != v170)
              {
                v173 += 8;
                if (8 * HIDWORD(v233) == v173) {
                  goto LABEL_316;
                }
              }
              int v172 = &v232[v173];
            }
LABEL_316:
            unint64_t v171 = v232;
          }
          else
          {
            int v174 = v233 - 1;
            unsigned int v175 = (v233 - 1) & ((v170 >> 4) ^ (v170 >> 9));
            int v172 = &v232[8 * v175];
            uint64_t v176 = *(unsigned __int8 **)v172;
            if (*(void *)v172 == -1)
            {
              uint64_t v177 = 0;
LABEL_365:
              if (v177) {
                int v172 = v177;
              }
              if (*(unsigned __int8 **)v172 != v170) {
                int v172 = &v232[8 * v233];
              }
            }
            else
            {
              uint64_t v177 = 0;
              int v178 = 1;
              while (v176 != v170)
              {
                if (v177) {
                  BOOL v179 = 0;
                }
                else {
                  BOOL v179 = v176 == (unsigned __int8 *)-2;
                }
                if (v179) {
                  uint64_t v177 = v172;
                }
                unsigned int v180 = v175 + v178++;
                unsigned int v175 = v180 & v174;
                int v172 = &v232[8 * (v180 & v174)];
                uint64_t v176 = *(unsigned __int8 **)v172;
                if (*(void *)v172 == -1) {
                  goto LABEL_365;
                }
              }
            }
          }
          uint64_t v181 = v232 == v171 ? (uint64_t *)((char *)&v233 + 4) : &v233;
          if (v172 == &v232[8 * *(unsigned int *)v181]) {
            goto LABEL_354;
          }
          uint64_t v182 = v236;
          if (v237 == v236)
          {
            unsigned int v183 = &v237[8 * HIDWORD(v238)];
            if (HIDWORD(v238))
            {
              uint64_t v184 = 0;
              while (*(unsigned __int8 **)&v237[v184] != v170)
              {
                v184 += 8;
                if (8 * HIDWORD(v238) == v184) {
                  goto LABEL_339;
                }
              }
              unsigned int v183 = &v237[v184];
            }
LABEL_339:
            uint64_t v182 = v237;
          }
          else
          {
            int v185 = v238 - 1;
            unsigned int v186 = (v238 - 1) & ((v170 >> 4) ^ (v170 >> 9));
            unsigned int v183 = &v237[8 * v186];
            __int32 v187 = *(unsigned __int8 **)v183;
            if (*(void *)v183 == -1)
            {
              unsigned int v188 = 0;
LABEL_370:
              if (v188) {
                unsigned int v183 = v188;
              }
              if (*(unsigned __int8 **)v183 != v170) {
                unsigned int v183 = &v237[8 * v238];
              }
            }
            else
            {
              unsigned int v188 = 0;
              int v189 = 1;
              while (v187 != v170)
              {
                if (v188) {
                  BOOL v190 = 0;
                }
                else {
                  BOOL v190 = v187 == (unsigned __int8 *)-2;
                }
                if (v190) {
                  unsigned int v188 = v183;
                }
                unsigned int v191 = v186 + v189++;
                unsigned int v186 = v191 & v185;
                unsigned int v183 = &v237[8 * (v191 & v185)];
                __int32 v187 = *(unsigned __int8 **)v183;
                if (*(void *)v183 == -1) {
                  goto LABEL_370;
                }
              }
            }
          }
          int v192 = (uint64_t *)((char *)&v238 + 4);
          if (v237 != v182) {
            int v192 = &v238;
          }
          if (v183 == &v237[8 * *(unsigned int *)v192])
          {
LABEL_354:
            uint64_t v291 = (uint64_t)v293;
            uint64_t v292 = 0x100000000;
            llvm::findDbgUsers((uint64_t)&v291, (uint64_t ***)v167);
            llvm::salvageDebugInfoForDbgValues((llvm::CastInst *)v167, (uint64_t *)v291, v292);
            if ((_WORD *)v291 != v293) {
              free((void *)v291);
            }
            llvm::SymbolTableListTraits<llvm::Instruction>::removeNodeFromList();
          }
        }
        int v193 = *(_DWORD *)(v20 + 8);
        uint64_t v291 = v167;
        LODWORD(v292) = v193;
        int v194 = *(_DWORD *)(v20 + 2080);
        if (!v194) {
          break;
        }
        uint64_t v195 = *(void *)(v20 + 2064);
        int v196 = v194 - 1;
        unsigned int v197 = v196 & ((v167 >> 4) ^ (v167 >> 9));
        int v198 = (void *)(v195 + 16 * v197);
        uint64_t v199 = *v198;
        if (*v198 != v167)
        {
          uint64_t v200 = 0;
          int v201 = 1;
          while (v199 != -4096)
          {
            if (v200) {
              BOOL v202 = 0;
            }
            else {
              BOOL v202 = v199 == -8192;
            }
            if (v202) {
              uint64_t v200 = v198;
            }
            unsigned int v203 = v197 + v201++;
            unsigned int v197 = v203 & v196;
            int v198 = (void *)(v195 + 16 * v197);
            uint64_t v199 = *v198;
            if (*v198 == v167) {
              goto LABEL_362;
            }
          }
          if (v200) {
            uint64_t v204 = v200;
          }
          else {
            uint64_t v204 = v198;
          }
          goto LABEL_360;
        }
LABEL_362:
        if (v166 == v165) {
          goto LABEL_376;
        }
      }
      uint64_t v204 = 0;
LABEL_360:
      int v205 = sub_1CBF569E0(v225, (uint64_t)&v291, &v291, v204);
      void *v205 = v291;
      *((_DWORD *)v205 + 2) = v292;
      unint64_t v206 = *(unsigned int *)(v20 + 8);
      if (v206 >= *(unsigned int *)(v20 + 12)) {
        llvm::SmallVectorBase<unsigned int>::grow_pod();
      }
      *(void *)(*(void *)v20 + 8 * v206) = v167;
      ++*(_DWORD *)(v20 + 8);
      goto LABEL_362;
    }
LABEL_376:
    if (v237 != v236) {
      free(v237);
    }
    if (v232 != v231) {
      free(v232);
    }
    MEMORY[0x1D25D9CD0](v241, 8);
    if (v268 != v270) {
      free(v268);
    }
    if (v271 != v273) {
      free(v271);
    }
    if (v245 != v244) {
      free(v245);
    }
    uint64_t v213 = *((void *)v224 + 14);
    if (v213) {
      LOBYTE(v213) = *(char *)(v213 + 13) < 0;
    }
    uint64_t v272 = v219;
    v273[1] = v256;
    v273[2] = v20;
    char v274 = v213;
    uint64_t v275 = v217;
    uint64_t v276 = v218;
    unint64_t v277 = v230;
    uint64_t v278 = v220;
    int v279 = v229;
    uint64_t v280 = v229;
    uint64_t v281 = v230;
    uint64_t v282 = v220;
    uint64_t v283 = v218;
    uint64_t v284 = 0;
    __int16 v285 = 257;
    uint64_t v286 = v221;
    uint64_t v287 = a9;
    uint64_t v288 = a10;
    uint64_t v289 = a12;
    char v290 = 0;
    BOOL v271 = &unk_1F262B6E0;
    v273[0] = dword_1EBCE5A78;
    char v214 = sub_1CC9DFFA4((std::string::size_type)&v271, v207, v208, v209, v210, v211, v212);
    uint64_t wouldInstructionBeTriviallyDead = 1;
  }
  while ((v214 & 1) != 0);
  LOBYTE(v31) = v216 | v32;
LABEL_390:
  llvm::IRBuilderCallbackInserter::~IRBuilderCallbackInserter((llvm::IRBuilderCallbackInserter *)&v264);
  uint64_t wouldInstructionBeTriviallyDead = (uint64_t)v256[0];
  if (v256[0] != v257) {
LABEL_394:
  }
    free((void *)wouldInstructionBeTriviallyDead);
  return v31 & 1;
}

uint64_t llvm::InstructionCombiningPass::runOnFunction(llvm::InstructionCombiningPass *this, llvm::Function *a2)
{
  uint64_t v39 = *MEMORY[0x1E4F143B8];
  if ((llvm::FunctionPass::skipFunction(this, (llvm::LLVMContextImpl ****)a2) & 1) == 0)
  {
    int v4 = (uint64_t *)*((void *)this + 1);
    uint64_t v5 = *v4;
    uint64_t v6 = v4[1];
    if (v5 == v6)
    {
LABEL_19:
      uint64_t v7 = 0;
    }
    else
    {
      while (*(_UNKNOWN **)v5 != &llvm::AAResultsWrapperPass::ID)
      {
        v5 += 16;
        if (v5 == v6) {
          goto LABEL_19;
        }
      }
      uint64_t v7 = *(void *)(v5 + 8);
    }
    (*(void (**)(uint64_t, void *))(*(void *)v7 + 96))(v7, &llvm::AAResultsWrapperPass::ID);
    int v8 = (uint64_t *)*((void *)this + 1);
    uint64_t v9 = *v8;
    uint64_t v10 = v8[1];
    if (v9 == v10)
    {
LABEL_8:
      uint64_t v11 = 0;
    }
    else
    {
      while (*(char **)v9 != llvm::AssumptionCacheTracker::ID)
      {
        v9 += 16;
        if (v9 == v10) {
          goto LABEL_8;
        }
      }
      uint64_t v11 = *(void *)(v9 + 8);
    }
    uint64_t v12 = (llvm::AssumptionCacheTracker *)(*(uint64_t (**)(uint64_t, char *))(*(void *)v11 + 96))(v11, llvm::AssumptionCacheTracker::ID);
    llvm::AssumptionCacheTracker::getAssumptionCache(v12, a2);
    uint64_t v13 = (uint64_t *)*((void *)this + 1);
    uint64_t v14 = *v13;
    uint64_t v15 = v13[1];
    if (v14 == v15)
    {
LABEL_13:
      uint64_t v16 = 0;
    }
    else
    {
      while (*(char **)v14 != llvm::TargetLibraryInfoWrapperPass::ID)
      {
        v14 += 16;
        if (v14 == v15) {
          goto LABEL_13;
        }
      }
      uint64_t v16 = *(void *)(v14 + 8);
    }
    uint64_t v17 = (*(uint64_t (**)(uint64_t, char *))(*(void *)v16 + 96))(v16, llvm::TargetLibraryInfoWrapperPass::ID);
    uint64_t v18 = v17 + 32;
    if (!*(unsigned char *)(v17 + 232))
    {
      uint64_t v20 = *((void *)a2 + 5) + 216;
      __int16 v23 = 260;
      v22[0] = v20;
      llvm::Triple::Triple((llvm::Triple *)__p, (const llvm::Twine *)v22);
      uint64_t v33 = 0;
      uint64_t v34 = 0;
      int v35 = 0;
      long long v36 = 0u;
      long long v37 = 0u;
      long long v38 = 0u;
      *(void *)&long long v21 = -1;
      *((void *)&v21 + 1) = -1;
      *(_OWORD *)__src = v21;
      long long v27 = v21;
      long long v28 = v21;
      long long v29 = v21;
      long long v30 = v21;
      long long v31 = v21;
      *(_OWORD *)char v32 = v21;
      *(void *)&v32[13] = -1;
      sub_1CC153974((uint64_t)__src, (int *)__p);
      sub_1CD4D04B8(v18, (uint64_t)__src);
      sub_1CD4CFA4C((uint64_t *)__src);
      if (v25 < 0) {
        operator delete(__p[0]);
      }
    }
    sub_1CC1569E8(__src, v18);
  }
  return 0;
}

void llvm::initializeInstructionCombiningPassPass(llvm *this, llvm::PassRegistry *a2)
{
  uint64_t v2 = this;
  if (atomic_load_explicit((atomic_ullong *volatile)&qword_1EBCE57A0, memory_order_acquire) != -1)
  {
    v4[0] = sub_1CC9E6CE4;
    v4[1] = &v2;
    int64x2_t v3 = v4;
    std::__call_once(&qword_1EBCE57A0, &v3, (void (__cdecl *)(void *))sub_1CB848390);
  }
}

llvm::InstructionCombiningPass *llvm::InstructionCombiningPass::InstructionCombiningPass(llvm::InstructionCombiningPass *this, int a2)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = &llvm::InstructionCombiningPass::ID;
  *((_DWORD *)this + 6) = 2;
  *(void *)this = &unk_1F262B4D8;
  *((void *)this + 4) = (char *)this + 48;
  *((void *)this + 5) = 0x10000000000;
  *((_OWORD *)this + 131) = 0u;
  *((_DWORD *)this + 528) = 0;
  *((void *)this + 265) = 1;
  uint64_t v3 = 2128;
  int64x2_t v4 = vdupq_n_s64(0xFFFFFFFFFFFFF000);
  do
  {
    *(int64x2_t *)((char *)this + v3) = v4;
    v3 += 16;
  }
  while (v3 != 2256);
  *((void *)this + 282) = (char *)this + 2272;
  *((void *)this + 283) = 0x1000000000;
  *((_DWORD *)this + 600) = a2;
  atomic_ullong PassRegistry = llvm::PassRegistry::getPassRegistry(this);
  if (atomic_load_explicit((atomic_ullong *volatile)&qword_1EBCE57A0, memory_order_acquire) != -1)
  {
    v8[0] = sub_1CC9E6CE4;
    v8[1] = &PassRegistry;
    uint64_t v7 = v8;
    std::__call_once(&qword_1EBCE57A0, &v7, (void (__cdecl *)(void *))sub_1CB848390);
  }
  return this;
}

void sub_1CC9E6CE4(llvm *a1)
{
  llvm::initializeAssumptionCacheTrackerPass((uint64_t)a1);
  llvm::initializeTargetLibraryInfoWrapperPassPass((uint64_t)a1);
  llvm::initializeTargetTransformInfoWrapperPassPass((uint64_t)a1);
  llvm::initializeDominatorTreeWrapperPassPass((uint64_t)a1);
  llvm::initializeAAResultsWrapperPassPass(a1, v2);
  llvm::initializeGlobalsAAWrapperPassPass(a1, v3);
  llvm::initializeOptimizationRemarkEmitterWrapperPassPass(a1, v4);
  llvm::initializeLazyBlockFrequencyInfoPassPass(a1, v5);
  llvm::initializeProfileSummaryInfoWrapperPassPass(a1, v6);
  operator new();
}

void llvm::initializeInstCombine(llvm *this, llvm::PassRegistry *a2)
{
  uint64_t v2 = this;
  if (atomic_load_explicit((atomic_ullong *volatile)&qword_1EBCE57A0, memory_order_acquire) != -1)
  {
    v4[0] = sub_1CC9E6CE4;
    v4[1] = &v2;
    uint64_t v3 = v4;
    std::__call_once(&qword_1EBCE57A0, &v3, (void (__cdecl *)(void *))sub_1CB848390);
  }
}

void LLVMInitializeInstCombine(uint64_t a1)
{
  uint64_t v1 = a1;
  if (atomic_load_explicit((atomic_ullong *volatile)&qword_1EBCE57A0, memory_order_acquire) != -1)
  {
    v3[0] = sub_1CC9E6CE4;
    v3[1] = &v1;
    uint64_t v2 = v3;
    std::__call_once(&qword_1EBCE57A0, &v2, (void (__cdecl *)(void *))sub_1CB848390);
  }
}

void llvm::createInstructionCombiningPass(llvm *this)
{
}

{
  operator new();
}

void LLVMAddInstructionCombiningPass()
{
}

uint64_t sub_1CC9E6F68(unsigned int *a1, uint64_t *a2)
{
  uint64_t v2 = a1[3];
  if (v2 == -1) {
    sub_1CD0A89A8(0xFFFFFFFFuLL);
  }
  unint64_t v5 = (2 * v2) | 1;
  if (v5 >= 0xFFFFFFFF) {
    uint64_t v6 = 0xFFFFFFFFLL;
  }
  else {
    uint64_t v6 = v5;
  }
  uint64_t v7 = (unint64_t *)malloc_type_malloc(24 * v6, 0x4065EBACuLL);
  if (!v7) {
    llvm::report_bad_alloc_error((llvm *)"Allocation failed", (const char *)1);
  }
  int v8 = v7;
  uint64_t v9 = (llvm::ValueHandleBase *)&v7[3 * a1[2]];
  uint64_t v10 = *a2;
  *(void *)uint64_t v9 = 6;
  *((void *)v9 + 1) = 0;
  *((void *)v9 + 2) = v10;
  if (v10 != -8192 && v10 != -4096 && v10) {
    llvm::ValueHandleBase::AddToUseList(v9);
  }
  sub_1CC26203C(a1, v8);
  if (*(unsigned int **)a1 != a1 + 4) {
    free(*(void **)a1);
  }
  *(void *)a1 = v8;
  unsigned int v11 = a1[2] + 1;
  a1[2] = v11;
  a1[3] = v6;
  return (uint64_t)&v8[3 * v11 - 3];
}

BOOL sub_1CC9E7058(void *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 24);
  if (v2) {
    BOOL v3 = *(unsigned __int8 *)(v2 + 16) >= 0x1Cu;
  }
  else {
    BOOL v3 = 0;
  }
  return !v3 || *(void *)(v2 + 40) != *a1;
}

unint64_t sub_1CC9E7088(unint64_t result, uint64_t *a2, uint64_t a3, char a4)
{
  uint64_t v9 = (uint64_t *)result;
  while (2)
  {
    uint64_t v10 = a2 - 1;
    unsigned int v11 = v9;
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v9 = v11;
          uint64_t v12 = (char *)a2 - (char *)v11;
          uint64_t v13 = a2 - v11;
          if (v5 || !v4)
          {
            switch(v13)
            {
              case 0:
              case 1:
                return result;
              case 2:
                uint64_t v91 = *(a2 - 1);
                uint64_t v92 = *v11;
                uint64_t v93 = *(void *)(*v11 + 40);
                int v94 = *(__int16 *)(v93 + 18);
                if ((v94 & 0x80000000) == 0)
                {
                  uint64_t v209 = *(void *)(v93 + 48);
                  if (v209 != v93 + 40)
                  {
                    int v210 = 0;
                    do
                    {
                      uint64_t v211 = v209 - 24;
                      if (!v209) {
                        uint64_t v211 = 0;
                      }
                      *(_DWORD *)(v211 + 56) = v210++;
                      uint64_t v209 = *(void *)(v209 + 8);
                    }
                    while (v209 != v93 + 40);
                  }
                  *(_WORD *)(v93 + 18) = v94 | 0x8000;
                }
                if (*(_DWORD *)(v92 + 56) < *(_DWORD *)(v91 + 56))
                {
                  *unsigned int v11 = v91;
                  *(a2 - 1) = v92;
                }
                break;
              case 3:
                double result = (unint64_t)sub_1CC9E7F68(v11, v11 + 1, a2 - 1);
                break;
              case 4:
                double result = (unint64_t)sub_1CC9E854C(v11, v11 + 1, v11 + 2, a2 - 1);
                break;
              case 5:
                int v95 = v11 + 1;
                unsigned int v96 = v11 + 2;
                int v97 = v11 + 3;
                double result = (unint64_t)sub_1CC9E854C(v11, v11 + 1, v11 + 2, v11 + 3);
                uint64_t v98 = *(a2 - 1);
                uint64_t v99 = v11[3];
                uint64_t v100 = *(void *)(v99 + 40);
                int v101 = *(__int16 *)(v100 + 18);
                if ((v101 & 0x80000000) == 0)
                {
                  uint64_t v212 = *(void *)(v100 + 48);
                  if (v212 != v100 + 40)
                  {
                    int v213 = 0;
                    do
                    {
                      uint64_t v214 = v212 - 24;
                      if (!v212) {
                        uint64_t v214 = 0;
                      }
                      *(_DWORD *)(v214 + 56) = v213++;
                      uint64_t v212 = *(void *)(v212 + 8);
                    }
                    while (v212 != v100 + 40);
                  }
                  *(_WORD *)(v100 + 18) = v101 | 0x8000;
                }
                if (*(_DWORD *)(v99 + 56) < *(_DWORD *)(v98 + 56))
                {
                  *int v97 = v98;
                  *(a2 - 1) = v99;
                  uint64_t v102 = *v97;
                  uint64_t v103 = *v96;
                  uint64_t v104 = *(void *)(*v96 + 40);
                  int v105 = *(__int16 *)(v104 + 18);
                  if ((v105 & 0x80000000) == 0)
                  {
                    uint64_t v215 = *(void *)(v104 + 48);
                    if (v215 != v104 + 40)
                    {
                      int v216 = 0;
                      do
                      {
                        uint64_t v217 = v215 - 24;
                        if (!v215) {
                          uint64_t v217 = 0;
                        }
                        *(_DWORD *)(v217 + 56) = v216++;
                        uint64_t v215 = *(void *)(v215 + 8);
                      }
                      while (v215 != v104 + 40);
                    }
                    *(_WORD *)(v104 + 18) = v105 | 0x8000;
                  }
                  unsigned int v106 = *(_DWORD *)(v102 + 56);
                  if (*(_DWORD *)(v103 + 56) < v106)
                  {
                    *unsigned int v96 = v102;
                    *int v97 = v103;
                    uint64_t v107 = *v95;
                    uint64_t v108 = *(void *)(*v95 + 40);
                    int v109 = *(__int16 *)(v108 + 18);
                    if ((v109 & 0x80000000) == 0)
                    {
                      uint64_t v218 = *(void *)(v108 + 48);
                      if (v218 != v108 + 40)
                      {
                        int v219 = 0;
                        do
                        {
                          uint64_t v220 = v218 - 24;
                          if (!v218) {
                            uint64_t v220 = 0;
                          }
                          *(_DWORD *)(v220 + 56) = v219++;
                          uint64_t v218 = *(void *)(v218 + 8);
                        }
                        while (v218 != v108 + 40);
                        unsigned int v106 = *(_DWORD *)(v102 + 56);
                      }
                      *(_WORD *)(v108 + 18) = v109 | 0x8000;
                    }
                    if (*(_DWORD *)(v107 + 56) < v106)
                    {
                      v11[1] = v102;
                      v11[2] = v107;
                      uint64_t v110 = *v11;
                      uint64_t v111 = *(void *)(*v11 + 40);
                      int v112 = *(__int16 *)(v111 + 18);
                      if ((v112 & 0x80000000) == 0)
                      {
                        uint64_t v221 = *(void *)(v111 + 48);
                        if (v221 != v111 + 40)
                        {
                          int v222 = 0;
                          do
                          {
                            uint64_t v223 = v221 - 24;
                            if (!v221) {
                              uint64_t v223 = 0;
                            }
                            *(_DWORD *)(v223 + 56) = v222++;
                            uint64_t v221 = *(void *)(v221 + 8);
                          }
                          while (v221 != v111 + 40);
                          unsigned int v106 = *(_DWORD *)(v102 + 56);
                        }
                        *(_WORD *)(v111 + 18) = v112 | 0x8000;
                      }
                      if (*(_DWORD *)(v110 + 56) < v106)
                      {
                        *unsigned int v11 = v102;
                        v11[1] = v110;
                      }
                    }
                  }
                }
                break;
              default:
                JUMPOUT(0);
            }
            return result;
          }
          if (v12 <= 191)
          {
            uint64_t v113 = v11 + 1;
            BOOL v115 = v11 == a2 || v113 == a2;
            if (a4)
            {
              if (!v115)
              {
                BOOL v116 = v11;
                do
                {
                  unsigned int v117 = v113;
                  uint64_t v119 = *v116;
                  uint64_t v118 = v116[1];
                  uint64_t v120 = *(void *)(*v116 + 40);
                  int v121 = *(__int16 *)(v120 + 18);
                  if ((v121 & 0x80000000) == 0)
                  {
                    uint64_t v129 = *(void *)(v120 + 48);
                    if (v129 != v120 + 40)
                    {
                      int v130 = 0;
                      do
                      {
                        uint64_t v131 = v129 - 24;
                        if (!v129) {
                          uint64_t v131 = 0;
                        }
                        *(_DWORD *)(v131 + 56) = v130++;
                        uint64_t v129 = *(void *)(v129 + 8);
                      }
                      while (v129 != v120 + 40);
                    }
                    *(_WORD *)(v120 + 18) = v121 | 0x8000;
                  }
                  unsigned int v122 = *(_DWORD *)(v118 + 56);
                  if (*(_DWORD *)(v119 + 56) < v122)
                  {
                    uint64_t v123 = v117;
                    while (1)
                    {
                      *uint64_t v123 = v119;
                      if (v116 == v11) {
                        break;
                      }
                      uint64_t v123 = v116;
                      uint64_t v124 = *--v116;
                      uint64_t v119 = v124;
                      uint64_t v125 = *(void *)(v124 + 40);
                      int v126 = *(__int16 *)(v125 + 18);
                      if ((v126 & 0x80000000) == 0)
                      {
                        uint64_t v127 = *(void *)(v125 + 48);
                        if (v127 != v125 + 40)
                        {
                          int v128 = 0;
                          do
                          {
                            double result = v127 - 24;
                            if (!v127) {
                              double result = 0;
                            }
                            *(_DWORD *)(result + 56) = v128++;
                            uint64_t v127 = *(void *)(v127 + 8);
                          }
                          while (v127 != v125 + 40);
                          unsigned int v122 = *(_DWORD *)(v118 + 56);
                        }
                        *(_WORD *)(v125 + 18) = v126 | 0x8000;
                      }
                      if (*(_DWORD *)(v119 + 56) >= v122) {
                        goto LABEL_171;
                      }
                    }
                    uint64_t v123 = v11;
LABEL_171:
                    *uint64_t v123 = v118;
                  }
                  uint64_t v113 = v117 + 1;
                  BOOL v116 = v117;
                }
                while (v117 + 1 != a2);
              }
            }
            else if (!v115)
            {
              do
              {
                BOOL v165 = v113;
                uint64_t v167 = *v9;
                uint64_t v166 = v9[1];
                uint64_t v168 = *(void *)(*v9 + 40);
                int v169 = *(__int16 *)(v168 + 18);
                if ((v169 & 0x80000000) == 0)
                {
                  uint64_t v178 = *(void *)(v168 + 48);
                  if (v178 != v168 + 40)
                  {
                    int v179 = 0;
                    do
                    {
                      uint64_t v180 = v178 - 24;
                      if (!v178) {
                        uint64_t v180 = 0;
                      }
                      *(_DWORD *)(v180 + 56) = v179++;
                      uint64_t v178 = *(void *)(v178 + 8);
                    }
                    while (v178 != v168 + 40);
                  }
                  *(_WORD *)(v168 + 18) = v169 | 0x8000;
                }
                unsigned int v170 = *(_DWORD *)(v166 + 56);
                if (*(_DWORD *)(v167 + 56) < v170)
                {
                  unint64_t v171 = v165;
                  do
                  {
                    uint64_t *v171 = v167;
                    unint64_t v171 = v9;
                    uint64_t v172 = *--v9;
                    uint64_t v167 = v172;
                    uint64_t v173 = *(void *)(v172 + 40);
                    int v174 = *(__int16 *)(v173 + 18);
                    if ((v174 & 0x80000000) == 0)
                    {
                      uint64_t v175 = *(void *)(v173 + 48);
                      if (v175 != v173 + 40)
                      {
                        int v176 = 0;
                        do
                        {
                          uint64_t v177 = v175 - 24;
                          if (!v175) {
                            uint64_t v177 = 0;
                          }
                          *(_DWORD *)(v177 + 56) = v176++;
                          uint64_t v175 = *(void *)(v175 + 8);
                        }
                        while (v175 != v173 + 40);
                        unsigned int v170 = *(_DWORD *)(v166 + 56);
                      }
                      *(_WORD *)(v173 + 18) = v174 | 0x8000;
                    }
                  }
                  while (*(_DWORD *)(v167 + 56) < v170);
                  uint64_t *v171 = v166;
                }
                uint64_t v113 = v165 + 1;
                uint64_t v9 = v165;
              }
              while (v165 + 1 != a2);
            }
            return result;
          }
          if (!a3)
          {
            if (v11 != a2)
            {
              int64_t v132 = (unint64_t)(v13 - 2) >> 1;
              int64_t v133 = v132;
              do
              {
                int64_t v134 = v133;
                if (v132 >= v133)
                {
                  uint64_t v135 = (2 * v133) | 1;
                  int v136 = &v11[v135];
                  if (2 * v134 + 2 < v13)
                  {
                    uint64_t v137 = *v136;
                    uint64_t v138 = v136[1];
                    uint64_t v139 = *(void *)(v138 + 40);
                    double result = *(__int16 *)(v139 + 18);
                    if ((result & 0x80000000) == 0)
                    {
                      uint64_t v162 = *(void *)(v139 + 48);
                      if (v162 != v139 + 40)
                      {
                        int v163 = 0;
                        do
                        {
                          uint64_t v164 = v162 - 24;
                          if (!v162) {
                            uint64_t v164 = 0;
                          }
                          *(_DWORD *)(v164 + 56) = v163++;
                          uint64_t v162 = *(void *)(v162 + 8);
                        }
                        while (v162 != v139 + 40);
                      }
                      double result = result | 0x8000;
                      *(_WORD *)(v139 + 18) = result;
                    }
                    if (*(_DWORD *)(v138 + 56) < *(_DWORD *)(v137 + 56))
                    {
                      ++v136;
                      uint64_t v135 = 2 * v134 + 2;
                    }
                  }
                  uint64_t v140 = &v11[v134];
                  uint64_t v141 = *v136;
                  uint64_t v142 = *v140;
                  uint64_t v143 = *(void *)(*v140 + 40);
                  int v144 = *(__int16 *)(v143 + 18);
                  if ((v144 & 0x80000000) == 0)
                  {
                    double result = v143 + 40;
                    unsigned int v159 = *(uint64_t **)(v143 + 48);
                    if (v159 != (uint64_t *)(v143 + 40))
                    {
                      int v160 = 0;
                      do
                      {
                        uint64_t v161 = v159 - 3;
                        if (!v159) {
                          uint64_t v161 = 0;
                        }
                        *((_DWORD *)v161 + 14) = v160++;
                        unsigned int v159 = (uint64_t *)v159[1];
                      }
                      while (v159 != (uint64_t *)result);
                    }
                    *(_WORD *)(v143 + 18) = v144 | 0x8000;
                  }
                  if (*(_DWORD *)(v142 + 56) >= *(_DWORD *)(v141 + 56))
                  {
                    do
                    {
                      uint64_t v145 = v136;
                      *uint64_t v140 = v141;
                      if (v132 < v135) {
                        break;
                      }
                      uint64_t v146 = (2 * v135) | 1;
                      int v136 = &v11[v146];
                      uint64_t v135 = 2 * v135 + 2;
                      if (v135 < v13)
                      {
                        uint64_t v147 = *v136;
                        uint64_t v148 = v136[1];
                        uint64_t v149 = *(void *)(v148 + 40);
                        int v150 = *(__int16 *)(v149 + 18);
                        if ((v150 & 0x80000000) == 0)
                        {
                          uint64_t v156 = *(void *)(v149 + 48);
                          if (v156 != v149 + 40)
                          {
                            int v157 = 0;
                            do
                            {
                              uint64_t v158 = v156 - 24;
                              if (!v156) {
                                uint64_t v158 = 0;
                              }
                              *(_DWORD *)(v158 + 56) = v157++;
                              uint64_t v156 = *(void *)(v156 + 8);
                            }
                            while (v156 != v149 + 40);
                          }
                          *(_WORD *)(v149 + 18) = v150 | 0x8000;
                        }
                        if (*(_DWORD *)(v148 + 56) >= *(_DWORD *)(v147 + 56)) {
                          uint64_t v135 = v146;
                        }
                        else {
                          ++v136;
                        }
                      }
                      else
                      {
                        uint64_t v135 = v146;
                      }
                      uint64_t v141 = *v136;
                      uint64_t v151 = *(void *)(v142 + 40);
                      int v152 = *(__int16 *)(v151 + 18);
                      if ((v152 & 0x80000000) == 0)
                      {
                        uint64_t v153 = *(void *)(v151 + 48);
                        if (v153 != v151 + 40)
                        {
                          int v154 = 0;
                          do
                          {
                            uint64_t v155 = v153 - 24;
                            if (!v153) {
                              uint64_t v155 = 0;
                            }
                            *(_DWORD *)(v155 + 56) = v154++;
                            uint64_t v153 = *(void *)(v153 + 8);
                          }
                          while (v153 != v151 + 40);
                        }
                        *(_WORD *)(v151 + 18) = v152 | 0x8000;
                      }
                      double result = *(unsigned int *)(v141 + 56);
                      uint64_t v140 = v145;
                    }
                    while (*(_DWORD *)(v142 + 56) >= result);
                    uint64_t *v145 = v142;
                  }
                }
                int64_t v133 = v134 - 1;
              }
              while (v134);
              do
              {
                uint64_t v183 = 0;
                uint64_t v184 = *v11;
                int v185 = v11;
                do
                {
                  unsigned int v186 = &v185[v183 + 1];
                  uint64_t v187 = (2 * v183) | 1;
                  uint64_t v188 = 2 * v183 + 2;
                  if (v188 < v13)
                  {
                    uint64_t v189 = *v186;
                    uint64_t v190 = v186[1];
                    double result = *(void *)(v190 + 40);
                    int v191 = *(__int16 *)(result + 18);
                    if ((v191 & 0x80000000) == 0)
                    {
                      int v192 = *(uint64_t **)(result + 48);
                      if (v192 != (uint64_t *)(result + 40))
                      {
                        int v193 = 0;
                        do
                        {
                          int v194 = v192 - 3;
                          if (!v192) {
                            int v194 = 0;
                          }
                          *((_DWORD *)v194 + 14) = v193++;
                          int v192 = (uint64_t *)v192[1];
                        }
                        while (v192 != (uint64_t *)(result + 40));
                      }
                      *(_WORD *)(result + 18) = v191 | 0x8000;
                    }
                    if (*(_DWORD *)(v190 + 56) < *(_DWORD *)(v189 + 56))
                    {
                      ++v186;
                      uint64_t v187 = v188;
                    }
                  }
                  *int v185 = *v186;
                  int v185 = v186;
                  uint64_t v183 = v187;
                }
                while (v187 <= (uint64_t)((unint64_t)(v13 - 2) >> 1));
                if (v186 == --a2)
                {
                  *unsigned int v186 = v184;
                }
                else
                {
                  *unsigned int v186 = *a2;
                  *a2 = v184;
                  uint64_t v195 = (char *)v186 - (char *)v11 + 8;
                  if (v195 >= 9)
                  {
                    unint64_t v196 = (((unint64_t)v195 >> 3) - 2) >> 1;
                    unsigned int v197 = &v11[v196];
                    uint64_t v198 = *v197;
                    uint64_t v199 = *v186;
                    uint64_t v200 = *(void *)(*v186 + 40);
                    int v201 = *(__int16 *)(v200 + 18);
                    if ((v201 & 0x80000000) == 0)
                    {
                      uint64_t v181 = *(void *)(v200 + 48);
                      if (v181 != v200 + 40)
                      {
                        LODWORD(result) = 0;
                        do
                        {
                          uint64_t v182 = v181 - 24;
                          if (!v181) {
                            uint64_t v182 = 0;
                          }
                          *(_DWORD *)(v182 + 56) = result;
                          double result = (result + 1);
                          uint64_t v181 = *(void *)(v181 + 8);
                        }
                        while (v181 != v200 + 40);
                      }
                      *(_WORD *)(v200 + 18) = v201 | 0x8000;
                    }
                    unsigned int v202 = *(_DWORD *)(v199 + 56);
                    if (v202 < *(_DWORD *)(v198 + 56))
                    {
                      do
                      {
                        unsigned int v203 = v197;
                        *unsigned int v186 = v198;
                        if (!v196) {
                          break;
                        }
                        unint64_t v196 = (v196 - 1) >> 1;
                        unsigned int v197 = &v11[v196];
                        uint64_t v198 = *v197;
                        uint64_t v204 = *(void *)(v199 + 40);
                        int v205 = *(__int16 *)(v204 + 18);
                        if ((v205 & 0x80000000) == 0)
                        {
                          double result = *(void *)(v204 + 48);
                          if (result != v204 + 40)
                          {
                            int v206 = 0;
                            do
                            {
                              uint64_t v207 = (uint64_t *)(result - 24);
                              if (!result) {
                                uint64_t v207 = 0;
                              }
                              *((_DWORD *)v207 + 14) = v206++;
                              double result = *(void *)(result + 8);
                            }
                            while (result != v204 + 40);
                            unsigned int v202 = *(_DWORD *)(v199 + 56);
                          }
                          *(_WORD *)(v204 + 18) = v205 | 0x8000;
                        }
                        unsigned int v186 = v203;
                      }
                      while (v202 < *(_DWORD *)(v198 + 56));
                      *unsigned int v203 = v199;
                    }
                  }
                }
              }
              while (v13-- > 2);
            }
            return result;
          }
          unint64_t v14 = (unint64_t)v13 >> 1;
          uint64_t v15 = &v11[(unint64_t)v13 >> 1];
          if ((unint64_t)v12 >= 0x401)
          {
            sub_1CC9E7F68(v9, &v9[(unint64_t)v13 >> 1], a2 - 1);
            sub_1CC9E7F68(v9 + 1, v15 - 1, a2 - 2);
            sub_1CC9E7F68(v9 + 2, &v9[v14 + 1], a2 - 3);
            double result = (unint64_t)sub_1CC9E7F68(v15 - 1, v15, &v9[v14 + 1]);
            uint64_t v16 = *v9;
            *uint64_t v9 = *v15;
            *uint64_t v15 = v16;
          }
          else
          {
            double result = (unint64_t)sub_1CC9E7F68(&v9[(unint64_t)v13 >> 1], v9, a2 - 1);
          }
          --a3;
          uint64_t v17 = *v9;
          if (a4)
          {
            uint64_t v18 = *(void *)(v17 + 40);
            LOWORD(v19) = *(_WORD *)(v18 + 18);
            break;
          }
          uint64_t v20 = *(v9 - 1);
          uint64_t v18 = *(void *)(v17 + 40);
          int v19 = *(__int16 *)(v18 + 18);
          if ((v19 & 0x80000000) == 0)
          {
            uint64_t v46 = *(void *)(v18 + 48);
            if (v46 != v18 + 40)
            {
              int v47 = 0;
              do
              {
                uint64_t v48 = v46 - 24;
                if (!v46) {
                  uint64_t v48 = 0;
                }
                *(_DWORD *)(v48 + 56) = v47++;
                uint64_t v46 = *(void *)(v46 + 8);
              }
              while (v46 != v18 + 40);
            }
            LOWORD(v19) = v19 | 0x8000;
            *(_WORD *)(v18 + 18) = v19;
          }
          unsigned int v21 = *(_DWORD *)(v17 + 56);
          if (v21 < *(_DWORD *)(v20 + 56)) {
            break;
          }
          uint64_t v49 = *v10;
          uint64_t v50 = *(void *)(*v10 + 40);
          int v51 = *(__int16 *)(v50 + 18);
          if ((v51 & 0x80000000) == 0)
          {
            uint64_t v88 = *(void *)(v50 + 48);
            if (v88 != v50 + 40)
            {
              int v89 = 0;
              do
              {
                uint64_t v90 = v88 - 24;
                if (!v88) {
                  uint64_t v90 = 0;
                }
                *(_DWORD *)(v90 + 56) = v89++;
                uint64_t v88 = *(void *)(v88 + 8);
              }
              while (v88 != v50 + 40);
              unsigned int v21 = *(_DWORD *)(v17 + 56);
            }
            *(_WORD *)(v50 + 18) = v51 | 0x8000;
          }
          unsigned int v11 = v9;
          if (*(_DWORD *)(v49 + 56) >= v21)
          {
            do
            {
              if (++v11 >= a2) {
                break;
              }
              uint64_t v59 = *v11;
              uint64_t v60 = *(void *)(*v11 + 40);
              int v61 = *(__int16 *)(v60 + 18);
              if ((v61 & 0x80000000) == 0)
              {
                uint64_t v62 = *(void *)(v60 + 48);
                if (v62 != v60 + 40)
                {
                  int v63 = 0;
                  do
                  {
                    uint64_t v64 = v62 - 24;
                    if (!v62) {
                      uint64_t v64 = 0;
                    }
                    *(_DWORD *)(v64 + 56) = v63++;
                    uint64_t v62 = *(void *)(v62 + 8);
                  }
                  while (v62 != v60 + 40);
                  unsigned int v21 = *(_DWORD *)(v17 + 56);
                }
                *(_WORD *)(v60 + 18) = v61 | 0x8000;
              }
            }
            while (*(_DWORD *)(v59 + 56) >= v21);
          }
          else
          {
            do
            {
              uint64_t v53 = v11[1];
              ++v11;
              uint64_t v52 = v53;
              uint64_t v54 = *(void *)(v53 + 40);
              int v55 = *(__int16 *)(v54 + 18);
              if ((v55 & 0x80000000) == 0)
              {
                uint64_t v56 = *(void *)(v54 + 48);
                if (v56 != v54 + 40)
                {
                  int v57 = 0;
                  do
                  {
                    uint64_t v58 = v56 - 24;
                    if (!v56) {
                      uint64_t v58 = 0;
                    }
                    *(_DWORD *)(v58 + 56) = v57++;
                    uint64_t v56 = *(void *)(v56 + 8);
                  }
                  while (v56 != v54 + 40);
                  unsigned int v21 = *(_DWORD *)(v17 + 56);
                }
                *(_WORD *)(v54 + 18) = v55 | 0x8000;
              }
            }
            while (*(_DWORD *)(v52 + 56) >= v21);
          }
          unsigned int v65 = a2;
          if (v11 < a2)
          {
            do
            {
              uint64_t v67 = *--v65;
              uint64_t v66 = v67;
              uint64_t v68 = *(void *)(v67 + 40);
              int v69 = *(__int16 *)(v68 + 18);
              if ((v69 & 0x80000000) == 0)
              {
                uint64_t v70 = *(void *)(v68 + 48);
                if (v70 != v68 + 40)
                {
                  int v71 = 0;
                  do
                  {
                    uint64_t v72 = v70 - 24;
                    if (!v70) {
                      uint64_t v72 = 0;
                    }
                    *(_DWORD *)(v72 + 56) = v71++;
                    uint64_t v70 = *(void *)(v70 + 8);
                  }
                  while (v70 != v68 + 40);
                  unsigned int v21 = *(_DWORD *)(v17 + 56);
                }
                *(_WORD *)(v68 + 18) = v69 | 0x8000;
              }
            }
            while (*(_DWORD *)(v66 + 56) < v21);
          }
          if (v11 < v65)
          {
            uint64_t v73 = *v11;
            uint64_t v74 = *v65;
            do
            {
              *unsigned int v11 = v74;
              uint64_t *v65 = v73;
              do
              {
                uint64_t v75 = v11[1];
                ++v11;
                uint64_t v73 = v75;
                uint64_t v76 = *(void *)(v75 + 40);
                int v77 = *(__int16 *)(v76 + 18);
                if ((v77 & 0x80000000) == 0)
                {
                  uint64_t v78 = *(void *)(v76 + 48);
                  if (v78 != v76 + 40)
                  {
                    int v79 = 0;
                    do
                    {
                      uint64_t v80 = v78 - 24;
                      if (!v78) {
                        uint64_t v80 = 0;
                      }
                      *(_DWORD *)(v80 + 56) = v79++;
                      uint64_t v78 = *(void *)(v78 + 8);
                    }
                    while (v78 != v76 + 40);
                    unsigned int v21 = *(_DWORD *)(v17 + 56);
                  }
                  *(_WORD *)(v76 + 18) = v77 | 0x8000;
                }
              }
              while (*(_DWORD *)(v73 + 56) >= v21);
              do
              {
                uint64_t v84 = *--v65;
                uint64_t v74 = v84;
                uint64_t v85 = *(void *)(v84 + 40);
                int v86 = *(__int16 *)(v85 + 18);
                if ((v86 & 0x80000000) == 0)
                {
                  uint64_t v81 = *(void *)(v85 + 48);
                  if (v81 != v85 + 40)
                  {
                    int v82 = 0;
                    do
                    {
                      uint64_t v83 = v81 - 24;
                      if (!v81) {
                        uint64_t v83 = 0;
                      }
                      *(_DWORD *)(v83 + 56) = v82++;
                      uint64_t v81 = *(void *)(v81 + 8);
                    }
                    while (v81 != v85 + 40);
                    unsigned int v21 = *(_DWORD *)(v17 + 56);
                  }
                  *(_WORD *)(v85 + 18) = v86 | 0x8000;
                }
              }
              while (*(_DWORD *)(v74 + 56) < v21);
            }
            while (v11 < v65);
          }
          uint64_t v87 = v11 - 1;
          BOOL v4 = v11 - 1 >= v9;
          BOOL v5 = v11 - 1 == v9;
          if (v11 - 1 != v9) {
            *uint64_t v9 = *v87;
          }
          a4 = 0;
          *uint64_t v87 = v17;
        }
        uint64_t v22 = v18 + 40;
        __int16 v23 = v9;
        do
        {
          uint64_t v24 = v23;
          uint64_t v26 = v23[1];
          ++v23;
          uint64_t v25 = v26;
          if ((v19 & 0x8000) == 0)
          {
            uint64_t v28 = *(void *)(v18 + 48);
            if (v28 != v22)
            {
              int v29 = 0;
              do
              {
                uint64_t v30 = v28 - 24;
                if (!v28) {
                  uint64_t v30 = 0;
                }
                *(_DWORD *)(v30 + 56) = v29++;
                uint64_t v28 = *(void *)(v28 + 8);
              }
              while (v28 != v22);
            }
            LOWORD(v19) = v19 | 0x8000;
            *(_WORD *)(v18 + 18) = v19;
          }
          unsigned int v27 = *(_DWORD *)(v17 + 56);
        }
        while (v27 < *(_DWORD *)(v25 + 56));
        long long v31 = a2;
        if (v24 == v9)
        {
          long long v31 = a2;
          do
          {
            if (v23 >= v31) {
              break;
            }
            uint64_t v33 = *--v31;
          }
          while (v27 >= *(_DWORD *)(v33 + 56));
        }
        else
        {
          do
            uint64_t v32 = *--v31;
          while (v27 >= *(_DWORD *)(v32 + 56));
        }
        if (v23 >= v31)
        {
          unsigned int v11 = v23;
        }
        else
        {
          uint64_t v34 = *v31;
          unsigned int v11 = v23;
          int v35 = v31;
          do
          {
            *unsigned int v11 = v34;
            *int v35 = v25;
            uint64_t v36 = *(void *)(v17 + 40);
            __int16 v37 = *(_WORD *)(v36 + 18);
            uint64_t v38 = v36 + 40;
            do
            {
              uint64_t v39 = v11[1];
              ++v11;
              uint64_t v25 = v39;
              if ((v37 & 0x8000) == 0)
              {
                uint64_t v40 = *(void *)(v36 + 48);
                if (v40 != v38)
                {
                  int v41 = 0;
                  do
                  {
                    uint64_t v42 = v40 - 24;
                    if (!v40) {
                      uint64_t v42 = 0;
                    }
                    *(_DWORD *)(v42 + 56) = v41++;
                    uint64_t v40 = *(void *)(v40 + 8);
                  }
                  while (v40 != v38);
                  unsigned int v27 = *(_DWORD *)(v17 + 56);
                }
                v37 |= 0x8000u;
                *(_WORD *)(v36 + 18) = v37;
              }
            }
            while (v27 < *(_DWORD *)(v25 + 56));
            do
            {
              uint64_t v43 = *--v35;
              uint64_t v34 = v43;
            }
            while (v27 >= *(_DWORD *)(v43 + 56));
          }
          while (v11 < v35);
        }
        unint64_t v44 = v11 - 1;
        if (v11 - 1 != v9) {
          *uint64_t v9 = *v44;
        }
        *unint64_t v44 = v17;
        if (v23 >= v31) {
          break;
        }
LABEL_52:
        double result = sub_1CC9E7088(v9, v11 - 1, a3, a4 & 1);
        a4 = 0;
      }
      BOOL v45 = sub_1CC9E8130(v9, v11 - 1);
      double result = sub_1CC9E8130(v11, a2);
      if (result) {
        break;
      }
      if (!v45) {
        goto LABEL_52;
      }
    }
    a2 = v11 - 1;
    if (!v45) {
      continue;
    }
    return result;
  }
}

uint64_t *sub_1CC9E7F68(uint64_t *result, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *result;
  uint64_t v5 = *(void *)(*result + 40);
  int v6 = *(__int16 *)(v5 + 18);
  if ((v6 & 0x80000000) == 0)
  {
    uint64_t v21 = *(void *)(v5 + 48);
    if (v21 != v5 + 40)
    {
      int v22 = 0;
      do
      {
        uint64_t v23 = v21 - 24;
        if (!v21) {
          uint64_t v23 = 0;
        }
        *(_DWORD *)(v23 + 56) = v22++;
        uint64_t v21 = *(void *)(v21 + 8);
      }
      while (v21 != v5 + 40);
    }
    *(_WORD *)(v5 + 18) = v6 | 0x8000;
  }
  unsigned int v7 = *(_DWORD *)(v4 + 56);
  unsigned int v8 = *(_DWORD *)(v3 + 56);
  uint64_t v9 = *a3;
  uint64_t v10 = *(void *)(v3 + 40);
  int v11 = *(__int16 *)(v10 + 18);
  if (v11 < 0)
  {
    unsigned int v12 = *(_DWORD *)(v3 + 56);
  }
  else
  {
    uint64_t v24 = *(void *)(v10 + 48);
    unsigned int v12 = *(_DWORD *)(v3 + 56);
    if (v24 != v10 + 40)
    {
      int v25 = 0;
      do
      {
        uint64_t v26 = v24 - 24;
        if (!v24) {
          uint64_t v26 = 0;
        }
        *(_DWORD *)(v26 + 56) = v25++;
        uint64_t v24 = *(void *)(v24 + 8);
      }
      while (v24 != v10 + 40);
      unsigned int v12 = *(_DWORD *)(v3 + 56);
    }
    *(_WORD *)(v10 + 18) = v11 | 0x8000;
  }
  unsigned int v13 = *(_DWORD *)(v9 + 56);
  if (v7 >= v8)
  {
    if (v12 < v13)
    {
      *a2 = v9;
      *a3 = v3;
      uint64_t v14 = *a2;
      uint64_t v15 = *result;
      uint64_t v16 = *(void *)(*result + 40);
      int v17 = *(__int16 *)(v16 + 18);
      if ((v17 & 0x80000000) == 0)
      {
        uint64_t v27 = *(void *)(v16 + 48);
        if (v27 != v16 + 40)
        {
          int v28 = 0;
          do
          {
            uint64_t v29 = v27 - 24;
            if (!v27) {
              uint64_t v29 = 0;
            }
            *(_DWORD *)(v29 + 56) = v28++;
            uint64_t v27 = *(void *)(v27 + 8);
          }
          while (v27 != v16 + 40);
        }
        *(_WORD *)(v16 + 18) = v17 | 0x8000;
      }
      if (*(_DWORD *)(v15 + 56) < *(_DWORD *)(v14 + 56))
      {
        *double result = v14;
        *a2 = v15;
      }
    }
  }
  else
  {
    if (v12 < v13)
    {
      *double result = v9;
LABEL_14:
      *a3 = v4;
      return result;
    }
    *double result = v3;
    *a2 = v4;
    uint64_t v18 = *a3;
    uint64_t v19 = *(void *)(v4 + 40);
    int v20 = *(__int16 *)(v19 + 18);
    if ((v20 & 0x80000000) == 0)
    {
      uint64_t v30 = *(void *)(v19 + 48);
      if (v30 != v19 + 40)
      {
        int v31 = 0;
        do
        {
          uint64_t v32 = v30 - 24;
          if (!v30) {
            uint64_t v32 = 0;
          }
          *(_DWORD *)(v32 + 56) = v31++;
          uint64_t v30 = *(void *)(v30 + 8);
        }
        while (v30 != v19 + 40);
      }
      *(_WORD *)(v19 + 18) = v20 | 0x8000;
    }
    if (*(_DWORD *)(v4 + 56) < *(_DWORD *)(v18 + 56))
    {
      *a2 = v18;
      goto LABEL_14;
    }
  }
  return result;
}

BOOL sub_1CC9E8130(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = a2 - a1;
  BOOL result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      uint64_t v6 = *(a2 - 1);
      uint64_t v7 = *a1;
      uint64_t v8 = *(void *)(*a1 + 40);
      int v9 = *(__int16 *)(v8 + 18);
      if ((v9 & 0x80000000) == 0)
      {
        uint64_t v46 = *(void *)(v8 + 48);
        if (v46 != v8 + 40)
        {
          int v47 = 0;
          do
          {
            uint64_t v48 = v46 - 24;
            if (!v46) {
              uint64_t v48 = 0;
            }
            *(_DWORD *)(v48 + 56) = v47++;
            uint64_t v46 = *(void *)(v46 + 8);
          }
          while (v46 != v8 + 40);
        }
        *(_WORD *)(v8 + 18) = v9 | 0x8000;
      }
      if (*(_DWORD *)(v7 + 56) < *(_DWORD *)(v6 + 56))
      {
        *a1 = v6;
        *(a2 - 1) = v7;
      }
      return 1;
    case 3:
      sub_1CC9E7F68(a1, a1 + 1, a2 - 1);
      return 1;
    case 4:
      sub_1CC9E854C(a1, a1 + 1, a1 + 2, a2 - 1);
      return 1;
    case 5:
      int v28 = a1 + 1;
      uint64_t v29 = a1 + 2;
      uint64_t v30 = a1 + 3;
      sub_1CC9E854C(a1, a1 + 1, a1 + 2, a1 + 3);
      uint64_t v31 = *(a2 - 1);
      uint64_t v32 = a1[3];
      uint64_t v33 = *(void *)(v32 + 40);
      int v34 = *(__int16 *)(v33 + 18);
      if ((v34 & 0x80000000) == 0)
      {
        uint64_t v49 = *(void *)(v33 + 48);
        if (v49 != v33 + 40)
        {
          int v50 = 0;
          do
          {
            uint64_t v51 = v49 - 24;
            if (!v49) {
              uint64_t v51 = 0;
            }
            *(_DWORD *)(v51 + 56) = v50++;
            uint64_t v49 = *(void *)(v49 + 8);
          }
          while (v49 != v33 + 40);
        }
        *(_WORD *)(v33 + 18) = v34 | 0x8000;
      }
      if (*(_DWORD *)(v32 + 56) < *(_DWORD *)(v31 + 56))
      {
        *uint64_t v30 = v31;
        *(a2 - 1) = v32;
        uint64_t v35 = *v30;
        uint64_t v36 = *v29;
        uint64_t v37 = *(void *)(*v29 + 40);
        int v38 = *(__int16 *)(v37 + 18);
        if ((v38 & 0x80000000) == 0)
        {
          uint64_t v52 = *(void *)(v37 + 48);
          if (v52 != v37 + 40)
          {
            int v53 = 0;
            do
            {
              uint64_t v54 = v52 - 24;
              if (!v52) {
                uint64_t v54 = 0;
              }
              *(_DWORD *)(v54 + 56) = v53++;
              uint64_t v52 = *(void *)(v52 + 8);
            }
            while (v52 != v37 + 40);
          }
          *(_WORD *)(v37 + 18) = v38 | 0x8000;
        }
        unsigned int v39 = *(_DWORD *)(v35 + 56);
        if (*(_DWORD *)(v36 + 56) < v39)
        {
          uint64_t *v29 = v35;
          *uint64_t v30 = v36;
          uint64_t v40 = *v28;
          uint64_t v41 = *(void *)(*v28 + 40);
          int v42 = *(__int16 *)(v41 + 18);
          if ((v42 & 0x80000000) == 0)
          {
            uint64_t v55 = *(void *)(v41 + 48);
            if (v55 != v41 + 40)
            {
              int v56 = 0;
              do
              {
                uint64_t v57 = v55 - 24;
                if (!v55) {
                  uint64_t v57 = 0;
                }
                *(_DWORD *)(v57 + 56) = v56++;
                uint64_t v55 = *(void *)(v55 + 8);
              }
              while (v55 != v41 + 40);
              unsigned int v39 = *(_DWORD *)(v35 + 56);
            }
            *(_WORD *)(v41 + 18) = v42 | 0x8000;
          }
          if (*(_DWORD *)(v40 + 56) < v39)
          {
            a1[1] = v35;
            a1[2] = v40;
            uint64_t v43 = *a1;
            uint64_t v44 = *(void *)(*a1 + 40);
            int v45 = *(__int16 *)(v44 + 18);
            if ((v45 & 0x80000000) == 0)
            {
              uint64_t v58 = *(void *)(v44 + 48);
              if (v58 != v44 + 40)
              {
                int v59 = 0;
                do
                {
                  uint64_t v60 = v58 - 24;
                  if (!v58) {
                    uint64_t v60 = 0;
                  }
                  *(_DWORD *)(v60 + 56) = v59++;
                  uint64_t v58 = *(void *)(v58 + 8);
                }
                while (v58 != v44 + 40);
                unsigned int v39 = *(_DWORD *)(v35 + 56);
              }
              *(_WORD *)(v44 + 18) = v45 | 0x8000;
            }
            if (*(_DWORD *)(v43 + 56) < v39)
            {
              *a1 = v35;
              a1[1] = v43;
            }
          }
        }
      }
      return 1;
    default:
      uint64_t v10 = a1 + 2;
      sub_1CC9E7F68(a1, a1 + 1, a1 + 2);
      int v11 = a1 + 3;
      if (a1 + 3 == a2) {
        return 1;
      }
      int v12 = 0;
      break;
  }
  while (1)
  {
    uint64_t v13 = *v11;
    uint64_t v14 = *v10;
    uint64_t v15 = *(void *)(*v10 + 40);
    int v16 = *(__int16 *)(v15 + 18);
    if ((v16 & 0x80000000) == 0)
    {
      uint64_t v25 = *(void *)(v15 + 48);
      if (v25 != v15 + 40)
      {
        int v26 = 0;
        do
        {
          uint64_t v27 = v25 - 24;
          if (!v25) {
            uint64_t v27 = 0;
          }
          *(_DWORD *)(v27 + 56) = v26++;
          uint64_t v25 = *(void *)(v25 + 8);
        }
        while (v25 != v15 + 40);
      }
      *(_WORD *)(v15 + 18) = v16 | 0x8000;
    }
    unsigned int v17 = *(_DWORD *)(v13 + 56);
    if (*(_DWORD *)(v14 + 56) < v17)
    {
      uint64_t v18 = v11;
      while (1)
      {
        *uint64_t v18 = v14;
        if (v10 == a1) {
          break;
        }
        uint64_t v18 = v10;
        uint64_t v19 = *--v10;
        uint64_t v14 = v19;
        uint64_t v20 = *(void *)(v19 + 40);
        int v21 = *(__int16 *)(v20 + 18);
        if ((v21 & 0x80000000) == 0)
        {
          uint64_t v22 = *(void *)(v20 + 48);
          if (v22 != v20 + 40)
          {
            int v23 = 0;
            do
            {
              uint64_t v24 = v22 - 24;
              if (!v22) {
                uint64_t v24 = 0;
              }
              *(_DWORD *)(v24 + 56) = v23++;
              uint64_t v22 = *(void *)(v22 + 8);
            }
            while (v22 != v20 + 40);
            unsigned int v17 = *(_DWORD *)(v13 + 56);
          }
          *(_WORD *)(v20 + 18) = v21 | 0x8000;
        }
        if (*(_DWORD *)(v14 + 56) >= v17) {
          goto LABEL_22;
        }
      }
      uint64_t v18 = a1;
LABEL_22:
      *uint64_t v18 = v13;
      if (++v12 == 8) {
        return v11 + 1 == a2;
      }
    }
    uint64_t v10 = v11++;
    if (v11 == a2) {
      return 1;
    }
  }
}

uint64_t *sub_1CC9E854C(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  BOOL result = sub_1CC9E7F68(a1, a2, a3);
  uint64_t v9 = *a4;
  uint64_t v10 = *a3;
  uint64_t v11 = *(void *)(*a3 + 40);
  int v12 = *(__int16 *)(v11 + 18);
  if ((v12 & 0x80000000) == 0)
  {
    uint64_t v21 = *(void *)(v11 + 48);
    if (v21 != v11 + 40)
    {
      int v22 = 0;
      do
      {
        uint64_t v23 = v21 - 24;
        if (!v21) {
          uint64_t v23 = 0;
        }
        *(_DWORD *)(v23 + 56) = v22++;
        uint64_t v21 = *(void *)(v21 + 8);
      }
      while (v21 != v11 + 40);
    }
    *(_WORD *)(v11 + 18) = v12 | 0x8000;
  }
  if (*(_DWORD *)(v10 + 56) < *(_DWORD *)(v9 + 56))
  {
    *a3 = v9;
    *a4 = v10;
    uint64_t v13 = *a3;
    uint64_t v14 = *a2;
    uint64_t v15 = *(void *)(*a2 + 40);
    int v16 = *(__int16 *)(v15 + 18);
    if ((v16 & 0x80000000) == 0)
    {
      uint64_t v24 = *(void *)(v15 + 48);
      if (v24 != v15 + 40)
      {
        int v25 = 0;
        do
        {
          uint64_t v26 = v24 - 24;
          if (!v24) {
            uint64_t v26 = 0;
          }
          *(_DWORD *)(v26 + 56) = v25++;
          uint64_t v24 = *(void *)(v24 + 8);
        }
        while (v24 != v15 + 40);
      }
      *(_WORD *)(v15 + 18) = v16 | 0x8000;
    }
    if (*(_DWORD *)(v14 + 56) < *(_DWORD *)(v13 + 56))
    {
      *a2 = v13;
      *a3 = v14;
      uint64_t v17 = *a2;
      uint64_t v18 = *a1;
      uint64_t v19 = *(void *)(*a1 + 40);
      int v20 = *(__int16 *)(v19 + 18);
      if ((v20 & 0x80000000) == 0)
      {
        uint64_t v27 = *(void *)(v19 + 48);
        if (v27 != v19 + 40)
        {
          int v28 = 0;
          do
          {
            uint64_t v29 = v27 - 24;
            if (!v27) {
              uint64_t v29 = 0;
            }
            *(_DWORD *)(v29 + 56) = v28++;
            uint64_t v27 = *(void *)(v27 + 8);
          }
          while (v27 != v19 + 40);
        }
        *(_WORD *)(v19 + 18) = v20 | 0x8000;
      }
      if (*(_DWORD *)(v18 + 56) < *(_DWORD *)(v17 + 56))
      {
        *a1 = v17;
        *a2 = v18;
      }
    }
  }
  return result;
}

void sub_1CC9E86CC()
{
}

__n128 sub_1CC9E86E0(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x18uLL);
  *(void *)uint64_t v2 = &unk_1F262B578;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_1CC9E872C(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_1F262B578;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

char **sub_1CC9E875C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v19 = *a2;
  if (*(unsigned char *)(v4 + 2088))
  {
    uint64_t v6 = v4 + 2096;
    int v5 = 16;
  }
  else
  {
    int v5 = *(_DWORD *)(v4 + 2104);
    if (!v5)
    {
      uint64_t v15 = 0;
      goto LABEL_17;
    }
    uint64_t v6 = *(void *)(v4 + 2096);
  }
  int v7 = v5 - 1;
  unsigned int v8 = v7 & ((v3 >> 4) ^ (v3 >> 9));
  uint64_t v9 = (void *)(v6 + 8 * v8);
  uint64_t v10 = *v9;
  if (v3 == *v9) {
    goto LABEL_19;
  }
  uint64_t v11 = 0;
  int v12 = 1;
  while (v10 != -4096)
  {
    if (v11) {
      BOOL v13 = 0;
    }
    else {
      BOOL v13 = v10 == -8192;
    }
    if (v13) {
      uint64_t v11 = v9;
    }
    unsigned int v14 = v8 + v12++;
    unsigned int v8 = v14 & v7;
    uint64_t v9 = (void *)(v6 + 8 * v8);
    uint64_t v10 = *v9;
    if (v3 == *v9) {
      goto LABEL_19;
    }
  }
  if (v11) {
    uint64_t v15 = v11;
  }
  else {
    uint64_t v15 = v9;
  }
LABEL_17:
  int v16 = sub_1CBFD5BBC(v4 + 2088, (uint64_t)&v19, &v19, v15);
  *int v16 = v19;
  unsigned int v17 = *(_DWORD *)(v4 + 2232);
  if (v17 >= *(_DWORD *)(v4 + 2236)) {
    llvm::SmallVectorBase<unsigned int>::grow_pod();
  }
  *(void *)(*(void *)(v4 + 2224) + 8 * v17) = v19;
  ++*(_DWORD *)(v4 + 2232);
LABEL_19:
  __n128 result = (char **)sub_1CBF698E4(v3);
  if (v3)
  {
    if (result) {
      return llvm::AssumptionCache::registerAssumption(*(char ***)(a1 + 16), v3);
    }
  }
  return result;
}

void sub_1CC9E88A0(unsigned __int8 *a1, llvm::SmallPtrSetImplBase *this)
{
  if (!a1 || *a1 - 4 > 0x1E) {
    return;
  }
  uint64_t v4 = *((void *)this + 1);
  uint64_t v5 = *((unsigned int *)this + 5);
  if (v4 == *(void *)this)
  {
    if (v5)
    {
      uint64_t v6 = 0;
      uint64_t v7 = 8 * v5;
      unsigned int v8 = (unsigned __int8 **)*((void *)this + 1);
      do
      {
        if (*v8 == a1) {
          return;
        }
        if (*v8 == (unsigned __int8 *)-2) {
          uint64_t v6 = v8;
        }
        ++v8;
        v7 -= 8;
      }
      while (v7);
      if (v6)
      {
        *uint64_t v6 = a1;
        --*((_DWORD *)this + 6);
        goto LABEL_35;
      }
    }
    unsigned int v9 = *((_DWORD *)this + 4);
    if (v5 < v9)
    {
      *((_DWORD *)this + 5) = v5 + 1;
      *(void *)(v4 + 8 * v5) = a1;
      goto LABEL_35;
    }
  }
  else
  {
    unsigned int v9 = *((_DWORD *)this + 4);
  }
  if (3 * v9 <= 4 * ((int)v5 - *((_DWORD *)this + 6)))
  {
    if (v9 >= 0x40) {
      v9 *= 2;
    }
    else {
      unsigned int v9 = 128;
    }
  }
  else if (v9 - v5 >= v9 >> 3)
  {
    goto LABEL_16;
  }
  llvm::SmallPtrSetImplBase::Grow(this, v9);
  unsigned int v9 = *((_DWORD *)this + 4);
  uint64_t v4 = *((void *)this + 1);
LABEL_16:
  unsigned int v10 = v9 - 1;
  unsigned int v11 = (v9 - 1) & ((a1 >> 4) ^ (a1 >> 9));
  int v12 = (unsigned __int8 **)(v4 + 8 * v11);
  BOOL v13 = *v12;
  if (*v12 != (unsigned __int8 *)-1)
  {
    unsigned int v14 = 0;
    int v15 = 1;
    while (v13 != a1)
    {
      if (v14) {
        BOOL v16 = 0;
      }
      else {
        BOOL v16 = v13 == (unsigned __int8 *)-2;
      }
      if (v16) {
        unsigned int v14 = v12;
      }
      unsigned int v17 = v11 + v15++;
      unsigned int v11 = v17 & v10;
      int v12 = (unsigned __int8 **)(v4 + 8 * (v17 & v10));
      BOOL v13 = *v12;
      if (*v12 == (unsigned __int8 *)-1) {
        goto LABEL_28;
      }
    }
    return;
  }
  unsigned int v14 = 0;
LABEL_28:
  if (v14) {
    uint64_t v18 = v14;
  }
  else {
    uint64_t v18 = v12;
  }
  if (*v18 != a1)
  {
    if (*v18 == (unsigned __int8 *)-2) {
      --*((_DWORD *)this + 6);
    }
    else {
      ++*((_DWORD *)this + 5);
    }
    *uint64_t v18 = a1;
LABEL_35:
    uint64_t v19 = *((unsigned int *)a1 + 2);
    if (v19)
    {
      uint64_t v21 = *(void **)this;
      int v20 = (void *)*((void *)this + 1);
      int v22 = &a1[-8 * v19];
      unsigned int v23 = *((_DWORD *)this + 4);
      unsigned int v24 = *((_DWORD *)this + 5);
      while (1)
      {
        uint64_t v25 = *(void *)v22;
        if (**(unsigned __int8 **)v22 - 4 <= 0x1E) {
          break;
        }
LABEL_70:
        v22 += 8;
        if (v22 == a1) {
          return;
        }
      }
      if (v20 == v21)
      {
        if (v24)
        {
          uint64_t v26 = 0;
          uint64_t v27 = 8 * v24;
          int v28 = v21;
          while (*v28 != v25)
          {
            if (*v28 == -2) {
              uint64_t v26 = v28;
            }
            ++v28;
            v27 -= 8;
            if (!v27)
            {
              if (!v26) {
                goto LABEL_46;
              }
              void *v26 = v25;
              --*((_DWORD *)this + 6);
              goto LABEL_69;
            }
          }
          goto LABEL_69;
        }
LABEL_46:
        if (v23 > v24)
        {
          *((_DWORD *)this + 5) = v24 + 1;
          v21[v24] = v25;
LABEL_69:
          uint64_t v21 = *(void **)this;
          int v20 = (void *)*((void *)this + 1);
          unsigned int v23 = *((_DWORD *)this + 4);
          unsigned int v24 = *((_DWORD *)this + 5);
          goto LABEL_70;
        }
      }
      if (3 * v23 <= 4 * (v24 - *((_DWORD *)this + 6)))
      {
        if (v23 >= 0x40) {
          v23 *= 2;
        }
        else {
          unsigned int v23 = 128;
        }
      }
      else if (v23 - v24 >= v23 >> 3)
      {
        goto LABEL_50;
      }
      llvm::SmallPtrSetImplBase::Grow(this, v23);
      unsigned int v23 = *((_DWORD *)this + 4);
      int v20 = (void *)*((void *)this + 1);
LABEL_50:
      unsigned int v29 = v23 - 1;
      unsigned int v30 = (v23 - 1) & ((v25 >> 4) ^ (v25 >> 9));
      uint64_t v31 = &v20[v30];
      uint64_t v32 = *v31;
      if (*v31 == -1)
      {
        uint64_t v33 = 0;
LABEL_62:
        if (v33) {
          uint64_t v37 = v33;
        }
        else {
          uint64_t v37 = v31;
        }
        if (*v37 != v25)
        {
          if (*v37 == -2) {
            --*((_DWORD *)this + 6);
          }
          else {
            ++*((_DWORD *)this + 5);
          }
          *uint64_t v37 = v25;
        }
      }
      else
      {
        uint64_t v33 = 0;
        int v34 = 1;
        while (v32 != v25)
        {
          if (v33) {
            BOOL v35 = 0;
          }
          else {
            BOOL v35 = v32 == -2;
          }
          if (v35) {
            uint64_t v33 = v31;
          }
          unsigned int v36 = v30 + v34++;
          unsigned int v30 = v36 & v29;
          uint64_t v31 = &v20[v36 & v29];
          uint64_t v32 = *v31;
          if (*v31 == -1) {
            goto LABEL_62;
          }
        }
      }
      goto LABEL_69;
    }
  }
}

BOOL sub_1CC9E8BD8(uint64_t a1)
{
  return *(unsigned char *)(a1 + 16) == 84
      && (uint64_t v1 = *(void *)(a1 - 32)) != 0
      && !*(unsigned char *)(v1 + 16)
      && *(void *)(v1 + 24) == *(void *)(a1 + 72)
      && (*(unsigned char *)(v1 + 33) & 0x20) != 0
      && *(_DWORD *)(v1 + 36) == 126;
}

uint64_t sub_1CC9E8C24(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 2224);
  if (v2 != (void *)(a1 + 2240)) {
    free(v2);
  }
  if ((*(unsigned char *)(a1 + 2088) & 1) == 0) {
    MEMORY[0x1D25D9CD0](*(void *)(a1 + 2096), 8);
  }
  MEMORY[0x1D25D9CD0](*(void *)(a1 + 2064), 8);
  if (*(void *)a1 != a1 + 16) {
    free(*(void **)a1);
  }
  return a1;
}

BOOL sub_1CC9E8C9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = 0;
  if (a2)
  {
    if (*(unsigned char *)(a2 + 16) == 91)
    {
      uint64_t v2 = *(void *)(a2 - 64);
      if (v2)
      {
        **(void **)a1 = v2;
        uint64_t v2 = *(void *)(a2 - 32);
        if (v2)
        {
          **(void **)(a1 + 8) = v2;
          uint64_t v3 = *(unsigned int *)(a2 + 72);
          uint64_t v4 = *(void *)(a1 + 16);
          return *(void *)(v4 + 8) == v3 && memcmp(*(const void **)v4, *(const void **)(a2 + 64), 4 * v3) == 0;
        }
      }
    }
  }
  return v2;
}

uint64_t sub_1CC9E8D20(uint64_t a1, uint64_t a2)
{
  v26[8] = *MEMORY[0x1E4F143B8];
  LODWORD(v2) = *(unsigned __int8 *)(a2 + 16);
  if (a2) {
    BOOL v3 = v2 == 91;
  }
  else {
    BOOL v3 = 0;
  }
  int v4 = v3;
  if (v3)
  {
    uint64_t v2 = *(void *)(a2 - 64);
    if (v2)
    {
      **(void **)a1 = v2;
      uint64_t v7 = *(void *)(a2 - 32);
      unsigned int v8 = (*(unsigned char *)(v7 + 16) - 11);
      if (v8 >= 2)
      {
        if (v8 < 0xFD)
        {
          LODWORD(v2) = 0;
          return v4 & v2;
        }
        uint64_t v19 = v23;
        int v20 = v23;
        uint64_t v21 = 8;
        int v22 = 0;
        unsigned int v24 = v26;
        uint64_t v25 = 0x800000000;
        v18[0] = (llvm::SmallPtrSetImplBase *)&v19;
        v18[1] = (llvm::SmallPtrSetImplBase *)&v24;
        int v10 = sub_1CC04C108(v18, v7);
        LODWORD(v2) = 0;
        if (v10)
        {
          while (1)
          {
            BOOL v17 = v25 == 0;
            if (!v25) {
              break;
            }
            uint64_t v15 = *((void *)v24 + v25 - 1);
            LODWORD(v25) = v25 - 1;
            char v16 = sub_1CC04C108(v18, v15);
            LODWORD(v2) = v17;
            if ((v16 & 1) == 0) {
              goto LABEL_15;
            }
          }
          LODWORD(v2) = 1;
        }
LABEL_15:
        if (v24 != v26)
        {
          int v13 = v2;
          free(v24);
          LODWORD(v2) = v13;
        }
        if (v20 == v19)
        {
          if (!v2) {
            return v4 & v2;
          }
        }
        else
        {
          int v14 = v2;
          free(v20);
          LODWORD(v2) = v14;
          if (!v14) {
            return v4 & v2;
          }
        }
      }
      uint64_t v11 = *(unsigned int *)(a2 + 72);
      int v12 = *(void **)(a1 + 16);
      *int v12 = *(void *)(a2 + 64);
      v12[1] = v11;
      LODWORD(v2) = 1;
    }
  }
  return v4 & v2;
}

BOOL sub_1CC9E8EB8(uint64_t a1, uint64_t a2)
{
  BOOL result = 0;
  v25[8] = *MEMORY[0x1E4F143B8];
  if (a2 && *(unsigned char *)(a2 + 16) == 91)
  {
    uint64_t v5 = *(void *)(a2 - 64);
    if (v5)
    {
      **(void **)a1 = v5;
      uint64_t v6 = *(void *)(a2 - 32);
      unsigned int v7 = (*(unsigned char *)(v6 + 16) - 11);
      if (v7 >= 2)
      {
        if (v7 < 0xFD) {
          return 0;
        }
        uint64_t v18 = v22;
        uint64_t v19 = v22;
        uint64_t v20 = 8;
        int v21 = 0;
        unsigned int v23 = v25;
        uint64_t v24 = 0x800000000;
        v17[0] = (llvm::SmallPtrSetImplBase *)&v18;
        v17[1] = (llvm::SmallPtrSetImplBase *)&v23;
        int v8 = sub_1CC04C108(v17, v6);
        int v9 = 0;
        if (v8)
        {
          while (1)
          {
            BOOL v16 = v24 == 0;
            if (!v24) {
              break;
            }
            uint64_t v14 = *((void *)v23 + v24 - 1);
            LODWORD(v24) = v24 - 1;
            char v15 = sub_1CC04C108(v17, v14);
            int v9 = v16;
            if ((v15 & 1) == 0) {
              goto LABEL_9;
            }
          }
          int v9 = 1;
        }
LABEL_9:
        if (v23 != v25)
        {
          int v12 = v9;
          free(v23);
          int v9 = v12;
        }
        if (v19 == v18)
        {
          if (!v9) {
            return 0;
          }
        }
        else
        {
          int v13 = v9;
          free(v19);
          if (!v13) {
            return 0;
          }
        }
      }
      uint64_t v10 = *(unsigned int *)(a2 + 72);
      uint64_t v11 = *(void *)(a1 + 16);
      if (*(void *)(v11 + 8) == v10) {
        return memcmp(*(const void **)v11, *(const void **)(a2 + 64), 4 * v10) == 0;
      }
    }
    return 0;
  }
  return result;
}

BOOL sub_1CC9E9058(void *a1, uint64_t a2)
{
  uint64_t v2 = 0;
  if (a2 && *(unsigned char *)(a2 + 16) == 91)
  {
    if (*a1 == *(void *)(a2 - 64)
      && a1[1] == *(void *)(a2 - 32)
      && (v3 = *(unsigned int *)(a2 + 72), uint64_t v4 = a1[2], *(void *)(v4 + 8) == v3))
    {
      return memcmp(*(const void **)v4, *(const void **)(a2 + 64), 4 * v3) == 0;
    }
    else
    {
      return 0;
    }
  }
  return v2;
}

uint64_t sub_1CC9E90DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (a2)
  {
    uint64_t v5 = *(void *)(a2 - 64);
    uint64_t v6 = *(void *)(v5 + 8);
    if (v6)
    {
      if (!*(void *)(v6 + 8))
      {
        if (sub_1CC9E8D20(a1, v5))
        {
          uint64_t v7 = *(void *)(a2 - 32);
          if (v7)
          {
            unsigned int v8 = *(unsigned __int8 *)(v7 + 16);
            if (v8 <= 0x14)
            {
              **(void **)(a1 + 24) = v7;
              if (v8 != 5) {
                goto LABEL_16;
              }
            }
          }
        }
      }
    }
    uint64_t v9 = *(void *)(a2 - 32);
    a3 = *(void *)(v9 + 8);
    if (a3)
    {
      if (*(void *)(a3 + 8)
        || !sub_1CC9E8D20(a1, v9)
        || (uint64_t v10 = *(void *)(a2 - 64)) == 0
        || (unsigned int v11 = *(unsigned __int8 *)(v10 + 16), v11 > 0x14)
        || (**(void **)(a1 + 24) = v10, v11 == 5))
      {
        LOBYTE(a3) = 0;
        return (a2 != 0) & a3;
      }
LABEL_16:
      LOBYTE(a3) = 1;
    }
  }
  return (a2 != 0) & a3;
}

uint64_t sub_1CC9E91A8(uint64_t result, void *a2, void *a3, unsigned int (**a4)(void, void), uint64_t a5, uint64_t a6, char *a7, uint64_t a8)
{
  if (!a6) {
    return result;
  }
  uint64_t v10 = a6;
  char v15 = (void *)result;
  while (a5 > a8 && v10 > a8)
  {
    if (!a5) {
      return result;
    }
    while (1)
    {
      BOOL result = ((uint64_t (*)(void, void))*a4)(*a2, *v15);
      if (result) {
        break;
      }
      ++v15;
      if (!--a5) {
        return result;
      }
    }
    uint64_t v64 = a3;
    __src = a7;
    uint64_t v66 = v10;
    if (a5 >= v10)
    {
      if (a5 == 1)
      {
        uint64_t v59 = *v15;
        *char v15 = *a2;
        *a2 = v59;
        return result;
      }
      if (a5 >= 0) {
        uint64_t v25 = a5;
      }
      else {
        uint64_t v25 = a5 + 1;
      }
      unint64_t v19 = v25 >> 1;
      uint64_t v20 = &v15[v25 >> 1];
      BOOL v36 = a3 == a2;
      uint64_t v18 = a3;
      unint64_t v17 = a3 - a2;
      int v63 = a4;
      if (v36) {
        goto LABEL_34;
      }
      uint64_t v61 = a8;
      uint64_t v26 = *a4;
      uint64_t v18 = a2;
      do
      {
        uint64_t v27 = &v18[v17 >> 1];
        uint64_t v29 = *v27;
        int v28 = v27 + 1;
        unsigned int v30 = v26(v29, *v20);
        if (v30) {
          v17 += ~(v17 >> 1);
        }
        else {
          v17 >>= 1;
        }
        if (v30) {
          uint64_t v18 = v28;
        }
      }
      while (v17);
      unint64_t v17 = v18 - a2;
    }
    else
    {
      if (v10 >= 0) {
        uint64_t v16 = v10;
      }
      else {
        uint64_t v16 = v10 + 1;
      }
      unint64_t v17 = v16 >> 1;
      uint64_t v18 = &a2[v16 >> 1];
      unint64_t v19 = a2 - v15;
      if (a2 == v15)
      {
        char v15 = a2;
        uint64_t v20 = a2;
        a2 += v16 >> 1;
        goto LABEL_51;
      }
      uint64_t v61 = a8;
      uint64_t v20 = v15;
      int v21 = a4;
      do
      {
        int v22 = &v20[v19 >> 1];
        uint64_t v24 = *v22;
        unsigned int v23 = v22 + 1;
        if ((*v21)(*v18, v24))
        {
          v19 >>= 1;
        }
        else
        {
          uint64_t v20 = v23;
          v19 += ~(v19 >> 1);
        }
      }
      while (v19);
      int v63 = v21;
      unint64_t v19 = v20 - v15;
    }
    a8 = v61;
LABEL_34:
    if (v20 == a2)
    {
      uint64_t v20 = a2;
      a2 = v18;
    }
    else if (a2 == v18)
    {
      uint64_t v18 = a2;
      a2 = v20;
    }
    else if (v20 + 1 == a2)
    {
      uint64_t v37 = *v20;
      memmove(v20, a2, (char *)v18 - (char *)a2);
      a2 = (void *)((char *)v20 + (char *)v18 - (char *)a2);
      *a2 = v37;
    }
    else
    {
      if (a2 + 1 == v18)
      {
        uint64_t v62 = a8;
        uint64_t v39 = *(v18 - 1);
        a2 = v20 + 1;
        if (v18 - 1 != v20) {
          memmove(v20 + 1, v20, (char *)(v18 - 1) - (char *)v20);
        }
        *uint64_t v20 = v39;
        a8 = v62;
        a4 = v63;
        goto LABEL_51;
      }
      uint64_t v31 = a2 - v20;
      if (v31 != v18 - a2)
      {
        uint64_t v40 = v18 - a2;
        uint64_t v41 = a2 - v20;
        do
        {
          uint64_t v42 = v41;
          uint64_t v41 = v40;
          uint64_t v40 = v42 % v40;
        }
        while (v40);
        a4 = v63;
        if (v41)
        {
          uint64_t v43 = &v20[v41];
          do
          {
            uint64_t v45 = *--v43;
            uint64_t v44 = v45;
            uint64_t v46 = &v43[v31];
            int v47 = v43;
            do
            {
              uint64_t v48 = v47;
              int v47 = v46;
              *uint64_t v48 = *v46;
              BOOL v49 = __OFSUB__(v31, v18 - v46);
              uint64_t v51 = v31 - (v18 - v46);
              char v50 = (v51 < 0) ^ v49;
              uint64_t v46 = &v20[v51];
              if (v50) {
                uint64_t v46 = &v47[v31];
              }
            }
            while (v46 != v43);
            *int v47 = v44;
          }
          while (v43 != v20);
        }
        a2 = &v20[v18 - a2];
        goto LABEL_51;
      }
      uint64_t v32 = 0;
      do
      {
        uint64_t v33 = v20[v32];
        v20[v32] = a2[v32];
        uint64_t v34 = (uint64_t)&v20[v32 + 1];
        a2[v32] = v33;
        uint64_t v35 = (uint64_t)&a2[++v32];
        BOOL v36 = (void *)v34 == a2 || v35 == (void)v18;
      }
      while (!v36);
    }
    a4 = v63;
LABEL_51:
    a5 -= v19;
    uint64_t v38 = v66 - v17;
    if ((uint64_t)(v17 + v19) >= (uint64_t)(v66 - v17 + a5))
    {
      a7 = __src;
      BOOL result = sub_1CC9E91A8(a2, v18, v64, a4, a5, v66 - v17, __src, a8);
      uint64_t v18 = v20;
      uint64_t v10 = v17;
      a5 = v19;
      a3 = a2;
    }
    else
    {
      BOOL result = sub_1CC9E91A8(v15, v20, a2, a4, v19, v17, __src, a8);
      char v15 = a2;
      a3 = v64;
      uint64_t v10 = v38;
      a7 = __src;
    }
    a2 = v18;
    if (!v10) {
      return result;
    }
  }
  if (a5 <= v10)
  {
    if (v15 != a2)
    {
      unint64_t v56 = 0;
      do
      {
        *(void *)&a7[v56] = v15[v56 / 8];
        v56 += 8;
      }
      while (&v15[v56 / 8] != a2);
      if (v56)
      {
        uint64_t v57 = a7;
        while (a2 != a3)
        {
          BOOL result = ((uint64_t (*)(void, void))*a4)(*a2, *(void *)v57);
          if (result) {
            uint64_t v58 = (char *)a2;
          }
          else {
            uint64_t v58 = v57;
          }
          v57 += 8 * (result ^ 1);
          a2 += result;
          *v15++ = *(void *)v58;
          if (&a7[v56] == v57) {
            return result;
          }
        }
        return (uint64_t)memmove(v15, v57, a7 - v57 + v56);
      }
    }
  }
  else if (a2 != a3)
  {
    uint64_t v52 = 0;
    do
    {
      *(void *)&a7[v52 * 8] = a2[v52];
      ++v52;
    }
    while (&a2[v52] != a3);
    if (v52 * 8)
    {
      int v53 = &a7[v52 * 8];
      uint64_t v54 = a3 - 1;
      while (a2 != v15)
      {
        BOOL result = ((uint64_t (*)(void, void))*a4)(*((void *)v53 - 1), *(a2 - 1));
        if (result) {
          uint64_t v55 = (char *)a2;
        }
        else {
          uint64_t v55 = v53;
        }
        if (result) {
          --a2;
        }
        else {
          v53 -= 8;
        }
        *v54-- = *((void *)v55 - 1);
        if (v53 == a7) {
          return result;
        }
      }
      if (v53 != a7)
      {
        uint64_t v60 = 0;
        do
        {
          v54[v60] = *(void *)&v53[v60 * 8 - 8];
          --v60;
        }
        while (&v53[v60 * 8] != a7);
      }
    }
  }
  return result;
}

uint64_t *sub_1CC9E96B4(uint64_t *result, uint64_t *a2, uint64_t *a3, uint64_t (**a4)(uint64_t, uint64_t))
{
  if (result != a2)
  {
    uint64_t v6 = result + 1;
    *a3 = *result;
    if (result + 1 != a2)
    {
      uint64_t v8 = 0;
      uint64_t v9 = a3;
      do
      {
        uint64_t v10 = v9;
        uint64_t v11 = *v9++;
        BOOL result = (uint64_t *)(*a4)(*v6, v11);
        int v12 = v9;
        if (result)
        {
          v10[1] = *v10;
          int v12 = a3;
          if (v10 != a3)
          {
            uint64_t v13 = v8;
            while (1)
            {
              int v12 = (uint64_t *)((char *)a3 + v13);
              BOOL result = (uint64_t *)(*a4)(*v6, *(uint64_t *)((char *)a3 + v13 - 8));
              if (!result) {
                break;
              }
              *int v12 = *(v12 - 1);
              v13 -= 8;
              if (!v13)
              {
                int v12 = a3;
                break;
              }
            }
          }
        }
        uint64_t v14 = *v6++;
        *int v12 = v14;
        v8 += 8;
      }
      while (v6 != a2);
    }
  }
  return result;
}

uint64_t sub_1CC9E9790(uint64_t a1, llvm::Use *a2)
{
  uint64_t result = llvm::DominatorTree::dominates(*(llvm::DominatorTree **)(*(void *)a1 + 72), *(const llvm::Value **)(a1 + 8), a2);
  **(unsigned char **)(a1 + 16) |= result;
  return result;
}

uint64_t sub_1CC9E97D0()
{
  dword_1EBCE57AC = sub_1CBF64200((llvm::DebugCounter *)"instcombine-visit", 0x11uLL, "Controls which instructions are visited", 0x27uLL);
  v1.n128_u64[0] = (unint64_t)"Enable code sinking";
  v1.n128_u64[1] = 19;
  LOBYTE(v2) = 1;
  uint64_t v3 = &v2;
  sub_1CD3F48AC((uint64_t)&unk_1EBCE57B8, "instcombine-code-sinking", &v1, (unsigned char **)&v3);
  __cxa_atexit((void (*)(void *))sub_1CB9064B0, &unk_1EBCE57B8, &dword_1CB82C000);
  int v2 = 32;
  uint64_t v3 = &v2;
  v1.n128_u64[0] = (unint64_t)"Maximum number of undroppable users for instruction sinking";
  v1.n128_u64[1] = 59;
  sub_1CD689B40(&v3, (long long *)&v1);
  __cxa_atexit((void (*)(void *))sub_1CB8598A4, qword_1EBCE5878, &dword_1CB82C000);
  v1.n128_u64[0] = (unint64_t)"Limit the maximum number of instruction combining iterations";
  v1.n128_u64[1] = 60;
  uint64_t v3 = (int *)&unk_1CFB27590;
  sub_1CD689C4C((long long *)&v1, &v3);
  __cxa_atexit((void (*)(void *))sub_1CB8598A4, qword_1EBD090F0, &dword_1CB82C000);
  v1.n128_u64[0] = (unint64_t)"Number of instruction combining iterations considered an infinite loop";
  v1.n128_u64[1] = 70;
  uint64_t v3 = (int *)&unk_1CFB27594;
  int v2 = 1;
  sub_1CD689D5C(&v1, &v3, &v2);
  __cxa_atexit((void (*)(void *))sub_1CB8598A4, &qword_1EBCE5938, &dword_1CB82C000);
  int v2 = 1024;
  uint64_t v3 = &v2;
  v1.n128_u64[0] = (unint64_t)"Maximum array size considered when doing a combine";
  v1.n128_u64[1] = 50;
  sub_1CD689ED4(&v3, (long long *)&v1);
  __cxa_atexit((void (*)(void *))sub_1CB8598A4, qword_1EBCE59F8, &dword_1CB82C000);
  LODWORD(v3) = 1;
  LOBYTE(v2) = 1;
  v1.n128_u64[0] = (unint64_t)&v2;
  sub_1CD689FE0(&v3, (unsigned __int8 **)&v1);
  return __cxa_atexit((void (*)(void *))sub_1CB8598A4, &qword_1EBCE5AB8, &dword_1CB82C000);
}

uint64_t sub_1CC9E99B8(uint64_t a1, void *a2, uint64_t *a3, unsigned char *a4)
{
  uint64_t v35 = 0;
  *a4 = 0;
  uint64_t v32 = a2;
  uint64_t v33 = &v35;
  uint64_t v34 = 0;
  int v8 = *(unsigned __int8 *)(a1 + 16);
  if (v8 != 5)
  {
    if (v8 != 51) {
      goto LABEL_10;
    }
    uint64_t v9 = *(void *)(a1 - 64);
    if (!v9) {
      goto LABEL_10;
    }
    *a2 = v9;
    if (!sub_1CBF528D8((uint64_t)&v33, *(unsigned __int8 **)(a1 - 32))) {
      goto LABEL_10;
    }
LABEL_9:
    *a4 = 1;
    goto LABEL_18;
  }
  if (*(_WORD *)(a1 + 18) == 23)
  {
    uint64_t v10 = *(void *)(a1 - 32 * (*(_DWORD *)(a1 + 20) & 0x7FFFFFF));
    if (v10)
    {
      *a2 = v10;
      if (sub_1CBF5295C((uint64_t)&v33, *(llvm::Constant **)(a1 - 32 * (*(_DWORD *)(a1 + 20) & 0x7FFFFFF) + 32))) {
        goto LABEL_9;
      }
    }
  }
LABEL_10:
  uint64_t v32 = a2;
  uint64_t v33 = &v35;
  uint64_t v34 = 0;
  int v11 = *(unsigned __int8 *)(a1 + 16);
  if (v11 != 5)
  {
    if (v11 != 50) {
      goto LABEL_21;
    }
    uint64_t v12 = *(void *)(a1 - 64);
    if (!v12) {
      goto LABEL_21;
    }
    *a2 = v12;
    if (!sub_1CBF528D8((uint64_t)&v33, *(unsigned __int8 **)(a1 - 32))) {
      goto LABEL_21;
    }
LABEL_18:
    uint64_t v14 = v35;
    if (*((_DWORD *)a3 + 2) > 0x40u || *((_DWORD *)v35 + 2) > 0x40u)
    {
      if (v35 != a3)
      {
        llvm::APInt::reallocate((uint64_t)a3, *((_DWORD *)v35 + 2));
        uint64_t v27 = *((unsigned int *)a3 + 2);
        if (v27 <= 0x40) {
          *a3 = *v14;
        }
        else {
          memcpy((void *)*a3, (const void *)*v14, ((unint64_t)(v27 + 63) >> 3) & 0x3FFFFFF8);
        }
      }
    }
    else
    {
      *a3 = *v35;
      *((_DWORD *)a3 + 2) = *((_DWORD *)v14 + 2);
    }
    return 1;
  }
  if (*(_WORD *)(a1 + 18) == 22)
  {
    uint64_t v13 = *(void *)(a1 - 32 * (*(_DWORD *)(a1 + 20) & 0x7FFFFFF));
    if (v13)
    {
      *a2 = v13;
      if (sub_1CBF5295C((uint64_t)&v33, *(llvm::Constant **)(a1 - 32 * (*(_DWORD *)(a1 + 20) & 0x7FFFFFF) + 32))) {
        goto LABEL_18;
      }
    }
  }
LABEL_21:
  uint64_t v32 = a2;
  uint64_t v33 = &v35;
  uint64_t v34 = 0;
  int v15 = *(unsigned __int8 *)(a1 + 16);
  if (v15 == 5)
  {
    if (*(_WORD *)(a1 + 18) != 28) {
      return 0;
    }
    uint64_t v17 = *(void *)(a1 - 32 * (*(_DWORD *)(a1 + 20) & 0x7FFFFFF));
    if (!v17) {
      return 0;
    }
    *a2 = v17;
    if (!sub_1CBF5295C((uint64_t)&v33, *(llvm::Constant **)(a1 - 32 * (*(_DWORD *)(a1 + 20) & 0x7FFFFFF) + 32)))return 0; {
  }
    }
  else
  {
    if (v15 != 56) {
      return 0;
    }
    uint64_t v16 = *(void *)(a1 - 64);
    if (!v16) {
      return 0;
    }
    *a2 = v16;
    if ((sub_1CBF528D8((uint64_t)&v33, *(unsigned __int8 **)(a1 - 32)) & 1) == 0) {
      return 0;
    }
  }
  unsigned int v31 = *((_DWORD *)v35 + 2);
  if (v31 > 0x40) {
    operator new[]();
  }
  uint64_t v30 = *v35;
  llvm::APInt::operator+=((uint64_t)&v30, 1uLL);
  uint64_t v19 = v31;
  uint64_t result = v30;
  unsigned int v31 = 0;
  if (v19 > 0x40)
  {
    uint64_t v20 = 0;
    int v21 = 0;
    unint64_t v22 = ((unint64_t)(v19 + 63) >> 3) & 0x3FFFFFF8;
    do
    {
      uint8x8_t v23 = (uint8x8_t)vcnt_s8(*(int8x8_t *)(v30 + v20));
      v23.i16[0] = vaddlv_u8(v23);
      v21 += v23.i32[0];
      v20 += 8;
    }
    while (v22 != v20);
    if (v30)
    {
      MEMORY[0x1D25D9CB0](v30, 0x1000C8000313F17);
      if (v31 >= 0x41)
      {
        if (v30) {
          MEMORY[0x1D25D9CB0](v30, 0x1000C8000313F17);
        }
      }
    }
    if (v21 != 1) {
      return 0;
    }
    goto LABEL_46;
  }
  if (!v30) {
    return result;
  }
  if ((v30 & (v30 - 1)) == 0)
  {
LABEL_46:
    unsigned int v29 = *((_DWORD *)v35 + 2);
    if (v29 > 0x40) {
      operator new[]();
    }
    uint64_t v28 = *v35;
    llvm::APInt::operator+=((uint64_t)&v28, 1uLL);
    unsigned int v24 = v29;
    uint64_t v25 = v28;
    unsigned int v29 = 0;
    if (*((_DWORD *)a3 + 2) > 0x40u && *a3)
    {
      MEMORY[0x1D25D9CB0](*a3, 0x1000C8000313F17);
      unsigned int v26 = v29;
      *a3 = v25;
      *((_DWORD *)a3 + 2) = v24;
      if (v26 >= 0x41)
      {
        if (v28) {
          MEMORY[0x1D25D9CB0](v28, 0x1000C8000313F17);
        }
      }
    }
    else
    {
      *a3 = v28;
      *((_DWORD *)a3 + 2) = v24;
    }
    return 1;
  }
  return 0;
}

uint64_t sub_1CC9E9DE0(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  unsigned int v29 = &v31;
  int v6 = *(unsigned __int8 *)(a1 + 16);
  if (v6 == 5)
  {
    if (*(_WORD *)(a1 + 18) != 17) {
      goto LABEL_12;
    }
    uint64_t v8 = *(void *)(a1 - 32 * (*(_DWORD *)(a1 + 20) & 0x7FFFFFF));
    if (!v8) {
      goto LABEL_12;
    }
    *a2 = v8;
    if ((sub_1CBF5295C((uint64_t)&v29, *(llvm::Constant **)(a1 - 32 * (*(_DWORD *)(a1 + 20) & 0x7FFFFFF) + 32)) & 1) == 0) {
      goto LABEL_12;
    }
  }
  else if (v6 != 45 {
         || (uint64_t v7 = *(void *)(a1 - 64)) == 0
  }
         || (*a2 = v7, !sub_1CBF528D8((uint64_t)&v29, *(unsigned __int8 **)(a1 - 32))))
  {
LABEL_12:
    unsigned int v29 = &v31;
    uint64_t v30 = 0;
    int v10 = *(unsigned __int8 *)(a1 + 16);
    if (v10 == 5)
    {
      if (*(_WORD *)(a1 + 18) != 25) {
        return 0;
      }
      uint64_t v12 = *(void *)(a1 - 32 * (*(_DWORD *)(a1 + 20) & 0x7FFFFFF));
      if (!v12) {
        return 0;
      }
      *a2 = v12;
      if ((sub_1CBF5295C((uint64_t)&v29, *(llvm::Constant **)(a1 - 32 * (*(_DWORD *)(a1 + 20) & 0x7FFFFFF) + 32)) & 1) == 0) {
        return 0;
      }
    }
    else
    {
      if (v10 != 53) {
        return 0;
      }
      uint64_t v11 = *(void *)(a1 - 64);
      if (!v11) {
        return 0;
      }
      *a2 = v11;
      if (!sub_1CBF528D8((uint64_t)&v29, *(unsigned __int8 **)(a1 - 32))) {
        return 0;
      }
    }
    unint64_t v13 = *(unsigned int *)(v31 + 8);
    if (v13 > 0x40) {
      operator new[]();
    }
    unint64_t v14 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v13;
    if (!v13) {
      LOBYTE(v14) = 0;
    }
    unint64_t v15 = v14 & 1;
    if (*(_DWORD *)(a3 + 8) >= 0x41u && *(void *)a3) {
      MEMORY[0x1D25D9CB0](*(void *)a3, 0x1000C8000313F17);
    }
    *(void *)a3 = v15;
    *(_DWORD *)(a3 + 8) = v13;
    uint64_t v16 = (unint64_t *)v31;
    uint64_t v17 = *(unsigned int *)(v31 + 8);
    if (v17 < 0x41) {
      goto LABEL_27;
    }
    int v24 = 0;
    int64_t v25 = (unint64_t)(v17 + 63) >> 6;
    uint64_t v16 = *(unint64_t **)v31;
    do
    {
      if (v25-- < 1) {
        break;
      }
      unint64_t v27 = v16[v25];
      v24 += __clz(v27);
    }
    while (!v27);
    int v28 = v17 | 0xFFFFFFC0;
    if ((v17 & 0x3F) == 0) {
      int v28 = 0;
    }
    if ((v17 - v24 - v28) <= 0x40)
    {
LABEL_27:
      LODWORD(v18) = v13;
      if (*v16 <= v13) {
        unint64_t v18 = *v16;
      }
    }
    else
    {
      LODWORD(v18) = v13;
    }
    unint64_t v19 = v15 << v18;
    if (v13 == v18) {
      unint64_t v19 = 0;
    }
    unint64_t v20 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v13;
    if (!v13) {
      unint64_t v20 = 0;
    }
    int v21 = (const void *)(v20 & v19);
LABEL_34:
    *(void *)a3 = v21;
    return 1;
  }
  uint64_t v9 = v31;
  if (*(_DWORD *)(a3 + 8) > 0x40u || *(_DWORD *)(v31 + 8) > 0x40u)
  {
    if (v31 == a3) {
      return 1;
    }
    llvm::APInt::reallocate(a3, *(_DWORD *)(v31 + 8));
    uint64_t v23 = *(unsigned int *)(a3 + 8);
    if (v23 > 0x40)
    {
      memcpy(*(void **)a3, *(const void **)v9, ((unint64_t)(v23 + 63) >> 3) & 0x3FFFFFF8);
      return 1;
    }
    int v21 = *(const void **)v9;
    goto LABEL_34;
  }
  *(void *)a3 = *(void *)v31;
  *(_DWORD *)(a3 + 8) = *(_DWORD *)(v9 + 8);
  return 1;
}

llvm::Value *sub_1CC9EA104(uint64_t a1, uint64_t a2)
{
  uint64_t v103 = 0;
  uint64_t v104 = 0;
  int v101 = 0;
  uint64_t v102 = 0;
  int v95 = (uint64_t *)&v104;
  unsigned int v96 = &v102;
  int v97 = (llvm::APInt **)&v101;
  uint64_t v98 = &v104;
  uint64_t v99 = &v102;
  v100[0] = &v101;
  v100[1] = &v103;
  uint64_t v4 = *(void *)(a2 - 64);
  if (sub_1CC9F971C(&v95, v4))
  {
LABEL_8:
    uint64_t v7 = *(void *)(a2 - 32);
    if (v7) {
      goto LABEL_26;
    }
    goto LABEL_18;
  }
  int v5 = *(unsigned __int8 *)(v4 + 16);
  if (v5 == 5)
  {
    if (*(_WORD *)(v4 + 18) == 26 && *(void *)(v4 - 32 * (*(_DWORD *)(v4 + 20) & 0x7FFFFFF)))
    {
      uint64_t v104 = *(uint64_t **)(v4 - 32 * (*(_DWORD *)(v4 + 20) & 0x7FFFFFF));
      uint64_t v8 = *(void *)(v4 - 32 * (*(_DWORD *)(v4 + 20) & 0x7FFFFFF) + 32);
      if (v8 && *(unsigned __int8 *)(v8 + 16) >= 0x1Cu) {
        uint64_t v102 = *(void *)(v4 - 32 * (*(_DWORD *)(v4 + 20) & 0x7FFFFFF) + 32);
      }
    }
  }
  else if (v5 == 54)
  {
    if (*(void *)(v4 - 64))
    {
      uint64_t v104 = *(uint64_t **)(v4 - 64);
      uint64_t v6 = *(void *)(v4 - 32);
      if (v6)
      {
        if (*(unsigned __int8 *)(v6 + 16) >= 0x1Cu)
        {
          int v101 = (uint64_t ***)v4;
          uint64_t v102 = v6;
          goto LABEL_8;
        }
      }
    }
  }
LABEL_18:
  uint64_t v10 = *(void *)(a2 - 32);
  if ((sub_1CC9F971C(&v95, v10) & 1) == 0)
  {
    int v11 = *(unsigned __int8 *)(v10 + 16);
    if (v11 == 5)
    {
      if (*(_WORD *)(v10 + 18) == 26 && *(void *)(v10 - 32 * (*(_DWORD *)(v10 + 20) & 0x7FFFFFF))) {
        uint64_t v104 = *(uint64_t **)(v10 - 32 * (*(_DWORD *)(v10 + 20) & 0x7FFFFFF));
      }
      return 0;
    }
    if (v11 != 54) {
      return 0;
    }
    if (!*(void *)(v10 - 64)) {
      return 0;
    }
    uint64_t v104 = *(uint64_t **)(v10 - 64);
    uint64_t v12 = *(void *)(v10 - 32);
    if (!v12 || *(unsigned __int8 *)(v12 + 16) < 0x1Cu) {
      return 0;
    }
    int v101 = (uint64_t ***)v10;
    uint64_t v102 = v12;
  }
  uint64_t v7 = *(void *)(a2 - 64);
  if (!v7) {
    return 0;
  }
LABEL_26:
  uint64_t v103 = v7;
  if (*(unsigned char *)(a2 + 16) == 43 && *(void *)(a2 - 32) != v7) {
    return 0;
  }
  unint64_t v13 = (llvm::Type *)*v104;
  unint64_t v14 = *(llvm::Type ****)a2;
  if (*(void *)a2 != *v104)
  {
    uint64_t v15 = *(void *)(*(void *)(a2 - 64) + 8);
    if (!v15 || *(void *)(v15 + 8))
    {
      uint64_t v16 = *(void *)(*(void *)(a2 - 32) + 8);
      if (!v16 || *(void *)(v16 + 8)) {
        return 0;
      }
    }
  }
  uint64_t v93 = 0;
  int v94 = 0;
  uint64_t v17 = v102;
  int v95 = (uint64_t *)&v94;
  unsigned int v96 = (uint64_t *)&v93;
  int v97 = (llvm::APInt **)&v93;
  uint64_t v98 = &v94;
  uint64_t v99 = (uint64_t *)&v93;
  v100[0] = &v93;
  if (v102)
  {
    unsigned int v18 = *(unsigned __int8 *)(v102 + 16);
    int v19 = v18 > 0x1B ? v18 - 28 : *(unsigned __int16 *)(v102 + 18);
    if (v19 == 39)
    {
      int v22 = *(_DWORD *)(v102 + 20);
      if ((v22 & 0x40000000) != 0) {
        uint64_t v23 = *(uint64_t **)(v102 - 8);
      }
      else {
        uint64_t v23 = (uint64_t *)(v102 - 32 * (v22 & 0x7FFFFFF));
      }
      uint64_t v24 = *v23;
      int v25 = *(unsigned __int8 *)(v24 + 16);
      if (v25 == 5)
      {
        if (*(_WORD *)(v24 + 18) != 15 || !*(void *)(v24 - 32 * (*(_DWORD *)(v24 + 20) & 0x7FFFFFF))) {
          goto LABEL_58;
        }
        uint64_t v83 = v102;
        int v94 = *(llvm::Constant **)(v24 - 32 * (*(_DWORD *)(v24 + 20) & 0x7FFFFFF));
        uint64_t v28 = *(void *)(v24 - 32 * (*(_DWORD *)(v24 + 20) & 0x7FFFFFF) + 32);
        if (sub_1CBC5BE40(&v96, v28)) {
          goto LABEL_72;
        }
      }
      else
      {
        if (v25 != 43) {
          goto LABEL_58;
        }
        uint64_t v26 = *(void *)(v24 - 64);
        BOOL v27 = !v26 || *(unsigned __int8 *)(v26 + 16) > 0x14u;
        if (v27) {
          goto LABEL_58;
        }
        uint64_t v83 = v102;
        int v94 = *(llvm::Constant **)(v24 - 64);
        uint64_t v28 = *(void *)(v24 - 32);
        if (sub_1CBC5BE40(&v96, v28)) {
          goto LABEL_72;
        }
      }
      uint64_t v17 = v83;
      unsigned int v29 = &v97;
      if (v28)
      {
LABEL_65:
        uint64_t v32 = *v29;
LABEL_71:
        void *v32 = v28;
        goto LABEL_72;
      }
    }
  }
LABEL_58:
  int v30 = *(unsigned __int8 *)(v17 + 16);
  if (v30 == 5)
  {
    if (*(_WORD *)(v17 + 18) != 15) {
      return 0;
    }
    uint64_t v33 = *(void *)(v17 - 32 * (*(_DWORD *)(v17 + 20) & 0x7FFFFFF));
    if (!v33) {
      return 0;
    }
    void *v98 = v33;
    uint64_t v28 = *(void *)(v17 - 32 * (*(_DWORD *)(v17 + 20) & 0x7FFFFFF) + 32);
    if ((sub_1CBC5BE40(&v99, v28) & 1) == 0)
    {
      if (!v28) {
        return 0;
      }
      uint64_t v32 = (void *)v100[0];
      goto LABEL_71;
    }
  }
  else
  {
    if (v30 != 43) {
      return 0;
    }
    uint64_t v31 = *(void *)(v17 - 64);
    if (!v31 || *(unsigned __int8 *)(v31 + 16) > 0x14u) {
      return 0;
    }
    void *v98 = v31;
    uint64_t v28 = *(void *)(v17 - 32);
    if ((sub_1CBC5BE40(&v99, v28) & 1) == 0)
    {
      if (!v28) {
        return 0;
      }
      unsigned int v29 = (llvm::APInt ***)v100;
      goto LABEL_65;
    }
  }
LABEL_72:
  uint64_t v34 = v94;
  uint64_t v35 = *(llvm::Type **)v94;
  uint64_t v84 = v13;
  if ((*(_DWORD *)(*(void *)v94 + 8) & 0xFE) == 0x12) {
    uint64_t v35 = (llvm::Type *)**((void **)v35 + 2);
  }
  unsigned int PrimitiveSizeInBits = llvm::Type::getPrimitiveSizeInBits(v35);
  uint64_t v37 = (llvm::Type *)*v104;
  if ((*(_DWORD *)(*v104 + 8) & 0xFE) == 0x12) {
    uint64_t v37 = (llvm::Type *)**((void **)v37 + 2);
  }
  uint64_t v38 = llvm::Type::getPrimitiveSizeInBits(v37);
  unsigned int v91 = PrimitiveSizeInBits;
  if (PrimitiveSizeInBits > 0x40) {
    operator new[]();
  }
  if (PrimitiveSizeInBits) {
    unint64_t v39 = 0xFFFFFFFFFFFFFFFFLL >> -(char)PrimitiveSizeInBits;
  }
  else {
    unint64_t v39 = 0;
  }
  uint64_t v90 = v39 & v38;
  v92[0] = (llvm::APInt *)32;
  v92[1] = (llvm::APInt *)&v90;
  int v40 = sub_1CC9F981C((uint64_t)v92, v34);
  if (v91 >= 0x41 && v90) {
    MEMORY[0x1D25D9CB0](v90, 0x1000C8000313F17);
  }
  if (!v40) {
    return 0;
  }
  uint64_t v41 = v14;
  uint64_t v42 = v103;
  if (*(unsigned char *)(a2 + 16) == 43)
  {
    int v95 = &v103;
    unsigned int v96 = &v103;
    char v43 = sub_1CBC5BE40(&v95, v103);
    if (!v42) {
      goto LABEL_89;
    }
  }
  else
  {
    int v95 = &v103;
    unsigned int v96 = &v103;
    char v43 = sub_1CBC5BEAC(&v95, v103);
    if (!v42) {
      goto LABEL_89;
    }
  }
  if ((v43 & 1) == 0) {
    *unsigned int v96 = v42;
  }
LABEL_89:
  int v89 = 0;
  v92[0] = 0;
  uint64_t v90 = 0;
  uint64_t v88 = 0;
  char v87 = 0;
  uint64_t v44 = v103;
  int v95 = (uint64_t *)&v89;
  unsigned int v96 = v104;
  int v97 = v92;
  uint64_t v98 = 0;
  uint64_t v99 = &v90;
  v100[0] = &v88;
  if (*(unsigned char *)(v103 + 16) != 85) {
    return 0;
  }
  int v45 = *(_DWORD *)(v103 + 20);
  uint64_t v46 = (v45 & 0x40000000) != 0 ? *(uint64_t **)(v103 - 8) : (uint64_t *)(v103 - 32 * (v45 & 0x7FFFFFF));
  uint64_t v47 = *v46;
  if (!*v46
    || *(unsigned char *)(v47 + 16) != 81
    || v104 != *(uint64_t **)(v47 - 64)
    || !sub_1CBF528D8((uint64_t)&v97, *(unsigned __int8 **)(v47 - 32)))
  {
    return 0;
  }
  *(_DWORD *)int v95 = *(_WORD *)(v47 + 18) & 0x3F;
  int v48 = *(_DWORD *)(v44 + 20);
  uint64_t v49 = (v48 & 0x40000000) != 0 ? *(void *)(v44 - 8) : v44 - 32 * (v48 & 0x7FFFFFF);
  uint64_t v50 = *(void *)(v49 + 32);
  if (!v50) {
    return 0;
  }
  uint64_t *v99 = v50;
  int v51 = *(_DWORD *)(v44 + 20);
  uint64_t v52 = (v51 & 0x40000000) != 0 ? *(void *)(v44 - 8) : v44 - 32 * (v51 & 0x7FFFFFF);
  uint64_t v53 = *(void *)(v52 + 64);
  if (!v53) {
    return 0;
  }
  *(void *)v100[0] = v53;
  if (!sub_1CC9EAA5C(v89, v92[0], &v87)) {
    return 0;
  }
  uint64_t v54 = v88;
  if (!v87)
  {
    uint64_t v55 = v90;
    uint64_t v90 = v88;
    uint64_t v88 = v55;
    uint64_t v54 = v55;
  }
  if (!v54) {
    return 0;
  }
  unsigned int v56 = *(unsigned __int8 *)(v54 + 16);
  if (v56 > 0x14) {
    return 0;
  }
  if (v56 == 16)
  {
    uint64_t v57 = *(unsigned int *)(v54 + 32);
    if (v57 >= 0x41)
    {
      int v79 = 0;
      int64_t v80 = (unint64_t)(v57 + 63) >> 6;
      do
      {
        BOOL v27 = v80-- < 1;
        if (v27) {
          break;
        }
        unint64_t v81 = *(void *)(*(void *)(v54 + 24) + 8 * v80);
        v79 += __clz(v81);
      }
      while (!v81);
      int v82 = v57 | 0xFFFFFFC0;
      if ((v57 & 0x3F) == 0) {
        int v82 = 0;
      }
      if (v79 + v82 == v57) {
        goto LABEL_114;
      }
    }
    else if (!*(void *)(v54 + 24))
    {
      goto LABEL_114;
    }
  }
  else if (v56 == 17)
  {
    if (sub_1CB844168(v54, 0.0)) {
      goto LABEL_114;
    }
  }
  else if (v56 - 18 < 3 || v56 == 13)
  {
    goto LABEL_114;
  }
  if ((sub_1CC03F414((uint64_t)&v95, (llvm::Constant *)v54) & 1) == 0) {
    return 0;
  }
LABEL_114:
  uint64_t v58 = v90;
  if (*(unsigned char *)(a2 + 16) == 43)
  {
    int v95 = &v90;
    unsigned int v96 = &v90;
    char v59 = sub_1CBC5BE40(&v95, v90);
    if (!v58) {
      goto LABEL_121;
    }
  }
  else
  {
    int v95 = &v90;
    unsigned int v96 = &v90;
    char v59 = sub_1CBC5BEAC(&v95, v90);
    if (!v58) {
      goto LABEL_121;
    }
  }
  if ((v59 & 1) == 0) {
    *unsigned int v96 = v58;
  }
LABEL_121:
  int v95 = (uint64_t *)&v86;
  unsigned int v96 = v93;
  int v97 = (llvm::APInt **)v93;
  int v60 = *(unsigned __int8 *)(v90 + 16);
  if (v60 == 5)
  {
    if (*(_WORD *)(v90 + 18) != 25) {
      return 0;
    }
    int v63 = (llvm::Constant **)(v90 - 32 * (*(_DWORD *)(v90 + 20) & 0x7FFFFFF));
    if (!*v63) {
      return 0;
    }
    int v86 = *v63;
    uint64_t v62 = (uint64_t)v63[4];
    if (sub_1CD68A554(&v96, v62)) {
      goto LABEL_127;
    }
  }
  else
  {
    if (v60 != 53) {
      return 0;
    }
    uint64_t v61 = *(void *)(v90 - 64);
    if (!v61 || *(unsigned __int8 *)(v61 + 16) > 0x14u) {
      return 0;
    }
    int v86 = *(llvm::Constant **)(v90 - 64);
    uint64_t v62 = *(void *)(v90 - 32);
    if (sub_1CC9F993C(&v96, v62)) {
      goto LABEL_127;
    }
  }
  if (v97 != (llvm::APInt **)v62) {
    return 0;
  }
LABEL_127:
  if (*(unsigned char *)(a2 + 16) != 43)
  {
    if (sub_1CBF68974((uint64_t)&v85, v86)) {
      goto LABEL_140;
    }
    return 0;
  }
  if ((sub_1CBF5270C((uint64_t)&v95, v86) & 1) == 0) {
    return 0;
  }
LABEL_140:
  if ((*((unsigned char *)v101 + 23) & 0x10) != 0)
  {
    uint64_t v64 = ***v101;
    uint64_t v65 = *(void *)(v64 + 152);
    uint64_t v66 = *(unsigned int *)(v64 + 168);
    if (v66)
    {
      LODWORD(v67) = (v66 - 1) & ((v101 >> 4) ^ (v101 >> 9));
      uint64_t v68 = (uint64_t ****)(v65 + 16 * v67);
      int v69 = *v68;
      if (*v68 == v101)
      {
LABEL_150:
        uint64_t v72 = v68[1];
        uint64_t v75 = (uint64_t *)*v72;
        uint64_t v73 = (char *)(v72 + 2);
        uint64_t v74 = v75;
        goto LABEL_151;
      }
      int v70 = 1;
      while (v69 != (uint64_t ***)-4096)
      {
        int v71 = v67 + v70++;
        uint64_t v67 = v71 & (v66 - 1);
        int v69 = *(uint64_t ****)(v65 + 16 * v67);
        if (v69 == v101)
        {
          uint64_t v68 = (uint64_t ****)(v65 + 16 * v67);
          goto LABEL_150;
        }
      }
    }
    uint64_t v68 = (uint64_t ****)(v65 + 16 * v66);
    goto LABEL_150;
  }
  uint64_t v74 = 0;
  uint64_t v73 = &byte_1CFBCE98E;
LABEL_151:
  LOWORD(v99) = 773;
  int v95 = (uint64_t *)v73;
  unsigned int v96 = v74;
  int v97 = (llvm::APInt **)".sext";
  unint64_t v20 = llvm::BinaryOperator::Create(27, v104, v102, (const char **)&v95, 0);
  llvm::Instruction::copyIRFlags((uint64_t)v20, (uint64_t)v101, 1);
  if (v41 != (llvm::Type ***)v84)
  {
    uint64_t v76 = *(uint64_t **)(a1 + 24);
    LOWORD(v99) = 257;
    sub_1CB844E0C(v76, v20, (uint64_t)&v95);
    int v77 = *(llvm::Type ****)a2;
    LOWORD(v99) = 257;
    return llvm::CastInst::CreateTruncOrBitCast(v20, v77, (const char **)&v95, 0, v78);
  }
  return v20;
}

BOOL sub_1CC9EAA5C(int a1, llvm::APInt *this, unsigned char *a3)
{
  if (!v4 & v3) {
    return 0;
  }
  switch(a1)
  {
    case '""':
      *a3 = 1;
      unsigned int v6 = *((_DWORD *)this + 2);
      if (v6 <= 0x40)
      {
        uint64_t v7 = *(void *)this;
        uint64_t v8 = ~(-1 << (v6 - 1));
        goto LABEL_7;
      }
      unsigned int v12 = v6 - 1;
      if ((*(void *)(*(void *)this + 8 * ((v6 - 1) >> 6)) >> (v6 - 1))) {
        return 0;
      }
LABEL_31:
      int v13 = llvm::APInt::countTrailingOnesSlowCase(this);
      goto LABEL_32;
    case '#':
      *a3 = 1;
      return sub_1CB8C0D18((uint64_t)this);
    case '$':
      *a3 = 0;
      unsigned int v11 = *((_DWORD *)this + 2);
      if (v11 > 0x40)
      {
        unsigned int v12 = v11 - 1;
        if (((*(void *)(*(void *)this + 8 * ((v11 - 1) >> 6)) >> (v11 - 1)) & 1) == 0) {
          return 0;
        }
        int v13 = llvm::APInt::countTrailingZerosSlowCase((unint64_t **)this);
LABEL_32:
        BOOL v9 = v13 == v12;
      }
      else
      {
        uint64_t v7 = *(void *)this;
        uint64_t v8 = 1 << (v11 - 1);
LABEL_7:
        BOOL v9 = v7 == v8;
      }
LABEL_8:
      BOOL result = v9;
      break;
    case '%':
      *a3 = 0;
      return sub_1CB8C0D84(this);
    case '&':
      *a3 = 0;
      unsigned int v12 = *((_DWORD *)this + 2);
      if (v12) {
        goto LABEL_17;
      }
      return 1;
    case '\'':
      *a3 = 0;
      goto LABEL_12;
    case '(':
      *a3 = 1;
LABEL_12:
      unsigned int v10 = *((_DWORD *)this + 2);
      if (v10 > 0x40) {
        BOOL v9 = llvm::APInt::countLeadingZerosSlowCase(this) == v10;
      }
      else {
        BOOL v9 = *(void *)this == 0;
      }
      goto LABEL_8;
    case ')':
      BOOL result = 1;
      *a3 = 1;
      unsigned int v12 = *((_DWORD *)this + 2);
      if (!v12) {
        return result;
      }
LABEL_17:
      if (v12 > 0x40) {
        goto LABEL_31;
      }
      BOOL v9 = *(void *)this == 0xFFFFFFFFFFFFFFFFLL >> -(char)v12;
      goto LABEL_8;
    default:
      JUMPOUT(0);
  }
  return result;
}

llvm::Value *sub_1CC9EAC38(uint64_t a1, const llvm::Value **a2)
{
  uint64_t v622 = *MEMORY[0x1E4F143B8];
  int v5 = (uint64_t *)(a2 - 8);
  char v4 = *(a2 - 8);
  unsigned int v6 = *(a2 - 4);
  unsigned int v7 = *((unsigned __int8 *)a2 + 17);
  long long v8 = *(_OWORD *)(a1 + 120);
  long long v9 = *(_OWORD *)(a1 + 104);
  *(_OWORD *)__s2 = *(_OWORD *)(a1 + 88);
  long long v603 = v9;
  v605 = (const llvm::Value **)*((void *)&v8 + 1);
  unint64_t v604 = a2;
  uint64_t Intrinsic = (uint64_t)sub_1CC02A5B0(v4, v6, (v7 & 4) != 0, (v7 >> 1) & 1, (uint64_t)__s2, (llvm::DSOLocalEquivalent **)3);
  if (Intrinsic) {
    goto LABEL_2;
  }
  if (sub_1CC9D1CF4(a1, (llvm::Instruction *)a2)) {
    return (llvm::Value *)a2;
  }
  Not = (llvm::ZExtInst *)sub_1CC9D812C(a1, (unsigned __int8 *)a2);
  if (!Not)
  {
    Not = (llvm::ZExtInst *)sub_1CC9D6B70(a1, (uint64_t)a2);
    if (!Not)
    {
      uint64_t Intrinsic = (uint64_t)sub_1CC9D337C(a1, (unsigned __int8 *)a2);
      if (Intrinsic) {
        goto LABEL_2;
      }
      Not = sub_1CC9EFC00((uint64_t)a2, *(void *)(a1 + 24));
      if (Not) {
        return Not;
      }
      unint64_t v20 = *(a2 - 8);
      uint64_t v21 = (uint64_t)*(a2 - 4);
      unsigned int v22 = *(unsigned __int8 *)(v21 + 16);
      if (v22 == 5 || !v21 || v22 >= 0x15)
      {
LABEL_47:
        uint64_t v41 = (uint64_t)*a2;
        if (v22 >= 0x15) {
          goto LABEL_70;
        }
        uint64_t v42 = *(void *)(a1 + 24);
        uint64_t v618 = 0;
        std::string __dst = 0;
        unint64_t v599 = 0;
        __src = &__dst;
        uint64_t v614 = 0;
        if (sub_1CBF528D8((uint64_t)&__src, (unsigned __int8 *)v21))
        {
          __s2[0] = &v618;
          __s2[1] = &v599;
          *(void *)&long long v603 = 0;
          uint64_t v43 = *((void *)v20 + 1);
          if (v43)
          {
            if (!*(void *)(v43 + 8))
            {
              unsigned int v44 = *((unsigned __int8 *)v20 + 16);
              if (v44 > 0x1B || v44 == 5)
              {
                int v45 = v44 <= 0x1B ? *((unsigned __int16 *)v20 + 9) : v44 - 28;
                if (v45 == 39)
                {
                  int v134 = *((_DWORD *)v20 + 5);
                  uint64_t v135 = (v134 & 0x40000000) != 0
                       ? (uint64_t *)*((void *)v20 - 1)
                       : (uint64_t *)((char *)v20 - 32 * (v134 & 0x7FFFFFF));
                  if (sub_1CC9F5868((void **)__s2, *v135))
                  {
                    int v136 = (unsigned int *)__dst;
                    unsigned int v137 = *((_DWORD *)__dst + 2);
                    unsigned int v138 = v137 - 1;
                    uint64_t v139 = __dst;
                    if (v137 >= 0x41) {
                      uint64_t v139 = (void *)(*(void *)__dst + 8 * (v138 >> 6));
                    }
                    if ((*v139 >> v138))
                    {
                      llvm::APInt::sext((uint64_t)v599, v137, (uint64_t)&v620);
                      if (v621 > 0x40)
                      {
                        llvm::APInt::flipAllBitsSlowCase((uint64_t)&v620);
                      }
                      else
                      {
                        unint64_t v140 = v621 ? 0xFFFFFFFFFFFFFFFFLL >> -(char)v621 : 0;
                        unint64_t v620 = v140 & ~v620;
                      }
                      llvm::APInt::operator++((uint64_t)&v620);
                      unsigned int v142 = v621;
                      unsigned int v621 = 0;
                      uint64_t v143 = v136[2];
                      if (v143 > 0x40)
                      {
                        uint64_t v429 = *(void *)(*(void *)v136 + 8 * ((v143 - 1) >> 6)) & (1 << (v143 - 1));
                        unint64_t v430 = v620;
                        if (v142 >= 0x41) {
                          unint64_t v430 = *(void *)(v620 + 8 * ((v142 - 1) >> 6));
                        }
                        if ((v429 != 0) == ((v430 & (1 << (v142 - 1))) != 0))
                        {
                          unint64_t v431 = ((unint64_t)(v143 + 63) >> 3) & 0x3FFFFFF8;
                          do
                          {
                            if (!v431)
                            {
                              int v148 = 0;
                              goto LABEL_257;
                            }
                            unint64_t v432 = *(void *)(*(void *)v136 - 8 + v431);
                            unint64_t v433 = *(void *)(v620 - 8 + v431);
                            v431 -= 8;
                          }
                          while (v432 == v433);
                          int v148 = v432 > v433 ? 1 : -1;
                        }
                        else
                        {
                          int v148 = v429 ? -1 : 1;
                        }
                      }
                      else
                      {
                        uint64_t v144 = -v143;
                        uint64_t v145 = (uint64_t)(*(void *)v136 << v144) >> v144;
                        uint64_t v146 = (uint64_t)(v620 << v144) >> v144;
                        BOOL v111 = v145 < v146;
                        BOOL v147 = v145 > v146;
                        int v148 = v111 ? -1 : v147;
                      }
LABEL_257:
                      if (v142 >= 0x41)
                      {
                        if (v620)
                        {
                          MEMORY[0x1D25D9CB0](v620, 0x1000C8000313F17);
                          if (v621 >= 0x41)
                          {
                            if (v620) {
                              MEMORY[0x1D25D9CB0](v620, 0x1000C8000313F17);
                            }
                          }
                        }
                      }
                      if ((v148 & 0x80000000) == 0)
                      {
                        uint64_t v149 = *(llvm::ConstantInt **)v618;
                        int v150 = v599;
                        uint64_t v151 = (uint64_t *)__dst;
                        unsigned int v152 = *((_DWORD *)v599 + 2);
                        unsigned int v153 = *((_DWORD *)__dst + 2);
                        if (v152 > 0x40)
                        {
                          if (v153 != v152) {
                            operator new[]();
                          }
                          sub_1CD0463BC((uint64_t)&__src, (uint64_t)__dst);
                          unsigned int v152 = v614;
                          if (v614 >= 0x41)
                          {
                            uint64_t v579 = 0;
                            int v580 = (unint64_t *)__src;
                            char v581 = *(uint64_t **)v150;
                            unint64_t v582 = ((unint64_t)v614 + 63) >> 6;
                            unint64_t v583 = v582;
                            do
                            {
                              uint64_t v584 = *v581++;
                              unint64_t v585 = v584 + *v580;
                              BOOL v586 = v585 + 1 <= *v580;
                              if (v579)
                              {
                                ++v585;
                                uint64_t v579 = v586;
                              }
                              else
                              {
                                uint64_t v579 = v585 < *v580;
                              }
                              *v580++ = v585;
                              --v583;
                            }
                            while (v583);
                            *((void *)__src + (v582 - 1)) &= 0xFFFFFFFFFFFFFFFFLL >> -(char)v152;
                            int v157 = __src;
                            unsigned int v152 = v614;
LABEL_272:
                            LODWORD(__s2[1]) = v152;
                            __s2[0] = v157;
                            LODWORD(v614) = 0;
                            Splat = llvm::ConstantInt::get(*(llvm::ConstantInt **)v149, (llvm::LLVMContext *)__s2, v141);
                            if ((*((_DWORD *)v149 + 2) & 0xFE) == 0x12) {
                              Splat = llvm::ConstantVector::getSplat((llvm::Type *)(*((unsigned int *)v149 + 8) | ((unint64_t)(*((_DWORD *)v149 + 2) == 19) << 32)), (uint64_t)Splat);
                            }
                            if (LODWORD(__s2[1]) >= 0x41 && __s2[0]) {
                              MEMORY[0x1D25D9CB0](__s2[0], 0x1000C8000313F17);
                            }
                            if (v614 >= 0x41 && __src) {
                              MEMORY[0x1D25D9CB0](__src, 0x1000C8000313F17);
                            }
                            unsigned int v159 = operator new(0x60uLL);
                            int v160 = (llvm::ZExtInst *)(v159 + 8);
                            v159[13] = v159[13] & 0x38000000 | 1;
                            *(void *)unsigned int v159 = 0;
                            *((void *)v159 + 1) = 0;
                            *((void *)v159 + 2) = 0;
                            *((void *)v159 + 3) = v159 + 8;
                            LOWORD(v604) = 257;
                            uint64_t v161 = v42;
                            Not = v160;
                            uint64_t v162 = sub_1CB844A3C(v161, v618, (uint64_t)Splat, (uint64_t)__s2, 1, 0);
                            __int16 v617 = 257;
                            llvm::ZExtInst::ZExtInst(Not, v162, (llvm::Type *)v41, (const char **)&__src, 0);
                            return Not;
                          }
                        }
                        else
                        {
                          if (v153 >= 0x41) {
                            uint64_t v151 = *(uint64_t **)__dst;
                          }
                          uint64_t v154 = *v151;
                          LODWORD(v614) = *((_DWORD *)v599 + 2);
                          unint64_t v155 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v152;
                          if (!v152) {
                            unint64_t v155 = 0;
                          }
                          __src = (void *)(v155 & v154);
                        }
                        unint64_t v156 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v152;
                        if (!v152) {
                          unint64_t v156 = 0;
                        }
                        int v157 = (void *)(v156 & ((unint64_t)__src + *(void *)v150));
                        __src = v157;
                        goto LABEL_272;
                      }
                    }
                  }
                }
              }
            }
          }
        }
        uint64_t v612 = 0;
        uint64_t v46 = *((void *)v20 + 1);
        if (!v46) {
          goto LABEL_69;
        }
        if (*(void *)(v46 + 8)
          || (unsigned int v47 = *((unsigned __int8 *)v20 + 16), v47 <= 0x1B) && v47 != 5
          || (v47 <= 0x1B ? (unsigned int v48 = *((unsigned __int16 *)v20 + 9)) : (unsigned int v48 = v47 - 28), v48 != 40))
        {
LABEL_63:
          __s2[0] = &v618;
          __s2[1] = &v612;
          if (!*(void *)(v46 + 8))
          {
            unsigned int v49 = *((unsigned __int8 *)v20 + 16);
            if (v49 > 0x1B || v49 == 5)
            {
              int v50 = v49 <= 0x1B ? *((unsigned __int16 *)v20 + 9) : v49 - 28;
              if (v50 == 39)
              {
                int v115 = *((_DWORD *)v20 + 5);
                BOOL v116 = (v115 & 0x40000000) != 0
                     ? (uint64_t *)*((void *)v20 - 1)
                     : (uint64_t *)((char *)v20 - 32 * (v115 & 0x7FFFFFF));
                if (sub_1CC9F5930((void **)__s2, *v116))
                {
                  unsigned int v117 = sub_1CC56C0C0((llvm *)0x27, v612, (llvm::Constant *)v41, 0);
                  Add = llvm::ConstantExpr::getAdd(v117, (llvm::Constant *)v21, 0, 0);
                  uint64_t v119 = v618;
                  __int16 v617 = 257;
                  if (*(void *)v618 != v41)
                  {
                    if (*((unsigned __int8 *)v618 + 16) <= 0x14u)
                    {
                      uint64_t v163 = (*(uint64_t (**)(void, uint64_t, llvm::Instruction *, uint64_t))(**(void **)(v42 + 72) + 224))(*(void *)(v42 + 72), 39, v618, v41);
                      uint64_t v119 = (llvm::Instruction *)v163;
                      if (v163)
                      {
                        if (*(unsigned __int8 *)(v163 + 16) >= 0x1Cu)
                        {
                          (*(void (**)(void, uint64_t, void **, void, void))(**(void **)(v42 + 80)
                                                                                           + 16))(*(void *)(v42 + 80), v163, &__src, *(void *)(v42 + 48), *(void *)(v42 + 56));
                          uint64_t v164 = *(unsigned int *)(v42 + 8);
                          if (v164)
                          {
                            uint64_t v165 = *(void *)v42;
                            uint64_t v166 = v165 + 16 * v164;
                            do
                            {
                              llvm::Instruction::setMetadata(v119, *(_DWORD *)v165, *(llvm::MDNode **)(v165 + 8));
                              v165 += 16;
                            }
                            while (v165 != v166);
                          }
                        }
                      }
                    }
                    else
                    {
                      LOWORD(v604) = 257;
                      uint64_t v119 = llvm::CastInst::Create(39, (uint64_t)v618, v41, (const char **)__s2, 0);
                      (*(void (**)(void, llvm::Instruction *, void **, void, void))(**(void **)(v42 + 80) + 16))(*(void *)(v42 + 80), v119, &__src, *(void *)(v42 + 48), *(void *)(v42 + 56));
                      uint64_t v120 = *(unsigned int *)(v42 + 8);
                      if (v120)
                      {
                        uint64_t v121 = *(void *)v42;
                        uint64_t v122 = v121 + 16 * v120;
                        do
                        {
                          llvm::Instruction::setMetadata(v119, *(_DWORD *)v121, *(llvm::MDNode **)(v121 + 8));
                          v121 += 16;
                        }
                        while (v121 != v122);
                      }
                    }
                  }
                  goto LABEL_851;
                }
              }
            }
          }
LABEL_69:
          unint64_t v20 = *(a2 - 8);
          uint64_t v21 = (uint64_t)*(a2 - 4);
          uint64_t v41 = (uint64_t)*a2;
LABEL_70:
          int v51 = *(_DWORD *)(v41 + 8);
          if ((v51 & 0xFE) == 0x12) {
            int v51 = *(_DWORD *)(**(void **)(v41 + 16) + 8);
          }
          if (v51 == 269)
          {
            LOWORD(v604) = 257;
            uint64_t v52 = __s2;
            char v53 = 30;
LABEL_74:
            uint64_t v54 = v20;
            uint64_t v55 = (const llvm::Value *)v21;
            return llvm::BinaryOperator::Create(v53, v54, (uint64_t)v55, (const char **)v52, 0);
          }
          if (v20 == (llvm::Instruction *)v21)
          {
            uint64_t v58 = llvm::ConstantInt::get((llvm::ConstantInt *)v41, 1uLL, 0);
            LOWORD(v604) = 257;
            Not = llvm::BinaryOperator::Create(25, (void *)v21, (uint64_t)v58, (const char **)__s2, 0);
            int v59 = *((unsigned char *)Not + 17) & 0xFB | (4 * ((*((unsigned __int8 *)a2 + 17) >> 2) & 1));
            *((unsigned char *)Not + 17) = v59;
            *((unsigned char *)Not + 17) = v59 & 0xFD | *((unsigned char *)a2 + 17) & 2;
            return Not;
          }
          unint64_t v597 = 0;
          unint64_t v598 = 0;
          __s2[1] = &v598;
          int v56 = *((unsigned __int8 *)v20 + 16);
          if (v56 == 5)
          {
            if (*((_WORD *)v20 + 9) != 15
              || !sub_1CC03F414((uint64_t)__s2, *((llvm::Constant **)v20 - 4 * (*((_DWORD *)v20 + 5) & 0x7FFFFFF)))|| (uint64_t v57 = ((void *)v20 - 4 * (*((_DWORD *)v20 + 5) & 0x7FFFFFF))[4]) == 0)
            {
LABEL_91:
              __s2[1] = &v597;
              int v62 = *(unsigned __int8 *)(v21 + 16);
              if (v62 == 5)
              {
                if (*(_WORD *)(v21 + 18) != 15) {
                  goto LABEL_100;
                }
                if (!sub_1CC03F414((uint64_t)__s2, *(llvm::Constant **)(v21 - 32 * (*(_DWORD *)(v21 + 20) & 0x7FFFFFF))))goto LABEL_100; {
                uint64_t v63 = *(void *)(v21 - 32 * (*(_DWORD *)(v21 + 20) & 0x7FFFFFF) + 32);
                }
                if (!v63) {
                  goto LABEL_100;
                }
              }
              else if (v62 != 43 {
                     || !sub_1CBF535C4((uint64_t)__s2, *(llvm::Constant **)(v21 - 64))
              }
                     || (uint64_t v63 = *(void *)(v21 - 32)) == 0)
              {
LABEL_100:
                uint64_t v64 = *(void *)(a1 + 24);
                uint64_t v65 = (uint64_t)*(a2 - 8);
                uint64_t v66 = (uint64_t)*(a2 - 4);
                uint64_t v67 = *(void *)(v65 + 8);
                if (!v67 || *(void *)(v67 + 8))
                {
                  uint64_t v68 = *(void *)(v66 + 8);
                  if (!v68 || *(void *)(v68 + 8)) {
                    goto LABEL_337;
                  }
                }
                v611 = 0;
                uint64_t v612 = 0;
                uint64_t v610 = 0;
                v608 = 0;
                uint64_t v601 = 0;
                __s2[0] = &v612;
                int v69 = *(unsigned __int8 *)(v66 + 16);
                if (v69 == 5)
                {
                  if (*(_WORD *)(v66 + 18) != 13) {
                    goto LABEL_126;
                  }
                  int v77 = (llvm::APInt **)(v66 - 32 * (*(_DWORD *)(v66 + 20) & 0x7FFFFFF));
                  if (!*v77) {
                    goto LABEL_126;
                  }
                  uint64_t v612 = *v77;
                  if ((sub_1CBF5270C((uint64_t)&__s2[1], v77[4]) & 1) == 0) {
                    goto LABEL_126;
                  }
                }
                else if (v69 != 41 {
                       || !*(void *)(v66 - 64)
                }
                       || (uint64_t v612 = *(llvm::APInt **)(v66 - 64),
                           !sub_1CBF5250C((uint64_t)&__s2[1], *(llvm::Constant **)(v66 - 32))))
                {
LABEL_126:
                  uint64_t v78 = (llvm::APInt *)v66;
LABEL_127:
                  __s2[0] = &v612;
                  int v79 = *(unsigned __int8 *)(v65 + 16);
                  if (v79 == 5)
                  {
                    if (*(_WORD *)(v65 + 18) != 13
                      || (int64_t v80 = (llvm::APInt **)(v65 - 32 * (*(_DWORD *)(v65 + 20) & 0x7FFFFFF)), !*v80)
                      || (uint64_t v612 = *v80, (sub_1CBF5270C((uint64_t)&__s2[1], v80[4]) & 1) == 0))
                    {
LABEL_313:
                      uint64_t v184 = (uint64_t)*(a2 - 8);
                      uint64_t v185 = (uint64_t)*(a2 - 4);
                      __s2[0] = &v611;
                      __s2[1] = &v608;
                      *(void *)&long long v603 = 0;
                      int v186 = *(unsigned __int8 *)(v185 + 16);
                      if (v186 == 5)
                      {
                        if (*(_WORD *)(v185 + 18) != 30) {
                          goto LABEL_322;
                        }
                        uint64_t v187 = (llvm::APInt **)(v185 - 32 * (*(_DWORD *)(v185 + 20) & 0x7FFFFFF));
                        if (!*v187) {
                          goto LABEL_322;
                        }
                        v611 = *v187;
                        if ((sub_1CBF5295C((uint64_t)&__s2[1], v187[4]) & 1) == 0) {
                          goto LABEL_322;
                        }
                      }
                      else if (v186 != 58 {
                             || !*(void *)(v185 - 64)
                      }
                             || (v611 = *(llvm::APInt **)(v185 - 64),
                                 !sub_1CBF528D8((uint64_t)&__s2[1], *(unsigned __int8 **)(v185 - 32))))
                      {
LABEL_322:
                        uint64_t v78 = (llvm::APInt *)v185;
                        goto LABEL_323;
                      }
                      uint64_t v78 = (llvm::APInt *)v184;
                      uint64_t v184 = v185;
LABEL_323:
                      __s2[0] = &v611;
                      __s2[1] = &v608;
                      *(void *)&long long v603 = 0;
                      int v188 = *(unsigned __int8 *)(v184 + 16);
                      if (v188 == 5)
                      {
                        if (*(_WORD *)(v184 + 18) != 30) {
                          goto LABEL_337;
                        }
                        uint64_t v189 = (llvm::APInt **)(v184 - 32 * (*(_DWORD *)(v184 + 20) & 0x7FFFFFF));
                        if (!*v189) {
                          goto LABEL_337;
                        }
                        v611 = *v189;
                        if ((sub_1CBF5295C((uint64_t)&__s2[1], v189[4]) & 1) == 0) {
                          goto LABEL_337;
                        }
                      }
                      else
                      {
                        if (v188 != 58) {
                          goto LABEL_337;
                        }
                        if (!*(void *)(v184 - 64)) {
                          goto LABEL_337;
                        }
                        v611 = *(llvm::APInt **)(v184 - 64);
                        if (!sub_1CBF528D8((uint64_t)&__s2[1], *(unsigned __int8 **)(v184 - 32))) {
                          goto LABEL_337;
                        }
                      }
                      unsigned int v190 = *((_DWORD *)v608 + 2);
                      if (v190 > 0x40)
                      {
                        int v192 = llvm::APInt::countTrailingZerosSlowCase((unint64_t **)v608);
                      }
                      else
                      {
                        unsigned int v191 = __clz(__rbit64(*(void *)v608));
                        if (v190 >= v191) {
                          int v192 = v191;
                        }
                        else {
                          int v192 = *((_DWORD *)v608 + 2);
                        }
                      }
                      if (v192) {
                        goto LABEL_337;
                      }
                      __s2[0] = &v610;
                      __s2[1] = &v601;
                      *(void *)&long long v603 = 0;
                      int v231 = *((unsigned __int8 *)v611 + 16);
                      if (v231 == 5)
                      {
                        if (*((_WORD *)v611 + 9) != 28) {
                          goto LABEL_337;
                        }
                        int v239 = (llvm::Constant **)((char *)v611 - 32 * (*((_DWORD *)v611 + 5) & 0x7FFFFFF));
                        if (!*v239) {
                          goto LABEL_337;
                        }
                        uint64_t v610 = (uint64_t)*v239;
                        if (!sub_1CBF5295C((uint64_t)&__s2[1], v239[4])) {
                          goto LABEL_337;
                        }
                      }
                      else
                      {
                        if (v231 != 56) {
                          goto LABEL_337;
                        }
                        if (!*((void *)v611 - 8)) {
                          goto LABEL_337;
                        }
                        uint64_t v610 = *((void *)v611 - 8);
                        if ((sub_1CBF528D8((uint64_t)&__s2[1], *((unsigned __int8 **)v611 - 4)) & 1) == 0) {
                          goto LABEL_337;
                        }
                      }
                      uint64_t v240 = v608;
                      unsigned int v607 = *(_DWORD *)(v601 + 8);
                      if (v607 > 0x40) {
                        operator new[]();
                      }
                      std::string __dst = *(void **)v601;
                      llvm::APInt::operator+=((uint64_t)&__dst, 1uLL);
                      unsigned int v356 = v607;
                      unsigned int v357 = __dst;
                      unsigned int v607 = 0;
                      uint64_t v358 = *((unsigned int *)v240 + 2);
                      if (v358 > 0x40) {
                        BOOL v359 = memcmp(*(const void **)v240, __dst, ((unint64_t)(v358 + 63) >> 3) & 0x3FFFFFF8) == 0;
                      }
                      else {
                        BOOL v359 = *(void *)v240 == (void)__dst;
                      }
                      int v360 = v359;
                      if (v356 >= 0x41)
                      {
                        if (v357)
                        {
                          MEMORY[0x1D25D9CB0](v357, 0x1000C8000313F17);
                          if (v607 >= 0x41)
                          {
                            if (__dst) {
                              MEMORY[0x1D25D9CB0](__dst, 0x1000C8000313F17);
                            }
                          }
                        }
                      }
                      if (!v360)
                      {
LABEL_337:
                        __s2[0] = &v598;
                        *(void *)&long long v603 = &v597;
                        uint64_t v193 = *v5;
                        int v194 = *(unsigned __int8 *)(*v5 + 16);
                        if (v194 == 5)
                        {
                          if (*(_WORD *)(v193 + 18) != 13) {
                            goto LABEL_346;
                          }
                          if (!*(void *)(v193 - 32 * (*(_DWORD *)(v193 + 20) & 0x7FFFFFF))) {
                            goto LABEL_346;
                          }
                          unint64_t v598 = *(llvm::Instruction **)(v193 - 32 * (*(_DWORD *)(v193 + 20) & 0x7FFFFFF));
                          if (!sub_1CBF5270C((uint64_t)&__s2[1], *(llvm::Constant **)(v193- 32 * (*(_DWORD *)(v193 + 20) & 0x7FFFFFF)+ 32)))goto LABEL_346; {
                        }
                          }
                        else
                        {
                          if (v194 != 41) {
                            goto LABEL_346;
                          }
                          if (!*(void *)(v193 - 64)) {
                            goto LABEL_346;
                          }
                          unint64_t v598 = *(llvm::Instruction **)(v193 - 64);
                          if ((sub_1CBF5250C((uint64_t)&__s2[1], *(llvm::Constant **)(v193 - 32)) & 1) == 0) {
                            goto LABEL_346;
                          }
                        }
                        if (sub_1CBF686A0((void **)&v603, 30, (uint64_t)*(a2 - 4))) {
                          goto LABEL_368;
                        }
LABEL_346:
                        uint64_t v195 = (uint64_t)*(a2 - 4);
                        int v196 = *(unsigned __int8 *)(v195 + 16);
                        if (v196 == 5)
                        {
                          if (*(_WORD *)(v195 + 18) != 13) {
                            goto LABEL_355;
                          }
                          uint64_t v198 = *(void *)(v195 - 32 * (*(_DWORD *)(v195 + 20) & 0x7FFFFFF));
                          if (!v198) {
                            goto LABEL_355;
                          }
                          *(void *)__s2[0] = v198;
                          if ((sub_1CBF5270C((uint64_t)&__s2[1], *(llvm::Constant **)(v195 - 32 * (*(_DWORD *)(v195 + 20) & 0x7FFFFFF) + 32)) & 1) == 0)goto LABEL_355; {
                        }
                          }
                        else if (v196 != 41 {
                               || (uint64_t v197 = *(void *)(v195 - 64)) == 0
                        }
                               || (*(void *)__s2[0] = v197,
                                   (sub_1CBF5250C((uint64_t)&__s2[1], *(llvm::Constant **)(v195 - 32)) & 1) == 0))
                        {
LABEL_355:
                          __src = &v597;
                          uint64_t v615 = &v598;
                          uint64_t v199 = *v5;
                          int v200 = *(unsigned __int8 *)(*v5 + 16);
                          if (v200 == 5)
                          {
                            if (*(_WORD *)(v199 + 18) != 13
                              || ((v203 = sub_1CBF686A0((void **)&__src, 30, *(void *)(v199 - 32 * (*(_DWORD *)(v199 + 20) & 0x7FFFFFF))), uint64_t v202 = *(void *)(v199 - 32 * (*(_DWORD *)(v199 + 20) & 0x7FFFFFF) + 32), !v203)|| !v202)&& (!sub_1CBF686A0((void **)&__src, 30, v202)|| (uint64_t v202 = *(void *)(v199 - 32 * (*(_DWORD *)(v199 + 20) & 0x7FFFFFF))) == 0))
                            {
LABEL_369:
                              uint64_t v204 = *((void *)v20 + 1);
                              if (!v204 || *(void *)(v204 + 8))
                              {
LABEL_371:
                                uint64_t v205 = *(void *)(v21 + 8);
                                if (!v205 || *(void *)(v205 + 8))
                                {
LABEL_373:
                                  int v206 = *((unsigned __int8 *)a2 + 16);
                                  if (v206 != 5)
                                  {
                                    if (v206 != 41) {
                                      goto LABEL_487;
                                    }
                                    uint64_t v207 = *v5;
                                    int v208 = *(unsigned __int8 *)(*v5 + 16);
                                    if (v208 == 5)
                                    {
                                      if (*(_WORD *)(v207 + 18) != 13) {
                                        goto LABEL_450;
                                      }
                                      uint64_t v221 = v207 - 32 * (*(_DWORD *)(v207 + 20) & 0x7FFFFFF);
                                      uint64_t v209 = *(llvm::Instruction **)v221;
                                      if (!*(void *)v221) {
                                        goto LABEL_450;
                                      }
                                      unint64_t v598 = *(llvm::Instruction **)v221;
                                      int v210 = *(unsigned __int8 **)(v221 + 32);
                                      if (!v210) {
                                        goto LABEL_450;
                                      }
                                      unsigned int v211 = v210[16];
                                    }
                                    else if (v208 != 41 {
                                           || (uint64_t v209 = *(llvm::Instruction **)(v207 - 64)) == 0
                                    }
                                           || (unint64_t v598 = *(llvm::Instruction **)(v207 - 64),
                                               (int v210 = *(unsigned __int8 **)(v207 - 32)) == 0)
                                           || (unsigned int v211 = v210[16], v211 > 0x14))
                                    {
LABEL_450:
                                      uint64_t v238 = (uint64_t)*(a2 - 4);
LABEL_461:
                                      int v242 = *(unsigned __int8 *)(v238 + 16);
                                      if (v242 == 5)
                                      {
                                        if (*(_WORD *)(v238 + 18) != 13) {
                                          goto LABEL_487;
                                        }
                                        uint64_t v244 = v238 - 32 * (*(_DWORD *)(v238 + 20) & 0x7FFFFFF);
                                        uint64_t v209 = *(llvm::Instruction **)v244;
                                        if (!*(void *)v244) {
                                          goto LABEL_487;
                                        }
                                        unint64_t v598 = *(llvm::Instruction **)v244;
                                        int v210 = *(unsigned __int8 **)(v244 + 32);
                                        if (!v210) {
                                          goto LABEL_487;
                                        }
                                        unsigned int v243 = v210[16];
                                      }
                                      else
                                      {
                                        if (v242 != 41) {
                                          goto LABEL_487;
                                        }
                                        uint64_t v209 = *(llvm::Instruction **)(v238 - 64);
                                        if (!v209) {
                                          goto LABEL_487;
                                        }
                                        unint64_t v598 = *(llvm::Instruction **)(v238 - 64);
                                        int v210 = *(unsigned __int8 **)(v238 - 32);
                                        if (!v210) {
                                          goto LABEL_487;
                                        }
                                        unsigned int v243 = v210[16];
                                        if (v243 > 0x14) {
                                          goto LABEL_487;
                                        }
                                      }
                                      if (v243 == 5)
                                      {
LABEL_487:
                                        uint64_t v247 = (uint64_t)*(a2 - 8);
                                        uint64_t v248 = (uint64_t)*(a2 - 4);
                                        v611 = 0;
                                        uint64_t v612 = 0;
                                        LODWORD(v614) = 1;
                                        __src = 0;
                                        unsigned int v621 = 1;
                                        unint64_t v620 = 0;
                                        LOBYTE(v601) = 0;
                                        if ((!sub_1CC9E99B8(v247, &v612, (uint64_t *)&__src, &v601)
                                           || (sub_1CC9E9DE0(v248, &v611, (uint64_t)&v620) & 1) == 0)
                                          && (!sub_1CC9E99B8(v248, &v612, (uint64_t *)&__src, &v601)
                                           || !sub_1CC9E9DE0(v247, &v611, (uint64_t)&v620)))
                                        {
                                          goto LABEL_489;
                                        }
                                        if (v614 > 0x40)
                                        {
                                          if (memcmp(__src, (const void *)v620, (((unint64_t)v614 + 63) >> 3) & 0x3FFFFFF8))
                                          {
                                            goto LABEL_489;
                                          }
                                        }
                                        else if (__src != (void *)v620)
                                        {
                                          goto LABEL_489;
                                        }
                                        uint64_t v610 = 0;
                                        unsigned int v619 = 1;
                                        uint64_t v618 = 0;
                                        unsigned __int8 v609 = 0;
                                        if (!sub_1CC9E99B8((uint64_t)v611, &v610, (uint64_t *)&v618, &v609)) {
                                          goto LABEL_518;
                                        }
                                        int v422 = v601;
                                        if (v601 != v609) {
                                          goto LABEL_518;
                                        }
                                        v608 = 0;
                                        unsigned int v607 = 1;
                                        std::string __dst = 0;
                                        uint64_t v247 = v610;
                                        unint64_t v599 = 0;
                                        if ((_BYTE)v601)
                                        {
                                          __s2[0] = &v608;
                                          __s2[1] = &v599;
                                          *(void *)&long long v603 = 0;
                                          int v445 = *(unsigned __int8 *)(v610 + 16);
                                          if (v445 == 5)
                                          {
                                            if (*(_WORD *)(v610 + 18) != 20) {
                                              goto LABEL_1227;
                                            }
                                            if (!*(void *)(v610 - 32 * (*(_DWORD *)(v610 + 20) & 0x7FFFFFF))) {
                                              goto LABEL_1227;
                                            }
                                            v608 = *(llvm::APInt **)(v610 - 32 * (*(_DWORD *)(v610 + 20) & 0x7FFFFFF));
                                            if ((sub_1CBF5295C((uint64_t)&__s2[1], *(llvm::Constant **)(v610- 32 * (*(_DWORD *)(v610 + 20) & 0x7FFFFFF)+ 32)) & 1) == 0)goto LABEL_1227; {
                                          }
                                            }
                                          else
                                          {
                                            if (v445 != 48) {
                                              goto LABEL_1227;
                                            }
                                            if (!*(void *)(v610 - 64)) {
                                              goto LABEL_1227;
                                            }
                                            v608 = *(llvm::APInt **)(v610 - 64);
                                            if (!sub_1CBF528D8((uint64_t)&__s2[1], *(unsigned __int8 **)(v610 - 32)))goto LABEL_1227; {
                                          }
                                            }
                                          goto LABEL_1123;
                                        }
                                        __s2[0] = &v608;
                                        __s2[1] = &v599;
                                        *(void *)&long long v603 = 0;
                                        int v423 = *(unsigned __int8 *)(v610 + 16);
                                        if (v423 == 5)
                                        {
                                          if (*(_WORD *)(v610 + 18) == 19)
                                          {
                                            unsigned int v434 = (llvm::APInt **)(v610 - 32 * (*(_DWORD *)(v610 + 20) & 0x7FFFFFF));
                                            if (*v434)
                                            {
                                              v608 = *v434;
                                              if (sub_1CBF5295C((uint64_t)&__s2[1], v434[4])) {
                                                goto LABEL_1123;
                                              }
                                            }
                                          }
                                        }
                                        else if (v423 == 47)
                                        {
                                          if (*(void *)(v610 - 64))
                                          {
                                            v608 = *(llvm::APInt **)(v610 - 64);
                                            if (sub_1CBF528D8((uint64_t)&__s2[1], *(unsigned __int8 **)(v610 - 32)))
                                            {
LABEL_1123:
                                              uint64_t v247 = (uint64_t)v599;
                                              unsigned int v559 = *((_DWORD *)v599 + 2);
                                              if (v559 <= 0x40)
                                              {
                                                std::string __dst = *(void **)v599;
                                                unsigned int v607 = v559;
                                                goto LABEL_1141;
                                              }
                                              llvm::APInt::reallocate((uint64_t)&__dst, v559);
                                              if (v607 > 0x40)
                                              {
                                                memcpy(__dst, *(const void **)v247, (((unint64_t)v607 + 63) >> 3) & 0x3FFFFFF8);
LABEL_1141:
                                                if (v612 == v608)
                                                {
                                                  if (v614 > 0x40)
                                                  {
                                                    if (memcmp(__src, __dst, (((unint64_t)v614 + 63) >> 3) & 0x3FFFFFF8))
                                                    {
                                                      goto LABEL_1227;
                                                    }
                                                  }
                                                  else if (__src != __dst)
                                                  {
                                                    goto LABEL_1227;
                                                  }
                                                  LOBYTE(v599) = 0;
                                                  if (v422) {
                                                    llvm::APInt::smul_ov((const void **)&__src, (const llvm::APInt *)&v618, (BOOL *)&v599, (llvm::APInt *)__s2);
                                                  }
                                                  else {
                                                    llvm::APInt::umul_ov((llvm::APInt *)&__src, (const llvm::APInt *)&v618, (BOOL *)&v599, (uint64_t)__s2);
                                                  }
                                                  if (LODWORD(__s2[1]) >= 0x41 && __s2[0]) {
                                                    MEMORY[0x1D25D9CB0](__s2[0], 0x1000C8000313F17);
                                                  }
                                                  if (!(_BYTE)v599)
                                                  {
                                                    uint64_t v568 = *(llvm::ConstantInt ***)v612;
                                                    llvm::APInt::operator*((uint64_t)&__src, &v618, (uint64_t)__s2);
                                                    uint64_t v570 = llvm::ConstantInt::get(*v568, (llvm::LLVMContext *)__s2, v569);
                                                    if ((v568[1] & 0xFE) == 0x12) {
                                                      uint64_t v570 = llvm::ConstantVector::getSplat((llvm::Type *)(*((unsigned int *)v568 + 8) | ((unint64_t)(*((_DWORD *)v568 + 2) == 19) << 32)), (uint64_t)v570);
                                                    }
                                                    if (LODWORD(__s2[1]) >= 0x41 && __s2[0]) {
                                                      MEMORY[0x1D25D9CB0](__s2[0], 0x1000C8000313F17);
                                                    }
                                                    uint64_t v571 = *(uint64_t **)(a1 + 24);
                                                    if (v422)
                                                    {
                                                      __s2[0] = "srem";
                                                      LOWORD(v604) = 259;
                                                      v572 = sub_1CD5AB298(v571, v612, (uint64_t)v570, (uint64_t)__s2);
                                                    }
                                                    else
                                                    {
                                                      __s2[0] = "urem";
                                                      LOWORD(v604) = 259;
                                                      v572 = sub_1CC57DDE0((uint64_t)v571, (uint64_t)v612, (uint64_t)v570, (uint64_t)__s2);
                                                    }
                                                    uint64_t v247 = (uint64_t)v572;
                                                    int v255 = 0;
LABEL_1228:
                                                    if (v607 >= 0x41 && __dst) {
                                                      MEMORY[0x1D25D9CB0](__dst, 0x1000C8000313F17);
                                                    }
                                                    if (!v255)
                                                    {
LABEL_519:
                                                      if (v619 >= 0x41 && v618) {
                                                        MEMORY[0x1D25D9CB0](v618, 0x1000C8000313F17);
                                                      }
                                                      if (!v255)
                                                      {
LABEL_490:
                                                        if (v621 >= 0x41 && v620) {
                                                          MEMORY[0x1D25D9CB0](v620, 0x1000C8000313F17);
                                                        }
                                                        if (v614 >= 0x41 && __src) {
                                                          MEMORY[0x1D25D9CB0](__src, 0x1000C8000313F17);
                                                        }
                                                        if (v247)
                                                        {
                                                          uint64_t v12 = a1;
                                                          int v13 = (llvm::ValueAsMetadata *)a2;
                                                          unsigned int v11 = (llvm::Instruction *)v247;
                                                          return (llvm::Value *)sub_1CC9D3C84(v12, v13, v11);
                                                        }
                                                        uint64_t v610 = 0;
                                                        v608 = 0;
                                                        __s2[0] = (void *)v21;
                                                        __s2[1] = &v610;
                                                        *(void *)&long long v603 = 0;
                                                        *((void *)&v603 + 1) = &v608;
                                                        unint64_t v604 = 0;
                                                        int v249 = *((unsigned __int8 *)v20 + 16);
                                                        if (v249 == 5)
                                                        {
                                                          if (*((_WORD *)v20 + 9) != 25) {
                                                            goto LABEL_566;
                                                          }
                                                          uint64_t v252 = *((void *)v20 - 4
                                                                                 * (*((_DWORD *)v20 + 5) & 0x7FFFFFF));
                                                          int v253 = *(unsigned __int8 *)(v252 + 16);
                                                          if (v253 == 5)
                                                          {
                                                            if (*(_WORD *)(v252 + 18) != 20) {
                                                              goto LABEL_566;
                                                            }
                                                            uint64_t v256 = v252 - 32 * (*(_DWORD *)(v252 + 20) & 0x7FFFFFF);
                                                            if (v21 != *(void *)v256
                                                              || !sub_1CBF5295C((uint64_t)&__s2[1], *(llvm::Constant **)(v256 + 32)))
                                                            {
                                                              goto LABEL_566;
                                                            }
                                                          }
                                                          else if (v253 != 48 {
                                                                 || v21 != *(void *)(v252 - 64)
                                                          }
                                                                 || (sub_1CBF528D8((uint64_t)&__s2[1], *(unsigned __int8 **)(v252 - 32)) & 1) == 0)
                                                          {
                                                            goto LABEL_566;
                                                          }
                                                          if ((sub_1CBF5295C((uint64_t)&v603 + 8, ((llvm::Constant **)v20- 4 * (*((_DWORD *)v20 + 5) & 0x7FFFFFF))[4]) & 1) == 0)goto LABEL_566; {
                                                        }
                                                          }
                                                        else
                                                        {
                                                          if (v249 != 53) {
                                                            goto LABEL_566;
                                                          }
                                                          uint64_t v250 = *((void *)v20 - 8);
                                                          int v251 = *(unsigned __int8 *)(v250 + 16);
                                                          if (v251 == 5)
                                                          {
                                                            if (*(_WORD *)(v250 + 18) != 20) {
                                                              goto LABEL_566;
                                                            }
                                                            uint64_t v254 = v250 - 32 * (*(_DWORD *)(v250 + 20) & 0x7FFFFFF);
                                                            if (v21 != *(void *)v254
                                                              || !sub_1CBF5295C((uint64_t)&__s2[1], *(llvm::Constant **)(v254 + 32)))
                                                            {
                                                              goto LABEL_566;
                                                            }
                                                          }
                                                          else if (v251 != 48 {
                                                                 || v21 != *(void *)(v250 - 64)
                                                          }
                                                                 || (sub_1CBF528D8((uint64_t)&__s2[1], *(unsigned __int8 **)(v250 - 32)) & 1) == 0)
                                                          {
                                                            goto LABEL_566;
                                                          }
                                                          if (!sub_1CBF528D8((uint64_t)&v603 + 8, *((unsigned __int8 **)v20 - 4)))goto LABEL_566; {
                                                        }
                                                          }
                                                        unsigned int v257 = *((_DWORD *)v608 + 2);
                                                        LODWORD(v614) = v257;
                                                        if (v257 > 0x40) {
                                                          llvm::APInt::initSlowCase((llvm::APInt *)&__src);
                                                        }
                                                        if (v257) {
                                                          unint64_t v258 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v257;
                                                        }
                                                        else {
                                                          LOBYTE(v258) = 0;
                                                        }
                                                        __src = (void *)(v258 & 1);
                                                        unsigned int v259 = *(_DWORD *)(v610 + 8);
                                                        unsigned int v596 = v259;
                                                        if (v259 > 0x40) {
                                                          operator new[]();
                                                        }
                                                        if (v259) {
                                                          unint64_t v262 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v259;
                                                        }
                                                        else {
                                                          unint64_t v262 = 0;
                                                        }
                                                        unint64_t v595 = v262 & ~*(void *)v610;
                                                        llvm::APInt::operator++((uint64_t)&v595);
                                                        unsigned int v621 = v596;
                                                        unint64_t v620 = v595;
                                                        unsigned int v596 = 0;
                                                        unsigned int v264 = v614;
                                                        LODWORD(__s2[1]) = v614;
                                                        if (v614 > 0x40) {
                                                          operator new[]();
                                                        }
                                                        __s2[0] = __src;
                                                        uint64_t v265 = *((unsigned int *)v608 + 2);
                                                        if (v265 >= 0x41)
                                                        {
                                                          int v424 = 0;
                                                          int64_t v425 = (unint64_t)(v265 + 63) >> 6;
                                                          unint64_t v426 = *(unint64_t **)v608;
                                                          do
                                                          {
                                                            BOOL v111 = v425-- < 1;
                                                            if (v111) {
                                                              break;
                                                            }
                                                            unint64_t v427 = v426[v425];
                                                            v424 += __clz(v427);
                                                          }
                                                          while (!v427);
                                                          int v428 = v265 | 0xFFFFFFC0;
                                                          if ((v265 & 0x3F) == 0) {
                                                            int v428 = 0;
                                                          }
                                                          int v267 = (int)v614;
                                                          if ((v265 - v424 - v428) > 0x40)
                                                          {
LABEL_541:
                                                            uint64_t v268 = (void)__src << v267;
                                                            if (v614 == v267) {
                                                              uint64_t v268 = 0;
                                                            }
                                                            if (v614) {
                                                              unint64_t v269 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v614;
                                                            }
                                                            else {
                                                              unint64_t v269 = 0;
                                                            }
                                                            __s2[0] = (void *)(v269 & v268);
                                                            unint64_t v270 = v269 & v268;
                                                            if (v621 > 0x40) {
                                                              BOOL v271 = memcmp((const void *)v620, __s2[0], (((unint64_t)v621 + 63) >> 3) & 0x3FFFFFF8) == 0;
                                                            }
                                                            else {
                                                              BOOL v271 = (void *)v620 == __s2[0];
                                                            }
                                                            int v272 = v271;
                                                            if (LODWORD(__s2[1]) >= 0x41 && v270) {
                                                              MEMORY[0x1D25D9CB0](v270, 0x1000C8000313F17);
                                                            }
                                                            if (v272)
                                                            {
                                                              int v273 = *(llvm::ConstantInt ***)v21;
                                                              char v274 = llvm::ConstantInt::get(**(llvm::ConstantInt ***)v21, (llvm::LLVMContext *)&v620, v263);
                                                              if ((v273[1] & 0xFE) == 0x12) {
                                                                char v274 = llvm::ConstantVector::getSplat((llvm::Type *)(*((unsigned int *)v273 + 8) | ((unint64_t)(*((_DWORD *)v273 + 2) == 19) << 32)), (uint64_t)v274);
                                                              }
                                                              LOWORD(v604) = 257;
                                                              Not = llvm::BinaryOperator::Create(23, (void *)v21, (uint64_t)v274, (const char **)__s2, 0);
                                                            }
                                                            else
                                                            {
                                                              Not = 0;
                                                            }
                                                            if (v621 >= 0x41 && v620) {
                                                              MEMORY[0x1D25D9CB0](v620, 0x1000C8000313F17);
                                                            }
                                                            if (v264 >= 0x41 && __src) {
                                                              MEMORY[0x1D25D9CB0](__src, 0x1000C8000313F17);
                                                            }
                                                            if (v272) {
                                                              return Not;
                                                            }
LABEL_566:
                                                            if (llvm::haveNoCommonBitsSet(v20, (const llvm::Value *)v21, *(void ***)(a1 + 80), *(const llvm::DataLayout **)(a1 + 56), (llvm::AssumptionCache *)a2, *(const llvm::Instruction **)(a1 + 72), (const llvm::DominatorTree *)1))
                                                            {
                                                              LOWORD(v604) = 257;
                                                              uint64_t v52 = __s2;
                                                              char v53 = 29;
                                                              goto LABEL_74;
                                                            }
                                                            uint64_t v275 = (uint64_t)v20;
                                                            uint64_t v276 = (uint64_t *)v21;
                                                            if (*((unsigned char *)v20 + 16) != 85
                                                              && (uint64_t v275 = v21,
                                                                  uint64_t v276 = (uint64_t *)v20,
                                                                  *(unsigned char *)(v21 + 16) != 85)
                                                              || (uint64_t v277 = *(void *)(v275 + 8)) == 0
                                                              || *(void *)(v277 + 8))
                                                            {
LABEL_572:
                                                              Not = sub_1CC9D8DBC(a1, (uint64_t)a2);
                                                              if (Not) {
                                                                return Not;
                                                              }
                                                              uint64_t v278 = *v5;
                                                              int v279 = *(unsigned __int8 *)(*v5 + 16);
                                                              if (v279 == 5)
                                                              {
                                                                if (*(_WORD *)(v278 + 18) != 30) {
                                                                  goto LABEL_603;
                                                                }
                                                                uint64_t v287 = v278
                                                                     - 32 * (*(_DWORD *)(v278 + 20) & 0x7FFFFFF);
                                                                uint64_t v54 = *(const llvm::Value **)v287;
                                                                if (!*(void *)v287) {
                                                                  goto LABEL_603;
                                                                }
                                                                unint64_t v598 = *(llvm::Instruction **)v287;
                                                                uint64_t v55 = *(const llvm::Value **)(v287 + 32);
                                                                if (!v55) {
                                                                  goto LABEL_603;
                                                                }
                                                              }
                                                              else
                                                              {
                                                                if (v279 != 58) {
                                                                  goto LABEL_603;
                                                                }
                                                                uint64_t v54 = *(const llvm::Value **)(v278 - 64);
                                                                if (!v54) {
                                                                  goto LABEL_603;
                                                                }
                                                                unint64_t v598 = *(llvm::Instruction **)(v278 - 64);
                                                                uint64_t v55 = *(const llvm::Value **)(v278 - 32);
                                                                if (!v55) {
                                                                  goto LABEL_603;
                                                                }
                                                              }
                                                              unint64_t v597 = v55;
                                                              uint64_t v288 = (uint64_t)*(a2 - 4);
                                                              int v289 = *(unsigned __int8 *)(v288 + 16);
                                                              if (v289 == 5)
                                                              {
                                                                if (*(_WORD *)(v288 + 18) != 28) {
                                                                  goto LABEL_603;
                                                                }
                                                                uint64_t v292 = (const llvm::Value **)(v288
                                                                                            - 32
                                                                                            * (*(_DWORD *)(v288 + 20) & 0x7FFFFFF));
                                                                char v290 = *v292;
                                                                uint64_t v291 = v292[4];
                                                                if (v54 == v290 && v55 == v291) {
                                                                  goto LABEL_659;
                                                                }
                                                              }
                                                              else
                                                              {
                                                                if (v289 != 56) {
                                                                  goto LABEL_603;
                                                                }
                                                                char v290 = *(const llvm::Value **)(v288 - 64);
                                                                uint64_t v291 = *(const llvm::Value **)(v288 - 32);
                                                                if (v54 == v290 && v55 == v291) {
                                                                  goto LABEL_659;
                                                                }
                                                              }
                                                              if (v54 == v291 && v55 == v290) {
                                                                goto LABEL_659;
                                                              }
LABEL_603:
                                                              uint64_t v294 = (uint64_t)*(a2 - 4);
                                                              int v295 = *(unsigned __int8 *)(v294 + 16);
                                                              if (v295 == 5)
                                                              {
                                                                if (*(_WORD *)(v294 + 18) != 30) {
                                                                  goto LABEL_643;
                                                                }
                                                                uint64_t v296 = (const llvm::Value **)(v294
                                                                                            - 32
                                                                                            * (*(_DWORD *)(v294 + 20) & 0x7FFFFFF));
                                                                uint64_t v54 = *v296;
                                                                if (!*v296) {
                                                                  goto LABEL_643;
                                                                }
                                                                unint64_t v598 = *v296;
                                                                uint64_t v55 = v296[4];
                                                                if (!v55) {
                                                                  goto LABEL_643;
                                                                }
                                                              }
                                                              else
                                                              {
                                                                if (v295 != 58) {
                                                                  goto LABEL_643;
                                                                }
                                                                uint64_t v54 = *(const llvm::Value **)(v294 - 64);
                                                                if (!v54) {
                                                                  goto LABEL_643;
                                                                }
                                                                unint64_t v598 = *(llvm::Instruction **)(v294 - 64);
                                                                uint64_t v55 = *(const llvm::Value **)(v294 - 32);
                                                                if (!v55) {
                                                                  goto LABEL_643;
                                                                }
                                                              }
                                                              unint64_t v597 = v55;
                                                              switch(v279)
                                                              {
                                                                case 5:
                                                                  int v307 = *(unsigned __int16 *)(v278 + 18);
                                                                  if (v307 != 28) {
                                                                    goto LABEL_646;
                                                                  }
                                                                  int v308 = (const llvm::Value **)(v278
                                                                                              - 32
                                                                                              * (*(_DWORD *)(v278 + 20) & 0x7FFFFFF));
                                                                  int v297 = *v308;
                                                                  uint64_t v298 = v308[4];
                                                                  if (v54 == v297 && v55 == v298) {
                                                                    goto LABEL_659;
                                                                  }
                                                                  break;
                                                                case 57:
                                                                  goto LABEL_650;
                                                                case 56:
                                                                  int v297 = *(const llvm::Value **)(v278 - 64);
                                                                  uint64_t v298 = *(const llvm::Value **)(v278 - 32);
                                                                  if (v54 == v297 && v55 == v298) {
                                                                    goto LABEL_659;
                                                                  }
                                                                  break;
                                                                default:
                                                                  goto LABEL_667;
                                                              }
                                                              if (v54 != v298) {
                                                                goto LABEL_667;
                                                              }
                                                              if (v55 != v297)
                                                              {
LABEL_643:
                                                                if (v279 != 57)
                                                                {
                                                                  if (v279 != 5) {
                                                                    goto LABEL_667;
                                                                  }
                                                                  int v307 = *(unsigned __int16 *)(v278 + 18);
LABEL_646:
                                                                  if (v307 != 29) {
                                                                    goto LABEL_667;
                                                                  }
                                                                  uint64_t v310 = v278
                                                                       - 32 * (*(_DWORD *)(v278 + 20) & 0x7FFFFFF);
                                                                  char v311 = *(const llvm::Value **)v310;
                                                                  if (!*(void *)v310) {
                                                                    goto LABEL_667;
                                                                  }
                                                                  unint64_t v598 = *(llvm::Instruction **)v310;
                                                                  uint64_t v312 = *(const llvm::Value **)(v310 + 32);
                                                                  if (!v312) {
                                                                    goto LABEL_667;
                                                                  }
LABEL_652:
                                                                  unint64_t v597 = v312;
                                                                  switch(v295)
                                                                  {
                                                                    case 5:
                                                                      if (*(_WORD *)(v294 + 18) != 28) {
                                                                        goto LABEL_672;
                                                                      }
                                                                      uint64_t v315 = (const llvm::Value **)(v294
                                                                                                  - 32 * (*(_DWORD *)(v294 + 20) & 0x7FFFFFF));
                                                                      uint64_t v313 = *v315;
                                                                      char v316 = v315[4];
                                                                      if (v311 == v313 && v312 == v316) {
                                                                        goto LABEL_682;
                                                                      }
                                                                      if (v311 != v316) {
                                                                        goto LABEL_672;
                                                                      }
                                                                      break;
                                                                    case 57:
                                                                      goto LABEL_669;
                                                                    case 56:
                                                                      uint64_t v313 = *(const llvm::Value **)(v294 - 64);
                                                                      uint64_t v314 = *(const llvm::Value **)(v294 - 32);
                                                                      if (v311 == v313 && v312 == v314)
                                                                      {
LABEL_682:
                                                                        sub_1CC9D28DC(a1, (uint64_t)a2, 0, (uint64_t)v311);
                                                                        sub_1CC9D28DC(a1, (uint64_t)a2, 1u, (uint64_t)v597);
                                                                        return (llvm::Value *)a2;
                                                                      }
                                                                      if (v311 != v314) {
                                                                        goto LABEL_685;
                                                                      }
                                                                      break;
                                                                    default:
                                                                      goto LABEL_685;
                                                                  }
                                                                  if (v312 == v313) {
                                                                    goto LABEL_682;
                                                                  }
LABEL_667:
                                                                  if (v295 != 5)
                                                                  {
                                                                    if (v295 != 57) {
                                                                      goto LABEL_685;
                                                                    }
LABEL_669:
                                                                    char v311 = *(const llvm::Value **)(v294 - 64);
                                                                    if (!v311) {
                                                                      goto LABEL_685;
                                                                    }
                                                                    unint64_t v598 = *(llvm::Instruction **)(v294 - 64);
                                                                    unint64_t v318 = *(const llvm::Value **)(v294 - 32);
                                                                    if (!v318) {
                                                                      goto LABEL_685;
                                                                    }
LABEL_675:
                                                                    unint64_t v597 = v318;
                                                                    if (v279 == 5)
                                                                    {
                                                                      if (*(_WORD *)(v278 + 18) != 28) {
                                                                        goto LABEL_685;
                                                                      }
                                                                      unsigned int v322 = (const llvm::Value **)(v278
                                                                                                  - 32 * (*(_DWORD *)(v278 + 20) & 0x7FFFFFF));
                                                                      BOOL v320 = *v322;
                                                                      long long v321 = v322[4];
                                                                    }
                                                                    else
                                                                    {
                                                                      if (v279 != 56) {
                                                                        goto LABEL_685;
                                                                      }
                                                                      BOOL v320 = *(const llvm::Value **)(v278 - 64);
                                                                      long long v321 = *(const llvm::Value **)(v278 - 32);
                                                                    }
                                                                    if ((v311 != v320 || v318 != v321)
                                                                      && (v311 != v321 || v318 != v320))
                                                                    {
                                                                      goto LABEL_685;
                                                                    }
                                                                    goto LABEL_682;
                                                                  }
LABEL_672:
                                                                  if (*(_WORD *)(v294 + 18) != 29
                                                                    || (unint64_t v319 = (const llvm::Value **)(v294 - 32 * (*(_DWORD *)(v294 + 20) & 0x7FFFFFF)),
                                                                        (char v311 = *v319) == 0)
                                                                    || (unint64_t v598 = *v319, (v318 = v319[4]) == 0))
                                                                  {
LABEL_685:
                                                                    char v323 = *((unsigned char *)a2 + 17);
                                                                    if ((v323 & 4) != 0
                                                                      || (v324 = sub_1CC16A7F0((uint64_t)v20, v21, 0, *(const llvm::DataLayout **)(a1 + 80), *(void *)(a1 + 56), (const llvm::DataLayout *)a2, *(void *)(a1 + 72)), char v323 = *((unsigned char *)a2 + 17), v324 != 3))
                                                                    {
                                                                      int v325 = 0;
                                                                    }
                                                                    else
                                                                    {
                                                                      v323 |= 4u;
                                                                      *((unsigned char *)a2 + 17) = v323;
                                                                      int v325 = 1;
                                                                    }
                                                                    if ((v323 & 2) == 0
                                                                      && llvm::computeOverflowForUnsignedAdd(v20, (const llvm::Value *)v21, *(const llvm::Value **)(a1 + 80), *(const llvm::DataLayout **)(a1 + 56), (llvm::AssumptionCache *)a2, *(const llvm::Instruction **)(a1 + 72), (const llvm::DominatorTree *)1) == 3)
                                                                    {
                                                                      *((unsigned char *)a2 + 17) |= 2u;
                                                                      int v325 = 1;
                                                                    }
                                                                    uint64_t v326 = *(void *)(a1 + 24);
                                                                    __src = 0;
                                                                    __s2[1] = &__src;
                                                                    int v327 = *((unsigned __int8 *)a2 + 16);
                                                                    if (v327 == 41)
                                                                    {
                                                                      uint64_t v328 = *v5;
                                                                      uint64_t v329 = *(void *)(*v5 + 8);
                                                                      if (!v329 || *(void *)(v329 + 8)) {
                                                                        goto LABEL_704;
                                                                      }
                                                                      int v330 = *(unsigned __int8 *)(v328 + 16);
                                                                      if (v330 == 5)
                                                                      {
                                                                        if (*(_WORD *)(v328 + 18) != 25) {
                                                                          goto LABEL_704;
                                                                        }
                                                                        if (!sub_1CBF5270C((uint64_t)__s2, *(llvm::Constant **)(v328 - 32 * (*(_DWORD *)(v328 + 20) & 0x7FFFFFF))))goto LABEL_704; {
                                                                        uint64_t v331 = *(void *)(v328
                                                                        }
                                                                                         - 32
                                                                                         * (*(_DWORD *)(v328 + 20) & 0x7FFFFFF)
                                                                                         + 32);
                                                                        if (!v331) {
                                                                          goto LABEL_704;
                                                                        }
                                                                      }
                                                                      else
                                                                      {
                                                                        if (v330 != 53) {
                                                                          goto LABEL_704;
                                                                        }
                                                                        if (!sub_1CBF5250C((uint64_t)__s2, *(llvm::Constant **)(v328 - 64)))goto LABEL_704; {
                                                                        uint64_t v331 = *(void *)(v328 - 32);
                                                                        }
                                                                        if (!v331) {
                                                                          goto LABEL_704;
                                                                        }
                                                                      }
                                                                      *(void *)__s2[1] = v331;
                                                                      if (!sub_1CBF687D0((uint64_t)&v603, *(a2 - 4)))goto LABEL_704; {
                                                                    }
                                                                      }
                                                                    else
                                                                    {
                                                                      if (v327 != 5) {
                                                                        goto LABEL_704;
                                                                      }
                                                                      if (*((_WORD *)a2 + 9) != 13) {
                                                                        goto LABEL_704;
                                                                      }
                                                                      int v332 = a2[-4 * (*((_DWORD *)a2 + 5) & 0x7FFFFFF)];
                                                                      uint64_t v333 = (void *)*((void *)v332 + 1);
                                                                      if (!v333 || v333[1]) {
                                                                        goto LABEL_704;
                                                                      }
                                                                      int v354 = *((unsigned __int8 *)v332 + 16);
                                                                      if (v354 == 5)
                                                                      {
                                                                        if (*((_WORD *)v332 + 9) != 25) {
                                                                          goto LABEL_704;
                                                                        }
                                                                        if (!sub_1CBF5270C((uint64_t)__s2, *((llvm::Constant **)v332- 4* (*((_DWORD *)v332 + 5) & 0x7FFFFFF))))goto LABEL_704; {
                                                                        int v355 = (void *)((void *)v332
                                                                        }
                                                                                        - 4
                                                                                        * (*((_DWORD *)v332 + 5) & 0x7FFFFFF))[4];
                                                                        if (!v355) {
                                                                          goto LABEL_704;
                                                                        }
                                                                      }
                                                                      else
                                                                      {
                                                                        if (v354 != 53) {
                                                                          goto LABEL_704;
                                                                        }
                                                                        if (!sub_1CBF5250C((uint64_t)__s2, *((llvm::Constant **)v332- 8)))goto LABEL_704; {
                                                                        int v355 = (void *)*((void *)v332 - 4);
                                                                        }
                                                                        if (!v355) {
                                                                          goto LABEL_704;
                                                                        }
                                                                      }
                                                                      *(void *)__s2[1] = v355;
                                                                      if ((sub_1CBF68974((uint64_t)&v603, a2[-4 * (*((_DWORD *)a2 + 5) & 0x7FFFFFF)+ 4]) & 1) == 0)goto LABEL_704; {
                                                                    }
                                                                      }
                                                                    AllOnesValue = llvm::Constant::getAllOnesValue(*(llvm::Constant **)__src, v363, v364);
                                                                    __s2[0] = "notmask";
                                                                    LOWORD(v604) = 259;
                                                                    unint64_t v382 = sub_1CC242524(v326, (uint64_t)AllOnesValue, (uint64_t)__src, (uint64_t)__s2, 0, 0);
                                                                    if (v382)
                                                                    {
                                                                      unsigned int v384 = *((unsigned __int8 *)v382 + 16);
                                                                      if (v384 >= 0x1C && v384 - 59 >= 0xFFFFFFEE)
                                                                      {
                                                                        char v385 = *((unsigned char *)v382 + 17) | 4;
                                                                        *((unsigned char *)v382 + 17) = v385;
                                                                        *((unsigned char *)v382 + 17) = *((unsigned char *)a2 + 17) & 2 | v385 & 0xFD;
                                                                      }
                                                                    }
                                                                    if ((*((unsigned char *)a2 + 23) & 0x10) == 0)
                                                                    {
                                                                      uint64_t v420 = 0;
                                                                      unsigned int v419 = &byte_1CFBCE98E;
LABEL_880:
                                                                      LOWORD(v604) = 261;
                                                                      __s2[0] = v419;
                                                                      __s2[1] = v420;
                                                                      Not = llvm::BinaryOperator::CreateNot((llvm::Constant **)v382, (llvm::Value *)__s2, 0, v383);
                                                                      if (Not) {
                                                                        return Not;
                                                                      }
LABEL_704:
                                                                      Not = sub_1CC9EA104(a1, (uint64_t)a2);
                                                                      if (Not) {
                                                                        return Not;
                                                                      }
                                                                      uint64_t v618 = *a2;
                                                                      std::string __dst = 0;
                                                                      unint64_t v599 = 0;
                                                                      __s2[0] = &__dst;
                                                                      __s2[1] = &v599;
                                                                      *((void *)&v603 + 1) = &v599;
                                                                      int v334 = *((unsigned __int8 *)a2 + 16);
                                                                      if (v334 == 5)
                                                                      {
                                                                        if (*((_WORD *)a2 + 9) != 13) {
                                                                          goto LABEL_717;
                                                                        }
                                                                        int v339 = sub_1CC9F5A2C((uint64_t **)__s2, (uint64_t)a2[-4* (*((_DWORD *)a2 + 5) & 0x7FFFFFF)]);
                                                                        uint64_t v340 = (uint64_t)a2[-4
                                                                                         * (*((_DWORD *)a2 + 5) & 0x7FFFFFF)
                                                                                         + 4];
                                                                        if (v339 && **((void **)&v603 + 1) == v340) {
                                                                          goto LABEL_736;
                                                                        }
                                                                        if (!sub_1CC9F5A2C((uint64_t **)__s2, v340))goto LABEL_717; {
                                                                        char v338 = (uint64_t *)&a2[-4
                                                                        }
                                                                                            * (*((_DWORD *)a2 + 5) & 0x7FFFFFF)];
                                                                      }
                                                                      else
                                                                      {
                                                                        if (v334 != 41) {
                                                                          goto LABEL_717;
                                                                        }
                                                                        int v335 = sub_1CC9F5A2C((uint64_t **)__s2, (uint64_t)*(a2 - 8));
                                                                        uint64_t v336 = (uint64_t)*(a2 - 4);
                                                                        if (v335 && **((void **)&v603 + 1) == v336) {
                                                                          goto LABEL_736;
                                                                        }
                                                                        char v337 = sub_1CC9F5A2C((uint64_t **)__s2, v336);
                                                                        char v338 = v5;
                                                                        if ((v337 & 1) == 0)
                                                                        {
LABEL_717:
                                                                          v611 = 0;
                                                                          uint64_t v612 = 0;
                                                                          __s2[0] = &__dst;
                                                                          __s2[1] = &v611;
                                                                          *(void *)&long long v603 = 0;
                                                                          *((void *)&v603 + 1) = &v612;
                                                                          unint64_t v604 = 0;
                                                                          int v341 = *((unsigned __int8 *)a2 + 16);
                                                                          if (v341 == 41)
                                                                          {
                                                                            if (sub_1CC9F5B80((unsigned __int8 ***)__s2, *v5)&& (sub_1CBF528D8((uint64_t)&v603 + 8, (unsigned __int8 *)*(a2 - 4)) & 1) != 0)
                                                                            {
LABEL_720:
                                                                              unsigned int v342 = *((_DWORD *)v611 + 2);
                                                                              unsigned int v621 = v342;
                                                                              if (v342 > 0x40) {
                                                                                operator new[]();
                                                                              }
                                                                              uint64_t v343 = ~*(void *)v611;
                                                                              if (v342) {
                                                                                unint64_t v344 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v342;
                                                                              }
                                                                              else {
                                                                                unint64_t v344 = 0;
                                                                              }
                                                                              unint64_t v345 = (const void *)(v344 & v343);
                                                                              unint64_t v620 = v344 & v343;
                                                                              uint64_t v376 = *((unsigned int *)v612 + 2);
                                                                              if (v376 > 0x40) {
                                                                                BOOL v377 = memcmp(*(const void **)v612, v345, ((unint64_t)(v376 + 63) >> 3) & 0x3FFFFFF8) == 0;
                                                                              }
                                                                              else {
                                                                                BOOL v377 = *(void *)v612 == (void)v345;
                                                                              }
                                                                              if (v377)
                                                                              {
                                                                                uint64_t Declaration = llvm::Intrinsic::getDeclaration(*(uint64_t ***)(*((void *)a2[5] + 7) + 40), 300, (uint64_t)&v618, 1);
                                                                                int v352 = (uint64_t **)Declaration;
                                                                                if (Declaration) {
                                                                                  uint64_t v353 = *(uint64_t ***)(Declaration + 24);
                                                                                }
                                                                                else {
                                                                                  uint64_t v353 = 0;
                                                                                }
                                                                                __src = __dst;
                                                                                uint64_t v402 = v618;
                                                                                int v403 = (llvm::APInt *)llvm::ConstantInt::get(*(llvm::ConstantInt **)v618, v612, v380);
                                                                                if ((*((_DWORD *)v402 + 2) & 0xFE) == 0x12) {
                                                                                  int v403 = llvm::ConstantVector::getSplat((llvm::Type *)(*((unsigned int *)v402 + 8) | ((unint64_t)(*((_DWORD *)v402 + 2) == 19) << 32)), (uint64_t)v403);
                                                                                }
                                                                                uint64_t v614 = v403;
                                                                                LOWORD(v604) = 257;
                                                                                unsigned int v373 = (char *)operator new(0xB0uLL);
                                                                                uint64_t v404 = 0;
                                                                                Not = (llvm::ZExtInst *)(v373 + 96);
                                                                                *((_DWORD *)v373 + 29) = *((_DWORD *)v373 + 29) & 0x38000000 | 3;
                                                                                do
                                                                                {
                                                                                  BOOL v405 = &v373[v404];
                                                                                  *(void *)BOOL v405 = 0;
                                                                                  *((void *)v405 + 1) = 0;
                                                                                  *((void *)v405 + 2) = 0;
                                                                                  *((void *)v405 + 3) = Not;
                                                                                  v404 += 32;
                                                                                }
                                                                                while (v404 != 96);
LABEL_846:
                                                                                *((void *)v373 + 12) = *v353[2];
                                                                                *((void *)v373 + 13) = 0;
                                                                                v373[112] = 84;
                                                                                v373[113] = 0;
                                                                                *((_WORD *)v373 + 57) = 0;
                                                                                *((_DWORD *)v373 + 29) = *((_DWORD *)v373 + 29) & 0xC0000000 | 3;
                                                                                *(_OWORD *)(v373 + 120) = 0u;
                                                                                *(_OWORD *)(v373 + 136) = 0u;
                                                                                *((_DWORD *)v373 + 38) = 0;
                                                                                *((void *)v373 + 20) = 0;
                                                                                llvm::CallInst::init((uint64_t ***)Not, v353, v352, (uint64_t *)&__src, 2, 0, 0, (const char **)__s2);
                                                                                return Not;
                                                                              }
                                                                            }
                                                                          }
                                                                          else if (v341 == 5 {
                                                                                 && *((_WORD *)a2 + 9) == 13)
                                                                          }
                                                                          {
                                                                            uint64_t v346 = a2[-4
                                                                                    * (*((_DWORD *)a2 + 5) & 0x7FFFFFF)];
                                                                            int v347 = *((unsigned __int8 *)v346 + 16);
                                                                            if (v347 == 85)
                                                                            {
                                                                              uint64_t v365 = *((void *)v346 - 12);
                                                                              if (!v365 || *(unsigned char *)(v365 + 16) != 81) {
                                                                                goto LABEL_857;
                                                                              }
                                                                              unint64_t v366 = (unsigned __int8 *)*((void *)v346 - 8);
                                                                              char v367 = (unsigned __int8 *)*((void *)v346 - 4);
                                                                              unint64_t v368 = *(unsigned __int8 **)(v365 - 64);
                                                                              unint64_t v369 = *(unsigned __int8 **)(v365 - 32);
                                                                              if ((v366 != v368 || v367 != v369)
                                                                                && (v366 != v369 || v367 != v368))
                                                                              {
                                                                                goto LABEL_857;
                                                                              }
                                                                              int v372 = *(_WORD *)(v365 + 18) & 0x3E;
                                                                              if (v366 == v368)
                                                                              {
                                                                                if (!v366 || v372 != 36) {
                                                                                  goto LABEL_857;
                                                                                }
                                                                              }
                                                                              else if (!v368 || v372 != 34)
                                                                              {
                                                                                goto LABEL_857;
                                                                              }
                                                                              std::string __dst = v368;
                                                                              if (!sub_1CBF528D8((uint64_t)&__s2[1], v369))goto LABEL_857; {
                                                                            }
                                                                              }
                                                                            else
                                                                            {
                                                                              if (v347 != 84) {
                                                                                goto LABEL_857;
                                                                              }
                                                                              uint64_t v348 = *((void *)v346 - 4);
                                                                              if (!v348) {
                                                                                goto LABEL_857;
                                                                              }
                                                                              if (*(unsigned char *)(v348 + 16)) {
                                                                                goto LABEL_857;
                                                                              }
                                                                              if (*(void *)(v348 + 24) != *((void *)v346 + 9)) {
                                                                                goto LABEL_857;
                                                                              }
                                                                              if ((*(unsigned char *)(v348 + 33) & 0x20) == 0) {
                                                                                goto LABEL_857;
                                                                              }
                                                                              if (*(_DWORD *)(v348 + 36) != 306) {
                                                                                goto LABEL_857;
                                                                              }
                                                                              __int16 v349 = (void **)((char *)v346
                                                                                             - 32
                                                                                             * (*((_DWORD *)v346 + 5) & 0x7FFFFFF));
                                                                              if (!*v349) {
                                                                                goto LABEL_857;
                                                                              }
                                                                              uint64_t v350 = (unsigned __int8 *)v349[4];
                                                                              std::string __dst = *v349;
                                                                              if ((sub_1CBF528D8((uint64_t)&__s2[1], v350) & 1) == 0)goto LABEL_857; {
                                                                            }
                                                                              }
                                                                            if (sub_1CBF5295C((uint64_t)&v603 + 8, a2[-4 * (*((_DWORD *)a2 + 5) & 0x7FFFFFF) + 4]))goto LABEL_720; {
                                                                          }
                                                                            }
LABEL_857:
                                                                          LODWORD(__s2[0]) = 311;
                                                                          __s2[1] = 0;
                                                                          *(void *)&long long v603 = &v598;
                                                                          *((void *)&v603 + 1) = 1;
                                                                          unint64_t v604 = &v597;
                                                                          v605 = &v597;
                                                                          uint64_t v407 = *(void *)(*v5 + 8);
                                                                          if (v407
                                                                            && !*(void *)(v407 + 8)
                                                                            && sub_1CC9F99A8((uint64_t)__s2, *v5)&& *v605 == *(a2 - 4)|| (v408 = (uint64_t)*(a2 - 4), (uint64_t v409 = *(void *)(v408 + 8)) != 0)&& !*(void *)(v409 + 8)&& (sub_1CC9F99A8((uint64_t)__s2, v408) & 1) != 0&& *v605 == (const llvm::Value *)*v5)
                                                                          {
                                                                            uint64_t v415 = *(uint64_t **)(a1 + 24);
                                                                            unint64_t v620 = (unint64_t)*a2;
                                                                            __src = v598;
                                                                            uint64_t v614 = v597;
                                                                            LOWORD(v604) = 257;
                                                                            p_src = (uint64_t *)&__src;
                                                                            unint64_t v414 = __s2;
                                                                            int v416 = 305;
                                                                            uint64_t v417 = 2;
                                                                          }
                                                                          else
                                                                          {
                                                                            LODWORD(__s2[0]) = 53;
                                                                            __s2[1] = 0;
                                                                            *(void *)&long long v603 = &v598;
                                                                            uint64_t v410 = *((void *)v20 + 1);
                                                                            if (!v410
                                                                              || *(void *)(v410 + 8)
                                                                              || !sub_1CC045310((uint64_t)__s2, (uint64_t)v20)|| (LODWORD(__src) = 53, uint64_t v614 = 0, v615 = &v597, (v411 = *(void *)(v21 + 8)) == 0)|| *(void *)(v411 + 8)|| !sub_1CC045310((uint64_t)&__src, v21)|| !llvm::haveNoCommonBitsSet(v598, v597, *(void ***)(a1 + 80), *(const llvm::DataLayout **)(a1 + 56), (llvm::AssumptionCache *)a2, *(const llvm::Instruction **)(a1 + 72), (const llvm::DominatorTree *)1))
                                                                            {
                                                                              if (v325) {
                                                                                return (llvm::Value *)a2;
                                                                              }
                                                                              else {
                                                                                return 0;
                                                                              }
                                                                            }
                                                                            uint64_t v412 = *(void *)(a1 + 24);
                                                                            unint64_t v620 = (unint64_t)*a2;
                                                                            LOWORD(v604) = 257;
                                                                            uint64_t v618 = sub_1CB844AF4(v412, v598, (uint64_t)v597, (uint64_t)__s2);
                                                                            __int16 v617 = 257;
                                                                            p_src = (uint64_t *)&v618;
                                                                            unint64_t v414 = &__src;
                                                                            uint64_t v415 = (uint64_t *)v412;
                                                                            int v416 = 53;
                                                                            uint64_t v417 = 1;
                                                                          }
                                                                          uint64_t Intrinsic = llvm::IRBuilderBase::CreateIntrinsic(v415, v416, (uint64_t)&v620, 1, p_src, v417, 0, (uint64_t)v414);
LABEL_2:
                                                                          unsigned int v11 = (llvm::Instruction *)Intrinsic;
LABEL_3:
                                                                          uint64_t v12 = a1;
                                                                          int v13 = (llvm::ValueAsMetadata *)a2;
                                                                          return (llvm::Value *)sub_1CC9D3C84(v12, v13, v11);
                                                                        }
                                                                      }
                                                                      if (**((void **)&v603 + 1) != *v338) {
                                                                        goto LABEL_717;
                                                                      }
LABEL_736:
                                                                      uint64_t v351 = llvm::Intrinsic::getDeclaration(*(uint64_t ***)(*((void *)a2[5] + 7)+ 40), 300, (uint64_t)&v618, 1);
                                                                      int v352 = (uint64_t **)v351;
                                                                      if (v351) {
                                                                        uint64_t v353 = *(uint64_t ***)(v351 + 24);
                                                                      }
                                                                      else {
                                                                        uint64_t v353 = 0;
                                                                      }
                                                                      __src = __dst;
                                                                      uint64_t v614 = v599;
                                                                      LOWORD(v604) = 257;
                                                                      unsigned int v373 = (char *)operator new(0xB0uLL);
                                                                      uint64_t v374 = 0;
                                                                      Not = (llvm::ZExtInst *)(v373 + 96);
                                                                      *((_DWORD *)v373 + 29) = *((_DWORD *)v373 + 29) & 0x38000000 | 3;
                                                                      do
                                                                      {
                                                                        unint64_t v375 = &v373[v374];
                                                                        *(void *)unint64_t v375 = 0;
                                                                        *((void *)v375 + 1) = 0;
                                                                        *((void *)v375 + 2) = 0;
                                                                        *((void *)v375 + 3) = Not;
                                                                        v374 += 32;
                                                                      }
                                                                      while (v374 != 96);
                                                                      goto LABEL_846;
                                                                    }
                                                                    uint64_t v386 = **(void **)*a2;
                                                                    uint64_t v387 = *(void *)(v386 + 152);
                                                                    uint64_t v388 = *(unsigned int *)(v386 + 168);
                                                                    if (v388)
                                                                    {
                                                                      LODWORD(v389) = (v388 - 1) & ((a2 >> 4) ^ (a2 >> 9));
                                                                      int v390 = (const llvm::Value ***)(v387 + 16 * v389);
                                                                      uint64_t v391 = *v390;
                                                                      if (*v390 == a2)
                                                                      {
LABEL_879:
                                                                        uint64_t v418 = v390[1];
                                                                        v421 = *v418;
                                                                        unsigned int v419 = (char *)(v418 + 2);
                                                                        uint64_t v420 = v421;
                                                                        goto LABEL_880;
                                                                      }
                                                                      int v392 = 1;
                                                                      while (v391 != (const llvm::Value **)-4096)
                                                                      {
                                                                        int v393 = v389 + v392++;
                                                                        uint64_t v389 = v393 & (v388 - 1);
                                                                        uint64_t v391 = *(const llvm::Value ***)(v387 + 16 * v389);
                                                                        if (v391 == a2)
                                                                        {
                                                                          int v390 = (const llvm::Value ***)(v387 + 16 * v389);
                                                                          goto LABEL_879;
                                                                        }
                                                                      }
                                                                    }
                                                                    int v390 = (const llvm::Value ***)(v387 + 16 * v388);
                                                                    goto LABEL_879;
                                                                  }
                                                                  goto LABEL_675;
                                                                }
LABEL_650:
                                                                char v311 = *(const llvm::Value **)(v278 - 64);
                                                                if (!v311) {
                                                                  goto LABEL_667;
                                                                }
                                                                unint64_t v598 = *(llvm::Instruction **)(v278 - 64);
                                                                uint64_t v312 = *(const llvm::Value **)(v278 - 32);
                                                                if (!v312) {
                                                                  goto LABEL_667;
                                                                }
                                                                goto LABEL_652;
                                                              }
LABEL_659:
                                                              LOWORD(v604) = 257;
                                                              uint64_t v52 = __s2;
                                                              char v53 = 29;
                                                              return llvm::BinaryOperator::Create(v53, v54, (uint64_t)v55, (const char **)v52, 0);
                                                            }
                                                            uint64_t v280 = *(void *)(v275 - 64);
                                                            uint64_t v281 = *(void *)(v275 - 32);
                                                            if (!v281) {
                                                              goto LABEL_621;
                                                            }
                                                            unsigned int v282 = *(unsigned __int8 *)(v281 + 16);
                                                            if (v282 > 0x14) {
                                                              goto LABEL_621;
                                                            }
                                                            if (v282 == 16)
                                                            {
                                                              uint64_t v283 = *(unsigned int *)(v281 + 32);
                                                              if (v283 < 0x41)
                                                              {
                                                                if (*(void *)(v281 + 24)) {
                                                                  goto LABEL_583;
                                                                }
LABEL_584:
                                                                int v284 = *(unsigned __int8 *)(v280 + 16);
                                                                if (v284 == 5)
                                                                {
                                                                  if (*(_WORD *)(v280 + 18) != 15) {
                                                                    goto LABEL_621;
                                                                  }
                                                                  uint64_t v299 = v280
                                                                       - 32 * (*(_DWORD *)(v280 + 20) & 0x7FFFFFF);
                                                                  __int16 v285 = *(uint64_t **)v299;
                                                                  if (!*(void *)v299) {
                                                                    goto LABEL_621;
                                                                  }
                                                                  uint64_t v286 = *(uint64_t **)(v299 + 32);
                                                                }
                                                                else
                                                                {
                                                                  if (v284 != 43) {
                                                                    goto LABEL_621;
                                                                  }
                                                                  __int16 v285 = *(uint64_t **)(v280 - 64);
                                                                  if (!v285) {
                                                                    goto LABEL_621;
                                                                  }
                                                                  uint64_t v286 = *(uint64_t **)(v280 - 32);
                                                                }
                                                                if (v276 == v286)
                                                                {
                                                                  uint64_t v306 = *(void *)(v275 - 96);
                                                                  LOWORD(v604) = 257;
                                                                  uint64_t v303 = (uint64_t)v276;
                                                                  return sub_1CC199EFC(v306, v285, v303, (const char **)__s2, 0, 0);
                                                                }
LABEL_621:
                                                                if (!v280) {
                                                                  goto LABEL_572;
                                                                }
                                                                unsigned int v300 = *(unsigned __int8 *)(v280 + 16);
                                                                if (v300 > 0x14) {
                                                                  goto LABEL_572;
                                                                }
                                                                if (v300 == 16)
                                                                {
                                                                  uint64_t v301 = *(unsigned int *)(v280 + 32);
                                                                  if (v301 < 0x41)
                                                                  {
                                                                    if (*(void *)(v280 + 24)) {
                                                                      goto LABEL_626;
                                                                    }
LABEL_627:
                                                                    int v302 = *(unsigned __int8 *)(v281 + 16);
                                                                    if (v302 == 5)
                                                                    {
                                                                      if (*(_WORD *)(v281 + 18) != 15) {
                                                                        goto LABEL_572;
                                                                      }
                                                                      uint64_t v305 = (uint64_t *)(v281
                                                                                       - 32
                                                                                       * (*(_DWORD *)(v281 + 20) & 0x7FFFFFF));
                                                                      uint64_t v303 = *v305;
                                                                      if (!*v305) {
                                                                        goto LABEL_572;
                                                                      }
                                                                      uint64_t v304 = v305[4];
                                                                    }
                                                                    else
                                                                    {
                                                                      if (v302 != 43) {
                                                                        goto LABEL_572;
                                                                      }
                                                                      uint64_t v303 = *(void *)(v281 - 64);
                                                                      if (!v303) {
                                                                        goto LABEL_572;
                                                                      }
                                                                      uint64_t v304 = *(void *)(v281 - 32);
                                                                    }
                                                                    if (v276 != (uint64_t *)v304) {
                                                                      goto LABEL_572;
                                                                    }
                                                                    uint64_t v306 = *(void *)(v275 - 96);
                                                                    LOWORD(v604) = 257;
                                                                    __int16 v285 = v276;
                                                                    return sub_1CC199EFC(v306, v285, v303, (const char **)__s2, 0, 0);
                                                                  }
                                                                  int v564 = 0;
                                                                  int64_t v565 = (unint64_t)(v301 + 63) >> 6;
                                                                  do
                                                                  {
                                                                    BOOL v111 = v565-- < 1;
                                                                    if (v111) {
                                                                      break;
                                                                    }
                                                                    unint64_t v566 = *(void *)(*(void *)(v280 + 24)
                                                                                     + 8 * v565);
                                                                    v564 += __clz(v566);
                                                                  }
                                                                  while (!v566);
                                                                  int v567 = v301 | 0xFFFFFFC0;
                                                                  if ((v301 & 0x3F) == 0) {
                                                                    int v567 = 0;
                                                                  }
                                                                  if (v564 + v567 == v301) {
                                                                    goto LABEL_627;
                                                                  }
                                                                }
                                                                else if (v300 == 17)
                                                                {
                                                                  if (sub_1CB844168(v280, 0.0)) {
                                                                    goto LABEL_627;
                                                                  }
                                                                }
                                                                else if (v300 - 18 < 3 || v300 == 13)
                                                                {
                                                                  goto LABEL_627;
                                                                }
LABEL_626:
                                                                if ((sub_1CC03F414((uint64_t)__s2, (llvm::Constant *)v280) & 1) == 0)goto LABEL_572; {
                                                                goto LABEL_627;
                                                                }
                                                              }
                                                              int v560 = 0;
                                                              int64_t v561 = (unint64_t)(v283 + 63) >> 6;
                                                              do
                                                              {
                                                                BOOL v111 = v561-- < 1;
                                                                if (v111) {
                                                                  break;
                                                                }
                                                                unint64_t v562 = *(void *)(*(void *)(v281 + 24)
                                                                                 + 8 * v561);
                                                                v560 += __clz(v562);
                                                              }
                                                              while (!v562);
                                                              int v563 = v283 | 0xFFFFFFC0;
                                                              if ((v283 & 0x3F) == 0) {
                                                                int v563 = 0;
                                                              }
                                                              if (v560 + v563 == v283) {
                                                                goto LABEL_584;
                                                              }
                                                            }
                                                            else if (v282 == 17)
                                                            {
                                                              if (sub_1CB844168(*(void *)(v275 - 32), 0.0)) {
                                                                goto LABEL_584;
                                                              }
                                                            }
                                                            else if (v282 - 18 < 3 || v282 == 13)
                                                            {
                                                              goto LABEL_584;
                                                            }
LABEL_583:
                                                            if ((sub_1CC03F414((uint64_t)__s2, (llvm::Constant *)v281) & 1) == 0) {
                                                              goto LABEL_621;
                                                            }
                                                            goto LABEL_584;
                                                          }
                                                          unint64_t v266 = *v426;
                                                        }
                                                        else
                                                        {
                                                          unint64_t v266 = *(void *)v608;
                                                        }
                                                        int v267 = (int)v614;
                                                        if (v266 <= v614) {
                                                          int v267 = v266;
                                                        }
                                                        goto LABEL_541;
                                                      }
LABEL_489:
                                                      uint64_t v247 = 0;
                                                      goto LABEL_490;
                                                    }
LABEL_518:
                                                    int v255 = 1;
                                                    goto LABEL_519;
                                                  }
                                                }
LABEL_1227:
                                                int v255 = 1;
                                                goto LABEL_1228;
                                              }
                                              unsigned int v444 = *(void **)v247;
LABEL_932:
                                              std::string __dst = v444;
                                              goto LABEL_1141;
                                            }
                                          }
                                        }
                                        __s2[0] = &v608;
                                        __s2[1] = &v599;
                                        *(void *)&long long v603 = 0;
                                        int v435 = *(unsigned __int8 *)(v247 + 16);
                                        if (v435 == 5)
                                        {
                                          if (*(_WORD *)(v247 + 18) != 26) {
                                            goto LABEL_1227;
                                          }
                                          unsigned int v436 = (llvm::APInt **)(v247 - 32 * (*(_DWORD *)(v247 + 20) & 0x7FFFFFF));
                                          if (!*v436) {
                                            goto LABEL_1227;
                                          }
                                          v608 = *v436;
                                          if ((sub_1CBF5295C((uint64_t)&__s2[1], v436[4]) & 1) == 0) {
                                            goto LABEL_1227;
                                          }
                                        }
                                        else
                                        {
                                          if (v435 != 54) {
                                            goto LABEL_1227;
                                          }
                                          if (!*(void *)(v247 - 64)) {
                                            goto LABEL_1227;
                                          }
                                          v608 = *(llvm::APInt **)(v247 - 64);
                                          if (!sub_1CBF528D8((uint64_t)&__s2[1], *(unsigned __int8 **)(v247 - 32)))goto LABEL_1227; {
                                        }
                                          }
                                        unint64_t v437 = *((unsigned int *)v599 + 2);
                                        if (v437 > 0x40) {
                                          operator new[]();
                                        }
                                        if (v437) {
                                          unint64_t v438 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v437;
                                        }
                                        else {
                                          LOBYTE(v438) = 0;
                                        }
                                        uint64_t v247 = v438 & 1;
                                        std::string __dst = (void *)v247;
                                        unsigned int v607 = v437;
                                        unint64_t v439 = v599;
                                        uint64_t v440 = *((unsigned int *)v599 + 2);
                                        if (v440 < 0x41) {
                                          goto LABEL_925;
                                        }
                                        int v587 = 0;
                                        int64_t v588 = (unint64_t)(v440 + 63) >> 6;
                                        unint64_t v439 = *(llvm::APInt **)v599;
                                        do
                                        {
                                          BOOL v111 = v588-- < 1;
                                          if (v111) {
                                            break;
                                          }
                                          unint64_t v589 = *((void *)v439 + v588);
                                          v587 += __clz(v589);
                                        }
                                        while (!v589);
                                        int v590 = v440 | 0xFFFFFFC0;
                                        if ((v440 & 0x3F) == 0) {
                                          int v590 = 0;
                                        }
                                        if ((v440 - v587 - v590) <= 0x40)
                                        {
LABEL_925:
                                          LODWORD(v441) = v437;
                                          if (*(void *)v439 <= v437) {
                                            uint64_t v441 = *(void *)v439;
                                          }
                                        }
                                        else
                                        {
                                          LODWORD(v441) = v437;
                                        }
                                        uint64_t v442 = v247 << v441;
                                        if (v437 == v441) {
                                          uint64_t v442 = 0;
                                        }
                                        if (v437) {
                                          unint64_t v443 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v437;
                                        }
                                        else {
                                          unint64_t v443 = 0;
                                        }
                                        unsigned int v444 = (void *)(v443 & v442);
                                        goto LABEL_932;
                                      }
                                      if (v208 == 5)
                                      {
                                        if (*(_WORD *)(v207 + 18) != 15) {
                                          goto LABEL_487;
                                        }
                                        uint64_t v246 = (llvm::Constant **)(v207 - 32 * (*(_DWORD *)(v207 + 20) & 0x7FFFFFF));
                                        BOOL v224 = *v246;
                                        if (!*v246) {
                                          goto LABEL_487;
                                        }
                                        if (*((unsigned char *)v224 + 16) == 5) {
                                          goto LABEL_487;
                                        }
                                        v226 = v246[4];
                                        if (!v226) {
                                          goto LABEL_487;
                                        }
                                      }
                                      else
                                      {
                                        if (v208 != 43) {
                                          goto LABEL_487;
                                        }
                                        BOOL v224 = *(llvm::Constant **)(v207 - 64);
                                        if (!v224) {
                                          goto LABEL_487;
                                        }
                                        unsigned int v245 = *((unsigned __int8 *)v224 + 16);
                                        if (v245 > 0x14) {
                                          goto LABEL_487;
                                        }
                                        if (v245 == 5) {
                                          goto LABEL_487;
                                        }
                                        v226 = *(const llvm::Value **)(v207 - 32);
                                        if (!v226) {
                                          goto LABEL_487;
                                        }
                                      }
LABEL_483:
                                      unint64_t v597 = v226;
                                      if (v204 && !*(void *)(v204 + 8) || v205 && !*(void *)(v205 + 8))
                                      {
                                        uint64_t v260 = *(void *)(a1 + 24);
                                        LOWORD(v604) = 257;
                                        uint64_t v261 = sub_1CB84494C(v260, (uint64_t)v209, (uint64_t)v226, (uint64_t)__s2, 0, 0);
                                        uint64_t v55 = llvm::ConstantExpr::getAdd((llvm::ConstantExpr *)v210, v224, 0, 0);
                                        LOWORD(v604) = 257;
                                        uint64_t v52 = __s2;
                                        char v53 = 13;
                                        uint64_t v54 = v261;
                                        return llvm::BinaryOperator::Create(v53, v54, (uint64_t)v55, (const char **)v52, 0);
                                      }
                                      goto LABEL_487;
                                    }
                                    if (v211 != 5)
                                    {
                                      uint64_t v222 = (uint64_t)*(a2 - 4);
                                      int v223 = *(unsigned __int8 *)(v222 + 16);
                                      if (v223 == 5)
                                      {
                                        if (*(_WORD *)(v222 + 18) == 15)
                                        {
                                          uint64_t v237 = (llvm::Constant **)(v222 - 32 * (*(_DWORD *)(v222 + 20) & 0x7FFFFFF));
                                          BOOL v224 = *v237;
                                          if (*v237)
                                          {
                                            if (*((unsigned char *)v224 + 16) != 5)
                                            {
                                              v226 = v237[4];
                                              if (v226) {
                                                goto LABEL_483;
                                              }
                                            }
                                          }
                                        }
                                      }
                                      else if (v223 == 43)
                                      {
                                        BOOL v224 = *(llvm::Constant **)(v222 - 64);
                                        if (v224)
                                        {
                                          unsigned int v225 = *((unsigned __int8 *)v224 + 16);
                                          if (v225 <= 0x14 && v225 != 5)
                                          {
                                            v226 = *(const llvm::Value **)(v222 - 32);
                                            if (v226) {
                                              goto LABEL_483;
                                            }
                                          }
                                        }
                                      }
                                    }
                                    goto LABEL_450;
                                  }
                                  if (*((_WORD *)a2 + 9) != 13) {
                                    goto LABEL_487;
                                  }
                                  uint64_t v212 = (uint64_t *)&a2[-4 * (*((_DWORD *)a2 + 5) & 0x7FFFFFF)];
                                  uint64_t v207 = *v212;
                                  int v208 = *(unsigned __int8 *)(*v212 + 16);
                                  if (v208 == 5)
                                  {
                                    if (*(_WORD *)(v207 + 18) != 13) {
                                      goto LABEL_460;
                                    }
                                    uint64_t v227 = v207 - 32 * (*(_DWORD *)(v207 + 20) & 0x7FFFFFF);
                                    uint64_t v209 = *(llvm::Instruction **)v227;
                                    if (!*(void *)v227) {
                                      goto LABEL_460;
                                    }
                                    unint64_t v598 = *(llvm::Instruction **)v227;
                                    int v210 = *(unsigned __int8 **)(v227 + 32);
                                    if (!v210) {
                                      goto LABEL_460;
                                    }
                                    unsigned int v213 = v210[16];
                                  }
                                  else if (v208 != 41 {
                                         || (uint64_t v209 = *(llvm::Instruction **)(v207 - 64)) == 0
                                  }
                                         || (unint64_t v598 = *(llvm::Instruction **)(v207 - 64),
                                             (int v210 = *(unsigned __int8 **)(v207 - 32)) == 0)
                                         || (unsigned int v213 = v210[16], v213 > 0x14))
                                  {
LABEL_460:
                                    uint64_t v238 = v212[4];
                                    goto LABEL_461;
                                  }
                                  if (v213 != 5)
                                  {
                                    uint64_t v228 = v212[4];
                                    int v229 = *(unsigned __int8 *)(v228 + 16);
                                    if (v229 == 5)
                                    {
                                      if (*(_WORD *)(v228 + 18) == 15)
                                      {
                                        uint64_t v241 = (llvm::Constant **)(v228 - 32 * (*(_DWORD *)(v228 + 20) & 0x7FFFFFF));
                                        BOOL v224 = *v241;
                                        if (*v241)
                                        {
                                          if (*((unsigned char *)v224 + 16) != 5)
                                          {
                                            v226 = v241[4];
                                            if (v226) {
                                              goto LABEL_483;
                                            }
                                          }
                                        }
                                      }
                                    }
                                    else if (v229 == 43)
                                    {
                                      BOOL v224 = *(llvm::Constant **)(v228 - 64);
                                      if (v224)
                                      {
                                        unsigned int v230 = *((unsigned __int8 *)v224 + 16);
                                        if (v230 <= 0x14 && v230 != 5)
                                        {
                                          v226 = *(const llvm::Value **)(v228 - 32);
                                          if (v226) {
                                            goto LABEL_483;
                                          }
                                        }
                                      }
                                    }
                                  }
                                  goto LABEL_460;
                                }
                                int v218 = *(unsigned __int8 *)(v21 + 16);
                                if (v218 == 5)
                                {
                                  if (*(_WORD *)(v21 + 18) != 13) {
                                    goto LABEL_373;
                                  }
                                  int v219 = (llvm::Instruction **)(v21 - 32 * (*(_DWORD *)(v21 + 20) & 0x7FFFFFF));
                                  int v216 = *v219;
                                  if (!*v219)
                                  {
                                    uint64_t v220 = v219[4];
                                    goto LABEL_442;
                                  }
                                  unint64_t v598 = *v219;
                                  uint64_t v220 = v219[4];
                                }
                                else
                                {
                                  if (v218 != 41) {
                                    goto LABEL_373;
                                  }
                                  int v219 = (llvm::Instruction **)(v21 - 64);
                                  int v216 = *(llvm::Instruction **)(v21 - 64);
                                  if (!v216)
                                  {
                                    uint64_t v220 = *(llvm::Instruction **)(v21 - 32);
                                    goto LABEL_442;
                                  }
                                  unint64_t v598 = *(llvm::Instruction **)(v21 - 64);
                                  uint64_t v220 = *(llvm::Instruction **)(v21 - 32);
                                }
                                if (v20 == v220)
                                {
LABEL_444:
                                  uint64_t v236 = *(void *)(a1 + 24);
                                  __s2[0] = "reass.add";
                                  LOWORD(v604) = 259;
                                  uint64_t v233 = llvm::ConstantInt::get(*(llvm::ConstantInt **)v20, 1uLL, 0);
                                  uint64_t v234 = v236;
                                  uint64_t v235 = (uint64_t)v20;
                                  goto LABEL_445;
                                }
LABEL_442:
                                if (!v220) {
                                  goto LABEL_373;
                                }
                                unint64_t v598 = v220;
                                int v216 = v220;
                                if (v20 != *v219) {
                                  goto LABEL_373;
                                }
                                goto LABEL_444;
                              }
                              int v214 = *((unsigned __int8 *)v20 + 16);
                              if (v214 == 5)
                              {
                                if (*((_WORD *)v20 + 9) != 13) {
                                  goto LABEL_371;
                                }
                                uint64_t v215 = (llvm::Instruction **)((char *)v20 - 32 * (*((_DWORD *)v20 + 5) & 0x7FFFFFF));
                                int v216 = *v215;
                                if (*v215)
                                {
                                  unint64_t v598 = *v215;
                                  uint64_t v217 = v215[4];
LABEL_411:
                                  if ((llvm::Instruction *)v21 == v217) {
                                    goto LABEL_440;
                                  }
                                  goto LABEL_438;
                                }
                                uint64_t v217 = v215[4];
                              }
                              else
                              {
                                if (v214 != 41) {
                                  goto LABEL_371;
                                }
                                uint64_t v215 = (llvm::Instruction **)((char *)v20 - 64);
                                int v216 = (llvm::Instruction *)*((void *)v20 - 8);
                                if (v216)
                                {
                                  unint64_t v598 = (llvm::Instruction *)*((void *)v20 - 8);
                                  uint64_t v217 = (llvm::Instruction *)*((void *)v20 - 4);
                                  goto LABEL_411;
                                }
                                uint64_t v217 = (llvm::Instruction *)*((void *)v20 - 4);
                              }
LABEL_438:
                              if (!v217) {
                                goto LABEL_371;
                              }
                              unint64_t v598 = v217;
                              int v216 = v217;
                              if ((llvm::Instruction *)v21 != *v215) {
                                goto LABEL_371;
                              }
LABEL_440:
                              uint64_t v232 = *(void *)(a1 + 24);
                              __s2[0] = "reass.add";
                              LOWORD(v604) = 259;
                              uint64_t v233 = llvm::ConstantInt::get(*(llvm::ConstantInt **)v21, 1uLL, 0);
                              uint64_t v234 = v232;
                              uint64_t v235 = v21;
LABEL_445:
                              uint64_t v55 = sub_1CC242524(v234, v235, (uint64_t)v233, (uint64_t)__s2, 0, 0);
                              __int16 v617 = 257;
                              uint64_t v52 = &__src;
                              char v53 = 13;
                              uint64_t v54 = v216;
                              return llvm::BinaryOperator::Create(v53, v54, (uint64_t)v55, (const char **)v52, 0);
                            }
                          }
                          else
                          {
                            if (v200 != 41) {
                              goto LABEL_369;
                            }
                            int v201 = sub_1CBF686A0((void **)&__src, 30, *(void *)(v199 - 64));
                            uint64_t v202 = *(void *)(v199 - 32);
                            if (!v201 || !v202)
                            {
                              if (!sub_1CBF686A0((void **)&__src, 30, v202)) {
                                goto LABEL_369;
                              }
                              uint64_t v202 = *(void *)(v199 - 64);
                              if (!v202) {
                                goto LABEL_369;
                              }
                            }
                          }
                          *uint64_t v615 = (const llvm::Value *)v202;
                          if (!sub_1CBF5250C((uint64_t)&v616, *(a2 - 4))) {
                            goto LABEL_369;
                          }
LABEL_368:
                          uint64_t v55 = v597;
                          uint64_t v54 = v598;
                          LOWORD(v604) = 257;
                          uint64_t v52 = __s2;
                          char v53 = 15;
                          return llvm::BinaryOperator::Create(v53, v54, (uint64_t)v55, (const char **)v52, 0);
                        }
                        if (sub_1CBF686A0((void **)&v603, 30, *v5)) {
                          goto LABEL_368;
                        }
                        goto LABEL_355;
                      }
                      uint64_t v181 = (llvm::ConstantInt ***)v610;
                      unsigned int v361 = *(_DWORD *)(v601 + 8);
                      unsigned int v600 = v361;
                      if (v361 > 0x40) {
                        operator new[]();
                      }
                      if (v361) {
                        unint64_t v362 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v361;
                      }
                      else {
                        unint64_t v362 = 0;
                      }
                      unint64_t v599 = (llvm::APInt *)(v362 & ~*(void *)v601);
                      unsigned int v621 = v361;
                      unint64_t v620 = (unint64_t)v599;
                      unsigned int v600 = 0;
                      goto LABEL_831;
                    }
                  }
                  else
                  {
                    if (v79 != 41) {
                      goto LABEL_313;
                    }
                    if (!*(void *)(v65 - 64)) {
                      goto LABEL_313;
                    }
                    uint64_t v612 = *(llvm::APInt **)(v65 - 64);
                    if (!sub_1CBF5250C((uint64_t)&__s2[1], *(llvm::Constant **)(v65 - 32))) {
                      goto LABEL_313;
                    }
                  }
                  __s2[0] = &v611;
                  __s2[1] = &v608;
                  *(void *)&long long v603 = 0;
                  int v81 = *((unsigned __int8 *)v78 + 16);
                  if (v81 == 5)
                  {
                    if (*((_WORD *)v78 + 9) != 30
                      || (uint64_t v88 = (llvm::APInt **)((char *)v78 - 32 * (*((_DWORD *)v78 + 5) & 0x7FFFFFF)), !*v88)
                      || (v611 = *v88, (sub_1CBF5295C((uint64_t)&__s2[1], v88[4]) & 1) == 0))
                    {
LABEL_161:
                      __s2[0] = &v611;
                      __s2[1] = &v608;
                      *(void *)&long long v603 = 0;
                      int v90 = *((unsigned __int8 *)v612 + 16);
                      if (v90 == 5)
                      {
                        if (*((_WORD *)v612 + 9) != 30) {
                          goto LABEL_313;
                        }
                        unsigned int v91 = (llvm::APInt **)((char *)v612 - 32 * (*((_DWORD *)v612 + 5) & 0x7FFFFFF));
                        if (!*v91) {
                          goto LABEL_313;
                        }
                        v611 = *v91;
                        if ((sub_1CBF5295C((uint64_t)&__s2[1], v91[4]) & 1) == 0) {
                          goto LABEL_313;
                        }
                      }
                      else
                      {
                        if (v90 != 58) {
                          goto LABEL_313;
                        }
                        if (!*((void *)v612 - 8)) {
                          goto LABEL_313;
                        }
                        v611 = (llvm::APInt *)*((void *)v612 - 8);
                        if (!sub_1CBF528D8((uint64_t)&__s2[1], *((unsigned __int8 **)v612 - 4))) {
                          goto LABEL_313;
                        }
                      }
                      __s2[0] = &v610;
                      __s2[1] = &v601;
                      *(void *)&long long v603 = 0;
                      int v92 = *((unsigned __int8 *)v611 + 16);
                      if (v92 == 5)
                      {
                        if (*((_WORD *)v611 + 9) != 29) {
                          goto LABEL_298;
                        }
                        uint64_t v129 = (llvm::Constant **)((char *)v611 - 32 * (*((_DWORD *)v611 + 5) & 0x7FFFFFF));
                        if (!*v129) {
                          goto LABEL_298;
                        }
                        uint64_t v610 = (uint64_t)*v129;
                        if (!sub_1CBF5295C((uint64_t)&__s2[1], v129[4])) {
                          goto LABEL_298;
                        }
                      }
                      else
                      {
                        if (v92 != 57) {
                          goto LABEL_298;
                        }
                        if (!*((void *)v611 - 8)) {
                          goto LABEL_298;
                        }
                        uint64_t v610 = *((void *)v611 - 8);
                        if ((sub_1CBF528D8((uint64_t)&__s2[1], *((unsigned __int8 **)v611 - 4)) & 1) == 0) {
                          goto LABEL_298;
                        }
                      }
                      unsigned int v130 = *((_DWORD *)v608 + 2);
                      LODWORD(v614) = v130;
                      if (v130 > 0x40) {
                        operator new[]();
                      }
                      uint64_t v131 = ~*(void *)v608;
                      if (v130) {
                        unint64_t v132 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v130;
                      }
                      else {
                        unint64_t v132 = 0;
                      }
                      int64_t v133 = (const void *)(v132 & v131);
                      __src = (void *)(v132 & v131);
                      LODWORD(v614) = 0;
                      uint64_t v167 = *(unsigned int *)(v601 + 8);
                      if (v167 > 0x40) {
                        BOOL v168 = memcmp(*(const void **)v601, v133, ((unint64_t)(v167 + 63) >> 3) & 0x3FFFFFF8) == 0;
                      }
                      else {
                        BOOL v168 = *(void *)v601 == (void)v133;
                      }
                      if (v168)
                      {
                        unsigned int v170 = (void *)v610;
                        LOWORD(v604) = 257;
                        unint64_t v171 = *(llvm::ConstantInt ***)v610;
                        uint64_t v172 = llvm::ConstantInt::get(**(llvm::ConstantInt ***)v610, v608, v93);
                        if ((v171[1] & 0xFE) == 0x12) {
                          uint64_t v172 = llvm::ConstantVector::getSplat((llvm::Type *)(*((unsigned int *)v171 + 8) | ((unint64_t)(*((_DWORD *)v171 + 2) == 19) << 32)), (uint64_t)v172);
                        }
                        uint64_t v173 = sub_1CBF52474(v64, v170, (uint64_t)v172, (uint64_t)__s2);
                        __s2[0] = "sub";
                        LOWORD(v604) = 259;
                        uint64_t v174 = v64;
                        uint64_t v175 = (uint64_t)v78;
LABEL_837:
                        unsigned int v11 = sub_1CB84494C(v174, v175, (uint64_t)v173, (uint64_t)__s2, 0, 0);
                        if (v11) {
                          goto LABEL_3;
                        }
                        goto LABEL_337;
                      }
LABEL_298:
                      __s2[0] = &v610;
                      __s2[1] = &v601;
                      *(void *)&long long v603 = 0;
                      int v176 = *((unsigned __int8 *)v611 + 16);
                      if (v176 == 5)
                      {
                        if (*((_WORD *)v611 + 9) != 28) {
                          goto LABEL_313;
                        }
                        uint64_t v178 = (llvm::Constant **)((char *)v611 - 32 * (*((_DWORD *)v611 + 5) & 0x7FFFFFF));
                        if (!*v178) {
                          goto LABEL_313;
                        }
                        uint64_t v610 = (uint64_t)*v178;
                        if (!sub_1CBF5295C((uint64_t)&__s2[1], v178[4])) {
                          goto LABEL_313;
                        }
                      }
                      else
                      {
                        if (v176 != 56) {
                          goto LABEL_313;
                        }
                        if (!*((void *)v611 - 8)) {
                          goto LABEL_313;
                        }
                        uint64_t v610 = *((void *)v611 - 8);
                        if ((sub_1CBF528D8((uint64_t)&__s2[1], *((unsigned __int8 **)v611 - 4)) & 1) == 0) {
                          goto LABEL_313;
                        }
                      }
                      int v179 = v608;
                      uint64_t v180 = *((unsigned int *)v608 + 2);
                      if (v180 > 0x40)
                      {
                        if (memcmp(*(const void **)v608, *(const void **)v601, ((unint64_t)(v180 + 63) >> 3) & 0x3FFFFFF8))
                        {
                          goto LABEL_313;
                        }
                      }
                      else if (*(void *)v608 != *(void *)v601)
                      {
                        goto LABEL_313;
                      }
                      uint64_t v181 = (llvm::ConstantInt ***)v610;
                      unsigned int v182 = *((_DWORD *)v179 + 2);
                      unsigned int v619 = v182;
                      if (v182 > 0x40) {
                        operator new[]();
                      }
                      if (v182) {
                        unint64_t v183 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v182;
                      }
                      else {
                        unint64_t v183 = 0;
                      }
                      uint64_t v618 = (llvm::Instruction *)(v183 & ~*(void *)v179);
                      unsigned int v621 = v182;
                      unint64_t v620 = (unint64_t)v618;
                      unsigned int v619 = 0;
LABEL_831:
                      LOWORD(v604) = 257;
                      v399 = *v181;
                      uint64_t v400 = llvm::ConstantInt::get(**v181, (llvm::LLVMContext *)&v620, v177);
                      if ((v399[1] & 0xFE) == 0x12) {
                        uint64_t v400 = llvm::ConstantVector::getSplat((llvm::Type *)(*((unsigned int *)v399 + 8) | ((unint64_t)(*((_DWORD *)v399 + 2) == 19) << 32)), (uint64_t)v400);
                      }
                      uint64_t v401 = sub_1CB844AF4(v64, v181, (uint64_t)v400, (uint64_t)__s2);
                      if (v621 >= 0x41 && v620) {
                        MEMORY[0x1D25D9CB0](v620, 0x1000C8000313F17);
                      }
                      __s2[0] = "sub";
                      LOWORD(v604) = 259;
                      uint64_t v174 = v64;
                      uint64_t v175 = (uint64_t)v78;
                      uint64_t v173 = v401;
                      goto LABEL_837;
                    }
                  }
                  else
                  {
                    if (v81 != 58) {
                      goto LABEL_161;
                    }
                    if (!*((void *)v78 - 8)) {
                      goto LABEL_161;
                    }
                    v611 = (llvm::APInt *)*((void *)v78 - 8);
                    if (!sub_1CBF528D8((uint64_t)&__s2[1], *((unsigned __int8 **)v78 - 4))) {
                      goto LABEL_161;
                    }
                  }
                  int v89 = v612;
                  uint64_t v612 = v78;
                  uint64_t v78 = v89;
                  goto LABEL_161;
                }
                uint64_t v78 = (llvm::APInt *)v65;
                uint64_t v65 = v66;
                goto LABEL_127;
              }
              *(void *)__s2[1] = v63;
              uint64_t v55 = v597;
              LOWORD(v604) = 257;
              uint64_t v52 = __s2;
              char v53 = 15;
              uint64_t v54 = v20;
              return llvm::BinaryOperator::Create(v53, v54, (uint64_t)v55, (const char **)v52, 0);
            }
          }
          else
          {
            if (v56 != 43) {
              goto LABEL_91;
            }
            if (!sub_1CBF535C4((uint64_t)__s2, *((llvm::Constant **)v20 - 8))) {
              goto LABEL_91;
            }
            uint64_t v57 = *((void *)v20 - 4);
            if (!v57) {
              goto LABEL_91;
            }
          }
          *(void *)__s2[1] = v57;
          __s2[1] = &v597;
          int v60 = *(unsigned __int8 *)(v21 + 16);
          if (v60 == 5)
          {
            if (*(_WORD *)(v21 + 18) != 15) {
              goto LABEL_149;
            }
            if (!sub_1CC03F414((uint64_t)__s2, *(llvm::Constant **)(v21 - 32 * (*(_DWORD *)(v21 + 20) & 0x7FFFFFF))))goto LABEL_149; {
            uint64_t v61 = *(void *)(v21 - 32 * (*(_DWORD *)(v21 + 20) & 0x7FFFFFF) + 32);
            }
            if (!v61) {
              goto LABEL_149;
            }
          }
          else if (v60 != 43 {
                 || !sub_1CBF535C4((uint64_t)__s2, *(llvm::Constant **)(v21 - 64))
          }
                 || (uint64_t v61 = *(void *)(v21 - 32)) == 0)
          {
LABEL_149:
            uint64_t v55 = v598;
            LOWORD(v604) = 257;
            uint64_t v52 = __s2;
            char v53 = 15;
            uint64_t v54 = (const llvm::Value *)v21;
            return llvm::BinaryOperator::Create(v53, v54, (uint64_t)v55, (const char **)v52, 0);
          }
          *(void *)__s2[1] = v61;
          uint64_t v83 = *(void *)(a1 + 24);
          LOWORD(v604) = 257;
          uint64_t v84 = sub_1CB844A3C(v83, v598, (uint64_t)v597, (uint64_t)__s2, 0, 0);
          __int16 v617 = 257;
          return llvm::BinaryOperator::CreateNeg(v84, (llvm::Value *)&__src, 0, v85);
        }
        int v105 = *((_DWORD *)v20 + 5);
        if ((v105 & 0x40000000) != 0) {
          unsigned int v106 = (uint64_t *)*((void *)v20 - 1);
        }
        else {
          unsigned int v106 = (uint64_t *)((char *)v20 - 32 * (v105 & 0x7FFFFFF));
        }
        uint64_t v107 = *v106;
        unsigned int v108 = *(unsigned __int8 *)(v107 + 16);
        if (v108 < 0x1C)
        {
          if (v108 != 5) {
            goto LABEL_63;
          }
          unsigned int v114 = *(unsigned __int16 *)(v107 + 18);
          HIDWORD(v124) = v114 - 13;
          LODWORD(v124) = v114 - 13;
          unsigned int v123 = v124 >> 1;
          BOOL v111 = v123 > 6;
          int v125 = (1 << v123) & 0x47;
          if (v111 || v125 == 0) {
            goto LABEL_63;
          }
        }
        else
        {
          HIDWORD(v110) = v108 - 41;
          LODWORD(v110) = v108 - 41;
          unsigned int v109 = v110 >> 1;
          BOOL v111 = v109 > 6;
          int v112 = (1 << v109) & 0x47;
          if (v111 || v112 == 0) {
            goto LABEL_63;
          }
          unsigned int v114 = v108 - 28;
        }
        if (v114 != 13 || (*(unsigned char *)(v107 + 17) & 4) == 0) {
          goto LABEL_63;
        }
        int v127 = *(_DWORD *)(v107 + 20);
        if ((v127 & 0x40000000) != 0)
        {
          if (!**(void **)(v107 - 8)) {
            goto LABEL_63;
          }
          uint64_t v618 = **(llvm::Instruction ***)(v107 - 8);
          uint64_t v128 = *(void *)(v107 - 8);
        }
        else
        {
          uint64_t v128 = v107 - 32 * (v127 & 0x7FFFFFF);
          if (!*(void *)v128) {
            goto LABEL_63;
          }
          uint64_t v618 = *(llvm::Instruction **)v128;
        }
        uint64_t v394 = *(unsigned __int8 **)(v128 + 32);
        if (v394 && v394[16] <= 0x14u)
        {
          uint64_t v612 = *(llvm::APInt **)(v128 + 32);
          int v395 = sub_1CC56C0C0((llvm *)0x28, (llvm::detail::IEEEFloat *)v394, (llvm::Constant *)v41, 0);
          Add = llvm::ConstantExpr::getAdd(v395, (llvm::Constant *)v21, 0, 0);
          uint64_t v119 = v618;
          __int16 v617 = 257;
          if (*(void *)v618 != v41)
          {
            if (*((unsigned __int8 *)v618 + 16) <= 0x14u)
            {
              uint64_t v406 = (*(uint64_t (**)(void, uint64_t, llvm::Instruction *, uint64_t))(**(void **)(v42 + 72)
                                                                                              + 224))(*(void *)(v42 + 72), 40, v618, v41);
              uint64_t v119 = (llvm::Instruction *)v406;
              if (v406)
              {
                if (*(unsigned __int8 *)(v406 + 16) >= 0x1Cu)
                {
                  (*(void (**)(void, uint64_t, void **, void, void))(**(void **)(v42 + 80) + 16))(*(void *)(v42 + 80), v406, &__src, *(void *)(v42 + 48), *(void *)(v42 + 56));
                  uint64_t v591 = *(unsigned int *)(v42 + 8);
                  if (v591)
                  {
                    uint64_t v592 = *(void *)v42;
                    uint64_t v593 = v592 + 16 * v591;
                    do
                    {
                      llvm::Instruction::setMetadata(v119, *(_DWORD *)v592, *(llvm::MDNode **)(v592 + 8));
                      v592 += 16;
                    }
                    while (v592 != v593);
                  }
                }
              }
            }
            else
            {
              LOWORD(v604) = 257;
              uint64_t v119 = llvm::CastInst::Create(40, (uint64_t)v618, v41, (const char **)__s2, 0);
              (*(void (**)(void, llvm::Instruction *, void **, void, void))(**(void **)(v42 + 80)
                                                                                           + 16))(*(void *)(v42 + 80), v119, &__src, *(void *)(v42 + 48), *(void *)(v42 + 56));
              uint64_t v396 = *(unsigned int *)(v42 + 8);
              if (v396)
              {
                uint64_t v397 = *(void *)v42;
                uint64_t v398 = v397 + 16 * v396;
                do
                {
                  llvm::Instruction::setMetadata(v119, *(_DWORD *)v397, *(llvm::MDNode **)(v397 + 8));
                  v397 += 16;
                }
                while (v397 != v398);
              }
            }
          }
LABEL_851:
          LOWORD(v604) = 257;
          Not = llvm::BinaryOperator::Create(13, v119, (uint64_t)Add, (const char **)__s2, 0);
          if (Not) {
            return Not;
          }
          goto LABEL_69;
        }
        goto LABEL_63;
      }
      unint64_t v14 = sub_1CC9D74E0(a1, a2, v17, v18, v19);
      if (v14) {
        return (llvm::Value *)v14;
      }
      unint64_t v599 = 0;
      int v23 = *((unsigned __int8 *)v20 + 16);
      if (v23 == 43)
      {
        uint64_t v24 = (unsigned __int8 *)*((void *)v20 - 8);
        if (!v24) {
          goto LABEL_27;
        }
        if (v24[16] > 0x14u) {
          goto LABEL_27;
        }
        int v25 = (llvm::APInt *)*((void *)v20 - 4);
        if (!v25) {
          goto LABEL_27;
        }
      }
      else if (v23 != 5 {
             || *((_WORD *)v20 + 9) != 15
      }
             || (v26 = (char *)v20 - 32 * (*((_DWORD *)v20 + 5) & 0x7FFFFFF), (uint64_t v24 = *(unsigned __int8 **)v26) == 0)
             || (int v25 = (llvm::APInt *)*((void *)v26 + 4)) == 0)
      {
LABEL_27:
        uint64_t v28 = *((void *)v20 + 1);
        if (!v28 || *(void *)(v28 + 8)) {
          goto LABEL_29;
        }
        if (v23 == 43)
        {
          if (!*((void *)v20 - 8)) {
            goto LABEL_29;
          }
          unint64_t v599 = (llvm::APInt *)*((void *)v20 - 8);
          uint64_t v74 = *((void *)v20 - 4);
          if (!v74) {
            goto LABEL_29;
          }
        }
        else
        {
          if (v23 != 5) {
            goto LABEL_29;
          }
          if (*((_WORD *)v20 + 9) != 15) {
            goto LABEL_29;
          }
          int v82 = (char *)v20 - 32 * (*((_DWORD *)v20 + 5) & 0x7FFFFFF);
          if (!*(void *)v82) {
            goto LABEL_29;
          }
          unint64_t v599 = *(llvm::APInt **)v82;
          uint64_t v74 = *((void *)v82 + 4);
          if (!v74) {
            goto LABEL_29;
          }
        }
        if (sub_1CBF687D0((uint64_t)__s2, (llvm::Constant *)v21))
        {
          uint64_t v76 = *(void *)(a1 + 24);
          LOWORD(v604) = 257;
          uint64_t v37 = sub_1CC2427E8(v76, v74, (uint64_t)__s2, v75);
          uint64_t v38 = (uint64_t)v599;
          __int16 v617 = 257;
          unint64_t v39 = &__src;
          char v40 = 13;
          goto LABEL_43;
        }
LABEL_29:
        __s2[0] = &v599;
        if (sub_1CBC5BE40((void **)__s2, (uint64_t)v20))
        {
          unsigned int v29 = v599;
          int v30 = *(llvm::Type **)v599;
          if ((*(_DWORD *)(*(void *)v599 + 8) & 0xFE) == 0x12) {
            int v30 = (llvm::Type *)**((void **)v30 + 2);
          }
          if (llvm::Type::getPrimitiveSizeInBits(v30) == 1)
          {
            uint64_t v31 = (llvm::Constant *)llvm::ConstantInt::get(*(llvm::ConstantInt **)v21, 1uLL, 0);
            Sub = (uint64_t *)llvm::ConstantExpr::getAdd((llvm::ConstantExpr *)v21, v31, 0, 0);
LABEL_39:
            LOWORD(v604) = 257;
            uint64_t v35 = sub_1CC199EFC((uint64_t)v29, Sub, v21, (const char **)__s2, 0, 0);
LABEL_44:
            Not = v35;
LABEL_45:
            if (Not) {
              return Not;
            }
            unint64_t v20 = *(a2 - 8);
            uint64_t v21 = (uint64_t)*(a2 - 4);
            unsigned int v22 = *(unsigned __int8 *)(v21 + 16);
            goto LABEL_47;
          }
        }
        __s2[0] = &v599;
        if (sub_1CBC5BEAC((void **)__s2, (uint64_t)v20))
        {
          unsigned int v29 = v599;
          uint64_t v33 = *(llvm::Type **)v599;
          if ((*(_DWORD *)(*(void *)v599 + 8) & 0xFE) == 0x12) {
            uint64_t v33 = (llvm::Type *)**((void **)v33 + 2);
          }
          if (llvm::Type::getPrimitiveSizeInBits(v33) == 1)
          {
            uint64_t v34 = (llvm::Constant *)llvm::ConstantInt::get(*(llvm::ConstantInt **)v21, 1uLL, 0);
            Sub = (uint64_t *)llvm::ConstantExpr::getSub((llvm::ConstantExpr *)v21, v34, 0, 0);
            goto LABEL_39;
          }
        }
        __s2[0] = &v599;
        if (sub_1CBF686A0((void **)__s2, 30, (uint64_t)v20))
        {
          BOOL v36 = (llvm::Constant *)llvm::ConstantInt::get(*(llvm::ConstantInt **)v21, 1uLL, 0);
          BOOL v27 = llvm::ConstantExpr::getSub((llvm::ConstantExpr *)v21, v36, 0, 0);
          goto LABEL_42;
        }
        uint64_t v612 = 0;
        __s2[0] = &v612;
        __s2[1] = 0;
        Not = 0;
        if (!sub_1CBF528D8((uint64_t)__s2, (unsigned __int8 *)v21)) {
          goto LABEL_45;
        }
        int v70 = *((unsigned __int8 *)v20 + 16);
        if (v70 == 5)
        {
          int v86 = *((unsigned __int16 *)v20 + 9);
          if (v86 != 29
            || (v87 = (char *)v20 - 32 * (*((_DWORD *)v20 + 5) & 0x7FFFFFF), (int v71 = *(llvm **)v87) == 0)
            || (v599 = *(llvm::APInt **)v87, (uint64_t v72 = (llvm::ConstantExpr *)*((void *)v87 + 4)) == 0)
            || *((unsigned char *)v72 + 16) == 5)
          {
            v611 = 0;
            __s2[1] = &v611;
            *(void *)&long long v603 = 0;
            goto LABEL_178;
          }
        }
        else
        {
          if (v70 != 57)
          {
LABEL_175:
            v611 = 0;
            __s2[1] = &v611;
            *(void *)&long long v603 = 0;
            if (v70 == 57)
            {
LABEL_181:
              if ((sub_1CBF528D8((uint64_t)&__s2[1], *((unsigned __int8 **)v20 - 4)) & 1) == 0) {
                goto LABEL_202;
              }
LABEL_182:
              int v94 = v611;
              unsigned int v95 = *((_DWORD *)v612 + 2);
              unsigned int v621 = v95;
              if (v95 > 0x40) {
                operator new[]();
              }
              if (v95) {
                unint64_t v96 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v95;
              }
              else {
                unint64_t v96 = 0;
              }
              unint64_t v620 = v96 & ~*(void *)v612;
              llvm::APInt::operator++((uint64_t)&v620);
              unsigned int v98 = v621;
              unint64_t v99 = v620;
              unsigned int v621 = 0;
              uint64_t v100 = *((unsigned int *)v94 + 2);
              if (v100 > 0x40) {
                BOOL v101 = memcmp(*(const void **)v94, (const void *)v620, ((unint64_t)(v100 + 63) >> 3) & 0x3FFFFFF8) == 0;
              }
              else {
                BOOL v101 = *(void *)v94 == v620;
              }
              int v102 = v101;
              if (v98 >= 0x41)
              {
                if (v99)
                {
                  MEMORY[0x1D25D9CB0](v99, 0x1000C8000313F17);
                  if (v621 >= 0x41)
                  {
                    if (v620) {
                      MEMORY[0x1D25D9CB0](v620, 0x1000C8000313F17);
                    }
                  }
                }
              }
              if (v102)
              {
                uint64_t v103 = *a2;
                uint64_t v38 = (uint64_t)llvm::ConstantInt::get(*(llvm::ConstantInt **)*a2, v611, v97);
                if ((*((_DWORD *)v103 + 2) & 0xFE) == 0x12) {
                  uint64_t v38 = (uint64_t)llvm::ConstantVector::getSplat((llvm::Type *)(*((unsigned int *)v103 + 8) | ((unint64_t)(*((_DWORD *)v103 + 2) == 19) << 32)), v38);
                }
                LOWORD(v604) = 257;
                unint64_t v39 = __s2;
                char v40 = 30;
                goto LABEL_201;
              }
LABEL_202:
              unsigned int v104 = *((_DWORD *)v612 + 2);
              if (v104 > 0x40)
              {
                if (((*(void *)(*(void *)v612 + 8 * ((v104 - 1) >> 6)) >> (v104 - 1)) & 1) != 0
                  && llvm::APInt::countTrailingZerosSlowCase((unint64_t **)v612) == v104 - 1)
                {
LABEL_204:
                  if ((*((unsigned char *)a2 + 17) & 6) != 0)
                  {
                    LOWORD(v604) = 257;
                    unint64_t v39 = __s2;
                    char v40 = 29;
                  }
                  else
                  {
                    LOWORD(v604) = 257;
                    unint64_t v39 = __s2;
                    char v40 = 30;
                  }
                  uint64_t v37 = v20;
                  uint64_t v38 = v21;
                  goto LABEL_43;
                }
              }
              else if (*(void *)v612 == 1 << (v104 - 1))
              {
                goto LABEL_204;
              }
              uint64_t v446 = (uint64_t)*a2;
              __s2[0] = &v599;
              __s2[1] = &v611;
              *(void *)&long long v603 = 0;
              unsigned int v447 = *((unsigned __int8 *)v20 + 16);
              if (v447 <= 0x1B && v447 != 5
                || (v447 <= 0x1B ? (unsigned int v448 = *((unsigned __int16 *)v20 + 9)) : (unsigned int v448 = v447 - 28), v448 != 39))
              {
LABEL_945:
                __s2[0] = &v599;
                __s2[1] = &v611;
                *(void *)&long long v603 = 0;
                int v449 = *((unsigned __int8 *)v20 + 16);
                if (v449 == 5)
                {
                  if (*((_WORD *)v20 + 9) != 30) {
                    goto LABEL_1048;
                  }
                  uint64_t v451 = (llvm::APInt **)((char *)v20 - 32 * (*((_DWORD *)v20 + 5) & 0x7FFFFFF));
                  if (!*v451) {
                    goto LABEL_1048;
                  }
                  unint64_t v599 = *v451;
                  if ((sub_1CBF5295C((uint64_t)&__s2[1], v451[4]) & 1) == 0) {
                    goto LABEL_1048;
                  }
                }
                else
                {
                  if (v449 != 58) {
                    goto LABEL_1048;
                  }
                  if (!*((void *)v20 - 8)) {
                    goto LABEL_1048;
                  }
                  unint64_t v599 = (llvm::APInt *)*((void *)v20 - 8);
                  if (!sub_1CBF528D8((uint64_t)&__s2[1], *((unsigned __int8 **)v20 - 4))) {
                    goto LABEL_1048;
                  }
                }
                unint64_t v452 = v611;
                uint64_t v453 = *((unsigned int *)v611 + 2);
                if (v453 > 0x40)
                {
                  int8x8_t v573 = *(int8x8_t *)v611;
                  if (((*(void *)(*(void *)v611 + 8 * ((v453 - 1) >> 6)) >> (v453
                                                                                                - 1)) & 1) != 0
                    && llvm::APInt::countTrailingZerosSlowCase((unint64_t **)v611) == v453 - 1)
                  {
                    operator new[]();
                  }
                  int v574 = llvm::APInt::countTrailingOnesSlowCase(v452);
                  if (!v574) {
                    goto LABEL_987;
                  }
                  int v575 = 0;
                  int64_t v576 = (unint64_t)(v453 + 63) >> 6;
                  do
                  {
                    BOOL v111 = v576-- < 1;
                    if (v111) {
                      break;
                    }
                    unint64_t v577 = *(void *)(*(void *)&v573 + 8 * v576);
                    v575 += __clz(v577);
                  }
                  while (!v577);
                  int v578 = v453 | 0xFFFFFFC0;
                  if ((v453 & 0x3F) == 0) {
                    int v578 = 0;
                  }
                  if (v574 + v575 + v578 != v453) {
                    goto LABEL_987;
                  }
                }
                else
                {
                  int8x8_t v454 = *(int8x8_t *)v611;
                  if (*(void *)v611 == 1 << (v453 - 1))
                  {
                    v455 = v599;
                    uint64_t v456 = (void *)(*(void *)v612 ^ *(void *)&v454);
                    LODWORD(v614) = *((_DWORD *)v611 + 2);
                    __src = v456;
                    uint64_t v457 = llvm::ConstantInt::get(*(llvm::ConstantInt **)v446, (llvm::LLVMContext *)&__src, v450);
                    if ((*(_DWORD *)(v446 + 8) & 0xFE) == 0x12) {
                      uint64_t v457 = llvm::ConstantVector::getSplat((llvm::Type *)(*(unsigned int *)(v446 + 32) | ((unint64_t)(*(_DWORD *)(v446 + 8) == 19) << 32)), (uint64_t)v457);
                    }
                    LOWORD(v604) = 257;
                    Not = llvm::BinaryOperator::Create(13, v455, (uint64_t)v457, (const char **)__s2, 0);
                    if (v614 >= 0x41 && __src) {
                      MEMORY[0x1D25D9CB0](__src, 0x1000C8000313F17);
                    }
                    goto LABEL_45;
                  }
                  if (!*(void *)&v454 || ((*(void *)&v454 + 1) & *(void *)&v454) != 0)
                  {
LABEL_987:
                    uint64_t v472 = *((void *)v20 + 1);
                    if (!v472 || *(void *)(v472 + 8)) {
                      goto LABEL_1048;
                    }
                    uint64_t v473 = v611;
                    unsigned int v474 = *((_DWORD *)v612 + 2);
                    unsigned int v607 = v474;
                    if (v474 > 0x40) {
                      operator new[]();
                    }
                    unint64_t v475 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v474;
                    if (!v474) {
                      unint64_t v475 = 0;
                    }
                    std::string __dst = (void *)(v475 & ~*(void *)v612);
                    llvm::APInt::operator++((uint64_t)&__dst);
                    unsigned int v476 = v607;
                    uint64_t v477 = __dst;
                    unsigned int v607 = 0;
                    uint64_t v478 = *((unsigned int *)v473 + 2);
                    if (v478 > 0x40) {
                      BOOL v479 = memcmp(*(const void **)v473, __dst, ((unint64_t)(v478 + 63) >> 3) & 0x3FFFFFF8) == 0;
                    }
                    else {
                      BOOL v479 = *(void *)v473 == (void)__dst;
                    }
                    int v480 = v479;
                    if (v476 >= 0x41)
                    {
                      if (v477)
                      {
                        MEMORY[0x1D25D9CB0](v477, 0x1000C8000313F17);
                        if (v607 >= 0x41)
                        {
                          if (__dst) {
                            MEMORY[0x1D25D9CB0](__dst, 0x1000C8000313F17);
                          }
                        }
                      }
                    }
                    if (!v480) {
                      goto LABEL_1048;
                    }
                    int v481 = (llvm::Type *)v446;
                    if ((*(_DWORD *)(v446 + 8) & 0xFE) == 0x12) {
                      int v481 = **(llvm::Type ***)(v446 + 16);
                    }
                    unsigned int PrimitiveSizeInBits = llvm::Type::getPrimitiveSizeInBits(v481);
                    uint64_t v483 = *((unsigned int *)v612 + 2);
                    if (v483 > 0x40)
                    {
                      int v486 = 0;
                      int64_t v487 = (unint64_t)(v483 + 63) >> 6;
                      uint64_t v488 = *(int8x8_t **)v612;
                      int64_t v489 = v487;
                      do
                      {
                        int8x8_t v490 = *v488++;
                        uint8x8_t v491 = (uint8x8_t)vcnt_s8(v490);
                        v491.i16[0] = vaddlv_u8(v491);
                        v486 += v491.i32[0];
                        --v489;
                      }
                      while (v489);
                      if (v486 == 1)
                      {
                        int v492 = 0;
                        do
                        {
                          BOOL v111 = v487-- < 1;
                          if (v111) {
                            break;
                          }
                          unint64_t v493 = *(void *)(*(void *)v612 + 8 * v487);
                          v492 += __clz(v493);
                        }
                        while (!v493);
                        goto LABEL_1036;
                      }
                    }
                    else
                    {
                      uint64_t v484 = *(llvm::ConstantInt ***)v612;
                      uint8x8_t v485 = (uint8x8_t)vcnt_s8(*(int8x8_t *)v612);
                      v485.i16[0] = vaddlv_u8(v485);
                      if (v485.u32[0] == 1)
                      {
LABEL_1019:
                        int v495 = v483 + __clz((unint64_t)v484) - 64;
                        goto LABEL_1039;
                      }
                    }
                    uint64_t v483 = *((unsigned int *)v611 + 2);
                    if (v483 <= 0x40)
                    {
                      uint64_t v484 = *(llvm::ConstantInt ***)v611;
                      uint8x8_t v494 = (uint8x8_t)vcnt_s8(*(int8x8_t *)v611);
                      v494.i16[0] = vaddlv_u8(v494);
                      if (v494.u32[0] != 1) {
                        goto LABEL_1048;
                      }
                      goto LABEL_1019;
                    }
                    int v501 = 0;
                    int64_t v502 = (unint64_t)(v483 + 63) >> 6;
                    int v503 = *(int8x8_t **)v611;
                    int64_t v504 = v502;
                    do
                    {
                      int8x8_t v505 = *v503++;
                      uint8x8_t v506 = (uint8x8_t)vcnt_s8(v505);
                      v506.i16[0] = vaddlv_u8(v506);
                      v501 += v506.i32[0];
                      --v504;
                    }
                    while (v504);
                    if (v501 != 1) {
                      goto LABEL_1048;
                    }
                    int v492 = 0;
                    do
                    {
                      BOOL v111 = v502-- < 1;
                      if (v111) {
                        break;
                      }
                      unint64_t v507 = *(void *)(*(void *)v611 + 8 * v502);
                      v492 += __clz(v507);
                    }
                    while (!v507);
LABEL_1036:
                    int v508 = v483 | 0xFFFFFFC0;
                    if ((v483 & 0x3F) == 0) {
                      int v508 = 0;
                    }
                    int v495 = v492 + v508;
LABEL_1039:
                    int v509 = v495 - v483;
                    unint64_t v510 = v509 + PrimitiveSizeInBits;
                    if (v509 + PrimitiveSizeInBits)
                    {
                      uint64_t v511 = v599;
                      LODWORD(__s2[1]) = PrimitiveSizeInBits;
                      if (PrimitiveSizeInBits > 0x40) {
                        operator new[]();
                      }
                      __s2[0] = 0;
                      unsigned int v512 = -v509;
                      if (-v509 > 0x3F) {
                        llvm::APInt::setBitsSlowCase(__s2, v512, PrimitiveSizeInBits);
                      }
                      else {
                        __s2[0] = (void *)((unint64_t)__s2[0] | (0xFFFFFFFFFFFFFFFFLL >> -(char)(v509 + PrimitiveSizeInBits) << v512));
                      }
                      BOOL IsZero = llvm::MaskedValueIsZero(v511, (const llvm::Value *)__s2, *(const llvm::APInt **)(a1 + 80), 0, *(const llvm::DataLayout **)(a1 + 56), (llvm::AssumptionCache *)a2, *(const llvm::Instruction **)(a1 + 72), (const llvm::DominatorTree *)1, v594);
                      if (LODWORD(__s2[1]) >= 0x41 && __s2[0]) {
                        MEMORY[0x1D25D9CB0](__s2[0], 0x1000C8000313F17);
                      }
                      if (IsZero)
                      {
                        v514 = llvm::ConstantInt::get((llvm::ConstantInt *)v446, v510, 0);
                        uint64_t v515 = *(void *)(a1 + 24);
                        __s2[0] = "sext";
                        LOWORD(v604) = 259;
                        uint64_t v37 = sub_1CC242524(v515, (uint64_t)v599, (uint64_t)v514, (uint64_t)__s2, 0, 0);
                        LOWORD(v604) = 257;
                        unint64_t v39 = __s2;
                        char v40 = 27;
                        uint64_t v38 = (uint64_t)v514;
                        goto LABEL_43;
                      }
                    }
LABEL_1048:
                    uint64_t v516 = *((unsigned int *)v612 + 2);
                    if (v516 > 0x40)
                    {
                      int v517 = 0;
                      int64_t v518 = (unint64_t)(v516 + 63) >> 6;
                      do
                      {
                        BOOL v111 = v518-- < 1;
                        if (v111) {
                          break;
                        }
                        unint64_t v519 = *(void *)(*(void *)v612 + 8 * v518);
                        v517 += __clz(v519);
                      }
                      while (!v519);
                      int v520 = v516 | 0xFFFFFFC0;
                      if ((v516 & 0x3F) == 0) {
                        int v520 = 0;
                      }
                      if (v517 + v520 != v516 - 1) {
                        goto LABEL_1059;
                      }
                    }
                    else if (*(void *)v612 != 1)
                    {
                      goto LABEL_1059;
                    }
                    uint64_t v521 = *((void *)v20 + 1);
                    if (v521 && !*(void *)(v521 + 8))
                    {
                      __s2[0] = &v599;
                      if (sub_1CBC5BEAC((void **)__s2, (uint64_t)v20))
                      {
                        uint64_t v525 = *(llvm::Type **)v599;
                        if ((*(_DWORD *)(*(void *)v599 + 8) & 0xFE) == 0x12) {
                          uint64_t v525 = (llvm::Type *)**((void **)v525 + 2);
                        }
                        if (llvm::Type::getPrimitiveSizeInBits(v525) == 1)
                        {
                          uint64_t v526 = (char *)operator new(0x60uLL);
                          Not = (llvm::ZExtInst *)(v526 + 32);
                          *((_DWORD *)v526 + 13) = *((_DWORD *)v526 + 13) & 0x38000000 | 1;
                          *(void *)uint64_t v526 = 0;
                          *((void *)v526 + 1) = 0;
                          *((void *)v526 + 2) = 0;
                          *((void *)v526 + 3) = v526 + 32;
                          uint64_t v527 = *(void *)(a1 + 24);
                          LOWORD(v604) = 257;
                          BOOL v529 = sub_1CC2427E8(v527, (uint64_t)v599, (uint64_t)__s2, v528);
                          __int16 v617 = 257;
                          llvm::ZExtInst::ZExtInst(Not, v529, (llvm::Type *)v446, (const char **)&__src, 0);
                          goto LABEL_45;
                        }
                      }
                      __src = 0;
                      __s2[0] = &v599;
                      __s2[1] = &v611;
                      *(void *)&long long v603 = 0;
                      *((void *)&v603 + 1) = &__src;
                      unint64_t v604 = 0;
                      if (sub_1CC9F956C((void **)__s2, 27, (uint64_t)v20))
                      {
                        uint64_t v530 = v611;
                        if (v611 == __src)
                        {
                          uint64_t v531 = (llvm::Type *)v446;
                          if ((*(_DWORD *)(v446 + 8) & 0xFE) == 0x12) {
                            uint64_t v531 = **(llvm::Type ***)(v446 + 16);
                          }
                          int v532 = llvm::Type::getPrimitiveSizeInBits(v531);
                          uint64_t v534 = *((unsigned int *)v530 + 2);
                          if (v534 >= 0x41)
                          {
                            int v535 = 0;
                            int64_t v536 = (unint64_t)(v534 + 63) >> 6;
                            do
                            {
                              BOOL v111 = v536-- < 1;
                              if (v111) {
                                break;
                              }
                              unint64_t v537 = *(void *)(*(void *)v530 + 8 * v536);
                              v535 += __clz(v537);
                            }
                            while (!v537);
                            int v538 = v534 | 0xFFFFFFC0;
                            if ((v534 & 0x3F) == 0) {
                              int v538 = 0;
                            }
                            if ((v534 - v535 - v538) > 0x40) {
                              goto LABEL_1059;
                            }
                            uint64_t v530 = *(llvm::APInt **)v530;
                          }
                          if (*(void *)v530 == v532 - 1)
                          {
                            uint64_t v539 = *(void *)(a1 + 24);
                            LOWORD(v604) = 257;
                            unint64_t v20 = sub_1CC2427E8(v539, (uint64_t)v599, (uint64_t)__s2, v533);
                            uint64_t v38 = (uint64_t)llvm::ConstantInt::get((llvm::ConstantInt *)v446, 1uLL, 0);
                            LOWORD(v604) = 257;
LABEL_1111:
                            unint64_t v39 = __s2;
                            char v40 = 28;
                            goto LABEL_201;
                          }
                        }
                      }
                    }
LABEL_1059:
                    __s2[0] = &v599;
                    __s2[1] = &v611;
                    *(void *)&long long v603 = 0;
                    uint64_t v522 = *((void *)v20 + 1);
                    if (!v522 || *(void *)(v522 + 8)) {
                      goto LABEL_1061;
                    }
                    int v523 = *((unsigned __int8 *)v20 + 16);
                    if (v523 == 5)
                    {
                      if (*((_WORD *)v20 + 9) != 28) {
                        goto LABEL_1061;
                      }
                      uint64_t v540 = (llvm::APInt **)((char *)v20 - 32 * (*((_DWORD *)v20 + 5) & 0x7FFFFFF));
                      if (!*v540) {
                        goto LABEL_1061;
                      }
                      unint64_t v599 = *v540;
                      if (!sub_1CBF5295C((uint64_t)&__s2[1], v540[4])) {
                        goto LABEL_1061;
                      }
                    }
                    else
                    {
                      if (v523 != 56) {
                        goto LABEL_1061;
                      }
                      if (!*((void *)v20 - 8)) {
                        goto LABEL_1061;
                      }
                      unint64_t v599 = (llvm::APInt *)*((void *)v20 - 8);
                      if ((sub_1CBF528D8((uint64_t)&__s2[1], *((unsigned __int8 **)v20 - 4)) & 1) == 0) {
                        goto LABEL_1061;
                      }
                    }
                    uint64_t v541 = *((unsigned int *)v611 + 2);
                    unsigned int v542 = v541 - 1;
                    if (v541 > 0x40)
                    {
                      int8x8_t v543 = *(int8x8_t *)v611;
                      if (((*(void *)(*(void *)v611 + 8 * (v542 >> 6)) >> v542) & 1) == 0) {
                        goto LABEL_1061;
                      }
                      int v544 = 0;
                      int64_t v545 = (unint64_t)(v541 + 63) >> 6;
                      uint64_t v546 = *(int8x8_t **)v611;
                      int64_t v547 = v545;
                      do
                      {
                        int8x8_t v548 = *v546++;
                        uint8x8_t v549 = (uint8x8_t)vcnt_s8(v548);
                        v549.i16[0] = vaddlv_u8(v549);
                        v544 += v549.i32[0];
                        --v547;
                      }
                      while (v547);
                      int v550 = 0;
                      do
                      {
                        BOOL v111 = v545-- < 1;
                        if (v111) {
                          break;
                        }
                        unint64_t v551 = *(void *)(*(void *)&v543 + 8 * v545);
                        v550 += __clz(v551);
                      }
                      while (!v551);
                      int v552 = (v541 & 0x3F) != 0 ? v541 | 0xFFFFFFC0 : 0;
                      if (v544
                         + v550
                         + llvm::APInt::countTrailingZerosSlowCase((unint64_t **)v611)
                         + v552 != v541)
                        goto LABEL_1061;
                      goto LABEL_1103;
                    }
                    int8x8_t v543 = *(int8x8_t *)v611;
                    if (((*(void *)v611 >> v542) & 1) != 0
                      && ((((*(void *)&v543 - 1) | *(void *)&v543) + 1) & ((*(void *)&v543 - 1) | *(void *)&v543)) == 0)
                    {
LABEL_1103:
                      if (*((_DWORD *)v612 + 2) > 0x40u) {
                        operator new[]();
                      }
                      if (*(void *)v612 != (*(void *)v612 & *(void *)&v543)) {
                        goto LABEL_1061;
                      }
                      uint64_t v553 = *(void *)(a1 + 24);
                      size_t v554 = v599;
                      uint64_t v555 = llvm::ConstantInt::get(*(llvm::ConstantInt **)v446, v612, v524);
                      if ((*(_DWORD *)(v446 + 8) & 0xFE) == 0x12) {
                        uint64_t v555 = llvm::ConstantVector::getSplat((llvm::Type *)(*(unsigned int *)(v446 + 32) | ((unint64_t)(*(_DWORD *)(v446 + 8) == 19) << 32)), (uint64_t)v555);
                      }
                      LOWORD(v604) = 257;
                      unint64_t v20 = sub_1CB844A3C(v553, v554, (uint64_t)v555, (uint64_t)__s2, 0, 0);
                      uint64_t v38 = (uint64_t)llvm::ConstantInt::get(*(llvm::ConstantInt **)v446, v611, v556);
                      if ((*(_DWORD *)(v446 + 8) & 0xFE) == 0x12) {
                        uint64_t v38 = (uint64_t)llvm::ConstantVector::getSplat((llvm::Type *)(*(unsigned int *)(v446 + 32) | ((unint64_t)(*(_DWORD *)(v446 + 8) == 19) << 32)), v38);
                      }
                      LOWORD(v604) = 257;
                      goto LABEL_1111;
                    }
LABEL_1061:
                    Not = 0;
                    goto LABEL_45;
                  }
                }
                BOOL v458 = *(void **)(a1 + 56);
                uint64_t v459 = *(void *)(a1 + 72);
                unsigned int v460 = (llvm::APInt *)a2;
                if (!a2[5])
                {
                  if (!v599 || *((unsigned __int8 *)v599 + 16) < 0x1Cu || (unsigned int v460 = v599, !*((void *)v599 + 5))) {
                    unsigned int v460 = 0;
                  }
                }
                __s2[0] = *(void **)(a1 + 80);
                __s2[1] = v458;
                *(void *)&long long v603 = v460;
                *((void *)&v603 + 1) = v459;
                unint64_t v604 = 0;
                LOBYTE(v605) = 1;
                sub_1CC16089C((uint64_t *)v599, 0, (const llvm::DataLayout **)__s2, (uint64_t)&__src);
                unsigned int v462 = *((_DWORD *)v611 + 2);
                if (v462 >= 0x41) {
                  operator new[]();
                }
                if (!v462 || (*(void *)v611 | (unint64_t)__src) == 0xFFFFFFFFFFFFFFFFLL >> -(char)v462)
                {
                  uint64_t v463 = *(void *)v612 + *(void *)v611;
                  unint64_t v464 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v462;
                  if (!v462) {
                    unint64_t v464 = 0;
                  }
                  unsigned int v619 = *((_DWORD *)v611 + 2);
                  uint64_t v618 = (llvm::Instruction *)(v464 & v463);
                  uint64_t v470 = (llvm::Value *)llvm::ConstantInt::get(*(llvm::ConstantInt **)v446, (llvm::LLVMContext *)&v618, v461);
                  uint64_t v471 = v470;
                  if ((*(_DWORD *)(v446 + 8) & 0xFE) == 0x12) {
                    uint64_t v471 = llvm::ConstantVector::getSplat((llvm::Type *)(*(unsigned int *)(v446 + 32) | ((unint64_t)(*(_DWORD *)(v446 + 8) == 19) << 32)), (uint64_t)v470);
                  }
                  LOWORD(v604) = 257;
                  Not = llvm::BinaryOperator::Create(15, v471, (uint64_t)v599, (const char **)__s2, 0);
                  if (v619 >= 0x41 && v618) {
                    MEMORY[0x1D25D9CB0](v618, 0x1000C8000313F17);
                  }
                  char v465 = 1;
                }
                else
                {
                  char v465 = 0;
                  Not = 0;
                }
                if (v616 >= 0x41 && v615) {
                  MEMORY[0x1D25D9CB0](v615, 0x1000C8000313F17);
                }
                if (v614 >= 0x41 && __src) {
                  MEMORY[0x1D25D9CB0](__src, 0x1000C8000313F17);
                }
                if (v465) {
                  goto LABEL_45;
                }
                goto LABEL_987;
              }
              int v466 = *((_DWORD *)v20 + 5);
              if ((v466 & 0x40000000) != 0) {
                unint64_t v467 = (uint64_t *)*((void *)v20 - 1);
              }
              else {
                unint64_t v467 = (uint64_t *)((char *)v20 - 32 * (v466 & 0x7FFFFFF));
              }
              uint64_t v468 = *v467;
              int v469 = *(unsigned __int8 *)(v468 + 16);
              if (v469 == 5)
              {
                if (*(_WORD *)(v468 + 18) != 30) {
                  goto LABEL_945;
                }
                v496 = (llvm::APInt **)(v468 - 32 * (*(_DWORD *)(v468 + 20) & 0x7FFFFFF));
                if (!*v496) {
                  goto LABEL_945;
                }
                unint64_t v599 = *v496;
                if (!sub_1CBF5295C((uint64_t)&__s2[1], v496[4])) {
                  goto LABEL_945;
                }
              }
              else
              {
                if (v469 != 58) {
                  goto LABEL_945;
                }
                if (!*(void *)(v468 - 64)) {
                  goto LABEL_945;
                }
                unint64_t v599 = *(llvm::APInt **)(v468 - 64);
                if ((sub_1CBF528D8((uint64_t)&__s2[1], *(unsigned __int8 **)(v468 - 32)) & 1) == 0) {
                  goto LABEL_945;
                }
              }
              int v497 = v611;
              unsigned int v498 = *((_DWORD *)v611 + 2);
              if (v498 > 0x40)
              {
                if (((*(void *)(*(void *)v611 + 8 * ((v498 - 1) >> 6)) >> (v498 - 1)) & 1) == 0
                  || llvm::APInt::countTrailingZerosSlowCase((unint64_t **)v611) != v498 - 1)
                {
                  goto LABEL_945;
                }
              }
              else if (*(void *)v611 != 1 << (v498 - 1))
              {
                goto LABEL_945;
              }
              int v499 = (llvm::Type *)v446;
              if ((*(_DWORD *)(v446 + 8) & 0xFE) == 0x12) {
                int v499 = **(llvm::Type ***)(v446 + 16);
              }
              unsigned int v500 = llvm::Type::getPrimitiveSizeInBits(v499);
              llvm::APInt::sext((uint64_t)v497, v500, (uint64_t)&__src);
              if (v614 >= 0x41)
              {
                uint64_t v557 = __src;
                int v558 = memcmp(__src, *(const void **)v612, (((unint64_t)v614 + 63) >> 3) & 0x3FFFFFF8);
                if (v557) {
                  MEMORY[0x1D25D9CB0](v557, 0x1000C8000313F17);
                }
                if (v558) {
                  goto LABEL_945;
                }
              }
              else if (__src != *(void **)v612)
              {
                goto LABEL_945;
              }
              LOWORD(v604) = 257;
              uint64_t v35 = llvm::CastInst::Create(40, (uint64_t)v599, v446, (const char **)__s2, 0);
              goto LABEL_44;
            }
            if (v70 != 5) {
              goto LABEL_202;
            }
            int v86 = *((unsigned __int16 *)v20 + 9);
LABEL_178:
            if (v86 != 29
              || !sub_1CBF5295C((uint64_t)&__s2[1], ((llvm::Constant **)v20 - 4 * (*((_DWORD *)v20 + 5) & 0x7FFFFFF))[4]))
            {
              goto LABEL_202;
            }
            goto LABEL_182;
          }
          int v71 = (llvm *)*((void *)v20 - 8);
          if (!v71
            || (unint64_t v599 = (llvm::APInt *)*((void *)v20 - 8),
                uint64_t v72 = (llvm::ConstantExpr *)*((void *)v20 - 4),
                unsigned int v73 = *((unsigned __int8 *)v72 + 16),
                v73 == 5)
            || !v72
            || v73 > 0x14)
          {
            v611 = 0;
            __s2[1] = &v611;
            *(void *)&long long v603 = 0;
            goto LABEL_181;
          }
        }
        if (llvm::haveNoCommonBitsSet(v71, v72, *(void ***)(a1 + 80), *(const llvm::DataLayout **)(a1 + 56), (llvm::AssumptionCache *)a2, *(const llvm::Instruction **)(a1 + 72), (const llvm::DominatorTree *)1))
        {
          unint64_t v20 = v599;
          uint64_t v38 = (uint64_t)llvm::ConstantExpr::getAdd(v72, (llvm::Constant *)v21, 0, 0);
          LOWORD(v604) = 257;
          unint64_t v39 = __s2;
          char v40 = 13;
LABEL_201:
          uint64_t v37 = v20;
          goto LABEL_43;
        }
        int v70 = *((unsigned __int8 *)v20 + 16);
        goto LABEL_175;
      }
      unint64_t v599 = v25;
      BOOL v27 = llvm::ConstantExpr::getAdd((llvm::ConstantExpr *)v24, (llvm::Constant *)v21, 0, 0);
LABEL_42:
      uint64_t v37 = v27;
      uint64_t v38 = (uint64_t)v599;
      LOWORD(v604) = 257;
      unint64_t v39 = __s2;
      char v40 = 15;
LABEL_43:
      uint64_t v35 = llvm::BinaryOperator::Create(v40, v37, v38, (const char **)v39, 0);
      goto LABEL_44;
    }
  }
  return Not;
}

llvm::Value *sub_1CC9EFC00(uint64_t a1, uint64_t a2)
{
  int v2 = 0;
  uint64_t v3 = *(void *)(a1 - 64);
  unsigned int v4 = *(unsigned __int8 *)(v3 + 16);
  if (v4 - 41 >= 0x12 || v4 <= 0x1B) {
    uint64_t v3 = 0;
  }
  uint64_t v6 = *(void *)(a1 - 32);
  unsigned int v7 = *(unsigned __int8 *)(v6 + 16);
  if (v7 - 41 >= 0x12 || v7 <= 0x1B) {
    uint64_t v6 = 0;
  }
  if (v3) {
    BOOL v9 = v6 == 0;
  }
  else {
    BOOL v9 = 1;
  }
  if (!v9)
  {
    uint64_t v10 = *(void *)(v3 + 8);
    if (!v10 || *(void *)(v10 + 8))
    {
      int v2 = *(llvm::Value **)(v6 + 8);
      if (!v2) {
        return v2;
      }
      if (*((void *)v2 + 1)) {
        return 0;
      }
    }
    int v11 = *(unsigned __int8 *)(v3 + 16);
    if (v11 == 5)
    {
      if (*(_WORD *)(v3 + 18) != 25) {
        return 0;
      }
      unint64_t v14 = (uint64_t *)(v3 - 32 * (*(_DWORD *)(v3 + 20) & 0x7FFFFFF));
      uint64_t v12 = *v14;
      if (!*v14) {
        return 0;
      }
      uint64_t v13 = v14[4];
      if (!v13) {
        return 0;
      }
    }
    else
    {
      if (v11 != 53) {
        return 0;
      }
      uint64_t v12 = *(void *)(v3 - 64);
      if (!v12) {
        return 0;
      }
      uint64_t v13 = *(void *)(v3 - 32);
      if (!v13) {
        return 0;
      }
    }
    int v15 = *(unsigned __int8 *)(v6 + 16);
    if (v15 == 5)
    {
      if (*(_WORD *)(v6 + 18) != 25) {
        return 0;
      }
      uint64_t v18 = (uint64_t *)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF));
      uint64_t v16 = *v18;
      if (!*v18) {
        return 0;
      }
      uint64_t v17 = v18[4];
    }
    else
    {
      if (v15 != 53) {
        return 0;
      }
      uint64_t v16 = *(void *)(v6 - 64);
      if (!v16) {
        return 0;
      }
      uint64_t v17 = *(void *)(v6 - 32);
    }
    if (v13 != v17) {
      return 0;
    }
    if ((*(unsigned char *)(a1 + 17) & 4) != 0 && (*(unsigned char *)(v3 + 17) & 4) != 0) {
      char v20 = *(unsigned char *)(v6 + 17) & 4;
    }
    else {
      char v20 = 0;
    }
    if ((*(unsigned char *)(a1 + 17) & 2) != 0 && (*(unsigned char *)(v3 + 17) & 2) != 0) {
      char v21 = *(unsigned char *)(v6 + 17) & 2;
    }
    else {
      char v21 = 0;
    }
    uint64_t v22 = *(unsigned __int8 *)(a1 + 16) - 28;
    __int16 v28 = 257;
    int v23 = sub_1CB844E98(a2, v22, v12, v16, (uint64_t)v27, 0);
    unsigned int v24 = *((unsigned __int8 *)v23 + 16);
    if (v23) {
      BOOL v25 = v24 >= 0x1C;
    }
    else {
      BOOL v25 = 0;
    }
    if (v25 && v24 - 59 >= 0xFFFFFFEE) {
      *((unsigned char *)v23 + 17) = v20 | v21 | *((unsigned char *)v23 + 17) & 0xF9;
    }
    __int16 v28 = 257;
    int v2 = llvm::BinaryOperator::Create(25, v23, v13, v27, 0);
    *((unsigned char *)v2 + 17) = v20 | v21 | *((unsigned char *)v2 + 17) & 0xF9;
  }
  return v2;
}

llvm::UndefValue **sub_1CC9EFDF8(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v108 = *MEMORY[0x1E4F143B8];
  unsigned int v4 = (llvm *)*((void *)a2 - 8);
  int v5 = (llvm::Constant *)*((void *)a2 - 4);
  unint64_t v6 = (unint64_t)a2[17] >> 1;
  long long v7 = *(_OWORD *)(a1 + 120);
  long long v8 = *(_OWORD *)(a1 + 104);
  long long v105 = *(_OWORD *)(a1 + 88);
  *(_OWORD *)unsigned int v106 = v8;
  uint64_t v107 = (const llvm::detail::DoubleAPFloat **)*((void *)&v7 + 1);
  *(void *)&BOOL v106[16] = a2;
  if (v6 == 127) {
    int v9 = -1;
  }
  else {
    int v9 = v6;
  }
  uint64_t v10 = sub_1CC0395A4(v4, v5, v9, (uint64_t)&v105, 0, (llvm::DSOLocalEquivalent **)1);
  if (!v10)
  {
    if (sub_1CC9D1CF4(a1, (llvm::Instruction *)a2)) {
      return (llvm::UndefValue **)a2;
    }
    uint64_t v12 = (uint64_t ***)sub_1CC9D812C(a1, a2);
    if (v12) {
      return (llvm::UndefValue **)v12;
    }
    uint64_t v12 = (uint64_t ***)sub_1CC9D6B70(a1, (uint64_t)a2);
    if (v12) {
      return (llvm::UndefValue **)v12;
    }
    uint64_t v12 = (uint64_t ***)sub_1CC9D74E0(a1, a2, v13, v14, v15);
    if (v12) {
      return (llvm::UndefValue **)v12;
    }
    unsigned int v98 = 0;
    unint64_t v99 = 0;
    *(void *)&long long v105 = &v99;
    *((void *)&v105 + 1) = &v98;
    if (sub_1CC9F9A18((void **)&v105, 14, (uint64_t)a2))
    {
      uint64_t v16 = v98;
      FAdd = v99;
      *(_WORD *)&BOOL v106[16] = 257;
LABEL_21:
      char v22 = 16;
LABEL_22:
      uint64_t v12 = (uint64_t ***)llvm::BinaryOperator::Create(v22, v16, (uint64_t)FAdd, (const char **)&v105, 0);
      llvm::Instruction::copyIRFlags((uint64_t)v12, (uint64_t)a2, 1);
      return (llvm::UndefValue **)v12;
    }
    int v97 = 0;
    *(void *)&long long v105 = &v99;
    *((void *)&v105 + 1) = &v98;
    *(void *)unsigned int v106 = &v97;
    if (sub_1CC9F9B28((void **)&v105, 14, (uint64_t)a2))
    {
      uint64_t v18 = *(void *)(a1 + 24);
      *(_WORD *)&BOOL v106[16] = 257;
      uint64_t v19 = sub_1CB93098C(v18, (uint64_t)v99, (uint64_t)v98, (llvm::Instruction *)a2, (uint64_t)&v105);
LABEL_20:
      FAdd = (const llvm::detail::DoubleAPFloat *)v19;
      uint64_t v16 = v97;
      *(_WORD *)&BOOL v106[16] = 257;
      goto LABEL_21;
    }
    *(void *)&long long v105 = &v99;
    *((void *)&v105 + 1) = &v98;
    *(void *)unsigned int v106 = &v97;
    if (sub_1CC9F9D94((void **)&v105, 14, (uint64_t)a2)
      || (int v102 = (llvm::ConstantExpr *)&v99,
          uint64_t v103 = (const llvm::detail::DoubleAPFloat *)&v98,
          unsigned int v104 = &v97,
          sub_1CC9FA094((void **)&v102, 14, (uint64_t)a2)))
    {
      uint64_t v21 = *(void *)(a1 + 24);
      *(_WORD *)&BOOL v106[16] = 257;
      uint64_t v19 = sub_1CB9307D8(v21, (uint64_t)v99, (uint64_t)v98, (llvm::Instruction *)a2, (uint64_t)&v105);
      goto LABEL_20;
    }
    uint64_t v23 = *((void *)a2 - 8);
    uint64_t v24 = *((void *)a2 - 4);
    if (v23 && *(unsigned char *)(v23 + 16) == 72)
    {
      BOOL v25 = *(uint64_t **)(v23 - 32);
      uint64_t v26 = *(void *)v23;
      if (*(unsigned char *)(v24 + 16) == 17 && v24)
      {
        uint64_t v20 = *v25;
        uint64_t v27 = *(void *)v23;
        if ((*(_DWORD *)(v26 + 8) & 0xFE) == 0x12) {
          uint64_t v27 = **(void **)(v26 + 16);
        }
        uint64_t v28 = *v25;
        if ((*(_DWORD *)(v20 + 8) & 0xFE) == 0x12) {
          uint64_t v28 = **(void **)(v20 + 16);
        }
        if (*(unsigned char *)(v27 + 8) == 2)
        {
          unsigned int v29 = &unk_1CFB2E308;
        }
        else
        {
          uint64_t v94 = *v25;
          unsigned int v29 = &unk_1CFB2E2E0;
          uint64_t v86 = *(void *)v23;
          switch(*(unsigned char *)(v27 + 8))
          {
            case 1:
              unsigned int v29 = &unk_1CFB2E2F4;
              break;
            case 2:
LABEL_120:
              __break(1u);
              goto LABEL_121;
            case 3:
LABEL_121:
              unsigned int v29 = &unk_1CFB2E31C;
              break;
            case 4:
              unsigned int v29 = llvm::APFloatBase::x87DoubleExtended((llvm::APFloatBase *)&unk_1CFB2E2E0);
              goto LABEL_124;
            case 5:
              unsigned int v29 = llvm::APFloatBase::IEEEquad((llvm::APFloatBase *)&unk_1CFB2E2E0);
LABEL_124:
              uint64_t v26 = v86;
              uint64_t v20 = v94;
              break;
            case 6:
              unsigned int v29 = &unk_1CFB2E344;
              break;
            default:
              break;
          }
        }
        if (v29[2] >= *(_DWORD *)(v28 + 8) >> 8)
        {
          uint64_t v30 = v26;
          uint64_t v31 = sub_1CC56C0C0((llvm *)0x2A, (llvm::detail::IEEEFloat *)v24, (llvm::Constant *)v20, 0);
          uint64_t v26 = v30;
          uint64_t v32 = *(void *)(v23 + 8);
          if (v32)
          {
            if (!*(void *)(v32 + 8))
            {
              uint64_t v33 = (uint64_t)v31;
              uint64_t v34 = sub_1CC56C0C0((llvm *)0x2C, v31, *(llvm::Constant **)a2, 0);
              uint64_t v26 = v30;
              if (v34 == (llvm::detail::IEEEFloat *)v24)
              {
                int v35 = sub_1CC16A7F0((uint64_t)v25, v33, 0, *(const llvm::DataLayout **)(a1 + 80), *(void *)(a1 + 56), (const llvm::DataLayout *)a2, *(void *)(a1 + 72));
                uint64_t v26 = v30;
                if (v35 == 3)
                {
                  uint64_t v36 = *(void *)(a1 + 24);
                  *(void *)&long long v105 = "addconv";
                  *(_WORD *)&BOOL v106[16] = 259;
                  uint64_t v37 = sub_1CB844A3C(v36, v25, v33, (uint64_t)&v105, 0, 1);
                  uint64_t v38 = (char *)operator new(0x60uLL);
                  uint64_t v12 = (uint64_t ***)(v38 + 32);
                  *((_DWORD *)v38 + 13) = *((_DWORD *)v38 + 13) & 0x38000000 | 1;
                  *(void *)uint64_t v38 = 0;
                  *((void *)v38 + 1) = 0;
                  *((void *)v38 + 2) = 0;
                  *((void *)v38 + 3) = v38 + 32;
                  uint64_t v39 = *(void *)a2;
                  *(_WORD *)&BOOL v106[16] = 257;
                  char v40 = sub_1CC19DDB4((llvm::Value *)(v38 + 32), v39, 44, (uint64_t)v37, 0);
                  llvm::Value::setNameImpl(v40, (const char **)&v105);
                  if (v38[48]) {
                    return (llvm::UndefValue **)v12;
                  }
                  if ((v38[55] & 0x10) == 0) {
                    goto LABEL_118;
                  }
                  uint64_t v41 = ***v12;
                  uint64_t v42 = *(void *)(v41 + 152);
                  uint64_t v43 = *(unsigned int *)(v41 + 168);
                  if (!v43) {
                    goto LABEL_110;
                  }
                  LODWORD(v44) = (v43 - 1) & ((v12 >> 4) ^ (v12 >> 9));
                  int v45 = (uint64_t ****)(v42 + 16 * v44);
                  uint64_t v46 = *v45;
                  if (*v45 != v12)
                  {
                    int v47 = 1;
                    while (v46 != (uint64_t ***)-4096)
                    {
                      int v48 = v44 + v47++;
                      uint64_t v44 = v48 & (v43 - 1);
                      uint64_t v46 = *(uint64_t ****)(v42 + 16 * v44);
                      if (v46 == v12) {
                        goto LABEL_77;
                      }
                    }
LABEL_110:
                    int v45 = (uint64_t ****)(v42 + 16 * v43);
                    goto LABEL_111;
                  }
                  goto LABEL_111;
                }
              }
            }
          }
        }
      }
      if (*(unsigned char *)(v24 + 16) == 72 && v24)
      {
        uint64_t v28 = *v25;
        if ((*(_DWORD *)(v26 + 8) & 0xFE) == 0x12) {
          uint64_t v26 = **(void **)(v26 + 16);
        }
        uint64_t v49 = (*(_DWORD *)(v28 + 8) & 0xFE) == 0x12 ? **(void **)(v28 + 16) : *v25;
        int v50 = *(void **)(v24 - 32);
        if (*(unsigned char *)(v26 + 8) == 2)
        {
          int v51 = &unk_1CFB2E308;
        }
        else
        {
          unsigned int v95 = *(void **)(v24 - 32);
          int v51 = &unk_1CFB2E2E0;
          uint64_t v87 = v49;
          switch(*(unsigned char *)(v26 + 8))
          {
            case 1:
              int v51 = &unk_1CFB2E2F4;
              goto LABEL_56;
            case 2:
              goto LABEL_120;
            case 3:
              int v51 = &unk_1CFB2E31C;
              goto LABEL_56;
            case 4:
              int v51 = llvm::APFloatBase::x87DoubleExtended((llvm::APFloatBase *)&unk_1CFB2E2E0);
              break;
            case 5:
              int v51 = llvm::APFloatBase::IEEEquad((llvm::APFloatBase *)&unk_1CFB2E2E0);
              break;
            case 6:
              int v51 = &unk_1CFB2E344;
              goto LABEL_56;
            default:
              goto LABEL_56;
          }
          uint64_t v49 = v87;
          int v50 = v95;
        }
LABEL_56:
        if (v51[2] >= *(_DWORD *)(v49 + 8) >> 8
          && v28 == *v50
          && ((uint64_t v55 = *(void *)(v23 + 8)) != 0 && !*(void *)(v55 + 8)
           || (uint64_t v56 = *(void *)(v24 + 8)) != 0 && !*(void *)(v56 + 8)))
        {
          uint64_t v57 = (uint64_t)v50;
          if (sub_1CC16A7F0((uint64_t)v25, (uint64_t)v50, 0, *(const llvm::DataLayout **)(a1 + 80), *(void *)(a1 + 56), (const llvm::DataLayout *)a2, *(void *)(a1 + 72)) == 3)
          {
            uint64_t v58 = *(void *)(a1 + 24);
            *(void *)&long long v105 = "addconv";
            *(_WORD *)&BOOL v106[16] = 259;
            int v59 = sub_1CB844A3C(v58, v25, v57, (uint64_t)&v105, 0, 1);
            uint64_t v38 = (char *)operator new(0x60uLL);
            uint64_t v12 = (uint64_t ***)(v38 + 32);
            *((_DWORD *)v38 + 13) = *((_DWORD *)v38 + 13) & 0x38000000 | 1;
            *(void *)uint64_t v38 = 0;
            *((void *)v38 + 1) = 0;
            *((void *)v38 + 2) = 0;
            *((void *)v38 + 3) = v38 + 32;
            uint64_t v60 = *(void *)a2;
            *(_WORD *)&BOOL v106[16] = 257;
            uint64_t v61 = sub_1CC19DDB4((llvm::Value *)(v38 + 32), v60, 44, (uint64_t)v59, 0);
            llvm::Value::setNameImpl(v61, (const char **)&v105);
            if (v38[48]) {
              return (llvm::UndefValue **)v12;
            }
            if ((v38[55] & 0x10) == 0) {
              goto LABEL_118;
            }
            uint64_t v62 = ***v12;
            uint64_t v42 = *(void *)(v62 + 152);
            uint64_t v43 = *(unsigned int *)(v62 + 168);
            if (!v43) {
              goto LABEL_110;
            }
            LODWORD(v44) = (v43 - 1) & ((v12 >> 4) ^ (v12 >> 9));
            int v45 = (uint64_t ****)(v42 + 16 * v44);
            uint64_t v63 = *v45;
            if (*v45 != v12)
            {
              int v64 = 1;
              while (v63 != (uint64_t ***)-4096)
              {
                int v65 = v44 + v64++;
                uint64_t v44 = v65 & (v43 - 1);
                uint64_t v63 = *(uint64_t ****)(v42 + 16 * v44);
                if (v63 == v12)
                {
LABEL_77:
                  int v45 = (uint64_t ****)(v42 + 16 * v44);
                  goto LABEL_111;
                }
              }
              goto LABEL_110;
            }
LABEL_111:
            uint64_t v88 = v45[1];
            unint64_t v91 = (unint64_t)*v88;
            int v89 = v88 + 2;
            unint64_t v90 = v91;
            if (v91 >= 5 && *(_DWORD *)v89 == *(_DWORD *)"llvm." && v89[4] == aLlvm_1[4])
            {
              *((_DWORD *)v38 + 16) |= 0x2000u;
              int v93 = llvm::Function::lookupIntrinsicID(v89, v90);
LABEL_119:
              *((_DWORD *)v38 + 17) = v93;
              return (llvm::UndefValue **)v12;
            }
LABEL_118:
            int v93 = 0;
            *((_DWORD *)v38 + 16) &= ~0x2000u;
            goto LABEL_119;
          }
        }
      }
    }
    uint64_t Intrinsic = (llvm::Value *)sub_1CC9D3890(a1, a2, (llvm *)v23, (llvm *)v24);
    if (Intrinsic) {
      return sub_1CC9D3C84(a1, (llvm::ValueAsMetadata *)a2, Intrinsic);
    }
    if ((~a2[17] & 0x12) == 0)
    {
      uint64_t v12 = (uint64_t ***)sub_1CC9F08D8((llvm::Instruction *)a2, *(void *)(a1 + 24));
      if (v12) {
        return (llvm::UndefValue **)v12;
      }
      LODWORD(v105) = 319;
      *(void *)((char *)&v105 + 4) = 0;
      *(void *)unsigned int v106 = 1;
      *(void *)&v106[8] = &v99;
      *(void *)&BOOL v106[16] = &v98;
      if (sub_1CC9FA3B4((uint64_t)&v105, 14, (uint64_t)a2))
      {
        char v53 = *(uint64_t **)(a1 + 24);
        uint64_t v101 = *(void *)v99;
        int v102 = v98;
        uint64_t v103 = v99;
        *(_WORD *)&BOOL v106[16] = 257;
        uint64_t v54 = &v101;
LABEL_64:
        uint64_t Intrinsic = (llvm::Value *)llvm::IRBuilderBase::CreateIntrinsic(v53, 319, (uint64_t)v54, 1, (uint64_t *)&v102, 2, (uint64_t)a2, (uint64_t)&v105);
        return sub_1CC9D3C84(a1, (llvm::ValueAsMetadata *)a2, Intrinsic);
      }
      uint64_t v101 = 0;
      uint64_t v96 = 0;
      LODWORD(v105) = 319;
      DWORD2(v105) = 0;
      *(void *)unsigned int v106 = &v101;
      *(_OWORD *)&v106[8] = xmmword_1CD96D880;
      uint64_t v107 = &v99;
      uint64_t v66 = *(void *)(v23 + 8);
      if (v66)
      {
        if (!*(void *)(v66 + 8) && sub_1CC9FA678((uint64_t)&v105, v23))
        {
          int v102 = (llvm::ConstantExpr *)&v96;
          uint64_t v103 = 0;
          uint64_t v67 = (void *)sub_1CC04AFFC((uint64_t)&v102, (unsigned __int8 *)v24);
          if (v67)
          {
            uint64_t v68 = *(llvm::ConstantFP ***)a2;
            uint64_t v69 = v101;
            uint64_t v70 = *(void *)(v96 + 8);
            if ((_UNKNOWN *)v70 == &unk_1CFB2E344)
            {
              llvm::detail::DoubleAPFloat::DoubleAPFloat((void *)&v105 + 1, (const llvm::detail::DoubleAPFloat *)(v96 + 8));
            }
            else
            {
              *((void *)&v105 + 1) = *(void *)(v96 + 8);
              if ((*(_DWORD *)(v70 + 8) + 64) >= 0x80) {
                operator new[]();
              }
              char v71 = *(unsigned char *)(v96 + 28);
              int v72 = v71 & 7;
              v106[12] = v71 & 0xF;
              *(_DWORD *)&v106[8] = *(_DWORD *)(v96 + 24);
              BOOL v74 = (v71 & 6) != 0 && v72 != 3;
              if (v72 == 1 || v74)
              {
                uint64_t v75 = *(unsigned int *)(*((void *)&v105 + 1) + 8);
                if ((v75 - 64) > 0xFFFFFF7F) {
                  uint64_t v67 = v106;
                }
                uint64_t v76 = *(uint64_t **)(v96 + 16);
                if ((*(_DWORD *)(*(void *)(v96 + 8) + 8) - 64) >= 0xFFFFFF80) {
                  uint64_t v76 = (uint64_t *)(v96 + 16);
                }
                if (v75 <= 0xFFFFFFBF)
                {
                  unint64_t v77 = (unint64_t)(v75 + 64) >> 6;
                  do
                  {
                    uint64_t v78 = *v76++;
                    *v67++ = v78;
                    --v77;
                  }
                  while (v77);
                }
              }
            }
            sub_1CB88A708((uint64_t)&v105, v69, 1);
            int64_t v80 = llvm::ConstantFP::get(v68, (llvm::Type *)&v105, v79);
            if (*((_UNKNOWN **)&v105 + 1) == &unk_1CFB2E344)
            {
              sub_1CB845718((uint64_t *)v106);
            }
            else if ((*(_DWORD *)(*((void *)&v105 + 1) + 8) - 64) <= 0xFFFFFF7F && *(void *)v106)
            {
              MEMORY[0x1D25D9CB0](*(void *)v106, 0x1000C8000313F17);
            }
            char v53 = *(uint64_t **)(a1 + 24);
            uint64_t v100 = *(void *)v99;
            int v102 = v80;
            uint64_t v103 = v99;
            *(_WORD *)&BOOL v106[16] = 257;
            uint64_t v54 = &v100;
            goto LABEL_64;
          }
        }
      }
      int v102 = 0;
      *(void *)&long long v105 = &v99;
      *((void *)&v105 + 1) = &v102;
      *(void *)unsigned int v106 = 0;
      *(void *)&v106[8] = &v99;
      if (sub_1CC9FA770((void **)&v105, 14, (uint64_t)a2))
      {
        int v82 = v102;
        uint64_t v83 = llvm::ConstantFP::get(*(llvm::ConstantFP ***)a2, v81, 1.0);
        FAdd = llvm::ConstantExpr::getFAdd(v82, v83, v84, v85);
        int v102 = FAdd;
        uint64_t v16 = v99;
        *(_WORD *)&BOOL v106[16] = 257;
        char v22 = 18;
        goto LABEL_22;
      }
      long long v105 = *(unint64_t *)(a1 + 24);
      uint64_t Intrinsic = (llvm::Value *)sub_1CC9F0CF4((uint64_t)&v105, a2);
      if (Intrinsic) {
        return sub_1CC9D3C84(a1, (llvm::ValueAsMetadata *)a2, Intrinsic);
      }
    }
    return 0;
  }

  return sub_1CC9D3C84(a1, (llvm::ValueAsMetadata *)a2, v10);
}

llvm::Value *sub_1CC9F08D8(llvm::Instruction *a1, uint64_t a2)
{
  uint64_t v42 = 0;
  uint64_t v43 = 0;
  uint64_t v36 = (uint64_t *)&v42;
  uint64_t v37 = 0x3FF0000000000000;
  uint64_t v38 = &v41;
  uint64_t v39 = &v43;
  char v40 = &v41;
  uint64_t v41 = 0;
  if (sub_1CC9F5C80(&v36, 14, (uint64_t)a1))
  {
    LOWORD(v40) = 257;
    uint64_t v4 = sub_1CB930B40(a2, v43, (uint64_t)v42, a1, (uint64_t)&v36);
    LOWORD(v40) = 257;
    uint64_t v5 = sub_1CB93098C(a2, v41, v4, a1, (uint64_t)&v36);
    LOWORD(v40) = 257;
    unint64_t v6 = llvm::BinaryOperator::Create(14, v42, v5, (const char **)&v36, 0);
    llvm::Instruction::copyIRFlags((uint64_t)v6, (uint64_t)a1, 1);
    if (v6) {
      return v6;
    }
  }
  uint64_t v7 = *((void *)a1 - 8);
  uint64_t v8 = *(void *)(v7 + 8);
  if (!v8) {
    return 0;
  }
  if (*(void *)(v8 + 8)) {
    return 0;
  }
  uint64_t v10 = *((void *)a1 - 4);
  uint64_t v11 = *(void *)(v10 + 8);
  if (!v11 || *(void *)(v11 + 8)) {
    return 0;
  }
  int v12 = *(unsigned __int8 *)(v7 + 16);
  switch(v12)
  {
    case 46:
      uint64_t v13 = *(void *)(v7 - 64);
      if (!v13) {
        return 0;
      }
      unint64_t v6 = *(llvm::Value **)(v7 - 32);
      if (!v6) {
        return v6;
      }
      break;
    case 49:
      uint64_t v13 = *(void *)(v7 - 64);
      if (!v13) {
        return 0;
      }
      unint64_t v6 = *(llvm::Value **)(v7 - 32);
      if (!v6) {
        return v6;
      }
      goto LABEL_68;
    case 5:
      int v17 = *(unsigned __int16 *)(v7 + 18);
      if (v17 != 18) {
        goto LABEL_65;
      }
      uint64_t v18 = *(_DWORD *)(v7 + 20) & 0x7FFFFFF;
      uint64_t v19 = -v18;
      uint64_t v20 = (uint64_t *)(v7 - 32 * v18);
      uint64_t v13 = *v20;
      if (!*v20 || (unint64_t v6 = (llvm::Value *)v20[4]) == 0)
      {
LABEL_39:
        uint64_t v23 = v7 + 32 * v19;
        unint64_t v6 = *(llvm::Value **)v23;
        if (!*(void *)v23) {
          return v6;
        }
        uint64_t v13 = *(void *)(v23 + 32);
        if (!v13) {
          return 0;
        }
LABEL_41:
        int v24 = *(unsigned __int8 *)(v10 + 16);
        if (v24 == 5)
        {
          if (*(_WORD *)(v10 + 18) == 18)
          {
            BOOL v25 = (uint64_t *)(v10 - 32 * (*(_DWORD *)(v10 + 20) & 0x7FFFFFF));
            uint64_t v15 = *v25;
            uint64_t v16 = (llvm::Value *)v25[4];
            if (!v15) {
              goto LABEL_61;
            }
            goto LABEL_47;
          }
        }
        else if (v24 == 46)
        {
          uint64_t v15 = *(void *)(v10 - 64);
          uint64_t v16 = *(llvm::Value **)(v10 - 32);
          if (!v15) {
            goto LABEL_61;
          }
LABEL_47:
          if (v6 == v16)
          {
LABEL_48:
            int v26 = 1;
            goto LABEL_49;
          }
LABEL_61:
          if (!v16 || v6 != (llvm::Value *)v15) {
            goto LABEL_63;
          }
LABEL_77:
          int v26 = 1;
          uint64_t v15 = (uint64_t)v16;
          goto LABEL_49;
        }
LABEL_63:
        if (v12 != 5) {
          return 0;
        }
        int v17 = *(unsigned __int16 *)(v7 + 18);
        goto LABEL_65;
      }
      break;
    default:
      return 0;
  }
  int v14 = *(unsigned __int8 *)(v10 + 16);
  if (v14 == 5)
  {
    if (*(_WORD *)(v10 + 18) != 18) {
      goto LABEL_33;
    }
    uint64_t v21 = (uint64_t *)(v10 - 32 * (*(_DWORD *)(v10 + 20) & 0x7FFFFFF));
    uint64_t v15 = *v21;
    uint64_t v16 = (llvm::Value *)v21[4];
    if (v15) {
      BOOL v22 = v6 == v16;
    }
    else {
      BOOL v22 = 0;
    }
    if (v22) {
      goto LABEL_48;
    }
  }
  else
  {
    if (v14 != 46) {
      goto LABEL_33;
    }
    uint64_t v15 = *(void *)(v10 - 64);
    uint64_t v16 = *(llvm::Value **)(v10 - 32);
    if (v15 && v6 == v16) {
      goto LABEL_48;
    }
  }
  if (v16 && v6 == (llvm::Value *)v15) {
    goto LABEL_77;
  }
LABEL_33:
  if (v12 == 46)
  {
    unint64_t v6 = *(llvm::Value **)(v7 - 64);
    if (!v6) {
      return v6;
    }
    uint64_t v13 = *(void *)(v7 - 32);
    if (!v13) {
      return 0;
    }
    goto LABEL_41;
  }
  int v17 = *(unsigned __int16 *)(v7 + 18);
  if (v17 == 18)
  {
    uint64_t v19 = -(uint64_t)(*(_DWORD *)(v7 + 20) & 0x7FFFFFF);
    goto LABEL_39;
  }
LABEL_65:
  if (v17 != 21) {
    return 0;
  }
  uint64_t v32 = (uint64_t *)(v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF));
  uint64_t v13 = *v32;
  if (!*v32) {
    return 0;
  }
  unint64_t v6 = (llvm::Value *)v32[4];
  if (!v6) {
    return v6;
  }
LABEL_68:
  int v33 = *(unsigned __int8 *)(v10 + 16);
  if (v33 == 5)
  {
    if (*(_WORD *)(v10 + 18) != 21) {
      return 0;
    }
    int v35 = (uint64_t *)(v10 - 32 * (*(_DWORD *)(v10 + 20) & 0x7FFFFFF));
    uint64_t v15 = *v35;
    if (!*v35) {
      return 0;
    }
    uint64_t v34 = (llvm::Value *)v35[4];
  }
  else
  {
    if (v33 != 49) {
      return 0;
    }
    uint64_t v15 = *(void *)(v10 - 64);
    if (!v15) {
      return 0;
    }
    uint64_t v34 = *(llvm::Value **)(v10 - 32);
  }
  if (v6 != v34) {
    return 0;
  }
  int v26 = 0;
LABEL_49:
  if (*((unsigned char *)a1 + 16) == 42)
  {
    LOWORD(v40) = 257;
    uint64_t v27 = (unsigned __int8 *)sub_1CC9F56B4(a2, v13, v15, a1, (uint64_t)&v36);
  }
  else
  {
    LOWORD(v40) = 257;
    uint64_t v27 = (unsigned __int8 *)sub_1CB930B40(a2, v13, v15, a1, (uint64_t)&v36);
  }
  uint64_t v28 = v27;
  uint64_t v43 = 0;
  uint64_t v36 = &v43;
  uint64_t v37 = 0;
  if (!sub_1CC04AFFC((uint64_t)&v36, v27)) {
    goto LABEL_57;
  }
  uint64_t v29 = v43;
  if (sub_1CB8456FC(v43)) {
    return 0;
  }
  if (*(_UNKNOWN **)(v29 + 8) != &unk_1CFB2E344)
  {
    unsigned int v30 = *(unsigned char *)(v29 + 28) & 7;
    if (v30 > 1) {
      goto LABEL_56;
    }
    return 0;
  }
  unsigned int v30 = *(unsigned char *)(*(void *)(v29 + 16) + 28) & 7;
  if (v30 < 2) {
    return 0;
  }
LABEL_56:
  if (v30 == 3) {
    return 0;
  }
LABEL_57:
  LOWORD(v40) = 257;
  if (v26) {
    char v31 = 18;
  }
  else {
    char v31 = 21;
  }
  unint64_t v6 = llvm::BinaryOperator::Create(v31, v28, (uint64_t)v6, (const char **)&v36, 0);
  llvm::Instruction::copyIRFlags((uint64_t)v6, (uint64_t)a1, 1);
  return v6;
}

uint64_t sub_1CC9F0CF4(uint64_t a1, _DWORD *a2)
{
  v47[2] = *MEMORY[0x1E4F143B8];
  if ((*(_DWORD *)(*(void *)a2 + 8) & 0xFE) == 0x12) {
    return 0;
  }
  *(void *)(a1 + 8) = a2;
  int v45 = 0;
  uint64_t v44 = 0;
  int v41 = 0;
  uint64_t v40 = 0;
  int v37 = 0;
  uint64_t v36 = 0;
  int v33 = 0;
  uint64_t v32 = 0;
  int v29 = 0;
  uint64_t v28 = 0;
  int v25 = 0;
  uint64_t v24 = 0;
  int v5 = sub_1CC9F63F8((uint64_t)a2, (uint64_t)&v44, (uint64_t)&v40);
  if (v44) {
    int v6 = sub_1CC9F7474((uint64_t)&v44, (unsigned __int8 *)&v36, (unsigned __int8 *)&v32);
  }
  else {
    int v6 = 0;
  }
  if (v5 == 2 && v40)
  {
    int v7 = sub_1CC9F7474((uint64_t)&v40, (unsigned __int8 *)&v28, (unsigned __int8 *)&v24);
    int v8 = v7;
    BOOL v9 = v6 != 0;
    if (v6 && v7)
    {
      uint64_t v19 = &v21;
      uint64_t v21 = &v36;
      BOOL v22 = &v28;
      uint64_t v20 = 0x400000002;
      if (v6 == 2)
      {
        uint64_t v23 = &v32;
        unsigned int v10 = 3;
        LODWORD(v20) = 3;
      }
      else
      {
        unsigned int v10 = 2;
      }
      if (v7 == 2)
      {
        (&v21)[v10] = &v24;
        LODWORD(v20) = v10 + 1;
      }
      int v12 = a2[5];
      if ((v12 & 0x40000000) != 0) {
        uint64_t v13 = (void *)*((void *)a2 - 1);
      }
      else {
        uint64_t v13 = &a2[-8 * (v12 & 0x7FFFFFF)];
      }
      if (*(unsigned __int8 *)(*v13 + 16) >= 0x15u
        && (uint64_t v14 = *(void *)(*v13 + 8)) != 0
        && !*(void *)(v14 + 8)
        && (uint64_t v15 = v13[4], *(unsigned __int8 *)(v15 + 16) >= 0x15u))
      {
        uint64_t v18 = *(void *)(v15 + 8);
        uint64_t v16 = 1;
        if (v18)
        {
          if (*(void *)(v18 + 8)) {
            uint64_t v16 = 1;
          }
          else {
            uint64_t v16 = 2;
          }
        }
      }
      else
      {
        uint64_t v16 = 1;
      }
      uint64_t v2 = sub_1CC9F750C(a1, (unsigned int *)&v19, (const llvm::APFloat *)v16);
      if (v19 != &v21) {
        free(v19);
      }
      if (v2) {
        goto LABEL_48;
      }
      BOOL v9 = 1;
LABEL_36:
      uint64_t v19 = &v21;
      uint64_t v21 = &v44;
      BOOL v22 = &v28;
      uint64_t v20 = 0x400000002;
      if (v8 == 2)
      {
        uint64_t v23 = &v24;
        LODWORD(v20) = 3;
      }
      uint64_t v2 = sub_1CC9F750C(a1, (unsigned int *)&v19, (const llvm::APFloat *)1);
      if (v19 != &v21) {
        free(v19);
      }
      if (v2) {
        goto LABEL_48;
      }
      goto LABEL_41;
    }
    if (v7) {
      goto LABEL_36;
    }
LABEL_41:
    if (!v9) {
      goto LABEL_47;
    }
    uint64_t v19 = &v21;
    uint64_t v21 = &v40;
    BOOL v22 = &v36;
    uint64_t v20 = 0x400000002;
    if (v6 == 2)
    {
      uint64_t v23 = &v32;
      LODWORD(v20) = 3;
    }
    uint64_t v2 = sub_1CC9F750C(a1, (unsigned int *)&v19, (const llvm::APFloat *)1);
    if (v19 != &v21) {
      free(v19);
    }
    if (!v2) {
LABEL_47:
    }
      uint64_t v2 = 0;
    goto LABEL_48;
  }
  BOOL v9 = v6 != 0;
  if (v5 == 2) {
    goto LABEL_41;
  }
  if (HIWORD(v45) == 1 && v45 == 0) {
    uint64_t v2 = v44;
  }
  else {
    uint64_t v2 = 0;
  }
LABEL_48:
  if (BYTE1(v25))
  {
    if ((_UNKNOWN *)v26 == &unk_1CFB2E344)
    {
      sub_1CB845718(&v27);
    }
    else if ((*(_DWORD *)(v26 + 8) - 64) <= 0xFFFFFF7F && v27)
    {
      MEMORY[0x1D25D9CB0](v27, 0x1000C8000313F17);
    }
  }
  if (BYTE1(v29))
  {
    if ((_UNKNOWN *)v30 == &unk_1CFB2E344)
    {
      sub_1CB845718(&v31);
    }
    else if ((*(_DWORD *)(v30 + 8) - 64) <= 0xFFFFFF7F && v31)
    {
      MEMORY[0x1D25D9CB0](v31, 0x1000C8000313F17);
    }
  }
  if (BYTE1(v33))
  {
    if ((_UNKNOWN *)v34 == &unk_1CFB2E344)
    {
      sub_1CB845718(&v35);
    }
    else if ((*(_DWORD *)(v34 + 8) - 64) <= 0xFFFFFF7F && v35)
    {
      MEMORY[0x1D25D9CB0](v35, 0x1000C8000313F17);
    }
  }
  if (BYTE1(v37))
  {
    if ((_UNKNOWN *)v38 == &unk_1CFB2E344)
    {
      sub_1CB845718(&v39);
    }
    else if ((*(_DWORD *)(v38 + 8) - 64) <= 0xFFFFFF7F && v39)
    {
      MEMORY[0x1D25D9CB0](v39, 0x1000C8000313F17);
    }
  }
  if (BYTE1(v41))
  {
    if ((_UNKNOWN *)v42 == &unk_1CFB2E344)
    {
      sub_1CB845718(&v43);
    }
    else if ((*(_DWORD *)(v42 + 8) - 64) <= 0xFFFFFF7F && v43)
    {
      MEMORY[0x1D25D9CB0](v43, 0x1000C8000313F17);
    }
  }
  if (BYTE1(v45))
  {
    if ((_UNKNOWN *)v46 == &unk_1CFB2E344)
    {
      sub_1CB845718(v47);
    }
    else if ((*(_DWORD *)(v46 + 8) - 64) <= 0xFFFFFF7F && v47[0])
    {
      MEMORY[0x1D25D9CB0](v47[0], 0x1000C8000313F17);
    }
  }
  return v2;
}

llvm::Instruction *sub_1CC9F1230(uint64_t a1, uint64_t a2, uint64_t a3, llvm::Type ***a4, int a5)
{
  uint64_t v7 = a3;
  int v9 = *(unsigned __int8 *)(a2 + 16);
  if (v9 == 62 || v9 == 5 && *(_WORD *)(a2 + 18) == 34)
  {
    int v10 = 0;
    uint64_t v11 = a2;
  }
  else
  {
    int v12 = *(unsigned __int8 *)(a3 + 16);
    if (v12 == 62 || v12 == 5 && *(_WORD *)(a3 + 18) == 34)
    {
      int v10 = 1;
      int v9 = *(unsigned __int8 *)(a3 + 16);
      uint64_t v11 = a3;
    }
    else
    {
      int v10 = 0;
      uint64_t v11 = a2;
      a2 = a3;
    }
    if (v9 == 62)
    {
      uint64_t v7 = a2;
    }
    else
    {
      if (v9 != 5) {
        return 0;
      }
      uint64_t v7 = a2;
      if (*(_WORD *)(v11 + 18) != 34) {
        return 0;
      }
    }
  }
  int v13 = *(_DWORD *)(v11 + 20);
  if ((v13 & 0x40000000) != 0) {
    uint64_t v14 = *(uint64_t **)(v11 - 8);
  }
  else {
    uint64_t v14 = (uint64_t *)(v11 - 32 * (v13 & 0x7FFFFFF));
  }
  uint64_t v15 = *v14;
  if (*v14 == v7)
  {
    uint64_t v24 = 0;
    goto LABEL_60;
  }
  int v16 = *(unsigned __int8 *)(v7 + 16);
  if (v16 != 62 && (v16 != 5 || *(_WORD *)(v7 + 18) != 34)) {
    return 0;
  }
  if ((v13 & 0x40000000) != 0) {
    int v17 = *(llvm::Value ***)(v11 - 8);
  }
  else {
    int v17 = (llvm::Value **)(v11 - 32 * (v13 & 0x7FFFFFF));
  }
  uint64_t v18 = llvm::Value::stripPointerCasts(*v17);
  int v19 = *(_DWORD *)(v7 + 20);
  if ((v19 & 0x40000000) != 0) {
    uint64_t v20 = *(llvm::Value ***)(v7 - 8);
  }
  else {
    uint64_t v20 = (llvm::Value **)(v7 - 32 * (v19 & 0x7FFFFFF));
  }
  uint64_t v21 = llvm::Value::stripPointerCasts(*v20);
  BOOL result = 0;
  BOOL v23 = v18 == v21;
  if (v18 == v21) {
    uint64_t v24 = v7;
  }
  else {
    uint64_t v24 = 0;
  }
  if (v23)
  {
    int v25 = *(_DWORD *)(v11 + 20);
    if ((v25 & 0x40000000) != 0)
    {
      uint64_t v27 = *(void *)(v11 - 8);
      uint64_t v26 = v25 & 0x7FFFFFF;
    }
    else
    {
      uint64_t v26 = v25 & 0x7FFFFFF;
      uint64_t v27 = v11 - 32 * v26;
    }
    if (v26 == 1)
    {
      int v28 = 0;
    }
    else
    {
      int v28 = 0;
      int v29 = (uint64_t *)(v27 + 32);
      uint64_t v30 = 32 * v26 - 32;
      do
      {
        uint64_t v31 = *v29;
        v29 += 4;
        if (*(unsigned char *)(v31 + 16) != 16) {
          ++v28;
        }
        v30 -= 32;
      }
      while (v30);
    }
    int v32 = *(_DWORD *)(v24 + 20);
    if ((v32 & 0x40000000) != 0)
    {
      uint64_t v34 = *(void *)(v24 - 8);
      uint64_t v33 = v32 & 0x7FFFFFF;
    }
    else
    {
      uint64_t v33 = v32 & 0x7FFFFFF;
      uint64_t v34 = v24 - 32 * v33;
    }
    if (v33 == 1)
    {
      int v35 = 0;
    }
    else
    {
      int v35 = 0;
      uint64_t v36 = (uint64_t *)(v34 + 32);
      uint64_t v37 = 32 * v33 - 32;
      do
      {
        uint64_t v38 = *v36;
        v36 += 4;
        if (*(unsigned char *)(v38 + 16) != 16) {
          ++v35;
        }
        v37 -= 32;
      }
      while (v37);
    }
    if ((v35 + v28) >= 2)
    {
      if (v28)
      {
        uint64_t v39 = *(void *)(v11 + 8);
        if (!v39 || *(void *)(v39 + 8)) {
          return 0;
        }
      }
      if (v35)
      {
        uint64_t v40 = *(void *)(v24 + 8);
        if (!v40) {
          return 0;
        }
        uint64_t v24 = v7;
        if (*(void *)(v40 + 8)) {
          return 0;
        }
      }
    }
LABEL_60:
    int v41 = sub_1CD4A7084(*(void *)(a1 + 24), *(void *)(a1 + 80), (llvm::GEPOperator *)v11, 0);
    uint64_t v43 = v41;
    if (*((unsigned __int8 *)v41 + 16) <= 0x1Bu) {
      uint64_t v44 = 0;
    }
    else {
      uint64_t v44 = v41;
    }
    int v45 = a5 ^ 1;
    if (!v44) {
      int v45 = 1;
    }
    if (v15 != v7) {
      int v45 = 1;
    }
    if (((v10 | v45) & 1) == 0 && (*(unsigned char *)(v11 + 17) & 2) != 0 && *((unsigned char *)v44 + 16) == 45) {
      *((unsigned char *)v44 + 17) |= 2u;
    }
    if (v15 == v7)
    {
      if (!v10)
      {
LABEL_73:
        uint64_t v46 = *(void *)(a1 + 24);
        __int16 v52 = 257;
        return sub_1CBF56614(v46, v43, a4, (llvm::Type *)1, (uint64_t)v51, v42);
      }
    }
    else
    {
      int v47 = sub_1CD4A7084(*(void *)(a1 + 24), *(void *)(a1 + 80), (llvm::GEPOperator *)v24, 0);
      uint64_t v48 = 0;
      uint64_t v49 = *(void *)(a1 + 24);
      v51[0] = "gepdiff";
      __int16 v52 = 259;
      if ((*(unsigned char *)(v11 + 17) & 2) != 0) {
        uint64_t v48 = (*(unsigned __int8 *)(v24 + 17) >> 1) & 1;
      }
      uint64_t v43 = sub_1CB84494C(v49, (uint64_t)v43, (uint64_t)v47, (uint64_t)v51, 0, v48);
      if (!v10) {
        goto LABEL_73;
      }
    }
    uint64_t v50 = *(void *)(a1 + 24);
    v51[0] = "diff.neg";
    __int16 v52 = 259;
    uint64_t v43 = sub_1CD5A6358(v50, v43, (uint64_t)v51, 0, 0);
    goto LABEL_73;
  }
  return result;
}

llvm::Value *sub_1CC9F15B4(uint64_t a1, uint64_t a2)
{
  uint64_t v382 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = *(void *)(a2 - 64);
  uint64_t v5 = *(void *)(a2 - 32);
  unsigned int v6 = *(unsigned __int8 *)(a2 + 17);
  long long v7 = *(_OWORD *)(a1 + 120);
  long long v8 = *(_OWORD *)(a1 + 104);
  long long v358 = *(_OWORD *)(a1 + 88);
  long long v359 = v8;
  unsigned int v361 = (uint64_t ****)*((void *)&v7 + 1);
  int v360 = (uint64_t ****)a2;
  int v9 = sub_1CC02ABD8(v4, v5, (const llvm::APFloat *)((v6 >> 2) & 1), (v6 >> 1) & 1, (uint64_t)&v358, (llvm::DSOLocalEquivalent **)3);
  if (v9) {
    return (llvm::Value *)sub_1CC9D3C84(a1, (llvm::ValueAsMetadata *)a2, v9);
  }
  uint64_t v11 = sub_1CC9D812C(a1, (unsigned __int8 *)a2);
  if (!v11)
  {
    uint64_t v11 = sub_1CC9D6B70(a1, a2);
    if (!v11)
    {
      std::string::size_type v14 = *(void *)(a2 - 64);
      uint64_t v15 = *(llvm::ConstantExpr **)(a2 - 32);
      int v16 = sub_1CC9D3E08(a1, v15, v12);
      if (v16)
      {
        LOWORD(v360) = 257;
        uint64_t v11 = (uint64_t)llvm::BinaryOperator::Create(13, (void *)v14, (uint64_t)v16, (const char **)&v358, 0);
        if (v15 && (unsigned int v17 = *((unsigned __int8 *)v15 + 16), v17 >= 0x1C) && v17 - 59 >= 0xFFFFFFEE)
        {
          if ((*((unsigned char *)v15 + 17) & 4) == 0) {
            return (llvm::Value *)v11;
          }
        }
        else if (!llvm::Constant::isNotMinSignedValue((unint64_t)v15))
        {
          return (llvm::Value *)v11;
        }
        if ((*(unsigned char *)(a2 + 17) & 4) != 0) {
          *(unsigned char *)(v11 + 17) |= 4u;
        }
        return (llvm::Value *)v11;
      }
      uint64_t v11 = (uint64_t)sub_1CC9EFC00(a2, *(void *)(a1 + 24));
      if (v11) {
        return (llvm::Value *)v11;
      }
      if (v14)
      {
        unsigned int v18 = *(unsigned __int8 *)(v14 + 16);
        if (v18 <= 0x14 && v18 != 5)
        {
          int v19 = *((unsigned __int8 *)v15 + 16);
          if (v19 != 5)
          {
            if (v19 != 41) {
              goto LABEL_31;
            }
            uint64_t v20 = *((void *)v15 - 8);
            if (!v20) {
              goto LABEL_31;
            }
            uint64_t v21 = (unsigned __int8 *)*((void *)v15 - 4);
            unsigned int v22 = v21[16];
            if (v22 == 5 || !v21 || v22 > 0x14) {
              goto LABEL_31;
            }
LABEL_59:
            Sub = llvm::ConstantExpr::getSub((llvm::ConstantExpr *)v14, (llvm::Constant *)v21, 0, 0);
            LOWORD(v360) = 257;
            uint64_t v33 = (void **)&v358;
            char v34 = 15;
            uint64_t v35 = v20;
            return llvm::BinaryOperator::Create(v34, Sub, v35, (const char **)v33, 0);
          }
          if (*((_WORD *)v15 + 9) == 13)
          {
            BOOL v23 = (uint64_t *)((char *)v15 - 32 * (*((_DWORD *)v15 + 5) & 0x7FFFFFF));
            uint64_t v20 = *v23;
            if (*v23)
            {
              uint64_t v21 = (unsigned __int8 *)v23[4];
              if (v21)
              {
                if (v21[16] != 5) {
                  goto LABEL_59;
                }
              }
            }
          }
        }
      }
LABEL_31:
      int v24 = sub_1CBF535C4((uint64_t)&v358, (llvm::Constant *)v14);
      int v25 = v24;
      if (v24)
      {
        for (uint64_t i = *(void *)(a2 + 8); i; uint64_t i = *(void *)(i + 8))
        {
          uint64_t v27 = *(void *)(i + 24);
          if (v27 && *(unsigned char *)(v27 + 16) == 85)
          {
            int v28 = *(_DWORD *)(v27 + 20);
            if ((v28 & 0x40000000) != 0)
            {
              uint64_t v30 = *(void *)(v27 - 8);
              if (*(llvm::ConstantExpr **)(v30 + 32) == v15 && *(void *)(v30 + 64) == a2) {
                goto LABEL_49;
              }
              uint64_t v29 = *(void *)(v27 - 8);
            }
            else
            {
              uint64_t v29 = v27 - 32 * (v28 & 0x7FFFFFF);
              if (*(llvm::ConstantExpr **)(v29 + 32) == v15 && *(void *)(v29 + 64) == a2) {
                goto LABEL_49;
              }
            }
            if (*(void *)(v29 + 32) == a2 && *(llvm::ConstantExpr **)(v29 + 64) == v15) {
              goto LABEL_49;
            }
          }
        }
      }
      uint64_t v31 = llvm::Negator::Negate(v24, (uint64_t **)v15, (void *)a1);
      if (v31)
      {
        Sub = (const llvm::detail::DoubleAPFloat *)v31;
        LOWORD(v360) = 257;
        uint64_t v33 = (void **)&v358;
        char v34 = 13;
        uint64_t v35 = v14;
        return llvm::BinaryOperator::Create(v34, Sub, v35, (const char **)v33, 0);
      }
LABEL_49:
      if (v25)
      {
        uint64_t v11 = (uint64_t)sub_1CC9D8DBC(a1, a2);
        if (!v11)
        {
          char v37 = *(unsigned char *)(a2 + 17);
          if ((v37 & 4) != 0
            || (v38 = llvm::computeOverflowForSignedSub((llvm *)v14, v15, *(const llvm::Value **)(a1 + 80), *(const llvm::DataLayout **)(a1 + 56), (llvm::AssumptionCache *)a2, *(const llvm::Instruction **)(a1 + 72), v36), char v37 = *(unsigned char *)(a2 + 17), v38 != 3))
          {
            int v39 = 0;
          }
          else
          {
            v37 |= 4u;
            *(unsigned char *)(a2 + 17) = v37;
            int v39 = 1;
          }
          if ((v37 & 2) != 0
            || llvm::computeOverflowForUnsignedSub((llvm *)v14, v15, *(const llvm::Value **)(a1 + 80), *(const llvm::DataLayout **)(a1 + 56), (llvm::AssumptionCache *)a2, *(const llvm::Instruction **)(a1 + 72), v36) != 3)
          {
            if (!v39) {
              return 0;
            }
          }
          else
          {
            *(unsigned char *)(a2 + 17) |= 2u;
          }
          return (llvm::Value *)a2;
        }
        return (llvm::Value *)v11;
      }
      int v9 = (llvm::Value *)sub_1CC9D337C(a1, (unsigned __int8 *)a2);
      if (v9) {
        return (llvm::Value *)sub_1CC9D3C84(a1, (llvm::ValueAsMetadata *)a2, v9);
      }
      int v40 = *(_DWORD *)(*(void *)a2 + 8);
      if ((v40 & 0xFE) == 0x12) {
        int v40 = *(_DWORD *)(**(void **)(*(void *)a2 + 16) + 8);
      }
      if (v40 == 269)
      {
        LOWORD(v360) = 257;
        uint64_t v33 = (void **)&v358;
        char v34 = 30;
        Sub = (const llvm::detail::DoubleAPFloat *)v14;
        uint64_t v35 = (uint64_t)v15;
        return llvm::BinaryOperator::Create(v34, Sub, v35, (const char **)v33, 0);
      }
      if (sub_1CBF687D0((uint64_t)&v358, (llvm::Constant *)v14))
      {
        LOWORD(v360) = 257;
        return llvm::BinaryOperator::CreateNot((llvm::Constant **)v15, (llvm::Value *)&v358, 0, v41);
      }
      unint64_t v371 = 0;
      std::string::size_type v372 = 0;
      *(void *)&long long v358 = &v372;
      uint64_t v42 = *(void *)(v14 + 8);
      if (!v42 || *(void *)(v42 + 8))
      {
LABEL_71:
        uint64_t v43 = *(void *)(*(void *)(*(void *)(a2 + 40) + 56) + 40) + 216;
        LOWORD(v360) = 260;
        *(void *)&long long v358 = v43;
        llvm::Triple::Triple((llvm::Triple *)__p, (const llvm::Twine *)&v358);
        uint64_t v44 = *(void *)(v14 + 8);
        if (!v44 || *(void *)(v44 + 8))
        {
          uint64_t v45 = 0;
LABEL_74:
          if (!sub_1CC9F4000(v14, v45)
            || ((uint64_t v46 = (void **)*((void *)v15 + 1)) == 0 ? (v47 = 0) : (v47 = v46[1] == 0),
                !sub_1CC9F4000((uint64_t)v15, v47)))
          {
LABEL_106:
            uint64_t v365 = 0;
            unint64_t v366 = 0;
            LODWORD(v358) = 317;
            *((void *)&v358 + 1) = 0;
            *(void *)&long long v359 = &v366;
            uint64_t v63 = *(void *)(v14 + 8);
            if (v63)
            {
              if (!*(void *)(v63 + 8))
              {
                if (sub_1CC045310((uint64_t)&v358, v14))
                {
                  LODWORD(v379.__r_.__value_.__l.__data_) = 317;
                  v379.__r_.__value_.__l.__size_ = 0;
                  v379.__r_.__value_.__r.__words[2] = (std::string::size_type)&v365;
                  int v64 = (void **)*((void *)v15 + 1);
                  if (v64)
                  {
                    if (!v64[1] && sub_1CC045310((uint64_t)&v379, (uint64_t)v15) && *v366 == *v365)
                    {
                      uint64_t v114 = *(void *)(a1 + 24);
                      LOWORD(v360) = 257;
                      int v115 = sub_1CB84494C(v114, (uint64_t)v366, (uint64_t)v365, (uint64_t)&v358, 0, 0);
                      BOOL v116 = *(uint64_t **)(a1 + 24);
                      v379.__r_.__value_.__r.__words[0] = *(void *)v115;
                      uint64_t v376 = v115;
                      LOWORD(v360) = 257;
                      uint64_t Intrinsic = (llvm::Value *)llvm::IRBuilderBase::CreateIntrinsic(v116, 317, (uint64_t)&v379, 1, (uint64_t *)&v376, 1, 0, (uint64_t)&v358);
LABEL_552:
                      char v71 = sub_1CC9D3C84(a1, (llvm::ValueAsMetadata *)a2, Intrinsic);
                      goto LABEL_615;
                    }
                  }
                }
              }
            }
            if (v14 && *(unsigned __int8 *)(v14 + 16) <= 0x14u)
            {
              v379.__r_.__value_.__r.__words[0] = 0;
              *(void *)&long long v358 = &v379;
              if (sub_1CBC5BE40((void **)&v358, (uint64_t)v15))
              {
                uint64_t v65 = v379.__r_.__value_.__r.__words[0];
                int v66 = *(_DWORD *)(*(void *)v379.__r_.__value_.__l.__data_ + 8);
                if ((v66 & 0xFE) == 0x12) {
                  int v66 = *(_DWORD *)(**(void **)(*(void *)v379.__r_.__value_.__l.__data_ + 16) + 8);
                }
                if (v66 == 269)
                {
                  uint64_t v67 = (llvm::Constant *)llvm::ConstantInt::get(*(llvm::ConstantInt **)v14, 1uLL, 0);
                  Add = (uint64_t *)llvm::ConstantExpr::getSub((llvm::ConstantExpr *)v14, v67, 0, 0);
LABEL_125:
                  LOWORD(v360) = 257;
                  char v71 = sub_1CC199EFC(v65, Add, v14, (const char **)&v358, 0, 0);
LABEL_615:
                  uint64_t v11 = (uint64_t)v71;
                  goto LABEL_616;
                }
              }
              *(void *)&long long v358 = &v379;
              if (sub_1CBC5BEAC((void **)&v358, (uint64_t)v15))
              {
                uint64_t v65 = v379.__r_.__value_.__r.__words[0];
                int v69 = *(_DWORD *)(*(void *)v379.__r_.__value_.__l.__data_ + 8);
                if ((v69 & 0xFE) == 0x12) {
                  int v69 = *(_DWORD *)(**(void **)(*(void *)v379.__r_.__value_.__l.__data_ + 16) + 8);
                }
                if (v69 == 269)
                {
                  uint64_t v70 = (llvm::Constant *)llvm::ConstantInt::get(*(llvm::ConstantInt **)v14, 1uLL, 0);
                  Add = (uint64_t *)llvm::ConstantExpr::getAdd((llvm::ConstantExpr *)v14, v70, 0, 0);
                  goto LABEL_125;
                }
              }
              *(void *)&long long v358 = &v379;
              if (sub_1CBF686A0((void **)&v358, 30, (uint64_t)v15))
              {
                unsigned int v73 = (llvm::Instruction *)v379.__r_.__value_.__r.__words[0];
                BOOL v74 = (llvm::Constant *)llvm::ConstantInt::get(*(llvm::ConstantInt **)v14, 1uLL, 0);
                uint64_t v75 = llvm::ConstantExpr::getAdd((llvm::ConstantExpr *)v14, v74, 0, 0);
                LOWORD(v360) = 257;
                uint64_t v76 = (std::string *)&v358;
                char v77 = 13;
LABEL_128:
                uint64_t v78 = v73;
LABEL_614:
                char v71 = llvm::BinaryOperator::Create(v77, v78, (uint64_t)v75, (const char **)&v76->__r_.__value_.__l.__data_, 0);
                goto LABEL_615;
              }
              int v83 = *((unsigned __int8 *)v15 + 16);
              if (v15 && v83 == 85)
              {
                uint64_t v11 = (uint64_t)sub_1CC9D447C(a1, (unsigned char *)a2, v15, 0, v72);
                if (v11) {
                  goto LABEL_616;
                }
                int v83 = *((unsigned __int8 *)v15 + 16);
              }
              if (v83 == 83)
              {
                uint64_t v11 = (uint64_t)sub_1CC9D50C0(a1, (llvm::Instruction *)a2, (uint64_t)v15);
                if (v11) {
                  goto LABEL_616;
                }
                int v83 = *((unsigned __int8 *)v15 + 16);
              }
              if (v83 != 5)
              {
                if (v83 != 43) {
                  goto LABEL_172;
                }
                uint64_t v84 = (unsigned __int8 *)*((void *)v15 - 8);
                unsigned int v85 = v84[16];
                if (v85 == 5) {
                  goto LABEL_172;
                }
                if (!v84) {
                  goto LABEL_172;
                }
                if (v85 > 0x14) {
                  goto LABEL_172;
                }
                std::string::size_type v86 = *((void *)v15 - 4);
                if (!v86) {
                  goto LABEL_172;
                }
LABEL_171:
                v379.__r_.__value_.__r.__words[0] = v86;
                uint64_t v75 = llvm::ConstantExpr::getSub((llvm::ConstantExpr *)v14, (llvm::Constant *)v84, 0, 0);
                LOWORD(v360) = 257;
                uint64_t v76 = (std::string *)&v358;
                char v77 = 13;
                uint64_t v78 = (llvm::Instruction *)v86;
                goto LABEL_614;
              }
              if (*((_WORD *)v15 + 9) == 15)
              {
                unsigned int v98 = (unsigned __int8 **)((char *)v15 - 32 * (*((_DWORD *)v15 + 5) & 0x7FFFFFF));
                uint64_t v84 = *v98;
                if (*v98)
                {
                  if (v84[16] != 5)
                  {
                    std::string::size_type v86 = (std::string::size_type)v98[4];
                    if (v86) {
                      goto LABEL_171;
                    }
                  }
                }
              }
            }
LABEL_172:
            char v364 = 0;
            long long v358 = (unint64_t)&v364;
            if (!sub_1CBF528D8((uint64_t)&v358, (unsigned __int8 *)v14)) {
              goto LABEL_224;
            }
            uint64_t v100 = v364;
            uint64_t v101 = *((unsigned int *)v364 + 2);
            if (v101 > 0x40)
            {
              int v122 = llvm::APInt::countTrailingOnesSlowCase(v364);
              if (!v122) {
                goto LABEL_224;
              }
              int v321 = 0;
              int64_t v322 = (unint64_t)(v101 + 63) >> 6;
              do
              {
                BOOL v286 = v322-- < 1;
                if (v286) {
                  break;
                }
                unint64_t v323 = *(void *)(*(void *)v100 + 8 * v322);
                v321 += __clz(v323);
              }
              while (!v323);
              int v324 = v101 | 0xFFFFFFC0;
              if ((v101 & 0x3F) == 0) {
                int v324 = 0;
              }
              if (v122 + v321 + v324 != v101) {
                goto LABEL_224;
              }
            }
            else if (!*(void *)v364 || ((*(void *)v364 + 1) & *(void *)v364) != 0)
            {
              goto LABEL_224;
            }
            uint64_t v102 = *(void *)(a1 + 56);
            uint64_t v103 = *(void *)(a1 + 72);
            unsigned int v104 = (llvm::ConstantExpr *)a2;
            if (!*(void *)(a2 + 40))
            {
              if (!v15 || *((unsigned __int8 *)v15 + 16) < 0x1Cu || (unsigned int v104 = v15, !*((void *)v15 + 5))) {
                unsigned int v104 = 0;
              }
            }
            *(void *)&long long v358 = *(void *)(a1 + 80);
            *((void *)&v358 + 1) = v102;
            *(void *)&long long v359 = v104;
            *((void *)&v359 + 1) = v103;
            int v360 = 0;
            LOBYTE(v361) = 1;
            sub_1CC16089C((uint64_t *)v15, 0, (const llvm::DataLayout **)&v358, (uint64_t)&v379);
            unsigned int v105 = *((_DWORD *)v364 + 2);
            if (v105 >= 0x41) {
              operator new[]();
            }
            if (!v105 || (v379.__r_.__value_.__r.__words[0] | *(void *)v364) == 0xFFFFFFFFFFFFFFFFLL >> -(char)v105)
            {
              LOWORD(v360) = 257;
              uint64_t v100 = llvm::BinaryOperator::Create(30, v15, v14, (const char **)&v358, 0);
              char v106 = 1;
            }
            else
            {
              char v106 = 0;
            }
            if (v380 >= 0x41 && v379.__r_.__value_.__r.__words[2]) {
              MEMORY[0x1D25D9CB0](v379.__r_.__value_.__r.__words[2], 0x1000C8000313F17);
            }
            if (LODWORD(v379.__r_.__value_.__r.__words[1]) >= 0x41 && v379.__r_.__value_.__r.__words[0]) {
              MEMORY[0x1D25D9CB0](v379.__r_.__value_.__r.__words[0], 0x1000C8000313F17);
            }
            uint64_t v11 = (uint64_t)v100;
            if (v106) {
              goto LABEL_616;
            }
LABEL_224:
            int v123 = *((unsigned __int8 *)v15 + 16);
            if (v123 == 5)
            {
              if (*((_WORD *)v15 + 9) == 13)
              {
                int v127 = (llvm::Instruction **)((char *)v15 - 32 * (*((_DWORD *)v15 + 5) & 0x7FFFFFF));
                unint64_t v124 = *v127;
                int v125 = v127[4];
                if ((llvm::Instruction *)v14 == *v127 && v125) {
                  goto LABEL_262;
                }
                if (v124) {
                  BOOL v126 = v14 == (void)v125;
                }
                else {
                  BOOL v126 = 0;
                }
LABEL_234:
                int v125 = v124;
                if (v126) {
                  goto LABEL_262;
                }
              }
            }
            else if (v123 == 41)
            {
              unint64_t v124 = (llvm::Instruction *)*((void *)v15 - 8);
              int v125 = (llvm::Instruction *)*((void *)v15 - 4);
              if ((llvm::Instruction *)v14 == v124 && v125) {
                goto LABEL_262;
              }
              if (v124)
              {
                BOOL v126 = v14 == (void)v125;
                goto LABEL_234;
              }
            }
            int v128 = *(unsigned __int8 *)(v14 + 16);
            if (v128 == 5)
            {
              if (*(_WORD *)(v14 + 18) != 15
                || (uint64_t v129 = (llvm::ConstantExpr **)(v14 - 32 * (*(_DWORD *)(v14 + 20) & 0x7FFFFFF)), v15 != *v129)
                || (int v125 = v129[4]) == 0)
              {
LABEL_242:
                if (v123 == 5)
                {
                  if (*((_WORD *)v15 + 9) != 28) {
                    goto LABEL_271;
                  }
                  unsigned int v130 = (llvm::Instruction **)((char *)v15 - 32 * (*((_DWORD *)v15 + 5) & 0x7FFFFFF));
                  uint64_t v78 = *v130;
                  if (!*v130) {
                    goto LABEL_271;
                  }
                  uint64_t v75 = v130[4];
                  if (!v75) {
                    goto LABEL_271;
                  }
                }
                else
                {
                  if (v123 != 56) {
                    goto LABEL_271;
                  }
                  uint64_t v78 = (llvm::Instruction *)*((void *)v15 - 8);
                  if (!v78) {
                    goto LABEL_271;
                  }
                  uint64_t v75 = (const llvm::detail::DoubleAPFloat *)*((void *)v15 - 4);
                  if (!v75) {
                    goto LABEL_271;
                  }
                }
                if (*(unsigned __int8 *)(v14 + 16) > 0x37u)
                {
                  if (v128 == 56) {
                    goto LABEL_285;
                  }
                  if (v128 != 57) {
                    goto LABEL_324;
                  }
                  uint64_t v131 = *(llvm::Instruction **)(v14 - 64);
                  unint64_t v132 = *(const llvm::detail::DoubleAPFloat **)(v14 - 32);
                }
                else
                {
                  if (v128 != 5)
                  {
                    if (v128 != 41) {
                      goto LABEL_324;
                    }
                    goto LABEL_279;
                  }
                  int v134 = *(unsigned __int16 *)(v14 + 18);
                  if (v134 != 29)
                  {
LABEL_275:
                    if (v134 != 13) {
                      goto LABEL_314;
                    }
                    int v136 = (llvm::Instruction **)(v14 - 32 * (*(_DWORD *)(v14 + 20) & 0x7FFFFFF));
                    uint64_t v78 = *v136;
                    if (!*v136) {
                      goto LABEL_300;
                    }
                    uint64_t v75 = v136[4];
                    if (!v75) {
                      goto LABEL_300;
                    }
                    int v137 = 0;
LABEL_282:
                    if (v123 == 5)
                    {
                      if (*((_WORD *)v15 + 9) != 29) {
                        goto LABEL_294;
                      }
                      unsigned int v142 = (llvm::Instruction **)((char *)v15 - 32 * (*((_DWORD *)v15 + 5) & 0x7FFFFFF));
                      unsigned int v138 = *v142;
                      uint64_t v139 = v142[4];
                    }
                    else
                    {
                      if (v123 != 57) {
                        goto LABEL_294;
                      }
                      unsigned int v138 = (llvm::Instruction *)*((void *)v15 - 8);
                      uint64_t v139 = (const llvm::detail::DoubleAPFloat *)*((void *)v15 - 4);
                    }
                    if (v78 == v138 && v75 == v139 || v78 == v139 && v75 == v138) {
                      goto LABEL_366;
                    }
LABEL_294:
                    if (v137)
                    {
                      uint64_t v78 = *(llvm::Instruction **)(v14 - 64);
                      if (!v78) {
                        goto LABEL_312;
                      }
                      goto LABEL_296;
                    }
                    if (v128 != 5) {
                      goto LABEL_324;
                    }
                    int v134 = *(unsigned __int16 *)(v14 + 18);
                    if (v134 == 13)
                    {
LABEL_300:
                      uint64_t v143 = (llvm::Instruction **)(v14 - 32 * (*(_DWORD *)(v14 + 20) & 0x7FFFFFF));
                      uint64_t v78 = *v143;
                      if (!*v143) {
                        goto LABEL_324;
                      }
                      uint64_t v75 = v143[4];
                      if (!v75) {
                        goto LABEL_324;
                      }
                      goto LABEL_302;
                    }
LABEL_314:
                    if (v134 == 28)
                    {
                      BOOL v147 = (uint64_t *)(v14 - 32 * (*(_DWORD *)(v14 + 20) & 0x7FFFFFF));
                      uint64_t v140 = *v147;
                      if (*v147)
                      {
                        uint64_t v141 = v147[4];
                        if (v141)
                        {
LABEL_317:
                          if (v123 != 5)
                          {
                            if (v123 != 58)
                            {
                              if (v123 != 57) {
                                goto LABEL_349;
                              }
                              uint64_t v148 = *((void *)v15 - 8);
                              uint64_t v149 = *((void *)v15 - 4);
                              if (v140 != v148 || v141 != v149)
                              {
                                if (v140 != v149) {
                                  goto LABEL_359;
                                }
LABEL_333:
                                if (v141 != v148) {
                                  goto LABEL_338;
                                }
                              }
LABEL_334:
                              uint64_t v152 = *(void *)(v14 + 8);
                              if (v152 && !*(void *)(v152 + 8)
                                || (unsigned int v153 = (void **)*((void *)v15 + 1)) != 0 && !v153[1])
                              {
                                uint64_t v217 = *(void *)(a1 + 24);
                                LOWORD(v360) = 257;
                                int v125 = sub_1CC2428C0(v217, v140, v141, (uint64_t)&v358);
                                goto LABEL_467;
                              }
LABEL_338:
                              if (v123 != 5) {
                                goto LABEL_349;
                              }
                              goto LABEL_339;
                            }
LABEL_326:
                            uint64_t v78 = (llvm::Instruction *)*((void *)v15 - 8);
                            if (v78)
                            {
                              uint64_t v75 = (const llvm::detail::DoubleAPFloat *)*((void *)v15 - 4);
                              if (v75) {
                                goto LABEL_342;
                              }
                            }
                            goto LABEL_349;
                          }
                          if (*((_WORD *)v15 + 9) == 29)
                          {
                            int v150 = (uint64_t *)((char *)v15 - 32 * (*((_DWORD *)v15 + 5) & 0x7FFFFFF));
                            uint64_t v148 = *v150;
                            uint64_t v151 = v150[4];
                            if (v140 == v148 && v141 == v151) {
                              goto LABEL_334;
                            }
                            if (v140 == v151) {
                              goto LABEL_333;
                            }
                          }
                          goto LABEL_339;
                        }
                      }
                    }
LABEL_324:
                    if (v123 != 5)
                    {
                      if (v123 != 58) {
                        goto LABEL_349;
                      }
                      goto LABEL_326;
                    }
LABEL_339:
                    if (*((_WORD *)v15 + 9) == 30)
                    {
                      uint64_t v154 = (llvm::Instruction **)((char *)v15 - 32 * (*((_DWORD *)v15 + 5) & 0x7FFFFFF));
                      uint64_t v78 = *v154;
                      if (*v154)
                      {
                        uint64_t v75 = v154[4];
                        if (v75)
                        {
LABEL_342:
                          if (v128 == 5)
                          {
                            if (*(_WORD *)(v14 + 18) != 29) {
                              goto LABEL_360;
                            }
                            unsigned int v159 = (llvm::Instruction **)(v14 - 32 * (*(_DWORD *)(v14 + 20) & 0x7FFFFFF));
                            unint64_t v155 = *v159;
                            int v160 = v159[4];
                            if (v78 == v155 && v75 == v160) {
                              goto LABEL_366;
                            }
                            if (v78 != v160) {
                              goto LABEL_360;
                            }
LABEL_358:
                            if (v75 != v155)
                            {
LABEL_359:
                              if (v128 != 5) {
                                goto LABEL_378;
                              }
LABEL_360:
                              if (*(_WORD *)(v14 + 18) != 30) {
                                goto LABEL_378;
                              }
                              std::string::size_type v161 = v14 - 32 * (*(_DWORD *)(v14 + 20) & 0x7FFFFFF);
                              int v157 = *(void **)v161;
                              if (!*(void *)v161) {
                                goto LABEL_378;
                              }
                              uint64_t v158 = *(void *)(v161 + 32);
                              if (!v158) {
                                goto LABEL_378;
                              }
LABEL_363:
                              if (v123 == 5)
                              {
                                if (*((_WORD *)v15 + 9) != 29) {
                                  goto LABEL_378;
                                }
                                uint64_t v164 = (void *)((char *)v15 - 32 * (*((_DWORD *)v15 + 5) & 0x7FFFFFF));
                                uint64_t v162 = (void *)*v164;
                                uint64_t v163 = (void *)v164[4];
                              }
                              else
                              {
                                if (v123 != 57) {
                                  goto LABEL_378;
                                }
                                uint64_t v162 = (void *)*((void *)v15 - 8);
                                uint64_t v163 = (void *)*((void *)v15 - 4);
                              }
                              if ((v157 == v162 && (void *)v158 == v163 || v157 == v163 && (void *)v158 == v162)
                                && ((uint64_t v165 = *(void *)(v14 + 8)) != 0 && !*(void *)(v165 + 8)
                                 || (uint64_t v166 = (void **)*((void *)v15 + 1)) != 0 && !v166[1]))
                              {
                                uint64_t v167 = *(void *)(a1 + 24);
                                LOWORD(v360) = 257;
                                int v125 = sub_1CBF52474(v167, v157, v158, (uint64_t)&v358);
LABEL_467:
                                __int16 v381 = 257;
                                int64_t v133 = &v379;
                                goto LABEL_263;
                              }
LABEL_378:
                              uint64_t v168 = *(void *)(v14 + 8);
                              if (!v168 || *(void *)(v168 + 8))
                              {
LABEL_380:
                                uint64_t v374 = 0;
                                *(void *)&long long v358 = v15;
                                *(void *)&long long v359 = &v374;
                                uint64_t v169 = *(void *)(v14 + 8);
                                if (!v169 || *(void *)(v169 + 8)) {
                                  goto LABEL_382;
                                }
                                int v179 = *(unsigned __int8 *)(v14 + 16);
                                if (v179 == 5)
                                {
                                  if (*(_WORD *)(v14 + 18) == 28)
                                  {
                                    int v203 = (llvm::ConstantExpr **)(v14 - 32 * (*(_DWORD *)(v14 + 20) & 0x7FFFFFF));
                                    if (v15 == *v203)
                                    {
                                      int v218 = v203[4];
                                      uint64_t v219 = *((void *)v218 + 1);
                                      if (v219)
                                      {
                                        if (!*(void *)(v219 + 8))
                                        {
                                          int v220 = *((unsigned __int8 *)v218 + 16);
                                          if (v220 == 5)
                                          {
                                            if (*((_WORD *)v218 + 9) == 15)
                                            {
                                              if (sub_1CC03F414((uint64_t)&v358 + 8, *((llvm::Constant **)v218- 4 * (*((_DWORD *)v218 + 5) & 0x7FFFFFF))))
                                              {
                                                uint64_t v209 = ((void *)v218 - 4 * (*((_DWORD *)v218 + 5) & 0x7FFFFFF))[4];
                                                if (v209) {
                                                  goto LABEL_655;
                                                }
                                              }
                                            }
                                          }
                                          else if (v220 == 43)
                                          {
                                            if (sub_1CBF535C4((uint64_t)&v358 + 8, *((llvm::Constant **)v218 - 8)))
                                            {
                                              uint64_t v209 = *((void *)v218 - 4);
                                              if (v209) {
                                                goto LABEL_655;
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                    uint64_t v204 = (uint64_t *)(v14 - 32 * (*(_DWORD *)(v14 + 20) & 0x7FFFFFF));
                                    if ((void)v358 == v204[4])
                                    {
                                      uint64_t v180 = *v204;
                                      goto LABEL_437;
                                    }
                                  }
                                }
                                else if (v179 == 56)
                                {
                                  if (v15 == *(llvm::ConstantExpr **)(v14 - 64))
                                  {
                                    uint64_t v213 = *(void *)(v14 - 32);
                                    uint64_t v214 = *(void *)(v213 + 8);
                                    if (v214)
                                    {
                                      if (!*(void *)(v214 + 8))
                                      {
                                        int v215 = *(unsigned __int8 *)(v213 + 16);
                                        if (v215 == 5)
                                        {
                                          if (*(_WORD *)(v213 + 18) == 15)
                                          {
                                            if (sub_1CC03F414((uint64_t)&v358 + 8, *(llvm::Constant **)(v213- 32* (*(_DWORD *)(v213 + 20) & 0x7FFFFFF))))
                                            {
                                              uint64_t v209 = *(void *)(v213 - 32 * (*(_DWORD *)(v213 + 20) & 0x7FFFFFF) + 32);
                                              if (v209) {
                                                goto LABEL_655;
                                              }
                                            }
                                          }
                                        }
                                        else if (v215 == 43)
                                        {
                                          if (sub_1CBF535C4((uint64_t)&v358 + 8, *(llvm::Constant **)(v213 - 64)))
                                          {
                                            uint64_t v209 = *(void *)(v213 - 32);
                                            if (v209) {
                                              goto LABEL_655;
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  if ((void)v358 == *(void *)(v14 - 32))
                                  {
                                    uint64_t v180 = *(void *)(v14 - 64);
LABEL_437:
                                    uint64_t v205 = *(void *)(v180 + 8);
                                    if (!v205 || *(void *)(v205 + 8)) {
                                      goto LABEL_382;
                                    }
                                    int v206 = *(unsigned __int8 *)(v180 + 16);
                                    if (v206 == 5)
                                    {
                                      if (*(_WORD *)(v180 + 18) != 15) {
                                        goto LABEL_382;
                                      }
                                      if (!sub_1CC03F414((uint64_t)&v358 + 8, *(llvm::Constant **)(v180- 32* (*(_DWORD *)(v180 + 20) & 0x7FFFFFF))))goto LABEL_382; {
                                      uint64_t v209 = *(void *)(v180 - 32 * (*(_DWORD *)(v180 + 20) & 0x7FFFFFF) + 32);
                                      }
                                      if (!v209) {
                                        goto LABEL_382;
                                      }
                                    }
                                    else
                                    {
                                      if (v206 != 43) {
                                        goto LABEL_382;
                                      }
                                      if (!sub_1CBF535C4((uint64_t)&v358 + 8, *(llvm::Constant **)(v180 - 64)))goto LABEL_382; {
                                      uint64_t v209 = *(void *)(v180 - 32);
                                      }
                                      if (!v209) {
                                        goto LABEL_382;
                                      }
                                    }
LABEL_655:
                                    *(void *)long long v359 = v209;
                                    uint64_t v309 = *(void *)(a1 + 24);
                                    uint64_t v310 = v374;
                                    AllOnesValue = llvm::Constant::getAllOnesValue(*(llvm::Constant **)a2, v207, v208);
                                    LOWORD(v360) = 257;
                                    uint64_t v312 = sub_1CB844A3C(v309, v310, (uint64_t)AllOnesValue, (uint64_t)&v358, 0, 0);
                                    __int16 v381 = 257;
                                    int v125 = sub_1CBF52474(v309, v15, (uint64_t)v312, (uint64_t)&v379);
                                    __int16 v378 = 257;
LABEL_448:
                                    int64_t v133 = (std::string *)&v376;
                                    goto LABEL_263;
                                  }
                                }
LABEL_382:
                                uint64_t v170 = *(void *)(v14 + 8);
                                if (!v170 || *(void *)(v170 + 8))
                                {
LABEL_384:
                                  if (sub_1CC9FAA9C((uint64_t)v15))
                                  {
                                    uint64_t v172 = (llvm::Value **)((char *)v15 - 32 * (*((_DWORD *)v15 + 5) & 0x7FFFFFF));
                                    uint64_t v173 = *v172;
                                    unint64_t v171 = v172[4];
                                    int v174 = *(unsigned __int8 *)(v14 + 16);
                                    if (v174 == 5)
                                    {
                                      if (*(_WORD *)(v14 + 18) != 13) {
                                        goto LABEL_416;
                                      }
                                      unint64_t v183 = (llvm::Value **)(v14 - 32 * (*(_DWORD *)(v14 + 20) & 0x7FFFFFF));
                                      uint64_t v175 = *v183;
                                      int v176 = v183[4];
                                    }
                                    else
                                    {
                                      if (v174 != 41) {
                                        goto LABEL_416;
                                      }
                                      uint64_t v175 = *(llvm::Value **)(v14 - 64);
                                      int v176 = *(llvm::Value **)(v14 - 32);
                                    }
                                    if ((v173 == v175 && v171 == v176 || v173 == v176 && v171 == v175)
                                      && ((uint64_t v184 = *(void *)(v14 + 8)) != 0 && !*(void *)(v184 + 8)
                                       || (uint64_t v185 = (void **)*((void *)v15 + 1)) != 0 && !v185[1]))
                                    {
                                      int v186 = *(_DWORD *)(*((void *)v15 - 4) + 36);
                                      switch(v186)
                                      {
                                        case 306:
                                          int v187 = 305;
                                          break;
                                        case 274:
                                          int v187 = 275;
                                          break;
                                        case 275:
                                          int v187 = 274;
                                          break;
                                        default:
                                          int v187 = 306;
                                          break;
                                      }
                                      int v188 = *(llvm::IRBuilderBase **)(a1 + 24);
                                      LOWORD(v360) = 257;
                                      uint64_t Intrinsic = (llvm::Value *)llvm::IRBuilderBase::CreateBinaryIntrinsic(v188, v187, v173, v171, 0, (const llvm::Twine *)&v358);
                                      goto LABEL_552;
                                    }
                                  }
LABEL_416:
                                  uint64_t v189 = *(llvm::Constant **)a2;
                                  uint64_t v190 = *(void *)(a1 + 24);
                                  *(void *)&long long v358 = &v376;
                                  *((void *)&v358 + 1) = &v374;
                                  *(void *)&long long v359 = &v373;
                                  uint64_t v191 = *(void *)(v14 + 8);
                                  if (v191)
                                  {
                                    if (!*(void *)(v191 + 8))
                                    {
                                      uint64_t v376 = 0;
                                      unsigned int v373 = 0;
                                      uint64_t v374 = 0;
                                      if (sub_1CC189B48((void **)&v358, v14))
                                      {
                                        if (v374 == v15 || v373 == v15)
                                        {
                                          uint64_t v192 = *(void *)(*(void *)(*(void *)(v14 + 40) + 56) + 40);
                                          if (*(char *)(v192 + 239) < 0) {
                                            sub_1CB8BDF7C((uint64_t)&v379, *(const void **)(v192 + 216), *(void *)(v192 + 224));
                                          }
                                          else {
                                            std::string v379 = *(std::string *)(v192 + 216);
                                          }
                                          if (!std::string::compare(&v379, 0, 4uLL, "agx1"))
                                          {
                                            int v216 = 27;
                                          }
                                          else if (!std::string::compare(&v379, 0, 4uLL, "agx2"))
                                          {
                                            int v216 = 28;
                                          }
                                          else if (!std::string::compare(&v379, 0, 4uLL, "agx3"))
                                          {
                                            int v216 = 29;
                                          }
                                          else
                                          {
                                            int v216 = 0;
                                          }
                                          if (SHIBYTE(v379.__r_.__value_.__r.__words[2]) < 0) {
                                            operator delete(v379.__r_.__value_.__l.__data_);
                                          }
                                          if ((v216 - 27) >= 3)
                                          {
                                            uint64_t v225 = (uint64_t)v374;
                                            uint64_t v226 = (uint64_t)(v374 == v15 ? v373 : v374);
                                            LOWORD(v360) = 257;
                                            uint64_t v227 = sub_1CB84494C(v190, v226, (uint64_t)v15, (uint64_t)&v358, 0, 0);
                                            NullValue = llvm::Constant::getNullValue(v189, v228, v229);
                                            int v231 = (uint64_t *)((llvm::ConstantExpr *)v225 == v15 ? NullValue : v227);
                                            uint64_t v232 = (uint64_t)((llvm::ConstantExpr *)v225 == v15 ? v227 : NullValue);
                                            LOWORD(v360) = 257;
                                            uint64_t v11 = (uint64_t)sub_1CC199EFC((uint64_t)v376, v231, v232, (const char **)&v358, 0, 0);
                                            llvm::Instruction::copyMetadata(v11, v14, 0, 0);
                                            if (v11) {
                                              goto LABEL_616;
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  uint64_t v233 = *(void *)(a1 + 24);
                                  *(void *)&long long v358 = &v376;
                                  *((void *)&v358 + 1) = &v374;
                                  *(void *)&long long v359 = &v373;
                                  uint64_t v234 = (void **)*((void *)v15 + 1);
                                  if (v234)
                                  {
                                    if (!v234[1])
                                    {
                                      uint64_t v376 = 0;
                                      unsigned int v373 = 0;
                                      uint64_t v374 = 0;
                                      if (sub_1CC189B48((void **)&v358, (uint64_t)v15))
                                      {
                                        if (v374 == (llvm::ConstantExpr *)v14 || v373 == (llvm::ConstantExpr *)v14)
                                        {
                                          uint64_t v235 = *(void *)(*(void *)(*((void *)v15 + 5) + 56) + 40);
                                          if (*(char *)(v235 + 239) < 0) {
                                            sub_1CB8BDF7C((uint64_t)&v379, *(const void **)(v235 + 216), *(void *)(v235 + 224));
                                          }
                                          else {
                                            std::string v379 = *(std::string *)(v235 + 216);
                                          }
                                          if (!std::string::compare(&v379, 0, 4uLL, "agx1"))
                                          {
                                            int v236 = 27;
                                          }
                                          else if (!std::string::compare(&v379, 0, 4uLL, "agx2"))
                                          {
                                            int v236 = 28;
                                          }
                                          else if (!std::string::compare(&v379, 0, 4uLL, "agx3"))
                                          {
                                            int v236 = 29;
                                          }
                                          else
                                          {
                                            int v236 = 0;
                                          }
                                          if (SHIBYTE(v379.__r_.__value_.__r.__words[2]) < 0) {
                                            operator delete(v379.__r_.__value_.__l.__data_);
                                          }
                                          if ((v236 - 27) >= 3)
                                          {
                                            uint64_t v237 = (uint64_t)v374;
                                            uint64_t v238 = (uint64_t)(v374 == (llvm::ConstantExpr *)v14 ? v373 : v374);
                                            LOWORD(v360) = 257;
                                            int v239 = sub_1CB84494C(v233, v14, v238, (uint64_t)&v358, 0, 0);
                                            int v242 = llvm::Constant::getNullValue(v189, v240, v241);
                                            unsigned int v243 = (uint64_t *)(v237 == v14 ? v242 : v239);
                                            uint64_t v244 = (uint64_t)(v237 == v14 ? v239 : v242);
                                            LOWORD(v360) = 257;
                                            uint64_t v11 = (uint64_t)sub_1CC199EFC((uint64_t)v376, v243, v244, (const char **)&v358, 0, 0);
                                            llvm::Instruction::copyMetadata(v11, (uint64_t)v15, 0, 0);
                                            if (v11) {
                                              goto LABEL_616;
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  int v245 = *((unsigned __int8 *)v15 + 16);
                                  if (v245 == 5)
                                  {
                                    if (*((_WORD *)v15 + 9) != 28) {
                                      goto LABEL_544;
                                    }
                                    uint64_t v248 = (uint64_t ****)((char *)v15 - 32 * (*((_DWORD *)v15 + 5) & 0x7FFFFFF));
                                    uint64_t v247 = *v248;
                                    int v249 = v248[4];
                                    if ((uint64_t ***)v14 == v247)
                                    {
                                      uint64_t v247 = v249;
                                      if (!v249) {
                                        goto LABEL_544;
                                      }
                                    }
                                    else if (!v247 || (uint64_t ***)v14 != v249)
                                    {
                                      goto LABEL_544;
                                    }
                                  }
                                  else
                                  {
                                    if (v245 != 56) {
                                      goto LABEL_544;
                                    }
                                    uint64_t v246 = (uint64_t ***)*((void *)v15 - 8);
                                    uint64_t v247 = (uint64_t ***)*((void *)v15 - 4);
                                    if ((uint64_t ***)v14 != v246)
                                    {
                                      if (!v246 || (uint64_t ***)v14 != v247) {
                                        goto LABEL_544;
                                      }
                                      unint64_t v371 = (uint64_t ***)*((void *)v15 - 8);
                                      uint64_t v247 = v246;
                                      goto LABEL_534;
                                    }
                                    if (!v247) {
                                      goto LABEL_544;
                                    }
                                  }
                                  unint64_t v371 = v247;
LABEL_534:
                                  uint64_t v250 = (void **)*((void *)v15 + 1);
                                  if (v250 && !v250[1] || *((unsigned __int8 *)v247 + 16) <= 0x14u)
                                  {
                                    uint64_t v251 = *(void *)(a1 + 24);
                                    if ((*((unsigned char *)v247 + 23) & 0x10) == 0)
                                    {
                                      uint64_t v296 = 0;
                                      int v295 = &byte_1CFBCE98E;
                                      goto LABEL_613;
                                    }
                                    uint64_t v252 = ***v247;
                                    uint64_t v253 = *(void *)(v252 + 152);
                                    uint64_t v254 = *(unsigned int *)(v252 + 168);
                                    if (v254)
                                    {
                                      LODWORD(v255) = (v254 - 1) & ((v247 >> 4) ^ (v247 >> 9));
                                      uint64_t v256 = (uint64_t ****)(v253 + 16 * v255);
                                      unsigned int v257 = *v256;
                                      if (*v256 == v247)
                                      {
LABEL_612:
                                        uint64_t v294 = v256[1];
                                        int v297 = *v294;
                                        int v295 = (char *)(v294 + 2);
                                        uint64_t v296 = v297;
LABEL_613:
                                        LOWORD(v360) = 773;
                                        *(void *)&long long v358 = v295;
                                        *((void *)&v358 + 1) = v296;
                                        *(void *)&long long v359 = ".not";
                                        uint64_t v75 = sub_1CC2427E8(v251, (uint64_t)v247, (uint64_t)&v358, v171);
                                        __int16 v381 = 257;
                                        uint64_t v76 = &v379;
                                        char v77 = 28;
                                        uint64_t v78 = (llvm::Instruction *)v14;
                                        goto LABEL_614;
                                      }
                                      int v258 = 1;
                                      while (v257 != (uint64_t ***)-4096)
                                      {
                                        int v259 = v255 + v258++;
                                        uint64_t v255 = v259 & (v254 - 1);
                                        unsigned int v257 = *(uint64_t ****)(v253 + 16 * v255);
                                        if (v257 == v247)
                                        {
                                          uint64_t v256 = (uint64_t ****)(v253 + 16 * v255);
                                          goto LABEL_612;
                                        }
                                      }
                                    }
                                    uint64_t v256 = (uint64_t ****)(v253 + 16 * v254);
                                    goto LABEL_612;
                                  }
LABEL_544:
                                  v379.__r_.__value_.__r.__words[0] = (std::string::size_type)&v372;
                                  if (sub_1CBF686A0(&v379, 30, v14))
                                  {
                                    *(void *)&long long v358 = v14;
                                    *((void *)&v358 + 1) = &v371;
                                    *(void *)&long long v359 = v14;
                                    *((void *)&v359 + 1) = &v371;
                                    int v360 = (uint64_t ****)v14;
                                    unsigned int v361 = &v371;
                                    unint64_t v362 = (llvm::ConstantExpr *)v14;
                                    uint64_t v363 = &v371;
                                    if (sub_1CD68A5C0((uint64_t)&v358, (uint64_t)v15))
                                    {
                                      uint64_t v268 = *(void *)(v14 + 8);
                                      if (!v268) {
                                        goto LABEL_583;
                                      }
                                      int v269 = -2;
                                      do
                                      {
                                        int v270 = v269;
                                        if (!v269) {
                                          break;
                                        }
                                        uint64_t v268 = *(void *)(v268 + 8);
                                        ++v269;
                                      }
                                      while (v268);
                                      if (v270)
                                      {
LABEL_583:
                                        BOOL v271 = v371[1];
                                        BOOL v272 = v271 && v271[1] == 0;
                                        if (sub_1CC9F4000((uint64_t)v371, v272))
                                        {
                                          uint64_t v306 = *(void *)(a1 + 24);
                                          LOWORD(v360) = 257;
                                          uint64_t v78 = sub_1CC2427E8(v306, (uint64_t)v15, (uint64_t)&v358, v305);
                                          uint64_t v75 = (const llvm::detail::DoubleAPFloat *)v372;
                                          goto LABEL_160;
                                        }
                                      }
                                    }
                                  }
                                  v379.__r_.__value_.__r.__words[0] = (std::string::size_type)&v372;
                                  if (sub_1CBF686A0(&v379, 30, (uint64_t)v15))
                                  {
                                    *(void *)&long long v358 = v15;
                                    *((void *)&v358 + 1) = &v371;
                                    *(void *)&long long v359 = v15;
                                    *((void *)&v359 + 1) = &v371;
                                    int v360 = (uint64_t ****)v15;
                                    unsigned int v361 = &v371;
                                    unint64_t v362 = v15;
                                    uint64_t v363 = &v371;
                                    if (sub_1CD68A5C0((uint64_t)&v358, v14))
                                    {
                                      int v273 = (void **)*((void *)v15 + 1);
                                      if (!v273) {
                                        goto LABEL_591;
                                      }
                                      int v274 = -2;
                                      do
                                      {
                                        int v275 = v274;
                                        if (!v274) {
                                          break;
                                        }
                                        int v273 = (void **)v273[1];
                                        ++v274;
                                      }
                                      while (v273);
                                      if (v275)
                                      {
LABEL_591:
                                        uint64_t v276 = v371[1];
                                        BOOL v277 = v276 && v276[1] == 0;
                                        if (sub_1CC9F4000((uint64_t)v371, v277))
                                        {
                                          uint64_t v308 = *(void *)(a1 + 24);
                                          LOWORD(v360) = 257;
                                          unsigned int v95 = sub_1CC2427E8(v308, v14, (uint64_t)&v358, v307);
                                          goto LABEL_159;
                                        }
                                      }
                                    }
                                  }
                                  unsigned int v373 = 0;
                                  uint64_t v374 = 0;
                                  *(void *)&long long v358 = &v374;
                                  if (sub_1CC03F934((void **)&v358, v14))
                                  {
                                    v379.__r_.__value_.__r.__words[0] = (std::string::size_type)&v373;
                                    if (sub_1CC03F934(&v379, (uint64_t)v15))
                                    {
                                      uint64_t Intrinsic = sub_1CC9F1230(a1, (uint64_t)v374, (uint64_t)v373, *(llvm::Type ****)a2, (*(unsigned __int8 *)(a2 + 17) >> 1) & 1);
                                      if (Intrinsic) {
                                        goto LABEL_552;
                                      }
                                    }
                                  }
                                  *(void *)&long long v358 = &v374;
                                  if (sub_1CC9FAF7C((void **)&v358, v14))
                                  {
                                    v379.__r_.__value_.__r.__words[0] = (std::string::size_type)&v373;
                                    if (sub_1CC9FAF7C(&v379, (uint64_t)v15))
                                    {
                                      uint64_t Intrinsic = sub_1CC9F1230(a1, (uint64_t)v374, (uint64_t)v373, *(llvm::Type ****)a2, 0);
                                      if (Intrinsic) {
                                        goto LABEL_552;
                                      }
                                    }
                                  }
                                  unsigned int v356 = 0;
                                  unsigned int v357 = 0;
                                  uint64_t v260 = *(void *)a2;
                                  *(void *)&long long v358 = &v357;
                                  *((void *)&v358 + 1) = &v356;
                                  *(void *)&long long v359 = 0;
                                  int v261 = *((unsigned __int8 *)v15 + 16);
                                  if (v261 == 5)
                                  {
                                    if (*((_WORD *)v15 + 9) != 27) {
                                      goto LABEL_564;
                                    }
                                    unint64_t v262 = (llvm::BinaryOperator **)((char *)v15
                                                                   - 32 * (*((_DWORD *)v15 + 5) & 0x7FFFFFF));
                                    if (!*v262) {
                                      goto LABEL_564;
                                    }
                                    unsigned int v357 = *v262;
                                    if (!sub_1CBF5295C((uint64_t)&v358 + 8, v262[4])) {
                                      goto LABEL_564;
                                    }
                                  }
                                  else
                                  {
                                    if (v261 != 55) {
                                      goto LABEL_564;
                                    }
                                    if (!*((void *)v15 - 8)) {
                                      goto LABEL_564;
                                    }
                                    unsigned int v357 = (llvm::BinaryOperator *)*((void *)v15 - 8);
                                    if ((sub_1CBF528D8((uint64_t)&v358 + 8, *((unsigned __int8 **)v15 - 4)) & 1) == 0) {
                                      goto LABEL_564;
                                    }
                                  }
                                  uint64_t v263 = (void **)*((void *)v15 + 1);
                                  if (!v263) {
                                    goto LABEL_564;
                                  }
                                  unsigned int v264 = v263[1];
                                  if (!v264 || v264[1]) {
                                    goto LABEL_564;
                                  }
                                  uint64_t v278 = v356;
                                  int v279 = (llvm::Type *)v260;
                                  if ((*(_DWORD *)(v260 + 8) & 0xFE) == 0x12) {
                                    int v279 = **(llvm::Type ***)(v260 + 16);
                                  }
                                  int PrimitiveSizeInBits = llvm::Type::getPrimitiveSizeInBits(v279);
                                  uint64_t v283 = *((unsigned int *)v278 + 2);
                                  if (v283 < 0x41)
                                  {
LABEL_603:
                                    if (*v278 != (uint64_t *)(PrimitiveSizeInBits - 1)) {
                                      goto LABEL_564;
                                    }
                                    uint64_t v289 = *(void *)(v14 + 8);
                                    if (!v289 || *(void *)(v289 + 8)) {
                                      goto LABEL_564;
                                    }
                                    char v290 = v357;
                                    int v291 = *(unsigned __int8 *)(v14 + 16);
                                    if (v291 == 5)
                                    {
                                      if (*(_WORD *)(v14 + 18) != 30) {
                                        goto LABEL_564;
                                      }
                                      uint64_t v313 = (llvm::BinaryOperator **)(v14 - 32 * (*(_DWORD *)(v14 + 20) & 0x7FFFFFF));
                                      uint64_t v292 = *v313;
                                      uint64_t v293 = v313[4];
                                      if (v357 == v292 && v15 == v293) {
                                        goto LABEL_663;
                                      }
                                    }
                                    else
                                    {
                                      if (v291 != 58) {
                                        goto LABEL_564;
                                      }
                                      uint64_t v292 = *(llvm::BinaryOperator **)(v14 - 64);
                                      uint64_t v293 = *(llvm::BinaryOperator **)(v14 - 32);
                                      if (v357 == v292 && v15 == v293) {
                                        goto LABEL_663;
                                      }
                                    }
                                    if (v357 != v293 || v15 != v292) {
                                      goto LABEL_564;
                                    }
LABEL_663:
                                    uint64_t v315 = *(void *)(a1 + 24);
                                    char v316 = llvm::Constant::getNullValue((llvm::Constant *)v260, v281, v282);
                                    LOWORD(v360) = 257;
                                    uint64_t v317 = sub_1CB845F20(v315, 40, v290, (uint64_t)v316, (uint64_t)&v358);
                                    uint64_t v318 = *(void *)(a1 + 24);
                                    LOWORD(v360) = 257;
                                    unint64_t v319 = (uint64_t *)sub_1CD5A6358(v318, v357, (uint64_t)&v358, (llvm::Instruction *)((*(unsigned __int8 *)(a2 + 17) >> 1) & 1), (*(unsigned __int8 *)(a2 + 17) >> 2) & 1);
                                    LOWORD(v360) = 257;
                                    Neg = sub_1CC199EFC((uint64_t)v317, v319, (uint64_t)v357, (const char **)&v358, 0, 0);
LABEL_732:
                                    uint64_t v329 = Neg;
                                    goto LABEL_744;
                                  }
                                  int v284 = 0;
                                  int64_t v285 = (unint64_t)(v283 + 63) >> 6;
                                  do
                                  {
                                    BOOL v286 = v285-- < 1;
                                    if (v286) {
                                      break;
                                    }
                                    unint64_t v287 = (*v278)[v285];
                                    v284 += __clz(v287);
                                  }
                                  while (!v287);
                                  int v288 = v283 | 0xFFFFFFC0;
                                  if ((v283 & 0x3F) == 0) {
                                    int v288 = 0;
                                  }
                                  if ((v283 - v284 - v288) <= 0x40)
                                  {
                                    uint64_t v278 = (uint64_t **)*v278;
                                    goto LABEL_603;
                                  }
LABEL_564:
                                  uint64_t v354 = 0;
                                  int v355 = 0;
                                  *(void *)&long long v358 = &v372;
                                  *((void *)&v358 + 1) = &v355;
                                  *(void *)&long long v359 = 0;
                                  int v265 = *(unsigned __int8 *)(v14 + 16);
                                  if (v265 == 5)
                                  {
                                    if (*(_WORD *)(v14 + 18) != 13) {
                                      goto LABEL_691;
                                    }
                                    std::string::size_type v266 = v14 - 32 * (*(_DWORD *)(v14 + 20) & 0x7FFFFFF);
                                    if (!*(void *)v266) {
                                      goto LABEL_691;
                                    }
                                    std::string::size_type v372 = *(void *)v266;
                                    if ((sub_1CBF5295C((uint64_t)&v358 + 8, *(llvm::Constant **)(v266 + 32)) & 1) == 0) {
                                      goto LABEL_691;
                                    }
                                  }
                                  else
                                  {
                                    if (v265 != 41) {
                                      goto LABEL_691;
                                    }
                                    if (!*(void *)(v14 - 64)) {
                                      goto LABEL_691;
                                    }
                                    std::string::size_type v372 = *(void *)(v14 - 64);
                                    if (!sub_1CBF528D8((uint64_t)&v358 + 8, *(unsigned __int8 **)(v14 - 32)))goto LABEL_691; {
                                  }
                                    }
                                  v379.__r_.__value_.__r.__words[0] = v372;
                                  v379.__r_.__value_.__l.__size_ = (std::string::size_type)&v354;
                                  v379.__r_.__value_.__r.__words[2] = 0;
                                  int v267 = *((unsigned __int8 *)v15 + 16);
                                  if (v267 == 5)
                                  {
                                    if (*((_WORD *)v15 + 9) != 28) {
                                      goto LABEL_691;
                                    }
                                    uint64_t v298 = (void ***)((char *)v15 - 32 * (*((_DWORD *)v15 + 5) & 0x7FFFFFF));
                                    if ((void **)v372 != *v298
                                      || (sub_1CBF5295C((uint64_t)&v379.__r_.__value_.__l.__size_, (llvm::Constant *)v298[4]) & 1) == 0)
                                    {
                                      goto LABEL_691;
                                    }
                                  }
                                  else if (v267 != 56 {
                                         || v372 != *((void *)v15 - 8)
                                  }
                                         || !sub_1CBF528D8((uint64_t)&v379.__r_.__value_.__l.__size_, *((unsigned __int8 **)v15 - 4)))
                                  {
                                    goto LABEL_691;
                                  }
                                  uint64_t v299 = (llvm::Type *)v260;
                                  if ((*(_DWORD *)(v260 + 8) & 0xFE) == 0x12) {
                                    uint64_t v299 = **(llvm::Type ***)(v260 + 16);
                                  }
                                  unsigned int v301 = llvm::Type::getPrimitiveSizeInBits(v299);
                                  unsigned int v302 = *((_DWORD *)v355 + 2);
                                  if (v302 > 0x40)
                                  {
                                    unsigned int v304 = llvm::APInt::countTrailingZerosSlowCase((unint64_t **)v355);
                                  }
                                  else
                                  {
                                    unsigned int v303 = __clz(__rbit64(*(void *)v355));
                                    if (v302 >= v303) {
                                      unsigned int v304 = v303;
                                    }
                                    else {
                                      unsigned int v304 = *((_DWORD *)v355 + 2);
                                    }
                                  }
                                  LODWORD(v379.__r_.__value_.__r.__words[1]) = v301;
                                  if (v301 > 0x40) {
                                    llvm::APInt::initSlowCase((llvm::APInt *)&v379);
                                  }
                                  v379.__r_.__value_.__r.__words[0] = 0;
                                  if (v304 != v301)
                                  {
                                    if (v304 <= 0x3F)
                                    {
                                      std::string::size_type v352 = v379.__r_.__value_.__r.__words[0] | (0xFFFFFFFFFFFFFFFFLL >> (v304 - v301) << v304);
                                      v379.__r_.__value_.__r.__words[0] = v352;
                                      goto LABEL_679;
                                    }
                                    llvm::APInt::setBitsSlowCase(&v379, v304, v301);
                                  }
                                  std::string::size_type v352 = v379.__r_.__value_.__r.__words[0];
LABEL_679:
                                  if ((*(void *)v354 & v352) == 0)
                                  {
                                    unsigned int v325 = *(_DWORD *)(v354 + 8);
                                    if (v325 > 0x40) {
                                      operator new[]();
                                    }
                                    unint64_t v326 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v325;
                                    if (!v325) {
                                      unint64_t v326 = 0;
                                    }
                                    uint64_t v353 = v326 & ~*(void *)v354;
                                    unsigned int v377 = *(_DWORD *)(v354 + 8);
                                    uint64_t v376 = (llvm::Constant *)v353;
                                    int v327 = (llvm::Value *)llvm::ConstantInt::get(*(llvm::ConstantInt **)v260, (llvm::LLVMContext *)&v376, v300);
                                    Splat = v327;
                                    if ((*(_DWORD *)(v260 + 8) & 0xFE) == 0x12) {
                                      Splat = llvm::ConstantVector::getSplat((llvm::Type *)(*(unsigned int *)(v260 + 32) | ((unint64_t)(*(_DWORD *)(v260 + 8) == 19) << 32)), (uint64_t)v327);
                                    }
                                    LOWORD(v360) = 257;
                                    uint64_t v329 = llvm::BinaryOperator::Create(28, (void *)v14, (uint64_t)Splat, (const char **)&v358, 0);
                                    if (v377 >= 0x41 && v376) {
                                      MEMORY[0x1D25D9CB0](v376, 0x1000C8000313F17);
                                    }
                                    goto LABEL_744;
                                  }
LABEL_691:
                                  uint64_t v329 = sub_1CC9EA104(a1, a2);
                                  if (!v329)
                                  {
                                    LODWORD(v358) = 311;
                                    *((void *)&v358 + 1) = 0;
                                    *(void *)&long long v359 = v14;
                                    *((void *)&v359 + 1) = 1;
                                    int v360 = &v371;
                                    int v330 = (void **)*((void *)v15 + 1);
                                    if (v330 && !v330[1] && sub_1CC9FAFFC((uint64_t)&v358, (uint64_t)v15))
                                    {
                                      uint64_t v331 = *(uint64_t **)(a1 + 24);
                                      uint64_t v376 = *(llvm::Constant **)a2;
                                      v379.__r_.__value_.__r.__words[0] = v14;
                                      v379.__r_.__value_.__l.__size_ = (std::string::size_type)v371;
                                      LOWORD(v360) = 257;
                                      int v332 = &v379;
                                      uint64_t v333 = (std::string *)&v358;
                                      int v334 = 306;
LABEL_705:
                                      uint64_t v337 = 2;
LABEL_731:
                                      int v347 = (llvm::Value *)llvm::IRBuilderBase::CreateIntrinsic(v331, v334, (uint64_t)&v376, 1, (uint64_t *)v332, v337, 0, (uint64_t)v333);
                                      Neg = (llvm::Value *)sub_1CC9D3C84(a1, (llvm::ValueAsMetadata *)a2, v347);
                                      goto LABEL_732;
                                    }
                                    *(void *)&long long v358 = &v372;
                                    *((void *)&v358 + 1) = v15;
                                    uint64_t v335 = *(void *)(v14 + 8);
                                    if (v335 && !*(void *)(v335 + 8) && sub_1CC9FB06C((uint64_t)&v358, v14))
                                    {
                                      uint64_t v331 = *(uint64_t **)(a1 + 24);
                                      uint64_t v376 = (llvm::Constant *)v260;
                                      v379.__r_.__value_.__r.__words[0] = v372;
                                      v379.__r_.__value_.__l.__size_ = (std::string::size_type)v15;
LABEL_704:
                                      LOWORD(v360) = 257;
                                      int v332 = &v379;
                                      uint64_t v333 = (std::string *)&v358;
                                      int v334 = 311;
                                      goto LABEL_705;
                                    }
                                    *(void *)&long long v358 = &v372;
                                    *((void *)&v358 + 1) = v14;
                                    uint64_t v336 = (void **)*((void *)v15 + 1);
                                    if (v336 && !v336[1])
                                    {
                                      if (sub_1CC9FB17C((uint64_t)&v358, (uint64_t)v15))
                                      {
                                        uint64_t v331 = *(uint64_t **)(a1 + 24);
                                        uint64_t v376 = (llvm::Constant *)v260;
                                        v379.__r_.__value_.__r.__words[0] = v14;
                                        v379.__r_.__value_.__l.__size_ = v372;
                                        goto LABEL_704;
                                      }
                                      uint64_t v336 = (void **)*((void *)v15 + 1);
                                    }
                                    *(void *)&long long v358 = &v372;
                                    *((void *)&v358 + 1) = v14;
                                    if (v336 && !v336[1] && sub_1CC9FB06C((uint64_t)&v358, (uint64_t)v15))
                                    {
                                      char v338 = *(uint64_t **)(a1 + 24);
                                      uint64_t v376 = (llvm::Constant *)v260;
                                      v379.__r_.__value_.__r.__words[0] = v372;
                                      v379.__r_.__value_.__l.__size_ = v14;
LABEL_715:
                                      LOWORD(v360) = 257;
                                      uint64_t v340 = (llvm::BinaryOperator *)llvm::IRBuilderBase::CreateIntrinsic(v338, 311, (uint64_t)&v376, 1, (uint64_t *)&v379, 2, 0, (uint64_t)&v358);
                                      LOWORD(v360) = 257;
                                      Neg = llvm::BinaryOperator::CreateNeg(v340, (llvm::Value *)&v358, 0, v341);
                                      goto LABEL_732;
                                    }
                                    *(void *)&long long v358 = &v372;
                                    *((void *)&v358 + 1) = v15;
                                    uint64_t v339 = *(void *)(v14 + 8);
                                    if (v339 && !*(void *)(v339 + 8) && sub_1CC9FB17C((uint64_t)&v358, v14))
                                    {
                                      char v338 = *(uint64_t **)(a1 + 24);
                                      uint64_t v376 = (llvm::Constant *)v260;
                                      v379.__r_.__value_.__r.__words[0] = (std::string::size_type)v15;
                                      v379.__r_.__value_.__l.__size_ = v372;
                                      goto LABEL_715;
                                    }
                                    if ((*(_DWORD *)(v260 + 8) & 0xFE) == 0x12) {
                                      uint64_t v260 = **(void **)(v260 + 16);
                                    }
                                    unsigned int v342 = llvm::Type::getPrimitiveSizeInBits((llvm::Type *)v260);
                                    LODWORD(v379.__r_.__value_.__r.__words[1]) = 64;
                                    v379.__r_.__value_.__r.__words[0] = v342;
                                    if (sub_1CBF53154((llvm::APInt *)&v379, (unsigned __int8 *)v14))
                                    {
                                      LODWORD(v358) = 53;
                                      *((void *)&v358 + 1) = 0;
                                      *(void *)&long long v359 = &v372;
                                      unint64_t v344 = (void **)*((void *)v15 + 1);
                                      if (v344 && !v344[1]) {
                                        int v345 = sub_1CC045310((uint64_t)&v358, (uint64_t)v15);
                                      }
                                      else {
                                        int v345 = 0;
                                      }
                                      if (LODWORD(v379.__r_.__value_.__r.__words[1]) >= 0x41
                                        && v379.__r_.__value_.__r.__words[0])
                                      {
                                        MEMORY[0x1D25D9CB0](v379.__r_.__value_.__r.__words[0], 0x1000C8000313F17);
                                      }
                                      if (v345)
                                      {
                                        uint64_t v346 = *(void *)(a1 + 24);
                                        uint64_t v376 = *(llvm::Constant **)a2;
                                        LOWORD(v360) = 257;
                                        unint64_t v375 = sub_1CC2427E8(v346, v372, (uint64_t)&v358, v343);
                                        __int16 v381 = 257;
                                        int v332 = (std::string *)&v375;
                                        uint64_t v333 = &v379;
                                        uint64_t v331 = (uint64_t *)v346;
                                        int v334 = 53;
                                        uint64_t v337 = 1;
                                        goto LABEL_731;
                                      }
                                    }
                                    else if (LODWORD(v379.__r_.__value_.__r.__words[1]) >= 0x41 {
                                           && v379.__r_.__value_.__r.__words[0])
                                    }
                                    {
                                      MEMORY[0x1D25D9CB0](v379.__r_.__value_.__r.__words[0], 0x1000C8000313F17);
                                    }
                                    uint64_t v329 = sub_1CC9D8DBC(a1, a2);
                                    if (!v329)
                                    {
                                      char v349 = *(unsigned char *)(a2 + 17);
                                      if ((v349 & 4) != 0
                                        || (v350 = llvm::computeOverflowForSignedSub((llvm *)v14, v15, *(const llvm::Value **)(a1 + 80), *(const llvm::DataLayout **)(a1 + 56), (llvm::AssumptionCache *)a2, *(const llvm::Instruction **)(a1 + 72), v348), char v349 = *(unsigned char *)(a2 + 17), v350 != 3))
                                      {
                                        int v351 = 0;
                                      }
                                      else
                                      {
                                        v349 |= 4u;
                                        *(unsigned char *)(a2 + 17) = v349;
                                        int v351 = 1;
                                      }
                                      if ((v349 & 2) != 0
                                        || llvm::computeOverflowForUnsignedSub((llvm *)v14, v15, *(const llvm::Value **)(a1 + 80), *(const llvm::DataLayout **)(a1 + 56), (llvm::AssumptionCache *)a2, *(const llvm::Instruction **)(a1 + 72), v348) != 3)
                                      {
                                        if (!v351)
                                        {
                                          uint64_t v329 = 0;
                                          goto LABEL_744;
                                        }
                                      }
                                      else
                                      {
                                        *(unsigned char *)(a2 + 17) |= 2u;
                                      }
                                      uint64_t v329 = (llvm::Value *)a2;
                                    }
                                  }
LABEL_744:
                                  uint64_t v11 = (uint64_t)v329;
LABEL_616:
                                  if (v368 < 0) {
                                    operator delete(__p[0]);
                                  }
                                  return (llvm::Value *)v11;
                                }
                                int v181 = *(unsigned __int8 *)(v14 + 16);
                                if (v181 == 5)
                                {
                                  if (*(_WORD *)(v14 + 18) != 28) {
                                    goto LABEL_384;
                                  }
                                  int v210 = (llvm::ConstantExpr **)(v14 - 32 * (*(_DWORD *)(v14 + 20) & 0x7FFFFFF));
                                  if (v15 != *v210) {
                                    goto LABEL_384;
                                  }
                                  uint64_t v182 = (uint64_t)v210[4];
                                  if (!v182) {
                                    goto LABEL_384;
                                  }
                                }
                                else
                                {
                                  if (v181 != 56) {
                                    goto LABEL_384;
                                  }
                                  if (v15 != *(llvm::ConstantExpr **)(v14 - 64)) {
                                    goto LABEL_384;
                                  }
                                  uint64_t v182 = *(void *)(v14 - 32);
                                  if (!v182 || *(unsigned __int8 *)(v182 + 16) > 0x14u) {
                                    goto LABEL_384;
                                  }
                                }
                                uint64_t v211 = *(void *)(a1 + 24);
                                LOWORD(v360) = 257;
                                uint64_t v212 = sub_1CC2427E8(v211, v182, (uint64_t)&v358, v99);
                                __int16 v381 = 257;
                                int v125 = sub_1CBF52474(v211, v15, (uint64_t)v212, (uint64_t)&v379);
                                __int16 v378 = 257;
                                goto LABEL_448;
                              }
                              if (v128 == 5)
                              {
                                if (*(_WORD *)(v14 + 18) != 29) {
                                  goto LABEL_380;
                                }
                                uint64_t v193 = (llvm::ConstantExpr **)(v14 - 32 * (*(_DWORD *)(v14 + 20) & 0x7FFFFFF));
                                uint64_t v177 = *v193;
                                uint64_t v178 = v193[4];
                                if (!v177) {
                                  goto LABEL_449;
                                }
                              }
                              else
                              {
                                if (v128 != 57) {
                                  goto LABEL_380;
                                }
                                uint64_t v177 = *(llvm::ConstantExpr **)(v14 - 64);
                                uint64_t v178 = *(llvm::ConstantExpr **)(v14 - 32);
                                if (!v177)
                                {
LABEL_449:
                                  if (!v178) {
                                    goto LABEL_380;
                                  }
                                  BOOL v126 = v15 == v177;
                                  uint64_t v177 = v178;
                                  if (!v126) {
                                    goto LABEL_380;
                                  }
LABEL_426:
                                  uint64_t v194 = *(void *)(a1 + 24);
                                  if ((*((unsigned char *)v15 + 23) & 0x10) == 0)
                                  {
                                    uint64_t v223 = 0;
                                    uint64_t v222 = &byte_1CFBCE98E;
                                    goto LABEL_477;
                                  }
                                  uint64_t v195 = ***(void ***)v15;
                                  uint64_t v196 = *(void *)(v195 + 152);
                                  uint64_t v197 = *(unsigned int *)(v195 + 168);
                                  if (v197)
                                  {
                                    LODWORD(v198) = (v197 - 1) & ((v15 >> 4) ^ (v15 >> 9));
                                    uint64_t v199 = (llvm::ConstantExpr **)(v196 + 16 * v198);
                                    int v200 = *v199;
                                    if (*v199 == v15)
                                    {
LABEL_476:
                                      uint64_t v221 = v199[1];
                                      uint64_t v224 = *(void *)v221;
                                      uint64_t v222 = (char *)v221 + 16;
                                      uint64_t v223 = v224;
LABEL_477:
                                      LOWORD(v360) = 773;
                                      *(void *)&long long v358 = v222;
                                      *((void *)&v358 + 1) = v223;
                                      *(void *)&long long v359 = ".not";
                                      uint64_t v75 = sub_1CC2427E8(v194, (uint64_t)v15, (uint64_t)&v358, v99);
                                      __int16 v381 = 257;
                                      uint64_t v76 = &v379;
                                      char v77 = 28;
                                      uint64_t v78 = v177;
                                      goto LABEL_614;
                                    }
                                    int v201 = 1;
                                    while (v200 != (llvm::ConstantExpr *)-4096)
                                    {
                                      int v202 = v198 + v201++;
                                      uint64_t v198 = v202 & (v197 - 1);
                                      int v200 = *(llvm::ConstantExpr **)(v196 + 16 * v198);
                                      if (v200 == v15)
                                      {
                                        uint64_t v199 = (llvm::ConstantExpr **)(v196 + 16 * v198);
                                        goto LABEL_476;
                                      }
                                    }
                                  }
                                  uint64_t v199 = (llvm::ConstantExpr **)(v196 + 16 * v197);
                                  goto LABEL_476;
                                }
                              }
                              if (v15 == v178) {
                                goto LABEL_426;
                              }
                              goto LABEL_449;
                            }
LABEL_366:
                            LOWORD(v360) = 257;
                            uint64_t v76 = (std::string *)&v358;
                            char v77 = 28;
                            goto LABEL_614;
                          }
                          if (v128 != 58)
                          {
                            if (v128 != 57) {
                              goto LABEL_378;
                            }
                            unint64_t v155 = *(llvm::Instruction **)(v14 - 64);
                            unint64_t v156 = *(const llvm::detail::DoubleAPFloat **)(v14 - 32);
                            if (v78 == v155 && v75 == v156) {
                              goto LABEL_366;
                            }
                            if (v78 != v156) {
                              goto LABEL_378;
                            }
                            goto LABEL_358;
                          }
LABEL_351:
                          int v157 = *(void **)(v14 - 64);
                          if (!v157) {
                            goto LABEL_378;
                          }
                          uint64_t v158 = *(void *)(v14 - 32);
                          if (!v158) {
                            goto LABEL_378;
                          }
                          goto LABEL_363;
                        }
                      }
                    }
LABEL_349:
                    if (v128 == 5) {
                      goto LABEL_360;
                    }
                    if (v128 != 58) {
                      goto LABEL_378;
                    }
                    goto LABEL_351;
                  }
                  uint64_t v135 = (llvm::Instruction **)(v14 - 32 * (*(_DWORD *)(v14 + 20) & 0x7FFFFFF));
                  uint64_t v131 = *v135;
                  unint64_t v132 = v135[4];
                }
                if (v78 == v131 && v75 == v132) {
                  goto LABEL_268;
                }
                if (v78 != v132) {
                  goto LABEL_324;
                }
                if (v75 == v131)
                {
LABEL_268:
                  LOWORD(v360) = 257;
                  uint64_t v76 = (std::string *)&v358;
                  char v77 = 30;
                  goto LABEL_614;
                }
LABEL_271:
                if (v128 != 56)
                {
                  if (v128 != 41)
                  {
                    if (v128 != 5) {
                      goto LABEL_324;
                    }
                    int v134 = *(unsigned __int16 *)(v14 + 18);
                    goto LABEL_275;
                  }
LABEL_279:
                  uint64_t v78 = *(llvm::Instruction **)(v14 - 64);
                  if (!v78) {
                    goto LABEL_324;
                  }
                  uint64_t v75 = *(const llvm::detail::DoubleAPFloat **)(v14 - 32);
                  if (!v75)
                  {
LABEL_296:
                    uint64_t v75 = *(const llvm::detail::DoubleAPFloat **)(v14 - 32);
                    if (!v75) {
                      goto LABEL_312;
                    }
LABEL_302:
                    if (v123 == 5)
                    {
                      if (*((_WORD *)v15 + 9) == 28)
                      {
                        uint64_t v146 = (llvm::Instruction **)((char *)v15 - 32 * (*((_DWORD *)v15 + 5) & 0x7FFFFFF));
                        uint64_t v144 = *v146;
                        uint64_t v145 = v146[4];
LABEL_307:
                        if (v78 == v144 && v75 == v145 || v78 == v145 && v75 == v144)
                        {
                          LOWORD(v360) = 257;
                          uint64_t v76 = (std::string *)&v358;
                          char v77 = 29;
                          goto LABEL_614;
                        }
                      }
                    }
                    else if (v123 == 56)
                    {
                      uint64_t v144 = (llvm::Instruction *)*((void *)v15 - 8);
                      uint64_t v145 = (const llvm::detail::DoubleAPFloat *)*((void *)v15 - 4);
                      goto LABEL_307;
                    }
LABEL_312:
                    if (v128 != 5) {
                      goto LABEL_324;
                    }
                    int v134 = *(unsigned __int16 *)(v14 + 18);
                    goto LABEL_314;
                  }
                  int v137 = 1;
                  goto LABEL_282;
                }
LABEL_285:
                uint64_t v140 = *(void *)(v14 - 64);
                if (v140)
                {
                  uint64_t v141 = *(void *)(v14 - 32);
                  if (v141) {
                    goto LABEL_317;
                  }
                }
                goto LABEL_324;
              }
            }
            else
            {
              if (v128 != 43) {
                goto LABEL_242;
              }
              if (v15 != *(llvm::ConstantExpr **)(v14 - 64)) {
                goto LABEL_242;
              }
              int v125 = *(llvm::Instruction **)(v14 - 32);
              if (!v125) {
                goto LABEL_242;
              }
            }
LABEL_262:
            LOWORD(v360) = 257;
            int64_t v133 = (std::string *)&v358;
LABEL_263:
            char v71 = llvm::BinaryOperator::CreateNeg(v125, (llvm::Value *)v133, 0, v99);
            goto LABEL_615;
          }
          int v59 = *(unsigned __int8 *)(v14 + 16);
          if (v59 == 5)
          {
            if (*(_WORD *)(v14 + 18) != 15) {
              goto LABEL_129;
            }
            unsigned int v60 = *(unsigned __int8 *)(*(void *)(v14 - 32 * (*(_DWORD *)(v14 + 20) & 0x7FFFFFF)) + 16);
          }
          else
          {
            if (v59 != 43) {
              goto LABEL_129;
            }
            unsigned int v60 = *(unsigned __int8 *)(*(void *)(v14 - 64) + 16);
            if (v60 > 0x14) {
              goto LABEL_129;
            }
          }
          if (v60 != 5) {
            goto LABEL_106;
          }
LABEL_129:
          uint64_t v79 = *(void *)(a1 + 24);
          LOWORD(v360) = 257;
          int64_t v80 = sub_1CC2427E8(v79, v14, (uint64_t)&v358, v58);
          uint64_t v81 = *(void *)(a1 + 24);
          LOWORD(v360) = 257;
          uint64_t v78 = sub_1CC2427E8(v81, (uint64_t)v15, (uint64_t)&v358, v82);
          LOWORD(v360) = 257;
          uint64_t v76 = (std::string *)&v358;
          char v77 = 15;
          uint64_t v75 = v80;
          goto LABEL_614;
        }
        int v50 = *(unsigned __int8 *)(v14 + 16);
        if (v50 != 5)
        {
          if (v50 != 41) {
            goto LABEL_150;
          }
          uint64_t v51 = *(void *)(v14 - 64);
          uint64_t v52 = *(void *)(v51 + 8);
          if (!v52 || *(void *)(v52 + 8))
          {
LABEL_86:
            uint64_t v53 = *(void *)(v14 - 32);
            uint64_t v54 = *(void *)(v53 + 8);
            if (!v54 || *(void *)(v54 + 8)) {
              goto LABEL_149;
            }
            int v55 = *(unsigned __int8 *)(v53 + 16);
            if (v55 == 5)
            {
              if (*(_WORD *)(v53 + 18) != 15) {
                goto LABEL_149;
              }
              uint64_t v113 = (std::string::size_type *)(v53 - 32 * (*(_DWORD *)(v53 + 20) & 0x7FFFFFF));
              uint64_t v56 = (void *)*v113;
              if (!*v113) {
                goto LABEL_149;
              }
              std::string::size_type v372 = *v113;
              uint64_t v57 = (uint64_t ***)v113[4];
              if (!v57) {
                goto LABEL_149;
              }
            }
            else
            {
              if (v55 != 43) {
                goto LABEL_149;
              }
              uint64_t v56 = *(void **)(v53 - 64);
              if (!v56) {
                goto LABEL_149;
              }
              std::string::size_type v372 = *(void *)(v53 - 64);
              uint64_t v57 = *(uint64_t ****)(v53 - 32);
              if (!v57) {
                goto LABEL_149;
              }
            }
            unint64_t v371 = v57;
            uint64_t v112 = *(void *)(v14 - 64);
            if (!v112)
            {
LABEL_149:
              int v50 = *(unsigned __int8 *)(v14 + 16);
LABEL_150:
              if (v50 == 5)
              {
                if (*(_WORD *)(v14 + 18) != 15) {
                  goto LABEL_161;
                }
                int v93 = (std::string::size_type *)(v14 - 32 * (*(_DWORD *)(v14 + 20) & 0x7FFFFFF));
                if (!*v93) {
                  goto LABEL_161;
                }
                std::string::size_type v372 = *v93;
                int v92 = (uint64_t ***)v93[4];
                if (!v92) {
                  goto LABEL_161;
                }
              }
              else if (v50 != 43 {
                     || !*(void *)(v14 - 64)
              }
                     || (v372 = *(void *)(v14 - 64), (int v92 = *(uint64_t ****)(v14 - 32)) == 0))
              {
LABEL_161:
                uint64_t v45 = 1;
                goto LABEL_74;
              }
              unint64_t v371 = v92;
              uint64_t v94 = *(void *)(a1 + 24);
              LOWORD(v360) = 257;
              unsigned int v95 = sub_1CB844A3C(v94, v92, (uint64_t)v15, (uint64_t)&v358, 0, 0);
LABEL_159:
              uint64_t v75 = v95;
              uint64_t v78 = (llvm::Instruction *)v372;
LABEL_160:
              LOWORD(v360) = 257;
              uint64_t v76 = (std::string *)&v358;
              char v77 = 15;
              goto LABEL_614;
            }
LABEL_217:
            if ((v369 - 26) >= 4)
            {
              uint64_t v120 = *(void *)(a1 + 24);
              LOWORD(v360) = 257;
              unsigned int v73 = sub_1CB844A3C(v120, v56, v112, (uint64_t)&v358, 0, 0);
              uint64_t v121 = *(void *)(a1 + 24);
              LOWORD(v360) = 257;
              uint64_t v75 = sub_1CB844A3C(v121, v371, (uint64_t)v15, (uint64_t)&v358, 0, 0);
              LOWORD(v360) = 257;
              uint64_t v76 = (std::string *)&v358;
              char v77 = 15;
              goto LABEL_128;
            }
            goto LABEL_149;
          }
          int v96 = *(unsigned __int8 *)(v51 + 16);
          if (v96 == 5)
          {
            if (*(_WORD *)(v51 + 18) != 15) {
              goto LABEL_86;
            }
            BOOL v111 = (std::string::size_type *)(v51 - 32 * (*(_DWORD *)(v51 + 20) & 0x7FFFFFF));
            uint64_t v56 = (void *)*v111;
            if (!*v111) {
              goto LABEL_86;
            }
            std::string::size_type v372 = *v111;
            int v97 = (uint64_t ***)v111[4];
            if (!v97) {
              goto LABEL_86;
            }
          }
          else
          {
            if (v96 != 43) {
              goto LABEL_86;
            }
            uint64_t v56 = *(void **)(v51 - 64);
            if (!v56) {
              goto LABEL_86;
            }
            std::string::size_type v372 = *(void *)(v51 - 64);
            int v97 = *(uint64_t ****)(v51 - 32);
            if (!v97) {
              goto LABEL_86;
            }
          }
          unint64_t v371 = v97;
          uint64_t v112 = *(void *)(v14 - 32);
          if (v112) {
            goto LABEL_217;
          }
          goto LABEL_86;
        }
        if (*(_WORD *)(v14 + 18) != 13) {
          goto LABEL_149;
        }
        uint64_t v87 = (uint64_t *)(v14 - 32 * (*(_DWORD *)(v14 + 20) & 0x7FFFFFF));
        uint64_t v88 = *v87;
        uint64_t v89 = *(void *)(*v87 + 8);
        if (!v89 || *(void *)(v89 + 8))
        {
LABEL_147:
          uint64_t v90 = v87[4];
          uint64_t v91 = *(void *)(v90 + 8);
          if (!v91 || *(void *)(v91 + 8)) {
            goto LABEL_149;
          }
          int v109 = *(unsigned __int8 *)(v90 + 16);
          if (v109 == 5)
          {
            if (*(_WORD *)(v90 + 18) != 15) {
              goto LABEL_149;
            }
            uint64_t v119 = (std::string::size_type *)(v90 - 32 * (*(_DWORD *)(v90 + 20) & 0x7FFFFFF));
            uint64_t v56 = (void *)*v119;
            if (!*v119) {
              goto LABEL_149;
            }
            std::string::size_type v372 = *v119;
            unint64_t v110 = (uint64_t ***)v119[4];
            if (!v110) {
              goto LABEL_149;
            }
          }
          else
          {
            if (v109 != 43) {
              goto LABEL_149;
            }
            uint64_t v56 = *(void **)(v90 - 64);
            if (!v56) {
              goto LABEL_149;
            }
            std::string::size_type v372 = *(void *)(v90 - 64);
            unint64_t v110 = *(uint64_t ****)(v90 - 32);
            if (!v110) {
              goto LABEL_149;
            }
          }
          unint64_t v371 = v110;
          uint64_t v112 = *v87;
          if (!*v87) {
            goto LABEL_149;
          }
          goto LABEL_217;
        }
        int v107 = *(unsigned __int8 *)(v88 + 16);
        if (v107 == 5)
        {
          if (*(_WORD *)(v88 + 18) != 15) {
            goto LABEL_147;
          }
          uint64_t v118 = (std::string::size_type *)(v88 - 32 * (*(_DWORD *)(v88 + 20) & 0x7FFFFFF));
          uint64_t v56 = (void *)*v118;
          if (!*v118) {
            goto LABEL_147;
          }
          std::string::size_type v372 = *v118;
          uint64_t v108 = (uint64_t ***)v118[4];
          if (!v108) {
            goto LABEL_147;
          }
        }
        else
        {
          if (v107 != 43) {
            goto LABEL_147;
          }
          uint64_t v56 = *(void **)(v88 - 64);
          if (!v56) {
            goto LABEL_147;
          }
          std::string::size_type v372 = *(void *)(v88 - 64);
          uint64_t v108 = *(uint64_t ****)(v88 - 32);
          if (!v108) {
            goto LABEL_147;
          }
        }
        unint64_t v371 = v108;
        uint64_t v112 = v87[4];
        if (v112) {
          goto LABEL_217;
        }
        goto LABEL_147;
      }
      int v48 = *(unsigned __int8 *)(v14 + 16);
      if (v48 == 5)
      {
        if (*(_WORD *)(v14 + 18) != 13) {
          goto LABEL_71;
        }
        std::string::size_type v61 = v14 - 32 * (*(_DWORD *)(v14 + 20) & 0x7FFFFFF);
        if (!*(void *)v61) {
          goto LABEL_71;
        }
        std::string::size_type v372 = *(void *)v61;
        if ((sub_1CBF68974((uint64_t)&v358 + 8, *(llvm::Constant **)(v61 + 32)) & 1) == 0) {
          goto LABEL_71;
        }
      }
      else
      {
        if (v48 != 41) {
          goto LABEL_71;
        }
        if (!*(void *)(v14 - 64)) {
          goto LABEL_71;
        }
        std::string::size_type v372 = *(void *)(v14 - 64);
        if (!sub_1CBF687D0((uint64_t)&v358 + 8, *(llvm::Constant **)(v14 - 32))) {
          goto LABEL_71;
        }
      }
      uint64_t v62 = *(void *)(a1 + 24);
      LOWORD(v360) = 257;
      Sub = sub_1CC2427E8(v62, (uint64_t)v15, (uint64_t)&v358, v49);
      uint64_t v35 = v372;
      __int16 v370 = 257;
      uint64_t v33 = __p;
      char v34 = 13;
      return llvm::BinaryOperator::Create(v34, Sub, v35, (const char **)v33, 0);
    }
  }
  return (llvm::Value *)v11;
}

uint64_t sub_1CC9F4000(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a1 + 16);
  if (v4 == 5)
  {
    if (*(_WORD *)(a1 + 18) == 30
      && (sub_1CBF68974((uint64_t)v12 + 1, *(llvm::Constant **)(a1 - 32 * (*(_DWORD *)(a1 + 20) & 0x7FFFFFF) + 32))|| (sub_1CBF68974((uint64_t)v12 + 1, *(llvm::Constant **)(a1 - 32 * (*(_DWORD *)(a1 + 20) & 0x7FFFFFF))) & 1) != 0))
    {
      return 1;
    }
  }
  else if (v4 == 58 {
         && ((sub_1CBF687D0((uint64_t)v12 + 1, *(llvm::Constant **)(a1 - 32)) & 1) != 0
  }
          || (sub_1CBF687D0((uint64_t)v12 + 1, *(llvm::Constant **)(a1 - 64)) & 1) != 0))
  {
    return 1;
  }
  if (sub_1CC9F89B4((int)v12, (llvm::Constant *)a1)) {
    return 1;
  }
  unsigned int v6 = *(unsigned __int8 *)(a1 + 16);
  if (v6 < 0x1C || v6 - 81 >= 2)
  {
    if (v6 == 5)
    {
      int v8 = *(unsigned __int16 *)(a1 + 18);
      if (v8 == 15)
      {
        uint64_t v9 = *(void *)(a1 - 32 * (*(_DWORD *)(a1 + 20) & 0x7FFFFFF));
      }
      else
      {
        if (v8 != 13) {
          goto LABEL_31;
        }
        uint64_t v9 = *(void *)(a1 - 32 * (*(_DWORD *)(a1 + 20) & 0x7FFFFFF) + 32);
      }
      unsigned int v7 = *(unsigned __int8 *)(v9 + 16);
LABEL_30:
      if (v7 != 5) {
        return a2;
      }
      goto LABEL_31;
    }
    if (v6 != 43)
    {
      if (v6 != 41 || (unsigned int v7 = *(unsigned __int8 *)(*(void *)(a1 - 32) + 16), v7 > 0x14))
      {
LABEL_31:
        BYTE4(v12[0]) = 0;
        LODWORD(v12[0]) = 0;
        if ((sub_1CC9F8AA4((uint64_t)v12, a1) & 1) == 0)
        {
          v12[0] = 0;
          v12[1] = 0;
          return sub_1CC9F8BC4((uint64_t)v12, a1) & a2;
        }
        return a2;
      }
      goto LABEL_30;
    }
    unsigned int v10 = *(unsigned __int8 *)(*(void *)(a1 - 64) + 16);
    if (v10 > 0x14 || v10 == 5) {
      goto LABEL_31;
    }
  }
  return a2;
}

llvm::UndefValue **sub_1CC9F41A8(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, llvm::Type *a5)
{
  uint64_t v7 = *((void *)a2 - 4);
  uint64_t v50 = v7;
  long long v8 = *(_OWORD *)(a1 + 120);
  long long v9 = *(_OWORD *)(a1 + 104);
  long long v46 = *(_OWORD *)(a1 + 88);
  long long v47 = v9;
  uint64_t v49 = *((void *)&v8 + 1);
  int v48 = a2;
  unsigned int v10 = (llvm::Value *)sub_1CC03952C((unsigned __int8 *)v7, (uint64_t)&v46, a3, a4, a5);
  if (!v10)
  {
    uint64_t v11 = sub_1CC9F4548((uint64_t)a2);
    if (v11) {
      return (llvm::UndefValue **)v11;
    }
    uint64_t v44 = 0;
    uint64_t v45 = 0;
    if ((a2[17] & 0x10) == 0 || (uint64_t v12 = *(void *)(v7 + 8)) == 0 || *(void *)(v12 + 8))
    {
LABEL_6:
      uint64_t v11 = sub_1CC9F47F8((uint64_t)a2, *(void *)(a1 + 24));
      if (!v11)
      {
        uint64_t v43 = 0;
        *(void *)&long long v46 = &v43;
        *((void *)&v46 + 1) = &v45;
        *(void *)&long long v47 = &v44;
        uint64_t v13 = *(void *)(v7 + 8);
        if (!v13 || *(void *)(v13 + 8) || !sub_1CC189B48((void **)&v46, v7)) {
          return 0;
        }
        v42[0] = a2;
        v42[1] = &v50;
        int v41 = 0;
        *(void *)&long long v46 = &v41;
        if (!sub_1CC04C34C((void **)&v46, (uint64_t)v45))
        {
          *(void *)&long long v46 = &v41;
          if (sub_1CC04C34C((void **)&v46, (uint64_t)v44))
          {
            uint64_t v19 = *(void *)(a1 + 24);
            uint64_t v20 = v45;
            Name = llvm::Value::getName(v45);
            LOWORD(v48) = 773;
            *(void *)&long long v46 = Name;
            *((void *)&v46 + 1) = v22;
            *(void *)&long long v47 = ".neg";
            BOOL v23 = (uint64_t *)sub_1CC9F496C(v19, (uint64_t)v20, (uint64_t)a2, (uint64_t)&v46);
            LOWORD(v48) = 257;
            std::string::size_type v14 = sub_1CC199EFC(v43, v23, (uint64_t)v41, (const char **)&v46, 0, 0);
            sub_1CC9F4AD0((uint64_t)v42, (uint64_t)v14, v41 == (uint64_t *)v45);
            return (llvm::UndefValue **)v14;
          }
          return 0;
        }
        uint64_t v25 = *(void *)(a1 + 24);
        if ((*((unsigned char *)v44 + 23) & 0x10) == 0)
        {
          uint64_t v36 = 0;
          uint64_t v35 = &byte_1CFBCE98E;
          goto LABEL_36;
        }
        uint64_t v26 = ***v44;
        uint64_t v27 = *(void *)(v26 + 152);
        uint64_t v28 = *(unsigned int *)(v26 + 168);
        if (v28)
        {
          LODWORD(v29) = (v28 - 1) & ((v44 >> 4) ^ (v44 >> 9));
          uint64_t v30 = (uint64_t ****)(v27 + 16 * v29);
          uint64_t v31 = *v30;
          if (*v30 == v44)
          {
LABEL_35:
            char v34 = v30[1];
            char v37 = *v34;
            uint64_t v35 = (char *)(v34 + 2);
            uint64_t v36 = v37;
LABEL_36:
            LOWORD(v48) = 773;
            *(void *)&long long v46 = v35;
            *((void *)&v46 + 1) = v36;
            *(void *)&long long v47 = ".neg";
            int v38 = sub_1CC9F496C(v25, (uint64_t)v44, (uint64_t)a2, (uint64_t)&v46);
            LOWORD(v48) = 257;
            std::string::size_type v14 = sub_1CC199EFC(v43, v41, (uint64_t)v38, (const char **)&v46, 0, 0);
            int v39 = v41;
            uint64_t v40 = (uint64_t)v44;
            *((unsigned char *)v14 + 17) = a2[17] & 0xFE | *((unsigned char *)v14 + 17) & 1;
            if (v50
              && *(unsigned char *)(v50 + 16) == 85
              && v39 != (uint64_t *)v40
              && (*(unsigned char *)(v50 + 17) & 0x10) == 0
              && (sub_1CC16A22C(*(uint64_t ****)(v50 - 96), 0, 0, 0, 0, 0) & 1) == 0)
            {
              *((unsigned char *)v14 + 17) &= ~0x10u;
            }
            return (llvm::UndefValue **)v14;
          }
          int v32 = 1;
          while (v31 != (uint64_t ***)-4096)
          {
            int v33 = v29 + v32++;
            uint64_t v29 = v33 & (v28 - 1);
            uint64_t v31 = *(uint64_t ****)(v27 + 16 * v29);
            if (v31 == v44)
            {
              uint64_t v30 = (uint64_t ****)(v27 + 16 * v29);
              goto LABEL_35;
            }
          }
        }
        uint64_t v30 = (uint64_t ****)(v27 + 16 * v28);
        goto LABEL_35;
      }
      return (llvm::UndefValue **)v11;
    }
    int v16 = *(unsigned __int8 *)(v7 + 16);
    if (v16 == 5)
    {
      if (*(_WORD *)(v7 + 18) != 16) {
        goto LABEL_6;
      }
      uint64_t v24 = v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF);
      unsigned int v17 = *(llvm::Value **)v24;
      if (!*(void *)v24) {
        goto LABEL_6;
      }
      uint64_t v45 = *(llvm::Value **)v24;
      unsigned int v18 = *(void **)(v24 + 32);
      if (!v18) {
        goto LABEL_6;
      }
    }
    else
    {
      if (v16 != 44) {
        goto LABEL_6;
      }
      unsigned int v17 = *(llvm::Value **)(v7 - 64);
      if (!v17) {
        goto LABEL_6;
      }
      uint64_t v45 = *(llvm::Value **)(v7 - 64);
      unsigned int v18 = *(void **)(v7 - 32);
      if (!v18) {
        goto LABEL_6;
      }
    }
    LOWORD(v48) = 257;
    std::string::size_type v14 = llvm::BinaryOperator::Create(16, v18, (uint64_t)v17, (const char **)&v46, 0);
    llvm::Instruction::copyIRFlags((uint64_t)v14, (uint64_t)a2, 1);
    return (llvm::UndefValue **)v14;
  }

  return sub_1CC9D3C84(a1, (llvm::ValueAsMetadata *)a2, v10);
}

llvm::Value *sub_1CC9F4548(uint64_t a1)
{
  uint64_t v29 = 0;
  v27[0] = &v29;
  uint64_t v3 = 0;
  if (sub_1CC9F9438(v27, a1))
  {
    int v4 = *(unsigned __int8 *)(v29 + 16);
    if (v4 == 5)
    {
      int v8 = *(unsigned __int16 *)(v29 + 18);
      if (v8 != 21)
      {
        if (v8 == 18)
        {
          long long v9 = (uint64_t *)(v29 - 32 * (*(_DWORD *)(v29 + 20) & 0x7FFFFFF));
          uint64_t v5 = *v9;
          if (*v9)
          {
            unsigned int v6 = (unsigned __int8 *)v9[4];
            if (v6)
            {
LABEL_16:
              uint64_t v10 = llvm::ConstantExpr::get((llvm::ConstantExpr *)0xC, v6, 0, 0, v2);
              __int16 v28 = 257;
              char v11 = 18;
LABEL_38:
              uint64_t v22 = (void *)v5;
LABEL_50:
              uint64_t v3 = llvm::BinaryOperator::Create(v11, v22, v10, (const char **)v27, 0);
              llvm::Instruction::copyIRFlags((uint64_t)v3, a1, 1);
              return v3;
            }
          }
        }
LABEL_39:
        if ((*(unsigned char *)(a1 + 17) & 0x10) != 0)
        {
          if (v4 == 5)
          {
            if (*(_WORD *)(v29 + 18) == 14)
            {
              uint64_t v25 = (uint64_t *)(v29 - 32 * (*(_DWORD *)(v29 + 20) & 0x7FFFFFF));
              uint64_t v23 = *v25;
              if (*v25)
              {
                uint64_t v24 = (unsigned __int8 *)v25[4];
                if (v24) {
                  goto LABEL_49;
                }
              }
            }
          }
          else if (v4 == 42)
          {
            uint64_t v23 = *(void *)(v29 - 64);
            if (v23)
            {
              uint64_t v3 = 0;
              uint64_t v24 = *(unsigned __int8 **)(v29 - 32);
              if (!v24 || v24[16] > 0x14u) {
                return v3;
              }
LABEL_49:
              uint64_t v22 = (void *)llvm::ConstantExpr::get((llvm::ConstantExpr *)0xC, v24, 0, 0, v2);
              __int16 v28 = 257;
              char v11 = 16;
              uint64_t v10 = v23;
              goto LABEL_50;
            }
          }
        }
        return 0;
      }
      uint64_t v21 = (uint64_t *)(v29 - 32 * (*(_DWORD *)(v29 + 20) & 0x7FFFFFF));
      uint64_t v5 = *v21;
      if (!*v21) {
        goto LABEL_39;
      }
      uint64_t v12 = (unsigned __int8 *)v21[4];
      if (!v12) {
        goto LABEL_39;
      }
LABEL_37:
      uint64_t v10 = llvm::ConstantExpr::get((llvm::ConstantExpr *)0xC, v12, 0, 0, v2);
      __int16 v28 = 257;
      char v11 = 21;
      goto LABEL_38;
    }
    if (v4 != 49)
    {
      if (v4 == 46)
      {
        uint64_t v5 = *(void *)(v29 - 64);
        if (v5)
        {
          unsigned int v6 = *(unsigned __int8 **)(v29 - 32);
          if (v6 && v6[16] <= 0x14u) {
            goto LABEL_16;
          }
        }
      }
      goto LABEL_39;
    }
    uint64_t v5 = *(void *)(v29 - 64);
    if (!v5) {
      goto LABEL_39;
    }
    uint64_t v12 = *(unsigned __int8 **)(v29 - 32);
    if (v12) {
      BOOL v13 = v12[16] > 0x14u;
    }
    else {
      BOOL v13 = 1;
    }
    if (!v13) {
      goto LABEL_37;
    }
    if (*(unsigned __int8 *)(v5 + 16) > 0x14u) {
      goto LABEL_39;
    }
    std::string::size_type v14 = (void *)llvm::ConstantExpr::get((llvm::ConstantExpr *)0xC, *(unsigned __int8 **)(v29 - 64), 0, 0, v2);
    __int16 v28 = 257;
    uint64_t v3 = llvm::BinaryOperator::Create(21, v14, (uint64_t)v12, (const char **)v27, 0);
    llvm::Instruction::copyIRFlags((uint64_t)v3, a1, 1);
    int v15 = *(unsigned __int8 *)(a1 + 17) >> 1;
    if (v15 == 127) {
      int v15 = -1;
    }
    int v16 = *(unsigned __int8 *)(v29 + 17) >> 1;
    if (v16 == 127) {
      int v16 = -1;
    }
    unsigned int v17 = v16 & v15;
    if ((v17 >> 3)) {
      char v18 = 16;
    }
    else {
      char v18 = 0;
    }
    char v19 = v18 | *((unsigned char *)v3 + 17) & 0xE7;
    if ((v17 >> 2)) {
      char v20 = 8;
    }
    else {
      char v20 = 0;
    }
    *((unsigned char *)v3 + 17) = v19 | v20;
  }
  return v3;
}

llvm::Value *sub_1CC9F47F8(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = 0;
  v17[0] = &v19;
  int v4 = 0;
  if (sub_1CC04C34C(v17, a1))
  {
    uint64_t v5 = *(void *)(v19 + 8);
    if (!v5 || *(void *)(v5 + 8)) {
      return 0;
    }
    int v7 = *(unsigned __int8 *)(v19 + 16);
    if (v7 == 5)
    {
      int v9 = *(unsigned __int16 *)(v19 + 18);
      if (v9 != 21)
      {
        if (v9 == 18)
        {
          uint64_t v10 = (uint64_t *)(v19 - 32 * (*(_DWORD *)(v19 + 20) & 0x7FFFFFF));
          uint64_t v8 = *v10;
          if (*v10)
          {
            int v4 = (llvm::Value *)v10[4];
            if (!v4) {
              return v4;
            }
            goto LABEL_16;
          }
        }
        return 0;
      }
      std::string::size_type v14 = (uint64_t *)(v19 - 32 * (*(_DWORD *)(v19 + 20) & 0x7FFFFFF));
      uint64_t v13 = *v14;
      if (!*v14) {
        return 0;
      }
      int v4 = (llvm::Value *)v14[4];
      if (!v4) {
        return v4;
      }
    }
    else
    {
      if (v7 != 49)
      {
        if (v7 == 46)
        {
          uint64_t v8 = *(void *)(v19 - 64);
          if (v8)
          {
            int v4 = *(llvm::Value **)(v19 - 32);
            if (!v4) {
              return v4;
            }
LABEL_16:
            __int16 v18 = 257;
            char v11 = sub_1CC9F496C(a2, v8, a1, (uint64_t)v17);
            __int16 v16 = 257;
            char v12 = 18;
LABEL_23:
            int v4 = llvm::BinaryOperator::Create(v12, v11, (uint64_t)v4, &v15, 0);
            llvm::Instruction::copyIRFlags((uint64_t)v4, a1, 1);
            return v4;
          }
        }
        return 0;
      }
      uint64_t v13 = *(void *)(v19 - 64);
      if (!v13) {
        return 0;
      }
      int v4 = *(llvm::Value **)(v19 - 32);
      if (!v4) {
        return v4;
      }
    }
    __int16 v18 = 257;
    char v11 = sub_1CC9F496C(a2, v13, a1, (uint64_t)v17);
    __int16 v16 = 257;
    char v12 = 21;
    goto LABEL_23;
  }
  return v4;
}

llvm::Instruction *sub_1CC9F496C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a2 || *(unsigned __int8 *)(a2 + 16) > 0x14u)
  {
    __int16 v17 = 257;
    int v7 = (uint64_t ***)llvm::UnaryOperator::Create(12, (uint64_t *)a2, &v16, 0);
    uint64_t v8 = (unsigned __int8 *)v7;
    char v9 = *(unsigned char *)(a3 + 17) & 0xFE;
    uint64_t v10 = *(llvm::MDNode **)(a1 + 88);
    if (v10) {
      llvm::Value::setMetadata(v7, 3, v10);
    }
    v8[17] |= v9;
    (*(void (**)(void, unsigned __int8 *, uint64_t, void, void))(**(void **)(a1 + 80) + 16))(*(void *)(a1 + 80), v8, a4, *(void *)(a1 + 48), *(void *)(a1 + 56));
    uint64_t v11 = *(unsigned int *)(a1 + 8);
    if (v11)
    {
      uint64_t v13 = *(void *)a1;
      uint64_t v14 = v13 + 16 * v11;
      do
      {
        llvm::Instruction::setMetadata((llvm::Instruction *)v8, *(_DWORD *)v13, *(llvm::MDNode **)(v13 + 8));
        v13 += 16;
      }
      while (v13 != v14);
    }
    return (llvm::Instruction *)v8;
  }
  uint64_t v8 = (unsigned __int8 *)(*(uint64_t (**)(void))(**(void **)(a1 + 72) + 200))(*(void *)(a1 + 72));
  if (v8) {
    BOOL v15 = v8[16] >= 0x1Cu;
  }
  else {
    BOOL v15 = 0;
  }
  if (!v15) {
    return (llvm::Instruction *)v8;
  }

  return sub_1CB844E0C((uint64_t *)a1, (llvm::Instruction *)v8, a4);
}

uint64_t sub_1CC9F4AD0(uint64_t result, uint64_t a2, char a3)
{
  *(unsigned char *)(a2 + 17) = *(unsigned char *)(*(void *)result + 17) & 0xFE | *(unsigned char *)(a2 + 17) & 1;
  uint64_t v3 = **(void **)(result + 8);
  if (v3 && *(unsigned char *)(v3 + 16) == 85 && (*(unsigned char *)(v3 + 17) & 0x10) == 0 && (a3 & 1) == 0)
  {
    BOOL result = sub_1CC16A22C(*(uint64_t ****)(v3 - 96), 0, 0, 0, 0, 0);
    if ((result & 1) == 0) {
      *(unsigned char *)(a2 + 17) &= ~0x10u;
    }
  }
  return result;
}

llvm::UndefValue **sub_1CC9F4B54(uint64_t a1, uint64_t a2)
{
  uint64_t v121 = *MEMORY[0x1E4F143B8];
  int v4 = *(llvm **)(a2 - 64);
  uint64_t v5 = *(llvm::Constant **)(a2 - 32);
  unint64_t v6 = (unint64_t)*(unsigned __int8 *)(a2 + 17) >> 1;
  long long v7 = *(_OWORD *)(a1 + 120);
  long long v8 = *(_OWORD *)(a1 + 104);
  *(_OWORD *)long long __p = *(_OWORD *)(a1 + 88);
  long long v112 = v8;
  uint64_t v114 = *((void *)&v7 + 1);
  uint64_t v113 = a2;
  if (v6 == 127) {
    int v9 = -1;
  }
  else {
    int v9 = v6;
  }
  uint64_t v10 = sub_1CC0398F4(v4, v5, v9, (uint64_t)__p, 0, (llvm::DSOLocalEquivalent **)1);
  if (!v10)
  {
    unint64_t v11 = sub_1CC9D812C(a1, (unsigned __int8 *)a2);
    if (v11) {
      return (llvm::UndefValue **)v11;
    }
    unint64_t v11 = sub_1CC9D6B70(a1, a2);
    if (v11) {
      return (llvm::UndefValue **)v11;
    }
    unint64_t v110 = 0;
    __p[0] = &v110;
    if (sub_1CC04C34C((void **)__p, a2))
    {
      int v32 = v110;
      goto LABEL_96;
    }
    unint64_t v11 = (unint64_t)sub_1CC9F4548(a2);
    if (v11) {
      return (llvm::UndefValue **)v11;
    }
    unint64_t v11 = (unint64_t)sub_1CC9F47F8(a2, *(void *)(a1 + 24));
    if (v11) {
      return (llvm::UndefValue **)v11;
    }
    uint64_t v108 = 0;
    int v109 = 0;
    uint64_t v13 = *(void *)(a2 - 64);
    uint64_t v14 = *(void *)(a2 - 32);
    if ((*(unsigned char *)(a2 + 17) & 0x10) == 0
      && !llvm::CannotBeNegativeZero(*(void *)(a2 - 64), *(uint64_t **)(a1 + 96), 0)
      || (uint64_t v15 = *(void *)(v14 + 8)) == 0
      || *(void *)(v15 + 8))
    {
LABEL_13:
      if ((*(unsigned char *)(a2 + 17) & 0x10) != 0 && *(unsigned char *)(v13 + 16) != 5)
      {
        __p[0] = &v109;
        uint64_t v16 = *(void *)(v13 + 8);
        if (v16)
        {
          if (!*(void *)(v16 + 8) && sub_1CC04C34C((void **)__p, v13))
          {
            uint64_t v83 = *(void *)(a1 + 24);
            LOWORD(v113) = 257;
            int v32 = (uint64_t *)sub_1CC9F56B4(v83, (uint64_t)v109, v14, (llvm::Instruction *)a2, (uint64_t)__p);
            LOWORD(v113) = 257;
            goto LABEL_97;
          }
        }
      }
      if (*(unsigned __int8 *)(v13 + 16) <= 0x14u && *(unsigned char *)(v14 + 16) == 85)
      {
        if (v14)
        {
          unint64_t v11 = (unint64_t)sub_1CC9D447C(a1, (unsigned char *)a2, (void *)v14, 0, (BOOL)v12);
          if (v11) {
            return (llvm::UndefValue **)v11;
          }
        }
      }
      if (v14)
      {
        unsigned int v17 = *(unsigned __int8 *)(v14 + 16);
        if (v17 <= 0x14 && v17 != 5)
        {
          uint64_t FSub = llvm::ConstantExpr::get((llvm::ConstantExpr *)0xC, (unsigned __int8 *)v14, 0, 0, v12);
LABEL_177:
          LOWORD(v113) = 257;
          goto LABEL_107;
        }
      }
      __p[0] = &v108;
      if (sub_1CC04C34C((void **)__p, v14))
      {
        uint64_t FSub = v108;
        goto LABEL_177;
      }
      __int16 v18 = *(uint64_t **)a2;
      __p[0] = &v108;
      uint64_t v19 = *(void *)(v14 + 8);
      if (v19 && !*(void *)(v19 + 8))
      {
        unsigned int v20 = *(unsigned __int8 *)(v14 + 16);
        unsigned int v21 = v20 - 28;
        BOOL v23 = v20 < 0x1C && v20 != 5;
        if (!v14 || v23) {
          goto LABEL_38;
        }
        if (v20 <= 0x1B) {
          unsigned int v21 = *(unsigned __int16 *)(v14 + 18);
        }
        if (v21 != 45)
        {
LABEL_38:
          __p[0] = &v108;
LABEL_39:
          unsigned int v24 = *(unsigned __int8 *)(v14 + 16);
          unsigned int v25 = v24 - 28;
          BOOL v27 = v24 < 0x1C && v24 != 5;
          if (v14 && !v27)
          {
            if (v24 <= 0x1B) {
              unsigned int v25 = *(unsigned __int16 *)(v14 + 18);
            }
            if (v25 == 46)
            {
              int v87 = *(_DWORD *)(v14 + 20);
              uint64_t v88 = (v87 & 0x40000000) != 0 ? *(uint64_t **)(v14 - 8) : (uint64_t *)(v14 - 32 * (v87 & 0x7FFFFFF));
              if (sub_1CC04C34C((void **)__p, *v88))
              {
                uint64_t v89 = *(void *)(a1 + 24);
                LOWORD(v113) = 257;
                uint64_t v90 = sub_1CB843944(v89, v108, v18, (uint64_t)__p);
LABEL_185:
                uint64_t FSub = (uint64_t)v90;
                LOWORD(v107) = 257;
                uint64_t v51 = (void **)&v103;
                goto LABEL_108;
              }
            }
          }
LABEL_50:
          __p[0] = &v109;
          __p[1] = &v108;
          uint64_t v28 = *(void *)(v14 + 8);
          if (v28 && !*(void *)(v28 + 8) && sub_1CC9F9A18((void **)__p, 18, v14))
          {
            uint64_t v91 = *(void *)(a1 + 24);
            LOWORD(v113) = 257;
            uint64_t v49 = sub_1CB93098C(v91, (uint64_t)v109, v108, (llvm::Instruction *)a2, (uint64_t)__p);
            goto LABEL_106;
          }
          __p[0] = &v109;
          __p[1] = &v108;
          uint64_t v29 = *(void *)(v14 + 8);
          if (!v29 || *(void *)(v29 + 8)) {
            goto LABEL_55;
          }
          int v34 = *(unsigned __int8 *)(v14 + 16);
          if (v34 == 5)
          {
            if (*(_WORD *)(v14 + 18) == 21
              && sub_1CC04C34C((void **)__p, *(void *)(v14 - 32 * (*(_DWORD *)(v14 + 20) & 0x7FFFFFF))))
            {
              uint64_t v35 = *(void *)(v14 - 32 * (*(_DWORD *)(v14 + 20) & 0x7FFFFFF) + 32);
              if (v35) {
                goto LABEL_101;
              }
            }
          }
          else if (v34 == 49 && sub_1CC04C34C((void **)__p, *(void *)(v14 - 64)))
          {
            uint64_t v35 = *(void *)(v14 - 32);
            if (v35)
            {
LABEL_101:
              *(void *)__p[1] = v35;
LABEL_105:
              uint64_t v48 = *(void *)(a1 + 24);
              LOWORD(v113) = 257;
              uint64_t v49 = sub_1CB9307D8(v48, (uint64_t)v109, v108, (llvm::Instruction *)a2, (uint64_t)__p);
LABEL_106:
              uint64_t FSub = v49;
              LOWORD(v113) = 257;
LABEL_107:
              uint64_t v51 = __p;
LABEL_108:
              char v52 = 14;
LABEL_109:
              uint64_t v53 = (void *)v13;
LABEL_110:
              long long v46 = llvm::BinaryOperator::Create(v52, v53, FSub, (const char **)v51, 0);
              goto LABEL_111;
            }
          }
LABEL_55:
          uint64_t v103 = (uint64_t *)&v109;
          unsigned int v104 = &v108;
          uint64_t v30 = *(void *)(v14 + 8);
          if (!v30 || *(void *)(v30 + 8))
          {
LABEL_57:
            uint64_t v31 = sub_1CC9D3890(a1, (unsigned __int8 *)a2, (llvm *)v13, (llvm *)v14);
            if (v31) {
              return sub_1CC9D3C84(a1, (llvm::ValueAsMetadata *)a2, (llvm::Value *)v31);
            }
            if ((~*(unsigned __int8 *)(a2 + 17) & 0x12) != 0) {
              return 0;
            }
            int v33 = *(unsigned __int8 *)(v13 + 16);
            if (v33 == 5)
            {
              if (*(_WORD *)(v13 + 18) == 16)
              {
                uint64_t v40 = (void *)(v13 - 32 * (*(_DWORD *)(v13 + 20) & 0x7FFFFFF));
                if (v14 == *v40)
                {
                  int v32 = (uint64_t *)v40[4];
                  if (v32) {
                    goto LABEL_95;
                  }
                }
              }
            }
            else if (v33 == 44 && v14 == *(void *)(v13 - 64))
            {
              int v32 = *(uint64_t **)(v13 - 32);
              if (v32) {
                goto LABEL_95;
              }
            }
            int v41 = *(unsigned __int8 *)(v14 + 16);
            if (v41 == 5)
            {
              if (*(_WORD *)(v14 + 18) != 14) {
                goto LABEL_117;
              }
              uint64_t v44 = v14 - 32 * (*(_DWORD *)(v14 + 20) & 0x7FFFFFF);
              int v32 = *(uint64_t **)v44;
              uint64_t v45 = *(uint64_t **)(v44 + 32);
              if ((uint64_t *)v13 == v32)
              {
                int v32 = v45;
                if (!v45) {
                  goto LABEL_117;
                }
              }
              else if (!v32 || (uint64_t *)v13 != v45)
              {
                goto LABEL_117;
              }
            }
            else
            {
              if (v41 != 42) {
                goto LABEL_117;
              }
              uint64_t v42 = *(uint64_t **)(v14 - 64);
              int v32 = *(uint64_t **)(v14 - 32);
              if ((uint64_t *)v13 != v42)
              {
                if (v42 && (uint64_t *)v13 == v32)
                {
                  int v109 = *(void **)(v14 - 64);
                  int v32 = v42;
LABEL_96:
                  LOWORD(v113) = 257;
LABEL_97:
                  long long v46 = llvm::UnaryOperator::Create(12, v32, (const char **)__p, 0);
LABEL_111:
                  uint64_t v43 = v46;
                  llvm::Instruction::copyIRFlags((uint64_t)v46, a2, 1);
                  return (llvm::UndefValue **)v43;
                }
LABEL_117:
                if (v33 == 5)
                {
                  if (*(_WORD *)(v13 + 18) == 18)
                  {
                    uint64_t v57 = (void *)(v13 - 32 * (*(_DWORD *)(v13 + 20) & 0x7FFFFFF));
                    if (v14 == *v57)
                    {
                      uint64_t v56 = (unsigned __int8 *)v57[4];
                      if (v56) {
                        goto LABEL_167;
                      }
                    }
                  }
                }
                else if (v33 == 46 && v14 == *(void *)(v13 - 64))
                {
                  uint64_t v56 = *(unsigned __int8 **)(v13 - 32);
                  if (v56)
                  {
                    if (v56[16] <= 0x14u)
                    {
LABEL_167:
                      uint64_t v75 = llvm::ConstantFP::get((llvm::ConstantFP **)v18, (llvm::Type *)v32, 1.0);
                      uint64_t FSub = (uint64_t)llvm::ConstantExpr::getFSub((llvm::ConstantExpr *)v56, v75, v76, v77);
                      LOWORD(v113) = 257;
                      uint64_t v51 = __p;
                      char v52 = 18;
                      uint64_t v53 = (void *)v14;
                      goto LABEL_110;
                    }
                  }
                }
                if (v41 == 5)
                {
                  if (*(_WORD *)(v14 + 18) == 18)
                  {
                    int v59 = (void *)(v14 - 32 * (*(_DWORD *)(v14 + 20) & 0x7FFFFFF));
                    if (v13 == *v59)
                    {
                      uint64_t v58 = (unsigned __int8 *)v59[4];
                      if (v58) {
                        goto LABEL_169;
                      }
                    }
                  }
                }
                else if (v41 == 46 && v13 == *(void *)(v14 - 64))
                {
                  uint64_t v58 = *(unsigned __int8 **)(v14 - 32);
                  if (v58)
                  {
                    if (v58[16] <= 0x14u)
                    {
LABEL_169:
                      uint64_t v78 = llvm::ConstantFP::get((llvm::ConstantFP **)v18, (llvm::Type *)v32, 1.0);
                      uint64_t FSub = (uint64_t)llvm::ConstantExpr::getFSub(v78, (llvm::Constant *)v58, v79, v80);
                      LOWORD(v113) = 257;
                      uint64_t v51 = __p;
                      char v52 = 18;
                      goto LABEL_109;
                    }
                  }
                }
                unsigned int v60 = (uint64_t *)(*(void *)(*(void *)(*(void *)(a2 + 40) + 56) + 40) + 216);
                LOWORD(v107) = 260;
                uint64_t v103 = v60;
                llvm::Triple::Triple((llvm::Triple *)__p, (const llvm::Twine *)&v103);
                uint64_t v102 = 0;
                uint64_t v103 = (uint64_t *)&v109;
                unsigned int v104 = &v108;
                unsigned int v105 = &v102;
                uint64_t v61 = *(void *)(v13 + 8);
                if (v61
                  && !*(void *)(v61 + 8)
                  && sub_1CC9FB28C(&v103, 14, v13)
                  && (DWORD2(v112) - 26) >= 4)
                {
                  uint64_t v84 = *(void *)(a1 + 24);
                  LOWORD(v107) = 257;
                  uint64_t v85 = sub_1CC9F56B4(v84, (uint64_t)v109, v102, (llvm::Instruction *)a2, (uint64_t)&v103);
                  uint64_t v86 = *(void *)(a1 + 24);
                  LOWORD(v107) = 257;
                  uint64_t v72 = sub_1CC9F56B4(v86, v108, v14, (llvm::Instruction *)a2, (uint64_t)&v103);
                  LOWORD(v107) = 257;
                  unsigned int v73 = (void *)v85;
                  goto LABEL_158;
                }
                uint64_t v100 = 0;
                uint64_t v101 = 0;
                unsigned int v98 = 0;
                unint64_t v99 = 0;
                LODWORD(v103) = 319;
                unsigned int v104 = 0;
                unsigned int v105 = &v101;
                uint64_t v106 = 1;
                int v107 = &v99;
                uint64_t v62 = *(void *)(v13 + 8);
                if (v62)
                {
                  if (!*(void *)(v62 + 8))
                  {
                    if (sub_1CC9F99A8((uint64_t)&v103, v13))
                    {
                      LODWORD(v116) = 319;
                      unsigned int v117 = 0;
                      uint64_t v118 = &v100;
                      uint64_t v119 = 1;
                      uint64_t v120 = &v98;
                      uint64_t v92 = *(void *)(v14 + 8);
                      if (v92)
                      {
                        if (!*(void *)(v92 + 8) && sub_1CC9F99A8((uint64_t)&v116, v14) && *v99 == *v98)
                        {
                          uint64_t v93 = *(void *)(a1 + 24);
                          LOWORD(v107) = 257;
                          uint64_t v94 = (void *)sub_1CB930B40(v93, (uint64_t)v99, (uint64_t)v98, (llvm::Instruction *)a2, (uint64_t)&v103);
                          unsigned int v95 = *(uint64_t **)(a1 + 24);
                          uint64_t v115 = *v94;
                          uint64_t v116 = v101;
                          unsigned int v117 = v94;
                          LOWORD(v107) = 257;
                          int v66 = 1;
                          int v96 = (void *)llvm::IRBuilderBase::CreateIntrinsic(v95, 319, (uint64_t)&v115, 1, &v116, 2, a2, (uint64_t)&v103);
                          LOWORD(v107) = 257;
                          BOOL v74 = llvm::BinaryOperator::Create(16, v96, v100, (const char **)&v103, 0);
                          uint64_t v43 = v74;
                          goto LABEL_159;
                        }
                      }
                    }
                  }
                }
                uint64_t v63 = sub_1CC9F08D8((llvm::Instruction *)a2, *(void *)(a1 + 24));
                if (!v63)
                {
                  uint64_t v103 = *(uint64_t **)(a1 + 24);
                  unsigned int v104 = 0;
                  int v64 = (llvm::Value *)sub_1CC9F0CF4((uint64_t)&v103, (_DWORD *)a2);
                  if (!v64)
                  {
                    uint64_t v65 = *(void *)(v13 + 8);
                    if (!v65 || *(void *)(v65 + 8)) {
                      goto LABEL_143;
                    }
                    int v68 = *(unsigned __int8 *)(v13 + 16);
                    if (v68 == 5)
                    {
                      if (*(_WORD *)(v13 + 18) == 16)
                      {
                        uint64_t v70 = (uint64_t *)(v13 - 32 * (*(_DWORD *)(v13 + 20) & 0x7FFFFFF));
                        if (*v70)
                        {
                          int v109 = (void *)*v70;
                          uint64_t v69 = v70[4];
                          if (v69) {
                            goto LABEL_157;
                          }
                        }
                      }
                    }
                    else if (v68 == 44)
                    {
                      if (*(void *)(v13 - 64))
                      {
                        int v109 = *(void **)(v13 - 64);
                        uint64_t v69 = *(void *)(v13 - 32);
                        if (v69)
                        {
LABEL_157:
                          uint64_t v108 = v69;
                          uint64_t v71 = *(void *)(a1 + 24);
                          LOWORD(v107) = 257;
                          uint64_t v72 = sub_1CC9F56B4(v71, v69, v14, (llvm::Instruction *)a2, (uint64_t)&v103);
                          unsigned int v73 = v109;
                          LOWORD(v107) = 257;
LABEL_158:
                          BOOL v74 = llvm::BinaryOperator::Create(16, v73, v72, (const char **)&v103, 0);
                          uint64_t v43 = v74;
                          int v66 = 1;
LABEL_159:
                          llvm::Instruction::copyIRFlags((uint64_t)v74, a2, 1);
                          goto LABEL_144;
                        }
                      }
                    }
LABEL_143:
                    int v66 = 0;
                    uint64_t v43 = 0;
                    goto LABEL_144;
                  }
                  uint64_t v63 = (llvm::Value *)sub_1CC9D3C84(a1, (llvm::ValueAsMetadata *)a2, v64);
                }
                uint64_t v43 = v63;
                int v66 = 1;
LABEL_144:
                if (SBYTE7(v112) < 0) {
                  operator delete(__p[0]);
                }
                if (v66) {
                  return (llvm::UndefValue **)v43;
                }
                return 0;
              }
              if (!v32) {
                goto LABEL_117;
              }
            }
LABEL_95:
            int v109 = v32;
            goto LABEL_96;
          }
          int v36 = *(unsigned __int8 *)(v14 + 16);
          if (v36 == 5)
          {
            if (*(_WORD *)(v14 + 18) != 21) {
              goto LABEL_57;
            }
            long long v47 = (void *)(v14 - 32 * (*(_DWORD *)(v14 + 20) & 0x7FFFFFF));
            if (!*v47) {
              goto LABEL_57;
            }
            int v109 = (void *)*v47;
            if (!sub_1CC04C34C(&v104, v47[4])) {
              goto LABEL_57;
            }
          }
          else
          {
            if (v36 != 49) {
              goto LABEL_57;
            }
            if (!*(void *)(v14 - 64)) {
              goto LABEL_57;
            }
            int v109 = *(void **)(v14 - 64);
            if (!sub_1CC04C34C(&v104, *(void *)(v14 - 32))) {
              goto LABEL_57;
            }
          }
          goto LABEL_105;
        }
        int v81 = *(_DWORD *)(v14 + 20);
        if ((v81 & 0x40000000) != 0) {
          int v82 = *(uint64_t **)(v14 - 8);
        }
        else {
          int v82 = (uint64_t *)(v14 - 32 * (v81 & 0x7FFFFFF));
        }
        if (sub_1CC04C34C((void **)__p, *v82))
        {
          uint64_t v97 = *(void *)(a1 + 24);
          LOWORD(v113) = 257;
          uint64_t v90 = sub_1CB845034(v97, v108, v18, (uint64_t)__p);
          goto LABEL_185;
        }
        uint64_t v19 = *(void *)(v14 + 8);
      }
      __p[0] = &v108;
      if (!v19 || *(void *)(v19 + 8)) {
        goto LABEL_50;
      }
      goto LABEL_39;
    }
    int v37 = *(unsigned __int8 *)(v14 + 16);
    if (v37 == 5)
    {
      if (*(_WORD *)(v14 + 18) != 16) {
        goto LABEL_13;
      }
      uint64_t v54 = (uint64_t *)(v14 - 32 * (*(_DWORD *)(v14 + 20) & 0x7FFFFFF));
      uint64_t v38 = *v54;
      if (!*v54) {
        goto LABEL_13;
      }
      int v109 = (void *)*v54;
      uint64_t v39 = v54[4];
      if (!v39) {
        goto LABEL_13;
      }
    }
    else
    {
      if (v37 != 44) {
        goto LABEL_13;
      }
      uint64_t v38 = *(void *)(v14 - 64);
      if (!v38) {
        goto LABEL_13;
      }
      int v109 = *(void **)(v14 - 64);
      uint64_t v39 = *(void *)(v14 - 32);
      if (!v39) {
        goto LABEL_13;
      }
    }
    uint64_t v108 = v39;
    uint64_t v55 = *(void *)(a1 + 24);
    LOWORD(v113) = 257;
    uint64_t v49 = sub_1CB930B40(v55, v39, v38, (llvm::Instruction *)a2, (uint64_t)__p);
    goto LABEL_106;
  }

  return sub_1CC9D3C84(a1, (llvm::ValueAsMetadata *)a2, v10);
}

uint64_t sub_1CC9F56B4(uint64_t a1, uint64_t a2, uint64_t a3, llvm::Instruction *a4, uint64_t a5)
{
  if (!*(unsigned char *)(a1 + 100))
  {
    if (*(unsigned __int8 *)(a2 + 16) >= 0x15u) {
      uint64_t v10 = 0;
    }
    else {
      uint64_t v10 = a2;
    }
    if (*(unsigned __int8 *)(a3 + 16) >= 0x15u) {
      uint64_t v11 = 0;
    }
    else {
      uint64_t v11 = a3;
    }
    if (v10) {
      BOOL v12 = v11 == 0;
    }
    else {
      BOOL v12 = 1;
    }
    if (!v12)
    {
      unsigned int v21 = (unsigned __int8 *)(*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 72) + 184))(*(void *)(a1 + 72), 14);
      uint64_t v14 = (llvm::Instruction *)v21;
      if (v21) {
        BOOL v22 = v21[16] >= 0x1Cu;
      }
      else {
        BOOL v22 = 0;
      }
      if (!v22) {
        return (uint64_t)v14;
      }
      BOOL v23 = sub_1CB844E0C((uint64_t *)a1, (llvm::Instruction *)v21, a5);
      if (v23) {
        return (uint64_t)v23;
      }
    }
    __int16 v25 = 257;
    uint64_t v13 = (uint64_t ***)llvm::BinaryOperator::Create(14, (void *)a2, a3, &v24, 0);
    uint64_t v14 = (llvm::Instruction *)v13;
    char v15 = *((unsigned char *)a4 + 17) & 0xFE;
    uint64_t v16 = *(llvm::MDNode **)(a1 + 88);
    if (v16) {
      llvm::Value::setMetadata(v13, 3, v16);
    }
    *((unsigned char *)v14 + 17) |= v15;
    (*(void (**)(void, llvm::Instruction *, uint64_t, void, void))(**(void **)(a1 + 80) + 16))(*(void *)(a1 + 80), v14, a5, *(void *)(a1 + 48), *(void *)(a1 + 56));
    uint64_t v17 = *(unsigned int *)(a1 + 8);
    if (v17)
    {
      uint64_t v19 = *(void *)a1;
      uint64_t v20 = v19 + 16 * v17;
      do
      {
        llvm::Instruction::setMetadata(v14, *(_DWORD *)v19, *(llvm::MDNode **)(v19 + 8));
        v19 += 16;
      }
      while (v19 != v20);
    }
    return (uint64_t)v14;
  }
  return llvm::IRBuilderBase::CreateConstrainedFPBinOp(a1, 83, (uint64_t *)a2, a3, a4, a5, 0, 0, 0);
}

uint64_t sub_1CC9F5868(void **a1, uint64_t a2)
{
  unsigned int v2 = *(unsigned __int8 *)(a2 + 16);
  if (v2 < 0x1C)
  {
    if (v2 != 5) {
      return 0;
    }
    unsigned int v8 = *(unsigned __int16 *)(a2 + 18);
    HIDWORD(v10) = v8 - 13;
    LODWORD(v10) = v8 - 13;
    unsigned int v9 = v10 >> 1;
    BOOL v5 = v9 > 6;
    int v11 = (1 << v9) & 0x47;
    if (v5 || v11 == 0) {
      return 0;
    }
  }
  else
  {
    HIDWORD(v4) = v2 - 41;
    LODWORD(v4) = v2 - 41;
    unsigned int v3 = v4 >> 1;
    BOOL v5 = v3 > 6;
    int v6 = (1 << v3) & 0x47;
    if (v5 || v6 == 0) {
      return 0;
    }
    unsigned int v8 = v2 - 28;
  }
  if (v8 != 13 || (*(unsigned char *)(a2 + 17) & 2) == 0) {
    return 0;
  }
  int v13 = *(_DWORD *)(a2 + 20);
  uint64_t v14 = (v13 & 0x40000000) != 0 ? *(uint64_t **)(a2 - 8) : (uint64_t *)(a2 - 32 * (v13 & 0x7FFFFFF));
  uint64_t v15 = *v14;
  if (!v15) {
    return 0;
  }
  uint64_t v17 = *a1;
  uint64_t v16 = (uint64_t)(a1 + 1);
  *uint64_t v17 = v15;
  int v18 = *(_DWORD *)(a2 + 20);
  if ((v18 & 0x40000000) != 0) {
    uint64_t v19 = *(void *)(a2 - 8);
  }
  else {
    uint64_t v19 = a2 - 32 * (v18 & 0x7FFFFFF);
  }
  return sub_1CBF528D8(v16, *(unsigned __int8 **)(v19 + 32));
}

uint64_t sub_1CC9F5930(void **a1, uint64_t a2)
{
  LODWORD(v2) = *(unsigned __int8 *)(a2 + 16);
  if (v2 >= 0x1C)
  {
    HIDWORD(v4) = v2 - 41;
    LODWORD(v4) = v2 - 41;
    unsigned int v3 = v4 >> 1;
    BOOL v5 = v3 > 6;
    int v6 = (1 << v3) & 0x47;
    if (!v5 && v6 != 0)
    {
      LODWORD(v2) = v2 - 28;
      goto LABEL_12;
    }
LABEL_16:
    int v12 = 0;
    return v12 & v2;
  }
  if (v2 != 5) {
    goto LABEL_16;
  }
  LODWORD(v2) = *(unsigned __int16 *)(a2 + 18);
  HIDWORD(v9) = v2 - 13;
  LODWORD(v9) = v2 - 13;
  unsigned int v8 = v9 >> 1;
  BOOL v5 = v8 > 6;
  int v10 = (1 << v8) & 0x47;
  if (v5 || v10 == 0) {
    goto LABEL_16;
  }
LABEL_12:
  if (v2 != 13 || (*(unsigned char *)(a2 + 17) & 2) == 0)
  {
    LODWORD(v2) = 0;
LABEL_15:
    int v12 = 1;
    return v12 & v2;
  }
  int v14 = *(_DWORD *)(a2 + 20);
  if ((v14 & 0x40000000) != 0) {
    uint64_t v15 = *(uint64_t **)(a2 - 8);
  }
  else {
    uint64_t v15 = (uint64_t *)(a2 - 32 * (v14 & 0x7FFFFFF));
  }
  uint64_t v2 = *v15;
  if (!v2) {
    goto LABEL_15;
  }
  **a1 = v2;
  int v16 = *(_DWORD *)(a2 + 20);
  if ((v16 & 0x40000000) != 0) {
    uint64_t v17 = *(void *)(a2 - 8);
  }
  else {
    uint64_t v17 = a2 - 32 * (v16 & 0x7FFFFFF);
  }
  LODWORD(v2) = 0;
  uint64_t v18 = *(void *)(v17 + 32);
  int v12 = 1;
  if (v18 && *(unsigned __int8 *)(v18 + 16) <= 0x14u)
  {
    *a1[1] = v18;
    LODWORD(v2) = 1;
  }
  return v12 & v2;
}

uint64_t sub_1CC9F5A2C(uint64_t **a1, uint64_t a2)
{
  int v3 = *(unsigned __int8 *)(a2 + 16);
  if (v3 == 85)
  {
    uint64_t result = 0;
    uint64_t v9 = *(void *)(a2 - 96);
    if (!v9 || *(unsigned char *)(v9 + 16) != 81) {
      return result;
    }
    uint64_t v10 = *(void *)(a2 - 64);
    uint64_t v11 = *(void *)(a2 - 32);
    uint64_t v6 = *(void *)(v9 - 64);
    uint64_t v7 = *(void *)(v9 - 32);
    if ((v10 != v6 || v11 != v7) && (v10 != v7 || v11 != v6)) {
      return 0;
    }
    int v14 = *(_WORD *)(v9 + 18) & 0x3E;
    if (v10 == v6)
    {
      if (v14 != 36) {
        return 0;
      }
    }
    else if (v14 != 34)
    {
      return 0;
    }
    if (!v6) {
      goto LABEL_28;
    }
    goto LABEL_26;
  }
  if (v3 != 84) {
    return 0;
  }
  uint64_t v4 = *(void *)(a2 - 32);
  if (!v4
    || *(unsigned char *)(v4 + 16)
    || *(void *)(v4 + 24) != *(void *)(a2 + 72)
    || (*(unsigned char *)(v4 + 33) & 0x20) == 0
    || *(_DWORD *)(v4 + 36) != 306)
  {
    return 0;
  }
  BOOL v5 = (uint64_t *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));
  uint64_t v6 = *v5;
  uint64_t v7 = v5[4];
  if (*v5)
  {
LABEL_26:
    **a1 = v6;
    if (sub_1CBF686A0(a1 + 1, 30, v7)) {
      return 1;
    }
  }
LABEL_28:
  if (!v7) {
    return 0;
  }
  **a1 = v7;

  return sub_1CBF686A0(a1 + 1, 30, v6);
}

BOOL sub_1CC9F5B80(unsigned __int8 ***a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a2 + 16);
  if (v2 == 85)
  {
    uint64_t v3 = 0;
    uint64_t v7 = *(void *)(a2 - 96);
    if (v7 && *(unsigned char *)(v7 + 16) == 81)
    {
      unsigned int v8 = *(unsigned __int8 **)(a2 - 64);
      uint64_t v9 = *(unsigned __int8 **)(a2 - 32);
      BOOL v5 = *(unsigned __int8 **)(v7 - 64);
      uint64_t v6 = *(unsigned __int8 **)(v7 - 32);
      if ((v8 != v5 || v9 != v6) && (v8 != v6 || v9 != v5)) {
        return 0;
      }
      int v12 = *(_WORD *)(v7 + 18) & 0x3E;
      if (v8 == v5)
      {
        if (v12 != 36) {
          return 0;
        }
      }
      else if (v12 != 34)
      {
        return 0;
      }
      if (!v5) {
        return 0;
      }
      goto LABEL_26;
    }
  }
  else
  {
    if (v2 != 84) {
      return 0;
    }
    uint64_t v3 = *(void *)(a2 - 32);
    if (v3)
    {
      if (*(unsigned char *)(v3 + 16)) {
        return 0;
      }
      if (*(void *)(v3 + 24) != *(void *)(a2 + 72)) {
        return 0;
      }
      if ((*(unsigned char *)(v3 + 33) & 0x20) == 0) {
        return 0;
      }
      if (*(_DWORD *)(v3 + 36) != 306) {
        return 0;
      }
      uint64_t v4 = (unsigned __int8 **)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));
      BOOL v5 = *v4;
      if (!*v4) {
        return 0;
      }
      uint64_t v6 = v4[4];
LABEL_26:
      **a1 = v5;
      return (sub_1CBF528D8((uint64_t)(a1 + 1), v6) & 1) != 0;
    }
  }
  return v3;
}

uint64_t sub_1CC9F5C80(void **a1, int a2, uint64_t a3)
{
  int v5 = *(unsigned __int8 *)(a3 + 16);
  if (a2 + 28 != v5)
  {
    if (v5 != 5 || *(unsigned __int16 *)(a3 + 18) != a2) {
      return 0;
    }
    uint64_t v14 = *(void *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF));
    uint64_t v15 = *(void *)(v14 + 8);
    if (v15)
    {
      if (!*(void *)(v15 + 8))
      {
        if (sub_1CC9F6040(a1, v14))
        {
          uint64_t v16 = *(void *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF) + 32);
          uint64_t v17 = *(void *)(v16 + 8);
          if (v17)
          {
            if (!*(void *)(v17 + 8))
            {
              int v33 = *(unsigned __int8 *)(v16 + 16);
              if (v33 == 5)
              {
                if (*(_WORD *)(v16 + 18) != 18) {
                  goto LABEL_18;
                }
                int v37 = (void *)(v16 - 32 * (*(_DWORD *)(v16 + 20) & 0x7FFFFFF));
                if (*v37)
                {
                  *a1[3] = *v37;
                  uint64_t v38 = *(void *)(v16 - 32 * (*(_DWORD *)(v16 + 20) & 0x7FFFFFF) + 32);
                  if (*a1[4] == v38) {
                    return 1;
                  }
                }
                else
                {
                  uint64_t v38 = v37[4];
                }
                if (!v38) {
                  goto LABEL_18;
                }
                *a1[3] = v38;
                int v34 = (void *)(v16 - 32 * (*(_DWORD *)(v16 + 20) & 0x7FFFFFF));
              }
              else
              {
                if (v33 != 46) {
                  goto LABEL_18;
                }
                int v34 = (void *)(v16 - 64);
                uint64_t v35 = *(void *)(v16 - 64);
                if (v35)
                {
                  *a1[3] = v35;
                  uint64_t v36 = *(void *)(v16 - 32);
                  if (*a1[4] == v36) {
                    return 1;
                  }
                }
                else
                {
                  uint64_t v36 = *(void *)(v16 - 32);
                }
                if (!v36) {
                  goto LABEL_18;
                }
                *a1[3] = v36;
              }
              if (*a1[4] == *v34) {
                return 1;
              }
            }
          }
        }
      }
    }
LABEL_18:
    uint64_t v18 = *(void *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF) + 32);
    uint64_t v19 = *(void *)(v18 + 8);
    if (!v19 || *(void *)(v19 + 8)) {
      return 0;
    }
    uint64_t result = sub_1CC9F6040(a1, v18);
    if (!result) {
      return result;
    }
    uint64_t v13 = *(void *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF));
    goto LABEL_22;
  }
  uint64_t v6 = *(void *)(a3 - 64);
  uint64_t v7 = *(void *)(v6 + 8);
  if (v7)
  {
    if (!*(void *)(v7 + 8))
    {
      if (sub_1CC9F6040(a1, v6))
      {
        uint64_t v8 = *(void *)(a3 - 32);
        uint64_t v9 = *(void *)(v8 + 8);
        if (v9)
        {
          if (!*(void *)(v9 + 8))
          {
            int v25 = *(unsigned __int8 *)(v8 + 16);
            if (v25 == 5)
            {
              if (*(_WORD *)(v8 + 18) != 18) {
                goto LABEL_7;
              }
              uint64_t v31 = (void *)(v8 - 32 * (*(_DWORD *)(v8 + 20) & 0x7FFFFFF));
              if (*v31)
              {
                *a1[3] = *v31;
                uint64_t v32 = *(void *)(v8 - 32 * (*(_DWORD *)(v8 + 20) & 0x7FFFFFF) + 32);
                if (*a1[4] == v32) {
                  return 1;
                }
              }
              else
              {
                uint64_t v32 = v31[4];
              }
              if (!v32) {
                goto LABEL_7;
              }
              *a1[3] = v32;
              uint64_t v26 = (void *)(v8 - 32 * (*(_DWORD *)(v8 + 20) & 0x7FFFFFF));
            }
            else
            {
              if (v25 != 46) {
                goto LABEL_7;
              }
              uint64_t v26 = (void *)(v8 - 64);
              uint64_t v27 = *(void *)(v8 - 64);
              if (v27)
              {
                *a1[3] = v27;
                uint64_t v28 = *(void *)(v8 - 32);
                if (*a1[4] == v28) {
                  return 1;
                }
              }
              else
              {
                uint64_t v28 = *(void *)(v8 - 32);
              }
              if (!v28) {
                goto LABEL_7;
              }
              *a1[3] = v28;
            }
            if (*a1[4] == *v26) {
              return 1;
            }
          }
        }
      }
    }
  }
LABEL_7:
  uint64_t v10 = *(void *)(a3 - 32);
  uint64_t v11 = *(void *)(v10 + 8);
  if (!v11 || *(void *)(v11 + 8)) {
    return 0;
  }
  uint64_t result = sub_1CC9F6040(a1, v10);
  if (!result) {
    return result;
  }
  uint64_t v13 = *(void *)(a3 - 64);
LABEL_22:
  uint64_t v20 = *(void *)(v13 + 8);
  if (!v20 || *(void *)(v20 + 8)) {
    return 0;
  }
  int v21 = *(unsigned __int8 *)(v13 + 16);
  if (v21 == 5)
  {
    if (*(_WORD *)(v13 + 18) == 18)
    {
      uint64_t v29 = (void *)(v13 - 32 * (*(_DWORD *)(v13 + 20) & 0x7FFFFFF));
      if (*v29)
      {
        *a1[3] = *v29;
        uint64_t v30 = *(void *)(v13 - 32 * (*(_DWORD *)(v13 + 20) & 0x7FFFFFF) + 32);
        if (*a1[4] == v30) {
          return 1;
        }
      }
      else
      {
        uint64_t v30 = v29[4];
      }
      if (v30)
      {
        *a1[3] = v30;
        BOOL v22 = (void *)(v13 - 32 * (*(_DWORD *)(v13 + 20) & 0x7FFFFFF));
        return *a1[4] == *v22;
      }
    }
  }
  else if (v21 == 46)
  {
    BOOL v22 = (void *)(v13 - 64);
    uint64_t v23 = *(void *)(v13 - 64);
    if (v23)
    {
      *a1[3] = v23;
      uint64_t v24 = *(void *)(v13 - 32);
      if (*a1[4] == v24) {
        return 1;
      }
    }
    else
    {
      uint64_t v24 = *(void *)(v13 - 32);
    }
    if (v24)
    {
      *a1[3] = v24;
      return *a1[4] == *v22;
    }
  }
  return 0;
}

uint64_t sub_1CC9F6040(void **a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a2 + 16);
  if (v4 != 5)
  {
    if (v4 != 46) {
      return 0;
    }
    uint64_t v5 = *(void *)(a2 - 64);
    if (v5)
    {
      uint64_t v6 = (double *)(a1 + 1);
      **a1 = v5;
      uint64_t v7 = *(void *)(a2 - 32);
      uint64_t v8 = *(void *)(v7 + 8);
      if (v8)
      {
        if (!*(void *)(v8 + 8))
        {
          int v26 = *(unsigned __int8 *)(v7 + 16);
          if (v26 == 5)
          {
            if (*(_WORD *)(v7 + 18) == 16)
            {
              if (sub_1CD6404D8(v6, *(llvm::Constant **)(v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF))))
              {
                uint64_t v30 = *(void *)(v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF) + 32);
                if (v30) {
                  goto LABEL_80;
                }
              }
            }
          }
          else if (v26 == 44)
          {
            if ((SplatValue = *(unsigned __int8 **)(v7 - 64), unsigned int v28 = SplatValue[16], SplatValue) && v28 == 17
              || (v28 <= 0x14 ? (BOOL v29 = (*(_DWORD *)(*(void *)SplatValue + 8) & 0xFE) == 18) : (BOOL v29 = 0),
                  v29
               && (SplatValue = (unsigned __int8 *)llvm::Constant::getSplatValue((llvm::Constant *)SplatValue, 0),
                   uint64_t v6 = (double *)(a1 + 1),
                   SplatValue)
               && SplatValue[16] == 17))
            {
              if (sub_1CB844168((uint64_t)SplatValue, *v6))
              {
                uint64_t v30 = *(void *)(v7 - 32);
                if (v30) {
                  goto LABEL_80;
                }
              }
            }
          }
        }
      }
    }
    uint64_t v9 = *(void *)(a2 - 32);
    if (!v9) {
      return 0;
    }
    uint64_t v10 = (double *)(a1 + 1);
    **a1 = v9;
    uint64_t v11 = *(void *)(a2 - 64);
    uint64_t v12 = *(void *)(v11 + 8);
    if (!v12) {
      return 0;
    }
    uint64_t v13 = *(void *)(v12 + 8);
    if (v13) {
      return 0;
    }
    int v14 = *(unsigned __int8 *)(v11 + 16);
    if (v14 == 44)
    {
      uint64_t v15 = *(unsigned __int8 **)(v11 - 64);
      unsigned int v16 = v15[16];
      if (v15 && v16 == 17) {
        goto LABEL_78;
      }
      goto LABEL_25;
    }
LABEL_45:
    if (v14 == 5)
    {
      if (*(_WORD *)(v11 + 18) == 16
        && sub_1CD6404D8(v10, *(llvm::Constant **)(v11 - 32 * (*(_DWORD *)(v11 + 20) & 0x7FFFFFF))))
      {
        uint64_t v13 = *(void *)(v11 - 32 * (*(_DWORD *)(v11 + 20) & 0x7FFFFFF) + 32);
        if (v13)
        {
          *a1[2] = v13;
          LOBYTE(v13) = 1;
        }
      }
      else
      {
        LOBYTE(v13) = 0;
      }
    }
    return (v14 == 5) & v13;
  }
  if (*(_WORD *)(a2 + 18) != 18) {
    return 0;
  }
  uint64_t v17 = *(void *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));
  if (v17)
  {
    uint64_t v18 = (double *)(a1 + 1);
    **a1 = v17;
    uint64_t v19 = *(void *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF) + 32);
    uint64_t v20 = *(void *)(v19 + 8);
    if (v20)
    {
      if (!*(void *)(v20 + 8))
      {
        int v31 = *(unsigned __int8 *)(v19 + 16);
        if (v31 == 5)
        {
          if (*(_WORD *)(v19 + 18) == 16)
          {
            if (sub_1CD6404D8(v18, *(llvm::Constant **)(v19 - 32 * (*(_DWORD *)(v19 + 20) & 0x7FFFFFF))))
            {
              uint64_t v30 = *(void *)(v19 - 32 * (*(_DWORD *)(v19 + 20) & 0x7FFFFFF) + 32);
              if (v30) {
                goto LABEL_80;
              }
            }
          }
        }
        else if (v31 == 44)
        {
          uint64_t v32 = *(unsigned __int8 **)(v19 - 64);
          unsigned int v33 = v32[16];
          BOOL v34 = v32 && v33 == 17;
          if (v34
            || (v33 <= 0x14 ? (BOOL v35 = (*(_DWORD *)(*(void *)v32 + 8) & 0xFE) == 18) : (BOOL v35 = 0),
                v35
             && (uint64_t v32 = (unsigned __int8 *)llvm::Constant::getSplatValue((llvm::Constant *)v32, 0),
                 uint64_t v18 = (double *)(a1 + 1),
                 v32)
             && v32[16] == 17))
          {
            if (sub_1CB844168((uint64_t)v32, *v18))
            {
              uint64_t v30 = *(void *)(v19 - 32);
              if (v30) {
                goto LABEL_80;
              }
            }
          }
        }
      }
    }
  }
  uint64_t v21 = *(void *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF) + 32);
  if (!v21) {
    return 0;
  }
  uint64_t v10 = (double *)(a1 + 1);
  **a1 = v21;
  uint64_t v11 = *(void *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));
  uint64_t v22 = *(void *)(v11 + 8);
  if (!v22) {
    return 0;
  }
  uint64_t v13 = *(void *)(v22 + 8);
  if (v13) {
    return 0;
  }
  int v14 = *(unsigned __int8 *)(v11 + 16);
  if (v14 != 44) {
    goto LABEL_45;
  }
  uint64_t v15 = *(unsigned __int8 **)(v11 - 64);
  unsigned int v16 = v15[16];
  if (v15) {
    BOOL v23 = v16 == 17;
  }
  else {
    BOOL v23 = 0;
  }
  if (!v23)
  {
LABEL_25:
    if (v16 <= 0x14 && (*(_DWORD *)(*(void *)v15 + 8) & 0xFE) == 18)
    {
      uint64_t v36 = v10;
      uint64_t result = (uint64_t)llvm::Constant::getSplatValue((llvm::Constant *)v15, 0);
      if (!result) {
        return result;
      }
      uint64_t v15 = (unsigned __int8 *)result;
      int v37 = *(unsigned __int8 *)(result + 16);
      uint64_t v10 = v36;
      if (v37 == 17) {
        goto LABEL_78;
      }
    }
    return 0;
  }
LABEL_78:
  uint64_t result = sub_1CB844168((uint64_t)v15, *v10);
  if (result)
  {
    uint64_t v30 = *(void *)(v11 - 32);
    if (v30)
    {
LABEL_80:
      *a1[2] = v30;
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1CC9F63F8(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v189 = *MEMORY[0x1E4F143B8];
  if (result)
  {
    unsigned int v3 = *(unsigned __int8 *)(result + 16);
    if (v3 < 0x1C) {
      return 0;
    }
    if (v3 == 42)
    {
LABEL_7:
      int v6 = *(_DWORD *)(result + 20);
      if ((v6 & 0x40000000) != 0) {
        uint64_t v7 = *(void **)(result - 8);
      }
      else {
        uint64_t v7 = (void *)(result - 32 * (v6 & 0x7FFFFFF));
      }
      uint64_t v10 = *v7;
      uint64_t v11 = v7[4];
      if (*(unsigned char *)(*v7 + 16) == 17) {
        uint64_t v12 = *v7;
      }
      else {
        uint64_t v12 = 0;
      }
      if (v12)
      {
        uint64_t v13 = *(_UNKNOWN **)(v12 + 32) == &unk_1CFB2E344 ? *(void *)(v12 + 40) : v12 + 24;
        if ((*(unsigned char *)(v13 + 28) & 7) == 3) {
          uint64_t v10 = 0;
        }
      }
      if (*(unsigned char *)(v11 + 16) == 17) {
        uint64_t v27 = v11;
      }
      else {
        uint64_t v27 = 0;
      }
      if (v27)
      {
        uint64_t v28 = *(_UNKNOWN **)(v27 + 32) == &unk_1CFB2E344 ? *(void *)(v27 + 40) : v27 + 24;
        if ((*(unsigned char *)(v28 + 28) & 7) == 3) {
          uint64_t v11 = 0;
        }
      }
      if (v10)
      {
        if (!v12)
        {
          *(unsigned char *)(a2 + 8) = 0;
          *(_WORD *)(a2 + 10) = 1;
          uint64_t v33 = v10;
          goto LABEL_76;
        }
        BOOL v29 = (void **)(a2 + 24);
        uint64_t v30 = (const llvm::detail::DoubleAPFloat *)(v12 + 32);
        if (*(unsigned char *)(a2 + 8))
        {
          int v31 = *v29;
          uint64_t v32 = *(void **)v30;
          if (*v29 != &unk_1CFB2E344 && v32 != &unk_1CFB2E344)
          {
            llvm::detail::IEEEFloat::operator=(v29, v30);
            goto LABEL_75;
          }
          int v179 = (const llvm::detail::DoubleAPFloat *)(v12 + 32);
          uint64_t v180 = (llvm::detail::DoubleAPFloat *)v12;
          uint64_t v178 = (const llvm::detail::DoubleAPFloat *)(a2 + 24);
          if (v31 == (_DWORD *)&unk_1CFB2E344 && v32 == &unk_1CFB2E344)
          {
            llvm::detail::DoubleAPFloat::operator=(v178, v179);
            goto LABEL_75;
          }
          if (v178 == v179)
          {
LABEL_75:
            uint64_t v33 = 0;
            *(_WORD *)(a2 + 8) = 257;
LABEL_76:
            *(void *)a2 = v33;
            if (!v11)
            {
              char v53 = 0;
              goto LABEL_108;
            }
LABEL_77:
            if (!v27)
            {
              *(unsigned char *)(a3 + 8) = 0;
              char v53 = 1;
              *(_WORD *)(a3 + 10) = 1;
              *(void *)a3 = v11;
              if (v3 != 44) {
                goto LABEL_108;
              }
              *(_WORD *)(a3 + 10) = -1;
LABEL_107:
              char v53 = 1;
LABEL_108:
              if (((v10 != 0) & v53) != 0) {
                return 2;
              }
              else {
                return 1;
              }
            }
            uint64_t v48 = (void **)(a3 + 24);
            uint64_t v49 = (const llvm::detail::DoubleAPFloat *)(v27 + 32);
            if (*(unsigned char *)(a3 + 8))
            {
              uint64_t v50 = *v48;
              uint64_t v51 = *(_DWORD **)v49;
              if (*v48 != &unk_1CFB2E344 && v51 != (_DWORD *)&unk_1CFB2E344)
              {
                llvm::detail::IEEEFloat::operator=((void *)(a3 + 24), v49);
                goto LABEL_104;
              }
              uint64_t v182 = (llvm::detail::DoubleAPFloat *)(v27 + 32);
              if (v50 == (_DWORD *)&unk_1CFB2E344 && v51 == (_DWORD *)&unk_1CFB2E344)
              {
                llvm::detail::DoubleAPFloat::operator=((const llvm::detail::DoubleAPFloat *)(a3 + 24), v182);
LABEL_104:
                *(_WORD *)(a3 + 8) = 257;
                *(void *)a3 = 0;
                if (v3 == 44)
                {
                  if (*v48 == &unk_1CFB2E344) {
                    llvm::detail::DoubleAPFloat::changeSign((llvm::detail::DoubleAPFloat *)(a3 + 24));
                  }
                  else {
                    *(unsigned char *)(a3 + 44) ^= 8u;
                  }
                }
                goto LABEL_107;
              }
              if (v48 == (void **)v182) {
                goto LABEL_104;
              }
              if (v50 == (_DWORD *)&unk_1CFB2E344)
              {
                sub_1CB845718((uint64_t *)(a3 + 32));
              }
              else if ((v50[2] - 64) <= 0xFFFFFF7F)
              {
                uint64_t v175 = *(void *)(a3 + 32);
                if (v175) {
                  MEMORY[0x1D25D9CB0](v175, 0x1000C8000313F17);
                }
              }
              int v134 = *(_DWORD **)v182;
              if (*(_UNKNOWN **)v182 != &unk_1CFB2E344)
              {
                *uint64_t v48 = v134;
                if ((v134[2] + 64) >= 0x80) {
                  operator new[]();
                }
                char v135 = *(unsigned char *)(a3 + 44) & 0xF7 | *(unsigned char *)(v27 + 52) & 8;
                *(unsigned char *)(a3 + 44) = v135;
                char v136 = *(unsigned char *)(v27 + 52);
                int v137 = v136 & 7;
                *(unsigned char *)(a3 + 44) = v135 & 0xF8 | v136 & 7;
                *(_DWORD *)(a3 + 40) = *(_DWORD *)(v27 + 48);
                BOOL v139 = (v136 & 6) != 0 && v137 != 3;
                if (v137 == 1 || v139)
                {
                  uint64_t v140 = *(unsigned int *)(*(void *)(a3 + 24) + 8);
                  uint64_t v141 = (void *)(a3 + 32);
                  if ((v140 - 64) <= 0xFFFFFF7F) {
                    uint64_t v141 = (void *)*v141;
                  }
                  uint64_t v144 = *(uint64_t **)(v27 + 40);
                  uint64_t v143 = (uint64_t *)(v27 + 40);
                  unsigned int v142 = v144;
                  if ((*(_DWORD *)(*(v143 - 1) + 8) - 64) >= 0xFFFFFF80) {
                    unsigned int v142 = v143;
                  }
                  if (v140 <= 0xFFFFFFBF)
                  {
                    unint64_t v145 = (unint64_t)(v140 + 64) >> 6;
                    do
                    {
                      uint64_t v146 = *v142++;
                      *v141++ = v146;
                      --v145;
                    }
                    while (v145);
                  }
                }
                goto LABEL_104;
              }
              uint64_t v170 = (void *)(a3 + 24);
              uint64_t v49 = (const llvm::detail::DoubleAPFloat *)(v27 + 32);
            }
            else
            {
              uint64_t v54 = *(_DWORD **)v49;
              if (*(_UNKNOWN **)v49 != &unk_1CFB2E344)
              {
                *uint64_t v48 = v54;
                if ((v54[2] + 64) >= 0x80) {
                  operator new[]();
                }
                char v55 = *(unsigned char *)(a3 + 44) & 0xF7 | *(unsigned char *)(v27 + 52) & 8;
                *(unsigned char *)(a3 + 44) = v55;
                char v56 = *(unsigned char *)(v27 + 52);
                int v57 = v56 & 7;
                *(unsigned char *)(a3 + 44) = v55 & 0xF8 | v56 & 7;
                *(_DWORD *)(a3 + 40) = *(_DWORD *)(v27 + 48);
                BOOL v59 = (v56 & 6) != 0 && v57 != 3;
                if (v57 == 1 || v59)
                {
                  uint64_t v60 = *(unsigned int *)(*(void *)(a3 + 24) + 8);
                  uint64_t v61 = (void *)(a3 + 32);
                  if ((v60 - 64) <= 0xFFFFFF7F) {
                    uint64_t v61 = (void *)*v61;
                  }
                  int v64 = *(uint64_t **)(v27 + 40);
                  uint64_t v63 = (uint64_t *)(v27 + 40);
                  uint64_t v62 = v64;
                  if ((*(_DWORD *)(*(v63 - 1) + 8) - 64) >= 0xFFFFFF80) {
                    uint64_t v62 = v63;
                  }
                  if (v60 <= 0xFFFFFFBF)
                  {
                    unint64_t v65 = (unint64_t)(v60 + 64) >> 6;
                    do
                    {
                      uint64_t v66 = *v62++;
                      *v61++ = v66;
                      --v65;
                    }
                    while (v65);
                  }
                }
                goto LABEL_104;
              }
              uint64_t v170 = (void *)(a3 + 24);
            }
            llvm::detail::DoubleAPFloat::DoubleAPFloat(v170, v49);
            goto LABEL_104;
          }
          if (v31 == (_DWORD *)&unk_1CFB2E344)
          {
            sub_1CB845718((uint64_t *)(a2 + 32));
          }
          else if ((v31[2] - 64) <= 0xFFFFFF7F)
          {
            uint64_t v173 = *(void *)(a2 + 32);
            if (v173) {
              MEMORY[0x1D25D9CB0](v173, 0x1000C8000313F17);
            }
          }
          uint64_t v109 = *(void *)v179;
          if (*(_UNKNOWN **)v179 != &unk_1CFB2E344)
          {
            *(void *)uint64_t v178 = v109;
            if ((*(_DWORD *)(v109 + 8) + 64) >= 0x80) {
              operator new[]();
            }
            char v110 = *(unsigned char *)(a2 + 44) & 0xF7 | *((unsigned char *)v180 + 52) & 8;
            *(unsigned char *)(a2 + 44) = v110;
            char v111 = *((unsigned char *)v180 + 52);
            int v112 = v111 & 7;
            *(unsigned char *)(a2 + 44) = v110 & 0xF8 | v111 & 7;
            *(_DWORD *)(a2 + 40) = *((_DWORD *)v180 + 12);
            BOOL v114 = (v111 & 6) != 0 && v112 != 3;
            if (v112 == 1 || v114)
            {
              uint64_t v116 = *(unsigned int *)(*(void *)(a2 + 24) + 8);
              unsigned int v117 = (void *)(a2 + 32);
              if ((v116 - 64) <= 0xFFFFFF7F) {
                unsigned int v117 = (void *)*v117;
              }
              uint64_t v118 = (uint64_t *)((char *)v180 + 40);
              if ((*(_DWORD *)(*((void *)v180 + 4) + 8) - 64) < 0xFFFFFF80) {
                uint64_t v118 = (uint64_t *)*((void *)v180 + 5);
              }
              if (v116 <= 0xFFFFFFBF)
              {
                unint64_t v119 = (unint64_t)(v116 + 64) >> 6;
                do
                {
                  uint64_t v120 = *v118++;
                  *v117++ = v120;
                  --v119;
                }
                while (v119);
              }
            }
            goto LABEL_75;
          }
          BOOL v29 = (void **)(a2 + 24);
          uint64_t v30 = v179;
        }
        else
        {
          BOOL v34 = *(void **)v30;
          if (*(_UNKNOWN **)v30 != &unk_1CFB2E344)
          {
            void *v29 = v34;
            if ((*((_DWORD *)v34 + 2) + 64) >= 0x80) {
              operator new[]();
            }
            char v35 = *(unsigned char *)(a2 + 44) & 0xF7 | *(unsigned char *)(v12 + 52) & 8;
            *(unsigned char *)(a2 + 44) = v35;
            char v36 = *(unsigned char *)(v12 + 52);
            int v37 = v36 & 7;
            *(unsigned char *)(a2 + 44) = v35 & 0xF8 | v36 & 7;
            *(_DWORD *)(a2 + 40) = *(_DWORD *)(v12 + 48);
            BOOL v39 = (v36 & 6) != 0 && v37 != 3;
            if (v37 == 1 || v39)
            {
              uint64_t v41 = *(unsigned int *)(*(void *)(a2 + 24) + 8);
              uint64_t v42 = (void *)(a2 + 32);
              if ((v41 - 64) <= 0xFFFFFF7F) {
                uint64_t v42 = (void *)*v42;
              }
              uint64_t v45 = *(uint64_t **)(v12 + 40);
              uint64_t v43 = (uint64_t *)(v12 + 40);
              uint64_t v44 = v45;
              if ((*(_DWORD *)(*(v43 - 1) + 8) - 64) < 0xFFFFFF80) {
                uint64_t v43 = v44;
              }
              if (v41 <= 0xFFFFFFBF)
              {
                unint64_t v46 = (unint64_t)(v41 + 64) >> 6;
                do
                {
                  uint64_t v47 = *v43++;
                  *v42++ = v47;
                  --v46;
                }
                while (v46);
              }
            }
            goto LABEL_75;
          }
        }
        llvm::detail::DoubleAPFloat::DoubleAPFloat(v29, v30);
        goto LABEL_75;
      }
      if (v11)
      {
        a3 = a2;
        goto LABEL_77;
      }
      uint64_t v67 = *(void *)(v12 + 32);
      if ((_UNKNOWN *)v67 == &unk_1CFB2E344) {
        llvm::detail::DoubleAPFloat::DoubleAPFloat(&v185, (uint64_t)&unk_1CFB2E344);
      }
      uint64_t v185 = *(void *)(v12 + 32);
      if ((*(_DWORD *)(v67 + 8) + 64) >= 0x80) {
        operator new[]();
      }
      char v188 = 3;
      int v187 = *(_DWORD *)(v67 + 4) - 1;
      int v68 = *(_DWORD *)(v67 + 8);
      if ((v68 - 64) < 0xFFFFFF80)
      {
        *(void *)uint64_t result = 0;
        bzero((void *)(result + 8), 8 * (((v68 + 64) >> 6) - 2) + 8);
      }
      else
      {
        int v186 = 0;
      }
      uint64_t v69 = (void **)(a2 + 24);
      if (*(unsigned char *)(a2 + 8))
      {
        uint64_t v70 = *v69;
        if (*v69 != &unk_1CFB2E344 && (_UNKNOWN *)v185 != &unk_1CFB2E344)
        {
          llvm::detail::IEEEFloat::operator=(v69, &v185);
          goto LABEL_157;
        }
        unint64_t v183 = (llvm::detail::DoubleAPFloat *)(a2 + 24);
        if (v70 == (_DWORD *)&unk_1CFB2E344 && (_UNKNOWN *)v185 == &unk_1CFB2E344)
        {
          llvm::detail::DoubleAPFloat::operator=(v183, (const llvm::detail::DoubleAPFloat *)&v185);
          goto LABEL_157;
        }
        if (v183 == (llvm::detail::DoubleAPFloat *)&v185) {
          goto LABEL_157;
        }
        if (v70 == (_DWORD *)&unk_1CFB2E344)
        {
          sub_1CB845718((uint64_t *)(a2 + 32));
        }
        else if ((v70[2] - 64) <= 0xFFFFFF7F)
        {
          uint64_t v176 = *(void *)(a2 + 32);
          if (v176) {
            MEMORY[0x1D25D9CB0](v176, 0x1000C8000313F17);
          }
        }
        uint64_t v147 = v185;
        if ((_UNKNOWN *)v185 != &unk_1CFB2E344)
        {
          *(void *)unint64_t v183 = v185;
          if ((*(_DWORD *)(v147 + 8) + 64) >= 0x80) {
            operator new[]();
          }
          char v148 = v188;
          int v149 = v188 & 7;
          *(unsigned char *)(a2 + 44) = *(unsigned char *)(a2 + 44) & 0xF0 | v188 & 0xF;
          *(_DWORD *)(a2 + 40) = v187;
          BOOL v151 = (v148 & 6) != 0 && v149 != 3;
          if (v149 == 1 || v151)
          {
            uint64_t v152 = *(unsigned int *)(*(void *)(a2 + 24) + 8);
            unsigned int v153 = (void *)(a2 + 32);
            if ((v152 - 64) <= 0xFFFFFF7F) {
              unsigned int v153 = (void *)*v153;
            }
            if ((*(_DWORD *)(v185 + 8) - 64) >= 0xFFFFFF80) {
              uint64_t v154 = (uint64_t *)&v186;
            }
            else {
              uint64_t v154 = v186;
            }
            if (v152 <= 0xFFFFFFBF)
            {
              unint64_t v155 = (unint64_t)(v152 + 64) >> 6;
              do
              {
                uint64_t v156 = *v154++;
                *v153++ = v156;
                --v155;
              }
              while (v155);
            }
          }
          goto LABEL_157;
        }
        uint64_t v69 = (void **)(a2 + 24);
      }
      else
      {
        uint64_t v85 = v185;
        if ((_UNKNOWN *)v185 != &unk_1CFB2E344)
        {
          *uint64_t v69 = (void *)v185;
          if ((*(_DWORD *)(v85 + 8) + 64) >= 0x80) {
            operator new[]();
          }
          char v86 = v188;
          int v87 = v188 & 7;
          *(unsigned char *)(a2 + 44) = *(unsigned char *)(a2 + 44) & 0xF0 | v188 & 0xF;
          *(_DWORD *)(a2 + 40) = v187;
          BOOL v89 = (v86 & 6) != 0 && v87 != 3;
          if (v87 == 1 || v89)
          {
            uint64_t v90 = *(unsigned int *)(*(void *)(a2 + 24) + 8);
            uint64_t v91 = (void *)(a2 + 32);
            if ((v90 - 64) <= 0xFFFFFF7F) {
              uint64_t v91 = (void *)*v91;
            }
            if ((*(_DWORD *)(v185 + 8) - 64) >= 0xFFFFFF80) {
              uint64_t v92 = (uint64_t *)&v186;
            }
            else {
              uint64_t v92 = v186;
            }
            if (v90 <= 0xFFFFFFBF)
            {
              unint64_t v93 = (unint64_t)(v90 + 64) >> 6;
              do
              {
                uint64_t v94 = *v92++;
                *v91++ = v94;
                --v93;
              }
              while (v93);
            }
          }
          goto LABEL_157;
        }
      }
      llvm::detail::DoubleAPFloat::DoubleAPFloat(v69, (const llvm::detail::DoubleAPFloat *)&v185);
LABEL_157:
      *(_WORD *)(a2 + 8) = 257;
      *(void *)a2 = 0;
      if ((_UNKNOWN *)v185 == &unk_1CFB2E344)
      {
        sub_1CB845718((uint64_t *)&v186);
      }
      else if ((*(_DWORD *)(v185 + 8) - 64) <= 0xFFFFFF7F && v186)
      {
        MEMORY[0x1D25D9CB0](v186, 0x1000C8000313F17);
      }
      return 1;
    }
    if (v3 != 46)
    {
      if (v3 != 44) {
        return 0;
      }
      goto LABEL_7;
    }
    int v8 = *(_DWORD *)(result + 20);
    if ((v8 & 0x40000000) != 0) {
      uint64_t v9 = *(void **)(result - 8);
    }
    else {
      uint64_t v9 = (void *)(result - 32 * (v8 & 0x7FFFFFF));
    }
    uint64_t v14 = *v9;
    uint64_t v15 = v9[4];
    int v16 = *(unsigned __int8 *)(*v9 + 16);
    if (v14) {
      BOOL v17 = v16 == 17;
    }
    else {
      BOOL v17 = 0;
    }
    if (!v17)
    {
      if (*(unsigned char *)(v15 + 16) != 17 || v15 == 0) {
        return 0;
      }
      uint64_t v19 = (void **)(a2 + 24);
      uint64_t v20 = (const llvm::detail::DoubleAPFloat *)(v15 + 32);
      if (*(unsigned char *)(a2 + 8))
      {
        uint64_t v21 = *v19;
        uint64_t v22 = *(_DWORD **)v20;
        if (*v19 != &unk_1CFB2E344 && v22 != (_DWORD *)&unk_1CFB2E344)
        {
          llvm::detail::IEEEFloat::operator=((void *)(a2 + 24), v20);
          goto LABEL_180;
        }
        uint64_t v184 = (llvm::detail::DoubleAPFloat *)(v15 + 32);
        if (v21 == (_DWORD *)&unk_1CFB2E344 && v22 == (_DWORD *)&unk_1CFB2E344)
        {
          llvm::detail::DoubleAPFloat::operator=((const llvm::detail::DoubleAPFloat *)(a2 + 24), v184);
          goto LABEL_180;
        }
        if (v19 == (void **)v184)
        {
LABEL_180:
          *(_WORD *)(a2 + 8) = 257;
          *(void *)a2 = v14;
          return 1;
        }
        if (v21 == (_DWORD *)&unk_1CFB2E344)
        {
          sub_1CB845718((uint64_t *)(a2 + 32));
        }
        else if ((v21[2] - 64) <= 0xFFFFFF7F)
        {
          uint64_t v177 = *(void *)(a2 + 32);
          if (v177) {
            MEMORY[0x1D25D9CB0](v177, 0x1000C8000313F17);
          }
        }
        int v157 = *(_DWORD **)v184;
        if (*(_UNKNOWN **)v184 != &unk_1CFB2E344)
        {
          *uint64_t v19 = v157;
          if ((v157[2] + 64) >= 0x80) {
            operator new[]();
          }
          char v158 = *(unsigned char *)(a2 + 44) & 0xF7 | *(unsigned char *)(v15 + 52) & 8;
          *(unsigned char *)(a2 + 44) = v158;
          char v159 = *(unsigned char *)(v15 + 52);
          int v160 = v159 & 7;
          *(unsigned char *)(a2 + 44) = v158 & 0xF8 | v159 & 7;
          *(_DWORD *)(a2 + 40) = *(_DWORD *)(v15 + 48);
          BOOL v162 = (v159 & 6) != 0 && v160 != 3;
          if (v160 == 1 || v162)
          {
            uint64_t v163 = *(unsigned int *)(*(void *)(a2 + 24) + 8);
            uint64_t v164 = (void *)(a2 + 32);
            if ((v163 - 64) <= 0xFFFFFF7F) {
              uint64_t v164 = (void *)*v164;
            }
            uint64_t v167 = *(uint64_t **)(v15 + 40);
            uint64_t v166 = (uint64_t *)(v15 + 40);
            uint64_t v165 = v167;
            if ((*(_DWORD *)(*(v166 - 1) + 8) - 64) >= 0xFFFFFF80) {
              uint64_t v165 = v166;
            }
            if (v163 <= 0xFFFFFFBF)
            {
              unint64_t v168 = (unint64_t)(v163 + 64) >> 6;
              do
              {
                uint64_t v169 = *v165++;
                *v164++ = v169;
                --v168;
              }
              while (v168);
            }
          }
          goto LABEL_180;
        }
        uint64_t v172 = (void *)(a2 + 24);
        uint64_t v20 = (const llvm::detail::DoubleAPFloat *)(v15 + 32);
      }
      else
      {
        unsigned int v95 = *(_DWORD **)v20;
        if (*(_UNKNOWN **)v20 != &unk_1CFB2E344)
        {
          *uint64_t v19 = v95;
          if ((v95[2] + 64) >= 0x80) {
            operator new[]();
          }
          char v96 = *(unsigned char *)(a2 + 44) & 0xF7 | *(unsigned char *)(v15 + 52) & 8;
          *(unsigned char *)(a2 + 44) = v96;
          char v97 = *(unsigned char *)(v15 + 52);
          int v98 = v97 & 7;
          *(unsigned char *)(a2 + 44) = v96 & 0xF8 | v97 & 7;
          *(_DWORD *)(a2 + 40) = *(_DWORD *)(v15 + 48);
          BOOL v100 = (v97 & 6) != 0 && v98 != 3;
          if (v98 == 1 || v100)
          {
            uint64_t v102 = *(unsigned int *)(*(void *)(a2 + 24) + 8);
            uint64_t v103 = (void *)(a2 + 32);
            if ((v102 - 64) <= 0xFFFFFF7F) {
              uint64_t v103 = (void *)*v103;
            }
            uint64_t v106 = *(uint64_t **)(v15 + 40);
            unsigned int v105 = (uint64_t *)(v15 + 40);
            unsigned int v104 = v106;
            if ((*(_DWORD *)(*(v105 - 1) + 8) - 64) >= 0xFFFFFF80) {
              unsigned int v104 = v105;
            }
            if (v102 <= 0xFFFFFFBF)
            {
              unint64_t v107 = (unint64_t)(v102 + 64) >> 6;
              do
              {
                uint64_t v108 = *v104++;
                *v103++ = v108;
                --v107;
              }
              while (v107);
            }
          }
          goto LABEL_180;
        }
        uint64_t v172 = (void *)(a2 + 24);
      }
      llvm::detail::DoubleAPFloat::DoubleAPFloat(v172, v20);
      goto LABEL_180;
    }
    BOOL v23 = (void **)(a2 + 24);
    uint64_t v24 = (const llvm::detail::DoubleAPFloat *)(v14 + 32);
    if (*(unsigned char *)(a2 + 8))
    {
      int v25 = *v23;
      int v26 = *(_DWORD **)v24;
      if (*v23 != &unk_1CFB2E344 && v26 != (_DWORD *)&unk_1CFB2E344)
      {
        llvm::detail::IEEEFloat::operator=((void *)(a2 + 24), v24);
        goto LABEL_138;
      }
      int v181 = (llvm::detail::DoubleAPFloat *)(v14 + 32);
      if (v25 == (_DWORD *)&unk_1CFB2E344 && v26 == (_DWORD *)&unk_1CFB2E344)
      {
        llvm::detail::DoubleAPFloat::operator=((const llvm::detail::DoubleAPFloat *)(a2 + 24), v181);
        goto LABEL_138;
      }
      if (v23 == (void **)v181)
      {
LABEL_138:
        *(_WORD *)(a2 + 8) = 257;
        *(void *)a2 = v15;
        return 1;
      }
      if (v25 == (_DWORD *)&unk_1CFB2E344)
      {
        sub_1CB845718((uint64_t *)(a2 + 32));
      }
      else if ((v25[2] - 64) <= 0xFFFFFF7F)
      {
        uint64_t v174 = *(void *)(a2 + 32);
        if (v174) {
          MEMORY[0x1D25D9CB0](v174, 0x1000C8000313F17);
        }
      }
      uint64_t v121 = *(_DWORD **)v181;
      if (*(_UNKNOWN **)v181 != &unk_1CFB2E344)
      {
        *BOOL v23 = v121;
        if ((v121[2] + 64) >= 0x80) {
          operator new[]();
        }
        char v122 = *(unsigned char *)(a2 + 44) & 0xF7 | *(unsigned char *)(v14 + 52) & 8;
        *(unsigned char *)(a2 + 44) = v122;
        char v123 = *(unsigned char *)(v14 + 52);
        int v124 = v123 & 7;
        *(unsigned char *)(a2 + 44) = v122 & 0xF8 | v123 & 7;
        *(_DWORD *)(a2 + 40) = *(_DWORD *)(v14 + 48);
        BOOL v126 = (v123 & 6) != 0 && v124 != 3;
        if (v124 == 1 || v126)
        {
          uint64_t v127 = *(unsigned int *)(*(void *)(a2 + 24) + 8);
          int v128 = (void *)(a2 + 32);
          if ((v127 - 64) <= 0xFFFFFF7F) {
            int v128 = (void *)*v128;
          }
          uint64_t v131 = *(uint64_t **)(v14 + 40);
          unsigned int v130 = (uint64_t *)(v14 + 40);
          uint64_t v129 = v131;
          if ((*(_DWORD *)(*(v130 - 1) + 8) - 64) >= 0xFFFFFF80) {
            uint64_t v129 = v130;
          }
          if (v127 <= 0xFFFFFFBF)
          {
            unint64_t v132 = (unint64_t)(v127 + 64) >> 6;
            do
            {
              uint64_t v133 = *v129++;
              *v128++ = v133;
              --v132;
            }
            while (v132);
          }
        }
        goto LABEL_138;
      }
      unint64_t v171 = (void *)(a2 + 24);
      uint64_t v24 = (const llvm::detail::DoubleAPFloat *)(v14 + 32);
    }
    else
    {
      uint64_t v71 = *(_DWORD **)v24;
      if (*(_UNKNOWN **)v24 != &unk_1CFB2E344)
      {
        *BOOL v23 = v71;
        if ((v71[2] + 64) >= 0x80) {
          operator new[]();
        }
        char v72 = *(unsigned char *)(a2 + 44) & 0xF7 | *(unsigned char *)(v14 + 52) & 8;
        *(unsigned char *)(a2 + 44) = v72;
        char v73 = *(unsigned char *)(v14 + 52);
        int v74 = v73 & 7;
        *(unsigned char *)(a2 + 44) = v72 & 0xF8 | v73 & 7;
        *(_DWORD *)(a2 + 40) = *(_DWORD *)(v14 + 48);
        BOOL v76 = (v73 & 6) != 0 && v74 != 3;
        if (v74 == 1 || v76)
        {
          uint64_t v78 = *(unsigned int *)(*(void *)(a2 + 24) + 8);
          uint64_t v79 = (void *)(a2 + 32);
          if ((v78 - 64) <= 0xFFFFFF7F) {
            uint64_t v79 = (void *)*v79;
          }
          int v82 = *(uint64_t **)(v14 + 40);
          int v81 = (uint64_t *)(v14 + 40);
          int64_t v80 = v82;
          if ((*(_DWORD *)(*(v81 - 1) + 8) - 64) >= 0xFFFFFF80) {
            int64_t v80 = v81;
          }
          if (v78 <= 0xFFFFFFBF)
          {
            unint64_t v83 = (unint64_t)(v78 + 64) >> 6;
            do
            {
              uint64_t v84 = *v80++;
              *v79++ = v84;
              --v83;
            }
            while (v83);
          }
        }
        goto LABEL_138;
      }
      unint64_t v171 = (void *)(a2 + 24);
    }
    llvm::detail::DoubleAPFloat::DoubleAPFloat(v171, v24);
    goto LABEL_138;
  }
  return result;
}

uint64_t sub_1CC9F7474(uint64_t a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  uint64_t v4 = *(void *)a1;
  if (!v4) {
    return 0;
  }
  uint64_t v7 = sub_1CC9F63F8(v4, (uint64_t)a2, (uint64_t)a3);
  if (v7 && (*(unsigned char *)(a1 + 8) || *(_WORD *)(a1 + 10) != 1))
  {
    sub_1CC9F7F68(a2, (unsigned __int8 *)(a1 + 8));
    if (v7 == 2) {
      sub_1CC9F7F68(a3, (unsigned __int8 *)(a1 + 8));
    }
    else {
      return 1;
    }
  }
  return v7;
}

uint64_t sub_1CC9F750C(uint64_t a1, unsigned int *a2, const llvm::APFloat *a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = 0;
  uint64_t v115 = *MEMORY[0x1E4F143B8];
  unint64_t v6 = a2[2];
  do
  {
    uint64_t v7 = &v110[v5 + 4];
    *((_DWORD *)v7 + 2) = 0;
    void *v7 = 0;
    v5 += 6;
  }
  while (v5 != 18);
  unsigned int v109 = 0;
  if (!v6) {
    goto LABEL_123;
  }
  unsigned int v102 = a3;
  unsigned int v8 = 0;
  unsigned int v9 = 0;
  unint64_t v10 = 0;
  unsigned int v11 = 0;
  uint64_t v12 = 1;
  do
  {
    uint64_t v13 = *(uint64_t **)(*(void *)a2 + 8 * v10);
    if (!v13)
    {
      ++v10;
      goto LABEL_74;
    }
    uint64_t v14 = *v13;
    uint64_t v107 = v9;
    if (v9 >= 4) {
      llvm::SmallVectorBase<unsigned int>::grow_pod();
    }
    v110[v9] = v13;
    unsigned int v8 = ++v109;
    ++v10;
    uint64_t v15 = v12;
    if (v10 < v6)
    {
      do
      {
        int v16 = *(void **)(*(void *)a2 + 8 * v15);
        if (v16 && *v16 == v14)
        {
          *(void *)(*(void *)a2 + 8 * v15) = 0;
          if (v8 >= 4) {
            llvm::SmallVectorBase<unsigned int>::grow_pod();
          }
          v110[v8] = v16;
          unsigned int v8 = ++v109;
        }
        ++v15;
      }
      while (v6 != v15);
    }
    unint64_t v17 = v9 + 1;
    if (v8 == v17) {
      goto LABEL_70;
    }
    unsigned int v108 = v9;
    unsigned int v18 = v11;
    uint64_t v19 = v110[v9];
    unsigned int v104 = &v110[6 * v11 + 4];
    *unsigned int v104 = *(void *)v19;
    uint64_t v20 = v104 + 1;
    unsigned int v105 = v11;
    unsigned int v106 = v11;
    if (*(unsigned char *)(v19 + 8))
    {
      uint64_t v21 = &v110[6 * v11 + 7];
      uint64_t v22 = (llvm::detail::DoubleAPFloat *)(v19 + 24);
      if (!*v20)
      {
        uint64_t v27 = *(_DWORD **)v22;
        if (*(_UNKNOWN **)v22 == &unk_1CFB2E344)
        {
          llvm::detail::DoubleAPFloat::DoubleAPFloat(v21, (const llvm::detail::DoubleAPFloat *)(v19 + 24));
        }
        else
        {
          *uint64_t v21 = v27;
          if ((v27[2] + 64) >= 0x80) {
            operator new[]();
          }
          char v28 = *((unsigned char *)v21 + 20) & 0xF7 | *(unsigned char *)(v19 + 44) & 8;
          *((unsigned char *)v21 + 20) = v28;
          char v29 = *(unsigned char *)(v19 + 44);
          int v30 = v29 & 7;
          *((unsigned char *)v21 + 20) = v28 & 0xF8 | v29 & 7;
          *((_DWORD *)v21 + 4) = *(_DWORD *)(v19 + 40);
          BOOL v32 = (v29 & 6) != 0 && v30 != 3;
          if (v30 == 1 || v32)
          {
            uint64_t v35 = *v21;
            BOOL v34 = v21 + 1;
            uint64_t v36 = *(unsigned int *)(v35 + 8);
            if ((v36 - 64) <= 0xFFFFFF7F) {
              BOOL v34 = (void *)*v34;
            }
            BOOL v39 = *(uint64_t **)(v19 + 32);
            uint64_t v38 = (uint64_t *)(v19 + 32);
            int v37 = v39;
            if ((*(_DWORD *)(*(v38 - 1) + 8) - 64) >= 0xFFFFFF80) {
              int v37 = v38;
            }
            if (v36 <= 0xFFFFFFBF)
            {
              unint64_t v40 = (unint64_t)(v36 + 64) >> 6;
              do
              {
                uint64_t v41 = *v37++;
                *v34++ = v41;
                --v40;
              }
              while (v40);
            }
          }
        }
        goto LABEL_44;
      }
      uint64_t v23 = *v21;
      uint64_t v24 = *(_DWORD **)v22;
      if ((_UNKNOWN *)*v21 != &unk_1CFB2E344 && v24 != (_DWORD *)&unk_1CFB2E344)
      {
        llvm::detail::IEEEFloat::operator=(v21, (void *)(v19 + 24));
LABEL_44:
        BYTE1(v110[6 * v106 + 5]) = 1;
        *uint64_t v20 = 1;
        unsigned int v8 = v109;
        unsigned int v11 = v105;
        goto LABEL_45;
      }
      uint64_t v101 = (llvm::detail::DoubleAPFloat *)&v110[6 * v18 + 7];
      if ((_UNKNOWN *)v23 == &unk_1CFB2E344 && v24 == (_DWORD *)&unk_1CFB2E344)
      {
        llvm::detail::DoubleAPFloat::operator=(v101, (const llvm::detail::DoubleAPFloat *)(v19 + 24));
      }
      else
      {
        uint64_t v4 = a1;
        if (v101 == v22) {
          goto LABEL_44;
        }
        if ((_UNKNOWN *)v23 == &unk_1CFB2E344)
        {
          sub_1CB845718(&v110[6 * v18 + 8]);
        }
        else if ((*(_DWORD *)(v23 + 8) - 64) <= 0xFFFFFF7F)
        {
          uint64_t v66 = v110[6 * v18 + 8];
          if (v66) {
            MEMORY[0x1D25D9CB0](v66, 0x1000C8000313F17);
          }
        }
        char v53 = *(_DWORD **)v22;
        if (*(_UNKNOWN **)v22 != &unk_1CFB2E344)
        {
          *(void *)uint64_t v101 = v53;
          if ((v53[2] + 64) >= 0x80) {
            operator new[]();
          }
          char v54 = *((unsigned char *)v101 + 20) & 0xF7 | *(unsigned char *)(v19 + 44) & 8;
          *((unsigned char *)v101 + 20) = v54;
          char v55 = *(unsigned char *)(v19 + 44);
          int v56 = v55 & 7;
          *((unsigned char *)v101 + 20) = v54 & 0xF8 | v55 & 7;
          *((_DWORD *)v101 + 4) = *(_DWORD *)(v19 + 40);
          BOOL v58 = (v55 & 6) != 0 && v56 != 3;
          uint64_t v4 = a1;
          if (v56 == 1 || v58)
          {
            BOOL v59 = (void *)((char *)v101 + 8);
            uint64_t v60 = *(unsigned int *)(*(void *)v101 + 8);
            if ((v60 - 64) <= 0xFFFFFF7F) {
              BOOL v59 = (void *)*v59;
            }
            uint64_t v63 = *(uint64_t **)(v19 + 32);
            uint64_t v62 = (uint64_t *)(v19 + 32);
            uint64_t v61 = v63;
            if ((*(_DWORD *)(*(v62 - 1) + 8) - 64) >= 0xFFFFFF80) {
              uint64_t v61 = v62;
            }
            uint64_t v4 = a1;
            if (v60 <= 0xFFFFFFBF)
            {
              unint64_t v64 = (unint64_t)(v60 + 64) >> 6;
              do
              {
                uint64_t v65 = *v61++;
                *v59++ = v65;
                --v64;
              }
              while (v64);
            }
          }
          goto LABEL_44;
        }
        llvm::detail::DoubleAPFloat::DoubleAPFloat(v101, (const llvm::detail::DoubleAPFloat *)(v19 + 24));
      }
      uint64_t v4 = a1;
      goto LABEL_44;
    }
    __int16 v26 = *(_WORD *)(v19 + 10);
    *uint64_t v20 = 0;
    WORD1(v110[6 * v11 + 5]) = v26;
LABEL_45:
    unsigned int v9 = v108;
    if (v8 <= v17) {
      goto LABEL_61;
    }
    uint64_t v42 = &v110[6 * v106 + 4];
    uint64_t v43 = (uint64_t)(v42 + 2);
    uint64_t v44 = (_WORD *)v42 + 5;
    uint64_t v45 = v42 + 3;
    do
    {
      uint64_t v46 = v110[v17];
      if ((*v20 == 0) == (*(unsigned char *)(v46 + 8) == 0))
      {
        if (!*v20)
        {
          *v44 += *(_WORD *)(v46 + 10);
          goto LABEL_58;
        }
        uint64_t v47 = v46 + 16;
        uint64_t v48 = v43;
LABEL_56:
        sub_1CB88A708(v48, v47, 1);
        goto LABEL_58;
      }
      if (!*v20)
      {
        uint64_t v49 = v46 + 16;
        sub_1CC9F8160((uint64_t)v20, *(void *)(v46 + 24));
        uint64_t v48 = v43;
        uint64_t v47 = v49;
        unsigned int v9 = v108;
        goto LABEL_56;
      }
      sub_1CC9F83D0(*v45, *(__int16 *)(v46 + 10), (uint64_t)v111);
      sub_1CB88A708(v43, (uint64_t)v111, 1);
      if ((_UNKNOWN *)v112 == &unk_1CFB2E344)
      {
        sub_1CB845718(&v113);
      }
      else if ((*(_DWORD *)(v112 + 8) - 64) <= 0xFFFFFF7F && v113)
      {
        MEMORY[0x1D25D9CB0](v113, 0x1000C8000313F17);
      }
LABEL_58:
      ++v17;
      unsigned int v8 = v109;
    }
    while (v17 < v109);
    uint64_t v4 = a1;
    unsigned int v11 = v105;
LABEL_61:
    if (v8 != v9)
    {
      if (v8 < v9) {
        bzero(&v110[v8], 8 * (v107 - v8));
      }
      unsigned int v109 = v9;
    }
    ++v11;
    if (!*v20)
    {
      if (!WORD1(v110[6 * v106 + 5])) {
        goto LABEL_73;
      }
LABEL_69:
      v110[v107] = v104;
      unsigned int v8 = ++v109;
LABEL_70:
      unsigned int v9 = v8;
      goto LABEL_74;
    }
    uint64_t v50 = &v110[6 * v106 + 4];
    if ((_UNKNOWN *)v50[3] == &unk_1CFB2E344) {
      uint64_t v51 = (void *)v110[6 * v106 + 8];
    }
    else {
      uint64_t v51 = v50 + 2;
    }
    if ((*((unsigned char *)v51 + 28) & 7) != 3) {
      goto LABEL_69;
    }
LABEL_73:
    unsigned int v8 = v9;
LABEL_74:
    ++v12;
  }
  while (v10 != v6);
  if (!v8)
  {
LABEL_123:
    uint64_t v76 = (uint64_t)llvm::ConstantFP::get(**(llvm::ConstantFP ****)(v4 + 8), (llvm::Type *)a2, 0.0);
    goto LABEL_124;
  }
  uint64_t v67 = v8;
  int v68 = (uint64_t **)v110;
  unsigned int v69 = v8 - 1;
  uint64_t v70 = 8 * v8;
  uint64_t v71 = (uint64_t **)v110;
  while (2)
  {
    char v72 = *v71;
    uint64_t v73 = **v71;
    if (v73 && *(unsigned __int8 *)(v73 + 16) - 11 >= 2)
    {
      if (*((unsigned char *)v72 + 8))
      {
        BOOL v74 = 0;
        goto LABEL_119;
      }
      int v75 = *((unsigned __int16 *)v72 + 5);
      if (v75 != 0xFFFF)
      {
        BOOL v74 = v75 == 1;
LABEL_119:
        v69 += !v74;
      }
    }
    ++v71;
    v70 -= 8;
    if (v70) {
      continue;
    }
    break;
  }
  if (v69 > v102)
  {
    uint64_t v76 = 0;
    goto LABEL_124;
  }
  uint64_t v76 = 0;
  BOOL v81 = 0;
  uint64_t v82 = 8 * v67;
  while (2)
  {
    unint64_t v83 = *v68;
    uint64_t v84 = **v68;
    if (!v84)
    {
      uint64_t v92 = **(llvm::ConstantFP ****)(v4 + 8);
      if (*((unsigned char *)v83 + 8)) {
        unint64_t v93 = llvm::ConstantFP::get(*v92, (llvm::LLVMContext *)(v83 + 2), a3);
      }
      else {
        unint64_t v93 = llvm::ConstantFP::get(v92, (llvm::Type *)a2, (double)*((__int16 *)v83 + 5));
      }
      uint64_t v84 = (uint64_t)v93;
      goto LABEL_160;
    }
    int v85 = *((unsigned __int16 *)v83 + 5);
    BOOL v86 = v85 == 0xFFFF;
    BOOL v87 = v85 == 1 || v85 == 0xFFFF;
    if (!*((unsigned char *)v83 + 8) && v87)
    {
LABEL_151:
      if (!v76) {
        goto LABEL_161;
      }
    }
    else
    {
      BOOL v88 = v85 == 2;
      BOOL v86 = v85 == 65534;
      if (v85 == 65534) {
        BOOL v88 = 1;
      }
      if (*((unsigned char *)v83 + 8)) {
        BOOL v89 = 1;
      }
      else {
        BOOL v89 = !v88;
      }
      if (!v89)
      {
        uint64_t v84 = sub_1CC9F8684((uint64_t *)v4, **v68, **v68);
        goto LABEL_151;
      }
      uint64_t v90 = **(llvm::ConstantFP ****)(v4 + 8);
      if (*((unsigned char *)v83 + 8)) {
        uint64_t v91 = llvm::ConstantFP::get(*v90, (llvm::LLVMContext *)(v83 + 2), a3);
      }
      else {
        uint64_t v91 = llvm::ConstantFP::get(v90, (llvm::Type *)a2, (double)(__int16)v85);
      }
      uint64_t v96 = (uint64_t)v91;
      uint64_t v97 = *(void *)v4;
      __int16 v114 = 257;
      uint64_t v84 = sub_1CB843C88(v97, v84, v96, (uint64_t)v111, 0);
      if (v84) {
        BOOL v98 = *(unsigned __int8 *)(v84 + 16) >= 0x1Cu;
      }
      else {
        BOOL v98 = 0;
      }
      if (v98) {
        sub_1CC9F874C(v4, v84);
      }
LABEL_160:
      BOOL v86 = 0;
      if (!v76)
      {
LABEL_161:
        BOOL v81 = v86;
        uint64_t v76 = v84;
        goto LABEL_162;
      }
    }
    if ((v81 ^ v86))
    {
      if (v81)
      {
        uint64_t v94 = v84;
        uint64_t v95 = v76;
      }
      else
      {
        uint64_t v94 = v76;
        uint64_t v95 = v84;
      }
      uint64_t v76 = sub_1CC9F86E8((uint64_t *)v4, v94, v95);
      BOOL v81 = 0;
    }
    else
    {
      uint64_t v76 = sub_1CC9F8684((uint64_t *)v4, v76, v84);
    }
LABEL_162:
    ++v68;
    v82 -= 8;
    if (v82) {
      continue;
    }
    break;
  }
  if (v81)
  {
    uint64_t v99 = *(void *)v4;
    __int16 v114 = 257;
    uint64_t v76 = (uint64_t)sub_1CB843FF8(v99, v76, (uint64_t)v111, 0);
    if (v76 && *(unsigned __int8 *)(v76 + 16) >= 0x1Cu) {
      sub_1CC9F874C(v4, v76);
    }
  }
LABEL_124:
  for (uint64_t i = 0; i != -18; i -= 6)
  {
    if (BYTE1(v110[i + 17]))
    {
      uint64_t v78 = v110[i + 19];
      if ((_UNKNOWN *)v78 == &unk_1CFB2E344)
      {
        sub_1CB845718(&v110[i + 20]);
      }
      else if ((*(_DWORD *)(v78 + 8) - 64) <= 0xFFFFFF7F)
      {
        uint64_t v79 = v110[i + 20];
        if (v79) {
          MEMORY[0x1D25D9CB0](v79, 0x1000C8000313F17);
        }
      }
    }
  }
  return v76;
}

unsigned __int8 *sub_1CC9F7F68(unsigned __int8 *result, unsigned __int8 *a2)
{
  void v16[2] = *MEMORY[0x1E4F143B8];
  int v2 = *a2;
  int v3 = *((unsigned __int16 *)a2 + 1);
  if (*a2) {
    BOOL v4 = 0;
  }
  else {
    BOOL v4 = v3 == 1;
  }
  if (v4) {
    return result;
  }
  uint64_t v5 = result;
  int v7 = result[8];
  result += 8;
  int v6 = v7;
  if (*a2) {
    BOOL v8 = 0;
  }
  else {
    BOOL v8 = v3 == 0xFFFF;
  }
  if (!v8)
  {
    if (v6 | v2)
    {
      if (v6) {
        unint64_t v10 = result;
      }
      else {
        unint64_t v10 = a2;
      }
      uint64_t v11 = *((void *)v10 + 2);
      if (!v6)
      {
        sub_1CC9F8160((uint64_t)result, *((void *)v10 + 2));
        int v2 = *a2;
      }
      uint64_t v12 = (uint64_t)(v5 + 16);
      if (v2)
      {
        return (unsigned __int8 *)sub_1CB9C2E60(v12, (uint64_t)(a2 + 8), 1);
      }
      else
      {
        sub_1CC9F83D0(v11, *((__int16 *)a2 + 1), (uint64_t)v14);
        uint64_t result = (unsigned __int8 *)sub_1CB9C2E60(v12, (uint64_t)v14, 1);
        if ((_UNKNOWN *)v15 == &unk_1CFB2E344)
        {
          return (unsigned __int8 *)sub_1CB845718(v16);
        }
        else if ((*(_DWORD *)(v15 + 8) - 64) <= 0xFFFFFF7F)
        {
          uint64_t result = (unsigned __int8 *)v16[0];
          if (v16[0]) {
            return (unsigned __int8 *)MEMORY[0x1D25D9CB0](v16[0], 0x1000C8000313F17);
          }
        }
      }
      return result;
    }
    LOWORD(v13) = *((_WORD *)v5 + 5) * v3;
LABEL_24:
    *((_WORD *)v5 + 5) = v13;
    return result;
  }
  if (!v6)
  {
    int v13 = -*((unsigned __int16 *)v5 + 5);
    goto LABEL_24;
  }
  uint64_t result = v5 + 24;
  if (*((_UNKNOWN **)v5 + 3) == &unk_1CFB2E344)
  {
    return (unsigned __int8 *)llvm::detail::DoubleAPFloat::changeSign((llvm::detail::DoubleAPFloat *)result);
  }
  else
  {
    v5[44] ^= 8u;
  }
  return result;
}

uint64_t sub_1CC9F8160(uint64_t result, uint64_t a2)
{
  if (!*(unsigned char *)result)
  {
    uint64_t v2 = result;
    int v3 = (void *)*(unsigned __int16 *)(result + 2);
    if (*(__int16 *)(result + 2) < 1)
    {
      uint64_t v7 = -(uint64_t)(__int16)v3;
      BOOL v8 = (void **)(result + 16);
      if ((_UNKNOWN *)a2 == &unk_1CFB2E344) {
        llvm::detail::DoubleAPFloat::DoubleAPFloat((void *)(result + 16), (uint64_t)&unk_1CFB2E344);
      }
      *BOOL v8 = (void *)a2;
      if ((*(_DWORD *)(a2 + 8) + 64) >= 0x80) {
        operator new[]();
      }
      *(unsigned char *)(result + 36) = *(unsigned char *)(result + 36) & 0xF0 | 2;
      int v9 = *(_DWORD *)(a2 + 8);
      unint64_t v10 = (uint64_t *)(result + 24);
      if ((v9 - 64) < 0xFFFFFF80)
      {
        uint64_t v12 = (void *)*v10;
        *uint64_t v12 = 0;
        uint64_t v14 = v7;
        uint64_t v16 = a2;
        bzero(v12 + 1, 8 * (((v9 + 64) >> 6) - 2) + 8);
        uint64_t v7 = v14;
        a2 = v16;
        unint64_t v10 = *(uint64_t **)(v2 + 24);
      }
      else
      {
        *unint64_t v10 = 0;
      }
      *(_DWORD *)(v2 + 32) = *(_DWORD *)(a2 + 8) - 1;
      *unint64_t v10 = v7;
      uint64_t result = llvm::detail::IEEEFloat::normalize((llvm::detail::IEEEFloat *)(v2 + 16), 1, 0);
      if (*v8 == &unk_1CFB2E344) {
        uint64_t result = llvm::detail::DoubleAPFloat::changeSign((llvm::detail::DoubleAPFloat *)(v2 + 16));
      }
      else {
        *(unsigned char *)(v2 + 36) ^= 8u;
      }
    }
    else
    {
      BOOL v4 = (llvm::detail::IEEEFloat *)(result + 16);
      if ((_UNKNOWN *)a2 == &unk_1CFB2E344) {
        llvm::detail::DoubleAPFloat::DoubleAPFloat(v4, (uint64_t)&unk_1CFB2E344);
      }
      *(void *)BOOL v4 = a2;
      if ((*(_DWORD *)(a2 + 8) + 64) >= 0x80) {
        operator new[]();
      }
      *(unsigned char *)(v2 + 36) = *(unsigned char *)(v2 + 36) & 0xF0 | 2;
      int v5 = *(_DWORD *)(a2 + 8);
      int v6 = (void **)(v2 + 24);
      if ((v5 - 64) < 0xFFFFFF80)
      {
        uint64_t v11 = *v6;
        *uint64_t v11 = 0;
        int v13 = v4;
        uint64_t v15 = a2;
        bzero(v11 + 1, 8 * (((v5 + 64) >> 6) - 2) + 8);
        BOOL v4 = v13;
        a2 = v15;
        int v6 = (void **)*v6;
      }
      else
      {
        *int v6 = 0;
      }
      *(_DWORD *)(v2 + 32) = *(_DWORD *)(a2 + 8) - 1;
      *int v6 = v3;
      uint64_t result = llvm::detail::IEEEFloat::normalize(v4, 1, 0);
    }
    *(_WORD *)uint64_t v2 = 257;
  }
  return result;
}

uint64_t sub_1CC9F83D0@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, uint64_t a3@<X8>)
{
  if ((a2 & 0x80000000) != 0)
  {
    unint64_t v9 = -a2;
    unint64_t v10 = (void **)(a3 + 8);
    if ((_UNKNOWN *)a1 == &unk_1CFB2E344) {
      llvm::detail::DoubleAPFloat::DoubleAPFloat((void *)(a3 + 8), (uint64_t)&unk_1CFB2E344);
    }
    *unint64_t v10 = (void *)a1;
    if ((*(_DWORD *)(a1 + 8) + 64) >= 0x80) {
      operator new[]();
    }
    *(unsigned char *)(a3 + 28) = *(unsigned char *)(a3 + 28) & 0xF0 | 2;
    int v11 = *(_DWORD *)(a1 + 8);
    uint64_t v12 = (unint64_t *)(a3 + 16);
    if ((v11 - 64) < 0xFFFFFF80)
    {
      unint64_t v16 = -a2;
      uint64_t v14 = (void *)*v12;
      void *v14 = 0;
      uint64_t v18 = a1;
      bzero(v14 + 1, 8 * (((v11 + 64) >> 6) - 2) + 8);
      unint64_t v9 = v16;
      a1 = v18;
      uint64_t v12 = *(unint64_t **)(a3 + 16);
    }
    else
    {
      *uint64_t v12 = 0;
    }
    *(_DWORD *)(a3 + 24) = *(_DWORD *)(a1 + 8) - 1;
    *uint64_t v12 = v9;
    uint64_t result = llvm::detail::IEEEFloat::normalize((llvm::detail::IEEEFloat *)(a3 + 8), 1, 0);
    if (*v10 == &unk_1CFB2E344)
    {
      return llvm::detail::DoubleAPFloat::changeSign((llvm::detail::DoubleAPFloat *)(a3 + 8));
    }
    else
    {
      *(unsigned char *)(a3 + 28) ^= 8u;
    }
  }
  else
  {
    unint64_t v4 = a2;
    int v5 = (llvm::detail::IEEEFloat *)(a3 + 8);
    if ((_UNKNOWN *)a1 == &unk_1CFB2E344)
    {
      llvm::detail::DoubleAPFloat::DoubleAPFloat((void *)(a3 + 8), (uint64_t)&unk_1CFB2E344);
    }
    *(void *)int v5 = a1;
    if ((*(_DWORD *)(a1 + 8) + 64) >= 0x80) {
      operator new[]();
    }
    *(unsigned char *)(a3 + 28) = *(unsigned char *)(a3 + 28) & 0xF0 | 2;
    int v6 = *(_DWORD *)(a1 + 8);
    uint64_t v7 = (unint64_t *)(a3 + 16);
    if ((v6 - 64) < 0xFFFFFF80)
    {
      int v13 = (unint64_t *)*v7;
      unint64_t *v13 = 0;
      uint64_t v15 = v5;
      uint64_t v17 = a1;
      bzero(v13 + 1, 8 * (((v6 + 64) >> 6) - 2) + 8);
      int v5 = v15;
      a1 = v17;
      uint64_t v7 = (unint64_t *)*v7;
    }
    else
    {
      unint64_t *v7 = 0;
    }
    *(_DWORD *)(a3 + 24) = *(_DWORD *)(a1 + 8) - 1;
    unint64_t *v7 = v4;
    return llvm::detail::IEEEFloat::normalize(v5, 1, 0);
  }
  return result;
}

uint64_t sub_1CC9F8684(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  __int16 v9 = 257;
  uint64_t v5 = sub_1CC52C04C(v4, a2, a3, (uint64_t)v8, 0);
  if (v5) {
    BOOL v6 = *(unsigned __int8 *)(v5 + 16) >= 0x1Cu;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6) {
    sub_1CC9F874C((uint64_t)a1, v5);
  }
  return v5;
}

uint64_t sub_1CC9F86E8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  __int16 v9 = 257;
  uint64_t v5 = sub_1CB843E40(v4, a2, a3, (uint64_t)v8, 0);
  if (v5) {
    BOOL v6 = *(unsigned __int8 *)(v5 + 16) >= 0x1Cu;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6) {
    sub_1CC9F874C((uint64_t)a1, v5);
  }
  return v5;
}

uint64_t sub_1CC9F874C(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  uint64_t v4 = *(unsigned __int8 **)(*(void *)(result + 8) + 48);
  unint64_t v16 = v4;
  if (v4) {
    uint64_t result = llvm::MetadataTracking::track((uint64_t)&v16, v4, 2);
  }
  uint64_t v5 = (unsigned __int8 **)(a2 + 48);
  if (&v16 != (unsigned __int8 **)(a2 + 48))
  {
    BOOL v6 = *v5;
    if (*v5)
    {
      int v8 = *v6;
      if ((v8 - 4) > 0x1E)
      {
        if ((v8 - 3) >= 0xFFFFFFFE) {
          int v11 = *v5;
        }
        else {
          int v11 = 0;
        }
        if ((v8 - 3) < 0xFFFFFFFE)
        {
          if (v8 == 3) {
            *((void *)v6 + 1) = 0;
          }
          goto LABEL_5;
        }
        unint64_t v10 = (unint64_t)(v11 + 8);
      }
      else
      {
        if ((v6[1] & 0x7F) != 2 && !*((_DWORD *)v6 + 3)) {
          goto LABEL_5;
        }
        uint64_t v9 = *((void *)v6 + 2);
        if ((v9 & 4) == 0) {
          goto LABEL_5;
        }
        unint64_t v10 = v9 & 0xFFFFFFFFFFFFFFF8;
        if (!v10) {
          goto LABEL_5;
        }
      }
      uint64_t v17 = (unsigned __int8 **)(a2 + 48);
      uint64_t result = sub_1CC5FA668(v10 + 16, &v17);
    }
LABEL_5:
    uint64_t v7 = v16;
    *uint64_t v5 = v16;
    if (v7) {
      uint64_t result = llvm::MetadataTracking::retrack((uint64_t)&v16, v7, a2 + 48);
    }
    goto LABEL_7;
  }
  if (!v16) {
    goto LABEL_7;
  }
  int v12 = *v16;
  if ((v12 - 4) > 0x1E)
  {
    if ((v12 - 3) >= 0xFFFFFFFE) {
      uint64_t v15 = v16;
    }
    else {
      uint64_t v15 = 0;
    }
    if ((v12 - 3) >= 0xFFFFFFFE)
    {
      unint64_t v14 = (unint64_t)(v15 + 8);
LABEL_34:
      uint64_t v17 = &v16;
      uint64_t result = sub_1CC5FA668(v14 + 16, &v17);
      goto LABEL_7;
    }
    if (v12 == 3) {
      *((void *)v16 + 1) = 0;
    }
  }
  else if ((v16[1] & 0x7F) == 2 || *((_DWORD *)v16 + 3))
  {
    uint64_t v13 = *((void *)v16 + 2);
    if ((v13 & 4) != 0)
    {
      unint64_t v14 = v13 & 0xFFFFFFFFFFFFFFF8;
      if (v14) {
        goto LABEL_34;
      }
    }
  }
LABEL_7:
  *(unsigned char *)(a2 + 17) |= *(unsigned char *)(*(void *)(v3 + 8) + 17) & 0xFE;
  return result;
}

uint64_t sub_1CC9F88DC(uint64_t a1, int a2, uint64_t a3)
{
  int v4 = *(unsigned __int8 *)(a3 + 16);
  if (a2 + 28 == v4)
  {
    uint64_t v5 = a1 + 1;
    if (sub_1CBF687D0(a1 + 1, *(llvm::Constant **)(a3 - 32))) {
      return 1;
    }
    uint64_t v9 = *(llvm::Constant **)(a3 - 64);
    return sub_1CBF687D0(v5, v9);
  }
  else if (v4 == 5 && *(unsigned __int16 *)(a3 + 18) == a2)
  {
    uint64_t v7 = a1 + 1;
    if (sub_1CBF68974(a1 + 1, *(llvm::Constant **)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF) + 32))) {
      return 1;
    }
    int v8 = *(llvm::Constant **)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF));
    return sub_1CBF68974(v7, v8);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1CC9F89B4(int a1, llvm::Constant *this)
{
  unsigned int v3 = *((unsigned __int8 *)this + 16);
  if (this && v3 == 16) {
    return 1;
  }
  uint64_t v5 = *(void *)this;
  if (*(void *)this) {
    BOOL v6 = (*(_DWORD *)(*(void *)this + 8) & 0xFE) == 18;
  }
  else {
    BOOL v6 = 0;
  }
  BOOL v7 = !v6 || v3 > 0x14;
  int v8 = v7;
  if (v7 || (SplatValue = llvm::Constant::getSplatValue(this, 0)) != 0 && SplatValue[16] == 16)
  {
    int v10 = 1;
  }
  else
  {
    if (*(unsigned char *)(v5 + 8) == 18)
    {
      int v11 = *(_DWORD *)(v5 + 32);
      if (v11)
      {
        int v12 = 0;
        int v10 = 0;
        while (1)
        {
          AggregateElement = llvm::Constant::getAggregateElement(this, v12);
          if (!AggregateElement) {
            break;
          }
          int v14 = *((unsigned __int8 *)AggregateElement + 16);
          if ((v14 - 11) >= 2)
          {
            if (v14 != 16) {
              break;
            }
            int v10 = 1;
          }
          int v12 = (llvm::Type *)(v12 + 1);
          if (v11 == v12) {
            return (v8 ^ 1) & v10;
          }
        }
      }
    }
    int v10 = 0;
  }
  return (v8 ^ 1) & v10;
}

uint64_t sub_1CC9F8AA4(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 16) != 85) {
    return 0;
  }
  int v5 = *(_DWORD *)(a2 + 20);
  if ((v5 & 0x40000000) != 0) {
    uint64_t v6 = *(void *)(a2 - 8);
  }
  else {
    uint64_t v6 = a2 - 32 * (v5 & 0x7FFFFFF);
  }
  uint64_t v7 = *(void *)(v6 + 32);
  int v8 = *(unsigned __int8 *)(v7 + 16);
  if (v8 != 5)
  {
    if (v8 == 58
      && ((sub_1CBF687D0(a1 + 2, *(llvm::Constant **)(v7 - 32)) & 1) != 0
       || (sub_1CBF687D0(a1 + 2, *(llvm::Constant **)(v7 - 64)) & 1) != 0))
    {
      goto LABEL_9;
    }
    return 0;
  }
  if (*(_WORD *)(v7 + 18) != 30
    || (sub_1CBF68974(a1 + 2, *(llvm::Constant **)(v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF) + 32)) & 1) == 0
    && !sub_1CBF68974(a1 + 2, *(llvm::Constant **)(v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF))))
  {
    return 0;
  }
LABEL_9:
  int v9 = *(_DWORD *)(a2 + 20);
  if ((v9 & 0x40000000) != 0) {
    uint64_t v10 = *(void *)(a2 - 8);
  }
  else {
    uint64_t v10 = a2 - 32 * (v9 & 0x7FFFFFF);
  }
  uint64_t v11 = *(void *)(v10 + 64);

  return sub_1CC9F88DC(a1 + 3, 30, v11);
}

uint64_t sub_1CC9F8BC4(uint64_t a1, uint64_t a2)
{
  if (sub_1CC9F8C38(a1, a2) & 1) != 0 || (sub_1CC9F8E38(a1 + 4, a2) & 1) != 0 || (sub_1CC9F9038(a1 + 8, a2)) {
    return 1;
  }

  return sub_1CC9F9238(a1 + 12, a2);
}

uint64_t sub_1CC9F8C38(uint64_t a1, uint64_t a2)
{
  int v3 = *(unsigned __int8 *)(a2 + 16);
  if (v3 != 85)
  {
    if (v3 != 84) {
      return 0;
    }
    uint64_t v4 = *(void *)(a2 - 32);
    if (!v4
      || *(unsigned char *)(v4 + 16)
      || *(void *)(v4 + 24) != *(void *)(a2 + 72)
      || (*(unsigned char *)(v4 + 33) & 0x20) == 0
      || *(_DWORD *)(v4 + 36) != 274)
    {
      return 0;
    }
    int v5 = (uint64_t *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));
    uint64_t v6 = *v5;
    uint64_t v7 = v5[4];
LABEL_24:
    int v15 = *(unsigned __int8 *)(v6 + 16);
    if (v15 == 5)
    {
      if (*(_WORD *)(v6 + 18) != 30
        || (sub_1CBF68974(a1 + 1, *(llvm::Constant **)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF) + 32)) & 1) == 0
        && !sub_1CBF68974(a1 + 1, *(llvm::Constant **)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF))))
      {
        return 0;
      }
    }
    else if (v15 != 58 {
           || (sub_1CBF687D0(a1 + 1, *(llvm::Constant **)(v6 - 32)) & 1) == 0
    }
           && (sub_1CBF687D0(a1 + 1, *(llvm::Constant **)(v6 - 64)) & 1) == 0)
    {
      return 0;
    }
    int v16 = *(unsigned __int8 *)(v7 + 16);
    if (v16 == 5)
    {
      if (*(_WORD *)(v7 + 18) != 30) {
        return 0;
      }
      uint64_t v18 = a1 + 3;
      if ((sub_1CBF68974(v18, *(llvm::Constant **)(v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF) + 32)) & 1) == 0
        && (sub_1CBF68974(v18, *(llvm::Constant **)(v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF))) & 1) == 0)
      {
        return 0;
      }
    }
    else
    {
      if (v16 != 58) {
        return 0;
      }
      uint64_t v17 = a1 + 3;
      if ((sub_1CBF687D0(v17, *(llvm::Constant **)(v7 - 32)) & 1) == 0
        && (sub_1CBF687D0(v17, *(llvm::Constant **)(v7 - 64)) & 1) == 0)
      {
        return 0;
      }
    }
    return 1;
  }
  uint64_t result = 0;
  uint64_t v9 = *(void *)(a2 - 96);
  if (v9 && *(unsigned char *)(v9 + 16) == 81)
  {
    uint64_t v10 = *(void *)(a2 - 64);
    uint64_t v11 = *(void *)(a2 - 32);
    uint64_t v6 = *(void *)(v9 - 64);
    uint64_t v7 = *(void *)(v9 - 32);
    if ((v10 != v6 || v11 != v7) && (v10 != v7 || v11 != v6)) {
      return 0;
    }
    int v14 = *(_WORD *)(v9 + 18) & 0x3E;
    if (v10 == v6)
    {
      if (v14 == 38) {
        goto LABEL_24;
      }
    }
    else if (v14 == 40)
    {
      goto LABEL_24;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1CC9F8E38(uint64_t a1, uint64_t a2)
{
  int v3 = *(unsigned __int8 *)(a2 + 16);
  if (v3 != 85)
  {
    if (v3 != 84) {
      return 0;
    }
    uint64_t v4 = *(void *)(a2 - 32);
    if (!v4
      || *(unsigned char *)(v4 + 16)
      || *(void *)(v4 + 24) != *(void *)(a2 + 72)
      || (*(unsigned char *)(v4 + 33) & 0x20) == 0
      || *(_DWORD *)(v4 + 36) != 275)
    {
      return 0;
    }
    int v5 = (uint64_t *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));
    uint64_t v6 = *v5;
    uint64_t v7 = v5[4];
LABEL_24:
    int v15 = *(unsigned __int8 *)(v6 + 16);
    if (v15 == 5)
    {
      if (*(_WORD *)(v6 + 18) != 30
        || (sub_1CBF68974(a1 + 1, *(llvm::Constant **)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF) + 32)) & 1) == 0
        && !sub_1CBF68974(a1 + 1, *(llvm::Constant **)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF))))
      {
        return 0;
      }
    }
    else if (v15 != 58 {
           || (sub_1CBF687D0(a1 + 1, *(llvm::Constant **)(v6 - 32)) & 1) == 0
    }
           && (sub_1CBF687D0(a1 + 1, *(llvm::Constant **)(v6 - 64)) & 1) == 0)
    {
      return 0;
    }
    int v16 = *(unsigned __int8 *)(v7 + 16);
    if (v16 == 5)
    {
      if (*(_WORD *)(v7 + 18) != 30) {
        return 0;
      }
      uint64_t v18 = a1 + 3;
      if ((sub_1CBF68974(v18, *(llvm::Constant **)(v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF) + 32)) & 1) == 0
        && (sub_1CBF68974(v18, *(llvm::Constant **)(v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF))) & 1) == 0)
      {
        return 0;
      }
    }
    else
    {
      if (v16 != 58) {
        return 0;
      }
      uint64_t v17 = a1 + 3;
      if ((sub_1CBF687D0(v17, *(llvm::Constant **)(v7 - 32)) & 1) == 0
        && (sub_1CBF687D0(v17, *(llvm::Constant **)(v7 - 64)) & 1) == 0)
      {
        return 0;
      }
    }
    return 1;
  }
  uint64_t result = 0;
  uint64_t v9 = *(void *)(a2 - 96);
  if (v9 && *(unsigned char *)(v9 + 16) == 81)
  {
    uint64_t v10 = *(void *)(a2 - 64);
    uint64_t v11 = *(void *)(a2 - 32);
    uint64_t v6 = *(void *)(v9 - 64);
    uint64_t v7 = *(void *)(v9 - 32);
    if ((v10 != v6 || v11 != v7) && (v10 != v7 || v11 != v6)) {
      return 0;
    }
    int v14 = *(_WORD *)(v9 + 18) & 0x3E;
    if (v10 == v6)
    {
      if (v14 == 40) {
        goto LABEL_24;
      }
    }
    else if (v14 == 38)
    {
      goto LABEL_24;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1CC9F9038(uint64_t a1, uint64_t a2)
{
  int v3 = *(unsigned __int8 *)(a2 + 16);
  if (v3 != 85)
  {
    if (v3 != 84) {
      return 0;
    }
    uint64_t v4 = *(void *)(a2 - 32);
    if (!v4
      || *(unsigned char *)(v4 + 16)
      || *(void *)(v4 + 24) != *(void *)(a2 + 72)
      || (*(unsigned char *)(v4 + 33) & 0x20) == 0
      || *(_DWORD *)(v4 + 36) != 305)
    {
      return 0;
    }
    int v5 = (uint64_t *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));
    uint64_t v6 = *v5;
    uint64_t v7 = v5[4];
LABEL_24:
    int v15 = *(unsigned __int8 *)(v6 + 16);
    if (v15 == 5)
    {
      if (*(_WORD *)(v6 + 18) != 30
        || (sub_1CBF68974(a1 + 1, *(llvm::Constant **)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF) + 32)) & 1) == 0
        && !sub_1CBF68974(a1 + 1, *(llvm::Constant **)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF))))
      {
        return 0;
      }
    }
    else if (v15 != 58 {
           || (sub_1CBF687D0(a1 + 1, *(llvm::Constant **)(v6 - 32)) & 1) == 0
    }
           && (sub_1CBF687D0(a1 + 1, *(llvm::Constant **)(v6 - 64)) & 1) == 0)
    {
      return 0;
    }
    int v16 = *(unsigned __int8 *)(v7 + 16);
    if (v16 == 5)
    {
      if (*(_WORD *)(v7 + 18) != 30) {
        return 0;
      }
      uint64_t v18 = a1 + 3;
      if ((sub_1CBF68974(v18, *(llvm::Constant **)(v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF) + 32)) & 1) == 0
        && (sub_1CBF68974(v18, *(llvm::Constant **)(v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF))) & 1) == 0)
      {
        return 0;
      }
    }
    else
    {
      if (v16 != 58) {
        return 0;
      }
      uint64_t v17 = a1 + 3;
      if ((sub_1CBF687D0(v17, *(llvm::Constant **)(v7 - 32)) & 1) == 0
        && (sub_1CBF687D0(v17, *(llvm::Constant **)(v7 - 64)) & 1) == 0)
      {
        return 0;
      }
    }
    return 1;
  }
  uint64_t result = 0;
  uint64_t v9 = *(void *)(a2 - 96);
  if (v9 && *(unsigned char *)(v9 + 16) == 81)
  {
    uint64_t v10 = *(void *)(a2 - 64);
    uint64_t v11 = *(void *)(a2 - 32);
    uint64_t v6 = *(void *)(v9 - 64);
    uint64_t v7 = *(void *)(v9 - 32);
    if ((v10 != v6 || v11 != v7) && (v10 != v7 || v11 != v6)) {
      return 0;
    }
    int v14 = *(_WORD *)(v9 + 18) & 0x3E;
    if (v10 == v6)
    {
      if (v14 == 34) {
        goto LABEL_24;
      }
    }
    else if (v14 == 36)
    {
      goto LABEL_24;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1CC9F9238(uint64_t a1, uint64_t a2)
{
  int v3 = *(unsigned __int8 *)(a2 + 16);
  if (v3 != 85)
  {
    if (v3 != 84) {
      return 0;
    }
    uint64_t v4 = *(void *)(a2 - 32);
    if (!v4
      || *(unsigned char *)(v4 + 16)
      || *(void *)(v4 + 24) != *(void *)(a2 + 72)
      || (*(unsigned char *)(v4 + 33) & 0x20) == 0
      || *(_DWORD *)(v4 + 36) != 306)
    {
      return 0;
    }
    int v5 = (uint64_t *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));
    uint64_t v6 = *v5;
    uint64_t v7 = v5[4];
LABEL_24:
    int v15 = *(unsigned __int8 *)(v6 + 16);
    if (v15 == 5)
    {
      if (*(_WORD *)(v6 + 18) != 30
        || (sub_1CBF68974(a1 + 1, *(llvm::Constant **)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF) + 32)) & 1) == 0
        && !sub_1CBF68974(a1 + 1, *(llvm::Constant **)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF))))
      {
        return 0;
      }
    }
    else if (v15 != 58 {
           || (sub_1CBF687D0(a1 + 1, *(llvm::Constant **)(v6 - 32)) & 1) == 0
    }
           && (sub_1CBF687D0(a1 + 1, *(llvm::Constant **)(v6 - 64)) & 1) == 0)
    {
      return 0;
    }
    int v16 = *(unsigned __int8 *)(v7 + 16);
    if (v16 == 5)
    {
      if (*(_WORD *)(v7 + 18) != 30) {
        return 0;
      }
      uint64_t v18 = a1 + 3;
      if ((sub_1CBF68974(v18, *(llvm::Constant **)(v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF) + 32)) & 1) == 0
        && (sub_1CBF68974(v18, *(llvm::Constant **)(v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF))) & 1) == 0)
      {
        return 0;
      }
    }
    else
    {
      if (v16 != 58) {
        return 0;
      }
      uint64_t v17 = a1 + 3;
      if ((sub_1CBF687D0(v17, *(llvm::Constant **)(v7 - 32)) & 1) == 0
        && (sub_1CBF687D0(v17, *(llvm::Constant **)(v7 - 64)) & 1) == 0)
      {
        return 0;
      }
    }
    return 1;
  }
  uint64_t result = 0;
  uint64_t v9 = *(void *)(a2 - 96);
  if (v9 && *(unsigned char *)(v9 + 16) == 81)
  {
    uint64_t v10 = *(void *)(a2 - 64);
    uint64_t v11 = *(void *)(a2 - 32);
    uint64_t v6 = *(void *)(v9 - 64);
    uint64_t v7 = *(void *)(v9 - 32);
    if ((v10 != v6 || v11 != v7) && (v10 != v7 || v11 != v6)) {
      return 0;
    }
    int v14 = *(_WORD *)(v9 + 18) & 0x3E;
    if (v10 == v6)
    {
      if (v14 == 36) {
        goto LABEL_24;
      }
    }
    else if (v14 == 34)
    {
      goto LABEL_24;
    }
    return 0;
  }
  return result;
}

BOOL sub_1CC9F9438(void **a1, uint64_t a2)
{
  BOOL v4 = sub_1CB845E74(a2);
  BOOL result = 0;
  if (!a2 || !v4) {
    return result;
  }
  unsigned int v6 = *(unsigned __int8 *)(a2 + 16);
  if (v6 > 0x1B) {
    unsigned int v7 = v6 - 28;
  }
  else {
    unsigned int v7 = *(unsigned __int16 *)(a2 + 18);
  }
  if (v7 == 12)
  {
    int v8 = *(_DWORD *)(a2 + 20);
    if ((v8 & 0x40000000) != 0) {
      uint64_t v9 = *(uint64_t **)(a2 - 8);
    }
    else {
      uint64_t v9 = (uint64_t *)(a2 - 32 * (v8 & 0x7FFFFFF));
    }
    uint64_t v12 = *v9;
    goto LABEL_26;
  }
  if (v7 != 16) {
    return 0;
  }
  if ((*(unsigned char *)(a2 + 17) & 0x10) != 0)
  {
    int v13 = *(_DWORD *)(a2 + 20);
    if ((v13 & 0x40000000) != 0) {
      int v14 = *(llvm::Constant ***)(a2 - 8);
    }
    else {
      int v14 = (llvm::Constant **)(a2 - 32 * (v13 & 0x7FFFFFF));
    }
    if (sub_1CC0241FC((uint64_t)&v19, *v14)) {
      goto LABEL_22;
    }
    return 0;
  }
  int v10 = *(_DWORD *)(a2 + 20);
  if ((v10 & 0x40000000) != 0) {
    uint64_t v11 = *(llvm::Constant ***)(a2 - 8);
  }
  else {
    uint64_t v11 = (llvm::Constant **)(a2 - 32 * (v10 & 0x7FFFFFF));
  }
  BOOL result = sub_1CC02435C((uint64_t)&v18, *v11);
  if (result)
  {
LABEL_22:
    int v15 = *(_DWORD *)(a2 + 20);
    if ((v15 & 0x40000000) != 0) {
      uint64_t v16 = *(void *)(a2 - 8);
    }
    else {
      uint64_t v16 = a2 - 32 * (v15 & 0x7FFFFFF);
    }
    uint64_t v12 = *(void *)(v16 + 32);
LABEL_26:
    uint64_t v17 = *(void *)(v12 + 8);
    if (v17 && !*(void *)(v17 + 8) && *(unsigned __int8 *)(v12 + 16) >= 0x1Cu)
    {
      **a1 = v12;
      return 1;
    }
    return 0;
  }
  return result;
}

BOOL sub_1CC9F956C(void **a1, int a2, uint64_t a3)
{
  int v5 = *(unsigned __int8 *)(a3 + 16);
  char v6 = a2 + 28;
  if (a2 + 28 == v5)
  {
    uint64_t v7 = *(void *)(a3 - 64);
    int v8 = *(unsigned __int8 *)(v7 + 16);
    if (v8 == 5)
    {
      if (*(_WORD *)(v7 + 18) != 25) {
        return 0;
      }
      uint64_t v13 = *(void *)(v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF));
      if (!v13) {
        return 0;
      }
      **a1 = v13;
      if (!sub_1CBF5295C((uint64_t)(a1 + 1), *(llvm::Constant **)(v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF) + 32)))return 0; {
    }
      }
    else
    {
      if (v8 != 53) {
        return 0;
      }
      uint64_t v9 = *(void *)(v7 - 64);
      if (!v9) {
        return 0;
      }
      **a1 = v9;
      if ((sub_1CBF528D8((uint64_t)(a1 + 1), *(unsigned __int8 **)(v7 - 32)) & 1) == 0) {
        return 0;
      }
    }
    return (sub_1CBF528D8((uint64_t)(a1 + 3), *(unsigned __int8 **)(a3 - 32)) & 1) != 0;
  }
  if (v5 == 5)
  {
    if (*(unsigned __int16 *)(a3 + 18) != a2) {
      goto LABEL_25;
    }
    uint64_t v10 = *(void *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF));
    int v11 = *(unsigned __int8 *)(v10 + 16);
    if (v11 == 5)
    {
      if (*(_WORD *)(v10 + 18) != 25) {
        goto LABEL_25;
      }
      uint64_t v15 = *(void *)(v10 - 32 * (*(_DWORD *)(v10 + 20) & 0x7FFFFFF));
      if (!v15) {
        goto LABEL_25;
      }
      **a1 = v15;
      if (!sub_1CBF5295C((uint64_t)(a1 + 1), *(llvm::Constant **)(v10 - 32 * (*(_DWORD *)(v10 + 20) & 0x7FFFFFF) + 32)))goto LABEL_25; {
    }
      }
    else
    {
      if (v11 != 53) {
        goto LABEL_25;
      }
      uint64_t v12 = *(void *)(v10 - 64);
      if (!v12) {
        goto LABEL_25;
      }
      **a1 = v12;
      if ((sub_1CBF528D8((uint64_t)(a1 + 1), *(unsigned __int8 **)(v10 - 32)) & 1) == 0) {
        goto LABEL_25;
      }
    }
    if ((sub_1CBF5295C((uint64_t)(a1 + 3), *(llvm::Constant **)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF) + 32)) & 1) == 0)
    {
LABEL_25:
      char v6 = 0;
      return (v5 == 5) & v6;
    }
    char v6 = 1;
  }
  return (v5 == 5) & v6;
}

uint64_t sub_1CC9F971C(void **a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 16);
  unsigned int v4 = v3 - 28;
  BOOL v6 = v3 < 0x1C && v3 != 5 || a2 == 0;
  int v7 = v6;
  if (v6) {
    return v2 & (v7 ^ 1);
  }
  if (v3 <= 0x1B) {
    unsigned int v4 = *(unsigned __int16 *)(a2 + 18);
  }
  if (v4 != 38) {
    goto LABEL_32;
  }
  int v8 = *(_DWORD *)(a2 + 20);
  if ((v8 & 0x40000000) != 0) {
    uint64_t v9 = *(uint64_t **)(a2 - 8);
  }
  else {
    uint64_t v9 = (uint64_t *)(a2 - 32 * (v8 & 0x7FFFFFF));
  }
  uint64_t v10 = *v9;
  int v11 = *(unsigned __int8 *)(v10 + 16);
  if (v11 != 5)
  {
    if (v11 == 54)
    {
      uint64_t v2 = *(void *)(v10 - 64);
      if (v2)
      {
        **a1 = v2;
        uint64_t v2 = *(void *)(v10 - 32);
        if (v2) {
          BOOL v12 = *(unsigned __int8 *)(v2 + 16) >= 0x1Cu;
        }
        else {
          BOOL v12 = 0;
        }
        if (!v12) {
          goto LABEL_32;
        }
        *a1[1] = v2;
        uint64_t v13 = a1 + 2;
        LODWORD(v2) = 1;
LABEL_35:
        *unint64_t *v13 = v10;
        return v2 & (v7 ^ 1);
      }
      return v2 & (v7 ^ 1);
    }
LABEL_32:
    LODWORD(v2) = 0;
    return v2 & (v7 ^ 1);
  }
  if (*(_WORD *)(v10 + 18) != 26) {
    goto LABEL_32;
  }
  uint64_t v2 = *(void *)(v10 - 32 * (*(_DWORD *)(v10 + 20) & 0x7FFFFFF));
  if (v2)
  {
    **a1 = v2;
    uint64_t v10 = *(void *)(v10 - 32 * (*(_DWORD *)(v10 + 20) & 0x7FFFFFF) + 32);
    if (v10) {
      BOOL v14 = *(unsigned __int8 *)(v10 + 16) >= 0x1Cu;
    }
    else {
      BOOL v14 = 0;
    }
    if (!v14) {
      goto LABEL_32;
    }
    LODWORD(v2) = 0;
    uint64_t v13 = a1 + 1;
    goto LABEL_35;
  }
  return v2 & (v7 ^ 1);
}

uint64_t sub_1CC9F981C(uint64_t a1, llvm::Constant *this)
{
  if (this && *((unsigned char *)this + 16) == 16)
  {
    SplatValue = this;
    goto LABEL_4;
  }
  uint64_t v9 = *(void *)this;
  if (*(void *)this) {
    BOOL v10 = (*(_DWORD *)(*(void *)this + 8) & 0xFE) == 18;
  }
  else {
    BOOL v10 = 0;
  }
  if (v10)
  {
    SplatValue = (llvm::Constant *)llvm::Constant::getSplatValue(this, 0);
    if (SplatValue && *((unsigned char *)SplatValue + 16) == 16)
    {
LABEL_4:
      uint64_t v5 = (uint64_t)SplatValue + 24;
      uint64_t v6 = *(void *)(a1 + 8);
      int v7 = *(_DWORD *)a1;
      return llvm::ICmpInst::compare(v5, v6, v7);
    }
    if (*(unsigned char *)(v9 + 8) == 18)
    {
      int v11 = *(_DWORD *)(v9 + 32);
      if (v11)
      {
        BOOL v12 = 0;
        char v13 = 0;
        while (1)
        {
          AggregateElement = llvm::Constant::getAggregateElement(this, v12);
          if (!AggregateElement) {
            break;
          }
          int v15 = *((unsigned __int8 *)AggregateElement + 16);
          if ((v15 - 11) >= 2)
          {
            if (v15 != 16
              || !llvm::ICmpInst::compare((uint64_t)(AggregateElement + 3), *(void *)(a1 + 8), *(_DWORD *)a1))
            {
              break;
            }
            char v13 = 1;
          }
          BOOL v12 = (llvm::Type *)(v12 + 1);
          if (v11 == v12) {
            return v13 & 1;
          }
        }
      }
    }
  }
  char v13 = 0;
  return v13 & 1;
}

uint64_t sub_1CC9F993C(void *a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 16);
  unsigned int v4 = v3 - 28;
  BOOL v6 = v3 < 0x1C && v3 != 5 || a2 == 0;
  int v7 = v6;
  if (!v6)
  {
    if (v3 <= 0x1B) {
      unsigned int v4 = *(unsigned __int16 *)(a2 + 18);
    }
    if (v4 == 39)
    {
      int v9 = *(_DWORD *)(a2 + 20);
      if ((v9 & 0x40000000) != 0) {
        BOOL v10 = *(void **)(a2 - 8);
      }
      else {
        BOOL v10 = (void *)(a2 - 32 * (v9 & 0x7FFFFFF));
      }
      BOOL v2 = *a1 == *v10;
    }
    else
    {
      BOOL v2 = 0;
    }
  }
  return (v7 ^ 1) & v2;
}

uint64_t sub_1CC9F99A8(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1CC045310(a1, a2);
  if (result)
  {
    uint64_t result = 0;
    if (a2)
    {
      if (*(unsigned char *)(a2 + 16) == 84)
      {
        uint64_t v5 = *(void *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF) + 32 * *(unsigned int *)(a1 + 24));
        if (v5)
        {
          **(void **)(a1 + 32) = v5;
          return 1;
        }
        else
        {
          return 0;
        }
      }
    }
  }
  return result;
}

BOOL sub_1CC9F9A18(void **a1, int a2, uint64_t a3)
{
  int v5 = *(unsigned __int8 *)(a3 + 16);
  char v6 = a2 + 28;
  if (a2 + 28 == v5)
  {
    BOOL v7 = sub_1CC04C34C(a1, *(void *)(a3 - 64));
    uint64_t v8 = *(void *)(a3 - 32);
    if (v7 && v8)
    {
      *a1[1] = v8;
      return 1;
    }
    BOOL result = sub_1CC04C34C(a1, v8);
    if (result)
    {
      uint64_t v12 = *(void *)(a3 - 64);
      if (v12)
      {
        *a1[1] = v12;
        return 1;
      }
      return 0;
    }
  }
  else
  {
    if (v5 == 5)
    {
      if (*(unsigned __int16 *)(a3 + 18) == a2
        && ((BOOL v9 = sub_1CC04C34C(a1, *(void *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF))),
             uint64_t v10 = *(void *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF) + 32),
             v9)
         && v10
         || sub_1CC04C34C(a1, v10) && (uint64_t v10 = *(void *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF))) != 0))
      {
        *a1[1] = v10;
        char v6 = 1;
      }
      else
      {
        char v6 = 0;
      }
    }
    return (v5 == 5) & v6;
  }
  return result;
}

BOOL sub_1CC9F9B28(void **a1, int a2, uint64_t a3)
{
  int v5 = *(unsigned __int8 *)(a3 + 16);
  LOBYTE(v6) = a2 + 28;
  if (a2 + 28 != v5)
  {
    if (v5 == 5)
    {
      if (*(unsigned __int16 *)(a3 + 18) != a2) {
        goto LABEL_20;
      }
      uint64_t v13 = *(_DWORD *)(a3 + 20) & 0x7FFFFFF;
      uint64_t v14 = -v13;
      uint64_t v15 = *(void *)(a3 - 32 * v13);
      uint64_t v16 = *(void *)(v15 + 8);
      if (v16)
      {
        if (!*(void *)(v16 + 8))
        {
          BOOL v17 = sub_1CC9F9C88(a1, v15, v14);
          uint64_t v14 = -(uint64_t)(*(_DWORD *)(a3 + 20) & 0x7FFFFFF);
          if (v17)
          {
            uint64_t v18 = *(void *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF) + 32);
            if (v18) {
              goto LABEL_19;
            }
          }
        }
      }
      uint64_t v19 = *(void *)(a3 + 32 * v14 + 32);
      uint64_t v6 = *(void *)(v19 + 8);
      if (v6)
      {
        if (!*(void *)(v6 + 8) && sub_1CC9F9C88(a1, v19, 0))
        {
          uint64_t v18 = *(void *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF));
          if (v18)
          {
LABEL_19:
            *a1[2] = v18;
            LOBYTE(v6) = 1;
            return (v5 == 5) & v6;
          }
        }
LABEL_20:
        LOBYTE(v6) = 0;
      }
    }
    return (v5 == 5) & v6;
  }
  uint64_t v7 = *(void *)(a3 - 64);
  uint64_t v8 = *(void *)(v7 + 8);
  if (v8)
  {
    if (!*(void *)(v8 + 8) && sub_1CC9F9A18(a1, 18, v7))
    {
      uint64_t v9 = *(void *)(a3 - 32);
      if (v9)
      {
LABEL_25:
        *a1[2] = v9;
        return 1;
      }
    }
  }
  uint64_t v10 = *(void *)(a3 - 32);
  uint64_t v11 = *(void *)(v10 + 8);
  if (!v11 || *(void *)(v11 + 8)) {
    return 0;
  }
  BOOL result = sub_1CC9F9A18(a1, 18, v10);
  if (result)
  {
    uint64_t v9 = *(void *)(a3 - 64);
    if (!v9) {
      return 0;
    }
    goto LABEL_25;
  }
  return result;
}

BOOL sub_1CC9F9C88@<W0>(void **a1@<X0>, uint64_t a2@<X1>, char a3@<W8>)
{
  int v5 = *(unsigned __int8 *)(a2 + 16);
  if (v5 == 46)
  {
    BOOL v6 = sub_1CC04C34C(a1, *(void *)(a2 - 64));
    uint64_t v7 = *(void *)(a2 - 32);
    if (v6 && v7)
    {
      *a1[1] = v7;
      return 1;
    }
    BOOL result = sub_1CC04C34C(a1, v7);
    if (result)
    {
      uint64_t v11 = *(void *)(a2 - 64);
      if (v11)
      {
        *a1[1] = v11;
        return 1;
      }
      return 0;
    }
  }
  else
  {
    if (v5 == 5)
    {
      if (*(_WORD *)(a2 + 18) == 18
        && ((BOOL v8 = sub_1CC04C34C(a1, *(void *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF))),
             uint64_t v9 = *(void *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF) + 32),
             v8)
         && v9
         || sub_1CC04C34C(a1, v9) && (uint64_t v9 = *(void *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF))) != 0))
      {
        *a1[1] = v9;
        a3 = 1;
      }
      else
      {
        a3 = 0;
      }
    }
    return (v5 == 5) & a3;
  }
  return result;
}

BOOL sub_1CC9F9D94(void **a1, int a2, uint64_t a3)
{
  int v5 = *(unsigned __int8 *)(a3 + 16);
  LOBYTE(v6) = a2 + 28;
  if (a2 + 28 != v5)
  {
    if (v5 != 5) {
      return (v5 == 5) & v6;
    }
    if (*(unsigned __int16 *)(a3 + 18) != a2)
    {
LABEL_13:
      LOBYTE(v6) = 0;
      return (v5 == 5) & v6;
    }
    uint64_t v12 = *(void *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF));
    uint64_t v13 = *(void *)(v12 + 8);
    if (v13 && !*(void *)(v13 + 8))
    {
      int v20 = *(unsigned __int8 *)(v12 + 16);
      if (v20 == 5)
      {
        if (*(_WORD *)(v12 + 18) != 21) {
          goto LABEL_11;
        }
        if (!sub_1CC04C34C(a1, *(void *)(v12 - 32 * (*(_DWORD *)(v12 + 20) & 0x7FFFFFF)))) {
          goto LABEL_11;
        }
        uint64_t v21 = *(void *)(v12 - 32 * (*(_DWORD *)(v12 + 20) & 0x7FFFFFF) + 32);
        if (!v21) {
          goto LABEL_11;
        }
      }
      else
      {
        if (v20 != 49) {
          goto LABEL_11;
        }
        if (!sub_1CC04C34C(a1, *(void *)(v12 - 64))) {
          goto LABEL_11;
        }
        uint64_t v21 = *(void *)(v12 - 32);
        if (!v21) {
          goto LABEL_11;
        }
      }
      *a1[1] = v21;
      uint64_t v6 = *(void *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF) + 32);
      if (v6) {
        goto LABEL_55;
      }
    }
LABEL_11:
    uint64_t v14 = *(void *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF) + 32);
    uint64_t v6 = *(void *)(v14 + 8);
    if (v6)
    {
      if (*(void *)(v6 + 8)) {
        goto LABEL_13;
      }
      int v22 = *(unsigned __int8 *)(v14 + 16);
      if (v22 == 5)
      {
        if (*(_WORD *)(v14 + 18) != 21
          || !sub_1CC04C34C(a1, *(void *)(v14 - 32 * (*(_DWORD *)(v14 + 20) & 0x7FFFFFF))))
        {
          goto LABEL_13;
        }
        uint64_t v6 = *(void *)(v14 - 32 * (*(_DWORD *)(v14 + 20) & 0x7FFFFFF) + 32);
        if (!v6) {
          return (v5 == 5) & v6;
        }
      }
      else
      {
        if (v22 != 49 || !sub_1CC04C34C(a1, *(void *)(v14 - 64))) {
          goto LABEL_13;
        }
        uint64_t v6 = *(void *)(v14 - 32);
        if (!v6) {
          return (v5 == 5) & v6;
        }
      }
      *a1[1] = v6;
      uint64_t v6 = *(void *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF));
      if (!v6) {
        return (v5 == 5) & v6;
      }
LABEL_55:
      *a1[2] = v6;
      LOBYTE(v6) = 1;
    }
    return (v5 == 5) & v6;
  }
  uint64_t v7 = *(void *)(a3 - 64);
  uint64_t v8 = *(void *)(v7 + 8);
  if (v8 && !*(void *)(v8 + 8))
  {
    int v15 = *(unsigned __int8 *)(v7 + 16);
    if (v15 == 5)
    {
      if (*(_WORD *)(v7 + 18) != 21) {
        goto LABEL_4;
      }
      if (!sub_1CC04C34C(a1, *(void *)(v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF)))) {
        goto LABEL_4;
      }
      uint64_t v16 = *(void *)(v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF) + 32);
      if (!v16) {
        goto LABEL_4;
      }
    }
    else
    {
      if (v15 != 49) {
        goto LABEL_4;
      }
      if (!sub_1CC04C34C(a1, *(void *)(v7 - 64))) {
        goto LABEL_4;
      }
      uint64_t v16 = *(void *)(v7 - 32);
      if (!v16) {
        goto LABEL_4;
      }
    }
    *a1[1] = v16;
    uint64_t v19 = *(void *)(a3 - 32);
    if (v19)
    {
LABEL_35:
      *a1[2] = v19;
      return 1;
    }
  }
LABEL_4:
  uint64_t v9 = *(void *)(a3 - 32);
  uint64_t v10 = *(void *)(v9 + 8);
  if (!v10 || *(void *)(v10 + 8)) {
    return 0;
  }
  int v17 = *(unsigned __int8 *)(v9 + 16);
  if (v17 == 5)
  {
    if (*(_WORD *)(v9 + 18) != 21) {
      return 0;
    }
    BOOL result = sub_1CC04C34C(a1, *(void *)(v9 - 32 * (*(_DWORD *)(v9 + 20) & 0x7FFFFFF)));
    if (result)
    {
      uint64_t v18 = *(void *)(v9 - 32 * (*(_DWORD *)(v9 + 20) & 0x7FFFFFF) + 32);
      if (!v18) {
        return 0;
      }
      goto LABEL_34;
    }
  }
  else
  {
    if (v17 != 49) {
      return 0;
    }
    BOOL result = sub_1CC04C34C(a1, *(void *)(v9 - 64));
    if (result)
    {
      uint64_t v18 = *(void *)(v9 - 32);
      if (!v18) {
        return 0;
      }
LABEL_34:
      *a1[1] = v18;
      uint64_t v19 = *(void *)(a3 - 64);
      if (v19) {
        goto LABEL_35;
      }
      return 0;
    }
  }
  return result;
}

BOOL sub_1CC9FA094(void **a1, int a2, uint64_t a3)
{
  int v5 = *(unsigned __int8 *)(a3 + 16);
  LOBYTE(v6) = a2 + 28;
  if (a2 + 28 != v5)
  {
    if (v5 != 5) {
      return (v5 == 5) & v6;
    }
    if (*(unsigned __int16 *)(a3 + 18) != a2) {
      goto LABEL_13;
    }
    uint64_t v12 = *(void *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF));
    uint64_t v13 = *(void *)(v12 + 8);
    if (v13 && !*(void *)(v13 + 8))
    {
      int v23 = *(unsigned __int8 *)(v12 + 16);
      if (v23 == 5)
      {
        if (*(_WORD *)(v12 + 18) != 21) {
          goto LABEL_11;
        }
        uint64_t v27 = *(void *)(v12 - 32 * (*(_DWORD *)(v12 + 20) & 0x7FFFFFF));
        if (!v27) {
          goto LABEL_11;
        }
        **a1 = v27;
        if (!sub_1CC04C34C(a1 + 1, *(void *)(v12 - 32 * (*(_DWORD *)(v12 + 20) & 0x7FFFFFF) + 32))) {
          goto LABEL_11;
        }
      }
      else
      {
        if (v23 != 49) {
          goto LABEL_11;
        }
        uint64_t v24 = *(void *)(v12 - 64);
        if (!v24) {
          goto LABEL_11;
        }
        **a1 = v24;
        if (!sub_1CC04C34C(a1 + 1, *(void *)(v12 - 32))) {
          goto LABEL_11;
        }
      }
      uint64_t v6 = *(void *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF) + 32);
      if (v6) {
        goto LABEL_55;
      }
    }
LABEL_11:
    uint64_t v14 = *(void *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF) + 32);
    uint64_t v15 = *(void *)(v14 + 8);
    if (!v15 || *(void *)(v15 + 8)) {
      goto LABEL_13;
    }
    int v25 = *(unsigned __int8 *)(v14 + 16);
    if (v25 == 5)
    {
      if (*(_WORD *)(v14 + 18) == 21)
      {
        uint64_t v28 = *(void *)(v14 - 32 * (*(_DWORD *)(v14 + 20) & 0x7FFFFFF));
        if (v28)
        {
          **a1 = v28;
          if (sub_1CC04C34C(a1 + 1, *(void *)(v14 - 32 * (*(_DWORD *)(v14 + 20) & 0x7FFFFFF) + 32)))
          {
LABEL_54:
            uint64_t v6 = *(void *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF));
            if (!v6) {
              return (v5 == 5) & v6;
            }
LABEL_55:
            *a1[2] = v6;
            LOBYTE(v6) = 1;
            return (v5 == 5) & v6;
          }
        }
      }
    }
    else if (v25 == 49)
    {
      uint64_t v26 = *(void *)(v14 - 64);
      if (v26)
      {
        **a1 = v26;
        if (sub_1CC04C34C(a1 + 1, *(void *)(v14 - 32))) {
          goto LABEL_54;
        }
      }
    }
LABEL_13:
    LOBYTE(v6) = 0;
    return (v5 == 5) & v6;
  }
  uint64_t v7 = *(void *)(a3 - 64);
  uint64_t v8 = *(void *)(v7 + 8);
  if (!v8 || *(void *)(v8 + 8)) {
    goto LABEL_4;
  }
  int v16 = *(unsigned __int8 *)(v7 + 16);
  if (v16 == 5)
  {
    if (*(_WORD *)(v7 + 18) == 21)
    {
      uint64_t v20 = *(void *)(v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF));
      if (v20)
      {
        **a1 = v20;
        if (sub_1CC04C34C(a1 + 1, *(void *)(v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF) + 32)))
        {
LABEL_29:
          uint64_t v21 = *(void *)(a3 - 32);
          if (v21)
          {
LABEL_35:
            *a1[2] = v21;
            return 1;
          }
        }
      }
    }
  }
  else if (v16 == 49)
  {
    uint64_t v17 = *(void *)(v7 - 64);
    if (v17)
    {
      **a1 = v17;
      if (sub_1CC04C34C(a1 + 1, *(void *)(v7 - 32))) {
        goto LABEL_29;
      }
    }
  }
LABEL_4:
  uint64_t v9 = *(void *)(a3 - 32);
  uint64_t v10 = *(void *)(v9 + 8);
  if (!v10 || *(void *)(v10 + 8)) {
    return 0;
  }
  int v18 = *(unsigned __int8 *)(v9 + 16);
  if (v18 != 5)
  {
    if (v18 != 49) {
      return 0;
    }
    uint64_t v19 = *(void *)(v9 - 64);
    if (!v19) {
      return 0;
    }
    **a1 = v19;
    if (!sub_1CC04C34C(a1 + 1, *(void *)(v9 - 32))) {
      return 0;
    }
    goto LABEL_34;
  }
  if (*(_WORD *)(v9 + 18) != 21) {
    return 0;
  }
  uint64_t v22 = *(void *)(v9 - 32 * (*(_DWORD *)(v9 + 20) & 0x7FFFFFF));
  if (!v22) {
    return 0;
  }
  **a1 = v22;
  BOOL result = sub_1CC04C34C(a1 + 1, *(void *)(v9 - 32 * (*(_DWORD *)(v9 + 20) & 0x7FFFFFF) + 32));
  if (result)
  {
LABEL_34:
    uint64_t v21 = *(void *)(a3 - 64);
    if (v21) {
      goto LABEL_35;
    }
    return 0;
  }
  return result;
}

BOOL sub_1CC9FA3B4(uint64_t a1, int a2, uint64_t a3)
{
  int v5 = *(unsigned __int8 *)(a3 + 16);
  LOBYTE(v6) = a2 + 28;
  if (a2 + 28 != v5)
  {
    if (v5 == 5)
    {
      if (*(unsigned __int16 *)(a3 + 18) != a2) {
        goto LABEL_20;
      }
      uint64_t v13 = *(_DWORD *)(a3 + 20) & 0x7FFFFFF;
      uint64_t v14 = -v13;
      uint64_t v15 = *(void *)(a3 - 32 * v13);
      uint64_t v16 = *(void *)(v15 + 8);
      if (v16)
      {
        if (!*(void *)(v16 + 8))
        {
          BOOL v17 = sub_1CC9FA5D8(a1, v15);
          uint64_t v14 = -(uint64_t)(*(_DWORD *)(a3 + 20) & 0x7FFFFFF);
          if (v17)
          {
            uint64_t v18 = *(void *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF) + 32);
            if (v18) {
              goto LABEL_19;
            }
          }
        }
      }
      uint64_t v19 = *(void *)(a3 + 32 * v14 + 32);
      uint64_t v6 = *(void *)(v19 + 8);
      if (v6)
      {
        if (!*(void *)(v6 + 8) && sub_1CC9FA5D8(a1, v19))
        {
          uint64_t v18 = *(void *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF));
          if (v18)
          {
LABEL_19:
            **(void **)(a1 + 32) = v18;
            LOBYTE(v6) = 1;
            return (v5 == 5) & v6;
          }
        }
LABEL_20:
        LOBYTE(v6) = 0;
      }
    }
    return (v5 == 5) & v6;
  }
  uint64_t v7 = *(void *)(a3 - 64);
  uint64_t v8 = *(void *)(v7 + 8);
  if (v8)
  {
    if (!*(void *)(v8 + 8) && sub_1CC9FA50C(a1, v7))
    {
      uint64_t v9 = *(void *)(a3 - 32);
      if (v9)
      {
LABEL_25:
        **(void **)(a1 + 32) = v9;
        return 1;
      }
    }
  }
  uint64_t v10 = *(void *)(a3 - 32);
  uint64_t v11 = *(void *)(v10 + 8);
  if (!v11 || *(void *)(v11 + 8)) {
    return 0;
  }
  BOOL result = sub_1CC9FA50C(a1, v10);
  if (result)
  {
    uint64_t v9 = *(void *)(a3 - 64);
    if (!v9) {
      return 0;
    }
    goto LABEL_25;
  }
  return result;
}

BOOL sub_1CC9FA50C(uint64_t a1, uint64_t a2)
{
  BOOL result = 0;
  if (a2 && *(unsigned char *)(a2 + 16) == 84)
  {
    uint64_t v5 = *(void *)(a2 - 32);
    if (v5
      && !*(unsigned char *)(v5 + 16)
      && *(void *)(v5 + 24) == *(void *)(a2 + 72)
      && *(_DWORD *)(v5 + 36) == *(_DWORD *)a1)
    {
      BOOL result = sub_1CC0241FC(a1 + 8, *(llvm::Constant **)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF) + 32 * *(unsigned int *)(a1 + 4)));
      if (!result) {
        return result;
      }
      if (*(unsigned char *)(a2 + 16) == 84)
      {
        uint64_t v6 = *(void *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF) + 32 * *(unsigned int *)(a1 + 16));
        if (v6)
        {
          **(void **)(a1 + 24) = v6;
          return 1;
        }
      }
    }
    return 0;
  }
  return result;
}

BOOL sub_1CC9FA5D8(uint64_t a1, uint64_t a2)
{
  BOOL result = sub_1CD497DD0((_DWORD *)a1, a2);
  if (result)
  {
    BOOL result = 0;
    if (a2)
    {
      if (*(unsigned char *)(a2 + 16) == 84)
      {
        BOOL result = sub_1CC0241FC(a1 + 8, *(llvm::Constant **)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF) + 32* *(unsigned int *)(a1 + 4)));
        if (result)
        {
          if (*(unsigned char *)(a2 + 16) == 84
            && (uint64_t v5 = *(void *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF) + 32 * *(unsigned int *)(a1 + 16))) != 0)
          {
            **(void **)(a1 + 24) = v5;
            return 1;
          }
          else
          {
            return 0;
          }
        }
      }
    }
  }
  return result;
}

BOOL sub_1CC9FA678(uint64_t a1, uint64_t a2)
{
  BOOL result = sub_1CC9FA6E8((_DWORD *)a1, a2);
  if (result)
  {
    BOOL result = 0;
    if (a2)
    {
      if (*(unsigned char *)(a2 + 16) == 84)
      {
        uint64_t v5 = *(void *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF) + 32 * *(unsigned int *)(a1 + 32));
        if (v5)
        {
          **(void **)(a1 + 40) = v5;
          return 1;
        }
        else
        {
          return 0;
        }
      }
    }
  }
  return result;
}

BOOL sub_1CC9FA6E8(_DWORD *a1, uint64_t a2)
{
  BOOL result = 0;
  if (a2)
  {
    if (*(unsigned char *)(a2 + 16) == 84)
    {
      uint64_t v3 = *(void *)(a2 - 32);
      if (v3)
      {
        if (!*(unsigned char *)(v3 + 16)
          && *(void *)(v3 + 24) == *(void *)(a2 + 72)
          && *(_DWORD *)(v3 + 36) == *a1
          && (sub_1CC04AFFC((uint64_t)(a1 + 4), *(unsigned __int8 **)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF) + 32 * a1[2])) & 1) != 0)
        {
          return 1;
        }
      }
    }
  }
  return result;
}

uint64_t sub_1CC9FA770(void **a1, int a2, uint64_t a3)
{
  int v3 = *(unsigned __int8 *)(a3 + 16);
  if (a2 + 28 != v3)
  {
    if (v3 != 5 || *(unsigned __int16 *)(a3 + 18) != a2) {
      return 0;
    }
    uint64_t v11 = *(void *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF));
    int v12 = *(unsigned __int8 *)(v11 + 16);
    if (v12 == 5)
    {
      if (*(_WORD *)(v11 + 18) != 18) {
        goto LABEL_46;
      }
      uint64_t v27 = *(void *)(v11 - 32 * (*(_DWORD *)(v11 + 20) & 0x7FFFFFF));
      if (!v27) {
        goto LABEL_46;
      }
      **a1 = v27;
      uint64_t v28 = *(void *)(v11 - 32 * (*(_DWORD *)(v11 + 20) & 0x7FFFFFF) + 32);
      if (!v28) {
        goto LABEL_46;
      }
      *a1[1] = v28;
      if (*(unsigned char *)(v28 + 16) == 5) {
        goto LABEL_46;
      }
    }
    else
    {
      if (v12 != 46) {
        goto LABEL_46;
      }
      uint64_t v13 = *(void *)(v11 - 64);
      if (!v13) {
        goto LABEL_46;
      }
      **a1 = v13;
      uint64_t v14 = *(void *)(v11 - 32);
      unsigned int v15 = *(unsigned __int8 *)(v14 + 16);
      if (!v14 || v15 > 0x14) {
        goto LABEL_46;
      }
      *a1[1] = v14;
      if (v15 == 5) {
        goto LABEL_46;
      }
    }
    if (*a1[3] == *(void *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF) + 32)) {
      return 1;
    }
LABEL_46:
    uint64_t v29 = *(void *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF) + 32);
    int v30 = *(unsigned __int8 *)(v29 + 16);
    if (v30 == 5)
    {
      if (*(_WORD *)(v29 + 18) != 18) {
        return 0;
      }
      uint64_t v35 = *(void *)(v29 - 32 * (*(_DWORD *)(v29 + 20) & 0x7FFFFFF));
      if (!v35) {
        return 0;
      }
      **a1 = v35;
      uint64_t v36 = *(void *)(v29 - 32 * (*(_DWORD *)(v29 + 20) & 0x7FFFFFF) + 32);
      if (!v36) {
        return 0;
      }
      *a1[1] = v36;
      if (*(unsigned char *)(v36 + 16) == 5) {
        return 0;
      }
    }
    else
    {
      if (v30 != 46) {
        return 0;
      }
      uint64_t v31 = *(void *)(v29 - 64);
      if (!v31) {
        return 0;
      }
      **a1 = v31;
      uint64_t v32 = *(void *)(v29 - 32);
      unsigned int v33 = *(unsigned __int8 *)(v32 + 16);
      if (!v32 || v33 > 0x14) {
        return 0;
      }
      *a1[1] = v32;
      if (v33 == 5) {
        return 0;
      }
    }
    unsigned int v4 = (void *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF));
    return *a1[3] == *v4;
  }
  unsigned int v4 = (void *)(a3 - 64);
  uint64_t v5 = *(void *)(a3 - 64);
  int v6 = *(unsigned __int8 *)(v5 + 16);
  if (v6 == 5)
  {
    if (*(_WORD *)(v5 + 18) != 18) {
      goto LABEL_27;
    }
    uint64_t v17 = *(void *)(v5 - 32 * (*(_DWORD *)(v5 + 20) & 0x7FFFFFF));
    if (!v17) {
      goto LABEL_27;
    }
    **a1 = v17;
    uint64_t v18 = *(void *)(v5 - 32 * (*(_DWORD *)(v5 + 20) & 0x7FFFFFF) + 32);
    if (!v18) {
      goto LABEL_27;
    }
    *a1[1] = v18;
    if (*(unsigned char *)(v18 + 16) == 5) {
      goto LABEL_27;
    }
  }
  else
  {
    if (v6 != 46) {
      goto LABEL_27;
    }
    uint64_t v7 = *(void *)(v5 - 64);
    if (!v7) {
      goto LABEL_27;
    }
    **a1 = v7;
    uint64_t v8 = *(void *)(v5 - 32);
    unsigned int v9 = *(unsigned __int8 *)(v8 + 16);
    if (!v8 || v9 > 0x14) {
      goto LABEL_27;
    }
    *a1[1] = v8;
    if (v9 == 5) {
      goto LABEL_27;
    }
  }
  if (*a1[3] == *(void *)(a3 - 32)) {
    return 1;
  }
LABEL_27:
  uint64_t v19 = *(void *)(a3 - 32);
  int v20 = *(unsigned __int8 *)(v19 + 16);
  if (v20 != 5)
  {
    if (v20 == 46)
    {
      uint64_t v21 = *(void *)(v19 - 64);
      if (v21)
      {
        **a1 = v21;
        uint64_t v22 = *(void *)(v19 - 32);
        unsigned int v23 = *(unsigned __int8 *)(v22 + 16);
        if (v22 && v23 <= 0x14)
        {
          *a1[1] = v22;
          if (v23 != 5) {
            return *a1[3] == *v4;
          }
        }
      }
    }
    return 0;
  }
  if (*(_WORD *)(v19 + 18) != 18) {
    return 0;
  }
  uint64_t v25 = *(void *)(v19 - 32 * (*(_DWORD *)(v19 + 20) & 0x7FFFFFF));
  if (!v25) {
    return 0;
  }
  **a1 = v25;
  uint64_t v26 = *(void *)(v19 - 32 * (*(_DWORD *)(v19 + 20) & 0x7FFFFFF) + 32);
  if (!v26) {
    return 0;
  }
  *a1[1] = v26;
  if (*(unsigned char *)(v26 + 16) == 5) {
    return 0;
  }
  return *a1[3] == *v4;
}

unint64_t sub_1CC9FAA9C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16) == 84
    && (uint64_t v1 = *(void *)(a1 - 32)) != 0
    && !*(unsigned char *)(v1 + 16)
    && *(void *)(v1 + 24) == *(void *)(a1 + 72)
    && (*(unsigned char *)(v1 + 33) & 0x20) != 0
    && (unsigned int v2 = *(_DWORD *)(v1 + 36) - 274, v2 <= 0x20))
  {
    return (0x180000003uLL >> v2) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1CC9FAAFC(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a2 + 16);
  if (v2 == 85)
  {
    uint64_t v3 = 0;
    uint64_t v9 = *(void *)(a2 - 96);
    if (!v9 || *(unsigned char *)(v9 + 16) != 81) {
      return v3;
    }
    uint64_t v10 = *(void *)(a2 - 64);
    uint64_t v11 = *(void *)(a2 - 32);
    uint64_t v12 = *(void *)(v9 - 64);
    uint64_t v6 = *(void *)(v9 - 32);
    if ((v10 != v12 || v11 != v6) && (v10 != v6 || v11 != v12)) {
      return 0;
    }
    int v15 = *(_WORD *)(v9 + 18) & 0x3E;
    if (v10 == v12)
    {
      if (v15 != 38) {
        return 0;
      }
    }
    else if (v15 != 40)
    {
      return 0;
    }
    if (*(void *)a1 == v12 && v6 != 0) {
      goto LABEL_43;
    }
    uint64_t v3 = 0;
    if (v12)
    {
      BOOL v7 = *(void *)a1 == v6;
      uint64_t v6 = v12;
      if (v7) {
        goto LABEL_43;
      }
    }
    return v3;
  }
  if (v2 != 84) {
    return 0;
  }
  uint64_t v3 = *(void *)(a2 - 32);
  if (v3)
  {
    if (*(unsigned char *)(v3 + 16)
      || *(void *)(v3 + 24) != *(void *)(a2 + 72)
      || (*(unsigned char *)(v3 + 33) & 0x20) == 0
      || *(_DWORD *)(v3 + 36) != 274)
    {
      return 0;
    }
    unsigned int v4 = (uint64_t *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));
    uint64_t v5 = *v4;
    uint64_t v6 = v4[4];
    BOOL v7 = *(void *)a1 != v5 || v6 == 0;
    if (v7)
    {
      BOOL v8 = v5 && *(void *)a1 == v6;
      uint64_t v6 = v5;
      if (!v8) {
        return 0;
      }
    }
LABEL_43:
    **(void **)(a1 + 8) = v6;
    return 1;
  }
  return v3;
}

uint64_t sub_1CC9FAC1C(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a2 + 16);
  if (v2 == 85)
  {
    uint64_t v3 = 0;
    uint64_t v9 = *(void *)(a2 - 96);
    if (!v9 || *(unsigned char *)(v9 + 16) != 81) {
      return v3;
    }
    uint64_t v10 = *(void *)(a2 - 64);
    uint64_t v11 = *(void *)(a2 - 32);
    uint64_t v12 = *(void *)(v9 - 64);
    uint64_t v6 = *(void *)(v9 - 32);
    if ((v10 != v12 || v11 != v6) && (v10 != v6 || v11 != v12)) {
      return 0;
    }
    int v15 = *(_WORD *)(v9 + 18) & 0x3E;
    if (v10 == v12)
    {
      if (v15 != 40) {
        return 0;
      }
    }
    else if (v15 != 38)
    {
      return 0;
    }
    if (*(void *)a1 == v12 && v6 != 0) {
      goto LABEL_43;
    }
    uint64_t v3 = 0;
    if (v12)
    {
      BOOL v7 = *(void *)a1 == v6;
      uint64_t v6 = v12;
      if (v7) {
        goto LABEL_43;
      }
    }
    return v3;
  }
  if (v2 != 84) {
    return 0;
  }
  uint64_t v3 = *(void *)(a2 - 32);
  if (v3)
  {
    if (*(unsigned char *)(v3 + 16)
      || *(void *)(v3 + 24) != *(void *)(a2 + 72)
      || (*(unsigned char *)(v3 + 33) & 0x20) == 0
      || *(_DWORD *)(v3 + 36) != 275)
    {
      return 0;
    }
    unsigned int v4 = (uint64_t *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));
    uint64_t v5 = *v4;
    uint64_t v6 = v4[4];
    BOOL v7 = *(void *)a1 != v5 || v6 == 0;
    if (v7)
    {
      BOOL v8 = v5 && *(void *)a1 == v6;
      uint64_t v6 = v5;
      if (!v8) {
        return 0;
      }
    }
LABEL_43:
    **(void **)(a1 + 8) = v6;
    return 1;
  }
  return v3;
}

uint64_t sub_1CC9FAD3C(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a2 + 16);
  if (v2 == 85)
  {
    uint64_t v3 = 0;
    uint64_t v9 = *(void *)(a2 - 96);
    if (!v9 || *(unsigned char *)(v9 + 16) != 81) {
      return v3;
    }
    uint64_t v10 = *(void *)(a2 - 64);
    uint64_t v11 = *(void *)(a2 - 32);
    uint64_t v12 = *(void *)(v9 - 64);
    uint64_t v6 = *(void *)(v9 - 32);
    if ((v10 != v12 || v11 != v6) && (v10 != v6 || v11 != v12)) {
      return 0;
    }
    int v15 = *(_WORD *)(v9 + 18) & 0x3E;
    if (v10 == v12)
    {
      if (v15 != 34) {
        return 0;
      }
    }
    else if (v15 != 36)
    {
      return 0;
    }
    if (*(void *)a1 == v12 && v6 != 0) {
      goto LABEL_43;
    }
    uint64_t v3 = 0;
    if (v12)
    {
      BOOL v7 = *(void *)a1 == v6;
      uint64_t v6 = v12;
      if (v7) {
        goto LABEL_43;
      }
    }
    return v3;
  }
  if (v2 != 84) {
    return 0;
  }
  uint64_t v3 = *(void *)(a2 - 32);
  if (v3)
  {
    if (*(unsigned char *)(v3 + 16)
      || *(void *)(v3 + 24) != *(void *)(a2 + 72)
      || (*(unsigned char *)(v3 + 33) & 0x20) == 0
      || *(_DWORD *)(v3 + 36) != 305)
    {
      return 0;
    }
    unsigned int v4 = (uint64_t *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));
    uint64_t v5 = *v4;
    uint64_t v6 = v4[4];
    BOOL v7 = *(void *)a1 != v5 || v6 == 0;
    if (v7)
    {
      BOOL v8 = v5 && *(void *)a1 == v6;
      uint64_t v6 = v5;
      if (!v8) {
        return 0;
      }
    }
LABEL_43:
    **(void **)(a1 + 8) = v6;
    return 1;
  }
  return v3;
}

uint64_t sub_1CC9FAE5C(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a2 + 16);
  if (v2 == 85)
  {
    uint64_t v3 = 0;
    uint64_t v9 = *(void *)(a2 - 96);
    if (!v9 || *(unsigned char *)(v9 + 16) != 81) {
      return v3;
    }
    uint64_t v10 = *(void *)(a2 - 64);
    uint64_t v11 = *(void *)(a2 - 32);
    uint64_t v12 = *(void *)(v9 - 64);
    uint64_t v6 = *(void *)(v9 - 32);
    if ((v10 != v12 || v11 != v6) && (v10 != v6 || v11 != v12)) {
      return 0;
    }
    int v15 = *(_WORD *)(v9 + 18) & 0x3E;
    if (v10 == v12)
    {
      if (v15 != 36) {
        return 0;
      }
    }
    else if (v15 != 34)
    {
      return 0;
    }
    if (*(void *)a1 == v12 && v6 != 0) {
      goto LABEL_43;
    }
    uint64_t v3 = 0;
    if (v12)
    {
      BOOL v7 = *(void *)a1 == v6;
      uint64_t v6 = v12;
      if (v7) {
        goto LABEL_43;
      }
    }
    return v3;
  }
  if (v2 != 84) {
    return 0;
  }
  uint64_t v3 = *(void *)(a2 - 32);
  if (v3)
  {
    if (*(unsigned char *)(v3 + 16)
      || *(void *)(v3 + 24) != *(void *)(a2 + 72)
      || (*(unsigned char *)(v3 + 33) & 0x20) == 0
      || *(_DWORD *)(v3 + 36) != 306)
    {
      return 0;
    }
    unsigned int v4 = (uint64_t *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));
    uint64_t v5 = *v4;
    uint64_t v6 = v4[4];
    BOOL v7 = *(void *)a1 != v5 || v6 == 0;
    if (v7)
    {
      BOOL v8 = v5 && *(void *)a1 == v6;
      uint64_t v6 = v5;
      if (!v8) {
        return 0;
      }
    }
LABEL_43:
    **(void **)(a1 + 8) = v6;
    return 1;
  }
  return v3;
}

uint64_t sub_1CC9FAF7C(void **a1, uint64_t a2)
{
  unsigned int v2 = *(unsigned __int8 *)(a2 + 16);
  unsigned int v3 = v2 - 28;
  BOOL v5 = v2 < 0x1C && v2 != 5 || a2 == 0;
  int v6 = v5;
  if (!v5)
  {
    if (v2 <= 0x1B) {
      unsigned int v3 = *(unsigned __int16 *)(a2 + 18);
    }
    if (v3 == 38)
    {
      int v8 = *(_DWORD *)(a2 + 20);
      if ((v8 & 0x40000000) != 0) {
        uint64_t v9 = *(uint64_t **)(a2 - 8);
      }
      else {
        uint64_t v9 = (uint64_t *)(a2 - 32 * (v8 & 0x7FFFFFF));
      }
      LODWORD(a1) = sub_1CC03F934(a1, *v9);
    }
    else
    {
      LODWORD(a1) = 0;
    }
  }
  return (v6 ^ 1) & a1;
}

BOOL sub_1CC9FAFFC(uint64_t a1, uint64_t a2)
{
  BOOL result = sub_1CC04B8F0(a1, a2);
  if (result)
  {
    BOOL result = 0;
    if (a2)
    {
      if (*(unsigned char *)(a2 + 16) == 84)
      {
        uint64_t v5 = *(void *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF) + 32 * *(unsigned int *)(a1 + 24));
        if (v5)
        {
          **(void **)(a1 + 32) = v5;
          return 1;
        }
        else
        {
          return 0;
        }
      }
    }
  }
  return result;
}

BOOL sub_1CC9FB06C(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a2 + 16);
  if (v2 == 85)
  {
    uint64_t v3 = 0;
    uint64_t v7 = *(void *)(a2 - 96);
    if (v7 && *(unsigned char *)(v7 + 16) == 81)
    {
      uint64_t v8 = *(void *)(a2 - 64);
      uint64_t v9 = *(void *)(a2 - 32);
      uint64_t v5 = *(void *)(v7 - 64);
      uint64_t v6 = *(void *)(v7 - 32);
      if ((v8 != v5 || v9 != v6) && (v8 != v6 || v9 != v5)) {
        return 0;
      }
      int v12 = *(_WORD *)(v7 + 18) & 0x3E;
      if (v8 == v5)
      {
        if (v12 != 34) {
          return 0;
        }
      }
      else if (v12 != 36)
      {
        return 0;
      }
      if (!v5) {
        goto LABEL_27;
      }
LABEL_26:
      **(void **)a1 = v5;
      if (*(void *)(a1 + 8) == v6) {
        return 1;
      }
LABEL_27:
      if (v6)
      {
        **(void **)a1 = v6;
        return *(void *)(a1 + 8) == v5;
      }
      return 0;
    }
  }
  else
  {
    if (v2 != 84) {
      return 0;
    }
    uint64_t v3 = *(void *)(a2 - 32);
    if (v3)
    {
      if (*(unsigned char *)(v3 + 16)
        || *(void *)(v3 + 24) != *(void *)(a2 + 72)
        || (*(unsigned char *)(v3 + 33) & 0x20) == 0
        || *(_DWORD *)(v3 + 36) != 305)
      {
        return 0;
      }
      unsigned int v4 = (uint64_t *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));
      uint64_t v5 = *v4;
      uint64_t v6 = v4[4];
      if (!v5) {
        goto LABEL_27;
      }
      goto LABEL_26;
    }
  }
  return v3;
}

BOOL sub_1CC9FB17C(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a2 + 16);
  if (v2 == 85)
  {
    uint64_t v3 = 0;
    uint64_t v7 = *(void *)(a2 - 96);
    if (v7 && *(unsigned char *)(v7 + 16) == 81)
    {
      uint64_t v8 = *(void *)(a2 - 64);
      uint64_t v9 = *(void *)(a2 - 32);
      uint64_t v5 = *(void *)(v7 - 64);
      uint64_t v6 = *(void *)(v7 - 32);
      if ((v8 != v5 || v9 != v6) && (v8 != v6 || v9 != v5)) {
        return 0;
      }
      int v12 = *(_WORD *)(v7 + 18) & 0x3E;
      if (v8 == v5)
      {
        if (v12 != 36) {
          return 0;
        }
      }
      else if (v12 != 34)
      {
        return 0;
      }
      if (!v5) {
        goto LABEL_27;
      }
LABEL_26:
      **(void **)a1 = v5;
      if (*(void *)(a1 + 8) == v6) {
        return 1;
      }
LABEL_27:
      if (v6)
      {
        **(void **)a1 = v6;
        return *(void *)(a1 + 8) == v5;
      }
      return 0;
    }
  }
  else
  {
    if (v2 != 84) {
      return 0;
    }
    uint64_t v3 = *(void *)(a2 - 32);
    if (v3)
    {
      if (*(unsigned char *)(v3 + 16)
        || *(void *)(v3 + 24) != *(void *)(a2 + 72)
        || (*(unsigned char *)(v3 + 33) & 0x20) == 0
        || *(_DWORD *)(v3 + 36) != 306)
      {
        return 0;
      }
      unsigned int v4 = (uint64_t *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));
      uint64_t v5 = *v4;
      uint64_t v6 = v4[4];
      if (!v5) {
        goto LABEL_27;
      }
      goto LABEL_26;
    }
  }
  return v3;
}

uint64_t sub_1CC9FB28C(void **a1, int a2, uint64_t a3)
{
  int v3 = *(unsigned __int8 *)(a3 + 16);
  LOBYTE(v4) = a2 + 28;
  if (a2 + 28 != v3)
  {
    if (v3 != 5) {
      return (v3 == 5) & v4;
    }
    if (*(unsigned __int16 *)(a3 + 18) != a2) {
      goto LABEL_13;
    }
    uint64_t v10 = *(void *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF));
    uint64_t v11 = *(void *)(v10 + 8);
    if (v11 && !*(void *)(v11 + 8))
    {
      int v23 = *(unsigned __int8 *)(v10 + 16);
      if (v23 == 5)
      {
        if (*(_WORD *)(v10 + 18) != 16) {
          goto LABEL_11;
        }
        uint64_t v28 = *(void *)(v10 - 32 * (*(_DWORD *)(v10 + 20) & 0x7FFFFFF));
        if (!v28) {
          goto LABEL_11;
        }
        **a1 = v28;
        uint64_t v25 = *(void *)(v10 - 32 * (*(_DWORD *)(v10 + 20) & 0x7FFFFFF) + 32);
        if (!v25) {
          goto LABEL_11;
        }
      }
      else
      {
        if (v23 != 44) {
          goto LABEL_11;
        }
        uint64_t v24 = *(void *)(v10 - 64);
        if (!v24) {
          goto LABEL_11;
        }
        **a1 = v24;
        uint64_t v25 = *(void *)(v10 - 32);
        if (!v25) {
          goto LABEL_11;
        }
      }
      *a1[1] = v25;
      uint64_t v4 = *(void *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF) + 32);
      if (v4) {
        goto LABEL_54;
      }
    }
LABEL_11:
    uint64_t v12 = *(void *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF) + 32);
    uint64_t v13 = *(void *)(v12 + 8);
    if (!v13 || *(void *)(v13 + 8)) {
      goto LABEL_13;
    }
    int v26 = *(unsigned __int8 *)(v12 + 16);
    if (v26 == 5)
    {
      if (*(_WORD *)(v12 + 18) == 16)
      {
        uint64_t v29 = *(void *)(v12 - 32 * (*(_DWORD *)(v12 + 20) & 0x7FFFFFF));
        if (v29)
        {
          **a1 = v29;
          uint64_t v4 = *(void *)(v12 - 32 * (*(_DWORD *)(v12 + 20) & 0x7FFFFFF) + 32);
          if (!v4) {
            return (v3 == 5) & v4;
          }
          goto LABEL_53;
        }
      }
    }
    else if (v26 == 44)
    {
      uint64_t v27 = *(void *)(v12 - 64);
      if (v27)
      {
        **a1 = v27;
        uint64_t v4 = *(void *)(v12 - 32);
        if (!v4) {
          return (v3 == 5) & v4;
        }
LABEL_53:
        *a1[1] = v4;
        uint64_t v4 = *(void *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF));
        if (!v4) {
          return (v3 == 5) & v4;
        }
LABEL_54:
        *a1[2] = v4;
        LOBYTE(v4) = 1;
        return (v3 == 5) & v4;
      }
    }
LABEL_13:
    LOBYTE(v4) = 0;
    return (v3 == 5) & v4;
  }
  uint64_t v5 = *(void *)(a3 - 64);
  uint64_t v6 = *(void *)(v5 + 8);
  if (!v6 || *(void *)(v6 + 8)) {
    goto LABEL_4;
  }
  int v14 = *(unsigned __int8 *)(v5 + 16);
  if (v14 == 5)
  {
    if (*(_WORD *)(v5 + 18) != 16) {
      goto LABEL_4;
    }
    uint64_t v20 = *(void *)(v5 - 32 * (*(_DWORD *)(v5 + 20) & 0x7FFFFFF));
    if (!v20) {
      goto LABEL_4;
    }
    **a1 = v20;
    uint64_t v16 = *(void *)(v5 - 32 * (*(_DWORD *)(v5 + 20) & 0x7FFFFFF) + 32);
    if (!v16) {
      goto LABEL_4;
    }
  }
  else
  {
    if (v14 != 44) {
      goto LABEL_4;
    }
    uint64_t v15 = *(void *)(v5 - 64);
    if (!v15) {
      goto LABEL_4;
    }
    **a1 = v15;
    uint64_t v16 = *(void *)(v5 - 32);
    if (!v16) {
      goto LABEL_4;
    }
  }
  *a1[1] = v16;
  uint64_t v21 = *(void *)(a3 - 32);
  if (!v21)
  {
LABEL_4:
    uint64_t v7 = *(void *)(a3 - 32);
    uint64_t v8 = *(void *)(v7 + 8);
    if (!v8 || *(void *)(v8 + 8)) {
      return 0;
    }
    int v17 = *(unsigned __int8 *)(v7 + 16);
    if (v17 == 5)
    {
      if (*(_WORD *)(v7 + 18) != 16) {
        return 0;
      }
      uint64_t v22 = *(void *)(v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF));
      if (!v22) {
        return 0;
      }
      **a1 = v22;
      uint64_t v19 = *(void *)(v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF) + 32);
      if (!v19) {
        return 0;
      }
    }
    else
    {
      if (v17 != 44) {
        return 0;
      }
      uint64_t v18 = *(void *)(v7 - 64);
      if (!v18) {
        return 0;
      }
      **a1 = v18;
      uint64_t v19 = *(void *)(v7 - 32);
      if (!v19) {
        return 0;
      }
    }
    *a1[1] = v19;
    uint64_t v21 = *(void *)(a3 - 64);
    if (!v21) {
      return 0;
    }
  }
  *a1[2] = v21;
  return 1;
}

uint64_t sub_1CC9FB564(uint64_t a1, uint64_t a2, const llvm::APFloat *a3)
{
  unsigned int v3 = *(unsigned __int16 *)(a2 + 18);
  if (v3) {
    return 0;
  }
  uint64_t v6 = *(void *)(a2 - 32);
  if (v6) {
    BOOL v7 = *(unsigned char *)(v6 + 16) == 17;
  }
  else {
    BOOL v7 = 0;
  }
  if (v7)
  {
    if ((v3 >> 4) - 11 <= 1)
    {
      uint64_t v13 = *(_UNKNOWN **)(v6 + 32) == &unk_1CFB2E344 ? *(void *)(v6 + 40) : v6 + 24;
      if ((*(unsigned char *)(v13 + 28) & 7) == 1)
      {
LABEL_45:
        if ((v3 & 0xF0) != 0)
        {
          *(_WORD *)(a2 + 18) = v3 & 0xFF0F;
          return a2;
        }
      }
    }
  }
  else
  {
    switch(v3 >> 4)
    {
      case 0:
        goto LABEL_45;
      case 3:
        uint64_t v8 = *(unsigned int *)(v6 + 32);
        if (v8 <= 0x40) {
          goto LABEL_22;
        }
        int v9 = 0;
        int64_t v10 = (unint64_t)(v8 + 63) >> 6;
        do
        {
          BOOL v11 = v10-- < 1;
          if (v11) {
            break;
          }
          unint64_t v12 = *(void *)(*(void *)(v6 + 24) + 8 * v10);
          v9 += __clz(v12);
        }
        while (!v12);
        goto LABEL_35;
      case 5:
        BOOL isAllOnesValue = llvm::Constant::isAllOnesValue((llvm::Constant *)v6);
        unsigned int v3 = *(unsigned __int16 *)(a2 + 18);
        if (!isAllOnesValue) {
          break;
        }
        goto LABEL_45;
      case 7:
        uint64_t v19 = (uint64_t *)(v6 + 24);
        unsigned int v20 = *(_DWORD *)(v6 + 32);
        if (v20 <= 0x40)
        {
          uint64_t v16 = *v19;
          uint64_t v17 = ~(-1 << (v20 - 1));
          goto LABEL_30;
        }
        unsigned int v14 = v20 - 1;
        if ((*(void *)(*v19 + 8 * ((v20 - 1) >> 6)) >> (v20 - 1))) {
          break;
        }
        uint64_t v15 = (llvm::APInt *)(v6 + 24);
LABEL_43:
        int v26 = llvm::APInt::countTrailingOnesSlowCase(v15);
        goto LABEL_44;
      case 8:
        uint64_t v21 = (uint64_t *)(v6 + 24);
        unsigned int v22 = *(_DWORD *)(v6 + 32);
        if (v22 <= 0x40)
        {
          uint64_t v16 = *v21;
          uint64_t v17 = 1 << (v22 - 1);
LABEL_30:
          if (v16 == v17) {
            goto LABEL_45;
          }
          break;
        }
        unsigned int v14 = v22 - 1;
        if (((*(void *)(*v21 + 8 * ((v22 - 1) >> 6)) >> (v22 - 1)) & 1) == 0) {
          break;
        }
        int v26 = llvm::APInt::countTrailingZerosSlowCase((unint64_t **)(v6 + 24));
LABEL_44:
        if (v26 != v14) {
          break;
        }
        goto LABEL_45;
      case 9:
        unsigned int v14 = *(_DWORD *)(v6 + 32);
        if (!v14) {
          goto LABEL_45;
        }
        uint64_t v15 = (llvm::APInt *)(v6 + 24);
        if (v14 > 0x40) {
          goto LABEL_43;
        }
        uint64_t v16 = *(void *)v15;
        uint64_t v17 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v14;
        goto LABEL_30;
      case 10:
        uint64_t v8 = *(unsigned int *)(v6 + 32);
        if (v8 <= 0x40)
        {
LABEL_22:
          if (*(void *)(v6 + 24)) {
            break;
          }
          goto LABEL_45;
        }
        int v9 = 0;
        int64_t v23 = (unint64_t)(v8 + 63) >> 6;
        do
        {
          BOOL v11 = v23-- < 1;
          if (v11) {
            break;
          }
          unint64_t v24 = *(void *)(*(void *)(v6 + 24) + 8 * v23);
          v9 += __clz(v24);
        }
        while (!v24);
LABEL_35:
        int v25 = v8 | 0xFFFFFFC0;
        if ((v8 & 0x3F) == 0) {
          int v25 = 0;
        }
        if (v9 + v25 == v8) {
          goto LABEL_45;
        }
        break;
      default:
        break;
    }
  }
  int v28 = (v3 >> 1) & 7;
  int v29 = v3 & 0xF0;
  if ((v3 & 0xF0) == 0 && !*(void *)(a2 + 8))
  {
    if (v28 == 5 || v28 == 2)
    {
      int v30 = operator new(0x80uLL);
      v30[21] = v30[21] & 0x38000000 | 2;
      *(void *)int v30 = 0;
      *((void *)v30 + 1) = 0;
      *((void *)v30 + 2) = 0;
      *((void *)v30 + 3) = v30 + 16;
      *((void *)v30 + 4) = 0;
      *((void *)v30 + 5) = 0;
      *((void *)v30 + 6) = 0;
      *((void *)v30 + 7) = v30 + 16;
      llvm::StoreInst::StoreInst((llvm::StoreInst *)(v30 + 16), *(llvm::Type ***)(a2 - 32), *(llvm::Value **)(a2 - 64), 0, (llvm::Instruction *)a2);
      char v31 = *(unsigned char *)(a2 + 60);
      *((_WORD *)v30 + 41) = *((_WORD *)v30 + 41) & 0xFC7F | ((_WORD)v28 << 7);
      *((unsigned char *)v30 + 124) = v31;
      *((_WORD *)v30 + 41) = *((_WORD *)v30 + 41) & 0xFF81 | (2
                                                            * llvm::DataLayout::getAlignment(*(llvm::DataLayout **)(a1 + 80), *(llvm::Type **)a2, 1));
      sub_1CC9D6844(a1, a2);
    }
    return 0;
  }
  uint64_t v32 = *(void *)(a2 - 32);
  int v33 = *(unsigned __int8 *)(v32 + 16);
  if (!v32 || v33 != 17)
  {
    uint64_t v27 = 0;
    if (!v32 || v33 != 16) {
      return (uint64_t)v27;
    }
    uint64_t v27 = 0;
    switch(v3 >> 4)
    {
      case 1:
      case 2:
      case 5:
      case 6:
        uint64_t v36 = *(unsigned int *)(v32 + 32);
        if (v36 <= 0x40) {
          goto LABEL_64;
        }
        int v38 = 0;
        int64_t v39 = (unint64_t)(v36 + 63) >> 6;
        do
        {
          BOOL v11 = v39-- < 1;
          if (v11) {
            break;
          }
          unint64_t v40 = *(void *)(*(void *)(v32 + 24) + 8 * v39);
          v38 += __clz(v40);
        }
        while (!v40);
        goto LABEL_79;
      case 3:
      case 10:
        unsigned int v42 = *(_DWORD *)(v32 + 32);
        if (!v42) {
          goto LABEL_99;
        }
        uint64_t v43 = (llvm::APInt *)(v32 + 24);
        if (v42 <= 0x40)
        {
          uint64_t v27 = 0;
          if (*(void *)v43 == 0xFFFFFFFFFFFFFFFFLL >> -(char)v42) {
            goto LABEL_99;
          }
          return (uint64_t)v27;
        }
        if (llvm::APInt::countTrailingOnesSlowCase(v43) != v42) {
          return 0;
        }
        goto LABEL_99;
      case 7:
        uint64_t v44 = (unint64_t **)(v32 + 24);
        unsigned int v45 = *(_DWORD *)(v32 + 32);
        if (v45 <= 0x40)
        {
          uint64_t v46 = *v44;
          uint64_t v47 = 1 << (v45 - 1);
          goto LABEL_91;
        }
        unsigned int v60 = v45 - 1;
        if ((((*v44)[(v45 - 1) >> 6] >> (v45 - 1)) & 1) == 0) {
          return 0;
        }
        int v61 = llvm::APInt::countTrailingZerosSlowCase(v44);
        goto LABEL_116;
      case 8:
        uint64_t v48 = (llvm::APInt *)(v32 + 24);
        unsigned int v49 = *(_DWORD *)(v32 + 32);
        if (v49 > 0x40)
        {
          unsigned int v60 = v49 - 1;
          if (((*(void *)(*(void *)v48 + 8 * ((v49 - 1) >> 6)) >> (v49 - 1)) & 1) == 0)
          {
            int v61 = llvm::APInt::countTrailingOnesSlowCase(v48);
LABEL_116:
            if (v61 == v60) {
              goto LABEL_99;
            }
          }
        }
        else
        {
          uint64_t v46 = *(unint64_t **)v48;
          uint64_t v47 = ~(-1 << (v49 - 1));
LABEL_91:
          if (v46 == (unint64_t *)v47) {
            goto LABEL_99;
          }
        }
        return 0;
      case 9:
        uint64_t v36 = *(unsigned int *)(v32 + 32);
        if (v36 <= 0x40)
        {
LABEL_64:
          if (*(void *)(v32 + 24)) {
            return 0;
          }
          goto LABEL_99;
        }
        int v38 = 0;
        int64_t v50 = (unint64_t)(v36 + 63) >> 6;
        do
        {
          BOOL v11 = v50-- < 1;
          if (v11) {
            break;
          }
          unint64_t v51 = *(void *)(*(void *)(v32 + 24) + 8 * v50);
          v38 += __clz(v51);
        }
        while (!v51);
LABEL_79:
        int v41 = v36 | 0xFFFFFFC0;
        if ((v36 & 0x3F) == 0) {
          int v41 = 0;
        }
        if (v38 + v41 == v36) {
          goto LABEL_99;
        }
        break;
      default:
        return (uint64_t)v27;
    }
    return 0;
  }
  int v34 = v3 >> 4;
  if (v34 == 12)
  {
    if (*(_UNKNOWN **)(v32 + 32) == &unk_1CFB2E344) {
      char v37 = *(unsigned char *)(*(void *)(v32 + 40) + 28);
    }
    else {
      char v37 = *(unsigned char *)(v32 + 52);
    }
    if ((v37 & 7) != 3 || (v37 & 8) != 0) {
      return 0;
    }
  }
  else
  {
    if (v34 != 11) {
      return 0;
    }
    char v35 = *(_UNKNOWN **)(v32 + 32) == &unk_1CFB2E344 ? *(unsigned char *)(*(void *)(v32 + 40) + 28) : *(unsigned char *)(v32 + 52);
    if ((v35 & 7) != 3 || (v35 & 8) == 0) {
      return 0;
    }
  }
LABEL_99:
  char v52 = *(llvm::ConstantFP **)a2;
  unsigned int v53 = *(unsigned __int8 *)(*(void *)a2 + 8);
  if (v53 != 13)
  {
    if (v29 != 176 && v53 <= 6)
    {
      *(_WORD *)(a2 + 18) = v3 & 0xFF0F | 0xB0;
      Zero = llvm::ConstantFP::getZero(v52, (llvm::Type *)1, a3);
      goto LABEL_105;
    }
LABEL_108:
    if (v28 == 4 || v28 == 2)
    {
      int v56 = operator new(0x60uLL);
      v56[13] = v56[13] & 0x38000000 | 1;
      uint64_t v27 = (llvm::Value *)(v56 + 8);
      *(void *)int v56 = 0;
      *((void *)v56 + 1) = 0;
      *((void *)v56 + 2) = 0;
      *((void *)v56 + 3) = v56 + 8;
      int v57 = *(llvm::Type **)a2;
      uint64_t v58 = *(void *)(a2 - 64);
      __int16 v63 = 257;
      char Alignment = llvm::DataLayout::getAlignment(*(llvm::DataLayout **)(a1 + 80), v57, 1);
      llvm::LoadInst::LoadInst(v27, (uint64_t)v57, v58, &v62, 0, Alignment, v28, *(unsigned char *)(a2 + 60), 0);
      return (uint64_t)v27;
    }
    return 0;
  }
  if (v29 == 80) {
    goto LABEL_108;
  }
  *(_WORD *)(a2 + 18) = v3 & 0xFF0F | 0x50;
  Zero = llvm::ConstantInt::get(v52, 0, 0);
LABEL_105:

  return sub_1CC9D28DC(a1, a2, 1u, (uint64_t)Zero);
}

llvm::Instruction *sub_1CC9FBC58(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4 = *(void *)(a2 - 32);
  if (v4) {
    BOOL v5 = *(unsigned char *)(v4 + 16) == 16;
  }
  else {
    BOOL v5 = 0;
  }
  if (!v5) {
    return 0;
  }
  unsigned int v10 = *(_WORD *)(a2 + 18) & 0x3F;
  if (a4)
  {
    if (v10 - 32 < 8 || v10 < 0x10) {
      return 0;
    }
    if (v10 != 40)
    {
LABEL_16:
      unsigned int v12 = *(_DWORD *)(v4 + 32);
      if (v12)
      {
        uint64_t v13 = (llvm::APInt *)(v4 + 24);
        if (v12 > 0x40)
        {
          if (llvm::APInt::countTrailingOnesSlowCase(v13) != v12) {
            return 0;
          }
        }
        else
        {
          BOOL result = 0;
          if (*(void *)v13 != 0xFFFFFFFFFFFFFFFFLL >> -(char)v12) {
            return result;
          }
        }
      }
      goto LABEL_31;
    }
  }
  else if (v10 != 39)
  {
    if (v10 != 38) {
      return 0;
    }
    goto LABEL_16;
  }
  uint64_t v15 = *(unsigned int *)(v4 + 32);
  if (v15 > 0x40)
  {
    int v16 = 0;
    int64_t v17 = (unint64_t)(v15 + 63) >> 6;
    do
    {
      if (v17-- < 1) {
        break;
      }
      unint64_t v19 = *(void *)(*(void *)(v4 + 24) + 8 * v17);
      v16 += __clz(v19);
    }
    while (!v19);
    int v20 = v15 | 0xFFFFFFC0;
    if ((v15 & 0x3F) == 0) {
      int v20 = 0;
    }
    if (v16 + v20 != v15) {
      return 0;
    }
  }
  else if (*(void *)(v4 + 24))
  {
    return 0;
  }
LABEL_31:
  uint64_t v21 = *(_WORD *)(a3 + 18) & 0x3F;
  if (a4) {
    LODWORD(v21) = word_1CFB27690[v21];
  }
  unsigned int v22 = *(void **)(a2 - 64);
  uint64_t v23 = *(void *)(a3 - 64);
  unint64_t v24 = *(void **)(a3 - 32);
  if ((void *)v23 == v22)
  {
LABEL_37:
    uint64_t v23 = (uint64_t)v24;
LABEL_38:
    if (v21 == 40)
    {
      __int16 v25 = 36;
      __int16 v26 = 35;
    }
    else
    {
      if (v21 != 41) {
        return 0;
      }
LABEL_40:
      __int16 v25 = 37;
      __int16 v26 = 34;
    }
LABEL_44:
    uint64_t v27 = *(const llvm::DataLayout **)(a1 + 56);
    int v28 = *(const llvm::DataLayout **)(a1 + 72);
    if (!*(void *)(a3 + 40))
    {
      if (!v23 || *(unsigned __int8 *)(v23 + 16) < 0x1Cu || (a3 = v23, !*(void *)(v23 + 40))) {
        a3 = 0;
      }
    }
    v38[0] = *(const llvm::DataLayout **)(a1 + 80);
    v38[1] = v27;
    void v38[2] = (const llvm::DataLayout *)a3;
    v38[3] = v28;
    uint64_t v39 = 0;
    char v40 = 1;
    sub_1CC16089C((uint64_t *)v23, 0, v38, (uint64_t)&v34);
    if (v35 >= 0x41) {
      int v29 = (uint64_t *)(v34 + 8 * ((v35 - 1) >> 6));
    }
    else {
      int v29 = &v34;
    }
    if (((unint64_t)*v29 >> (v35 - 1)))
    {
      if (a4) {
        __int16 v30 = v26;
      }
      else {
        __int16 v30 = v25;
      }
      uint64_t v31 = *(void *)(a1 + 24);
      LOWORD(v39) = 257;
      BOOL result = sub_1CB845F20(v31, v30, v22, v23, (uint64_t)v38);
    }
    else
    {
      BOOL result = 0;
    }
    if (v37 >= 0x41 && v36)
    {
      int v33 = result;
      MEMORY[0x1D25D9CB0](v36, 0x1000C8000313F17);
      BOOL result = v33;
    }
    if (v35 >= 0x41)
    {
      if (v34)
      {
        uint64_t v32 = result;
        MEMORY[0x1D25D9CB0](v34, 0x1000C8000313F17);
        return v32;
      }
    }
    return result;
  }
  if (v24 != v22) {
    return 0;
  }
  __int16 v25 = 36;
  __int16 v26 = 35;
  BOOL result = 0;
  switch((int)v21)
  {
    case 2:
    case 3:
    case 4:
    case 5:
    case 10:
    case 11:
    case 12:
    case 13:
    case 34:
    case 35:
    case 36:
    case 37:
    case 40:
    case 41:
      return result;
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
      __break(1u);
      goto LABEL_37;
    case 38:
      goto LABEL_44;
    case 39:
      goto LABEL_40;
    default:
      goto LABEL_38;
  }
  return result;
}

llvm::Instruction *sub_1CC9FBFF0(uint64_t a1, uint64_t a2, uint64_t a3, llvm::AssumptionCache *a4, int a5, int a6)
{
  if (a5) {
    int v6 = 33;
  }
  else {
    int v6 = 32;
  }
  if (v6 != (*(_WORD *)(a2 + 18) & 0x3F) || v6 != (*(_WORD *)(a3 + 18) & 0x3F)) {
    return 0;
  }
  uint64_t v10 = *(void *)(a2 - 32);
  unsigned int v11 = *(unsigned __int8 *)(v10 + 16);
  BOOL v12 = !v10 || v11 > 0x14;
  if (v12) {
    return 0;
  }
  if (v11 == 16)
  {
    uint64_t v17 = *(unsigned int *)(v10 + 32);
    if (v17 >= 0x41)
    {
      int v45 = 0;
      int64_t v46 = (unint64_t)(v17 + 63) >> 6;
      do
      {
        BOOL v12 = v46-- < 1;
        if (v12) {
          break;
        }
        unint64_t v47 = *(void *)(*(void *)(v10 + 24) + 8 * v46);
        v45 += __clz(v47);
      }
      while (!v47);
      int v48 = v17 | 0xFFFFFFC0;
      if ((v17 & 0x3F) == 0) {
        int v48 = 0;
      }
      if (v45 + v48 == v17) {
        goto LABEL_24;
      }
    }
    else if (!*(void *)(v10 + 24))
    {
      goto LABEL_24;
    }
  }
  else if (v11 == 17)
  {
    if (sub_1CB844168(*(void *)(a2 - 32), 0.0)) {
      goto LABEL_24;
    }
  }
  else if (v11 - 18 < 3 || v11 == 13)
  {
    goto LABEL_24;
  }
  if ((sub_1CC03F414((uint64_t)v56, (llvm::Constant *)v10) & 1) == 0) {
    return 0;
  }
LABEL_24:
  uint64_t v19 = *(void *)(a3 - 32);
  unsigned int v20 = *(unsigned __int8 *)(v19 + 16);
  if (v19) {
    BOOL v21 = v20 > 0x14;
  }
  else {
    BOOL v21 = 1;
  }
  if (v21) {
    return 0;
  }
  if (v20 == 16)
  {
    uint64_t v22 = *(unsigned int *)(v19 + 32);
    if (v22 >= 0x41)
    {
      int v49 = 0;
      int64_t v50 = (unint64_t)(v22 + 63) >> 6;
      do
      {
        BOOL v12 = v50-- < 1;
        if (v12) {
          break;
        }
        unint64_t v51 = *(void *)(*(void *)(v19 + 24) + 8 * v50);
        v49 += __clz(v51);
      }
      while (!v51);
      int v52 = v22 | 0xFFFFFFC0;
      if ((v22 & 0x3F) == 0) {
        int v52 = 0;
      }
      if (v49 + v52 == v22) {
        goto LABEL_31;
      }
    }
    else if (!*(void *)(v19 + 24))
    {
      goto LABEL_31;
    }
  }
  else if (v20 == 17)
  {
    if (sub_1CB844168(*(void *)(a3 - 32), 0.0)) {
      goto LABEL_31;
    }
  }
  else if (v20 - 18 < 3 || v20 == 13)
  {
    goto LABEL_31;
  }
  if ((sub_1CC03F414((uint64_t)v56, (llvm::Constant *)v19) & 1) == 0) {
    return 0;
  }
LABEL_31:
  uint64_t v23 = *(void *)(a2 - 64);
  int v24 = *(unsigned __int8 *)(v23 + 16);
  if (v24 == 5)
  {
    if (*(_WORD *)(v23 + 18) != 28) {
      return 0;
    }
    unsigned int v42 = (llvm **)(v23 - 32 * (*(_DWORD *)(v23 + 20) & 0x7FFFFFF));
    __int16 v25 = *v42;
    if (!*v42) {
      return 0;
    }
    __int16 v26 = v42[4];
    if (!v26) {
      return 0;
    }
  }
  else
  {
    if (v24 != 56) {
      return 0;
    }
    __int16 v25 = *(llvm **)(v23 - 64);
    if (!v25) {
      return 0;
    }
    __int16 v26 = *(llvm **)(v23 - 32);
    if (!v26) {
      return 0;
    }
  }
  uint64_t v27 = *(void *)(a3 - 64);
  int v28 = *(unsigned __int8 *)(v27 + 16);
  if (v28 == 5)
  {
    if (*(_WORD *)(v27 + 18) == 28)
    {
      uint64_t v44 = (llvm **)(v27 - 32 * (*(_DWORD *)(v27 + 20) & 0x7FFFFFF));
      int v29 = *v44;
      if (*v44)
      {
        __int16 v30 = v44[4];
        if (v30) {
          goto LABEL_39;
        }
      }
    }
    return 0;
  }
  if (v28 != 56) {
    return 0;
  }
  int v29 = *(llvm **)(v27 - 64);
  if (!v29) {
    return 0;
  }
  __int16 v30 = *(llvm **)(v27 - 32);
  if (!v30) {
    return 0;
  }
LABEL_39:
  BOOL v31 = v25 == v30 || v26 == v30;
  if (v31) {
    uint64_t v32 = v30;
  }
  else {
    uint64_t v32 = v29;
  }
  if (v31) {
    int v33 = v29;
  }
  else {
    int v33 = v30;
  }
  if (v26 == v32) {
    uint64_t v34 = v25;
  }
  else {
    uint64_t v34 = v26;
  }
  BOOL v35 = v26 == v32 || v25 == v32;
  if (!v35
    || !llvm::isKnownToBeAPowerOfTwo(v34, *(const llvm::Value **)(a1 + 80), 0, 0, *(void *)(a1 + 56), a4, *(const llvm::Instruction **)(a1 + 72), (const llvm::DominatorTree *)1, v54)|| !llvm::isKnownToBeAPowerOfTwo(v33, *(const llvm::Value **)(a1 + 80), 0, 0, *(void *)(a1 + 56), a4, *(const llvm::Instruction **)(a1 + 72), (const llvm::DominatorTree *)1, v55))
  {
    return 0;
  }
  if (a6)
  {
    unsigned int v53 = *(uint64_t **)(a1 + 24);
    __int16 v57 = 257;
    int v33 = sub_1CD68A854(v53, v33, (uint64_t)v56);
  }
  uint64_t v36 = *(void *)(a1 + 24);
  __int16 v57 = 257;
  unsigned int v37 = sub_1CB844AF4(v36, v34, (uint64_t)v33, (uint64_t)v56);
  uint64_t v38 = *(void *)(a1 + 24);
  __int16 v57 = 257;
  uint64_t v39 = sub_1CBF52474(v38, v32, (uint64_t)v37, (uint64_t)v56);
  if (a5) {
    __int16 v40 = 32;
  }
  else {
    __int16 v40 = 33;
  }
  uint64_t v41 = *(void *)(a1 + 24);
  __int16 v57 = 257;
  return sub_1CB845F20(v41, v40, v39, (uint64_t)v37, (uint64_t)v56);
}

llvm::Instruction *sub_1CC9FC370(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4 = *(void *)(a2 + 8);
  if (!v4) {
    return 0;
  }
  if (*(void *)(v4 + 8)) {
    return 0;
  }
  uint64_t v6 = *(void *)(a3 + 8);
  if (!v6 || *(void *)(v6 + 8)) {
    return 0;
  }
  int v8 = a4 ? 32 : 33;
  if (v8 != (*(_WORD *)(a2 + 18) & 0x3F) || v8 != (*(_WORD *)(a3 + 18) & 0x3F)) {
    return 0;
  }
  sub_1CC9FC5B0((unint64_t)&v39, *(llvm::Type ***)(a2 - 64));
  sub_1CC9FC5B0((unint64_t)&v37, *(llvm::Type ***)(a2 - 32));
  sub_1CC9FC5B0((unint64_t)&v35, *(llvm::Type ***)(a3 - 64));
  sub_1CC9FC5B0((unint64_t)&v33, *(llvm::Type ***)(a3 - 32));
  BOOL result = 0;
  if ((_BYTE)v40 && (_BYTE)v38 && (_BYTE)v36 && (_BYTE)v34)
  {
    uint64_t v11 = v39;
    uint64_t v12 = v37;
    if ((void)v39 == (void)v35 && (void)v37 == (void)v33) {
      goto LABEL_18;
    }
    BOOL result = 0;
    if ((void)v39 == (void)v33 && (void)v37 == (void)v35)
    {
      uint64_t v22 = v36;
      long long v23 = v35;
      long long v35 = v33;
      uint64_t v36 = v34;
      long long v33 = v23;
      uint64_t v34 = v22;
LABEL_18:
      int v13 = DWORD2(v39);
      int v14 = HIDWORD(v39);
      if (HIDWORD(v39) + DWORD2(v39) == DWORD2(v35))
      {
        int v15 = DWORD2(v37);
        int v16 = HIDWORD(v37);
        if (HIDWORD(v37) + DWORD2(v37) == DWORD2(v33)) {
          goto LABEL_23;
        }
      }
      if (HIDWORD(v35) + DWORD2(v35) == DWORD2(v39) && HIDWORD(v33) + DWORD2(v33) == DWORD2(v37))
      {
        uint64_t v17 = v40;
        long long v18 = v39;
        long long v39 = v35;
        uint64_t v40 = v36;
        long long v35 = v18;
        uint64_t v36 = v17;
        long long v24 = v37;
        uint64_t v25 = v38;
        uint64_t v38 = v34;
        long long v37 = v33;
        uint64_t v34 = v25;
        long long v33 = v24;
        uint64_t v11 = v39;
        int v13 = DWORD2(v39);
        int v14 = HIDWORD(v39);
        uint64_t v12 = v37;
        int v15 = DWORD2(v37);
        int v16 = HIDWORD(v37);
LABEL_23:
        uint64_t v30 = v11;
        int v31 = v13;
        int v32 = HIDWORD(v35) + v14;
        uint64_t v27 = v12;
        int v28 = v15;
        int v29 = HIDWORD(v33) + v16;
        uint64_t v19 = sub_1CC9FC794((uint64_t)&v30, *(void *)(a1 + 24));
        unsigned int v20 = sub_1CC9FC794((uint64_t)&v27, *(void *)(a1 + 24));
        uint64_t v21 = *(void *)(a1 + 24);
        __int16 v26 = 257;
        return sub_1CB845F20(v21, v8, v19, (uint64_t)v20, (uint64_t)&v24);
      }
      return 0;
    }
  }
  return result;
}

unint64_t sub_1CC9FC5B0(unint64_t result, llvm::Type **a2)
{
  unint64_t v2 = result;
  long long v23 = &v27;
  unsigned int v3 = a2[1];
  if (v3)
  {
    if (!*((void *)v3 + 1))
    {
      uint64_t v27 = 0;
      BOOL result = sub_1CBC5BF18(&v23, (uint64_t)a2);
      if (result)
      {
        BOOL v5 = v27;
        uint64_t v6 = *v27;
        if ((*((_DWORD *)*v27 + 2) & 0xFE) == 0x12) {
          uint64_t v6 = (llvm::Type *)**((void **)v6 + 2);
        }
        int PrimitiveSizeInBits = llvm::Type::getPrimitiveSizeInBits(v6);
        int v8 = *a2;
        if ((*((_DWORD *)*a2 + 2) & 0xFE) == 0x12) {
          int v8 = (llvm::Type *)**((void **)v8 + 2);
        }
        BOOL result = llvm::Type::getPrimitiveSizeInBits(v8);
        int v9 = result;
        v24[1] = 0;
        uint64_t v25 = 0;
        long long v23 = &v26;
        v24[0] = &v25;
        uint64_t v10 = v5[1];
        if (!v10 || *((void *)v10 + 1)) {
          goto LABEL_10;
        }
        BOOL result = (unint64_t)v24;
        int v13 = *((unsigned __int8 *)v5 + 16);
        if (v13 == 5)
        {
          if (*((_WORD *)v5 + 9) != 26) {
            goto LABEL_10;
          }
          int v14 = &v5[-4 * (*((_DWORD *)v5 + 5) & 0x7FFFFFF)];
          if (!*v14) {
            goto LABEL_10;
          }
          __int16 v26 = (llvm::Type **)*v14;
          BOOL result = sub_1CBF5295C((uint64_t)v24, v14[4]);
          if (!result) {
            goto LABEL_10;
          }
        }
        else
        {
          if (v13 != 54) {
            goto LABEL_10;
          }
          if (!*(v5 - 8)) {
            goto LABEL_10;
          }
          __int16 v26 = (llvm::Type **)*(v5 - 8);
          BOOL result = sub_1CBF528D8((uint64_t)v24, (unsigned __int8 *)*(v5 - 4));
          if ((result & 1) == 0) {
            goto LABEL_10;
          }
        }
        int v15 = v25;
        uint64_t v16 = v25[2];
        uint64_t v17 = v25;
        if (v16 >= 0x41)
        {
          int v18 = 0;
          int64_t v19 = (unint64_t)(v16 + 63) >> 6;
          do
          {
            if (v19-- < 1) {
              break;
            }
            unint64_t v21 = *(void *)(*(void *)v25 + 8 * v19);
            v18 += __clz(v21);
          }
          while (!v21);
          int v22 = v16 | 0xFFFFFFC0;
          if ((v16 & 0x3F) == 0) {
            int v22 = 0;
          }
          if ((v16 - v18 - v22) > 0x40) {
            goto LABEL_10;
          }
          uint64_t v17 = *(int **)v25;
        }
        if (*(void *)v17 <= (unint64_t)(PrimitiveSizeInBits - v9))
        {
          uint64_t v12 = v26;
          if (v25[2] >= 0x41) {
            int v15 = *(int **)v25;
          }
          int v11 = *v15;
          goto LABEL_11;
        }
LABEL_10:
        int v11 = 0;
        uint64_t v12 = v27;
LABEL_11:
        *(void *)unint64_t v2 = v12;
        *(_DWORD *)(v2 + 8) = v11;
        *(_DWORD *)(v2 + 12) = v9;
        *(unsigned char *)(v2 + 16) = 1;
        return result;
      }
    }
  }
  *(unsigned char *)unint64_t v2 = 0;
  *(unsigned char *)(v2 + 16) = 0;
  return result;
}

llvm::Instruction *sub_1CC9FC794(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(llvm::Instruction **)a1;
  unint64_t v5 = *(unsigned int *)(a1 + 8);
  if (v5)
  {
    __int16 v22 = 257;
    uint64_t v6 = llvm::ConstantInt::get(*(llvm::ConstantInt **)v4, v5, 0);
    uint64_t v4 = sub_1CC2429AC(a2, (uint64_t)v4, (uint64_t)v6, (uint64_t)v21, 0);
  }
  BOOL v7 = *(llvm::ConstantInt **)v4;
  int v8 = (uint64_t **)llvm::IntegerType::get(**(llvm::IntegerType ***)v4, (llvm::LLVMContext *)*(unsigned int *)(a1 + 12));
  uint64_t v9 = (uint64_t)v8;
  if ((*((_DWORD *)v7 + 2) & 0xFE) == 0x12)
  {
    int v15 = (llvm::Type *)*((unsigned int *)v7 + 8);
    if (*((_DWORD *)v7 + 2) == 19) {
      llvm::ScalableVectorType::get(v8, v15);
    }
    else {
      llvm::FixedVectorType::get((llvm::FixedVectorType *)v8, v15);
    }
    uint64_t v9 = v16;
  }
  if (v9 != *(void *)v4)
  {
    v20[16] = 257;
    if (*((unsigned __int8 *)v4 + 16) <= 0x14u)
    {
      uint64_t v4 = (llvm::Instruction *)(*(uint64_t (**)(void, uint64_t, llvm::Instruction *, uint64_t))(**(void **)(a2 + 72) + 224))(*(void *)(a2 + 72), 38, v4, v9);
      if (v4) {
        BOOL v13 = *((unsigned __int8 *)v4 + 16) >= 0x1Cu;
      }
      else {
        BOOL v13 = 0;
      }
      if (v13)
      {
        (*(void (**)(void, llvm::Instruction *, _WORD *, void, void))(**(void **)(a2 + 80) + 16))(*(void *)(a2 + 80), v4, v20, *(void *)(a2 + 48), *(void *)(a2 + 56));
        uint64_t v17 = *(unsigned int *)(a2 + 8);
        if (v17)
        {
          uint64_t v18 = *(void *)a2;
          uint64_t v19 = v18 + 16 * v17;
          do
          {
            llvm::Instruction::setMetadata(v4, *(_DWORD *)v18, *(llvm::MDNode **)(v18 + 8));
            v18 += 16;
          }
          while (v18 != v19);
        }
      }
    }
    else
    {
      __int16 v22 = 257;
      uint64_t v4 = llvm::CastInst::Create(38, (uint64_t)v4, v9, v21, 0);
      (*(void (**)(void, llvm::Instruction *, _WORD *, void, void))(**(void **)(a2 + 80) + 16))(*(void *)(a2 + 80), v4, v20, *(void *)(a2 + 48), *(void *)(a2 + 56));
      uint64_t v10 = *(unsigned int *)(a2 + 8);
      if (v10)
      {
        uint64_t v11 = *(void *)a2;
        uint64_t v12 = v11 + 16 * v10;
        do
        {
          llvm::Instruction::setMetadata(v4, *(_DWORD *)v11, *(llvm::MDNode **)(v11 + 8));
          v11 += 16;
        }
        while (v11 != v12);
      }
    }
  }
  return v4;
}

llvm::Instruction *sub_1CC9FC9A4(uint64_t a1, uint64_t a2, uint64_t a3, llvm::AssumptionCache *a4)
{
  long long v8 = *(_OWORD *)(a1 + 120);
  long long v9 = *(_OWORD *)(a1 + 104);
  v127[0] = *(_OWORD *)(a1 + 88);
  v127[1] = v9;
  uint64_t v129 = *((void *)&v8 + 1);
  int v128 = a4;
  uint64_t v10 = sub_1CC9FBFF0(a1, a2, a3, a4, 1, 0);
  if (v10) {
    return v10;
  }
  __int16 v11 = *(_WORD *)(a2 + 18);
  uint64_t v12 = v11 & 0x3F;
  uint64_t v13 = *(_WORD *)(a3 + 18) & 0x3F;
  if ((v12 - 38) < 4 != (v13 - 38) < 4)
  {
    BOOL v82 = (v12 - 38) < 4 && (*(_WORD *)(a3 + 18) & 0x3E) == 32;
    int v83 = v82;
    if (v82 || (v13 - 38) > 3)
    {
      if (!v83) {
        goto LABEL_5;
      }
    }
    else if ((v11 & 0x3E) != 0x20)
    {
      goto LABEL_5;
    }
  }
  int v14 = *(void **)(a2 - 64);
  int v15 = *(void **)(a3 - 64);
  if (v14 == *(void **)(a3 - 32) && *(void **)(a2 - 32) == v15)
  {
    *(_WORD *)(a2 + 18) = v11 & 0xFFC0 | llvm::CmpInst::getSwappedPredicate(v11 & 0x3F);
    llvm::Use::swap((uint64_t *)(a2 - 64), (uint64_t *)(a2 - 32));
    int v14 = *(void **)(a2 - 64);
    int v15 = *(void **)(a3 - 64);
  }
  if (v14 != v15 || (uint64_t v84 = *(void *)(a2 - 32), v84 != *(void *)(a3 - 32)))
  {
LABEL_5:
    uint64_t v10 = sub_1CC9FDADC(a2, (_WORD *)a3, (llvm::Constant *)1, *(void *)(a1 + 24));
    if (v10) {
      return v10;
    }
    uint64_t v10 = sub_1CC9FE96C((llvm::Instruction *)a2, a3, (uint64_t)a4, *(void *)(a1 + 24), (uint64_t)v127);
    if (v10) {
      return v10;
    }
    uint64_t v10 = sub_1CC9FE96C((llvm::Instruction *)a3, a2, (uint64_t)a4, *(void *)(a1 + 24), (uint64_t)v127);
    if (v10) {
      return v10;
    }
    uint64_t v10 = sub_1CC9FEC44(a2, a3, 1, *(void *)(a1 + 24));
    if (v10) {
      return v10;
    }
    uint64_t v10 = sub_1CC9FEC44(a3, a2, 1, *(void *)(a1 + 24));
    if (v10) {
      return v10;
    }
    uint64_t v10 = sub_1CC9FBC58(a1, a2, a3, 0);
    if (v10) {
      return v10;
    }
    uint64_t v10 = sub_1CC9FBC58(a1, a3, a2, 0);
    if (v10) {
      return v10;
    }
    uint64_t v10 = sub_1CC9FEE24(a2, a3, 1, *(void *)(a1 + 24));
    if (v10) {
      return v10;
    }
    uint64_t v16 = *(void *)(a1 + 24);
    uint64_t v143 = 0;
    LODWORD(v142) = 1;
    unint64_t v141 = 0;
    uint64_t v17 = a2;
    if ((sub_1CCA132BC(a3, &v143, (void **)&v141) & 1) == 0)
    {
      uint64_t v17 = a3;
      if (!sub_1CCA132BC(a2, &v143, (void **)&v141))
      {
        uint64_t v38 = 0;
        goto LABEL_54;
      }
    }
    uint64_t v140 = 0;
    unsigned int v139 = 1;
    __src = 0;
    LODWORD(v134) = *(_WORD *)(v17 + 18) & 0x3F;
    uint64_t v122 = v16;
    if (!llvm::decomposeBitTestICmp(*(void *)(v17 - 64), *(unsigned __int8 **)(v17 - 32), (int *)&v134, (uint64_t *)&v140, (int8x8_t ***)&__src, 0)|| v134 != 32)
    {
      unint64_t v136 = 0;
      uint64_t v144 = (uint64_t *)&v134;
      unint64_t v145 = (uint64_t *)&v140;
      uint64_t v146 = (uint64_t *)&v136;
      uint64_t v147 = 0;
      if (!sub_1CD68AA10((uint64_t)&v144, v17, (BOOL)&v136) || v134 != 32) {
        goto LABEL_131;
      }
      int64_t v80 = (void **)v136;
      if (v139 > 0x40 || (unsigned int v81 = *(_DWORD *)(v136 + 8), v81 > 0x40))
      {
        if (&__src != (void **)v136)
        {
          llvm::APInt::reallocate((uint64_t)&__src, *(_DWORD *)(v136 + 8));
          if (v139 <= 0x40) {
            __src = *v80;
          }
          else {
            memcpy(__src, *v80, (((unint64_t)v139 + 63) >> 3) & 0x3FFFFFF8);
          }
        }
      }
      else
      {
        __src = *(void **)v136;
        unsigned int v139 = v81;
      }
    }
    uint64_t v18 = v143;
    if (v143 == v140) {
      goto LABEL_29;
    }
    uint64_t v144 = (uint64_t *)v143;
    if (sub_1CC062B54(&v144, (uint64_t)v140))
    {
      uint64_t v19 = *v143;
      if (((*v143)[1] & 0xFE) == 0x12) {
        uint64_t v19 = *(llvm::ConstantInt ***)v19[2];
      }
      unsigned int PrimitiveSizeInBits = llvm::Type::getPrimitiveSizeInBits((llvm::Type *)v19);
      if (PrimitiveSizeInBits > 0x40)
      {
        if (v139 != PrimitiveSizeInBits) {
          operator new[]();
        }
        sub_1CD0463BC((uint64_t)&v144, (uint64_t)&__src);
      }
      else
      {
        LODWORD(v145) = PrimitiveSizeInBits;
        if (PrimitiveSizeInBits) {
          unint64_t v21 = 0xFFFFFFFFFFFFFFFFLL >> -(char)PrimitiveSizeInBits;
        }
        else {
          unint64_t v21 = 0;
        }
        uint64_t v144 = (uint64_t *)(v21 & (unint64_t)__src);
      }
      if (v139 >= 0x41 && __src) {
        MEMORY[0x1D25D9CB0](__src, 0x1000C8000313F17);
      }
      uint64_t v18 = v143;
      __src = v144;
      unsigned int v139 = v145;
LABEL_29:
      unsigned int v135 = v142;
      if (v142 > 0x40) {
        operator new[]();
      }
      unint64_t v134 = v141;
      llvm::APInt::operator-=((uint64_t)&v134, 1uLL);
      unsigned int v23 = v135;
      unsigned int v137 = v135;
      unint64_t v136 = v134;
      unsigned int v135 = 0;
      unsigned int v124 = v13;
      if (v137 > 0x40)
      {
        llvm::APInt::flipAllBitsSlowCase((uint64_t)&v136);
        unsigned int v23 = v137;
        uint64_t v26 = v136;
        unsigned int v137 = 0;
        if (v135 >= 0x41 && v134) {
          MEMORY[0x1D25D9CB0](v134, 0x1000C8000313F17);
        }
      }
      else
      {
        uint64_t v24 = ~v134;
        if (v23) {
          unint64_t v25 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v23;
        }
        else {
          unint64_t v25 = 0;
        }
        uint64_t v26 = v25 & v24;
        unint64_t v136 = v25 & v24;
        unsigned int v137 = 0;
      }
      if (v139 > 0x40)
      {
        unint64_t v30 = ((unint64_t)v139 + 63) >> 6;
        int v31 = (uint64_t *)__src;
        int v32 = (uint64_t *)__src;
        long long v33 = (uint64_t *)v26;
        unint64_t v34 = v30;
        while (1)
        {
          uint64_t v36 = *v32++;
          uint64_t v35 = v36;
          uint64_t v37 = *v33++;
          if ((v37 & v35) != 0) {
            break;
          }
          if (!--v34) {
            goto LABEL_45;
          }
        }
        unsigned int v121 = v12;
        unint64_t v51 = (uint64_t *)v26;
        do
        {
          uint64_t v53 = *v31++;
          uint64_t v52 = v53;
          uint64_t v54 = *v51++;
          if ((v52 & ~v54) != 0)
          {
            unsigned int v131 = v139;
            operator new[]();
          }
          --v30;
        }
        while (v30);
      }
      else
      {
        if (((unint64_t)__src & v26) == 0)
        {
LABEL_45:
          uint64_t v38 = 0;
          goto LABEL_46;
        }
        unsigned int v121 = v12;
        if (((unint64_t)__src & ~v26) != 0)
        {
          unint64_t v27 = ~(unint64_t)__src;
          if (v139) {
            unint64_t v28 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v139;
          }
          else {
            unint64_t v28 = 0;
          }
          unint64_t v29 = v28 & v27;
          unsigned int v130 = (uint64_t *)(v28 & v27);
          unsigned int v133 = v139;
          unint64_t v132 = (llvm::ConstantInt ***)(v28 & v27);
          unsigned int v131 = 0;
          llvm::APInt::operator+=((uint64_t)&v132, 1uLL);
          uint64_t v55 = v133;
          int v56 = v132;
          unsigned int v133 = 0;
          if (v131 >= 0x41 && v29) {
            MEMORY[0x1D25D9CB0](v29, 0x1000C8000313F17);
          }
          if (v55 > 0x40)
          {
            unint64_t v58 = 0;
            int v59 = 0;
            do
            {
              uint8x8_t v60 = (uint8x8_t)vcnt_s8((int8x8_t)v56[v58 / 8]);
              v60.i16[0] = vaddlv_u8(v60);
              v59 += v60.i32[0];
              v58 += 8;
            }
            while ((((unint64_t)(v55 + 63) >> 3) & 0x3FFFFFF8) != v58);
            if (v59 != 1)
            {
              if (v56) {
                MEMORY[0x1D25D9CB0](v56, 0x1000C8000313F17);
              }
              goto LABEL_86;
            }
          }
          else
          {
            uint8x8_t v57 = (uint8x8_t)vcnt_s8((int8x8_t)v56);
            v57.i16[0] = vaddlv_u8(v57);
            if (v57.u32[0] != 1)
            {
LABEL_86:
              uint64_t v38 = 0;
              uint64_t v12 = v121;
              goto LABEL_46;
            }
          }
          if (v142 > 0x40)
          {
            unint64_t v92 = (((unint64_t)v142 + 63) >> 3) & 0x3FFFFFF8;
            while (v92)
            {
              unint64_t v93 = *(void *)(v141 - 8 + v92);
              unint64_t v94 = *(unint64_t *)((char *)v56 + v92 - 8);
              v92 -= 8;
              if (v93 != v94)
              {
                if (v93 <= v94) {
                  goto LABEL_101;
                }
                break;
              }
            }
          }
          else
          {
            unint64_t v61 = v141;
            if (v141 >= (unint64_t)v56) {
              unsigned int v62 = v55;
            }
            else {
              unsigned int v62 = v142;
            }
            if (v62 < 0x41)
            {
              if (v141 >= (unint64_t)v56) {
                unint64_t v61 = (unint64_t)v56;
              }
              unint64_t v141 = v61;
              LODWORD(v142) = v62;
              goto LABEL_101;
            }
            if (v141 < (unint64_t)v56)
            {
LABEL_101:
              if (v55 >= 0x41 && v56) {
                MEMORY[0x1D25D9CB0](v56, 0x1000C8000313F17);
              }
              goto LABEL_104;
            }
          }
          llvm::APInt::reallocate((uint64_t)&v141, v55);
          if (v142 <= 0x40) {
            unint64_t v141 = (unint64_t)v56;
          }
          else {
            memcpy((void *)v141, v56, (((unint64_t)v142 + 63) >> 3) & 0x3FFFFFF8);
          }
          goto LABEL_101;
        }
      }
LABEL_104:
      __int16 v63 = *v18;
      Splat = llvm::ConstantInt::get(**v18, (llvm::LLVMContext *)&v141, v22);
      if ((v63[1] & 0xFE) == 0x12) {
        Splat = llvm::ConstantVector::getSplat((llvm::Type *)(*((unsigned int *)v63 + 8) | ((unint64_t)(*((_DWORD *)v63 + 2) == 19) << 32)), (uint64_t)Splat);
      }
      uint64_t v12 = v121;
      if ((*((unsigned char *)a4 + 23) & 0x10) == 0)
      {
        int v75 = 0;
        BOOL v74 = &byte_1CFBCE98E;
        goto LABEL_114;
      }
      uint64_t v65 = ***(void ***)a4;
      uint64_t v66 = *(void *)(v65 + 152);
      uint64_t v67 = *(unsigned int *)(v65 + 168);
      if (v67)
      {
        LODWORD(v68) = (v67 - 1) & ((a4 >> 4) ^ (a4 >> 9));
        unsigned int v69 = (llvm::AssumptionCache **)(v66 + 16 * v68);
        uint64_t v70 = *v69;
        if (*v69 == a4)
        {
LABEL_113:
          uint64_t v73 = v69[1];
          uint64_t v76 = *(uint64_t **)v73;
          BOOL v74 = (char *)v73 + 16;
          int v75 = v76;
LABEL_114:
          __int16 v148 = 773;
          uint64_t v144 = (uint64_t *)v74;
          unint64_t v145 = v75;
          uint64_t v146 = (uint64_t *)".simplified";
          uint64_t v38 = sub_1CB845F20(v122, 36, v18, (uint64_t)Splat, (uint64_t)&v144);
LABEL_46:
          if (v23 >= 0x41 && v26) {
            MEMORY[0x1D25D9CB0](v26, 0x1000C8000313F17);
          }
          uint64_t v13 = v124;
          goto LABEL_50;
        }
        int v71 = 1;
        while (v70 != (llvm::AssumptionCache *)-4096)
        {
          int v72 = v68 + v71++;
          uint64_t v68 = v72 & (v67 - 1);
          uint64_t v70 = *(llvm::AssumptionCache **)(v66 + 16 * v68);
          if (v70 == a4)
          {
            unsigned int v69 = (llvm::AssumptionCache **)(v66 + 16 * v68);
            goto LABEL_113;
          }
        }
      }
      unsigned int v69 = (llvm::AssumptionCache **)(v66 + 16 * v67);
      goto LABEL_113;
    }
LABEL_131:
    uint64_t v38 = 0;
LABEL_50:
    if (v139 >= 0x41 && __src) {
      MEMORY[0x1D25D9CB0](__src, 0x1000C8000313F17);
    }
LABEL_54:
    if (v142 >= 0x41 && v141) {
      MEMORY[0x1D25D9CB0](v141, 0x1000C8000313F17);
    }
    if (v38) {
      return v38;
    }
    uint64_t v10 = sub_1CC9FF148(a2, a3, 1, *(void *)(a1 + 24));
    if (v10) {
      return v10;
    }
    uint64_t v10 = sub_1CC9FF38C(a2, a3, 1, (int **)v127, *(void *)(a1 + 24));
    if (v10) {
      return v10;
    }
    uint64_t v10 = sub_1CC9FF38C(a3, a2, 1, (int **)v127, *(void *)(a1 + 24));
    if (v10) {
      return v10;
    }
    uint64_t v10 = sub_1CC9FC370(a1, a2, a3, 1);
    if (v10) {
      return v10;
    }
    uint64_t v39 = *(void *)(a2 - 64);
    uint64_t v40 = *(void *)(a3 - 64);
    if (v12 == 32)
    {
      int v44 = sub_1CBF535C4((uint64_t)&v144, *(llvm::Constant **)(a2 - 32));
      if (v13 == 32
        && v44
        && sub_1CBF535C4((uint64_t)&v141, *(llvm::Constant **)(a3 - 32))
        && *(void *)v39 == *(void *)v40)
      {
        uint64_t v45 = *(void *)(a1 + 24);
        __int16 v148 = 257;
        int64_t v46 = (llvm::Constant **)sub_1CB844AF4(v45, (void *)v39, v40, (uint64_t)&v144);
        uint64_t v47 = *(void *)(a1 + 24);
        NullValue = llvm::Constant::getNullValue(*v46, v48, v49);
        __int16 v148 = 257;
        return sub_1CB845F20(v47, 32, v46, (uint64_t)NullValue, (uint64_t)&v144);
      }
    }
    unint64_t v136 = 0;
    unint64_t v134 = 0;
    uint64_t v41 = *(unsigned __int8 **)(a2 - 32);
    uint64_t v144 = (uint64_t *)&v136;
    unint64_t v145 = 0;
    if (!sub_1CBF528D8((uint64_t)&v144, v41)) {
      return 0;
    }
    unsigned int v42 = *(unsigned __int8 **)(a3 - 32);
    unint64_t v141 = (unint64_t)&v134;
    uint64_t v142 = 0;
    uint64_t v38 = 0;
    if ((sub_1CBF528D8((uint64_t)&v141, v42) & 1) == 0) {
      return v38;
    }
    if (v12 != 32) {
      return sub_1CC9FFA60(v12, v39, v136, v13, v40, v134, *(void *)(a1 + 24), 1);
    }
    if (v13 != 32) {
      return sub_1CC9FFA60(v12, v39, v136, v13, v40, v134, *(void *)(a1 + 24), 1);
    }
    uint64_t v77 = *(void *)(a2 + 8);
    if (!v77) {
      return sub_1CC9FFA60(v12, v39, v136, v13, v40, v134, *(void *)(a1 + 24), 1);
    }
    if (*(void *)(v77 + 8)) {
      return sub_1CC9FFA60(v12, v39, v136, v13, v40, v134, *(void *)(a1 + 24), 1);
    }
    uint64_t v78 = *(void *)(a3 + 8);
    if (!v78 || *(void *)(v78 + 8)) {
      return sub_1CC9FFA60(v12, v39, v136, v13, v40, v134, *(void *)(a1 + 24), 1);
    }
    unint64_t v132 = 0;
    unsigned int v130 = 0;
    unint64_t v141 = (unint64_t)&v132;
    if (!sub_1CBC5BF18((void **)&v141, v40))
    {
LABEL_120:
      unint64_t v141 = (unint64_t)&v132;
      if (sub_1CBC5BF18((void **)&v141, v39))
      {
        uint64_t v144 = (uint64_t *)v132;
        unint64_t v145 = (uint64_t *)&v130;
        uint64_t v146 = 0;
        int v79 = *(unsigned __int8 *)(v40 + 16);
        if (v79 == 5)
        {
          if (*(_WORD *)(v40 + 18) == 28)
          {
            uint64_t v95 = v40 - 32 * (*(_DWORD *)(v40 + 20) & 0x7FFFFFF);
            if (v132 == *(llvm::ConstantInt ****)v95
              && (sub_1CBF5295C((uint64_t)&v145, *(llvm::Constant **)(v95 + 32)) & 1) != 0)
            {
              goto LABEL_177;
            }
          }
        }
        else if (v79 == 56 {
               && v132 == *(llvm::ConstantInt ****)(v40 - 64)
        }
               && sub_1CBF528D8((uint64_t)&v145, *(unsigned __int8 **)(v40 - 32)))
        {
LABEL_177:
          uint64_t v96 = (uint64_t *)&v134;
          uint64_t v97 = (uint64_t *)&v136;
LABEL_178:
          uint64_t v98 = *v97;
          if (*v97)
          {
            uint64_t v99 = *v96;
            if (*v96)
            {
              unsigned int v100 = *(_DWORD *)(v98 + 8);
              unsigned int v123 = *(_DWORD *)(v99 + 8);
              uint64_t v101 = (void *)sub_1CB8F1EEC((uint64_t)&v141, v123, 0);
              sub_1CBAB8F38(v101, 0, v100);
              if (v142 >= 0x41) {
                operator new[]();
              }
              uint64_t v103 = *v130;
              LODWORD(v145) = v142;
              uint64_t v144 = (uint64_t *)(v103 & v141);
              if ((v103 & v141) != 0)
              {
                uint64_t v12 = 32;
                uint64_t v13 = 32;
              }
              else
              {
                unsigned int v105 = v142;
                if ((*(void *)v99 & v141) != 0)
                {
                  char v106 = 0;
                  uint64_t v38 = 0;
                }
                else
                {
                  uint64_t v120 = *(void *)(a1 + 24);
                  uint64_t v107 = v132;
                  unsigned int v108 = (void *)(*v130 | v141);
                  unsigned int v139 = v142;
                  __src = v108;
                  __int16 v148 = 257;
                  unsigned int v109 = llvm::ConstantInt::get(*v132, (llvm::Type *)&__src, v102);
                  char v110 = (llvm::ConstantInt ***)sub_1CBF52474(v120, v107, (uint64_t)v109, (uint64_t)&v144);
                  if (v139 >= 0x41 && __src) {
                    MEMORY[0x1D25D9CB0](__src, 0x1000C8000313F17);
                  }
                  llvm::APInt::zext((uint64_t *)v98, v123, (uint64_t)&v125);
                  unsigned int v112 = v126;
                  if (v126 > 0x40)
                  {
                    __int16 v114 = (void *)v125;
                    uint64_t v115 = *(uint64_t **)v99;
                    unint64_t v116 = ((unint64_t)v126 + 63) >> 6;
                    do
                    {
                      uint64_t v117 = *v115++;
                      *v114++ |= v117;
                      --v116;
                    }
                    while (v116);
                    uint64_t v113 = (void *)v125;
                  }
                  else
                  {
                    uint64_t v113 = (void *)(v125 | *(void *)v99);
                    unint64_t v125 = (unint64_t)v113;
                  }
                  unsigned int v139 = v112;
                  __src = v113;
                  unsigned int v126 = 0;
                  uint64_t v118 = llvm::ConstantInt::get(*v110, (llvm::Type *)&__src, v111);
                  uint64_t v119 = *(void *)(a1 + 24);
                  __int16 v148 = 257;
                  uint64_t v38 = sub_1CB845F20(v119, 32, v110, (uint64_t)v118, (uint64_t)&v144);
                  if (v139 >= 0x41 && __src) {
                    MEMORY[0x1D25D9CB0](__src, 0x1000C8000313F17);
                  }
                  char v106 = 1;
                  unsigned int v105 = v142;
                }
                if (v105 >= 0x41)
                {
                  if (v141) {
                    MEMORY[0x1D25D9CB0](v141, 0x1000C8000313F17);
                  }
                }
                uint64_t v12 = 32;
                uint64_t v13 = 32;
                if (v106) {
                  return v38;
                }
              }
            }
          }
        }
      }
      return sub_1CC9FFA60(v12, v39, v136, v13, v40, v134, *(void *)(a1 + 24), 1);
    }
    uint64_t v144 = (uint64_t *)v132;
    unint64_t v145 = (uint64_t *)&v130;
    uint64_t v146 = 0;
    int v91 = *(unsigned __int8 *)(v39 + 16);
    if (v91 == 5)
    {
      if (*(_WORD *)(v39 + 18) != 28) {
        goto LABEL_120;
      }
      uint64_t v104 = v39 - 32 * (*(_DWORD *)(v39 + 20) & 0x7FFFFFF);
      if (v132 != *(llvm::ConstantInt ****)v104
        || (sub_1CBF5295C((uint64_t)&v145, *(llvm::Constant **)(v104 + 32)) & 1) == 0)
      {
        goto LABEL_120;
      }
    }
    else if (v91 != 56 {
           || v132 != *(llvm::ConstantInt ****)(v39 - 64)
    }
           || !sub_1CBF528D8((uint64_t)&v145, *(unsigned __int8 **)(v39 - 32)))
    {
      goto LABEL_120;
    }
    uint64_t v96 = (uint64_t *)&v136;
    uint64_t v97 = (uint64_t *)&v134;
    goto LABEL_178;
  }
  uint64_t v85 = *(_WORD *)(a2 + 18) & 0x3F;
  uint64_t v86 = *(_WORD *)(a3 + 18) & 0x3F;
  int v87 = dword_1CFB276E4[v86 - 32] & dword_1CFB276E4[v85 - 32];
  BOOL v89 = (v85 - 38) < 4 || (v86 - 38) < 4;
  uint64_t v90 = *(void *)(a1 + 24);

  return sub_1CC9FDA70(v87, v89, v15, v84, v90);
}

llvm::Instruction *sub_1CC9FDA70(int a1, int a2, void *a3, uint64_t a4, uint64_t a5)
{
  int v10 = 0;
  BOOL result = (llvm::Instruction *)llvm::getPredForICmpCode(a1, a2, (_DWORD *)*a3, &v10);
  if (!result)
  {
    v9[16] = 257;
    return sub_1CB845F20(a5, v10, a3, a4, (uint64_t)v9);
  }
  return result;
}

llvm::Instruction *sub_1CC9FDADC(uint64_t a1, _WORD *a2, llvm::Constant *a3, uint64_t a4)
{
  int v78 = *(_WORD *)(a1 + 18) & 0x3F;
  int v77 = a2[9] & 0x3F;
  long long v8 = *(llvm::Constant ***)(a1 - 64);
  if ((*((_DWORD *)*v8 + 2) & 0xFE) == 0x12) {
    int v9 = *(unsigned __int8 *)(**((void **)*v8 + 2) + 8);
  }
  else {
    int v9 = *((_DWORD *)*v8 + 2);
  }
  if (v9 != 13) {
    return 0;
  }
  uint64_t v10 = **((void **)a2 - 8);
  int v11 = (*(_DWORD *)(v10 + 8) & 0xFE) == 0x12
      ? *(unsigned __int8 *)(**(void **)(v10 + 16) + 8)
      : *(_DWORD *)(v10 + 8);
  if (v11 != 13) {
    return 0;
  }
  BOOL v74 = *(unsigned __int8 **)(a1 - 32);
  int v72 = 0;
  v82[0] = 0;
  int v14 = 0;
  AllOnesValue = 0;
  uint64_t v16 = 0;
  if ((sub_1CCA12274((uint64_t)v8, v74, &v78, (uint64_t *)&v72, v82, &v74) & 1) == 0)
  {
    int v17 = *((unsigned __int8 *)v8 + 16);
    if (v17 == 5)
    {
      if (*((_WORD *)v8 + 9) != 28) {
        goto LABEL_19;
      }
      uint64_t v19 = (uint64_t **)&v8[-4 * (*((_DWORD *)v8 + 5) & 0x7FFFFFF)];
      if (!*v19) {
        goto LABEL_19;
      }
      int v72 = *v19;
      uint64_t v18 = v19[4];
      if (!v18) {
        goto LABEL_19;
      }
    }
    else if (v17 != 56 || !*(v8 - 8) || (v72 = (uint64_t *)*(v8 - 8), (uint64_t v18 = (uint64_t *)*(v8 - 4)) == 0))
    {
LABEL_19:
      int v72 = (uint64_t *)v8;
      v82[0] = llvm::Constant::getAllOnesValue(*v8, v12, v13);
LABEL_20:
      int v14 = v74;
      int v20 = v74[16];
      if (v20 == 5)
      {
        if (*((_WORD *)v74 + 9) != 28) {
          goto LABEL_29;
        }
        __int16 v22 = &v74[-32 * (*((_DWORD *)v74 + 5) & 0x7FFFFFF)];
        unint64_t v21 = *(unsigned __int8 **)v22;
        if (!*(void *)v22) {
          goto LABEL_29;
        }
        AllOnesValue = (unsigned __int8 *)*((void *)v22 + 4);
        if (!AllOnesValue) {
          goto LABEL_29;
        }
      }
      else if (v20 != 56 {
             || (unint64_t v21 = (unsigned __int8 *)*((void *)v74 - 8)) == 0
      }
             || (AllOnesValue = (unsigned __int8 *)*((void *)v74 - 4)) == 0)
      {
LABEL_29:
        AllOnesValue = (unsigned __int8 *)llvm::Constant::getAllOnesValue(*(llvm::Constant **)v74, v12, v13);
        goto LABEL_30;
      }
      int v14 = v21;
LABEL_30:
      uint64_t v16 = (unsigned __int8 *)v8;
      goto LABEL_31;
    }
    v82[0] = v18;
    goto LABEL_20;
  }
LABEL_31:
  if ((v78 & 0xFFFFFFFE) != 0x20) {
    return 0;
  }
  uint64_t v23 = *((void *)a2 - 8);
  uint64_t v24 = (unsigned __int8 *)*((void *)a2 - 4);
  uint64_t v80 = 0;
  uint64_t v81 = (uint64_t)v24;
  int v79 = 0;
  if (sub_1CCA12274(v23, v24, &v77, &v80, &v79, &v81))
  {
    unint64_t v27 = (unsigned __int8 *)v80;
    uint64_t v28 = (uint64_t)v72;
    if ((uint64_t *)v80 == v72 || v80 == v82[0])
    {
      unint64_t v29 = &v79;
    }
    else if ((unsigned __int8 *)v80 == v14)
    {
      unint64_t v29 = &v79;
      unint64_t v27 = v14;
    }
    else if ((unsigned __int8 *)v80 == AllOnesValue)
    {
      unint64_t v29 = &v79;
      unint64_t v27 = AllOnesValue;
    }
    else
    {
      unint64_t v27 = v79;
      unint64_t v29 = (unsigned __int8 **)&v80;
      if (v79 != AllOnesValue && v79 != v14 && v79 != (unsigned __int8 *)v72 && v79 != (unsigned __int8 *)v82[0]) {
        return 0;
      }
    }
    int v71 = *v29;
    goto LABEL_70;
  }
  int v30 = *(unsigned __int8 *)(v23 + 16);
  if (v30 == 5)
  {
    if (*(_WORD *)(v23 + 18) != 28) {
      goto LABEL_53;
    }
    uint64_t v32 = v23 - 32 * (*(_DWORD *)(v23 + 20) & 0x7FFFFFF);
    unint64_t v27 = *(unsigned __int8 **)v32;
    if (!*(void *)v32) {
      goto LABEL_53;
    }
    uint64_t v80 = *(void *)v32;
    int v31 = *(unsigned __int8 **)(v32 + 32);
    if (!v31) {
      goto LABEL_53;
    }
LABEL_52:
    int v79 = v31;
    goto LABEL_54;
  }
  if (v30 == 56)
  {
    unint64_t v27 = *(unsigned __int8 **)(v23 - 64);
    if (v27)
    {
      uint64_t v80 = *(void *)(v23 - 64);
      int v31 = *(unsigned __int8 **)(v23 - 32);
      if (v31) {
        goto LABEL_52;
      }
    }
  }
LABEL_53:
  uint64_t v80 = v23;
  int v31 = (unsigned __int8 *)llvm::Constant::getAllOnesValue(*(llvm::Constant **)v23, v25, v26);
  int v79 = v31;
  unint64_t v27 = (unsigned __int8 *)v80;
LABEL_54:
  uint64_t v28 = (uint64_t)v72;
  if (v27 == (unsigned __int8 *)v72)
  {
    uint64_t v28 = (uint64_t)v27;
LABEL_69:
    int v71 = v31;
    goto LABEL_70;
  }
  if (v27 == v14) {
    goto LABEL_69;
  }
  long long v33 = (unsigned __int8 *)v82[0];
  if (v27 == (unsigned __int8 *)v82[0] || v27 == AllOnesValue) {
    goto LABEL_69;
  }
  if (v31 != AllOnesValue && v31 != v14 && v31 != (unsigned __int8 *)v72 && v31 != (unsigned __int8 *)v82[0])
  {
    if ((v77 & 0xFFFFFFFE) != 0x20) {
      return 0;
    }
    int v34 = *(unsigned __int8 *)(v81 + 16);
    if (v34 == 5)
    {
      if (*(_WORD *)(v81 + 18) != 28) {
        goto LABEL_122;
      }
      uint8x8_t v57 = (uint64_t *)(v81 - 32 * (*(_DWORD *)(v81 + 20) & 0x7FFFFFF));
      uint64_t v35 = *v57;
      if (!*v57) {
        goto LABEL_122;
      }
      uint64_t v80 = *v57;
      unint64_t v27 = (unsigned __int8 *)v57[4];
      if (!v27) {
        goto LABEL_122;
      }
    }
    else if (v34 != 56 {
           || (uint64_t v35 = *(void *)(v81 - 64)) == 0
    }
           || (v80 = *(void *)(v81 - 64), (unint64_t v27 = *(unsigned __int8 **)(v81 - 32)) == 0))
    {
LABEL_122:
      uint64_t v80 = v81;
      unint64_t v27 = (unsigned __int8 *)llvm::Constant::getAllOnesValue(*(llvm::Constant **)v81, v25, v26);
      int v79 = v27;
      uint64_t v35 = v80;
      uint64_t v28 = (uint64_t)v72;
      goto LABEL_123;
    }
    int v79 = v27;
LABEL_123:
    if ((unsigned __int8 *)v35 == v14
      || v35 == v28
      || (unsigned __int8 *)v35 == v33
      || (unsigned __int8 *)v35 == AllOnesValue)
    {
      int v71 = v27;
      unint64_t v27 = (unsigned __int8 *)v35;
    }
    else if (v27 == AllOnesValue || v27 == v14 || v27 == v33)
    {
      int v71 = (unsigned __int8 *)v35;
    }
    else
    {
      int v71 = (unsigned __int8 *)v35;
      if (v27 != (unsigned __int8 *)v28) {
        return 0;
      }
    }
    goto LABEL_72;
  }
  int v71 = v27;
  unint64_t v27 = v31;
LABEL_70:
  if ((v77 & 0xFFFFFFFE) != 0x20) {
    return 0;
  }
  uint64_t v23 = v81;
  long long v33 = (unsigned __int8 *)v82[0];
LABEL_72:
  if ((unsigned __int8 *)v28 == v27)
  {
    uint64_t v16 = v74;
  }
  else if (v33 == v27)
  {
    uint64_t v16 = v74;
    long long v33 = (unsigned __int8 *)v28;
  }
  else if (v14 == v27)
  {
    long long v33 = AllOnesValue;
  }
  else
  {
    if (AllOnesValue == v27) {
      long long v33 = v14;
    }
    else {
      long long v33 = 0;
    }
    if (AllOnesValue != v27) {
      uint64_t v16 = 0;
    }
  }
  unsigned int v36 = sub_1CCA12364(v27, v33, v16, v78);
  unsigned int v37 = sub_1CCA12364(v27, v71, (unsigned __int8 *)v23, v77);
  unsigned int v38 = v37 & v36;
  if ((v37 & v36) == 0)
  {
    if ((a3 & 1) == 0)
    {
      unsigned int v36 = (2 * v36) & 0x2AA | (v36 >> 1) & 0x155;
      unsigned int v37 = (2 * v37) & 0x2AA | (v37 >> 1) & 0x155;
    }
    if ((v36 & 0x20) != 0 && (v37 & 0x100) != 0)
    {
      unsigned int v42 = sub_1CCA126A0((llvm::ConstantInt **)a1, (llvm::Instruction *)a2, a3, (llvm::Constant *)v27, (uint64_t)v33, (uint64_t)v16, (llvm::ConstantExpr *)v71, (llvm::Constant *)v23, v77, a4);
    }
    else
    {
      if ((v36 & 0x100) == 0 || (v37 & 0x20) == 0) {
        return 0;
      }
      unsigned int v42 = sub_1CCA126A0((llvm::ConstantInt **)a2, (llvm::Instruction *)a1, a3, (llvm::Constant *)v27, (uint64_t)v71, v23, (llvm::ConstantExpr *)v33, (llvm::Constant *)v16, v78, a4);
    }
    uint64_t v40 = v42;
    if (v42) {
      return v40;
    }
    return 0;
  }
  if (a3) {
    int v39 = 32;
  }
  else {
    int v39 = 33;
  }
  if ((a3 & 1) == 0) {
    unsigned int v38 = (2 * v38) & 0x2AA | (v38 >> 1) & 0x155;
  }
  if ((v38 & 0x10) != 0)
  {
    __int16 v76 = 257;
    uint64_t v43 = sub_1CB844AF4(a4, v33, (uint64_t)v71, (uint64_t)&v74);
    __int16 v76 = 257;
    __int16 v44 = v39;
    uint64_t v45 = sub_1CBF52474(a4, v27, (uint64_t)v43, (uint64_t)&v74);
    NullValue = llvm::Constant::getNullValue(*(llvm::Constant **)v27, v46, v47);
    __int16 v76 = 257;
    uint64_t v49 = a4;
    __int16 v50 = v44;
    unint64_t v51 = v45;
    return sub_1CB845F20(v49, v50, v51, (uint64_t)NullValue, (uint64_t)&v74);
  }
  if ((v38 & 4) != 0)
  {
    __int16 v76 = 257;
    uint64_t v53 = sub_1CB844AF4(a4, v33, (uint64_t)v71, (uint64_t)&v74);
    __int16 v54 = v39;
    uint64_t v55 = v53;
    __int16 v76 = 257;
    unint64_t v51 = sub_1CBF52474(a4, v27, (uint64_t)v53, (uint64_t)&v74);
    __int16 v76 = 257;
    uint64_t v49 = a4;
    __int16 v50 = v54;
    NullValue = v55;
    return sub_1CB845F20(v49, v50, v51, (uint64_t)NullValue, (uint64_t)&v74);
  }
  if (v38)
  {
    __int16 v76 = 257;
    int v56 = sub_1CBF52474(a4, v33, (uint64_t)v71, (uint64_t)&v74);
    __int16 v76 = 257;
    unint64_t v51 = sub_1CBF52474(a4, v27, (uint64_t)v56, (uint64_t)&v74);
    __int16 v76 = 257;
    uint64_t v49 = a4;
    __int16 v50 = v39;
    NullValue = (llvm::Value *)v27;
    return sub_1CB845F20(v49, v50, v51, (uint64_t)NullValue, (uint64_t)&v74);
  }
  uint64_t v81 = 0;
  v82[0] = 0;
  BOOL v74 = (unsigned __int8 *)v82;
  uint64_t v75 = 0;
  if (!sub_1CBF528D8((uint64_t)&v74, v33)) {
    return 0;
  }
  int v70 = v39;
  int v72 = &v81;
  uint64_t v73 = 0;
  uint64_t v40 = 0;
  if ((sub_1CBF528D8((uint64_t)&v72, v71) & 1) == 0) {
    return v40;
  }
  if ((v38 & 0x28) != 0)
  {
    if (*(_DWORD *)(v82[0] + 8) >= 0x41u) {
      operator new[]();
    }
    uint64_t v41 = *(void *)v81 & *(void *)v82[0];
    if (v41 == *(void *)v82[0]) {
      return (llvm::Instruction *)a1;
    }
    if (v41 == *(void *)v81) {
      return (llvm::Instruction *)a2;
    }
  }
  if ((v38 & 2) == 0) {
    goto LABEL_136;
  }
  if (*(_DWORD *)(v82[0] + 8) >= 0x41u) {
    operator new[]();
  }
  uint64_t v59 = *(void *)v81 | *(void *)v82[0];
  if (v59 == *(void *)v82[0]) {
    return (llvm::Instruction *)a1;
  }
  uint64_t v40 = (llvm::Instruction *)a2;
  if (v59 == *(void *)v81) {
    return v40;
  }
LABEL_136:
  if ((v38 & 0x100) == 0) {
    return 0;
  }
  int v79 = 0;
  uint64_t v80 = 0;
  BOOL v74 = (unsigned __int8 *)&v80;
  uint64_t v75 = 0;
  if (!sub_1CBF528D8((uint64_t)&v74, v16)) {
    return 0;
  }
  int v72 = (uint64_t *)&v79;
  uint64_t v73 = 0;
  uint64_t v40 = 0;
  if (sub_1CBF528D8((uint64_t)&v72, (unsigned __int8 *)v23))
  {
    if (v78 == v70)
    {
      unsigned int __n = *(_DWORD *)(v80 + 8);
      if (__n > 0x40) {
        operator new[]();
      }
      unint64_t v58 = *(void *)v80;
    }
    else
    {
      unsigned int __n = *(_DWORD *)(v82[0] + 8);
      if (__n > 0x40) {
        operator new[]();
      }
      unint64_t v58 = *(void *)v80 ^ *(void *)v82[0];
    }
    unint64_t __src = v58;
    if (v77 == v70)
    {
      if (*((_DWORD *)v79 + 2) > 0x40u) {
        operator new[]();
      }
      uint64_t v60 = *(void *)v79;
    }
    else
    {
      if (*(_DWORD *)(v81 + 8) > 0x40u) {
        operator new[]();
      }
      uint64_t v60 = *(void *)v79 ^ *(void *)v81;
    }
    if (*(_DWORD *)(v82[0] + 8) > 0x40u) {
      operator new[]();
    }
    if ((*(void *)v81 & *(void *)v82[0] & (v60 ^ v58)) != 0) {
      return (llvm::Instruction *)llvm::ConstantInt::get(*(llvm::ConstantInt **)a1, a3 ^ 1, 0);
    }
    __int16 v76 = 257;
    unint64_t v61 = sub_1CB844AF4(a4, v33, (uint64_t)v71, (uint64_t)&v74);
    __int16 v76 = 257;
    unsigned int v62 = sub_1CBF52474(a4, v27, (uint64_t)v61, (uint64_t)&v74);
    __int16 v63 = *(llvm::Constant **)v27;
    LODWORD(v75) = __n;
    BOOL v74 = (unsigned __int8 *)(v60 | __src);
    uint64_t v66 = (llvm::Value *)llvm::ConstantInt::get(*(llvm::ConstantInt **)v63, (llvm::LLVMContext *)&v74, v65);
    Splat = v66;
    if ((*((_DWORD *)v63 + 2) & 0xFE) == 0x12) {
      Splat = llvm::ConstantVector::getSplat((llvm::Type *)(*((unsigned int *)v63 + 8) | ((unint64_t)(*((_DWORD *)v63 + 2) == 19) << 32)), (uint64_t)v66);
    }
    if (v75 >= 0x41 && v74) {
      MEMORY[0x1D25D9CB0](v74, 0x1000C8000313F17);
    }
    __int16 v76 = 257;
    return sub_1CB845F20(a4, v70, v62, (uint64_t)Splat, (uint64_t)&v74);
  }
  return v40;
}

llvm::Instruction *sub_1CC9FE96C(llvm::Instruction *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (result)
  {
    uint64_t v5 = (uint64_t)result;
    uint64_t v6 = (unsigned __int8 *)*((void *)result - 8);
    if (!v6) {
      return 0;
    }
    BOOL v7 = (unsigned __int8 *)*((void *)result - 4);
    if (!v7 || v7[16] > 0x14u) {
      return 0;
    }
    int v13 = *(unsigned __int8 *)(a3 + 16);
    __int16 v14 = *((_WORD *)result + 9);
    int v15 = sub_1CC16A22C(*((uint64_t ****)result - 4), 0, 0, 0, 0, 0);
    int v16 = v15;
    BOOL result = 0;
    if (!v16) {
      return result;
    }
    int v17 = v13 == 56 ? 32 : 33;
    BOOL v18 = v6[16] >= 0x15u && v17 == (v14 & 0x3F);
    if (!v18 || a2 == 0) {
      return 0;
    }
    int v20 = *(unsigned __int8 **)(a2 - 64);
    unint64_t v21 = *(unsigned __int8 **)(a2 - 32);
    if (v20 && v6 == v21)
    {
      uint64_t v22 = *(_WORD *)(a2 + 18) & 0x3F;
      unint64_t v21 = *(unsigned __int8 **)(a2 - 64);
LABEL_24:
      uint64_t v23 = sub_1CC02F0F0(v22, v21, v7, a5, (llvm::SmallPtrSetImplBase *)3);
      if (v23)
      {
LABEL_25:
        uint64_t v24 = *(unsigned __int8 *)(a3 + 16) - 28;
        __int16 v28 = 257;
        return sub_1CB844E98(a4, v24, v5, (uint64_t)v23, (uint64_t)v27, 0);
      }
      uint64_t v26 = *(void *)(a2 + 8);
      if (v26 && !*(void *)(v26 + 8))
      {
        __int16 v28 = 257;
        uint64_t v23 = sub_1CB845F20(a4, v22, v21, (uint64_t)v7, (uint64_t)v27);
        goto LABEL_25;
      }
      return 0;
    }
    BOOL result = 0;
    if (v21 && v6 == v20)
    {
      __int16 v25 = *(_WORD *)(a2 + 18);
      uint64_t v22 = v25 & 0x3F;
      switch(v25 & 0x3F)
      {
        case 2:
          uint64_t v22 = 4;
          break;
        case 3:
          uint64_t v22 = 5;
          break;
        case 4:
          uint64_t v22 = 2;
          break;
        case 5:
          uint64_t v22 = 3;
          break;
        case 0xA:
          uint64_t v22 = 12;
          break;
        case 0xB:
          uint64_t v22 = 13;
          break;
        case 0xC:
          uint64_t v22 = 10;
          break;
        case 0xD:
          uint64_t v22 = 11;
          break;
        case 0x10:
        case 0x11:
        case 0x12:
        case 0x13:
        case 0x14:
        case 0x15:
        case 0x16:
        case 0x17:
        case 0x18:
        case 0x19:
        case 0x1A:
        case 0x1B:
        case 0x1C:
        case 0x1D:
        case 0x1E:
        case 0x1F:
          __break(1u);
          JUMPOUT(0x1CC9FEB9CLL);
        case 0x22:
          uint64_t v22 = 36;
          break;
        case 0x23:
          uint64_t v22 = 37;
          break;
        case 0x24:
          uint64_t v22 = 34;
          break;
        case 0x25:
          uint64_t v22 = 35;
          break;
        case 0x26:
          uint64_t v22 = 40;
          break;
        case 0x27:
          uint64_t v22 = 41;
          break;
        case 0x28:
          uint64_t v22 = 38;
          break;
        case 0x29:
          uint64_t v22 = 39;
          break;
        default:
          goto LABEL_24;
      }
      goto LABEL_24;
    }
  }
  return result;
}

llvm::Instruction *sub_1CC9FEC44(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  __int16 v14 = (int *)&v21 + 1;
  int v15 = 53;
  uint64_t v16 = 0;
  int v17 = &v20;
  unsigned int v19 = 64;
  uint64_t v18 = 1;
  if (!a1) {
    return 0;
  }
  uint64_t v20 = 0;
  uint64_t v21 = 0;
  if (!sub_1CC045310((uint64_t)&v15, *(void *)(a1 - 64))
    || !sub_1CBF53154((llvm::APInt *)&v18, *(unsigned __int8 **)(a1 - 32)))
  {
    if (v19 >= 0x41)
    {
      if (v18) {
        MEMORY[0x1D25D9CB0](v18, 0x1000C8000313F17);
      }
    }
    return 0;
  }
  int *v14 = *(_WORD *)(a1 + 18) & 0x3F;
  if (a2)
  {
    if (v20 == *(void *)(a2 - 64) && sub_1CBF535C4((uint64_t)&v13, *(llvm::Constant **)(a2 - 32)))
    {
      LODWORD(v21) = *(_WORD *)(a2 + 18) & 0x3F;
      LOBYTE(a2) = 1;
    }
    else
    {
      LOBYTE(a2) = 0;
    }
  }
  if (v19 >= 0x41 && v18) {
    MEMORY[0x1D25D9CB0](v18, 0x1000C8000313F17);
  }
  if ((a2 & 1) == 0) {
    return 0;
  }
  int v9 = *(llvm::ConstantInt ***)(a1 - 64);
  if (a3 && HIDWORD(v21) == 33 && v21 == 33)
  {
    uint64_t v10 = llvm::ConstantInt::get(*v9, 1uLL, 0);
    LOWORD(v18) = 257;
    uint64_t v11 = a4;
    __int16 v12 = 34;
    return sub_1CB845F20(v11, v12, v9, (uint64_t)v10, (uint64_t)&v14);
  }
  BOOL result = 0;
  if (!a3 && HIDWORD(v21) == 32 && v21 == 32)
  {
    uint64_t v10 = llvm::ConstantInt::get(*v9, 2uLL, 0);
    LOWORD(v18) = 257;
    uint64_t v11 = a4;
    __int16 v12 = 36;
    return sub_1CB845F20(v11, v12, v9, (uint64_t)v10, (uint64_t)&v14);
  }
  return result;
}

llvm::Instruction *sub_1CC9FEE24(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4 = *(llvm::ConstantInt ****)(a1 - 64);
  if (v4 != *(llvm::ConstantInt ****)(a2 - 64)) {
    return 0;
  }
  unsigned int v36 = 0;
  unsigned int v37 = 0;
  int v9 = *(unsigned __int8 **)(a1 - 32);
  v32[0] = &v37;
  v32[1] = 0;
  if (!sub_1CBF528D8((uint64_t)v32, v9)) {
    return 0;
  }
  uint64_t v10 = *(unsigned __int8 **)(a2 - 32);
  int v34 = &v36;
  uint64_t v35 = 0;
  __int16 v12 = 0;
  if (sub_1CBF528D8((uint64_t)&v34, v10))
  {
    __int16 v12 = 0;
    int v13 = *(_WORD *)(a1 + 18) & 0x3F;
    if (v13 == 33) {
      int v14 = 0;
    }
    else {
      int v14 = a3;
    }
    char v15 = a3 ^ 1;
    if (v13 == 32) {
      char v15 = 0;
    }
    if ((v15 & 1) == 0 && v13 == (*(_WORD *)(a2 + 18) & 0x3F) && !v14)
    {
      int v17 = v36;
      uint64_t v16 = (llvm::LLVMContext *)v37;
      uint64_t v18 = v37[2];
      if (v18 > 0x40)
      {
        unint64_t v28 = ((unint64_t)(v18 + 63) >> 3) & 0x3FFFFFF8;
        while (v28)
        {
          unint64_t v29 = *(void *)(*(void *)v37 - 8 + v28);
          unint64_t v30 = *(void *)(*(void *)v36 - 8 + v28);
          v28 -= 8;
          if (v29 != v30)
          {
            if (v29 > v30) {
              goto LABEL_29;
            }
            break;
          }
        }
        int v31 = v36;
        int v17 = (llvm::LLVMContext *)v37;
      }
      else
      {
        if (*(void *)v37 <= *(void *)v36) {
          goto LABEL_14;
        }
LABEL_29:
        unsigned int v36 = (llvm::LLVMContext *)v37;
        unsigned int v37 = (unsigned int *)v17;
        int v31 = v16;
        LODWORD(v18) = *((_DWORD *)v17 + 2);
      }
      if (v18 >= 0x41) {
        operator new[]();
      }
      uint64_t v16 = v17;
      int v17 = v31;
LABEL_14:
      int8x8_t v19 = (int8x8_t)(*(void *)v17 ^ *(void *)v16);
      LODWORD(v35) = v18;
      int v34 = (llvm::LLVMContext **)v19;
      uint8x8_t v20 = (uint8x8_t)vcnt_s8(v19);
      v20.i16[0] = vaddlv_u8(v20);
      if (v20.u32[0] == 1)
      {
        uint64_t v21 = *v4;
        Splat = llvm::ConstantInt::get(**v4, (llvm::LLVMContext *)&v34, v11);
        if ((v21[1] & 0xFE) == 0x12) {
          Splat = llvm::ConstantVector::getSplat((llvm::Type *)(*((unsigned int *)v21 + 8) | ((unint64_t)(*((_DWORD *)v21 + 2) == 19) << 32)), (uint64_t)Splat);
        }
        __int16 v33 = 257;
        uint64_t v23 = sub_1CB844AF4(a4, v4, (uint64_t)Splat, (uint64_t)v32);
        uint64_t v24 = *v4;
        uint64_t v26 = llvm::ConstantInt::get(*v24, v36, v25);
        if ((v24[1] & 0xFE) == 0x12) {
          uint64_t v26 = llvm::ConstantVector::getSplat((llvm::Type *)(*((unsigned int *)v24 + 8) | ((unint64_t)(*((_DWORD *)v24 + 2) == 19) << 32)), (uint64_t)v26);
        }
        __int16 v33 = 257;
        __int16 v12 = sub_1CB845F20(a4, v13, v23, (uint64_t)v26, (uint64_t)v32);
        if (v35 >= 0x41 && v34) {
          MEMORY[0x1D25D9CB0](v34, 0x1000C8000313F17);
        }
        return v12;
      }
      return 0;
    }
  }
  return v12;
}

llvm::Instruction *sub_1CC9FF148(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = *(_WORD *)(a2 + 18) & 0x3F;
  uint64_t v27 = 0;
  if (a3)
  {
    if (v5 == 33) {
      uint64_t v6 = a1;
    }
    else {
      uint64_t v6 = a2;
    }
    if (v5 == 33) {
      uint64_t v7 = a2;
    }
    else {
      uint64_t v7 = a1;
    }
    uint64_t v23 = (int *)&v27 + 1;
    uint64_t v24 = &v26;
    if (v7)
    {
      if (*(void *)(v7 - 64))
      {
        uint64_t v26 = *(void *)(v7 - 64);
        if (sub_1CBF535C4((uint64_t)&v25, *(llvm::Constant **)(v7 - 32)))
        {
          *uint64_t v23 = *(_WORD *)(v7 + 18) & 0x3F;
          int v17 = &v27;
          int v18 = 53;
          uint64_t v19 = 0;
          uint64_t v20 = v26;
          unsigned int v22 = 64;
          uint64_t v21 = 2;
          BOOL v8 = 0;
          if (sub_1CCA1385C((int **)&v17, v6)) {
            BOOL v8 = v27 == 0x2100000024;
          }
          if (v22 >= 0x41)
          {
            if (v21) {
              MEMORY[0x1D25D9CB0](v21, 0x1000C8000313F17);
            }
          }
          if (v8)
          {
            int v9 = *(llvm::ConstantInt ***)(v6 - 64);
            uint64_t v10 = llvm::ConstantInt::get(*v9, 1uLL, 0);
            LOWORD(v21) = 257;
            uint64_t v11 = a4;
            __int16 v12 = 32;
            return sub_1CB845F20(v11, v12, v9, (uint64_t)v10, (uint64_t)&v17);
          }
        }
      }
    }
  }
  else
  {
    if (v5 == 32) {
      uint64_t v13 = a1;
    }
    else {
      uint64_t v13 = a2;
    }
    if (v5 == 32) {
      uint64_t v14 = a2;
    }
    else {
      uint64_t v14 = a1;
    }
    uint64_t v23 = (int *)&v27 + 1;
    uint64_t v24 = &v26;
    if (v14)
    {
      if (*(void *)(v14 - 64))
      {
        uint64_t v26 = *(void *)(v14 - 64);
        if (sub_1CBF535C4((uint64_t)&v25, *(llvm::Constant **)(v14 - 32)))
        {
          *uint64_t v23 = *(_WORD *)(v14 + 18) & 0x3F;
          int v17 = &v27;
          int v18 = 53;
          uint64_t v19 = 0;
          uint64_t v20 = v26;
          unsigned int v22 = 64;
          uint64_t v21 = 1;
          BOOL v15 = 0;
          if (sub_1CCA1385C((int **)&v17, v13)) {
            BOOL v15 = v27 == 0x2000000022;
          }
          if (v22 >= 0x41 && v21) {
            MEMORY[0x1D25D9CB0](v21, 0x1000C8000313F17);
          }
          if (v15)
          {
            int v9 = *(llvm::ConstantInt ***)(v13 - 64);
            uint64_t v10 = llvm::ConstantInt::get(*v9, 1uLL, 0);
            LOWORD(v21) = 257;
            uint64_t v11 = a4;
            __int16 v12 = 33;
            return sub_1CB845F20(v11, v12, v9, (uint64_t)v10, (uint64_t)&v17);
          }
        }
      }
    }
  }
  return 0;
}

llvm::Instruction *sub_1CC9FF38C(uint64_t a1, uint64_t a2, int a3, int **a4, uint64_t a5)
{
  int v48 = 0;
  uint64_t v49 = 0;
  __int16 v50 = &v48;
  unint64_t v51 = (int *)&v49;
  if (!sub_1CC04517C((uint64_t)&v50, a1)) {
    return 0;
  }
  int v10 = v48;
  if ((v48 & 0xFFFFFFFE) != 0x20) {
    return 0;
  }
  int v47 = 0;
  if (a2)
  {
    uint64_t v11 = *(void *)(a2 - 64);
    uint64_t v12 = *(void *)(a2 - 32);
    if (v49 == v11 && v12)
    {
      int v13 = *(_WORD *)(a2 + 18) & 0x3F;
      uint64_t v11 = *(void *)(a2 - 32);
    }
    else
    {
      if (!v11 || v49 != v12) {
        goto LABEL_67;
      }
      int v13 = *(_WORD *)(a2 + 18) & 0x3F;
      switch(*(_WORD *)(a2 + 18) & 0x3F)
      {
        case 2:
          int v13 = 4;
          break;
        case 3:
          int v13 = 5;
          break;
        case 4:
          int v13 = 2;
          break;
        case 5:
          int v13 = 3;
          break;
        case 0xA:
          int v13 = 12;
          break;
        case 0xB:
          int v13 = 13;
          break;
        case 0xC:
          int v13 = 10;
          break;
        case 0xD:
          int v13 = 11;
          break;
        case 0x10:
        case 0x11:
        case 0x12:
        case 0x13:
        case 0x14:
        case 0x15:
        case 0x16:
        case 0x17:
        case 0x18:
        case 0x19:
        case 0x1A:
        case 0x1B:
        case 0x1C:
        case 0x1D:
        case 0x1E:
        case 0x1F:
          __break(1u);
          JUMPOUT(0x1CC9FF9B8);
        case 0x22:
          int v13 = 36;
          break;
        case 0x23:
          int v13 = 37;
          break;
        case 0x24:
          int v13 = 34;
          break;
        case 0x25:
          int v13 = 35;
          break;
        case 0x26:
          int v13 = 40;
          break;
        case 0x27:
          int v13 = 41;
          break;
        case 0x28:
          int v13 = 38;
          break;
        case 0x29:
          int v13 = 39;
          break;
        default:
          break;
      }
    }
    int v47 = v13;
    int v14 = *(unsigned __int8 *)(v49 + 16);
    if (v14 == 5)
    {
      if (*(_WORD *)(v49 + 18) != 13) {
        goto LABEL_67;
      }
      int v17 = (uint64_t *)(v49 - 32 * (*(_DWORD *)(v49 + 20) & 0x7FFFFFF));
      uint64_t v16 = v17[4];
      if (v11 != *v17 || !v16)
      {
        BOOL v18 = *v17 && v11 == v16;
        uint64_t v16 = *v17;
        if (!v18) {
          goto LABEL_67;
        }
      }
    }
    else
    {
      if (v14 != 41) {
        goto LABEL_67;
      }
      uint64_t v15 = *(void *)(v49 - 64);
      uint64_t v16 = *(void *)(v49 - 32);
      if (v11 != v15 || !v16)
      {
        if (!v15) {
          goto LABEL_67;
        }
        BOOL v18 = v11 == v16;
        uint64_t v16 = *(void *)(v49 - 64);
        if (!v18) {
          goto LABEL_67;
        }
      }
    }
    uint64_t v19 = *(void *)(a1 + 8);
    if (!v19 || *(void *)(v19 + 8))
    {
      uint64_t v20 = *(void *)(a2 + 8);
      if (!v20 || *(void *)(v20 + 8)) {
        goto LABEL_67;
      }
    }
    if (v48 == 33 && v13 == 37 && a3)
    {
      LOWORD(v54) = 257;
      uint64_t v43 = sub_1CD5A6358(a5, (llvm::BinaryOperator *)v16, (uint64_t)&v50, 0, 0);
      __int16 v46 = 257;
      uint64_t v40 = (int **)v45;
      uint64_t v41 = a5;
      __int16 v42 = 36;
      goto LABEL_124;
    }
    if (v48 == 33 && v13 == 36 && a3)
    {
      uint64_t v21 = a4[3];
      uint64_t v22 = (uint64_t)a4[4];
      uint64_t v23 = a4[2];
      if (!v22 || !*(void *)(v22 + 40))
      {
        if (*(unsigned __int8 *)(v16 + 16) < 0x1Cu || (uint64_t v22 = v16, !*(void *)(v16 + 40))) {
          uint64_t v22 = 0;
        }
      }
      __int16 v50 = *a4;
      unint64_t v51 = v21;
      uint64_t v52 = v22;
      uint64_t v53 = v23;
      uint64_t v54 = 0;
      char v55 = 1;
      int v24 = sub_1CC1620B8(v16, 0, (uint64_t)&v50);
      if (v24) {
        uint64_t v25 = v11;
      }
      else {
        uint64_t v25 = v16;
      }
      if (!v24) {
        uint64_t v16 = v11;
      }
      uint64_t v26 = a4[3];
      uint64_t v27 = (uint64_t)a4[4];
      unint64_t v28 = a4[2];
      if (!v27 || !*(void *)(v27 + 40))
      {
        if (*(unsigned __int8 *)(v16 + 16) < 0x1Cu || (uint64_t v27 = v16, !*(void *)(v16 + 40))) {
          uint64_t v27 = 0;
        }
      }
      __int16 v50 = *a4;
      unint64_t v51 = v26;
      uint64_t v52 = v27;
      uint64_t v53 = v28;
      uint64_t v54 = 0;
      char v55 = 1;
      if (sub_1CC1620B8(v16, 0, (uint64_t)&v50))
      {
        LOWORD(v54) = 257;
        uint64_t v43 = sub_1CD5A6358(a5, (llvm::BinaryOperator *)v16, (uint64_t)&v50, 0, 0);
        __int16 v46 = 257;
        uint64_t v40 = (int **)v45;
        uint64_t v41 = a5;
        __int16 v42 = 36;
        goto LABEL_111;
      }
      int v13 = v47;
      int v10 = v48;
    }
    else
    {
      uint64_t v25 = v11;
    }
    if (v13 != 34 || v10 != 32 || (a3 & 1) != 0)
    {
      if (v13 != 35 || v10 != 32 || (a3 & 1) != 0) {
        goto LABEL_67;
      }
      unint64_t v29 = a4[3];
      uint64_t v30 = (uint64_t)a4[4];
      int v31 = a4[2];
      if (!v30 || !*(void *)(v30 + 40))
      {
        if (*(unsigned __int8 *)(v16 + 16) < 0x1Cu || (uint64_t v30 = v16, !*(void *)(v16 + 40))) {
          uint64_t v30 = 0;
        }
      }
      __int16 v50 = *a4;
      unint64_t v51 = v29;
      uint64_t v52 = v30;
      uint64_t v53 = v31;
      uint64_t v54 = 0;
      char v55 = 1;
      int v32 = sub_1CC1620B8(v16, 0, (uint64_t)&v50);
      if (v32) {
        uint64_t v11 = v25;
      }
      else {
        uint64_t v11 = v16;
      }
      if (!v32) {
        uint64_t v16 = v25;
      }
      __int16 v33 = a4[3];
      uint64_t v34 = (uint64_t)a4[4];
      uint64_t v35 = a4[2];
      if (!v34 || !*(void *)(v34 + 40))
      {
        if (*(unsigned __int8 *)(v16 + 16) < 0x1Cu || (uint64_t v34 = v16, !*(void *)(v16 + 40))) {
          uint64_t v34 = 0;
        }
      }
      __int16 v50 = *a4;
      unint64_t v51 = v33;
      uint64_t v52 = v34;
      uint64_t v53 = v35;
      uint64_t v54 = 0;
      char v55 = 1;
      if (!sub_1CC1620B8(v16, 0, (uint64_t)&v50)) {
        goto LABEL_67;
      }
      LOWORD(v54) = 257;
      uint64_t v43 = sub_1CD5A6358(a5, (llvm::BinaryOperator *)v16, (uint64_t)&v50, 0, 0);
      __int16 v46 = 257;
      uint64_t v40 = (int **)v45;
      uint64_t v41 = a5;
      __int16 v42 = 35;
LABEL_124:
      uint64_t v44 = v11;
      return sub_1CB845F20(v41, v42, v43, v44, (uint64_t)v40);
    }
    LOWORD(v54) = 257;
    uint64_t v43 = sub_1CD5A6358(a5, (llvm::BinaryOperator *)v16, (uint64_t)&v50, 0, 0);
    __int16 v46 = 257;
    uint64_t v40 = (int **)v45;
    uint64_t v41 = a5;
    __int16 v42 = 35;
LABEL_111:
    uint64_t v44 = v25;
    return sub_1CB845F20(v41, v42, v43, v44, (uint64_t)v40);
  }
LABEL_67:
  int v36 = *(unsigned __int8 *)(v49 + 16);
  if (v36 == 5)
  {
    if (*(_WORD *)(v49 + 18) != 15) {
      return 0;
    }
    unsigned int v38 = (int **)(v49 - 32 * (*(_DWORD *)(v49 + 20) & 0x7FFFFFF));
    unsigned int v37 = *v38;
    if (!*v38) {
      return 0;
    }
    uint64_t v11 = (uint64_t)v38[4];
    if (!v11) {
      return 0;
    }
  }
  else
  {
    if (v36 != 43) {
      return 0;
    }
    unsigned int v37 = *(int **)(v49 - 64);
    if (!v37) {
      return 0;
    }
    uint64_t v11 = *(void *)(v49 - 32);
    if (!v11) {
      return 0;
    }
  }
  __int16 v50 = &v47;
  unint64_t v51 = v37;
  uint64_t v52 = v11;
  if (!sub_1CD497CC8((uint64_t)&v50, a2) || (v47 - 34) >= 4) {
    return 0;
  }
  if ((v47 & 0xFFFFFFFE) == 0x22 && v48 == 33 && a3)
  {
    LOWORD(v54) = 257;
    uint64_t v40 = &v50;
    uint64_t v41 = a5;
    __int16 v42 = 34;
LABEL_123:
    uint64_t v43 = (llvm::Instruction *)v37;
    goto LABEL_124;
  }
  if ((v47 & 0xFFFFFFFE) == 0x24 && v48 == 32 && (a3 & 1) == 0)
  {
    LOWORD(v54) = 257;
    uint64_t v40 = &v50;
    uint64_t v41 = a5;
    __int16 v42 = 37;
    goto LABEL_123;
  }
  if (v47 == 37 && v48 == 33 && a3)
  {
    LOWORD(v54) = 257;
    uint64_t v40 = &v50;
    uint64_t v41 = a5;
    __int16 v42 = 36;
    goto LABEL_123;
  }
  BOOL result = 0;
  if (v47 == 34 && v48 == 32 && (a3 & 1) == 0)
  {
    LOWORD(v54) = 257;
    uint64_t v40 = &v50;
    uint64_t v41 = a5;
    __int16 v42 = 35;
    goto LABEL_123;
  }
  return result;
}

llvm::Instruction *sub_1CC9FFA60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v13 = (llvm::Instruction *)a2;
  uint64_t v53 = 0;
  uint64_t v54 = 0;
  if (a2 == a5) {
    goto LABEL_22;
  }
  uint64_t v15 = a5;
  uint64_t v40 = v33;
  uint64_t v41 = &v54;
  uint64_t v42 = 0;
  int v16 = *(unsigned __int8 *)(a2 + 16);
  if (v16 != 5)
  {
    if (v16 != 41) {
      goto LABEL_11;
    }
    if (!*(void *)(a2 - 64)) {
      goto LABEL_11;
    }
    v33[0] = *(void *)(a2 - 64);
    if (!sub_1CBF528D8((uint64_t)&v41, *(unsigned __int8 **)(a2 - 32))) {
      goto LABEL_11;
    }
LABEL_10:
    int v13 = (llvm::Instruction *)v33[0];
    goto LABEL_11;
  }
  if (*(_WORD *)(a2 + 18) == 13)
  {
    uint64_t v17 = a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF);
    if (*(void *)v17)
    {
      v33[0] = *(void *)v17;
      if (sub_1CBF5295C((uint64_t)&v41, *(llvm::Constant **)(v17 + 32))) {
        goto LABEL_10;
      }
    }
  }
LABEL_11:
  uint64_t v40 = v33;
  uint64_t v41 = &v53;
  uint64_t v42 = 0;
  int v18 = *(unsigned __int8 *)(v15 + 16);
  if (v18 != 5)
  {
    if (v18 != 41) {
      goto LABEL_20;
    }
    if (!*(void *)(v15 - 64)) {
      goto LABEL_20;
    }
    v33[0] = *(void *)(v15 - 64);
    if (!sub_1CBF528D8((uint64_t)&v41, *(unsigned __int8 **)(v15 - 32))) {
      goto LABEL_20;
    }
LABEL_19:
    uint64_t v15 = v33[0];
    goto LABEL_20;
  }
  if (*(_WORD *)(v15 + 18) == 13)
  {
    uint64_t v19 = v15 - 32 * (*(_DWORD *)(v15 + 20) & 0x7FFFFFF);
    if (*(void *)v19)
    {
      v33[0] = *(void *)v19;
      if (sub_1CBF5295C((uint64_t)&v41, *(llvm::Constant **)(v19 + 32))) {
        goto LABEL_19;
      }
    }
  }
LABEL_20:
  if (v13 != (llvm::Instruction *)v15) {
    return 0;
  }
LABEL_22:
  llvm::ConstantRange::makeExactICmpRegion(a1, a3, (uint64_t)&v49);
  if (v54)
  {
    llvm::ConstantRange::subtract((unsigned int *)&v49, v54, &v40);
    if (v50 >= 0x41 && v49) {
      MEMORY[0x1D25D9CB0](v49, 0x1000C8000313F17);
    }
    uint64_t v49 = v40;
    unsigned int v50 = v41;
    LODWORD(v41) = 0;
    if (v52 >= 0x41 && v51)
    {
      MEMORY[0x1D25D9CB0](v51, 0x1000C8000313F17);
      uint64_t v51 = v42;
      unsigned int v52 = v43;
      unsigned int v43 = 0;
      if (v41 >= 0x41 && v40) {
        MEMORY[0x1D25D9CB0](v40, 0x1000C8000313F17);
      }
    }
    else
    {
      uint64_t v51 = v42;
      unsigned int v52 = v43;
    }
  }
  llvm::ConstantRange::makeExactICmpRegion(a4, a6, (uint64_t)&v45);
  if (v53)
  {
    llvm::ConstantRange::subtract((unsigned int *)&v45, v53, &v40);
    if (v46 >= 0x41 && v45) {
      MEMORY[0x1D25D9CB0](v45, 0x1000C8000313F17);
    }
    uint64_t v45 = v40;
    unsigned int v46 = v41;
    LODWORD(v41) = 0;
    if (v48 >= 0x41 && v47)
    {
      MEMORY[0x1D25D9CB0](v47, 0x1000C8000313F17);
      uint64_t v47 = v42;
      unsigned int v48 = v43;
      unsigned int v43 = 0;
      if (v41 >= 0x41 && v40) {
        MEMORY[0x1D25D9CB0](v40, 0x1000C8000313F17);
      }
    }
    else
    {
      uint64_t v47 = v42;
      unsigned int v48 = v43;
    }
  }
  if (a8) {
    llvm::ConstantRange::exactIntersectWith((llvm::ConstantRange *)&v49, (const llvm::ConstantRange *)&v45, (uint64_t)&v40);
  }
  else {
    llvm::ConstantRange::exactUnionWith((llvm::ConstantRange *)&v49, (const llvm::ConstantRange *)&v45, (uint64_t)&v40);
  }
  if (v44)
  {
    int v39 = 0;
    unsigned int v38 = 1;
    uint64_t v37 = 0;
    unsigned int v36 = 1;
    uint64_t v35 = 0;
    llvm::ConstantRange::getEquivalentICmp((llvm::ConstantRange *)&v40, &v39, (unsigned int *)&v37, (uint64_t)&v35);
    uint64_t v22 = *(void *)v13;
    uint64_t v23 = v35;
    if (v36 >= 0x41)
    {
      int v24 = 0;
      int64_t v25 = ((unint64_t)v36 + 63) >> 6;
      do
      {
        if (v25-- < 1) {
          break;
        }
        unint64_t v27 = v35[v25];
        v24 += __clz(v27);
      }
      while (!v27);
      unsigned int v28 = v36 | 0xFFFFFFC0;
      if ((v36 & 0x3F) == 0) {
        unsigned int v28 = 0;
      }
      if (v36 - v24 - v28 > 0x40) {
        goto LABEL_43;
      }
      uint64_t v23 = (void *)*v35;
    }
    if (!v23)
    {
LABEL_46:
      __int16 v30 = v39;
      Splat = llvm::ConstantInt::get(*(llvm::ConstantInt **)v22, (llvm::LLVMContext *)&v37, v21);
      if ((*(_DWORD *)(v22 + 8) & 0xFE) == 0x12) {
        Splat = llvm::ConstantVector::getSplat((llvm::Type *)(*(unsigned int *)(v22 + 32) | ((unint64_t)(*(_DWORD *)(v22 + 8) == 19) << 32)), (uint64_t)Splat);
      }
      __int16 v34 = 257;
      uint64_t v20 = sub_1CB845F20(a7, v30, v13, (uint64_t)Splat, (uint64_t)v33);
      if (v36 >= 0x41 && v35) {
        MEMORY[0x1D25D9CB0](v35, 0x1000C8000313F17);
      }
      if (v38 >= 0x41 && v37) {
        MEMORY[0x1D25D9CB0](v37, 0x1000C8000313F17);
      }
      if (v44)
      {
        if (v43 >= 0x41 && v42) {
          MEMORY[0x1D25D9CB0](v42, 0x1000C8000313F17);
        }
        if (v41 >= 0x41 && v40) {
          MEMORY[0x1D25D9CB0](v40, 0x1000C8000313F17);
        }
      }
      goto LABEL_60;
    }
LABEL_43:
    unint64_t v29 = llvm::ConstantInt::get(*(llvm::ConstantInt **)v22, (llvm::LLVMContext *)&v35, v21);
    if ((*(_DWORD *)(v22 + 8) & 0xFE) == 0x12) {
      unint64_t v29 = llvm::ConstantVector::getSplat((llvm::Type *)(*(unsigned int *)(v22 + 32) | ((unint64_t)(*(_DWORD *)(v22 + 8) == 19) << 32)), (uint64_t)v29);
    }
    __int16 v34 = 257;
    int v13 = sub_1CB844A3C(a7, v13, (uint64_t)v29, (uint64_t)v33, 0, 0);
    goto LABEL_46;
  }
  uint64_t v20 = 0;
LABEL_60:
  if (v48 >= 0x41 && v47) {
    MEMORY[0x1D25D9CB0](v47, 0x1000C8000313F17);
  }
  if (v46 >= 0x41 && v45) {
    MEMORY[0x1D25D9CB0](v45, 0x1000C8000313F17);
  }
  if (v52 >= 0x41 && v51) {
    MEMORY[0x1D25D9CB0](v51, 0x1000C8000313F17);
  }
  if (v50 >= 0x41 && v49) {
    MEMORY[0x1D25D9CB0](v49, 0x1000C8000313F17);
  }
  return v20;
}

llvm::Instruction *sub_1CCA00074(uint64_t a1, uint64_t a2, uint64_t a3, int a4, char a5)
{
  uint64_t v6 = *(llvm::Constant **)(a2 - 64);
  uint64_t v7 = *(llvm::Constant **)(a2 - 32);
  BOOL v8 = *(llvm::Constant **)(a3 - 64);
  int v9 = *(llvm::Constant **)(a3 - 32);
  __int16 v10 = *(_WORD *)(a2 + 18);
  int v11 = *(_WORD *)(a3 + 18) & 0x3F;
  if (v6 == v9 && v8 == v7)
  {
    uint64_t v32 = a1;
    int v33 = a4;
    uint64_t v34 = a3;
    uint64_t v35 = a2;
    int SwappedPredicate = llvm::CmpInst::getSwappedPredicate(*(_WORD *)(a3 + 18) & 0x3F);
    a2 = v35;
    a3 = v34;
    a4 = v33;
    int v11 = SwappedPredicate;
    a1 = v32;
    int v9 = v7;
    BOOL v8 = v6;
  }
  int v13 = v10 & 0x3F;
  if (v6 != v8 || v7 != v9)
  {
    if ((a5 & 1) == 0)
    {
      if (v13 != 7 || v11 != 7 || a4 == 0)
      {
        PredForFCmpCode = 0;
        BOOL v18 = v13 == 8 && v11 == 8;
        if (!v18 || (a4 & 1) != 0) {
          return (llvm::Instruction *)PredForFCmpCode;
        }
      }
      unsigned int v39 = v10 & 0x3F;
      uint64_t v38 = (uint64_t)v8;
      if (*(void *)v6 == *(void *)v8)
      {
        __int16 v30 = v9;
        uint64_t v31 = a1;
        if (sub_1CC04C850((uint64_t)v40, v7) && sub_1CC04C850((uint64_t)&v42, v30))
        {
          uint64_t v37 = *(void *)(v31 + 24);
          __int16 v41 = 257;
          return llvm::IRBuilderBase::CreateFCmpHelper(v37, v39, (uint64_t)v6, v38, (uint64_t)v40, 0, 0);
        }
      }
    }
    return 0;
  }
  int v20 = v11 & v13;
  int v21 = v11 | v13;
  if (a4) {
    int v21 = v20;
  }
  uint64_t v22 = *(void *)(a1 + 24);
  int v23 = *(_DWORD *)(v22 + 96);
  uint64_t v24 = *(void *)(v22 + 88);
  char v25 = *(unsigned char *)(v22 + 100);
  char v26 = *(unsigned char *)(v22 + 101);
  char v27 = *(unsigned char *)(v22 + 102);
  int v28 = *(unsigned __int8 *)(a2 + 17) >> 1;
  if (v28 == 127) {
    int v28 = -1;
  }
  int v29 = *(unsigned __int8 *)(a3 + 17) >> 1;
  if (v29 == 127) {
    int v29 = -1;
  }
  *(_DWORD *)(v22 + 96) = v29 & v28;
  unsigned int v42 = 0;
  PredForFCmpCode = llvm::getPredForFCmpCode(v21, *(_DWORD **)v6, &v42);
  if (!PredForFCmpCode)
  {
    __int16 v41 = 257;
    PredForFCmpCode = llvm::IRBuilderBase::CreateFCmpHelper(v22, v42, (uint64_t)v6, (uint64_t)v7, (uint64_t)v40, 0, 0);
  }
  *(_DWORD *)(v22 + 96) = v23;
  *(void *)(v22 + 88) = v24;
  *(unsigned char *)(v22 + 100) = v25;
  *(unsigned char *)(v22 + 101) = v26;
  *(unsigned char *)(v22 + 102) = v27;
  return (llvm::Instruction *)PredForFCmpCode;
}

BOOL sub_1CCA00278(uint64_t a1, void *a2)
{
  uint64_t v3 = *(a2 - 4);
  BOOL result = 0;
  if (*(void *)v3 != *a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(v3 + 16);
    if (v4 >= 0x15)
    {
      BOOL v5 = v4 >= 0x1C && v4 - 79 >= 0xFFFFFFF3;
      if (!v5 || !sub_1CCA395B0(a1, (uint64_t *)v3, (uint64_t)a2)) {
        return 1;
      }
    }
  }
  return result;
}

llvm::Instruction *sub_1CCA002D4(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2 = *((void *)a2 - 8);
  unsigned int v3 = *(unsigned __int8 *)(v2 + 16);
  if (v2) {
    BOOL v4 = v3 >= 0x1C;
  }
  else {
    BOOL v4 = 0;
  }
  if (!v4 || v3 - 79 < 0xFFFFFFF3) {
    return 0;
  }
  uint64_t v8 = **(void **)(v2 - 32);
  int v9 = (*(_DWORD *)(v8 + 8) & 0xFE) == 0x12
     ? *(unsigned __int8 *)(**(void **)(v8 + 16) + 8)
     : *(_DWORD *)(v8 + 8);
  if (v9 != 13) {
    return 0;
  }
  uint64_t v10 = a2[16] - 28;
  int v11 = (unsigned __int8 *)*((void *)a2 - 4);
  uint64_t v12 = *(llvm::Type **)a2;
  if (v11)
  {
    if (v11[16] <= 0x14u)
    {
      uint64_t v13 = *(void *)(v2 + 8);
      if (v13)
      {
        uint64_t v14 = *(void *)(a1 + 24);
        uint64_t v15 = *(void *)(v13 + 8);
        if (v3 == 67 && v15 == 0)
        {
          int v17 = *(_DWORD *)(v2 + 20);
          if ((v17 & 0x40000000) != 0) {
            BOOL v18 = *(uint64_t **)(v2 - 8);
          }
          else {
            BOOL v18 = (uint64_t *)(v2 - 32 * (v17 & 0x7FFFFFF));
          }
          uint64_t v19 = *v18;
          if (*v18)
          {
            int v20 = sub_1CC56C0C0((llvm *)0x26, *((llvm::detail::IEEEFloat **)a2 - 4), **(llvm::Constant ***)(v2 - 32), 0);
            if (sub_1CC56C0C0((llvm *)0x27, v20, v12, 0) == (llvm::detail::IEEEFloat *)v11)
            {
              __int16 v60 = 257;
              char v26 = sub_1CB844E98(v14, v10, v19, (uint64_t)v20, (uint64_t)v59, 0);
              char v27 = operator new(0x60uLL);
              v27[13] = v27[13] & 0x38000000 | 1;
              *(void *)char v27 = 0;
              *((void *)v27 + 1) = 0;
              *((void *)v27 + 2) = 0;
              *((void *)v27 + 3) = v27 + 8;
              __int16 v60 = 257;
              return llvm::ZExtInst::ZExtInst((llvm::ZExtInst *)(v27 + 8), v26, v12, v59, 0);
            }
            uint64_t v21 = *(void *)(v2 + 8);
            if (!v21 || *(void *)(v21 + 8)) {
              goto LABEL_39;
            }
          }
        }
        else if (v15)
        {
          goto LABEL_39;
        }
        unsigned int v22 = *(unsigned __int8 *)(v2 + 16);
        if (v22 > 0x1B) {
          unsigned int v23 = v22 - 28;
        }
        else {
          unsigned int v23 = *(unsigned __int16 *)(v2 + 18);
        }
        if (v23 == 40)
        {
          int v24 = *(_DWORD *)(v2 + 20);
          char v25 = (v24 & 0x40000000) != 0 ? *(uint64_t **)(v2 - 8) : (uint64_t *)(v2 - 32 * (v24 & 0x7FFFFFF));
          uint64_t v29 = *v25;
          if (*v25)
          {
            __int16 v30 = sub_1CC56C0C0((llvm *)0x26, (llvm::detail::IEEEFloat *)v11, (llvm::Constant *)v8, 0);
            if (sub_1CC56C0C0((llvm *)0x28, v30, v12, 0) == (llvm::detail::IEEEFloat *)v11)
            {
              __int16 v60 = 257;
              unsigned int v52 = sub_1CB844E98(v14, v10, v29, (uint64_t)v30, (uint64_t)v59, 0);
              uint64_t v53 = operator new(0x60uLL);
              v53[13] = v53[13] & 0x38000000 | 1;
              *(void *)uint64_t v53 = 0;
              *((void *)v53 + 1) = 0;
              *((void *)v53 + 2) = 0;
              *((void *)v53 + 3) = v53 + 8;
              __int16 v60 = 257;
              return llvm::SExtInst::SExtInst((llvm::SExtInst *)(v53 + 8), v52, v12, v59, 0);
            }
          }
        }
      }
    }
  }
LABEL_39:
  BOOL result = 0;
  if (v11)
  {
    unsigned int v31 = v11[16];
    if (v31 >= 0x1C && v31 - 79 >= 0xFFFFFFF3)
    {
      int v33 = *(unsigned __int8 *)(v2 + 16);
      if (v33 != v31) {
        return 0;
      }
      uint64_t v34 = *((void *)v11 - 4);
      if (v8 != *(void *)v34) {
        return 0;
      }
      int v35 = v33 - 28;
      uint64_t v36 = *(void *)(v2 - 32);
      if (!sub_1CCA00278(a1, (void *)v2) || !sub_1CCA00278(a1, v11))
      {
        if (v10 == 30) {
          return 0;
        }
        int v46 = *(unsigned __int8 *)(v36 + 16);
        if (v46 == 81) {
          uint64_t v47 = v36;
        }
        else {
          uint64_t v47 = 0;
        }
        int v48 = *(unsigned __int8 *)(v34 + 16);
        if (v48 == 81) {
          uint64_t v49 = v34;
        }
        else {
          uint64_t v49 = 0;
        }
        if (v47 && v48 == 81)
        {
          if (v10 == 28) {
            unsigned int v50 = sub_1CC9FC9A4(a1, v47, v49, (llvm::AssumptionCache *)a2);
          }
          else {
            unsigned int v50 = sub_1CCA00728(a1, v47, v49, (llvm::AssumptionCache *)a2);
          }
          uint64_t v54 = (uint64_t)v50;
          if (!v50) {
            return 0;
          }
LABEL_84:
          __int16 v60 = 257;
          return llvm::CastInst::Create(v35, v54, (uint64_t)v12, v59, 0);
        }
        BOOL result = 0;
        if (v46 == 82) {
          uint64_t v51 = v36;
        }
        else {
          uint64_t v51 = 0;
        }
        if (!v51) {
          return result;
        }
        if (v48 != 82) {
          return result;
        }
        BOOL result = sub_1CCA00074(a1, v51, v34, v10 == 28, 0);
        if (!result) {
          return result;
        }
LABEL_83:
        uint64_t v54 = (uint64_t)result;
        goto LABEL_84;
      }
      uint64_t v37 = *(void *)(a1 + 24);
      if ((a2[23] & 0x10) == 0)
      {
        uint8x8_t v57 = 0;
        int v56 = &byte_1CFBCE98E;
        goto LABEL_82;
      }
      uint64_t v38 = ***(void ***)a2;
      uint64_t v39 = *(void *)(v38 + 152);
      uint64_t v40 = *(unsigned int *)(v38 + 168);
      if (v40)
      {
        LODWORD(v41) = (v40 - 1) & ((a2 >> 4) ^ (a2 >> 9));
        unsigned int v42 = (unsigned __int8 **)(v39 + 16 * v41);
        unsigned int v43 = *v42;
        if (*v42 == a2)
        {
LABEL_81:
          char v55 = v42[1];
          unint64_t v58 = *(const char **)v55;
          int v56 = (const char *)(v55 + 16);
          uint8x8_t v57 = v58;
LABEL_82:
          __int16 v60 = 261;
          v59[0] = v56;
          v59[1] = v57;
          BOOL result = sub_1CB844E98(v37, v10, v36, v34, (uint64_t)v59, 0);
          goto LABEL_83;
        }
        int v44 = 1;
        while (v43 != (unsigned __int8 *)-4096)
        {
          int v45 = v41 + v44++;
          uint64_t v41 = v45 & (v40 - 1);
          unsigned int v43 = *(unsigned __int8 **)(v39 + 16 * v41);
          if (v43 == a2)
          {
            unsigned int v42 = (unsigned __int8 **)(v39 + 16 * v41);
            goto LABEL_81;
          }
        }
      }
      unsigned int v42 = (unsigned __int8 **)(v39 + 16 * v40);
      goto LABEL_81;
    }
  }
  return result;
}

llvm::Instruction *sub_1CCA00728(uint64_t a1, uint64_t a2, uint64_t a3, llvm::AssumptionCache *a4)
{
  long long v8 = *(_OWORD *)(a1 + 120);
  long long v9 = *(_OWORD *)(a1 + 104);
  v153[0] = *(_OWORD *)(a1 + 88);
  v153[1] = v9;
  uint64_t v155 = *((void *)&v8 + 1);
  uint64_t v154 = a4;
  uint64_t v10 = sub_1CC9FBFF0(a1, a2, a3, a4, 0, 0);
  if (v10) {
    return v10;
  }
  uint64_t v11 = *(void *)(a2 - 64);
  __int16 v12 = *(_WORD *)(a2 + 18);
  unsigned int v132 = v12 & 0x3F;
  unsigned int v133 = *(_WORD *)(a3 + 18) & 0x3F;
  uint64_t v131 = *(void *)(a3 - 64);
  uint64_t v13 = *(void *)(a2 - 32);
  uint64_t v14 = *(void *)(a3 - 32);
  uint64_t v151 = 0;
  uint64_t v152 = 0;
  unsigned int v137 = (uint64_t *)&v152;
  v138[0] = 0;
  sub_1CBF528D8((uint64_t)&v137, (unsigned __int8 *)v13);
  unsigned int v137 = &v151;
  v138[0] = 0;
  sub_1CBF528D8((uint64_t)&v137, (unsigned __int8 *)v14);
  int v15 = v12 & 0x3E;
  if (v15 == 36 && v132 == v133)
  {
    if (v152)
    {
      if (v151)
      {
        uint64_t v16 = *(void *)(a2 + 8);
        if (v16)
        {
          if (!*(void *)(v16 + 8))
          {
            uint64_t v19 = *(void *)(a3 + 8);
            if (v19)
            {
              if (!*(void *)(v19 + 8))
              {
                uint64_t v20 = *((unsigned int *)v152 + 2);
                if (v20 == *(_DWORD *)(v151 + 8))
                {
                  if (v20 > 0x40)
                  {
                    if (memcmp(*v152, *(const void **)v151, ((unint64_t)(v20 + 63) >> 3) & 0x3FFFFFF8)) {
                      goto LABEL_8;
                    }
                  }
                  else if (*v152 != *(const void **)v151)
                  {
                    goto LABEL_8;
                  }
                  int v149 = 0;
                  int v150 = 0;
                  __int16 v148 = 0;
                  unsigned int v137 = (uint64_t *)&v150;
                  v138[0] = &v149;
                  v138[1] = 0;
                  int v23 = *(unsigned __int8 *)(v11 + 16);
                  int v130 = 36;
                  if (v23 == 5)
                  {
                    if (*(_WORD *)(v11 + 18) != 13) {
                      goto LABEL_150;
                    }
                    uint64_t v24 = v11 - 32 * (*(_DWORD *)(v11 + 20) & 0x7FFFFFF);
                    if (!*(void *)v24) {
                      goto LABEL_150;
                    }
                    int v150 = *(void **)v24;
                    if ((sub_1CBF5295C((uint64_t)v138, *(llvm::Constant **)(v24 + 32)) & 1) == 0) {
                      goto LABEL_150;
                    }
                  }
                  else
                  {
                    if (v23 != 41) {
                      goto LABEL_150;
                    }
                    if (!*(void *)(v11 - 64)) {
                      goto LABEL_150;
                    }
                    int v150 = *(void **)(v11 - 64);
                    if (!sub_1CBF528D8((uint64_t)v138, *(unsigned __int8 **)(v11 - 32))) {
                      goto LABEL_150;
                    }
                  }
                  unint64_t v134 = v150;
                  v135[0] = &v148;
                  v135[1] = 0;
                  int v25 = *(unsigned __int8 *)(v131 + 16);
                  if (v25 == 5)
                  {
                    if (*(_WORD *)(v131 + 18) != 13) {
                      goto LABEL_150;
                    }
                    uint64_t v60 = v131 - 32 * (*(_DWORD *)(v131 + 20) & 0x7FFFFFF);
                    if (v150 != *(void **)v60
                      || !sub_1CBF5295C((uint64_t)v135, *(llvm::Constant **)(v60 + 32)))
                    {
                      goto LABEL_150;
                    }
                  }
                  else if (v25 != 41 {
                         || v150 != *(void **)(v131 - 64)
                  }
                         || (sub_1CBF528D8((uint64_t)v135, *(unsigned __int8 **)(v131 - 32)) & 1) == 0)
                  {
                    goto LABEL_150;
                  }
                  uint64_t v61 = v149[2];
                  if (v61 > 0x40)
                  {
                    unsigned int v62 = (char *)*v152;
                    unint64_t v93 = ((unint64_t)(v61 + 63) >> 3) & 0x3FFFFFF8;
                    while (v93)
                    {
                      unint64_t v94 = *(void *)(*(void *)v149 - 8 + v93);
                      unint64_t v95 = *(void *)&v62[v93 - 8];
                      v93 -= 8;
                      BOOL v63 = v94 > v95;
                      if (v94 != v95) {
                        goto LABEL_149;
                      }
                    }
                    goto LABEL_150;
                  }
                  unsigned int v62 = (char *)*v152;
                  BOOL v63 = *(void *)v149 > (unint64_t)*v152;
LABEL_149:
                  if (!v63) {
                    goto LABEL_150;
                  }
                  uint64_t v64 = v148[2];
                  if (v64 > 0x40)
                  {
                    uint64_t v97 = v62 - 8;
                    unint64_t v98 = ((unint64_t)(v64 + 63) >> 3) & 0x3FFFFFF8;
                    while (v98)
                    {
                      unint64_t v99 = *(void *)(*(void *)v148 - 8 + v98);
                      unint64_t v100 = *(void *)&v97[v98];
                      v98 -= 8;
                      BOOL v65 = v99 > v100;
                      if (v99 != v100) {
                        goto LABEL_153;
                      }
                    }
                    goto LABEL_150;
                  }
                  BOOL v65 = *(void *)v148 > (unint64_t)v62;
                  if (*(void *)v148 < (unint64_t)v62)
                  {
LABEL_150:
                    int v15 = v130;
                    goto LABEL_8;
                  }
LABEL_153:
                  if (!v65) {
                    goto LABEL_150;
                  }
                  unsigned int v123 = v149[2];
                  if (v123 >= 0x41) {
                    operator new[]();
                  }
                  int8x8_t v127 = (int8x8_t)(*(void *)v148 ^ *(void *)v149);
                  uint8x8_t v66 = (uint8x8_t)vcnt_s8(v127);
                  v66.i16[0] = vaddlv_u8(v66);
                  if (v66.u32[0] != 1)
                  {
                    uint64_t v10 = 0;
                    goto LABEL_227;
                  }
                  uint64_t v118 = (llvm::Instruction *)v148;
                  if (*(void *)v149 >= *(void *)v148) {
                    uint64_t v118 = (llvm::Instruction *)v149;
                  }
                  unsigned int v75 = v148[2];
                  unsigned int v147 = v75;
                  if (v75 > 0x40) {
                    operator new[]();
                  }
                  unint64_t v76 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v75;
                  if (!v75) {
                    unint64_t v76 = 0;
                  }
                  unint64_t v146 = v76 & ~*(void *)v148;
LABEL_188:
                  llvm::APInt::operator++((uint64_t)&v146);
                  unsigned int v77 = v147;
                  unint64_t __src = v146;
                  unsigned int v147 = 0;
                  unsigned int __n = v77;
                  if (v77 >= 0x41) {
                    operator new[]();
                  }
                  if (v77) {
                    unint64_t v78 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v77;
                  }
                  else {
                    unint64_t v78 = 0;
                  }
                  unint64_t v121 = v78 & ((unint64_t)*v152 + v146);
                  unsigned int v79 = v149[2];
                  unsigned int v145 = v79;
                  if (v79 > 0x40) {
                    operator new[]();
                  }
                  unint64_t v80 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v79;
                  if (!v79) {
                    unint64_t v80 = 0;
                  }
                  unint64_t v144 = v80 & ~*(void *)v149;
                  llvm::APInt::operator++((uint64_t)&v144);
                  unsigned int v82 = v145;
                  size_t v124 = v145;
                  unint64_t v125 = (void *)v144;
                  unsigned int v145 = 0;
                  if (v82 >= 0x41) {
                    operator new[]();
                  }
                  unint64_t v83 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v124;
                  if (!v124) {
                    unint64_t v83 = 0;
                  }
                  size_t v120 = v83 & ((unint64_t)*v152 + v144);
                  if (__n > 0x40) {
                    operator new[]();
                  }
                  __s1 = (void *)(v144 ^ __src);
                  if (v124 <= 0x40)
                  {
                    if ((uint64_t)(v144 << -(char)v124) >> -(char)v124 > (uint64_t)(__src << -(char)v124) >> -(char)v124)
                    {
                      int v143 = v124;
                      unint64_t v90 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v124;
                      if (!v124) {
                        unint64_t v90 = 0;
                      }
                      size_t v119 = v90 & (v144 - __src);
                      int v143 = 0;
LABEL_214:
                      uint8x8_t v91 = (uint8x8_t)vcnt_s8((int8x8_t)__s1);
                      v91.i16[0] = vaddlv_u8(v91);
                      if (v91.u32[0] == 1 && __s1 == (void *)(v120 ^ v121))
                      {
                        if (v119 > (unint64_t)*v152)
                        {
                          uint64_t v117 = *v150;
                          unsigned int v141 = v123;
                          if (v123 > 0x40) {
                            operator new[]();
                          }
                          unint64_t v104 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v123;
                          if (!v123) {
                            unint64_t v104 = 0;
                          }
                          uint64_t v140 = (uint64_t *)(v104 & ~*(void *)&v127);
                          LODWORD(v138[0]) = v123;
                          unsigned int v137 = v140;
                          unsigned int v141 = 0;
                          unsigned int v105 = (llvm::Value *)llvm::ConstantInt::get(*(llvm::ConstantInt **)v117, (llvm::LLVMContext *)&v137, v81);
                          Splat = v105;
                          if ((*(_DWORD *)(v117 + 8) & 0xFE) == 0x12) {
                            Splat = llvm::ConstantVector::getSplat((llvm::Type *)(*(unsigned int *)(v117 + 32) | ((unint64_t)(*(_DWORD *)(v117 + 8) == 19) << 32)), (uint64_t)v105);
                          }
                          if (LODWORD(v138[0]) >= 0x41 && v137) {
                            MEMORY[0x1D25D9CB0](v137, 0x1000C8000313F17);
                          }
                          uint64_t v106 = *(void *)(a1 + 24);
                          __int16 v139 = 257;
                          uint64_t v107 = sub_1CBF52474(v106, v150, (uint64_t)Splat, (uint64_t)&v137);
                          uint64_t v112 = *(void *)(a1 + 24);
                          uint64_t v115 = v107;
                          unsigned int v109 = llvm::ConstantInt::get(*(llvm::ConstantInt **)v117, v118, v108);
                          if ((*(_DWORD *)(v117 + 8) & 0xFE) == 0x12) {
                            unsigned int v109 = llvm::ConstantVector::getSplat((llvm::Type *)(*(unsigned int *)(v117 + 32) | ((unint64_t)(*(_DWORD *)(v117 + 8) == 19) << 32)), (uint64_t)v109);
                          }
                          __int16 v139 = 257;
                          uint64_t v118 = sub_1CB844A3C(v112, v115, (uint64_t)v109, (uint64_t)&v137, 0, 0);
                          uint64_t v116 = *(void *)(a1 + 24);
                          __int16 v113 = *(_WORD *)(a2 + 18) & 0x3F;
                          char v111 = llvm::ConstantInt::get(*(llvm::ConstantInt **)v117, (llvm::LLVMContext *)v152, v110);
                          if ((*(_DWORD *)(v117 + 8) & 0xFE) == 0x12) {
                            char v111 = llvm::ConstantVector::getSplat((llvm::Type *)(*(unsigned int *)(v117 + 32) | ((unint64_t)(*(_DWORD *)(v117 + 8) == 19) << 32)), (uint64_t)v111);
                          }
                          __int16 v139 = 257;
                          uint64_t v10 = sub_1CB845F20(v116, v113, v118, (uint64_t)v111, (uint64_t)&v137);
                          LODWORD(v118) = 0;
                        }
                        else
                        {
                          uint64_t v10 = 0;
                          LODWORD(v118) = 1;
                        }
                      }
                      else
                      {
                        uint64_t v10 = 0;
                        LODWORD(v118) = 1;
                      }
                      if (v124 >= 0x41)
                      {
                        if (v120) {
                          MEMORY[0x1D25D9CB0](v120, 0x1000C8000313F17);
                        }
                        if (v125) {
                          MEMORY[0x1D25D9CB0](v125, 0x1000C8000313F17);
                        }
                      }
                      if (!v118)
                      {
                        char __na = 0;
                        goto LABEL_229;
                      }
LABEL_227:
                      char __na = 1;
LABEL_229:
                      if (*(void *)&v127 && v123 >= 0x41) {
                        MEMORY[0x1D25D9CB0](*(void *)&v127, 0x1000C8000313F17);
                      }
                      if ((__na & 1) == 0) {
                        return v10;
                      }
                      goto LABEL_150;
                    }
LABEL_207:
                    unsigned int v142 = __n;
                    if (__n) {
                      unint64_t v84 = 0xFFFFFFFFFFFFFFFFLL >> -(char)__n;
                    }
                    else {
                      unint64_t v84 = 0;
                    }
                    size_t v119 = v84 & (__src - v144);
                    unsigned int v142 = 0;
                    goto LABEL_214;
                  }
                  uint64_t v96 = *(void *)(v144 + 8 * ((v124 - 1) >> 6)) & (1 << (v124 - 1));
                  if ((v96 != 0) == ((__src & (1 << (__n - 1))) != 0))
                  {
                    unint64_t v101 = 8 * ((v124 + 63) >> 6);
                    do
                    {
                      if (!v101) {
                        goto LABEL_207;
                      }
                      unint64_t v102 = *(void *)(v144 - 8 + v101);
                      unint64_t v103 = *(void *)(__src - 8 + v101);
                      v101 -= 8;
                    }
                    while (v102 == v103);
                    if (v102 <= v103) {
                      goto LABEL_207;
                    }
                  }
                  else if (v96)
                  {
                    goto LABEL_207;
                  }
                  int v143 = v124;
                  operator new[]();
                }
              }
            }
          }
        }
      }
    }
  }
LABEL_8:
  if (v132 - 38 < 4 != v133 - 38 < 4)
  {
    BOOL v21 = v132 - 38 < 4 && (v133 & 0x3E) == 32;
    int v22 = v21;
    if (v21 || v133 - 38 > 3)
    {
      if (!v22) {
        goto LABEL_75;
      }
    }
    else if (v15 != 32)
    {
      goto LABEL_75;
    }
  }
  if (v11 == v14 && v13 == v131)
  {
    __int16 v17 = *(_WORD *)(a2 + 18);
    __int16 v18 = v17 & 0x3F;
    switch(v17 & 0x3F)
    {
      case 2:
        __int16 v18 = 4;
        goto LABEL_60;
      case 3:
        __int16 v18 = 5;
        goto LABEL_60;
      case 4:
        __int16 v18 = 2;
        goto LABEL_60;
      case 5:
        __int16 v18 = 3;
        goto LABEL_60;
      case 0xA:
        __int16 v18 = 12;
        goto LABEL_60;
      case 0xB:
        __int16 v18 = 13;
        goto LABEL_60;
      case 0xC:
        __int16 v18 = 10;
        goto LABEL_60;
      case 0xD:
        __int16 v18 = 11;
        goto LABEL_60;
      case 0x10:
      case 0x11:
      case 0x12:
      case 0x13:
      case 0x14:
      case 0x15:
      case 0x16:
      case 0x17:
      case 0x18:
      case 0x19:
      case 0x1A:
      case 0x1B:
      case 0x1C:
      case 0x1D:
      case 0x1E:
      case 0x1F:
        __break(1u);
        llvm::APInt::flipAllBitsSlowCase((uint64_t)&v146);
        goto LABEL_188;
      case 0x22:
        __int16 v18 = 36;
        goto LABEL_60;
      case 0x23:
        __int16 v18 = 37;
        goto LABEL_60;
      case 0x24:
        __int16 v18 = 34;
        goto LABEL_60;
      case 0x25:
        __int16 v18 = 35;
        goto LABEL_60;
      case 0x26:
        __int16 v18 = 40;
        goto LABEL_60;
      case 0x27:
        __int16 v18 = 41;
        goto LABEL_60;
      case 0x28:
        __int16 v18 = 38;
        goto LABEL_60;
      case 0x29:
        __int16 v18 = 39;
        goto LABEL_60;
      default:
LABEL_60:
        *(_WORD *)(a2 + 18) = v18 | v17 & 0xFFC0;
        uint64_t v26 = *(void *)(a2 - 64);
        uint64_t v27 = *(void *)(a2 - 32);
        if (v26 != v27)
        {
          uint64_t v28 = *(void *)(a2 - 24);
          *(void *)(a2 - 64) = v27;
          *(void *)(a2 - 32) = v26;
          long long v29 = *(_OWORD *)(a2 - 56);
          __int16 v30 = *(void **)(a2 - 16);
          *(void *)(a2 - 56) = v28;
          *(void *)(a2 - 48) = v30;
          *(_OWORD *)(a2 - 24) = v29;
          *__int16 v30 = a2 - 64;
          uint64_t v31 = *(void *)(a2 - 56);
          if (v31) {
            *(void *)(v31 + 16) = a2 - 56;
          }
          **(void **)(a2 - 16) = a2 - 32;
          uint64_t v32 = *(void *)(a2 - 24);
          if (v32) {
            *(void *)(v32 + 16) = a2 - 24;
          }
        }
        break;
    }
  }
  if (v11 == v131 && v13 == v14)
  {
    uint64_t v33 = *(_WORD *)(a2 + 18) & 0x3F;
    uint64_t v34 = *(_WORD *)(a3 + 18) & 0x3F;
    BOOL v36 = (v33 - 38) < 4 || (v34 - 38) < 4;
    return sub_1CC9FDA70(dword_1CFB276E4[v34 - 32] | dword_1CFB276E4[v33 - 32], v36, (void *)v11, v13, *(void *)(a1 + 24));
  }
LABEL_75:
  uint64_t v10 = sub_1CC9FDADC(a2, (_WORD *)a3, 0, *(void *)(a1 + 24));
  if (v10) {
    return v10;
  }
  uint64_t v40 = *(void *)(a2 + 8);
  if (!v40 || *(void *)(v40 + 8))
  {
    uint64_t v41 = *(void *)(a3 + 8);
    if (!v41 || *(void *)(v41 + 8)) {
      goto LABEL_120;
    }
  }
  if (v132 == 32)
  {
    if (v13)
    {
      unsigned int v42 = *(unsigned __int8 *)(v13 + 16);
      if (v42 <= 0x14)
      {
        if (v42 == 16)
        {
          uint64_t v43 = *(unsigned int *)(v13 + 32);
          if (v43 < 0x41)
          {
            if (*(void *)(v13 + 24)) {
              goto LABEL_86;
            }
LABEL_87:
            if (v133 != 36 || (int v44 = (llvm::Value *)v131, v45 = (llvm::Constant **)v11, v11 != v14))
            {
              if (v11 == v131 && v133 == 34) {
                int v44 = (llvm::Value *)v14;
              }
              else {
                int v44 = 0;
              }
              int v45 = (llvm::Constant **)v11;
            }
            goto LABEL_112;
          }
          int v67 = 0;
          int64_t v68 = (unint64_t)(v43 + 63) >> 6;
          do
          {
            BOOL v63 = v68-- < 1;
            if (v63) {
              break;
            }
            unint64_t v69 = *(void *)(*(void *)(v13 + 24) + 8 * v68);
            v67 += __clz(v69);
          }
          while (!v69);
          int v70 = v43 | 0xFFFFFFC0;
          if ((v43 & 0x3F) == 0) {
            int v70 = 0;
          }
          if (v67 + v70 == v43) {
            goto LABEL_87;
          }
        }
        else if (v42 == 17)
        {
          if (sub_1CB844168(v13, 0.0)) {
            goto LABEL_87;
          }
        }
        else if (v42 - 18 < 3 || v42 == 13)
        {
          goto LABEL_87;
        }
LABEL_86:
        if (sub_1CC03F414((uint64_t)&v137, (llvm::Constant *)v13)) {
          goto LABEL_87;
        }
      }
    }
  }
  if (v133 != 32) {
    goto LABEL_120;
  }
  if (!v14) {
    goto LABEL_120;
  }
  unsigned int v47 = *(unsigned __int8 *)(v14 + 16);
  if (v47 > 0x14) {
    goto LABEL_120;
  }
  if (v47 == 16)
  {
    uint64_t v48 = *(unsigned int *)(v14 + 32);
    if (v48 < 0x41)
    {
      if (*(void *)(v14 + 24)) {
        goto LABEL_102;
      }
LABEL_103:
      if (v132 != 36 || (int v44 = (llvm::Value *)v11, v45 = (llvm::Constant **)v131, v131 != v13))
      {
        if (v131 == v11 && v132 == 34) {
          int v44 = (llvm::Value *)v13;
        }
        else {
          int v44 = 0;
        }
        int v45 = (llvm::Constant **)v131;
      }
LABEL_112:
      if (v44 && v45)
      {
        unsigned int v50 = *v45;
        int v51 = (*((_DWORD *)*v45 + 2) & 0xFE) == 0x12
            ? *(unsigned __int8 *)(**((void **)v50 + 2) + 8)
            : *((_DWORD *)*v45 + 2);
        if (v51 == 13)
        {
          uint64_t v52 = *(void *)(a1 + 24);
          AllOnesValue = llvm::Constant::getAllOnesValue(v50, v38, v39);
          __int16 v139 = 257;
          uint64_t v54 = sub_1CB844A3C(v52, v45, (uint64_t)AllOnesValue, (uint64_t)&v137, 0, 0);
          __int16 v136 = 257;
          char v55 = &v134;
          uint64_t v56 = v52;
          __int16 v57 = 35;
          NullValue = v44;
          return sub_1CB845F20(v56, v57, v54, (uint64_t)NullValue, (uint64_t)v55);
        }
      }
      goto LABEL_120;
    }
    int v71 = 0;
    int64_t v72 = (unint64_t)(v48 + 63) >> 6;
    do
    {
      BOOL v63 = v72-- < 1;
      if (v63) {
        break;
      }
      unint64_t v73 = *(void *)(*(void *)(v14 + 24) + 8 * v72);
      v71 += __clz(v73);
    }
    while (!v73);
    int v74 = v48 | 0xFFFFFFC0;
    if ((v48 & 0x3F) == 0) {
      int v74 = 0;
    }
    if (v71 + v74 == v48) {
      goto LABEL_103;
    }
  }
  else if (v47 == 17)
  {
    if (sub_1CB844168(v14, 0.0)) {
      goto LABEL_103;
    }
  }
  else if (v47 - 18 < 3 || v47 == 13)
  {
    goto LABEL_103;
  }
LABEL_102:
  if (sub_1CC03F414((uint64_t)&v137, (llvm::Constant *)v14)) {
    goto LABEL_103;
  }
LABEL_120:
  uint64_t v10 = sub_1CC9FE96C((llvm::Instruction *)a2, a3, (uint64_t)a4, *(void *)(a1 + 24), (uint64_t)v153);
  if (!v10)
  {
    uint64_t v10 = sub_1CC9FE96C((llvm::Instruction *)a3, a2, (uint64_t)a4, *(void *)(a1 + 24), (uint64_t)v153);
    if (!v10)
    {
      uint64_t v10 = sub_1CC9FEC44(a2, a3, 0, *(void *)(a1 + 24));
      if (!v10)
      {
        uint64_t v10 = sub_1CC9FEC44(a3, a2, 0, *(void *)(a1 + 24));
        if (!v10)
        {
          uint64_t v10 = sub_1CC9FBC58(a1, a2, a3, 1);
          if (!v10)
          {
            uint64_t v10 = sub_1CC9FBC58(a1, a3, a2, 1);
            if (!v10)
            {
              uint64_t v10 = sub_1CC9FEE24(a2, a3, 0, *(void *)(a1 + 24));
              if (!v10)
              {
                uint64_t v10 = sub_1CC9FF148(a2, a3, 0, *(void *)(a1 + 24));
                if (!v10)
                {
                  uint64_t v10 = sub_1CC9FF38C(a2, a3, 0, (int **)v153, *(void *)(a1 + 24));
                  if (!v10)
                  {
                    uint64_t v10 = sub_1CC9FF38C(a3, a2, 0, (int **)v153, *(void *)(a1 + 24));
                    if (!v10)
                    {
                      uint64_t v10 = sub_1CC9FC370(a1, a2, a3, 0);
                      if (!v10)
                      {
                        if (v132 == 33
                          && sub_1CBF535C4((uint64_t)&v137, (llvm::Constant *)v13)
                          && v133 == 33
                          && sub_1CBF535C4((uint64_t)&v134, (llvm::Constant *)v14)
                          && *(void *)v11 == *(void *)v131)
                        {
                          uint64_t v85 = *(void *)(a1 + 24);
                          __int16 v139 = 257;
                          uint64_t v86 = (llvm::Constant **)sub_1CB844AF4(v85, (void *)v11, v131, (uint64_t)&v137);
                          uint64_t v87 = *(void *)(a1 + 24);
                          NullValue = llvm::Constant::getNullValue(*v86, v88, v89);
                          __int16 v139 = 257;
                          char v55 = &v137;
                          uint64_t v56 = v87;
                          __int16 v57 = 33;
                          uint64_t v54 = (llvm::Instruction *)v86;
                          return sub_1CB845F20(v56, v57, v54, (uint64_t)NullValue, (uint64_t)v55);
                        }
                        uint64_t v10 = 0;
                        if (v152 && v151) {
                          return sub_1CC9FFA60(v132, v11, (uint64_t)v152, v133, v131, v151, *(void *)(a1 + 24), 0);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return v10;
}

llvm::Value *sub_1CCA01EAC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, const llvm::DataLayout *a5, llvm::DSOLocalEquivalent **a6)
{
  uint64_t v6 = (uint64_t)a2;
  uint64_t v8 = *a2;
  long long v9 = (llvm *)*(a2 - 8);
  uint64_t v10 = (llvm::Constant *)*(a2 - 4);
  long long v11 = *(_OWORD *)(a1 + 120);
  long long v12 = *(_OWORD *)(a1 + 104);
  *(_OWORD *)__s2 = *(_OWORD *)(a1 + 88);
  long long v466 = v12;
  uint64_t v468 = (llvm **)*((void *)&v11 + 1);
  unint64_t v467 = (llvm **)v6;
  uint64_t v13 = sub_1CC02C2C8(v9, v10, (uint64_t)__s2, 3, a5, a6);
  if (v13) {
    return (llvm::Value *)sub_1CC9D3C84(a1, (llvm::ValueAsMetadata *)v6, v13);
  }
  if (sub_1CC9D1CF4(a1, (llvm::Instruction *)v6)) {
    return (llvm::Value *)v6;
  }
  unint64_t v15 = sub_1CC9D812C(a1, (unsigned __int8 *)v6);
  if (!v15)
  {
    unint64_t v15 = sub_1CC9D6B70(a1, v6);
    if (!v15)
    {
      if (sub_1CCAB350C(a1, (llvm::UndefValue *)v6)) {
        return (llvm::Value *)v6;
      }
      uint64_t v17 = *(void *)(a1 + 24);
      uint64_t v18 = *(void *)(v6 - 64);
      uint64_t v19 = *(void *)(v6 - 32);
      uint64_t v459 = 0;
      int v469 = 0;
      __s2[0] = &v459;
      __s2[1] = &v469;
      *(void *)&long long v466 = &v459;
      *((void *)&v466 + 1) = &v469;
      int v20 = *(unsigned __int8 *)(v18 + 16);
      if (v20 == 5)
      {
        if (*(_WORD *)(v18 + 18) != 29) {
          goto LABEL_72;
        }
        if (!*(void *)(v18 - 32 * (*(_DWORD *)(v18 + 20) & 0x7FFFFFF))) {
          goto LABEL_72;
        }
        uint64_t v459 = *(llvm::LLVMContext **)(v18 - 32 * (*(_DWORD *)(v18 + 20) & 0x7FFFFFF));
        uint64_t v21 = *(void *)(v18 - 32 * (*(_DWORD *)(v18 + 20) & 0x7FFFFFF) + 32);
        if (!v21) {
          goto LABEL_72;
        }
      }
      else
      {
        if (v20 != 57) {
          goto LABEL_72;
        }
        if (!*(void *)(v18 - 64)) {
          goto LABEL_72;
        }
        uint64_t v459 = *(llvm::LLVMContext **)(v18 - 64);
        uint64_t v21 = *(void *)(v18 - 32);
        if (!v21) {
          goto LABEL_72;
        }
      }
      *(void *)__s2[1] = v21;
      uint64_t v22 = *(void *)(v6 - 32);
      int v23 = *(unsigned __int8 *)(v22 + 16);
      if (v23 != 5)
      {
        if (v23 != 58) {
          goto LABEL_72;
        }
        uint64_t v24 = *(void *)(v22 - 64);
        int v25 = *(unsigned __int8 *)(v24 + 16);
        if (v25 == 5)
        {
          if (*(_WORD *)(v24 + 18) != 28) {
            goto LABEL_39;
          }
          int v35 = (uint64_t *)(v24 - 32 * (*(_DWORD *)(v24 + 20) & 0x7FFFFFF));
          uint64_t v26 = *v35;
          uint64_t v36 = v35[4];
          if (*(void *)v466 == v26 && **((void **)&v466 + 1) == v36) {
            goto LABEL_38;
          }
          if (*(void *)v466 != v36) {
            goto LABEL_39;
          }
        }
        else
        {
          if (v25 != 56) {
            goto LABEL_39;
          }
          uint64_t v26 = *(void *)(v24 - 64);
          uint64_t v27 = *(void *)(v24 - 32);
          if (*(void *)v466 == v26 && **((void **)&v466 + 1) == v27) {
            goto LABEL_38;
          }
          if (*(void *)v466 != v27) {
            goto LABEL_39;
          }
        }
        if (**((void **)&v466 + 1) != v26) {
          goto LABEL_39;
        }
LABEL_38:
        if ((sub_1CBF687D0((uint64_t)&v467, *(llvm::Constant **)(v22 - 32)) & 1) == 0)
        {
LABEL_39:
          uint64_t v37 = *(void *)(v22 - 32);
          int v38 = *(unsigned __int8 *)(v37 + 16);
          if (v38 == 5)
          {
            if (*(_WORD *)(v37 + 18) != 28) {
              goto LABEL_72;
            }
            uint64_t v41 = (uint64_t *)(v37 - 32 * (*(_DWORD *)(v37 + 20) & 0x7FFFFFF));
            uint64_t v39 = *v41;
            uint64_t v42 = v41[4];
            if (*(void *)v466 != v39 || **((void **)&v466 + 1) != v42)
            {
              if (*(void *)v466 != v42) {
                goto LABEL_72;
              }
LABEL_49:
              if (**((void **)&v466 + 1) != v39) {
                goto LABEL_72;
              }
            }
          }
          else
          {
            if (v38 != 56) {
              goto LABEL_72;
            }
            uint64_t v39 = *(void *)(v37 - 64);
            uint64_t v40 = *(void *)(v37 - 32);
            if (*(void *)v466 != v39 || **((void **)&v466 + 1) != v40)
            {
              if (*(void *)v466 != v40) {
                goto LABEL_72;
              }
              goto LABEL_49;
            }
          }
          if (sub_1CBF687D0((uint64_t)&v467, *(llvm::Constant **)(v22 - 64))) {
            goto LABEL_71;
          }
LABEL_72:
          uint64_t v53 = *(void *)(v18 + 8);
          if (!v53 || *(void *)(v53 + 8))
          {
            uint64_t v54 = *(void *)(v19 + 8);
            if (!v54 || *(void *)(v54 + 8)) {
              goto LABEL_80;
            }
          }
          __s2[0] = &v459;
          __s2[1] = &v469;
          *((void *)&v466 + 1) = &v459;
          uint64_t v468 = &v469;
          if (!sub_1CC04308C((void **)__s2, 29, *(void *)(v6 - 64))
            || (sub_1CCA138C8((uint64_t **)&v466 + 1, *(void *)(v6 - 32)) & 1) == 0)
          {
            goto LABEL_80;
          }
          LOWORD(v467) = 257;
          char v55 = (llvm::Constant **)sub_1CC2428C0(v17, (uint64_t)v459, (uint64_t)v469, (uint64_t)__s2);
          __int16 v473 = 257;
          Not = llvm::BinaryOperator::CreateNot(v55, (llvm::Value *)&v470, 0, v56);
LABEL_79:
          unint64_t v15 = (unint64_t)Not;
          if (Not) {
            return (llvm::Value *)v15;
          }
LABEL_80:
          unint64_t v15 = (unint64_t)sub_1CCA055B8(v6, *(void *)(a1 + 24));
          if (v15) {
            return (llvm::Value *)v15;
          }
          uint64_t v13 = (llvm::Value *)sub_1CC9D337C(a1, (unsigned __int8 *)v6);
          if (v13) {
            return (llvm::Value *)sub_1CC9D3C84(a1, (llvm::ValueAsMetadata *)v6, v13);
          }
          uint64_t v13 = (llvm::Value *)sub_1CCA060BC(v6, *(uint64_t **)(a1 + 24));
          if (v13) {
            return (llvm::Value *)sub_1CC9D3C84(a1, (llvm::ValueAsMetadata *)v6, v13);
          }
          uint64_t v57 = *(void *)(v6 - 64);
          uint64_t v58 = *(void *)(v6 - 32);
          int v469 = 0;
          unint64_t v464 = 0;
          __s2[1] = &v469;
          uint64_t v59 = *(void *)(v57 + 8);
          if (v59 && !*(void *)(v59 + 8))
          {
            unsigned int v66 = *(unsigned __int8 *)(v57 + 16);
            if (v66 >= 0x1C)
            {
              if (v66 - 53 > 1) {
                goto LABEL_85;
              }
              int v68 = *(_DWORD *)(v57 + 20);
              unint64_t v69 = (v68 & 0x40000000) != 0
                  ? *(llvm::Constant ***)(v57 - 8)
                  : (llvm::Constant **)(v57 - 32 * (v68 & 0x7FFFFFF));
              if (!sub_1CBF5250C((uint64_t)__s2, *v69)) {
                goto LABEL_85;
              }
              int v154 = *(_DWORD *)(v57 + 20);
              uint64_t v155 = (v154 & 0x40000000) != 0 ? *(void *)(v57 - 8) : v57 - 32 * (v154 & 0x7FFFFFF);
              uint64_t v67 = *(void *)(v155 + 32);
              if (!v67) {
                goto LABEL_85;
              }
            }
            else
            {
              if (v66 != 5) {
                goto LABEL_85;
              }
              if (*(unsigned __int16 *)(v57 + 18) - 25 > 1) {
                goto LABEL_85;
              }
              if (!sub_1CBF5270C((uint64_t)__s2, *(llvm::Constant **)(v57 - 32 * (*(_DWORD *)(v57 + 20) & 0x7FFFFFF))))goto LABEL_85; {
              uint64_t v67 = *(void *)(v57 - 32 * (*(_DWORD *)(v57 + 20) & 0x7FFFFFF) + 32);
              }
              if (!v67) {
                goto LABEL_85;
              }
            }
            *(void *)__s2[1] = v67;
            if (sub_1CBF5250C((uint64_t)&v470, (llvm::Constant *)v58))
            {
              uint64_t v187 = *(void *)(a1 + 24);
              char v188 = v469;
              uint64_t v189 = llvm::ConstantInt::get((llvm::ConstantInt *)v8, 0, 0);
              LOWORD(v467) = 257;
              uint64_t v190 = sub_1CB845F20(v187, 32, v188, (uint64_t)v189, (uint64_t)__s2);
              uint64_t v191 = operator new(0x60uLL);
              v191[13] = v191[13] & 0x38000000 | 1;
              unint64_t v15 = (unint64_t)(v191 + 8);
              *(void *)uint64_t v191 = 0;
              *((void *)v191 + 1) = 0;
              *((void *)v191 + 2) = 0;
              *((void *)v191 + 3) = v191 + 8;
              LOWORD(v467) = 257;
              goto LABEL_341;
            }
          }
LABEL_85:
          uint64_t v463 = 0;
          __s2[0] = &v463;
          __s2[1] = 0;
          if (!sub_1CBF528D8((uint64_t)__s2, (unsigned __int8 *)v58)) {
            goto LABEL_197;
          }
          unsigned int v462 = 0;
          __s2[0] = &v469;
          __s2[1] = &v462;
          *(void *)&long long v466 = 0;
          uint64_t v63 = *(void *)(v57 + 8);
          if (v63 && !*(void *)(v63 + 8))
          {
            int v64 = *(unsigned __int8 *)(v57 + 16);
            if (v64 != 5)
            {
              if (v64 != 58) {
                goto LABEL_107;
              }
              if (!*(void *)(v57 - 64)) {
                goto LABEL_107;
              }
              int v469 = *(llvm **)(v57 - 64);
              if (!sub_1CBF528D8((uint64_t)&__s2[1], *(unsigned __int8 **)(v57 - 32))) {
                goto LABEL_107;
              }
LABEL_105:
              if (v463[1].i32[0] > 0x40u) {
                operator new[]();
              }
              int v71 = (void *)(*(void *)v462 & *(void *)v463);
              LODWORD(__s2[1]) = v463[1].i32[0];
              __s2[0] = v71;
              int v208 = llvm::ConstantInt::get(*(llvm::ConstantInt **)v8, (llvm::LLVMContext *)__s2, v65);
              Splat = v208;
              if ((*(_DWORD *)(v8 + 8) & 0xFE) == 0x12) {
                Splat = llvm::ConstantVector::getSplat((llvm::Type *)(*(unsigned int *)(v8 + 32) | ((unint64_t)(*(_DWORD *)(v8 + 8) == 19) << 32)), (uint64_t)v208);
              }
              if (LODWORD(__s2[1]) >= 0x41 && __s2[0]) {
                MEMORY[0x1D25D9CB0](__s2[0], 0x1000C8000313F17);
              }
              uint64_t v210 = *(void *)(a1 + 24);
              LOWORD(v467) = 257;
              uint64_t v211 = (int32x2_t ****)sub_1CBF52474(v210, v469, v58, (uint64_t)__s2);
              llvm::Value::takeName(v211, (llvm::Value *)v57);
              LOWORD(v467) = 257;
              unint64_t v101 = __s2;
              char v102 = 30;
              unint64_t v103 = (llvm::LLVMContext *)v211;
              goto LABEL_361;
            }
            if (*(_WORD *)(v57 + 18) == 30)
            {
              uint64_t v70 = v57 - 32 * (*(_DWORD *)(v57 + 20) & 0x7FFFFFF);
              if (*(void *)v70)
              {
                int v469 = *(llvm **)v70;
                if (sub_1CBF5295C((uint64_t)&__s2[1], *(llvm::Constant **)(v70 + 32))) {
                  goto LABEL_105;
                }
              }
            }
          }
LABEL_107:
          unsigned int v461 = 0;
          __s2[0] = &v469;
          __s2[1] = &v461;
          *(void *)&long long v466 = 0;
          uint64_t v72 = *(void *)(v57 + 8);
          if (v72 && !*(void *)(v72 + 8))
          {
            int v73 = *(unsigned __int8 *)(v57 + 16);
            if (v73 != 5)
            {
              if (v73 != 57) {
                goto LABEL_119;
              }
              if (!*(void *)(v57 - 64)) {
                goto LABEL_119;
              }
              int v469 = *(llvm **)(v57 - 64);
              if (!sub_1CBF528D8((uint64_t)&__s2[1], *(unsigned __int8 **)(v57 - 32))) {
                goto LABEL_119;
              }
LABEL_117:
              unsigned int v76 = v463[1].u32[0];
              if (v76 > 0x40) {
                operator new[]();
              }
              int8x8_t v77 = *v463;
              uint64_t v78 = *(void *)v461 & *(void *)v463;
              LODWORD(v471) = v463[1].i32[0];
              uint64_t v470 = v78;
              uint64_t v79 = *(void *)(a1 + 24);
              unint64_t v80 = v469;
              unsigned int v460 = v76;
              uint64_t v459 = (llvm::LLVMContext *)(*(void *)&v77 ^ v78);
              int v215 = (llvm::Value *)llvm::ConstantInt::get(*(llvm::ConstantInt **)v8, (llvm::LLVMContext *)&v459, v74);
              int v216 = v215;
              if ((*(_DWORD *)(v8 + 8) & 0xFE) == 0x12) {
                int v216 = llvm::ConstantVector::getSplat((llvm::Type *)(*(unsigned int *)(v8 + 32) | ((unint64_t)(*(_DWORD *)(v8 + 8) == 19) << 32)), (uint64_t)v215);
              }
              LOWORD(v467) = 257;
              uint64_t v217 = (int32x2_t ****)sub_1CBF52474(v79, v80, (uint64_t)v216, (uint64_t)__s2);
              if (v460 >= 0x41 && v459) {
                MEMORY[0x1D25D9CB0](v459, 0x1000C8000313F17);
              }
              llvm::Value::takeName(v217, (llvm::Value *)v57);
              uint64_t v219 = llvm::ConstantInt::get(*(llvm::ConstantInt **)v8, (llvm::LLVMContext *)&v470, v218);
              if ((*(_DWORD *)(v8 + 8) & 0xFE) == 0x12) {
                uint64_t v219 = llvm::ConstantVector::getSplat((llvm::Type *)(*(unsigned int *)(v8 + 32) | ((unint64_t)(*(_DWORD *)(v8 + 8) == 19) << 32)), (uint64_t)v219);
              }
              LOWORD(v467) = 257;
              unint64_t v15 = (unint64_t)llvm::BinaryOperator::Create(29, v217, (uint64_t)v219, (const char **)__s2, 0);
              if (v471 >= 0x41 && v470) {
                MEMORY[0x1D25D9CB0](v470, 0x1000C8000313F17);
              }
              return (llvm::Value *)v15;
            }
            if (*(_WORD *)(v57 + 18) == 29)
            {
              uint64_t v75 = v57 - 32 * (*(_DWORD *)(v57 + 20) & 0x7FFFFFF);
              if (*(void *)v75)
              {
                int v469 = *(llvm **)v75;
                if (sub_1CBF5295C((uint64_t)&__s2[1], *(llvm::Constant **)(v75 + 32))) {
                  goto LABEL_117;
                }
              }
            }
          }
LABEL_119:
          uint64_t v81 = *(void *)(v57 + 8);
          if (!v81 || *(void *)(v81 + 8))
          {
            unint64_t v15 = 0;
            goto LABEL_122;
          }
          int v91 = *(unsigned __int8 *)(v57 + 16);
          if (v91 == 5)
          {
            int v156 = *(unsigned __int16 *)(v57 + 18);
            if (v156 != 29 && v156 != 30) {
              goto LABEL_297;
            }
            int v157 = (llvm **)(v57 - 32 * (*(_DWORD *)(v57 + 20) & 0x7FFFFFF));
            unint64_t v92 = *v157;
            if (!*v157) {
              goto LABEL_297;
            }
            int v469 = *v157;
            unint64_t v93 = v157[4];
            if (!v93) {
              goto LABEL_297;
            }
          }
          else if (v91 != 57 && v91 != 58 {
                 || (unint64_t v92 = *(llvm **)(v57 - 64)) == 0
          }
                 || (v469 = *(llvm **)(v57 - 64), (unint64_t v93 = *(llvm **)(v57 - 32)) == 0))
          {
LABEL_297:
            unint64_t v15 = 0;
            goto LABEL_122;
          }
          unint64_t v464 = v93;
          unsigned int v158 = v463[1].u32[0];
          unsigned int v458 = v158;
          if (v158 > 0x40) {
            operator new[]();
          }
          if (v158) {
            unint64_t v159 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v158;
          }
          else {
            unint64_t v159 = 0;
          }
          unint64_t v457 = v159 & ~*(void *)v463;
          LODWORD(v471) = v158;
          uint64_t v470 = v457;
          unsigned int v458 = 0;
          char v196 = v91 - 28;
          if (llvm::MaskedValueIsZero(v92, (const llvm::Value *)&v470, *(const llvm::APInt **)(a1 + 80), 0, *(const llvm::DataLayout **)(a1 + 56), (llvm::AssumptionCache *)v6, *(const llvm::Instruction **)(a1 + 72), (const llvm::DominatorTree *)1, v451))
          {
            uint64_t v198 = *(void *)(a1 + 24);
            if ((*((unsigned char *)v464 + 23) & 0x10) == 0)
            {
              uint64_t v246 = 0;
              int v245 = &byte_1CFBCE98E;
              goto LABEL_414;
            }
            uint64_t v199 = ***(void ***)v464;
            uint64_t v200 = *(void *)(v199 + 152);
            uint64_t v201 = *(unsigned int *)(v199 + 168);
            if (v201)
            {
              LODWORD(v202) = (v201 - 1) & ((v464 >> 4) ^ (v464 >> 9));
              uint64_t v203 = v200 + 16 * v202;
              uint64_t v204 = *(llvm **)v203;
              if (*(llvm **)v203 == v464)
              {
LABEL_413:
                uint64_t v244 = *(void **)(v203 + 8);
                uint64_t v247 = (void *)*v244;
                int v245 = (char *)(v244 + 2);
                uint64_t v246 = v247;
LABEL_414:
                LOWORD(v467) = 773;
                __s2[0] = v245;
                __s2[1] = v246;
                *(void *)&long long v466 = ".masked";
                uint64_t v248 = sub_1CBF52474(v198, v464, v58, (uint64_t)__s2);
                int v249 = v469;
LABEL_415:
                LOWORD(v467) = 257;
                unint64_t v15 = (unint64_t)llvm::BinaryOperator::Create(v196, v249, (uint64_t)v248, (const char **)__s2, 0);
                int v207 = 0;
                goto LABEL_416;
              }
              int v205 = 1;
              while (v204 != (llvm *)-4096)
              {
                int v206 = v202 + v205++;
                uint64_t v202 = v206 & (v201 - 1);
                uint64_t v204 = *(llvm **)(v200 + 16 * v202);
                if (v204 == v464)
                {
                  uint64_t v203 = v200 + 16 * v202;
                  goto LABEL_413;
                }
              }
            }
            uint64_t v203 = v200 + 16 * v201;
            goto LABEL_413;
          }
          if (*((unsigned __int8 *)v464 + 16) < 0x15u)
          {
            unint64_t v15 = 0;
            int v207 = 1;
LABEL_416:
            if (v471 >= 0x41 && v470) {
              MEMORY[0x1D25D9CB0](v470, 0x1000C8000313F17);
            }
            if (!v207) {
              return (llvm::Value *)v15;
            }
LABEL_122:
            unsigned int v82 = (llvm::Type *)v8;
            if ((*(_DWORD *)(v8 + 8) & 0xFE) == 0x12) {
              unsigned int v82 = **(llvm::Type ***)(v8 + 16);
            }
            unsigned int PrimitiveSizeInBits = llvm::Type::getPrimitiveSizeInBits(v82);
            uint64_t v459 = 0;
            __s2[0] = &v469;
            __s2[1] = &v459;
            *(void *)&long long v466 = 0;
            uint64_t v84 = *(void *)(v57 + 8);
            if (!v84) {
              goto LABEL_131;
            }
            if (*(void *)(v84 + 8)) {
              goto LABEL_131;
            }
            unsigned int v85 = *(unsigned __int8 *)(v57 + 16);
            if (v85 <= 0x1B && v85 != 5) {
              goto LABEL_131;
            }
            int v86 = v85 <= 0x1B ? *(unsigned __int16 *)(v57 + 18) : v85 - 28;
            if (v86 != 40) {
              goto LABEL_131;
            }
            int v390 = *(_DWORD *)(v57 + 20);
            uint64_t v391 = (v390 & 0x40000000) != 0 ? *(uint64_t **)(v57 - 8) : (uint64_t *)(v57 - 32 * (v390 & 0x7FFFFFF));
            uint64_t v392 = *v391;
            int v393 = *(unsigned __int8 *)(v392 + 16);
            if (v393 == 5)
            {
              if (*(_WORD *)(v392 + 18) != 27) {
                goto LABEL_131;
              }
              uint64_t v401 = (llvm **)(v392 - 32 * (*(_DWORD *)(v392 + 20) & 0x7FFFFFF));
              if (!*v401) {
                goto LABEL_131;
              }
              int v469 = *v401;
              if ((sub_1CBF5295C((uint64_t)&__s2[1], v401[4]) & 1) == 0) {
                goto LABEL_131;
              }
            }
            else
            {
              if (v393 != 55) {
                goto LABEL_131;
              }
              if (!*(void *)(v392 - 64)) {
                goto LABEL_131;
              }
              int v469 = *(llvm **)(v392 - 64);
              if (!sub_1CBF528D8((uint64_t)&__s2[1], *(unsigned __int8 **)(v392 - 32))) {
                goto LABEL_131;
              }
            }
            uint64_t v402 = v463;
            int v403 = v459;
            if (*((_DWORD *)v459 + 2) >= 0x41u) {
              int v403 = *(llvm::LLVMContext **)v459;
            }
            int v404 = *(_DWORD *)v403;
            LODWORD(__s2[1]) = PrimitiveSizeInBits;
            if (PrimitiveSizeInBits > 0x40) {
              llvm::APInt::initSlowCase((llvm::APInt *)__s2);
            }
            __s2[0] = 0;
            if (PrimitiveSizeInBits != v404)
            {
              uint64_t v60 = PrimitiveSizeInBits - v404;
              if (v60 > 0x40)
              {
                llvm::APInt::setBitsSlowCase(__s2, 0, v60);
              }
              else
              {
                unint64_t v405 = 0xFFFFFFFFFFFFFFFFLL >> (v404 - PrimitiveSizeInBits);
                if (LODWORD(__s2[1]) > 0x40) {
                  *(void *)__s2[0] |= v405;
                }
                else {
                  __s2[0] = (void *)((unint64_t)__s2[0] | v405);
                }
              }
            }
            uint64_t v406 = v402[1].u32[0];
            if (v406 > 0x40)
            {
              uint64_t v415 = (const void *)*v402;
              uint64_t v408 = __s2[0];
              BOOL v409 = memcmp(v415, __s2[0], ((unint64_t)(v406 + 63) >> 3) & 0x3FFFFFF8) == 0;
            }
            else
            {
              uint64_t v407 = (void *)*v402;
              uint64_t v408 = __s2[0];
              BOOL v409 = v407 == __s2[0];
            }
            int v416 = v409;
            if (LODWORD(__s2[1]) >= 0x41 && v408) {
              MEMORY[0x1D25D9CB0](v408, 0x1000C8000313F17);
            }
            if (!v416)
            {
LABEL_131:
              __s2[0] = &v469;
              __s2[1] = &v459;
              *(void *)&long long v466 = 0;
              int v87 = *(unsigned __int8 *)(v57 + 16);
              if (v87 == 5)
              {
                if (*(_WORD *)(v57 + 18) != 27) {
                  goto LABEL_159;
                }
                uint64_t v88 = v57 - 32 * (*(_DWORD *)(v57 + 20) & 0x7FFFFFF);
                if (!*(void *)v88) {
                  goto LABEL_159;
                }
                int v469 = *(llvm **)v88;
                if (!sub_1CBF5295C((uint64_t)&__s2[1], *(llvm::Constant **)(v88 + 32))) {
                  goto LABEL_159;
                }
              }
              else
              {
                if (v87 != 55) {
                  goto LABEL_159;
                }
                if (!*(void *)(v57 - 64)) {
                  goto LABEL_159;
                }
                int v469 = *(llvm **)(v57 - 64);
                if ((sub_1CBF528D8((uint64_t)&__s2[1], *(unsigned __int8 **)(v57 - 32)) & 1) == 0) {
                  goto LABEL_159;
                }
              }
              uint64_t v89 = *((unsigned int *)v459 + 2);
              if (v89 >= 0x41)
              {
                int v94 = 0;
                int64_t v95 = (unint64_t)(v89 + 63) >> 6;
                do
                {
                  BOOL v96 = v95-- < 1;
                  if (v96) {
                    break;
                  }
                  unint64_t v97 = *(void *)(*(void *)v459 + 8 * v95);
                  v94 += __clz(v97);
                }
                while (!v97);
                int v98 = v89 | 0xFFFFFFC0;
                if ((v89 & 0x3F) == 0) {
                  int v98 = 0;
                }
                if ((v89 - v94 - v98) >= 0x41) {
                  goto LABEL_159;
                }
                unint64_t v90 = **(llvm::LLVMContext ***)v459;
                if ((unint64_t)v90 >= PrimitiveSizeInBits) {
                  goto LABEL_159;
                }
              }
              else
              {
                unint64_t v90 = *(llvm::LLVMContext **)v459;
                if (*(void *)v459 >= (unint64_t)PrimitiveSizeInBits) {
                  goto LABEL_159;
                }
              }
              if (sub_1CC10A920((llvm::APInt *)v463, PrimitiveSizeInBits - v90))
              {
                unint64_t v99 = v469;
                unint64_t v100 = llvm::ConstantInt::get(*(llvm::ConstantInt **)v8, v459, (const llvm::APInt *)v60);
                if ((*(_DWORD *)(v8 + 8) & 0xFE) == 0x12) {
                  unint64_t v100 = llvm::ConstantVector::getSplat((llvm::Type *)(*(unsigned int *)(v8 + 32) | ((unint64_t)(*(_DWORD *)(v8 + 8) == 19) << 32)), (uint64_t)v100);
                }
                LOWORD(v467) = 257;
                unint64_t v101 = __s2;
                char v102 = 26;
                unint64_t v103 = v99;
                return llvm::BinaryOperator::Create(v102, v103, (uint64_t)v100, (const char **)v101, 0);
              }
LABEL_159:
              uint64_t v456 = 0;
              __s2[0] = &v469;
              __s2[1] = &v456;
              *(void *)&long long v466 = 0;
              int v104 = *(unsigned __int8 *)(v57 + 16);
              if (v104 == 5)
              {
                if (*(_WORD *)(v57 + 18) != 13) {
                  goto LABEL_195;
                }
                uint64_t v105 = v57 - 32 * (*(_DWORD *)(v57 + 20) & 0x7FFFFFF);
                if (!*(void *)v105) {
                  goto LABEL_195;
                }
                int v469 = *(llvm **)v105;
                if ((sub_1CBF5295C((uint64_t)&__s2[1], *(llvm::Constant **)(v105 + 32)) & 1) == 0) {
                  goto LABEL_195;
                }
              }
              else if (v104 != 41 {
                     || !*(void *)(v57 - 64)
              }
                     || (int v469 = *(llvm **)(v57 - 64),
                         !sub_1CBF528D8((uint64_t)&__s2[1], *(unsigned __int8 **)(v57 - 32))))
              {
LABEL_195:
                uint64_t v120 = *(void *)(v57 + 8);
                if (!v120) {
                  goto LABEL_197;
                }
                if (*(void *)(v120 + 8)) {
                  goto LABEL_197;
                }
                unsigned int v134 = *(unsigned __int8 *)(v57 + 16);
                if (v134 < 0x1C || v134 - 59 < 0xFFFFFFEE || v134 > 0x3A || ((1 << v134) & 0x6002A0000000000) == 0) {
                  goto LABEL_197;
                }
                uint64_t v470 = 0;
                uint64_t v453 = 0;
                __s2[0] = &v470;
                __s2[1] = &v453;
                *(void *)&long long v466 = 0;
                uint64_t v135 = *(void *)(v57 - 64);
                uint64_t v136 = *(void *)(v135 + 8);
                if (!v136
                  || *(void *)(v136 + 8)
                  || !sub_1CBC5BE40((void **)__s2, v135)
                  || (sub_1CBF528D8((uint64_t)&__s2[1], *(unsigned __int8 **)(v57 - 32)) & 1) == 0)
                {
                  uint64_t v137 = *(void *)(v57 - 32);
                  uint64_t v138 = *(void *)(v137 + 8);
                  if (!v138
                    || *(void *)(v138 + 8)
                    || !sub_1CBC5BE40((void **)__s2, v137)
                    || !sub_1CBF528D8((uint64_t)&__s2[1], *(unsigned __int8 **)(v57 - 64)))
                  {
                    goto LABEL_197;
                  }
                }
                __int16 v139 = v463;
                uint64_t v140 = (uint64_t *)v470;
                unsigned int v141 = *(llvm::Type **)v470;
                if ((*(_DWORD *)(*(void *)v470 + 8) & 0xFE) == 0x12) {
                  unsigned int v141 = (llvm::Type *)**((void **)v141 + 2);
                }
                unsigned int v142 = llvm::Type::getPrimitiveSizeInBits(v141);
                uint64_t v143 = v139[1].u32[0];
                if (v143 > 0x40)
                {
                  int v257 = 0;
                  int64_t v258 = (unint64_t)(v143 + 63) >> 6;
                  do
                  {
                    BOOL v96 = v258-- < 1;
                    if (v96) {
                      break;
                    }
                    unint64_t v259 = *(void *)(*(void *)v139 + 8 * v258);
                    v257 += __clz(v259);
                  }
                  while (!v259);
                  int v260 = v143 | 0xFFFFFFC0;
                  if ((v143 & 0x3F) == 0) {
                    int v260 = 0;
                  }
                  int v144 = v257 + v260;
                }
                else
                {
                  int v144 = v143 + __clz((unint64_t)*v139) - 64;
                }
                if ((int)v143 - v144 > v142)
                {
LABEL_197:
                  __s2[0] = &v469;
                  __s2[1] = &v464;
                  int v121 = *(unsigned __int8 *)(v6 + 16);
                  if (v121 == 56)
                  {
                    uint64_t v122 = *(void *)(v6 - 64);
                    uint64_t v123 = *(void *)(v122 + 8);
                    if (!v123 || *(void *)(v123 + 8)) {
                      goto LABEL_209;
                    }
                    int v124 = *(unsigned __int8 *)(v122 + 16);
                    if (v124 == 5)
                    {
                      if (*(_WORD *)(v122 + 18) != 25) {
                        goto LABEL_209;
                      }
                      if (!sub_1CBC5BE40((void **)__s2, *(void *)(v122 - 32 * (*(_DWORD *)(v122 + 20) & 0x7FFFFFF))))goto LABEL_209; {
                      uint64_t v125 = *(void *)(v122 - 32 * (*(_DWORD *)(v122 + 20) & 0x7FFFFFF) + 32);
                      }
                      if (!v125) {
                        goto LABEL_209;
                      }
                    }
                    else
                    {
                      if (v124 != 53) {
                        goto LABEL_209;
                      }
                      if (!sub_1CBC5BE40((void **)__s2, *(void *)(v122 - 64))) {
                        goto LABEL_209;
                      }
                      uint64_t v125 = *(void *)(v122 - 32);
                      if (!v125) {
                        goto LABEL_209;
                      }
                    }
                    *(void *)__s2[1] = v125;
                    if (!sub_1CC03F5D4((uint64_t)&v466, *(unsigned __int8 **)(v6 - 32))) {
                      goto LABEL_209;
                    }
                  }
                  else
                  {
                    if (v121 != 5) {
                      goto LABEL_209;
                    }
                    if (*(_WORD *)(v6 + 18) != 28) {
                      goto LABEL_209;
                    }
                    uint64_t v126 = *(void *)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF));
                    uint64_t v127 = *(void *)(v126 + 8);
                    if (!v127 || *(void *)(v127 + 8)) {
                      goto LABEL_209;
                    }
                    int v147 = *(unsigned __int8 *)(v126 + 16);
                    if (v147 == 5)
                    {
                      if (*(_WORD *)(v126 + 18) != 25) {
                        goto LABEL_209;
                      }
                      if (!sub_1CBC5BE40((void **)__s2, *(void *)(v126 - 32 * (*(_DWORD *)(v126 + 20) & 0x7FFFFFF))))goto LABEL_209; {
                      uint64_t v148 = *(void *)(v126 - 32 * (*(_DWORD *)(v126 + 20) & 0x7FFFFFF) + 32);
                      }
                      if (!v148) {
                        goto LABEL_209;
                      }
                    }
                    else
                    {
                      if (v147 != 53) {
                        goto LABEL_209;
                      }
                      if (!sub_1CBC5BE40((void **)__s2, *(void *)(v126 - 64))) {
                        goto LABEL_209;
                      }
                      uint64_t v148 = *(void *)(v126 - 32);
                      if (!v148) {
                        goto LABEL_209;
                      }
                    }
                    *(void *)__s2[1] = v148;
                    if ((sub_1CC03F7B4((uint64_t)&v466, *(unint64_t ***)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF) + 32)) & 1) == 0)goto LABEL_209; {
                  }
                    }
                  uint64_t v169 = v464;
                  uint64_t v170 = (llvm::Type *)v8;
                  if ((*(_DWORD *)(v8 + 8) & 0xFE) == 0x12) {
                    uint64_t v170 = **(llvm::Type ***)(v8 + 16);
                  }
                  unsigned int v171 = llvm::Type::getPrimitiveSizeInBits(v170);
                  uint64_t v172 = *(llvm::Type **)v469;
                  if ((*(_DWORD *)(*(void *)v469 + 8) & 0xFE) == 0x12) {
                    uint64_t v172 = (llvm::Type *)**((void **)v172 + 2);
                  }
                  uint64_t v173 = v171 - llvm::Type::getPrimitiveSizeInBits(v172);
                  unsigned int v460 = v171;
                  if (v171 > 0x40) {
                    llvm::APInt::initSlowCase((llvm::APInt *)&v459);
                  }
                  if (v171) {
                    unint64_t v174 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v171;
                  }
                  else {
                    unint64_t v174 = 0;
                  }
                  uint64_t v459 = (llvm::LLVMContext *)(v174 & v173);
                  uint64_t v470 = 32;
                  uint64_t v471 = &v459;
                  int v176 = sub_1CCA16878((uint64_t)&v470, v169);
                  if (v460 >= 0x41 && v459) {
                    MEMORY[0x1D25D9CB0](v459, 0x1000C8000313F17);
                  }
                  if (v176)
                  {
                    uint64_t v177 = (unsigned __int8 *)v469;
                    uint64_t v178 = *(llvm::Type **)v469;
                    if ((*((unsigned char *)v469 + 23) & 0x10) == 0)
                    {
                      unsigned int v373 = 0;
                      std::string::size_type v372 = &byte_1CFBCE98E;
                      goto LABEL_653;
                    }
                    uint64_t v179 = **(void **)v178;
                    uint64_t v180 = *(void *)(v179 + 152);
                    uint64_t v181 = *(unsigned int *)(v179 + 168);
                    if (v181)
                    {
                      LODWORD(v182) = (v181 - 1) & ((v469 >> 4) ^ (v469 >> 9));
                      uint64_t v183 = v180 + 16 * v182;
                      uint64_t v184 = *(llvm **)v183;
                      if (*(llvm **)v183 == v469)
                      {
LABEL_652:
                        unint64_t v371 = *(void **)(v183 + 8);
                        uint64_t v374 = (void *)*v371;
                        std::string::size_type v372 = (char *)(v371 + 2);
                        unsigned int v373 = v374;
LABEL_653:
                        unint64_t v375 = *(uint64_t **)(a1 + 24);
                        __int16 v473 = 773;
                        uint64_t v470 = (uint64_t)v372;
                        uint64_t v471 = v373;
                        uint64_t v472 = ".signext";
                        if (v178 != (llvm::Type *)v8)
                        {
                          if (*((unsigned __int8 *)v469 + 16) <= 0x14u)
                          {
                            uint64_t v177 = (unsigned __int8 *)(*(uint64_t (**)(uint64_t, uint64_t, llvm *, uint64_t))(*(void *)v375[9] + 224))(v375[9], 40, v469, v8);
                            if (v177) {
                              BOOL v379 = v177[16] >= 0x1Cu;
                            }
                            else {
                              BOOL v379 = 0;
                            }
                            if (v379)
                            {
                              (*(void (**)(uint64_t, unsigned __int8 *, uint64_t *, uint64_t, uint64_t))(*(void *)v375[10] + 16))(v375[10], v177, &v470, v375[6], v375[7]);
                              uint64_t v445 = *((unsigned int *)v375 + 2);
                              if (v445)
                              {
                                uint64_t v446 = *v375;
                                uint64_t v447 = v446 + 16 * v445;
                                do
                                {
                                  llvm::Instruction::setMetadata((llvm::Instruction *)v177, *(_DWORD *)v446, *(llvm::MDNode **)(v446 + 8));
                                  v446 += 16;
                                }
                                while (v446 != v447);
                              }
                            }
                          }
                          else
                          {
                            LOWORD(v467) = 257;
                            uint64_t v177 = (unsigned __int8 *)llvm::CastInst::Create(40, (uint64_t)v469, v8, (const char **)__s2, 0);
                            (*(void (**)(uint64_t, unsigned __int8 *, uint64_t *, uint64_t, uint64_t))(*(void *)v375[10] + 16))(v375[10], v177, &v470, v375[6], v375[7]);
                            uint64_t v376 = *((unsigned int *)v375 + 2);
                            if (v376)
                            {
                              uint64_t v377 = *v375;
                              uint64_t v378 = v377 + 16 * v376;
                              do
                              {
                                llvm::Instruction::setMetadata((llvm::Instruction *)v177, *(_DWORD *)v377, *(llvm::MDNode **)(v377 + 8));
                                v377 += 16;
                              }
                              while (v377 != v378);
                            }
                          }
                        }
                        if ((*(_DWORD *)(v8 + 8) & 0xFE) == 0x12) {
                          uint64_t v8 = **(void **)(v8 + 16);
                        }
                        NullValue = llvm::Constant::getNullValue((llvm::Constant *)v8, v175, (const llvm::APFloat *)v60);
                        uint64_t v382 = llvm::Constant::replaceUndefsWith((llvm::Constant *)v58, NullValue, v381);
                        unint64_t v100 = llvm::Constant::mergeUndefsWith(v382, v464, v383);
                        LOWORD(v467) = 257;
                        unint64_t v101 = __s2;
                        char v102 = 28;
                        unint64_t v103 = (llvm::LLVMContext *)v177;
                        return llvm::BinaryOperator::Create(v102, v103, (uint64_t)v100, (const char **)v101, 0);
                      }
                      int v185 = 1;
                      while (v184 != (llvm *)-4096)
                      {
                        int v186 = v182 + v185++;
                        uint64_t v182 = v186 & (v181 - 1);
                        uint64_t v184 = *(llvm **)(v180 + 16 * v182);
                        if (v184 == v469)
                        {
                          uint64_t v183 = v180 + 16 * v182;
                          goto LABEL_652;
                        }
                      }
                    }
                    uint64_t v183 = v180 + 16 * v181;
                    goto LABEL_652;
                  }
LABEL_209:
                  uint64_t v128 = *(void *)(v6 - 64);
                  uint64_t v129 = *(void *)(v128 + 8);
                  if (!v129 || *(void *)(v129 + 8)) {
                    goto LABEL_266;
                  }
                  int v130 = *(llvm::Value **)(v6 - 32);
                  unsigned int v131 = *(unsigned __int8 *)(v128 + 16);
                  if (v131 > 0x2C)
                  {
                    if (v131 != 45 && v131 != 53 && v131 != 54) {
                      goto LABEL_266;
                    }
                    goto LABEL_223;
                  }
                  if (v131 != 5)
                  {
                    if (v131 != 41)
                    {
                      if (v131 != 43) {
                        goto LABEL_266;
                      }
                      unsigned int v132 = *(unsigned __int8 **)(v128 - 64);
                      if (!v132 || v132[16] > 0x14u) {
                        goto LABEL_266;
                      }
                      unsigned int v133 = *(llvm::Value **)(v128 - 32);
LABEL_218:
                      if (v130 != v133) {
                        goto LABEL_266;
                      }
LABEL_265:
                      uint64_t v459 = 0;
                      __s2[0] = &v459;
                      if (sub_1CBC5BE40((void **)__s2, (uint64_t)v130))
                      {
                        if (!llvm::Value::hasNUsesOrMore(v130, 3))
                        {
                          uint64_t v429 = *(llvm::Type **)v6;
                          if ((*(_DWORD *)(*(void *)v6 + 8) & 0xFE) == 0x12
                            || sub_1CC9D19EC(a1, *(llvm::Type **)v6, *(llvm::Type **)v459))
                          {
                            int v430 = *(unsigned __int8 *)(v128 + 16);
                            if ((v430 - 53) > 1) {
                              goto LABEL_811;
                            }
                            unint64_t v431 = *(llvm::Type **)v459;
                            if ((*(_DWORD *)(*(void *)v459 + 8) & 0xFE) == 0x12) {
                              unint64_t v431 = (llvm::Type *)**((void **)v431 + 2);
                            }
                            int v432 = llvm::Type::getPrimitiveSizeInBits(v431);
                            unint64_t v433 = *(llvm::Type **)v132;
                            if ((*(_DWORD *)(*(void *)v132 + 8) & 0xFE) == 0x12) {
                              unint64_t v433 = (llvm::Type *)**((void **)v433 + 2);
                            }
                            unsigned int v434 = llvm::Type::getPrimitiveSizeInBits(v433);
                            LODWORD(__s2[1]) = v434;
                            if (v434 > 0x40) {
                              operator new[]();
                            }
                            if (v434) {
                              unint64_t v435 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v434;
                            }
                            else {
                              LODWORD(v435) = 0;
                            }
                            __s2[0] = (void *)(v435 & v432);
                            uint64_t v470 = 36;
                            uint64_t v471 = __s2;
                            int v436 = sub_1CC9F981C((uint64_t)&v470, (llvm::Constant *)v132);
                            if (LODWORD(__s2[1]) >= 0x41 && __s2[0]) {
                              MEMORY[0x1D25D9CB0](__s2[0], 0x1000C8000313F17);
                            }
                            if (v436)
                            {
LABEL_811:
                              unint64_t v437 = sub_1CC56C0C0((llvm *)0x26, (llvm::detail::IEEEFloat *)v132, *(llvm::Constant **)v459, 0);
                              uint64_t v438 = *(void *)(a1 + 24);
                              unint64_t v439 = v459;
                              LOWORD(v467) = 257;
                              if (v430 == 43)
                              {
                                uint64_t v440 = 15;
                                uint64_t v441 = v437;
                              }
                              else
                              {
                                uint64_t v440 = (v430 - 28);
                                uint64_t v441 = v459;
                                unint64_t v439 = v437;
                              }
                              uint64_t v442 = sub_1CB844E98(v438, v440, (uint64_t)v441, (uint64_t)v439, (uint64_t)__s2, 0);
                              unint64_t v443 = operator new(0x60uLL);
                              unint64_t v15 = (unint64_t)(v443 + 8);
                              v443[13] = v443[13] & 0x38000000 | 1;
                              *(void *)unint64_t v443 = 0;
                              *((void *)v443 + 1) = 0;
                              *((void *)v443 + 2) = 0;
                              *((void *)v443 + 3) = v443 + 8;
                              uint64_t v444 = *(void *)(a1 + 24);
                              LOWORD(v467) = 257;
                              uint64_t v194 = sub_1CBF52474(v444, v442, (uint64_t)v459, (uint64_t)__s2);
                              __int16 v473 = 257;
                              uint64_t v192 = (void **)&v470;
                              uint64_t v193 = (llvm::ZExtInst *)v15;
                              uint64_t v195 = v429;
                              goto LABEL_342;
                            }
                          }
                        }
                      }
LABEL_266:
                      int v150 = *(_DWORD *)(*(void *)v6 + 8);
                      if ((v150 & 0xFE) == 0x12) {
                        int v150 = *(_DWORD *)(**(void **)(*(void *)v6 + 16) + 8);
                      }
                      if (v150 == 269)
                      {
                        if (*(unsigned char *)(v57 + 16) == 85)
                        {
                          unint64_t v15 = (unint64_t)sub_1CCA9F57C(a1, (uint64_t *)v58, (const llvm::APFloat *)v57, 1);
                          if (v15) {
                            return (llvm::Value *)v15;
                          }
                        }
                        if (*(unsigned char *)(v58 + 16) == 85)
                        {
                          if (v58)
                          {
                            unint64_t v15 = (unint64_t)sub_1CCA9F57C(a1, (uint64_t *)v57, (const llvm::APFloat *)v58, 1);
                            if (v15) {
                              return (llvm::Value *)v15;
                            }
                          }
                        }
                      }
                      unint64_t v15 = (unint64_t)sub_1CC9D74E0(a1, (unsigned char *)v6, v60, v61, v62);
                      if (v15) {
                        return (llvm::Value *)v15;
                      }
                      unint64_t v15 = (unint64_t)sub_1CCA062A4((uint64_t ***)v6, *(void *)(a1 + 24));
                      if (v15) {
                        return (llvm::Value *)v15;
                      }
                      uint64_t v459 = 0;
                      unsigned int v461 = 0;
                      unsigned int v462 = 0;
                      uint64_t v152 = *(void *)(v58 + 8);
                      if (!v152 || *(void *)(v152 + 8))
                      {
LABEL_278:
                        uint64_t v153 = *(void *)(v57 + 8);
                        if (!v153 || *(void *)(v153 + 8))
                        {
LABEL_280:
                          __s2[0] = (void *)v57;
                          __s2[1] = &v462;
                          if (sub_1CCA1699C((uint64_t *)__s2, v58))
                          {
                            unint64_t v100 = v462;
                            LOWORD(v467) = 257;
                            unint64_t v101 = __s2;
LABEL_282:
                            char v102 = 28;
                            unint64_t v103 = (llvm::LLVMContext *)v57;
                            return llvm::BinaryOperator::Create(v102, v103, (uint64_t)v100, (const char **)v101, 0);
                          }
                          __s2[0] = (void *)v58;
                          __s2[1] = &v462;
                          if (sub_1CCA1699C((uint64_t *)__s2, v57))
                          {
                            unint64_t v100 = v462;
                            LOWORD(v467) = 257;
                            unint64_t v101 = __s2;
LABEL_469:
                            char v102 = 28;
                            unint64_t v103 = (llvm::LLVMContext *)v58;
                            return llvm::BinaryOperator::Create(v102, v103, (uint64_t)v100, (const char **)v101, 0);
                          }
                          int v166 = *(unsigned __int8 *)(v57 + 16);
                          if (v166 == 5)
                          {
                            if (*(_WORD *)(v57 + 18) != 30) {
                              goto LABEL_491;
                            }
                            uint64_t v233 = (llvm::LLVMContext **)(v57 - 32 * (*(_DWORD *)(v57 + 20) & 0x7FFFFFF));
                            uint64_t v167 = *v233;
                            if (!*v233) {
                              goto LABEL_491;
                            }
                            uint64_t v459 = *v233;
                            unint64_t v168 = v233[4];
                            if (!v168) {
                              goto LABEL_491;
                            }
                          }
                          else
                          {
                            if (v166 != 58) {
                              goto LABEL_491;
                            }
                            uint64_t v167 = *(llvm::LLVMContext **)(v57 - 64);
                            if (!v167) {
                              goto LABEL_491;
                            }
                            uint64_t v459 = *(llvm::LLVMContext **)(v57 - 64);
                            unint64_t v168 = *(llvm::Value **)(v57 - 32);
                            if (!v168) {
                              goto LABEL_491;
                            }
                          }
                          unsigned int v462 = v168;
                          __s2[0] = v168;
                          __s2[1] = &v461;
                          *(void *)&long long v466 = v167;
                          if (sub_1CCA16C7C((uint64_t)__s2, v58))
                          {
                            if ((uint64_t v234 = *(void *)(v58 + 8)) != 0 && !*(void *)(v234 + 8)
                              || ((uint64_t v235 = *((void *)v461 + 1)) == 0
                                ? (BOOL v236 = 0)
                                : (BOOL v236 = *(void *)(v235 + 8) == 0),
                                  sub_1CC9F4000((uint64_t)v461, v236)))
                            {
                              uint64_t v275 = *(void *)(a1 + 24);
                              BOOL v162 = v461;
                              goto LABEL_464;
                            }
                          }
LABEL_491:
                          __s2[0] = &v459;
                          __s2[1] = &v461;
                          *(void *)&long long v466 = &v462;
                          if (!sub_1CCA16DD8((void **)__s2, v57)) {
                            goto LABEL_500;
                          }
                          int v292 = *(unsigned __int8 *)(v58 + 16);
                          if (v292 == 5)
                          {
                            if (*(_WORD *)(v58 + 18) != 30) {
                              goto LABEL_500;
                            }
                            uint64_t v294 = (llvm::Value **)(v58 - 32 * (*(_DWORD *)(v58 + 20) & 0x7FFFFFF));
                            if (v462 != *v294) {
                              goto LABEL_500;
                            }
                            uint64_t v293 = v294[4];
                          }
                          else
                          {
                            if (v292 != 58 || v462 != *(llvm::Value **)(v58 - 64)) {
                              goto LABEL_500;
                            }
                            uint64_t v293 = *(llvm::LLVMContext **)(v58 - 32);
                          }
                          if (v459 == v293)
                          {
                            if ((uint64_t v333 = *(void *)(v57 + 8)) != 0 && !*(void *)(v333 + 8)
                              || ((uint64_t v334 = *((void *)v461 + 1)) == 0
                                ? (BOOL v335 = 0)
                                : (BOOL v335 = *(void *)(v334 + 8) == 0),
                                  sub_1CC9F4000((uint64_t)v461, v335)))
                            {
                              uint64_t v276 = *(void *)(a1 + 24);
                              uint64_t v165 = v461;
                              goto LABEL_468;
                            }
                          }
LABEL_500:
                          __s2[0] = &v459;
                          *(void *)&long long v466 = &v462;
                          if (sub_1CC046BB0((void **)__s2, 30, v58))
                          {
                            unint64_t v103 = v459;
                            unint64_t v100 = v462;
                            int v295 = *(unsigned __int8 *)(v57 + 16);
                            if (v295 == 5)
                            {
                              if (*(_WORD *)(v57 + 18) == 29)
                              {
                                uint64_t v298 = (llvm::LLVMContext **)(v57 - 32 * (*(_DWORD *)(v57 + 20) & 0x7FFFFFF));
                                uint64_t v296 = *v298;
                                int v297 = v298[4];
LABEL_506:
                                if (v459 == v296 && v462 == v297 || v459 == v297 && v462 == v296) {
                                  goto LABEL_518;
                                }
                              }
                            }
                            else if (v295 == 57)
                            {
                              uint64_t v296 = *(llvm::LLVMContext **)(v57 - 64);
                              int v297 = *(llvm::Value **)(v57 - 32);
                              goto LABEL_506;
                            }
                          }
                          __s2[0] = &v459;
                          *(void *)&long long v466 = &v462;
                          if (!sub_1CC046BB0((void **)__s2, 30, v57)) {
                            goto LABEL_521;
                          }
                          unint64_t v103 = v459;
                          unint64_t v100 = v462;
                          int v299 = *(unsigned __int8 *)(v58 + 16);
                          if (v299 == 5)
                          {
                            if (*(_WORD *)(v58 + 18) != 29) {
                              goto LABEL_521;
                            }
                            unsigned int v302 = (llvm::LLVMContext **)(v58 - 32 * (*(_DWORD *)(v58 + 20) & 0x7FFFFFF));
                            unsigned int v300 = *v302;
                            unsigned int v301 = v302[4];
                          }
                          else
                          {
                            if (v299 != 57) {
                              goto LABEL_521;
                            }
                            unsigned int v300 = *(llvm::LLVMContext **)(v58 - 64);
                            unsigned int v301 = *(llvm::Value **)(v58 - 32);
                          }
                          if ((v459 != v300 || v462 != v301) && (v459 != v301 || v462 != v300))
                          {
LABEL_521:
                            __s2[0] = &v459;
                            *(void *)&long long v466 = &v462;
                            if (sub_1CC046BB0((void **)__s2, 29, v57))
                            {
                              unsigned int v304 = v459;
                              int v305 = *(unsigned __int8 *)(v58 + 16);
                              if (v305 == 5)
                              {
                                if (*(_WORD *)(v58 + 18) != 30) {
                                  goto LABEL_531;
                                }
                                uint64_t v308 = (llvm::LLVMContext **)(v58 - 32 * (*(_DWORD *)(v58 + 20) & 0x7FFFFFF));
                                uint64_t v306 = *v308;
                                int v307 = v308[4];
                              }
                              else
                              {
                                if (v305 != 58) {
                                  goto LABEL_531;
                                }
                                uint64_t v306 = *(llvm::LLVMContext **)(v58 - 64);
                                int v307 = *(llvm::Value **)(v58 - 32);
                              }
                              if (v459 == v306 && v462 == v307 || v459 == v307 && v462 == v306)
                              {
LABEL_539:
                                uint64_t v313 = *(void *)(a1 + 24);
                                LOWORD(v467) = 257;
                                unint64_t v103 = sub_1CC2427E8(v313, (uint64_t)v304, (uint64_t)__s2, v303);
                                unint64_t v100 = v462;
                                __int16 v473 = 257;
                                unint64_t v101 = (void **)&v470;
                                goto LABEL_540;
                              }
                            }
LABEL_531:
                            __s2[0] = &v459;
                            *(void *)&long long v466 = &v462;
                            if (!sub_1CC046BB0((void **)__s2, 29, v58)) {
                              goto LABEL_544;
                            }
                            unsigned int v304 = v459;
                            int v309 = *(unsigned __int8 *)(v57 + 16);
                            if (v309 == 5)
                            {
                              if (*(_WORD *)(v57 + 18) != 30) {
                                goto LABEL_544;
                              }
                              uint64_t v312 = (llvm::LLVMContext **)(v57 - 32 * (*(_DWORD *)(v57 + 20) & 0x7FFFFFF));
                              uint64_t v310 = *v312;
                              char v311 = v312[4];
                            }
                            else
                            {
                              if (v309 != 58) {
                                goto LABEL_544;
                              }
                              uint64_t v310 = *(llvm::LLVMContext **)(v57 - 64);
                              char v311 = *(llvm::Value **)(v57 - 32);
                            }
                            if ((v459 != v310 || v462 != v311) && (v459 != v311 || v462 != v310))
                            {
LABEL_544:
                              if (*(unsigned char *)(v57 + 16) == 81) {
                                uint64_t v314 = v57;
                              }
                              else {
                                uint64_t v314 = 0;
                              }
                              if (*(unsigned char *)(v58 + 16) == 81) {
                                uint64_t v315 = v58;
                              }
                              else {
                                uint64_t v315 = 0;
                              }
                              if (v314 && v315)
                              {
                                uint64_t v13 = sub_1CC9FC9A4(a1, v314, v315, (llvm::AssumptionCache *)v6);
                                if (v13) {
                                  return (llvm::Value *)sub_1CC9D3C84(a1, (llvm::ValueAsMetadata *)v6, v13);
                                }
                              }
                              else if (!v314)
                              {
                                goto LABEL_557;
                              }
                              uint64_t v316 = *(void *)(v58 + 8);
                              if (!v316 || *(void *)(v316 + 8)) {
                                goto LABEL_557;
                              }
                              int v328 = *(unsigned __int8 *)(v58 + 16);
                              if (v328 == 5)
                              {
                                if (*(_WORD *)(v58 + 18) != 28) {
                                  goto LABEL_557;
                                }
                                uint64_t v336 = v58 - 32 * (*(_DWORD *)(v58 + 20) & 0x7FFFFFF);
                                uint64_t v329 = *(llvm **)v336;
                                if (!*(void *)v336) {
                                  goto LABEL_557;
                                }
                                int v469 = *(llvm **)v336;
                                int v330 = *(llvm **)(v336 + 32);
                                if (!v330) {
                                  goto LABEL_557;
                                }
                              }
                              else
                              {
                                if (v328 != 56) {
                                  goto LABEL_557;
                                }
                                uint64_t v329 = *(llvm **)(v58 - 64);
                                if (!v329) {
                                  goto LABEL_557;
                                }
                                int v469 = *(llvm **)(v58 - 64);
                                int v330 = *(llvm **)(v58 - 32);
                                if (!v330) {
                                  goto LABEL_557;
                                }
                              }
                              unint64_t v464 = v330;
                              if (*((unsigned char *)v329 + 16) == 81)
                              {
                                uint64_t v337 = sub_1CC9FC9A4(a1, v314, (uint64_t)v329, (llvm::AssumptionCache *)v6);
                                int v330 = v464;
                                if (v337)
                                {
LABEL_604:
                                  uint64_t v340 = v337;
                                  uint64_t v341 = *(void *)(a1 + 24);
LABEL_627:
                                  LOWORD(v467) = 257;
                                  uint64_t v13 = sub_1CBF52474(v341, v340, (uint64_t)v330, (uint64_t)__s2);
                                  return (llvm::Value *)sub_1CC9D3C84(a1, (llvm::ValueAsMetadata *)v6, v13);
                                }
                              }
                              if (v330)
                              {
                                if (*((unsigned char *)v330 + 16) == 81)
                                {
                                  char v338 = sub_1CC9FC9A4(a1, v314, (uint64_t)v330, (llvm::AssumptionCache *)v6);
                                  if (v338)
                                  {
LABEL_626:
                                    uint64_t v340 = v338;
                                    uint64_t v341 = *(void *)(a1 + 24);
                                    int v330 = v469;
                                    goto LABEL_627;
                                  }
                                }
                              }
LABEL_557:
                              if (!v315 || (uint64_t v317 = *(void *)(v57 + 8)) == 0 || *(void *)(v317 + 8))
                              {
LABEL_560:
                                uint64_t v318 = *(void *)(v6 - 64);
                                if (!v318
                                  || *(unsigned char *)(v318 + 16) != 82
                                  || (uint64_t v319 = *(void *)(v6 - 32)) == 0
                                  || *(unsigned char *)(v319 + 16) != 82
                                  || (uint64_t v13 = sub_1CCA00074(a1, v318, v319, 1, 0)) == 0)
                                {
                                  unint64_t v15 = (unint64_t)sub_1CCA0660C(v6, *(void *)(a1 + 24));
                                  if (v15) {
                                    return (llvm::Value *)v15;
                                  }
                                  unint64_t v15 = (unint64_t)sub_1CCA002D4(a1, (unsigned __int8 *)v6);
                                  if (v15) {
                                    return (llvm::Value *)v15;
                                  }
                                  unint64_t v15 = (unint64_t)sub_1CC9D4074(a1, v6);
                                  if (v15) {
                                    return (llvm::Value *)v15;
                                  }
                                  uint64_t v470 = 0;
                                  __s2[0] = &v470;
                                  uint64_t v320 = *(void *)(v57 + 8);
                                  if (v320
                                    && !*(void *)(v320 + 8)
                                    && sub_1CBC5BEAC((void **)__s2, v57))
                                  {
                                    unint64_t v323 = (llvm::Instruction *)v470;
                                    int v324 = *(_DWORD *)(*(void *)v470 + 8);
                                    if ((v324 & 0xFE) == 0x12) {
                                      int v324 = *(_DWORD *)(**(void **)(*(void *)v470 + 16) + 8);
                                    }
                                    if (v324 == 269)
                                    {
                                      unsigned int v325 = llvm::Constant::getNullValue((llvm::Constant *)v8, v321, v322);
                                      LOWORD(v467) = 257;
                                      unint64_t v326 = v323;
                                      int v327 = (uint64_t *)v58;
                                      return sub_1CC199EFC((uint64_t)v326, v327, (uint64_t)v325, (const char **)__s2, 0, 0);
                                    }
                                  }
                                  __s2[0] = &v470;
                                  uint64_t v342 = *(void *)(v58 + 8);
                                  if (v342
                                    && !*(void *)(v342 + 8)
                                    && sub_1CBC5BEAC((void **)__s2, v58))
                                  {
                                    int v345 = (llvm::Instruction *)v470;
                                    int v346 = *(_DWORD *)(*(void *)v470 + 8);
                                    if ((v346 & 0xFE) == 0x12) {
                                      int v346 = *(_DWORD *)(**(void **)(*(void *)v470 + 16) + 8);
                                    }
                                    if (v346 == 269)
                                    {
                                      unsigned int v325 = llvm::Constant::getNullValue((llvm::Constant *)v8, v343, v344);
                                      LOWORD(v467) = 257;
                                      unint64_t v326 = v345;
                                      int v327 = (uint64_t *)v57;
                                      return sub_1CC199EFC((uint64_t)v326, v327, (uint64_t)v325, (const char **)__s2, 0, 0);
                                    }
                                  }
                                  int v347 = (llvm::Type *)v8;
                                  if ((*(_DWORD *)(v8 + 8) & 0xFE) == 0x12) {
                                    int v347 = **(llvm::Type ***)(v8 + 16);
                                  }
                                  int v350 = (void *)(llvm::Type::getPrimitiveSizeInBits(v347) - 1);
                                  LODWORD(v466) = 64;
                                  __s2[0] = &v469;
                                  __s2[1] = v350;
                                  int v351 = &v464;
                                  *((void *)&v466 + 1) = &v464;
                                  int v352 = *(unsigned __int8 *)(v6 + 16);
                                  if (v352 == 56)
                                  {
                                    uint64_t v353 = *(void *)(v6 - 64);
                                    uint64_t v354 = *(void *)(v353 + 8);
                                    if (v354 && !*(void *)(v354 + 8))
                                    {
                                      int v394 = *(unsigned __int8 *)(v353 + 16);
                                      if (v394 == 5)
                                      {
                                        if (*(_WORD *)(v353 + 18) != 27) {
                                          goto LABEL_617;
                                        }
                                        if (!*(void *)(v353 - 32 * (*(_DWORD *)(v353 + 20) & 0x7FFFFFF))) {
                                          goto LABEL_617;
                                        }
                                        int v469 = *(llvm **)(v353 - 32 * (*(_DWORD *)(v353 + 20) & 0x7FFFFFF));
                                        if (!sub_1CBF531E4((llvm::APInt *)&__s2[1], *(llvm::Constant **)(v353- 32 * (*(_DWORD *)(v353 + 20) & 0x7FFFFFF)+ 32)))goto LABEL_617; {
                                      }
                                        }
                                      else
                                      {
                                        if (v394 != 55) {
                                          goto LABEL_617;
                                        }
                                        if (!*(void *)(v353 - 64)) {
                                          goto LABEL_617;
                                        }
                                        int v469 = *(llvm **)(v353 - 64);
                                        if (!sub_1CBF53154((llvm::APInt *)&__s2[1], *(unsigned __int8 **)(v353 - 32))) {
                                          goto LABEL_617;
                                        }
                                      }
                                      uint64_t v410 = *(void *)(v6 - 32);
                                      if (v410)
                                      {
LABEL_737:
                                        **((void **)&v466 + 1) = v410;
                                        int v357 = 1;
                                        goto LABEL_636;
                                      }
                                    }
LABEL_617:
                                    uint64_t v355 = *(void *)(v6 - 32);
                                    uint64_t v356 = *(void *)(v355 + 8);
                                    if (!v356 || *(void *)(v356 + 8)) {
                                      goto LABEL_619;
                                    }
                                    int v395 = *(unsigned __int8 *)(v355 + 16);
                                    if (v395 == 5)
                                    {
                                      if (*(_WORD *)(v355 + 18) != 27) {
                                        goto LABEL_619;
                                      }
                                      uint64_t v411 = *(void *)(v355 - 32 * (*(_DWORD *)(v355 + 20) & 0x7FFFFFF));
                                      if (!v411) {
                                        goto LABEL_619;
                                      }
                                      *(void *)__s2[0] = v411;
                                      if (!sub_1CBF531E4((llvm::APInt *)&__s2[1], *(llvm::Constant **)(v355- 32 * (*(_DWORD *)(v355 + 20) & 0x7FFFFFF)+ 32)))goto LABEL_619; {
                                    }
                                      }
                                    else
                                    {
                                      if (v395 != 55) {
                                        goto LABEL_619;
                                      }
                                      uint64_t v396 = *(void *)(v355 - 64);
                                      if (!v396) {
                                        goto LABEL_619;
                                      }
                                      *(void *)__s2[0] = v396;
                                      if (!sub_1CBF53154((llvm::APInt *)&__s2[1], *(unsigned __int8 **)(v355 - 32))) {
                                        goto LABEL_619;
                                      }
                                    }
                                    uint64_t v410 = *(void *)(v6 - 64);
                                    if (v410) {
                                      goto LABEL_737;
                                    }
LABEL_619:
                                    int v357 = 0;
LABEL_636:
                                    if (v466 >= 0x41 && __s2[1]) {
                                      MEMORY[0x1D25D9CB0](__s2[1], 0x1000C8000313F17);
                                    }
                                    if (v357)
                                    {
                                      unint64_t v362 = llvm::Constant::getNullValue((llvm::Constant *)v8, v348, v349);
                                      uint64_t v363 = *(void *)(a1 + 24);
                                      __s2[0] = "isneg";
                                      LOWORD(v467) = 259;
                                      unint64_t v326 = sub_1CB845F20(v363, 40, v469, (uint64_t)v362, (uint64_t)__s2);
                                      int v327 = (uint64_t *)v464;
                                      LOWORD(v467) = 257;
                                      unsigned int v325 = v362;
                                      return sub_1CC199EFC((uint64_t)v326, v327, (uint64_t)v325, (const char **)__s2, 0, 0);
                                    }
                                    LODWORD(v466) = 64;
                                    __s2[0] = &v469;
                                    __s2[1] = v350;
                                    char v364 = &v464;
                                    unint64_t v467 = &v464;
                                    int v365 = *(unsigned __int8 *)(v6 + 16);
                                    if (v365 == 56)
                                    {
                                      uint64_t v366 = *(void *)(v6 - 64);
                                      uint64_t v367 = *(void *)(v366 + 8);
                                      if (v367
                                        && !*(void *)(v367 + 8)
                                        && sub_1CCA16F4C((void **)__s2, v366)
                                        && (char v368 = *(llvm **)(v6 - 32)) != 0
                                        || (uint64_t v348 = *(llvm::Type **)(v6 - 32), (v369 = *((void *)v348 + 1)) != 0)
                                        && !*(void *)(v369 + 8)
                                        && sub_1CCA16F4C((void **)__s2, (uint64_t)v348)
                                        && (char v368 = *(llvm **)(v6 - 64)) != 0)
                                      {
                                        uint64_t *v467 = v368;
                                        int v370 = 1;
                                      }
                                      else
                                      {
                                        int v370 = 0;
                                      }
                                      goto LABEL_701;
                                    }
                                    if (v365 == 5)
                                    {
                                      if (*(_WORD *)(v6 + 18) != 28) {
                                        goto LABEL_699;
                                      }
                                      uint64_t v384 = *(_DWORD *)(v6 + 20) & 0x7FFFFFF;
                                      uint64_t v385 = -v384;
                                      uint64_t v386 = *(void *)(v6 - 32 * v384);
                                      uint64_t v387 = *(void *)(v386 + 8);
                                      if (v387)
                                      {
                                        if (!*(void *)(v387 + 8))
                                        {
                                          int v388 = sub_1CCA16F4C((void **)__s2, v386);
                                          uint64_t v385 = -(uint64_t)(*(_DWORD *)(v6 + 20) & 0x7FFFFFF);
                                          if (v388)
                                          {
                                            uint64_t v389 = *(llvm **)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF) + 32);
                                            if (v389) {
                                              goto LABEL_677;
                                            }
                                          }
                                        }
                                      }
                                      uint64_t v348 = *(llvm::Type **)(v6 + 32 * v385 + 32);
                                      char v364 = (llvm **)*((void *)v348 + 1);
                                      if (v364)
                                      {
                                        if (!v364[1])
                                        {
                                          if (sub_1CCA16F4C((void **)__s2, (uint64_t)v348))
                                          {
                                            uint64_t v389 = *(llvm **)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF));
                                            if (v389)
                                            {
LABEL_677:
                                              uint64_t *v467 = v389;
                                              LOBYTE(v364) = 1;
                                              goto LABEL_700;
                                            }
                                          }
                                        }
LABEL_699:
                                        LOBYTE(v364) = 0;
                                      }
                                    }
LABEL_700:
                                    int v370 = (v365 == 5) & v364;
LABEL_701:
                                    if (v466 >= 0x41 && __s2[1]) {
                                      MEMORY[0x1D25D9CB0](__s2[1], 0x1000C8000313F17);
                                    }
                                    if (!v370)
                                    {
                                      if (sub_1CCA06844(a1, (unsigned __int8 *)v6)) {
                                        return (llvm::Value *)v6;
                                      }
                                      uint64_t v459 = 0;
                                      unsigned int v462 = 0;
                                      __s2[0] = 0;
                                      uint64_t v400 = *(const llvm::Instruction **)(v6 - 64);
                                      if (!v400 || *((unsigned char *)v400 + 16) != 83)
                                      {
                                        uint64_t v400 = *(const llvm::Instruction **)(v6 - 32);
                                        if (!v400 || *((unsigned char *)v400 + 16) != 83) {
                                          return 0;
                                        }
                                      }
                                      if ((llvm::matchSimpleRecurrence((uint64_t)v400, __s2, &v459, &v462) & 1) == 0) {
                                        return 0;
                                      }
                                      if (__s2[0] != (void *)v6) {
                                        return 0;
                                      }
                                      int v423 = v462;
                                      if (!llvm::DominatorTree::dominates(*(llvm::DominatorTree **)(a1 + 72), v462, v400))return 0; {
                                      uint64_t v424 = *(void *)(a1 + 24);
                                      }
                                      LOWORD(v467) = 257;
                                      int64_t v425 = sub_1CBF52474(v424, v459, (uint64_t)v423, (uint64_t)__s2);
                                      return (llvm::Value *)sub_1CC9D3C84(a1, (llvm::ValueAsMetadata *)v6, v425);
                                    }
                                    uint64_t v397 = llvm::Constant::getNullValue((llvm::Constant *)v8, v348, v349);
                                    uint64_t v398 = *(void *)(a1 + 24);
                                    __s2[0] = "isneg";
                                    LOWORD(v467) = 259;
                                    unint64_t v326 = sub_1CB845F20(v398, 40, v469, (uint64_t)v397, (uint64_t)__s2);
                                    unsigned int v325 = v464;
                                    LOWORD(v467) = 257;
                                    int v327 = (uint64_t *)v397;
                                    return sub_1CC199EFC((uint64_t)v326, v327, (uint64_t)v325, (const char **)__s2, 0, 0);
                                  }
                                  if (v352 != 5)
                                  {
LABEL_635:
                                    int v357 = (v352 == 5) & v351;
                                    goto LABEL_636;
                                  }
                                  if (*(_WORD *)(v6 + 18) != 28) {
                                    goto LABEL_634;
                                  }
                                  uint64_t v358 = *(void *)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF));
                                  uint64_t v359 = *(void *)(v358 + 8);
                                  if (v359 && !*(void *)(v359 + 8))
                                  {
                                    int v412 = *(unsigned __int8 *)(v358 + 16);
                                    if (v412 == 5)
                                    {
                                      if (*(_WORD *)(v358 + 18) != 27) {
                                        goto LABEL_632;
                                      }
                                      if (!*(void *)(v358 - 32 * (*(_DWORD *)(v358 + 20) & 0x7FFFFFF))) {
                                        goto LABEL_632;
                                      }
                                      int v469 = *(llvm **)(v358 - 32 * (*(_DWORD *)(v358 + 20) & 0x7FFFFFF));
                                      if (!sub_1CBF531E4((llvm::APInt *)&__s2[1], *(llvm::Constant **)(v358- 32 * (*(_DWORD *)(v358 + 20) & 0x7FFFFFF)+ 32)))goto LABEL_632; {
                                    }
                                      }
                                    else
                                    {
                                      if (v412 != 55) {
                                        goto LABEL_632;
                                      }
                                      if (!*(void *)(v358 - 64)) {
                                        goto LABEL_632;
                                      }
                                      int v469 = *(llvm **)(v358 - 64);
                                      if (!sub_1CBF53154((llvm::APInt *)&__s2[1], *(unsigned __int8 **)(v358 - 32))) {
                                        goto LABEL_632;
                                      }
                                    }
                                    int v351 = *(llvm ***)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF) + 32);
                                    if (v351) {
                                      goto LABEL_772;
                                    }
                                  }
LABEL_632:
                                  uint64_t v360 = *(void *)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF) + 32);
                                  uint64_t v361 = *(void *)(v360 + 8);
                                  if (!v361 || *(void *)(v361 + 8)) {
                                    goto LABEL_634;
                                  }
                                  int v413 = *(unsigned __int8 *)(v360 + 16);
                                  if (v413 == 5)
                                  {
                                    if (*(_WORD *)(v360 + 18) == 27)
                                    {
                                      uint64_t v422 = *(void *)(v360 - 32 * (*(_DWORD *)(v360 + 20) & 0x7FFFFFF));
                                      if (v422)
                                      {
                                        *(void *)__s2[0] = v422;
                                        if (sub_1CBF531E4((llvm::APInt *)&__s2[1], *(llvm::Constant **)(v360- 32 * (*(_DWORD *)(v360 + 20) & 0x7FFFFFF)+ 32)))
                                        {
LABEL_771:
                                          int v351 = *(llvm ***)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF));
                                          if (!v351) {
                                            goto LABEL_635;
                                          }
LABEL_772:
                                          **((void **)&v466 + 1) = v351;
                                          LOBYTE(v351) = 1;
                                          goto LABEL_635;
                                        }
                                      }
                                    }
                                  }
                                  else if (v413 == 55)
                                  {
                                    uint64_t v414 = *(void *)(v360 - 64);
                                    if (v414)
                                    {
                                      *(void *)__s2[0] = v414;
                                      if (sub_1CBF53154((llvm::APInt *)&__s2[1], *(unsigned __int8 **)(v360 - 32))) {
                                        goto LABEL_771;
                                      }
                                    }
                                  }
LABEL_634:
                                  LOBYTE(v351) = 0;
                                  goto LABEL_635;
                                }
                                return (llvm::Value *)sub_1CC9D3C84(a1, (llvm::ValueAsMetadata *)v6, v13);
                              }
                              int v331 = *(unsigned __int8 *)(v57 + 16);
                              if (v331 == 5)
                              {
                                if (*(_WORD *)(v57 + 18) != 28) {
                                  goto LABEL_560;
                                }
                                uint64_t v339 = v57 - 32 * (*(_DWORD *)(v57 + 20) & 0x7FFFFFF);
                                int v332 = *(llvm **)v339;
                                if (!*(void *)v339) {
                                  goto LABEL_560;
                                }
                                int v469 = *(llvm **)v339;
                                int v330 = *(llvm **)(v339 + 32);
                                if (!v330) {
                                  goto LABEL_560;
                                }
                              }
                              else
                              {
                                if (v331 != 56) {
                                  goto LABEL_560;
                                }
                                int v332 = *(llvm **)(v57 - 64);
                                if (!v332) {
                                  goto LABEL_560;
                                }
                                int v469 = *(llvm **)(v57 - 64);
                                int v330 = *(llvm **)(v57 - 32);
                                if (!v330) {
                                  goto LABEL_560;
                                }
                              }
                              unint64_t v464 = v330;
                              if (*((unsigned char *)v332 + 16) == 81)
                              {
                                uint64_t v337 = sub_1CC9FC9A4(a1, (uint64_t)v332, v315, (llvm::AssumptionCache *)v6);
                                int v330 = v464;
                                if (v337) {
                                  goto LABEL_604;
                                }
                              }
                              if (!v330) {
                                goto LABEL_560;
                              }
                              if (*((unsigned char *)v330 + 16) != 81) {
                                goto LABEL_560;
                              }
                              char v338 = sub_1CC9FC9A4(a1, (uint64_t)v330, v315, (llvm::AssumptionCache *)v6);
                              if (!v338) {
                                goto LABEL_560;
                              }
                              goto LABEL_626;
                            }
                            goto LABEL_539;
                          }
LABEL_518:
                          LOWORD(v467) = 257;
                          unint64_t v101 = __s2;
LABEL_540:
                          char v102 = 28;
                          return llvm::BinaryOperator::Create(v102, v103, (uint64_t)v100, (const char **)v101, 0);
                        }
                        int v163 = *(unsigned __int8 *)(v57 + 16);
                        if (v163 == 5)
                        {
                          if (*(_WORD *)(v57 + 18) != 30) {
                            goto LABEL_280;
                          }
                          uint64_t v231 = v57 - 32 * (*(_DWORD *)(v57 + 20) & 0x7FFFFFF);
                          uint64_t v165 = *(llvm::Value **)v231;
                          uint64_t v232 = *(llvm::Value **)(v231 + 32);
                          if ((llvm::Value *)v58 == v165)
                          {
                            uint64_t v165 = v232;
                            if (!v232) {
                              goto LABEL_280;
                            }
                          }
                          else if (!v165 || (llvm::Value *)v58 != v232)
                          {
                            goto LABEL_280;
                          }
                        }
                        else
                        {
                          if (v163 != 58) {
                            goto LABEL_280;
                          }
                          uint64_t v164 = *(llvm::Value **)(v57 - 64);
                          uint64_t v165 = *(llvm::Value **)(v57 - 32);
                          if ((llvm::Value *)v58 != v164)
                          {
                            if (!v164 || (llvm::Value *)v58 != v165) {
                              goto LABEL_280;
                            }
                            unsigned int v462 = *(llvm::Value **)(v57 - 64);
                            uint64_t v165 = v164;
LABEL_467:
                            uint64_t v276 = *(void *)(a1 + 24);
LABEL_468:
                            LOWORD(v467) = 257;
                            unint64_t v100 = sub_1CC2427E8(v276, (uint64_t)v165, (uint64_t)__s2, v151);
                            __int16 v473 = 257;
                            unint64_t v101 = (void **)&v470;
                            goto LABEL_469;
                          }
                          if (!v165) {
                            goto LABEL_280;
                          }
                        }
                        unsigned int v462 = v165;
                        goto LABEL_467;
                      }
                      int v160 = *(unsigned __int8 *)(v58 + 16);
                      if (v160 == 5)
                      {
                        if (*(_WORD *)(v58 + 18) != 30) {
                          goto LABEL_278;
                        }
                        uint64_t v220 = v58 - 32 * (*(_DWORD *)(v58 + 20) & 0x7FFFFFF);
                        BOOL v162 = *(llvm::Value **)v220;
                        uint64_t v221 = *(llvm::Value **)(v220 + 32);
                        if ((llvm::Value *)v57 == v162)
                        {
                          BOOL v162 = v221;
                          if (!v221) {
                            goto LABEL_278;
                          }
                        }
                        else if (!v162 || (llvm::Value *)v57 != v221)
                        {
                          goto LABEL_278;
                        }
                      }
                      else
                      {
                        if (v160 != 58) {
                          goto LABEL_278;
                        }
                        std::string::size_type v161 = *(llvm::Value **)(v58 - 64);
                        BOOL v162 = *(llvm::Value **)(v58 - 32);
                        if ((llvm::Value *)v57 != v161)
                        {
                          if (!v161 || (llvm::Value *)v57 != v162) {
                            goto LABEL_278;
                          }
                          unsigned int v462 = *(llvm::Value **)(v58 - 64);
                          BOOL v162 = v161;
LABEL_463:
                          uint64_t v275 = *(void *)(a1 + 24);
LABEL_464:
                          LOWORD(v467) = 257;
                          unint64_t v100 = sub_1CC2427E8(v275, (uint64_t)v162, (uint64_t)__s2, v151);
                          __int16 v473 = 257;
                          unint64_t v101 = (void **)&v470;
                          goto LABEL_282;
                        }
                        if (!v162) {
                          goto LABEL_278;
                        }
                      }
                      unsigned int v462 = v162;
                      goto LABEL_463;
                    }
LABEL_223:
                    if (v130 != *(llvm::Value **)(v128 - 64)) {
                      goto LABEL_266;
                    }
                    unsigned int v132 = *(unsigned __int8 **)(v128 - 32);
                    if (!v132 || v132[16] > 0x14u) {
                      goto LABEL_266;
                    }
                    goto LABEL_265;
                  }
                  unsigned int v145 = *(unsigned __int16 *)(v128 + 18);
                  if (v145 <= 0x10)
                  {
                    if (v145 != 13)
                    {
                      if (v145 != 15) {
                        goto LABEL_266;
                      }
                      uint64_t v149 = v128 - 32 * (*(_DWORD *)(v128 + 20) & 0x7FFFFFF);
                      unsigned int v132 = *(unsigned __int8 **)v149;
                      if (!*(void *)v149) {
                        goto LABEL_266;
                      }
                      unsigned int v133 = *(llvm::Value **)(v149 + 32);
                      goto LABEL_218;
                    }
                  }
                  else if (v145 != 17 && v145 != 25)
                  {
                    if (v145 != 26) {
                      goto LABEL_266;
                    }
                    unint64_t v146 = (llvm::Value **)(v128 - 32 * (*(_DWORD *)(v128 + 20) & 0x7FFFFFF));
                    if (v130 != *v146) {
                      goto LABEL_266;
                    }
                    goto LABEL_264;
                  }
                  unint64_t v146 = (llvm::Value **)(v128 - 32 * (*(_DWORD *)(v128 + 20) & 0x7FFFFFF));
                  if (v130 != *v146) {
                    goto LABEL_266;
                  }
LABEL_264:
                  unsigned int v132 = (unsigned __int8 *)v146[4];
                  if (!v132) {
                    goto LABEL_266;
                  }
                  goto LABEL_265;
                }
                uint64_t v261 = *v140;
                unint64_t v262 = (llvm::Type *)v261;
                if ((*(_DWORD *)(v261 + 8) & 0xFE) == 0x12) {
                  unint64_t v262 = **(llvm::Type ***)(v261 + 16);
                }
                unsigned int v263 = llvm::Type::getPrimitiveSizeInBits(v262);
                unsigned int v265 = v263;
                std::string::size_type v266 = (uint64_t *)v453;
                unsigned int v267 = *(_DWORD *)(v453 + 8);
                if (v263 > 0x40)
                {
                  if (v267 != v263) {
                    operator new[]();
                  }
                  sub_1CD0463BC((uint64_t)__s2, v453);
                }
                else
                {
                  if (v267 >= 0x41) {
                    std::string::size_type v266 = *(uint64_t **)v453;
                  }
                  uint64_t v268 = *v266;
                  LODWORD(__s2[1]) = v263;
                  unint64_t v269 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v263;
                  if (!v263) {
                    unint64_t v269 = 0;
                  }
                  __s2[0] = (void *)(v269 & v268);
                }
                int v270 = llvm::ConstantInt::get(*(llvm::ConstantInt **)v261, (llvm::LLVMContext *)__s2, v264);
                if ((*(_DWORD *)(v261 + 8) & 0xFE) == 0x12) {
                  int v270 = llvm::ConstantVector::getSplat((llvm::Type *)(*(unsigned int *)(v261 + 32) | ((unint64_t)(*(_DWORD *)(v261 + 8) == 19) << 32)), (uint64_t)v270);
                }
                if (LODWORD(__s2[1]) >= 0x41 && __s2[0]) {
                  MEMORY[0x1D25D9CB0](__s2[0], 0x1000C8000313F17);
                }
                uint64_t v271 = *(void *)(a1 + 24);
                uint64_t v272 = *(unsigned __int8 *)(v57 + 16) - 28;
                uint64_t v273 = v470;
                if (*(unsigned char *)(*(void *)(v57 - 64) + 16) == 67)
                {
                  LOWORD(v467) = 257;
                  uint64_t v274 = v470;
                  uint64_t v273 = (uint64_t)v270;
                }
                else
                {
                  LOWORD(v467) = 257;
                  uint64_t v274 = (uint64_t)v270;
                }
                uint64_t v278 = sub_1CB844E98(v271, v272, v274, v273, (uint64_t)__s2, 0);
                int v279 = *(llvm::Type **)v470;
                uint64_t v280 = v463;
                unsigned int v281 = v463[1].u32[0];
                if (v265 > 0x40)
                {
                  if (v281 != v265) {
                    operator new[]();
                  }
                  sub_1CD0463BC((uint64_t)__s2, (uint64_t)v463);
                }
                else
                {
                  if (v281 >= 0x41) {
                    uint64_t v280 = (int8x8_t *)*v463;
                  }
                  int8x8_t v282 = *v280;
                  LODWORD(__s2[1]) = v265;
                  unint64_t v283 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v265;
                  if (!v265) {
                    unint64_t v283 = 0;
                  }
                  __s2[0] = (void *)(v283 & *(void *)&v282);
                }
                int v284 = llvm::ConstantInt::get(*(llvm::ConstantInt **)v279, (llvm::LLVMContext *)__s2, v277);
                if ((*((_DWORD *)v279 + 2) & 0xFE) == 0x12) {
                  int v284 = llvm::ConstantVector::getSplat((llvm::Type *)(*((unsigned int *)v279 + 8) | ((unint64_t)(*((_DWORD *)v279 + 2) == 19) << 32)), (uint64_t)v284);
                }
                if (LODWORD(__s2[1]) >= 0x41 && __s2[0]) {
                  MEMORY[0x1D25D9CB0](__s2[0], 0x1000C8000313F17);
                }
                uint64_t v285 = *(void *)(a1 + 24);
                LOWORD(v467) = 257;
                uint64_t v190 = sub_1CBF52474(v285, v278, (uint64_t)v284, (uint64_t)__s2);
                BOOL v286 = operator new(0x60uLL);
                v286[13] = v286[13] & 0x38000000 | 1;
                unint64_t v15 = (unint64_t)(v286 + 8);
                *(void *)BOOL v286 = 0;
                *((void *)v286 + 1) = 0;
                *((void *)v286 + 2) = 0;
                *((void *)v286 + 3) = v286 + 8;
                LOWORD(v467) = 257;
LABEL_341:
                uint64_t v192 = __s2;
                uint64_t v193 = (llvm::ZExtInst *)v15;
                uint64_t v194 = v190;
                uint64_t v195 = (llvm::Type *)v8;
LABEL_342:
                llvm::ZExtInst::ZExtInst(v193, v194, v195, (const char **)v192, 0);
                return (llvm::Value *)v15;
              }
              uint64_t v106 = v463[1].u32[0];
              if (v106 > 0x40)
              {
                int v108 = 0;
                int64_t v109 = (unint64_t)(v106 + 63) >> 6;
                do
                {
                  BOOL v96 = v109-- < 1;
                  if (v96) {
                    break;
                  }
                  unint64_t v110 = *(void *)(*(void *)v463 + 8 * v109);
                  v108 += __clz(v110);
                }
                while (!v110);
                if ((v106 & 0x3F) != 0) {
                  int v111 = v106 | 0xFFFFFFC0;
                }
                else {
                  int v111 = 0;
                }
                int v107 = v108 + v111;
              }
              else
              {
                int v107 = v106 + __clz((unint64_t)*v463) - 64;
              }
              LODWORD(v471) = PrimitiveSizeInBits;
              if (PrimitiveSizeInBits > 0x40) {
                llvm::APInt::initSlowCase((llvm::APInt *)&v470);
              }
              uint64_t v470 = 0;
              if (PrimitiveSizeInBits != v107)
              {
                uint64_t v60 = PrimitiveSizeInBits - v107;
                if (v60 > 0x40)
                {
                  llvm::APInt::setBitsSlowCase(&v470, 0, v60);
                }
                else
                {
                  unint64_t v112 = 0xFFFFFFFFFFFFFFFFLL >> (v107 - PrimitiveSizeInBits);
                  if (v471 > 0x40) {
                    *(void *)v470 |= v112;
                  }
                  else {
                    v470 |= v112;
                  }
                }
              }
              if (*(_DWORD *)(v456 + 8) >= 0x41u) {
                operator new[]();
              }
              uint64_t v113 = v470;
              if ((v470 & *(void *)v456) == 0)
              {
                uint64_t v116 = v469;
                LOWORD(v467) = 257;
                char v117 = 28;
                uint64_t v118 = v58;
LABEL_188:
                unint64_t v15 = (unint64_t)llvm::BinaryOperator::Create(v117, v116, v118, (const char **)__s2, 0);
                int v115 = 0;
LABEL_189:
                if (v471 >= 0x41 && v113 != 0) {
                  MEMORY[0x1D25D9CB0](v113, 0x1000C8000313F17);
                }
                if (!v115) {
                  return (llvm::Value *)v15;
                }
                goto LABEL_195;
              }
              uint64_t v114 = *(void *)(v57 + 8);
              if (!v114 || *(void *)(v114 + 8)) {
                goto LABEL_185;
              }
              uint64_t v212 = v463[1].u32[0];
              if (v212 > 0x40)
              {
                int v237 = 0;
                unint64_t v238 = (unint64_t)(v212 + 63) >> 6;
                int v239 = (int8x8_t *)*v463;
                do
                {
                  int8x8_t v240 = *v239++;
                  uint8x8_t v241 = (uint8x8_t)vcnt_s8(v240);
                  v241.i16[0] = vaddlv_u8(v241);
                  v237 += v241.i32[0];
                  --v238;
                }
                while (v238);
                if (v237 == 1)
                {
                  unsigned int v455 = v463[1].u32[0];
                  operator new[]();
                }
                goto LABEL_185;
              }
              uint8x8_t v213 = (uint8x8_t)vcnt_s8(*v463);
              v213.i16[0] = vaddlv_u8(v213);
              if (v213.u32[0] != 1) {
                goto LABEL_185;
              }
              uint64_t v214 = (uint64_t *)v456;
              unsigned int v455 = v463[1].u32[0];
              int8x8_t v454 = *v463;
              llvm::APInt::operator-=((uint64_t)&v454, 1uLL);
              uint64_t v242 = v455;
              unsigned int v243 = (void *)v454;
              unsigned int v455 = 0;
              if (v242 < 0x41)
              {
                if ((*v214 & *(void *)&v454) == 0) {
                  goto LABEL_484;
                }
                goto LABEL_185;
              }
              uint64_t v250 = 0;
              uint64_t v251 = *v214;
              int64_t v252 = (unint64_t)(v242 + 63) >> 6;
              do
              {
                v243[v250] &= *(void *)(v251 + v250 * 8);
                ++v250;
              }
              while (v252 != v250);
              int v253 = 0;
              do
              {
                BOOL v96 = v252-- < 1;
                if (v96) {
                  break;
                }
                unint64_t v254 = v243[v252];
                v253 += __clz(v254);
              }
              while (!v254);
              BOOL v255 = 0;
              int v256 = v242 | 0xFFFFFFC0;
              if ((v242 & 0x3F) == 0) {
                int v256 = 0;
              }
              if ((v242 - v253 - v256) < 0x41) {
                BOOL v255 = *v243 == 0;
              }
              if (v243)
              {
                MEMORY[0x1D25D9CB0](v243, 0x1000C8000313F17);
                if (v455 < 0x41 || !*(void *)&v454)
                {
                  if (v255)
                  {
LABEL_484:
                    uint64_t v287 = *(void *)(a1 + 24);
                    LOWORD(v467) = 257;
                    uint64_t v116 = sub_1CBF52474(v287, v469, v58, (uint64_t)__s2);
                    LOWORD(v467) = 257;
                    char v117 = 30;
                    uint64_t v118 = v58;
                    goto LABEL_188;
                  }
LABEL_185:
                  int v115 = 1;
                  goto LABEL_189;
                }
                MEMORY[0x1D25D9CB0](*(void *)&v454, 0x1000C8000313F17);
              }
              if (v255) {
                goto LABEL_484;
              }
              goto LABEL_185;
            }
            uint64_t v417 = *(uint64_t **)(a1 + 24);
            uint64_t v418 = v469;
            __int16 v473 = 257;
            if (*(void *)v469 != v8)
            {
              if (*((unsigned __int8 *)v469 + 16) <= 0x14u)
              {
                uint64_t v426 = (*(uint64_t (**)(uint64_t, uint64_t, llvm *, uint64_t))(*(void *)v417[9] + 224))(v417[9], 40, v469, v8);
                uint64_t v418 = (llvm::Instruction *)v426;
                if (v426)
                {
                  if (*(unsigned __int8 *)(v426 + 16) >= 0x1Cu)
                  {
                    (*(void (**)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t))(*(void *)v417[10] + 16))(v417[10], v426, &v470, v417[6], v417[7]);
                    uint64_t v448 = *((unsigned int *)v417 + 2);
                    if (v448)
                    {
                      uint64_t v449 = *v417;
                      uint64_t v450 = v449 + 16 * v448;
                      do
                      {
                        llvm::Instruction::setMetadata(v418, *(_DWORD *)v449, *(llvm::MDNode **)(v449 + 8));
                        v449 += 16;
                      }
                      while (v449 != v450);
                    }
                  }
                }
              }
              else
              {
                LOWORD(v467) = 257;
                uint64_t v418 = llvm::CastInst::Create(40, (uint64_t)v469, v8, (const char **)__s2, 0);
                (*(void (**)(uint64_t, llvm::Instruction *, uint64_t *, uint64_t, uint64_t))(*(void *)v417[10]
                                                                                                  + 16))(v417[10], v418, &v470, v417[6], v417[7]);
                uint64_t v419 = *((unsigned int *)v417 + 2);
                if (v419)
                {
                  uint64_t v420 = *v417;
                  uint64_t v421 = v420 + 16 * v419;
                  do
                  {
                    llvm::Instruction::setMetadata(v418, *(_DWORD *)v420, *(llvm::MDNode **)(v420 + 8));
                    v420 += 16;
                  }
                  while (v420 != v421);
                }
              }
            }
            unint64_t v427 = *(llvm::Constant **)v459;
            LODWORD(__s2[1]) = PrimitiveSizeInBits;
            unint64_t v428 = 0xFFFFFFFFFFFFFFFFLL >> -(char)PrimitiveSizeInBits;
            if (!PrimitiveSizeInBits) {
              unint64_t v428 = 0;
            }
            __s2[0] = (void *)(v428 & (unint64_t)v427);
            Splat = llvm::ConstantInt::get(*(llvm::ConstantInt **)v8, (llvm::LLVMContext *)__s2, (const llvm::APInt *)v60);
            if ((*(_DWORD *)(v8 + 8) & 0xFE) == 0x12) {
              Splat = llvm::ConstantVector::getSplat((llvm::Type *)(*(unsigned int *)(v8 + 32) | ((unint64_t)(*(_DWORD *)(v8 + 8) == 19) << 32)), (uint64_t)Splat);
            }
            if (LODWORD(__s2[1]) >= 0x41 && __s2[0]) {
              MEMORY[0x1D25D9CB0](__s2[0], 0x1000C8000313F17);
            }
            LOWORD(v467) = 257;
            unint64_t v101 = __s2;
            char v102 = 26;
            unint64_t v103 = v418;
LABEL_361:
            unint64_t v100 = Splat;
            return llvm::BinaryOperator::Create(v102, v103, (uint64_t)v100, (const char **)v101, 0);
          }
          int v207 = 1;
          if (!llvm::MaskedValueIsZero(v464, (const llvm::Value *)&v470, *(const llvm::APInt **)(a1 + 80), 0, *(const llvm::DataLayout **)(a1 + 56), (llvm::AssumptionCache *)v6, *(const llvm::Instruction **)(a1 + 72), (const llvm::DominatorTree *)1, v452))
          {
            unint64_t v15 = 0;
            goto LABEL_416;
          }
          uint64_t v222 = *(void *)(a1 + 24);
          if ((*((unsigned char *)v469 + 23) & 0x10) == 0)
          {
            char v290 = 0;
            uint64_t v289 = &byte_1CFBCE98E;
            goto LABEL_487;
          }
          uint64_t v223 = ***(void ***)v469;
          uint64_t v224 = *(void *)(v223 + 152);
          uint64_t v225 = *(unsigned int *)(v223 + 168);
          if (v225)
          {
            LODWORD(v226) = (v225 - 1) & ((v469 >> 4) ^ (v469 >> 9));
            uint64_t v227 = v224 + 16 * v226;
            uint64_t v228 = *(llvm **)v227;
            if (*(llvm **)v227 == v469)
            {
LABEL_486:
              int v288 = *(void **)(v227 + 8);
              int v291 = (void *)*v288;
              uint64_t v289 = (char *)(v288 + 2);
              char v290 = v291;
LABEL_487:
              LOWORD(v467) = 773;
              __s2[0] = v289;
              __s2[1] = v290;
              *(void *)&long long v466 = ".masked";
              int v249 = sub_1CBF52474(v222, v469, v58, (uint64_t)__s2);
              uint64_t v248 = v464;
              goto LABEL_415;
            }
            int v229 = 1;
            while (v228 != (llvm *)-4096)
            {
              int v230 = v226 + v229++;
              uint64_t v226 = v230 & (v225 - 1);
              uint64_t v228 = *(llvm **)(v224 + 16 * v226);
              if (v228 == v469)
              {
                uint64_t v227 = v224 + 16 * v226;
                goto LABEL_486;
              }
            }
          }
          uint64_t v227 = v224 + 16 * v225;
          goto LABEL_486;
        }
LABEL_71:
        LOWORD(v467) = 257;
        Not = llvm::BinaryOperator::Create(30, v459, (uint64_t)v469, (const char **)__s2, 0);
        goto LABEL_79;
      }
      if (*(_WORD *)(v22 + 18) != 30) {
        goto LABEL_72;
      }
      uint64_t v28 = *(_DWORD *)(v22 + 20) & 0x7FFFFFF;
      uint64_t v29 = -v28;
      __int16 v30 = (llvm::Constant **)(v22 - 32 * v28);
      uint64_t v31 = *v30;
      int v32 = *((unsigned __int8 *)*v30 + 16);
      if (v32 == 5)
      {
        if (*((_WORD *)v31 + 9) != 28) {
          goto LABEL_59;
        }
        uint64_t v43 = (uint64_t *)((char *)v31 - 32 * (*((_DWORD *)v31 + 5) & 0x7FFFFFF));
        uint64_t v33 = *v43;
        uint64_t v44 = v43[4];
        if (*(void *)v466 != v33 || **((void **)&v466 + 1) != v44)
        {
          if (*(void *)v466 != v44) {
            goto LABEL_59;
          }
LABEL_56:
          if (**((void **)&v466 + 1) != v33) {
            goto LABEL_59;
          }
        }
      }
      else
      {
        if (v32 != 56) {
          goto LABEL_59;
        }
        uint64_t v33 = *((void *)v31 - 8);
        uint64_t v34 = *((void *)v31 - 4);
        if (*(void *)v466 != v33 || **((void **)&v466 + 1) != v34)
        {
          if (*(void *)v466 != v34) {
            goto LABEL_59;
          }
          goto LABEL_56;
        }
      }
      if (sub_1CBF68974((uint64_t)&v467, v30[4])) {
        goto LABEL_71;
      }
      uint64_t v29 = -(uint64_t)(*(_DWORD *)(v22 + 20) & 0x7FFFFFF);
LABEL_59:
      uint64_t v45 = v22 + 32 * v29;
      uint64_t v46 = *(void *)(v45 + 32);
      int v47 = *(unsigned __int8 *)(v46 + 16);
      if (v47 == 5)
      {
        if (*(_WORD *)(v46 + 18) != 28) {
          goto LABEL_72;
        }
        unsigned int v50 = (uint64_t *)(v46 - 32 * (*(_DWORD *)(v46 + 20) & 0x7FFFFFF));
        uint64_t v48 = *v50;
        uint64_t v51 = v50[4];
        if (*(void *)v466 == v48 && **((void **)&v466 + 1) == v51) {
          goto LABEL_70;
        }
        if (*(void *)v466 != v51) {
          goto LABEL_72;
        }
      }
      else
      {
        if (v47 != 56) {
          goto LABEL_72;
        }
        uint64_t v48 = *(void *)(v46 - 64);
        uint64_t v49 = *(void *)(v46 - 32);
        if (*(void *)v466 == v48 && **((void **)&v466 + 1) == v49) {
          goto LABEL_70;
        }
        if (*(void *)v466 != v49) {
          goto LABEL_72;
        }
      }
      if (**((void **)&v466 + 1) != v48) {
        goto LABEL_72;
      }
LABEL_70:
      if (!sub_1CBF68974((uint64_t)&v467, *(llvm::Constant **)v45)) {
        goto LABEL_72;
      }
      goto LABEL_71;
    }
  }
  return (llvm::Value *)v15;
}

llvm::Value *sub_1CCA055B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(unsigned __int8 *)(a1 + 16) - 28;
  uint64_t v4 = *(void *)(a1 - 64);
  if (*(unsigned char *)(a1 + 16) == 56) {
    uint64_t v5 = 29;
  }
  else {
    uint64_t v5 = 28;
  }
  uint64_t v6 = *(void *)(a1 - 32);
  uint64_t v105 = 0;
  uint64_t v106 = 0;
  unint64_t v103 = 0;
  int v104 = 0;
  uint64_t v101 = 0;
  uint64_t v102 = 0;
  int v107 = (uint64_t *)&v103;
  int v108 = (uint64_t *)&v106;
  int64_t v109 = (uint64_t *)&v105;
  LODWORD(v110) = v3;
  unint64_t v112 = (uint64_t *)&v104;
  int v113 = v5;
  int v7 = *(unsigned __int8 *)(v4 + 16);
  int v8 = v5 + 28;
  if (v5 + 28 != v7)
  {
    if (v7 != 5 || v5 != *(unsigned __int16 *)(v4 + 18)) {
      goto LABEL_73;
    }
    uint64_t v21 = *(_DWORD *)(v4 + 20) & 0x7FFFFFF;
    uint64_t v22 = *(void *)(v4 - 32 * v21);
    if (v22)
    {
      unint64_t v103 = *(llvm::Instruction **)(v4 - 32 * v21);
      int v23 = sub_1CCA13CE8((uint64_t)&v108, v22);
      uint64_t v24 = -(uint64_t)(*(_DWORD *)(v4 + 20) & 0x7FFFFFF);
      if (v23)
      {
        uint64_t v25 = *(void *)(v4 - 32 * (*(_DWORD *)(v4 + 20) & 0x7FFFFFF) + 32);
        if (v25)
        {
LABEL_57:
          *unint64_t v112 = v25;
          goto LABEL_12;
        }
      }
    }
    else
    {
      uint64_t v24 = -v21;
    }
    uint64_t v36 = *(void *)(v4 + 32 * v24 + 32);
    if (!v36) {
      goto LABEL_73;
    }
    *int v107 = v36;
    if (!sub_1CCA13CE8((uint64_t)&v108, v36)) {
      goto LABEL_73;
    }
    uint64_t v25 = *(void *)(v4 - 32 * (*(_DWORD *)(v4 + 20) & 0x7FFFFFF));
    if (!v25) {
      goto LABEL_73;
    }
    goto LABEL_57;
  }
  uint64_t v9 = *(void *)(v4 - 64);
  if (!v9
    || (unint64_t v103 = *(llvm::Instruction **)(v4 - 64), !sub_1CCA13CE8((uint64_t)&v108, v9))
    || (uint64_t v10 = *(void *)(v4 - 32)) == 0)
  {
    uint64_t v11 = *(void *)(v4 - 32);
    if (!v11) {
      goto LABEL_73;
    }
    *int v107 = v11;
    if (!sub_1CCA13CE8((uint64_t)&v108, v11)) {
      goto LABEL_73;
    }
    uint64_t v10 = *(void *)(v4 - 64);
    if (!v10) {
      goto LABEL_73;
    }
  }
  *unint64_t v112 = v10;
LABEL_12:
  uint64_t v12 = *(void *)(v6 + 8);
  if (!v12) {
    goto LABEL_22;
  }
  if (!*(void *)(v12 + 8))
  {
    int v107 = &v101;
    int v108 = v106;
    int64_t v109 = v104;
    LODWORD(v110) = v3;
    unint64_t v112 = v105;
    int v113 = v5;
    if (sub_1CCA140F0((uint64_t)&v107, v5, v6))
    {
      uint64_t v13 = *(void *)(v101 + 8);
      if (v13)
      {
        if (!*(void *)(v13 + 8))
        {
          LOWORD(v111) = 257;
          int v38 = sub_1CC2428C0(a2, (uint64_t)v105, (uint64_t)v104, (uint64_t)&v107);
          uint64_t v39 = (uint64_t)v106;
LABEL_61:
          if (v3 != 29)
          {
            LOWORD(v91) = 257;
            int v32 = (llvm::Constant **)sub_1CBF52474(a2, v38, v39, (uint64_t)&v87);
            __int16 v100 = 257;
            uint64_t v34 = (llvm::Value *)&v99;
            return llvm::BinaryOperator::CreateNot(v32, v34, 0, v33);
          }
          LOWORD(v111) = 257;
          uint64_t v40 = sub_1CC2427E8(a2, v39, (uint64_t)&v107, v37);
          LOWORD(v96) = 257;
          uint64_t v41 = (const char **)&v92;
          char v42 = 28;
          uint64_t v43 = v38;
          return llvm::BinaryOperator::Create(v42, v43, (uint64_t)v40, v41, 0);
        }
      }
    }
  }
  uint64_t v14 = *(void *)(v6 + 8);
  if (v14)
  {
    if (!*(void *)(v14 + 8))
    {
      int v107 = &v101;
      int v108 = v105;
      int64_t v109 = v104;
      LODWORD(v110) = v3;
      unint64_t v112 = v106;
      int v113 = v5;
      if (sub_1CCA140F0((uint64_t)&v107, v5, v6))
      {
        uint64_t v15 = *(void *)(v101 + 8);
        if (v15)
        {
          if (!*(void *)(v15 + 8))
          {
            LOWORD(v111) = 257;
            int v38 = sub_1CC2428C0(a2, (uint64_t)v106, (uint64_t)v104, (uint64_t)&v107);
            uint64_t v39 = (uint64_t)v105;
            goto LABEL_61;
          }
        }
      }
    }
  }
LABEL_22:
  uint64_t v16 = (uint64_t)v104;
  int v107 = v106;
  int v108 = v104;
  LODWORD(v109) = v3;
  uint64_t v17 = *(void *)(v6 + 8);
  if (v17 && !*(void *)(v17 + 8))
  {
    char v31 = sub_1CCA14580((uint64_t)&v107, v6);
    uint64_t v16 = (uint64_t)v104;
    uint64_t v18 = (uint64_t)v105;
    if (v31)
    {
      LOWORD(v111) = 257;
      uint64_t v19 = sub_1CB844E98(a2, v5, (uint64_t)v105, (uint64_t)v104, (uint64_t)&v107, 0);
      uint64_t v20 = (uint64_t)v106;
      goto LABEL_51;
    }
    uint64_t v17 = *(void *)(v6 + 8);
  }
  else
  {
    uint64_t v18 = (uint64_t)v105;
  }
  int v107 = (uint64_t *)v18;
  int v108 = (uint64_t *)v16;
  LODWORD(v109) = v3;
  if (v17 && !*(void *)(v17 + 8) && sub_1CCA14580((uint64_t)&v107, v6))
  {
    LOWORD(v111) = 257;
    uint64_t v19 = sub_1CB844E98(a2, v5, (uint64_t)v106, (uint64_t)v104, (uint64_t)&v107, 0);
    uint64_t v20 = (uint64_t)v105;
LABEL_51:
    LOWORD(v96) = 257;
    int v32 = (llvm::Constant **)sub_1CB844E98(a2, v3, (uint64_t)v19, v20, (uint64_t)&v92, 0);
    LOWORD(v91) = 257;
    uint64_t v34 = (llvm::Value *)&v87;
    return llvm::BinaryOperator::CreateNot(v32, v34, 0, v33);
  }
  if (v3 == 29)
  {
    uint64_t v26 = *(void *)(v4 + 8);
    if (v26)
    {
      if (!*(void *)(v26 + 8))
      {
        int v107 = &v102;
        int v108 = v104;
        int64_t v109 = v106;
        unint64_t v110 = v105;
        LODWORD(v111) = 29;
        uint64_t v27 = *(void *)(v6 + 8);
        if (v27)
        {
          if (!*(void *)(v27 + 8))
          {
            int v28 = *(unsigned __int8 *)(v6 + 16);
            if (v28 == 5)
            {
              if (*(_WORD *)(v6 + 18) != 30) {
                goto LABEL_73;
              }
              int v44 = *(_DWORD *)(v6 + 20);
              uint64_t v45 = (uint64_t *)(v6 - 32 * (v44 & 0x7FFFFFF));
              uint64_t v46 = *v45;
              if (*v45)
              {
                uint64_t v102 = *v45;
                BOOL v47 = sub_1CCA14944((uint64_t *)&v108, 29, v46);
                int v44 = *(_DWORD *)(v6 + 20);
                if (v47)
                {
                  if (sub_1CBF68974((uint64_t)&v112, *(llvm::Constant **)(v6 - 32 * (v44 & 0x7FFFFFF) + 32))) {
                    goto LABEL_72;
                  }
                  int v44 = *(_DWORD *)(v6 + 20);
                }
              }
              uint64_t v48 = *(void *)(v6 - 32 * (v44 & 0x7FFFFFF) + 32);
              if (!v48) {
                goto LABEL_73;
              }
              *int v107 = v48;
              if (!sub_1CCA14944((uint64_t *)&v108, (int)v111, v48)
                || !sub_1CBF68974((uint64_t)&v112, *(llvm::Constant **)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF))))
              {
                goto LABEL_73;
              }
            }
            else
            {
              if (v28 != 58) {
                goto LABEL_73;
              }
              uint64_t v29 = *(void *)(v6 - 64);
              if (!v29
                || (uint64_t v102 = *(void *)(v6 - 64), !sub_1CCA14944((uint64_t *)&v108, 29, v29))
                || (sub_1CBF687D0((uint64_t)&v112, *(llvm::Constant **)(v6 - 32)) & 1) == 0)
              {
                uint64_t v30 = *(void *)(v6 - 32);
                if (!v30) {
                  goto LABEL_73;
                }
                *int v107 = v30;
                if (!sub_1CCA14944((uint64_t *)&v108, (int)v111, v30)
                  || (sub_1CBF687D0((uint64_t)&v112, *(llvm::Constant **)(v6 - 64)) & 1) == 0)
                {
                  goto LABEL_73;
                }
              }
            }
LABEL_72:
            uint64_t v49 = (void *)*((void *)v103 - 8);
            LOWORD(v111) = 257;
            int v32 = (llvm::Constant **)sub_1CBF52474(a2, v49, v102, (uint64_t)&v107);
            LOWORD(v96) = 257;
LABEL_152:
            uint64_t v34 = (llvm::Value *)&v92;
            return llvm::BinaryOperator::CreateNot(v32, v34, 0, v33);
          }
        }
      }
    }
  }
LABEL_73:
  int v107 = (uint64_t *)&v105;
  int v108 = (uint64_t *)&v104;
  LODWORD(v109) = v5;
  unint64_t v110 = (uint64_t *)&v103;
  int v111 = (uint64_t *)&v106;
  int v113 = v5;
  uint64_t v50 = *(void *)(v4 + 8);
  if (!v50 || *(void *)(v50 + 8)) {
    goto LABEL_122;
  }
  int v51 = v5 + 28;
  int v52 = *(unsigned __int8 *)(v4 + 16);
  if (v8 != v52)
  {
    if (v52 != 5 || v5 != *(unsigned __int16 *)(v4 + 18)) {
      goto LABEL_121;
    }
    uint64_t v58 = *(void *)(v4 - 32 * (*(_DWORD *)(v4 + 20) & 0x7FFFFFF));
    int v59 = *(unsigned __int8 *)(v58 + 16);
    if (v8 == v59)
    {
      if (*(void *)(v58 - 64))
      {
        uint64_t v105 = *(uint64_t **)(v58 - 64);
        uint64_t v60 = *(void *)(v58 - 32);
        if (v60) {
          goto LABEL_87;
        }
      }
    }
    else if (v59 == 5 && v5 == *(unsigned __int16 *)(v58 + 18))
    {
      if (*(void *)(v58 - 32 * (*(_DWORD *)(v58 + 20) & 0x7FFFFFF)))
      {
        uint64_t v105 = *(uint64_t **)(v58 - 32 * (*(_DWORD *)(v58 + 20) & 0x7FFFFFF));
        uint64_t v60 = *(void *)(v58 - 32 * (*(_DWORD *)(v58 + 20) & 0x7FFFFFF) + 32);
        if (v60)
        {
LABEL_87:
          int v104 = (uint64_t *)v60;
          uint64_t v61 = *(void *)(v4 - 32 * (*(_DWORD *)(v4 + 20) & 0x7FFFFFF) + 32);
          int v62 = v5;
          if (v61)
          {
            uint64_t *v110 = v61;
            if (sub_1CBF686A0(&v111, 30, v61)) {
              goto LABEL_138;
            }
            int v62 = (int)v109;
            int v51 = v109 + 28;
          }
LABEL_111:
          uint64_t v69 = *(void *)(v4 - 32 * (*(_DWORD *)(v4 + 20) & 0x7FFFFFF) + 32);
          int v70 = *(unsigned __int8 *)(v69 + 16);
          if (v51 == v70)
          {
            uint64_t v71 = *(void *)(v69 - 64);
            if (!v71) {
              goto LABEL_121;
            }
            *int v107 = v71;
            uint64_t v72 = *(void *)(v69 - 32);
            if (!v72) {
              goto LABEL_121;
            }
          }
          else
          {
            if (v70 != 5) {
              goto LABEL_121;
            }
            if (v62 != *(unsigned __int16 *)(v69 + 18)) {
              goto LABEL_121;
            }
            uint64_t v73 = *(void *)(v69 - 32 * (*(_DWORD *)(v69 + 20) & 0x7FFFFFF));
            if (!v73) {
              goto LABEL_121;
            }
            *int v107 = v73;
            uint64_t v72 = *(void *)(v69 - 32 * (*(_DWORD *)(v69 + 20) & 0x7FFFFFF) + 32);
            if (!v72) {
              goto LABEL_121;
            }
          }
          *int v108 = v72;
          uint64_t v74 = *(void *)(v4 - 32 * (*(_DWORD *)(v4 + 20) & 0x7FFFFFF));
          if (v74)
          {
            uint64_t *v110 = v74;
            if (sub_1CBF686A0(&v111, 30, v74)) {
              goto LABEL_138;
            }
          }
          goto LABEL_121;
        }
      }
    }
    int v62 = v5;
    goto LABEL_111;
  }
  uint64_t v53 = *(void *)(v4 - 64);
  int v54 = *(unsigned __int8 *)(v53 + 16);
  if (v8 == v54)
  {
    if (*(void *)(v53 - 64))
    {
      uint64_t v105 = *(uint64_t **)(v53 - 64);
      uint64_t v55 = *(void *)(v53 - 32);
      if (v55) {
        goto LABEL_79;
      }
    }
LABEL_94:
    int v57 = v5;
    goto LABEL_95;
  }
  if (v54 != 5) {
    goto LABEL_94;
  }
  if (v5 != *(unsigned __int16 *)(v53 + 18)) {
    goto LABEL_94;
  }
  if (!*(void *)(v53 - 32 * (*(_DWORD *)(v53 + 20) & 0x7FFFFFF))) {
    goto LABEL_94;
  }
  uint64_t v105 = *(uint64_t **)(v53 - 32 * (*(_DWORD *)(v53 + 20) & 0x7FFFFFF));
  uint64_t v55 = *(void *)(v53 - 32 * (*(_DWORD *)(v53 + 20) & 0x7FFFFFF) + 32);
  if (!v55) {
    goto LABEL_94;
  }
LABEL_79:
  int v104 = (uint64_t *)v55;
  uint64_t v56 = *(void *)(v4 - 32);
  int v57 = v5;
  if (v56)
  {
    uint64_t *v110 = v56;
    if (sub_1CBF686A0(&v111, 30, v56)) {
      goto LABEL_138;
    }
    int v57 = (int)v109;
    int v51 = v109 + 28;
  }
LABEL_95:
  uint64_t v63 = *(void *)(v4 - 32);
  int v64 = *(unsigned __int8 *)(v63 + 16);
  if (v51 != v64)
  {
    if (v64 != 5) {
      goto LABEL_121;
    }
    if (v57 != *(unsigned __int16 *)(v63 + 18)) {
      goto LABEL_121;
    }
    uint64_t v67 = *(void *)(v63 - 32 * (*(_DWORD *)(v63 + 20) & 0x7FFFFFF));
    if (!v67) {
      goto LABEL_121;
    }
    *int v107 = v67;
    uint64_t v66 = *(void *)(v63 - 32 * (*(_DWORD *)(v63 + 20) & 0x7FFFFFF) + 32);
    if (!v66) {
      goto LABEL_121;
    }
LABEL_103:
    *int v108 = v66;
    uint64_t v68 = *(void *)(v4 - 64);
    if (v68)
    {
      uint64_t *v110 = v68;
      if (sub_1CBF686A0(&v111, 30, v68)) {
        goto LABEL_138;
      }
    }
    goto LABEL_121;
  }
  uint64_t v65 = *(void *)(v63 - 64);
  if (v65)
  {
    *int v107 = v65;
    uint64_t v66 = *(void *)(v63 - 32);
    if (v66) {
      goto LABEL_103;
    }
  }
LABEL_121:
  uint64_t v50 = *(void *)(v4 + 8);
LABEL_122:
  unint64_t v92 = (uint64_t *)&v104;
  unint64_t v93 = &v103;
  int v94 = (uint64_t *)&v106;
  int v96 = v5;
  unint64_t v97 = (uint64_t *)&v105;
  int v98 = v5;
  if (!v50 || *(void *)(v50 + 8)) {
    return 0;
  }
  int v75 = *(unsigned __int8 *)(v4 + 16);
  if (v8 == v75)
  {
    BOOL v76 = sub_1CCA14AF0(&v92, v5, *(void *)(v4 - 64));
    uint64_t v77 = *(void *)(v4 - 32);
    if (!v76 || !v77)
    {
      if (!sub_1CCA14AF0(&v92, v96, v77)) {
        return 0;
      }
      uint64_t v77 = *(void *)(v4 - 64);
      if (!v77) {
        return 0;
      }
    }
  }
  else
  {
    if (v75 != 5 || v5 != *(unsigned __int16 *)(v4 + 18)) {
      return 0;
    }
    BOOL v78 = sub_1CCA14AF0(&v92, v5, *(void *)(v4 - 32 * (*(_DWORD *)(v4 + 20) & 0x7FFFFFF)));
    uint64_t v77 = *(void *)(v4 - 32 * (*(_DWORD *)(v4 + 20) & 0x7FFFFFF) + 32);
    if (!v78 || !v77)
    {
      if (!sub_1CCA14AF0(&v92, v96, v77)) {
        return 0;
      }
      uint64_t v77 = *(void *)(v4 - 32 * (*(_DWORD *)(v4 + 20) & 0x7FFFFFF));
      if (!v77) {
        return 0;
      }
    }
  }
  *unint64_t v97 = v77;
LABEL_138:
  unint64_t v80 = v105;
  uint64_t v79 = (uint64_t)v106;
  uint64_t v81 = (uint64_t)v104;
  int v107 = v106;
  int v108 = v105;
  LODWORD(v109) = v3;
  unint64_t v110 = v104;
  LODWORD(v111) = v3;
  uint64_t v82 = *(void *)(v6 + 8);
  if (v82 && !*(void *)(v82 + 8))
  {
    if (sub_1CCA14C5C((uint64_t)&v107, v6)) {
      goto LABEL_150;
    }
    uint64_t v81 = (uint64_t)v104;
    unint64_t v80 = v105;
    uint64_t v79 = (uint64_t)v106;
    uint64_t v82 = *(void *)(v6 + 8);
  }
  unint64_t v92 = v80;
  unint64_t v93 = (void *)v81;
  LODWORD(v94) = v3;
  uint64_t v95 = v79;
  int v96 = v3;
  if (!v82) {
    goto LABEL_145;
  }
  if (*(void *)(v82 + 8))
  {
    uint64_t v87 = v79;
    uint64_t v88 = v81;
    int v89 = v3;
    uint64_t v90 = (uint64_t)v80;
    goto LABEL_145;
  }
  if ((sub_1CCA14C5C((uint64_t)&v92, v6) & 1) == 0)
  {
    unint64_t v80 = v105;
    uint64_t v79 = (uint64_t)v106;
    uint64_t v82 = *(void *)(v6 + 8);
    uint64_t v87 = (uint64_t)v106;
    uint64_t v88 = (uint64_t)v104;
    int v89 = v3;
    uint64_t v90 = (uint64_t)v105;
    int v91 = v3;
    if (v82 && !*(void *)(v82 + 8))
    {
      if ((sub_1CCA14C5C((uint64_t)&v87, v6) & 1) == 0)
      {
        unint64_t v80 = v105;
        uint64_t v79 = (uint64_t)v106;
        uint64_t v82 = *(void *)(v6 + 8);
        goto LABEL_145;
      }
      goto LABEL_150;
    }
LABEL_145:
    int v107 = (uint64_t *)v79;
    int v108 = v80;
    LODWORD(v109) = v3;
    if (v82 && !*(void *)(v82 + 8))
    {
      if (sub_1CCA14580((uint64_t)&v107, v6))
      {
        uint64_t v85 = (uint64_t)v104;
        uint64_t v84 = (uint64_t)v105;
LABEL_163:
        LOWORD(v111) = 257;
        int v86 = sub_1CC2427E8(a2, v84, (uint64_t)&v107, v83);
        LOWORD(v96) = 257;
        uint64_t v43 = sub_1CB844E98(a2, v3, v85, (uint64_t)v86, (uint64_t)&v92, 0);
        uint64_t v40 = v103;
        LOWORD(v91) = 257;
        uint64_t v41 = (const char **)&v87;
        char v42 = v5;
        return llvm::BinaryOperator::Create(v42, v43, (uint64_t)v40, v41, 0);
      }
      uint64_t v79 = (uint64_t)v106;
      uint64_t v82 = *(void *)(v6 + 8);
    }
    int v107 = (uint64_t *)v79;
    int v108 = v104;
    LODWORD(v109) = v3;
    if (!v82 || *(void *)(v82 + 8) || !sub_1CCA14580((uint64_t)&v107, v6)) {
      return 0;
    }
    uint64_t v84 = (uint64_t)v104;
    uint64_t v85 = (uint64_t)v105;
    goto LABEL_163;
  }
LABEL_150:
  LOWORD(v111) = 257;
  uint64_t v43 = sub_1CC2428C0(a2, (uint64_t)v105, (uint64_t)v104, (uint64_t)&v107);
  if (v3 == 29)
  {
    LOWORD(v111) = 257;
    int v32 = (llvm::Constant **)sub_1CB844AF4(a2, v43, (uint64_t)v106, (uint64_t)&v107);
    LOWORD(v96) = 257;
    goto LABEL_152;
  }
  uint64_t v40 = v103;
  LOWORD(v91) = 257;
  uint64_t v41 = (const char **)&v87;
  char v42 = 29;
  return llvm::BinaryOperator::Create(v42, v43, (uint64_t)v40, v41, 0);
}

uint64_t sub_1CCA060BC(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *(void *)(a1 - 64);
  uint64_t v5 = *(void *)(a1 - 32);
  uint64_t v26 = 0;
  LODWORD(v19) = 9;
  uint64_t v20 = 0;
  uint64_t v21 = &v26;
  int v6 = sub_1CC045310((uint64_t)&v19, v4);
  uint64_t result = 0;
  if (!v6) {
    return result;
  }
  uint64_t v24 = 0;
  uint64_t v25 = 0;
  LODWORD(v19) = 9;
  uint64_t v20 = 0;
  uint64_t v21 = &v25;
  if (!sub_1CC045310((uint64_t)&v19, v5))
  {
    uint64_t v19 = &v24;
    uint64_t v20 = 0;
    int v10 = sub_1CBF528D8((uint64_t)&v19, (unsigned __int8 *)v5);
    uint64_t result = 0;
    if (!v10) {
      return result;
    }
    uint64_t v11 = *(void *)(v4 + 8);
    if (v11 && !*(void *)(v11 + 8))
    {
      uint64_t v12 = *(llvm::APInt ***)a1;
      llvm::APInt::byteSwap(v24, (uint64_t)&v19);
      Splat = llvm::ConstantInt::get(*v12, (llvm::LLVMContext *)&v19, v13);
      if ((v12[1] & 0xFE) == 0x12) {
        Splat = llvm::ConstantVector::getSplat((llvm::Type *)(*((unsigned int *)v12 + 8) | ((unint64_t)(*((_DWORD *)v12 + 2) == 19) << 32)), (uint64_t)Splat);
      }
      uint64_t v25 = (uint64_t)Splat;
      if (v20 >= 0x41 && v19) {
        MEMORY[0x1D25D9CB0](v19, 0x1000C8000313F17);
      }
      goto LABEL_17;
    }
    return 0;
  }
  uint64_t v8 = *(void *)(v4 + 8);
  if (!v8 || *(void *)(v8 + 8))
  {
    uint64_t v9 = *(void *)(v5 + 8);
    if (!v9 || *(void *)(v9 + 8)) {
      return 0;
    }
  }
LABEL_17:
  uint64_t v15 = *(unsigned __int8 *)(a1 + 16) - 28;
  __int16 v22 = 257;
  int v23 = sub_1CB844E98((uint64_t)a2, v15, v26, v25, (uint64_t)&v19, 0);
  uint64_t v16 = *(uint64_t ***)(*(void *)(*(void *)(a1 + 40) + 56) + 40);
  uint64_t v19 = *(llvm::APInt ***)a1;
  uint64_t Declaration = llvm::Intrinsic::getDeclaration(v16, 9, (uint64_t)&v19, 1);
  if (Declaration) {
    uint64_t v18 = *(uint64_t ***)(Declaration + 24);
  }
  else {
    uint64_t v18 = 0;
  }
  __int16 v22 = 257;
  return sub_1CB845BAC(a2, v18, (uint64_t **)Declaration, (uint64_t *)&v23, 1, (uint64_t)&v19, 0);
}

llvm::Value *sub_1CCA062A4(uint64_t ***a1, uint64_t a2)
{
  int v3 = *((unsigned __int8 *)a1 + 16);
  if (v3 == 56) {
    uint64_t v4 = 29;
  }
  else {
    uint64_t v4 = 28;
  }
  uint64_t v5 = (uint64_t)*(a1 - 8);
  uint64_t v6 = (uint64_t)*(a1 - 4);
  uint64_t v45 = 0;
  uint64_t v46 = 0;
  uint64_t v41 = (uint64_t *)&v46;
  uint64_t v7 = *(void *)(v5 + 8);
  if (v7)
  {
    if (!*(void *)(v7 + 8))
    {
      if (sub_1CBF686A0(&v41, 30, v5))
      {
        v38[0] = &v45;
        uint64_t v9 = *(void *)(v6 + 8);
        if (v9)
        {
          if (!*(void *)(v9 + 8) && sub_1CBF686A0(v38, 30, v6))
          {
            uint64_t v10 = v46[1];
            BOOL v11 = v10 && *(void *)(v10 + 8) == 0;
            if ((sub_1CC9F4000((uint64_t)v46, v11) & 1) == 0)
            {
              uint64_t v12 = *(void *)(v45 + 8);
              BOOL v13 = v12 && *(void *)(v12 + 8) == 0;
              if ((sub_1CC9F4000(v45, v13) & 1) == 0)
              {
                if ((*((unsigned char *)a1 + 23) & 0x10) == 0)
                {
                  uint64_t v34 = 0;
                  uint64_t v33 = &byte_1CFBCE98E;
                  goto LABEL_46;
                }
                uint64_t v24 = ***a1;
                uint64_t v25 = *(void *)(v24 + 152);
                uint64_t v26 = *(unsigned int *)(v24 + 168);
                if (v26)
                {
                  LODWORD(v27) = (v26 - 1) & ((a1 >> 4) ^ (a1 >> 9));
                  int v28 = (uint64_t ****)(v25 + 16 * v27);
                  uint64_t v29 = *v28;
                  if (*v28 == a1)
                  {
LABEL_45:
                    int v32 = v28[1];
                    int v35 = *v32;
                    uint64_t v33 = (char *)(v32 + 2);
                    uint64_t v34 = v35;
LABEL_46:
                    __int16 v44 = 773;
                    uint64_t v41 = (uint64_t *)v33;
                    v42[0] = v34;
                    v42[1] = ".demorgan";
                    uint64_t v36 = (llvm::Constant **)sub_1CB844E98(a2, v4, (uint64_t)v46, v45, (uint64_t)&v41, 0);
                    __int16 v44 = 257;
                    return llvm::BinaryOperator::CreateNot(v36, (llvm::Value *)&v41, 0, v37);
                  }
                  int v30 = 1;
                  while (v29 != (uint64_t ***)-4096)
                  {
                    int v31 = v27 + v30++;
                    uint64_t v27 = v31 & (v26 - 1);
                    uint64_t v29 = *(uint64_t ****)(v25 + 16 * v27);
                    if (v29 == a1)
                    {
                      int v28 = (uint64_t ****)(v25 + 16 * v27);
                      goto LABEL_45;
                    }
                  }
                }
                int v28 = (uint64_t ****)(v25 + 16 * v26);
                goto LABEL_45;
              }
            }
          }
        }
      }
    }
  }
  uint64_t v40 = 0;
  uint64_t v41 = (uint64_t *)&v46;
  v42[0] = &v45;
  int v43 = v3 - 28;
  uint64_t v14 = *(void *)(v5 + 8);
  if (!v14 || *(void *)(v14 + 8)) {
    return 0;
  }
  int v16 = *(unsigned __int8 *)(v5 + 16);
  if (v3 == v16)
  {
    if (!*(void *)(v5 - 64) || (uint64_t v46 = *(void **)(v5 - 64), (sub_1CBF686A0(v42, 30, *(void *)(v5 - 32)) & 1) == 0))
    {
      uint64_t v17 = *(void *)(v5 - 32);
      if (!v17) {
        return 0;
      }
      *uint64_t v41 = v17;
      if ((sub_1CBF686A0(v42, 30, *(void *)(v5 - 64)) & 1) == 0) {
        return 0;
      }
    }
    goto LABEL_35;
  }
  if (v16 == 5 && v3 - 28 == *(unsigned __int16 *)(v5 + 18))
  {
    uint64_t v18 = *(_DWORD *)(v5 + 20) & 0x7FFFFFF;
    if (*(void *)(v5 - 32 * v18))
    {
      uint64_t v46 = *(void **)(v5 - 32 * v18);
      if (sub_1CBF686A0(v42, 30, *(void *)(v5 - 32 * (*(_DWORD *)(v5 + 20) & 0x7FFFFFF) + 32))) {
        goto LABEL_35;
      }
      uint64_t v18 = *(_DWORD *)(v5 + 20) & 0x7FFFFFF;
    }
    uint64_t v19 = *(void *)(v5 - 32 * v18 + 32);
    if (v19)
    {
      *uint64_t v41 = v19;
      if (sub_1CBF686A0(v42, 30, *(void *)(v5 - 32 * (*(_DWORD *)(v5 + 20) & 0x7FFFFFF))))
      {
LABEL_35:
        v38[0] = &v40;
        if (sub_1CBF686A0(v38, 30, v6))
        {
          __int16 v44 = 257;
          uint64_t v20 = sub_1CB844E98(a2, v4, v45, v40, (uint64_t)&v41, 0);
          uint64_t v21 = v46;
          __int16 v44 = 257;
          int v23 = sub_1CC2427E8(a2, (uint64_t)v20, (uint64_t)&v41, v22);
          __int16 v39 = 257;
          return llvm::BinaryOperator::Create(v3 - 28, v21, (uint64_t)v23, (const char **)v38, 0);
        }
      }
    }
  }
  return 0;
}

llvm::Value *sub_1CCA0660C(uint64_t a1, uint64_t a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 16);
  int v4 = v3 - 28;
  uint64_t v5 = *(void *)(a1 - 64);
  uint64_t v6 = *(void *)(a1 - 32);
  uint64_t v26 = 0;
  int v25 = 0;
  uint64_t v21 = (char *)&v25;
  if (v6 && *(unsigned char *)(v6 + 16) == 82 && sub_1CC0241FC((uint64_t)&v22 + 1, *(llvm::Constant **)(v6 - 32)))
  {
    *(_DWORD *)uint64_t v21 = *(_WORD *)(v6 + 18) & 0x3F;
    int v7 = 1;
    uint64_t v8 = v6;
  }
  else
  {
    int v7 = 0;
    uint64_t v8 = v5;
  }
  if (v3 == 56) {
    uint64_t v9 = 7;
  }
  else {
    uint64_t v9 = 8;
  }
  uint64_t v21 = (char *)&v25;
  __int16 v22 = &v26;
  if (!sub_1CCA15040((uint64_t)&v21, v8) || v25 != v9) {
    return 0;
  }
  if (v7) {
    uint64_t v11 = v5;
  }
  else {
    uint64_t v11 = v6;
  }
  int v12 = *(unsigned __int8 *)(v11 + 16);
  if (v3 != v12)
  {
    if (v12 == 5 && v4 == *(unsigned __int16 *)(v11 + 18))
    {
      uint64_t v20 = (uint64_t *)(v11 - 32 * (*(_DWORD *)(v11 + 20) & 0x7FFFFFF));
      uint64_t v13 = *v20;
      if (*v20)
      {
        uint64_t v14 = v20[4];
        if (v14) {
          goto LABEL_20;
        }
      }
    }
    return 0;
  }
  uint64_t v13 = *(void *)(v11 - 64);
  if (!v13) {
    return 0;
  }
  uint64_t v14 = *(void *)(v11 - 32);
  if (!v14) {
    return 0;
  }
LABEL_20:
  uint64_t v24 = 0;
  uint64_t v21 = (char *)&v25;
  __int16 v22 = &v24;
  BOOL v15 = sub_1CCA15040((uint64_t)&v21, v13) && v25 == v9;
  if (v15 && *v26 == *v24)
  {
    uint64_t v16 = v13;
    uint64_t v13 = v14;
  }
  else
  {
    uint64_t v16 = v14;
  }
  uint64_t v21 = (char *)&v25;
  __int16 v22 = &v24;
  if (!sub_1CCA15040((uint64_t)&v21, v16) || v25 != v9 || *v26 != *v24) {
    return 0;
  }
  __int16 v23 = 257;
  uint64_t FCmpHelper = llvm::IRBuilderBase::CreateFCmpHelper(a2, v9, (uint64_t)v26, (uint64_t)v24, (uint64_t)&v21, 0, 0);
  uint64_t v18 = FCmpHelper;
  if (FCmpHelper)
  {
    if (*((unsigned char *)FCmpHelper + 16) == 82)
    {
      llvm::Instruction::copyIRFlags((uint64_t)FCmpHelper, v8, 1);
      llvm::Instruction::andIRFlags((uint64_t)v18, v16);
    }
  }
  __int16 v23 = 257;
  return llvm::BinaryOperator::Create(v4, v18, v13, (const char **)&v21, 0);
}

uint64_t sub_1CCA06844(uint64_t a1, unsigned __int8 *a2)
{
  int v4 = a2[16];
  if (v4 == 56)
  {
    char v5 = 29;
  }
  else
  {
    if (v4 != 57) {
      return 0;
    }
    char v5 = 28;
  }
  uint64_t v48 = 0;
  uint64_t v49 = 0;
  __int16 v44 = (char *)&v49;
  uint64_t v46 = (uint64_t *)&v48;
  int v6 = sub_1CBF686A0((void **)&v44, 30, *((void *)a2 - 8));
  uint64_t v7 = *((void *)a2 - 4);
  if (!v6 || !v7)
  {
    if (!sub_1CBF686A0((void **)&v44, 30, v7)) {
      return 0;
    }
    uint64_t v7 = *((void *)a2 - 8);
    if (!v7) {
      return 0;
    }
  }
  *uint64_t v46 = v7;
  uint64_t v8 = v48[1];
  if (v8) {
    BOOL v9 = v8[1] == 0;
  }
  else {
    BOOL v9 = 0;
  }
  uint64_t result = sub_1CC9F4000((uint64_t)v48, v9);
  if (result)
  {
    uint64_t result = sub_1CCA0BAEC((uint64_t)a2, 0);
    if (result)
    {
      uint64_t v12 = *(void *)(a1 + 24);
      if ((*((unsigned char *)v48 + 23) & 0x10) == 0)
      {
        __int16 v23 = 0;
        __int16 v22 = &byte_1CFBCE98E;
LABEL_17:
        __int16 v47 = 773;
        __int16 v44 = v22;
        uint64_t v45 = v23;
        uint64_t v46 = (uint64_t *)".not";
        int v25 = sub_1CC2427E8(v12, (uint64_t)v48, (uint64_t)&v44, v11);
        if ((a2[23] & 0x10) == 0)
        {
          uint64_t v36 = 0;
          int v35 = &byte_1CFBCE98E;
LABEL_25:
          __int16 v47 = 773;
          __int16 v44 = v35;
          uint64_t v45 = v36;
          uint64_t v46 = (uint64_t *)".not";
          int v38 = llvm::BinaryOperator::Create(v5, v49, (uint64_t)v25, (const char **)&v44, 0);
          __int16 v39 = v38;
          uint64_t v40 = *(uint64_t **)(a1 + 24);
          __int16 v47 = 257;
          if (v38)
          {
            if (*((unsigned __int8 *)v38 + 16) >= 0x1Cu)
            {
              (*(void (**)(uint64_t, llvm::Value *, char **, uint64_t, uint64_t))(*(void *)v40[10] + 16))(v40[10], v38, &v44, v40[6], v40[7]);
              uint64_t v41 = *((unsigned int *)v40 + 2);
              if (v41)
              {
                uint64_t v42 = *v40;
                uint64_t v43 = v42 + 16 * v41;
                do
                {
                  llvm::Instruction::setMetadata(v39, *(_DWORD *)v42, *(llvm::MDNode **)(v42 + 8));
                  v42 += 16;
                }
                while (v42 != v43);
              }
            }
          }
          sub_1CC9D3C84(a1, (llvm::ValueAsMetadata *)a2, v39);
          sub_1CC9D3BA4(a1, v39);
          return 1;
        }
        uint64_t v26 = ***(void ***)a2;
        uint64_t v27 = *(void *)(v26 + 152);
        uint64_t v28 = *(unsigned int *)(v26 + 168);
        if (v28)
        {
          LODWORD(v29) = (v28 - 1) & ((a2 >> 4) ^ (a2 >> 9));
          int v30 = (unsigned __int8 **)(v27 + 16 * v29);
          int v31 = *v30;
          if (*v30 == a2)
          {
LABEL_24:
            uint64_t v34 = v30[1];
            uint64_t v37 = *(uint64_t ***)v34;
            int v35 = (char *)(v34 + 16);
            uint64_t v36 = v37;
            goto LABEL_25;
          }
          int v32 = 1;
          while (v31 != (unsigned __int8 *)-4096)
          {
            int v33 = v29 + v32++;
            uint64_t v29 = v33 & (v28 - 1);
            int v31 = *(unsigned __int8 **)(v27 + 16 * v29);
            if (v31 == a2)
            {
              int v30 = (unsigned __int8 **)(v27 + 16 * v29);
              goto LABEL_24;
            }
          }
        }
        int v30 = (unsigned __int8 **)(v27 + 16 * v28);
        goto LABEL_24;
      }
      uint64_t v13 = ***v48;
      uint64_t v14 = *(void *)(v13 + 152);
      uint64_t v15 = *(unsigned int *)(v13 + 168);
      if (v15)
      {
        LODWORD(v16) = (v15 - 1) & ((v48 >> 4) ^ (v48 >> 9));
        uint64_t v17 = (uint64_t ****)(v14 + 16 * v16);
        uint64_t v18 = *v17;
        if (*v17 == v48)
        {
LABEL_16:
          uint64_t v21 = v17[1];
          uint64_t v24 = *v21;
          __int16 v22 = (char *)(v21 + 2);
          __int16 v23 = v24;
          goto LABEL_17;
        }
        int v19 = 1;
        while (v18 != (uint64_t ***)-4096)
        {
          int v20 = v16 + v19++;
          uint64_t v16 = v20 & (v15 - 1);
          uint64_t v18 = *(uint64_t ****)(v14 + 16 * v16);
          if (v18 == v48)
          {
            uint64_t v17 = (uint64_t ****)(v14 + 16 * v16);
            goto LABEL_16;
          }
        }
      }
      uint64_t v17 = (uint64_t ****)(v14 + 16 * v15);
      goto LABEL_16;
    }
  }
  return result;
}

unsigned __int8 *sub_1CCA06B38(void *a1, uint64_t a2, const llvm::APInt *a3, llvm::ConstantExpr *this, unsigned __int8 *a5)
{
  int v6 = this;
  uint64_t v7 = (unsigned __int8 *)a3;
  BOOL v9 = (llvm::detail::IEEEFloat *)a2;
  if (*(unsigned char *)(a2 + 16) == 77)
  {
    uint64_t v10 = *(void *)(a2 + 8);
    BOOL v9 = (llvm::detail::IEEEFloat *)a2;
    if (v10)
    {
      BOOL v9 = (llvm::detail::IEEEFloat *)a2;
      if (!*(void *)(v10 + 8)) {
        BOOL v9 = *(llvm::detail::IEEEFloat **)(a2 - 32);
      }
    }
  }
  if (this)
  {
    if (*((unsigned char *)this + 16) == 77)
    {
      uint64_t v11 = *((void *)this + 1);
      if (v11)
      {
        if (!*(void *)(v11 + 8)) {
          int v6 = (llvm::ConstantExpr *)*((void *)this - 4);
        }
      }
    }
  }
  uint64_t v12 = *(void *)v9;
  if ((*(_DWORD *)(*(void *)v9 + 8) & 0xFE) == 0x12) {
    int v13 = *(unsigned __int8 *)(**(void **)(v12 + 16) + 8);
  }
  else {
    int v13 = *(_DWORD *)(*(void *)v9 + 8);
  }
  if (v13 != 13) {
    return 0;
  }
  int v14 = (*(_DWORD *)(*(void *)v6 + 8) & 0xFE) == 0x12
      ? *(unsigned __int8 *)(**(void **)(*(void *)v6 + 16) + 8)
      : *(_DWORD *)(*(void *)v6 + 8);
  if (v14 != 13) {
    return 0;
  }
  uint64_t v15 = *(void *)a2;
  uint64_t v151 = v9;
  int v16 = *((unsigned __int8 *)v6 + 16);
  if (v16 == 5)
  {
    if (*((_WORD *)v6 + 9) == 30)
    {
      uint64_t v18 = *((_DWORD *)v6 + 5) & 0x7FFFFFF;
      int v19 = (llvm::detail::IEEEFloat **)((char *)v6 - 32 * v18);
      if (*v19 == v9)
      {
        if (sub_1CBF68974((uint64_t)&v152, v19[4])) {
          goto LABEL_33;
        }
        uint64_t v21 = v151;
        uint64_t v20 = -(uint64_t)(*((_DWORD *)v6 + 5) & 0x7FFFFFF);
      }
      else
      {
        uint64_t v20 = -v18;
        uint64_t v21 = v9;
      }
      __int16 v22 = (llvm::detail::IEEEFloat **)((char *)v6 + 32 * v20);
      if (v21 != v22[4] || !sub_1CBF68974((uint64_t)&v152, *v22)) {
        goto LABEL_40;
      }
      goto LABEL_33;
    }
LABEL_40:
    uint64_t v143 = 0;
    int v144 = 0;
    if (*((unsigned __int8 *)v9 + 16) <= 0x14u)
    {
      int v144 = v9;
      if (*((unsigned __int8 *)v6 + 16) <= 0x14u)
      {
        uint64_t v143 = v6;
        if (llvm::ConstantExpr::getNot((llvm::Constant **)v6, (llvm::Constant *)a2, a3) == v9)
        {
          uint64_t v26 = (llvm::detail::IEEEFloat **)a1[7];
          uint64_t v27 = a1[9];
          if (*((unsigned __int8 *)v9 + 16) < 0x1Cu || (uint64_t v28 = v9, !*((void *)v9 + 5))) {
            uint64_t v28 = 0;
          }
          uint64_t v151 = (llvm::detail::IEEEFloat *)a1[10];
          uint64_t v152 = v26;
          uint64_t v153 = v28;
          uint64_t v154 = v27;
          uint64_t v155 = 0;
          char v156 = 1;
          int v29 = sub_1CC162D6C(v9, 0, (uint64_t)&v151);
          int v30 = *(_DWORD *)(v12 + 8);
          int v31 = (llvm::Type *)v12;
          if ((v30 & 0xFE) == 0x12) {
            int v31 = **(llvm::Type ***)(v12 + 16);
          }
          if (v29 == llvm::Type::getPrimitiveSizeInBits(v31))
          {
            uint64_t v32 = a1[3];
            uint64_t v33 = **(void **)v12 + 1888;
            if ((v30 & 0xFE) == 0x12)
            {
              uint64_t v116 = (llvm::Type *)*(unsigned int *)(v12 + 32);
              char v117 = (uint64_t **)(**(void **)v12 + 1888);
              if (v30 == 19) {
                llvm::ScalableVectorType::get(v117, v116);
              }
              else {
                llvm::FixedVectorType::get((llvm::FixedVectorType *)v117, v116);
              }
              uint64_t v33 = v118;
            }
            LOWORD(v155) = 257;
            uint64_t v34 = sub_1CB844B8C(v32, (unsigned __int8 *)v9, v33, (uint64_t)&v151);
LABEL_50:
            uint64_t v24 = (unsigned __int8 *)v34;
            goto LABEL_153;
          }
        }
      }
    }
    uint64_t v141 = 0;
    unsigned int v142 = 0;
    uint64_t v151 = (llvm::detail::IEEEFloat *)&v142;
    if (!sub_1CBC5BEAC((void **)&v151, (uint64_t)v9)) {
      goto LABEL_70;
    }
    int v35 = v142;
    int v36 = *(_DWORD *)(*(void *)v142 + 8);
    if ((v36 & 0xFE) == 0x12) {
      int v36 = *(_DWORD *)(**(void **)(*(void *)v142 + 16) + 8);
    }
    if (v36 != 269) {
      goto LABEL_70;
    }
    uint64_t v151 = v142;
    unsigned int v37 = *((unsigned __int8 *)v6 + 16);
    if (v37 <= 0x1B && v37 != 5 || (v37 <= 0x1B ? (unsigned int v38 = *((unsigned __int16 *)v6 + 9)) : (unsigned int v38 = v37 - 28), v38 != 40))
    {
LABEL_60:
      uint64_t v151 = (llvm::detail::IEEEFloat *)&v141;
      uint64_t v39 = *((void *)v6 + 1);
      if (v39 && !*(void *)(v39 + 8) && sub_1CBF686A0((void **)&v151, 30, (uint64_t)v6))
      {
        uint64_t v40 = v141;
        if (v141)
        {
          if (*(unsigned char *)(v141 + 16) == 77)
          {
            uint64_t v41 = *(void *)(v141 + 8);
            if (v41)
            {
              if (!*(void *)(v41 + 8)) {
                uint64_t v40 = *(void *)(v141 - 32);
              }
            }
          }
        }
        uint64_t v141 = v40;
        uint64_t v151 = v142;
        if (sub_1CC184DAC(&v151, v40)) {
          goto LABEL_69;
        }
      }
LABEL_70:
      if ((*(_DWORD *)(v12 + 8) & 0xFE) == 0x12)
      {
        uint64_t v151 = (llvm::detail::IEEEFloat *)&v142;
        uint64_t v152 = &v144;
        int v42 = *((unsigned __int8 *)v9 + 16);
        if (v42 == 5)
        {
          if (*((_WORD *)v9 + 9) != 30) {
            goto LABEL_152;
          }
          if (!sub_1CBC5BEAC((void **)&v151, *((void *)v9 - 4 * (*((_DWORD *)v9 + 5) & 0x7FFFFFF)))) {
            goto LABEL_152;
          }
          uint64_t v43 = (unsigned __int8 *)((void *)v9 - 4 * (*((_DWORD *)v9 + 5) & 0x7FFFFFF))[4];
          if (!v43) {
            goto LABEL_152;
          }
        }
        else
        {
          if (v42 != 58) {
            goto LABEL_152;
          }
          if (!sub_1CBC5BEAC((void **)&v151, *((void *)v9 - 8))) {
            goto LABEL_152;
          }
          uint64_t v43 = (unsigned __int8 *)*((void *)v9 - 4);
          if (!v43 || v43[16] > 0x14u) {
            goto LABEL_152;
          }
        }
        unsigned int *v152 = (llvm::detail::IEEEFloat *)v43;
        unsigned int v145 = v142;
        unint64_t v146 = &v143;
        int v44 = *((unsigned __int8 *)v6 + 16);
        if (v44 == 5)
        {
          if (*((_WORD *)v6 + 9) == 30)
          {
            int v113 = (uint64_t *)((char *)v6 - 32 * (*((_DWORD *)v6 + 5) & 0x7FFFFFF));
            if (sub_1CD68ACB0((uint64_t)v142, *v113))
            {
              uint64_t v45 = v113[4];
              if (v45)
              {
                uint64_t v46 = &v143;
                goto LABEL_86;
              }
            }
          }
        }
        else if (v44 == 58)
        {
          if (sub_1CC184DAC(&v145, *((void *)v6 - 8)))
          {
            uint64_t v45 = *((void *)v6 - 4);
            if (v45)
            {
              if (*(unsigned __int8 *)(v45 + 16) <= 0x14u)
              {
                uint64_t v46 = v146;
LABEL_86:
                *uint64_t v46 = v45;
                int v47 = *(_DWORD *)(*(void *)v142 + 8);
                if ((v47 & 0xFE) == 0x12) {
                  int v47 = *(_DWORD *)(**(void **)(*(void *)v142 + 16) + 8);
                }
                if (v47 != 269) {
                  goto LABEL_152;
                }
                __int16 v139 = v144;
                int v48 = *(_DWORD *)(*(void *)v144 + 32);
                if (!v48)
                {
LABEL_209:
                  uint64_t v114 = (uint64_t **)(**(void **)v12 + 1888);
                  if (v12 && (*(_DWORD *)(v12 + 8) & 0xFE) == 0x12)
                  {
                    uint64_t v122 = (llvm::Type *)*(unsigned int *)(v12 + 32);
                    if (*(_DWORD *)(v12 + 8) == 19) {
                      llvm::ScalableVectorType::get(v114, v122);
                    }
                    else {
                      llvm::FixedVectorType::get((llvm::FixedVectorType *)v114, v122);
                    }
                    uint64_t v114 = v123;
                  }
                  int v144 = sub_1CC56C0C0((llvm *)0x26, v139, (llvm::Constant *)v114, 0);
                  uint64_t v115 = a1[3];
                  LOWORD(v155) = 257;
                  uint64_t v34 = sub_1CC2428C0(v115, (uint64_t)v142, (uint64_t)v144, (uint64_t)&v151);
                  goto LABEL_50;
                }
                uint64_t v49 = 0;
                uint64_t v138 = v143;
                while (1)
                {
                  AggregateElement = (llvm::Constant *)llvm::Constant::getAggregateElement(v139, v49);
                  int v51 = llvm::Constant::getAggregateElement(v138, v49);
                  if (!AggregateElement) {
                    break;
                  }
                  uint64_t v52 = (uint64_t)v51;
                  if (!v51) {
                    break;
                  }
                  int v53 = *((unsigned __int8 *)AggregateElement + 16);
                  if (v53 == 16)
                  {
                    uint64_t v54 = *((unsigned int *)AggregateElement + 8);
                    if (v54 >= 0x41)
                    {
                      int v58 = 0;
                      int64_t v59 = (unint64_t)(v54 + 63) >> 6;
                      do
                      {
                        BOOL v60 = v59-- < 1;
                        if (v60) {
                          break;
                        }
                        unint64_t v61 = *(void *)(*((void *)AggregateElement + 3) + 8 * v59);
                        v58 += __clz(v61);
                      }
                      while (!v61);
                      int v62 = v54 | 0xFFFFFFC0;
                      if ((v54 & 0x3F) == 0) {
                        int v62 = 0;
                      }
                      if (v58 + v62 == v54) {
                        goto LABEL_97;
                      }
                    }
                    else if (!*((void *)AggregateElement + 3))
                    {
                      goto LABEL_97;
                    }
                  }
                  else if (v53 == 17)
                  {
                    if (sub_1CB844168((uint64_t)AggregateElement, 0.0)) {
                      goto LABEL_97;
                    }
                  }
                  else if ((v53 - 18) < 3 || v53 == 13)
                  {
                    goto LABEL_97;
                  }
                  if ((sub_1CC03F414((uint64_t)&v150, AggregateElement) & 1) == 0) {
                    goto LABEL_98;
                  }
LABEL_97:
                  if ((sub_1CBF68974((uint64_t)&v149, (llvm::Constant *)v52) & 1) == 0)
                  {
LABEL_98:
                    int v55 = *(unsigned __int8 *)(v52 + 16);
                    if (v55 == 16)
                    {
                      uint64_t v56 = *(unsigned int *)(v52 + 32);
                      if (v56 >= 0x41)
                      {
                        int v63 = 0;
                        int64_t v64 = (unint64_t)(v56 + 63) >> 6;
                        do
                        {
                          BOOL v60 = v64-- < 1;
                          if (v60) {
                            break;
                          }
                          unint64_t v65 = *(void *)(*(void *)(v52 + 24) + 8 * v64);
                          v63 += __clz(v65);
                        }
                        while (!v65);
                        int v66 = v56 | 0xFFFFFFC0;
                        if ((v56 & 0x3F) == 0) {
                          int v66 = 0;
                        }
                        if (v63 + v66 != v56) {
                          goto LABEL_101;
                        }
                      }
                      else if (*(void *)(v52 + 24))
                      {
LABEL_101:
                        if ((sub_1CC03F414((uint64_t)&v150, (llvm::Constant *)v52) & 1) == 0) {
                          break;
                        }
                      }
                    }
                    else if (v55 == 17)
                    {
                      if ((sub_1CB844168(v52, 0.0) & 1) == 0) {
                        goto LABEL_101;
                      }
                    }
                    else if ((v55 - 18) >= 3 && v55 != 13)
                    {
                      goto LABEL_101;
                    }
                    if ((sub_1CBF68974((uint64_t)&v148, AggregateElement) & 1) == 0) {
                      break;
                    }
                  }
                  uint64_t v49 = (llvm::Type *)(v49 + 1);
                  if (v49 == v48)
                  {
                    __int16 v139 = v144;
                    goto LABEL_209;
                  }
                }
              }
            }
          }
        }
      }
LABEL_152:
      uint64_t v24 = 0;
      goto LABEL_153;
    }
    int v130 = *((_DWORD *)v6 + 5);
    if ((v130 & 0x40000000) != 0) {
      unsigned int v131 = (char *)*((void *)v6 - 1);
    }
    else {
      unsigned int v131 = (char *)v6 - 32 * (v130 & 0x7FFFFFF);
    }
    uint64_t v132 = *(void *)v131;
    int v133 = *(unsigned __int8 *)(*(void *)v131 + 16);
    if (v133 == 5)
    {
      if (*(_WORD *)(v132 + 18) != 30) {
        goto LABEL_60;
      }
      uint64_t v134 = *(_DWORD *)(v132 + 20) & 0x7FFFFFF;
      uint64_t v135 = (llvm::detail::IEEEFloat **)(v132 - 32 * v134);
      if (v142 == *v135)
      {
        if (sub_1CBF68974((uint64_t)&v152, v135[4])) {
          goto LABEL_69;
        }
        int v35 = v151;
        uint64_t v136 = -(uint64_t)(*(_DWORD *)(v132 + 20) & 0x7FFFFFF);
      }
      else
      {
        uint64_t v136 = -v134;
      }
      uint64_t v137 = (llvm::Constant **)(v132 + 32 * v136);
      if (v35 != v137[4] || (sub_1CBF68974((uint64_t)&v152, *v137) & 1) == 0) {
        goto LABEL_60;
      }
    }
    else
    {
      if (v133 != 58) {
        goto LABEL_60;
      }
      if (v142 == *(llvm::detail::IEEEFloat **)(v132 - 64))
      {
        if (sub_1CBF687D0((uint64_t)&v152, *(llvm::Constant **)(v132 - 32))) {
          goto LABEL_69;
        }
        int v35 = v151;
      }
      if (v35 != *(llvm::detail::IEEEFloat **)(v132 - 32)
        || (sub_1CBF687D0((uint64_t)&v152, *(llvm::Constant **)(v132 - 64)) & 1) == 0)
      {
        goto LABEL_60;
      }
    }
LABEL_69:
    uint64_t v24 = (unsigned __int8 *)v142;
    goto LABEL_153;
  }
  if (v16 != 58) {
    goto LABEL_40;
  }
  uint64_t v17 = v9;
  if (*((llvm::detail::IEEEFloat **)v6 - 8) == v9)
  {
    if (sub_1CBF687D0((uint64_t)&v152, *((llvm::Constant **)v6 - 4))) {
      goto LABEL_33;
    }
    uint64_t v17 = v151;
  }
  if (v17 != *((llvm::detail::IEEEFloat **)v6 - 4)
    || (sub_1CBF687D0((uint64_t)&v152, *((llvm::Constant **)v6 - 8)) & 1) == 0)
  {
    goto LABEL_40;
  }
LABEL_33:
  int v23 = *(_DWORD *)(v12 + 8);
  if ((v23 & 0xFE) == 0x12) {
    int v23 = *(_DWORD *)(**(void **)(v12 + 16) + 8);
  }
  uint64_t v24 = (unsigned __int8 *)v9;
  if (v23 == 269) {
    goto LABEL_154;
  }
  uint64_t v24 = (unsigned __int8 *)v9;
  if (*((unsigned char *)v9 + 16) == 77) {
    uint64_t v24 = (unsigned __int8 *)*((void *)v9 - 4);
  }
  if ((*(_DWORD *)(*(void *)v24 + 8) & 0xFE) == 0x12) {
    int v25 = *(unsigned __int8 *)(**(void **)(*(void *)v24 + 16) + 8);
  }
  else {
    int v25 = *(_DWORD *)(*(void *)v24 + 8);
  }
  if (v25 != 13) {
    return 0;
  }
  uint64_t v67 = (llvm::detail::IEEEFloat **)a1[7];
  uint64_t v68 = a1[9];
  if (v24[16] < 0x1Cu || (uint64_t v69 = v24, !*((void *)v24 + 5))) {
    uint64_t v69 = 0;
  }
  uint64_t v151 = (llvm::detail::IEEEFloat *)a1[10];
  uint64_t v152 = v67;
  uint64_t v153 = v69;
  uint64_t v154 = v68;
  uint64_t v155 = 0;
  char v156 = 1;
  unsigned int v70 = sub_1CC162D6C((llvm::Constant *)v24, 0, (uint64_t)&v151);
  uint64_t v71 = *(void *)v24;
  int v140 = *(_DWORD *)(*(void *)v24 + 8);
  uint64_t v72 = *(llvm::Type **)v24;
  if ((v140 & 0xFE) == 0x12) {
    uint64_t v72 = **(llvm::Type ***)(v71 + 16);
  }
  if (v70 != llvm::Type::getPrimitiveSizeInBits(v72)) {
    return 0;
  }
  if ((*(_DWORD *)(v12 + 8) & 0xFE) == 0x12) {
    uint64_t v12 = **(void **)(v12 + 16);
  }
  if (v70 > llvm::Type::getPrimitiveSizeInBits((llvm::Type *)v12)) {
    return 0;
  }
  uint64_t v73 = (uint64_t *)a1[3];
  uint64_t v74 = **(void **)v71 + 1888;
  if ((v140 & 0xFE) == 0x12)
  {
    size_t v119 = (llvm::Type *)*(unsigned int *)(v71 + 32);
    uint64_t v120 = (uint64_t **)(**(void **)v71 + 1888);
    if (v140 == 19) {
      llvm::ScalableVectorType::get(v120, v119);
    }
    else {
      llvm::FixedVectorType::get((llvm::FixedVectorType *)v120, v119);
    }
    uint64_t v74 = v121;
  }
  __int16 v147 = 257;
  if (*(void *)v24 != v74)
  {
    if (v24[16] <= 0x14u)
    {
      uint64_t v109 = (*(uint64_t (**)(uint64_t, uint64_t, unsigned __int8 *, uint64_t))(*(void *)v73[9] + 224))(v73[9], 38, v24, v74);
      uint64_t v24 = (unsigned __int8 *)v109;
      if (v109)
      {
        if (*(unsigned __int8 *)(v109 + 16) >= 0x1Cu)
        {
          (*(void (**)(uint64_t, uint64_t, llvm::detail::IEEEFloat **, uint64_t, uint64_t))(*(void *)v73[10]
                                                                                                 + 16))(v73[10], v109, &v145, v73[6], v73[7]);
          uint64_t v110 = *((unsigned int *)v73 + 2);
          if (v110)
          {
            uint64_t v111 = *v73;
            uint64_t v112 = v111 + 16 * v110;
            do
            {
              llvm::Instruction::setMetadata((llvm::Instruction *)v24, *(_DWORD *)v111, *(llvm::MDNode **)(v111 + 8));
              v111 += 16;
            }
            while (v111 != v112);
          }
        }
      }
    }
    else
    {
      LOWORD(v155) = 257;
      uint64_t v24 = (unsigned __int8 *)llvm::CastInst::Create(38, (uint64_t)v24, v74, (const char **)&v151, 0);
      (*(void (**)(uint64_t, unsigned __int8 *, llvm::detail::IEEEFloat **, uint64_t, uint64_t))(*(void *)v73[10] + 16))(v73[10], v24, &v145, v73[6], v73[7]);
      uint64_t v75 = *((unsigned int *)v73 + 2);
      if (v75)
      {
        uint64_t v76 = *v73;
        uint64_t v77 = v76 + 16 * v75;
        do
        {
          llvm::Instruction::setMetadata((llvm::Instruction *)v24, *(_DWORD *)v76, *(llvm::MDNode **)(v76 + 8));
          v76 += 16;
        }
        while (v76 != v77);
      }
    }
  }
LABEL_153:
  if (!v24) {
    return 0;
  }
LABEL_154:
  BOOL v78 = *(llvm::Type **)v9;
  uint64_t v79 = *(llvm::Type **)v24;
  if (*(void *)v24 && (*((_DWORD *)v79 + 2) & 0xFE) == 0x12)
  {
    unint64_t v80 = *((unsigned int *)v79 + 8);
    uint64_t v81 = a1[3];
    unint64_t PrimitiveSizeInBits = llvm::Type::getPrimitiveSizeInBits(v78);
    if (v82 == 1) {
    uint64_t v84 = (uint64_t **)llvm::IntegerType::get(*(llvm::IntegerType **)(v81 + 64), (llvm::LLVMContext *)(PrimitiveSizeInBits / v80));
    }
    uint64_t v85 = (llvm::Type *)*((unsigned int *)v79 + 8);
    if (*((unsigned char *)v79 + 8) == 19) {
      llvm::ScalableVectorType::get(v84, v85);
    }
    else {
      llvm::FixedVectorType::get((llvm::FixedVectorType *)v84, v85);
    }
    BOOL v78 = v86;
  }
  uint64_t v87 = (uint64_t *)a1[3];
  __int16 v147 = 257;
  if (*(llvm::Type **)v7 != v78)
  {
    if (v7[16] <= 0x14u)
    {
      uint64_t v7 = (unsigned __int8 *)(*(uint64_t (**)(uint64_t, uint64_t, unsigned __int8 *, llvm::Type *))(*(void *)v87[9] + 224))(v87[9], 49, v7, v78);
      if (v7) {
        BOOL v93 = v7[16] >= 0x1Cu;
      }
      else {
        BOOL v93 = 0;
      }
      if (v93)
      {
        (*(void (**)(uint64_t, unsigned __int8 *, llvm::detail::IEEEFloat **, uint64_t, uint64_t))(*(void *)v87[10] + 16))(v87[10], v7, &v145, v87[6], v87[7]);
        uint64_t v124 = *((unsigned int *)v87 + 2);
        if (v124)
        {
          uint64_t v125 = *v87;
          uint64_t v126 = v125 + 16 * v124;
          do
          {
            llvm::Instruction::setMetadata((llvm::Instruction *)v7, *(_DWORD *)v125, *(llvm::MDNode **)(v125 + 8));
            v125 += 16;
          }
          while (v125 != v126);
        }
      }
    }
    else
    {
      LOWORD(v155) = 257;
      uint64_t v7 = (unsigned __int8 *)llvm::CastInst::Create(49, (uint64_t)v7, (uint64_t)v78, (const char **)&v151, 0);
      (*(void (**)(uint64_t, unsigned __int8 *, llvm::detail::IEEEFloat **, uint64_t, uint64_t))(*(void *)v87[10] + 16))(v87[10], v7, &v145, v87[6], v87[7]);
      uint64_t v88 = *((unsigned int *)v87 + 2);
      if (v88)
      {
        uint64_t v89 = *v87;
        uint64_t v90 = v89 + 16 * v88;
        do
        {
          llvm::Instruction::setMetadata((llvm::Instruction *)v7, *(_DWORD *)v89, *(llvm::MDNode **)(v89 + 8));
          v89 += 16;
        }
        while (v89 != v90);
      }
    }
  }
  int v94 = (uint64_t *)a1[3];
  __int16 v147 = 257;
  if (*(llvm::Type **)a5 != v78)
  {
    if (a5[16] <= 0x14u)
    {
      a5 = (unsigned __int8 *)(*(uint64_t (**)(uint64_t, uint64_t, unsigned __int8 *, llvm::Type *))(*(void *)v94[9] + 224))(v94[9], 49, a5, v78);
      if (a5) {
        BOOL v98 = a5[16] >= 0x1Cu;
      }
      else {
        BOOL v98 = 0;
      }
      if (v98)
      {
        (*(void (**)(uint64_t, unsigned __int8 *, llvm::detail::IEEEFloat **, uint64_t, uint64_t))(*(void *)v94[10] + 16))(v94[10], a5, &v145, v94[6], v94[7]);
        uint64_t v127 = *((unsigned int *)v94 + 2);
        if (v127)
        {
          uint64_t v128 = *v94;
          uint64_t v129 = *v94 + 16 * v127;
          do
          {
            llvm::Instruction::setMetadata((llvm::Instruction *)a5, *(_DWORD *)v128, *(llvm::MDNode **)(v128 + 8));
            v128 += 16;
          }
          while (v128 != v129);
        }
      }
    }
    else
    {
      LOWORD(v155) = 257;
      a5 = (unsigned __int8 *)llvm::CastInst::Create(49, (uint64_t)a5, (uint64_t)v78, (const char **)&v151, 0);
      (*(void (**)(uint64_t, unsigned __int8 *, llvm::detail::IEEEFloat **, uint64_t, uint64_t))(*(void *)v94[10] + 16))(v94[10], a5, &v145, v94[6], v94[7]);
      uint64_t v95 = *((unsigned int *)v94 + 2);
      if (v95)
      {
        uint64_t v96 = *v94;
        uint64_t v97 = *v94 + 16 * v95;
        do
        {
          llvm::Instruction::setMetadata((llvm::Instruction *)a5, *(_DWORD *)v96, *(llvm::MDNode **)(v96 + 8));
          v96 += 16;
        }
        while (v96 != v97);
      }
    }
  }
  char v99 = (llvm::IRBuilderBase *)a1[3];
  LOWORD(v155) = 257;
  Select = llvm::IRBuilderBase::CreateSelect(v99, (llvm::Value *)v24, (llvm::Value *)v7, (llvm::Value *)a5, (const llvm::Twine *)&v151, 0);
  int v91 = (unsigned __int8 *)Select;
  uint64_t v101 = (uint64_t *)a1[3];
  __int16 v147 = 257;
  if (*(void *)Select != v15)
  {
    if (*((unsigned __int8 *)Select + 16) <= 0x14u)
    {
      int v91 = (unsigned __int8 *)(*(uint64_t (**)(uint64_t, uint64_t, llvm::Value *, uint64_t))(*(void *)v101[9] + 224))(v101[9], 49, Select, v15);
      if (v91) {
        BOOL v105 = v91[16] >= 0x1Cu;
      }
      else {
        BOOL v105 = 0;
      }
      if (v105)
      {
        (*(void (**)(uint64_t, unsigned __int8 *, llvm::detail::IEEEFloat **, uint64_t, uint64_t))(*(void *)v101[10] + 16))(v101[10], v91, &v145, v101[6], v101[7]);
        uint64_t v106 = *((unsigned int *)v101 + 2);
        if (v106)
        {
          uint64_t v107 = *v101;
          uint64_t v108 = v107 + 16 * v106;
          do
          {
            llvm::Instruction::setMetadata((llvm::Instruction *)v91, *(_DWORD *)v107, *(llvm::MDNode **)(v107 + 8));
            v107 += 16;
          }
          while (v107 != v108);
        }
      }
    }
    else
    {
      LOWORD(v155) = 257;
      int v91 = (unsigned __int8 *)llvm::CastInst::Create(49, (uint64_t)Select, v15, (const char **)&v151, 0);
      (*(void (**)(uint64_t, unsigned __int8 *, llvm::detail::IEEEFloat **, uint64_t, uint64_t))(*(void *)v101[10] + 16))(v101[10], v91, &v145, v101[6], v101[7]);
      uint64_t v102 = *((unsigned int *)v101 + 2);
      if (v102)
      {
        uint64_t v103 = *v101;
        uint64_t v104 = v103 + 16 * v102;
        do
        {
          llvm::Instruction::setMetadata((llvm::Instruction *)v91, *(_DWORD *)v103, *(llvm::MDNode **)(v103 + 8));
          v103 += 16;
        }
        while (v103 != v104);
      }
    }
  }
  return v91;
}

llvm::Value *sub_1CCA07AFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, const llvm::DataLayout *a5, llvm::DSOLocalEquivalent **a6)
{
  uint64_t v6 = a2;
  uint64_t v511 = *MEMORY[0x1E4F143B8];
  BOOL v9 = (uint64_t *)(a2 - 64);
  uint64_t v8 = *(llvm **)(a2 - 64);
  uint64_t v10 = *(llvm::Constant **)(a2 - 32);
  long long v506 = *(_OWORD *)(a1 + 120);
  long long v504 = *(_OWORD *)(a1 + 88);
  long long v505 = *(_OWORD *)(a1 + 104);
  *(void *)&long long v506 = v6;
  uint64_t v11 = (uint64_t)sub_1CC02DBDC(v8, v10, (uint64_t)&v504, 3, a5, a6);
  if (v11) {
    goto LABEL_2;
  }
  if (sub_1CC9D1CF4(a1, (llvm::Instruction *)v6)) {
    return (llvm::Value *)v6;
  }
  unint64_t v14 = sub_1CC9D812C(a1, (unsigned __int8 *)v6);
  if (!v14)
  {
    unint64_t v14 = sub_1CC9D6B70(a1, v6);
    if (!v14)
    {
      if (sub_1CCAB350C(a1, (llvm::UndefValue *)v6)) {
        return (llvm::Value *)v6;
      }
      uint64_t v16 = *(void *)(a1 + 24);
      uint64_t v17 = *(void *)(v6 - 64);
      uint64_t v18 = *(void *)(v6 - 32);
      int v508 = 0;
      int v503 = 0;
      uint64_t v19 = *(void *)(v17 + 8);
      if (v19 && !*(void *)(v19 + 8) || (uint64_t v20 = *(void *)(v18 + 8)) != 0 && !*(void *)(v20 + 8))
      {
        int v21 = *(unsigned __int8 *)(v17 + 16);
        if (v21 == 5)
        {
          if (*(_WORD *)(v17 + 18) != 28) {
            goto LABEL_25;
          }
          uint64_t v24 = (llvm::ConstantExpr ***)(v17 - 32 * (*(_DWORD *)(v17 + 20) & 0x7FFFFFF));
          __int16 v22 = *v24;
          if (!*v24) {
            goto LABEL_25;
          }
          int v508 = *v24;
          int v23 = (llvm *)v24[4];
          if (!v23) {
            goto LABEL_25;
          }
        }
        else
        {
          if (v21 != 56) {
            goto LABEL_25;
          }
          __int16 v22 = *(llvm::ConstantExpr ***)(v17 - 64);
          if (!v22) {
            goto LABEL_25;
          }
          int v508 = *(llvm::ConstantExpr ***)(v17 - 64);
          int v23 = *(llvm **)(v17 - 32);
          if (!v23) {
            goto LABEL_25;
          }
        }
        int v503 = v23;
        *(void *)&long long v504 = v22;
        *((void *)&v504 + 1) = v23;
        if (sub_1CC046E98(&v504, 30, v18))
        {
          LOWORD(v506) = 257;
          int v25 = (llvm::Constant **)sub_1CC2428C0(v16, (uint64_t)v508, (uint64_t)v503, (uint64_t)&v504);
          goto LABEL_39;
        }
      }
LABEL_25:
      uint64_t v27 = *(void *)(v17 + 8);
      if (v27 && !*(void *)(v27 + 8) || (uint64_t v28 = *(void *)(v18 + 8)) != 0 && !*(void *)(v28 + 8))
      {
        int v29 = *(unsigned __int8 *)(v17 + 16);
        if (v29 != 5)
        {
          if (v29 != 58) {
            goto LABEL_40;
          }
          int v30 = *(llvm::ConstantExpr ***)(v17 - 64);
          if (!v30) {
            goto LABEL_40;
          }
          int v508 = *(llvm::ConstantExpr ***)(v17 - 64);
          int v31 = *(llvm **)(v17 - 32);
          if (!v31) {
            goto LABEL_40;
          }
          goto LABEL_37;
        }
        if (*(_WORD *)(v17 + 18) == 30)
        {
          uint64_t v32 = (llvm::ConstantExpr ***)(v17 - 32 * (*(_DWORD *)(v17 + 20) & 0x7FFFFFF));
          int v30 = *v32;
          if (*v32)
          {
            int v508 = *v32;
            int v31 = (llvm *)v32[4];
            if (v31)
            {
LABEL_37:
              int v503 = v31;
              *(void *)&long long v504 = v30;
              *((void *)&v504 + 1) = v31;
              if (!sub_1CC046E98(&v504, 30, v18)) {
                goto LABEL_40;
              }
              LOWORD(v506) = 257;
              int v25 = (llvm::Constant **)sub_1CBF52474(v16, v508, (uint64_t)v503, (uint64_t)&v504);
LABEL_39:
              __int16 v494 = 257;
              Not = llvm::BinaryOperator::CreateNot(v25, (llvm::Value *)&v490, 0, v26);
              goto LABEL_110;
            }
          }
        }
      }
LABEL_40:
      *(void *)&long long v504 = &v508;
      *((void *)&v504 + 1) = &v503;
      if (!sub_1CC04308C((void **)&v504, 28, v17)) {
        goto LABEL_111;
      }
      uint64_t v34 = v508;
      int8x8_t v490 = v508;
      int v492 = (llvm **)v503;
      int v35 = *(unsigned __int8 *)(v18 + 16);
      if (v35 != 5)
      {
        if (v35 != 56) {
          goto LABEL_111;
        }
        int v36 = (llvm ***)(v18 - 64);
        uint64_t v37 = *(void *)(v18 - 64);
        int v38 = *(unsigned __int8 *)(v37 + 16);
        if (v38 == 5)
        {
          if (*(_WORD *)(v37 + 18) == 30)
          {
            uint64_t v41 = *(_DWORD *)(v37 + 20) & 0x7FFFFFF;
            uint64_t v42 = v37 - 32 * v41;
            if (v508 == *(llvm::ConstantExpr ***)v42)
            {
              if (sub_1CBF68974((uint64_t)&v491, *(llvm::Constant **)(v42 + 32))) {
                goto LABEL_70;
              }
              uint64_t v34 = v490;
              uint64_t v43 = -(uint64_t)(*(_DWORD *)(v37 + 20) & 0x7FFFFFF);
            }
            else
            {
              uint64_t v43 = -v41;
            }
            uint64_t v47 = v37 + 32 * v43;
            if (v34 != *(llvm::ConstantExpr ***)(v47 + 32)
              || !sub_1CBF68974((uint64_t)&v491, *(llvm::Constant **)v47))
            {
              goto LABEL_71;
            }
LABEL_70:
            if (v492 != *(llvm ***)(v18 - 32)) {
              goto LABEL_71;
            }
LABEL_109:
            LOWORD(v506) = 257;
            Not = llvm::BinaryOperator::Create(30, v508, (uint64_t)v503, (const char **)&v504, 0);
LABEL_110:
            unint64_t v14 = (unint64_t)Not;
            if (Not) {
              return (llvm::Value *)v14;
            }
LABEL_111:
            unint64_t v14 = (unint64_t)sub_1CCA055B8(v6, *(void *)(a1 + 24));
            if (v14) {
              return (llvm::Value *)v14;
            }
            uint64_t v11 = (uint64_t)sub_1CC9D337C(a1, (unsigned __int8 *)v6);
            if (v11) {
              goto LABEL_2;
            }
            uint64_t v11 = sub_1CCA060BC(v6, *(uint64_t **)(a1 + 24));
            if (v11) {
              goto LABEL_2;
            }
            uint64_t v68 = *(void *)(v6 - 64);
            uint64_t v69 = *(void *)(v6 - 32);
            unsigned int v70 = *(llvm::Type **)v6;
            int v71 = *(_DWORD *)(*(void *)v6 + 8);
            if ((v71 & 0xFE) == 0x12) {
              int v71 = *(_DWORD *)(**((void **)v70 + 2) + 8);
            }
            if (v71 == 269)
            {
              if (*(unsigned char *)(v68 + 16) == 85)
              {
                if (v68)
                {
                  unint64_t v14 = (unint64_t)sub_1CCA9F57C(a1, *(uint64_t **)(v6 - 32), *(const llvm::APFloat **)(v6 - 64), 0);
                  if (v14) {
                    return (llvm::Value *)v14;
                  }
                }
              }
              if (*(unsigned char *)(v69 + 16) == 85)
              {
                if (v69)
                {
                  unint64_t v14 = (unint64_t)sub_1CCA9F57C(a1, (uint64_t *)v68, (const llvm::APFloat *)v69, 0);
                  if (v14) {
                    return (llvm::Value *)v14;
                  }
                }
              }
            }
            unint64_t v14 = (unint64_t)sub_1CC9D74E0(a1, (unsigned char *)v6, v65, v66, v67);
            if (v14) {
              return (llvm::Value *)v14;
            }
            *(void *)&long long v504 = &v505;
            *((void *)&v504 + 1) = 0x400000000;
            if (llvm::recognizeBSwapOrBitReverseIdiom(v6, 1, 1, (uint64_t)&v504))
            {
              --DWORD2(v504);
              llvm::SymbolTableListTraits<llvm::Instruction>::removeNodeFromList();
            }
            if ((long long *)v504 != &v505) {
              free((void *)v504);
            }
            unsigned int v476 = v70;
            uint64_t v72 = *(llvm::Type **)v6;
            if ((*(_DWORD *)(*(void *)v6 + 8) & 0xFE) == 0x12) {
              uint64_t v72 = (llvm::Type *)**((void **)v72 + 2);
            }
            unsigned int PrimitiveSizeInBits = llvm::Type::getPrimitiveSizeInBits(v72);
            int v74 = *(_DWORD *)(v6 + 20);
            if ((v74 & 0x40000000) != 0) {
              uint64_t v75 = *(uint64_t **)(v6 - 8);
            }
            else {
              uint64_t v75 = (uint64_t *)(v6 - 32 * (v74 & 0x7FFFFFF));
            }
            uint64_t v76 = *v75;
            if (!*v75) {
              goto LABEL_151;
            }
            unsigned int v77 = *(unsigned __int8 *)(v76 + 16);
            if (v77 < 0x1C || v77 - 59 < 0xFFFFFFEE) {
              goto LABEL_151;
            }
            uint64_t v79 = (v74 & 0x40000000) != 0 ? *(void *)(v6 - 8) : v6 - 32 * (v74 & 0x7FFFFFF);
            uint64_t v80 = *(void *)(v79 + 32);
            if (!v80) {
              goto LABEL_151;
            }
            unsigned int v81 = *(unsigned __int8 *)(v80 + 16);
            if (v81 < 0x1C) {
              goto LABEL_151;
            }
            if (v81 - 59 < 0xFFFFFFEE) {
              goto LABEL_151;
            }
            int64_t v502 = 0;
            int v503 = 0;
            unsigned int v500 = 0;
            int v501 = 0;
            *(void *)&long long v504 = &v503;
            *((void *)&v504 + 1) = &v501;
            uint64_t v82 = *(void *)(v76 + 8);
            if (!v82
              || *(void *)(v82 + 8)
              || !sub_1CCA15BF0((void **)&v504, v76)
              || (v490 = &v502, v491 = &v500, (uint64_t v83 = *(void *)(v80 + 8)) == 0)
              || *(void *)(v83 + 8)
              || !sub_1CCA15BF0(&v490, v80)
              || (int v84 = *(unsigned __int8 *)(v76 + 16), v84 == *(unsigned __int8 *)(v80 + 16)))
            {
LABEL_151:
              int v85 = *(_DWORD *)(v6 + 20);
              if ((v85 & 0x40000000) != 0) {
                int v86 = *(uint64_t **)(v6 - 8);
              }
              else {
                int v86 = (uint64_t *)(v6 - 32 * (v85 & 0x7FFFFFF));
              }
              uint64_t v474 = *(void *)(a1 + 24);
              uint64_t v87 = *v86;
              uint64_t v88 = v86[4];
              int v503 = *(llvm **)v6;
              uint64_t v89 = v503;
              if ((*((_DWORD *)v503 + 2) & 0xFE) == 0x12) {
                uint64_t v89 = (llvm::Type *)**((void **)v503 + 2);
              }
              unsigned int v90 = llvm::Type::getPrimitiveSizeInBits(v89);
              if (v90) {
                goto LABEL_168;
              }
              uint64_t v91 = v90 >> 1;
              LODWORD(v483) = v90 >> 1;
              int v92 = *(unsigned __int8 *)(v87 + 16);
              uint64_t v93 = v92 == 67 ? v88 : v87;
              uint64_t v94 = v92 == 67 ? v87 : v88;
              int v501 = 0;
              int64_t v502 = 0;
              int v499 = 0;
              unsigned int v500 = 0;
              int8x8_t v490 = &v502;
              uint64_t v95 = *(void *)(v94 + 8);
              if (!v95) {
                goto LABEL_168;
              }
              if (*(void *)(v95 + 8)) {
                goto LABEL_168;
              }
              if (!sub_1CBC5BE40(&v490, v94)) {
                goto LABEL_168;
              }
              *(void *)&long long v504 = &v501;
              *((void *)&v504 + 1) = &v499;
              *(void *)&long long v505 = 0;
              uint64_t v96 = *(void *)(v93 + 8);
              if (!v96 || *(void *)(v96 + 8)) {
                goto LABEL_168;
              }
              int v146 = *(unsigned __int8 *)(v93 + 16);
              if (v146 == 5)
              {
                if (*(_WORD *)(v93 + 18) != 25) {
                  goto LABEL_168;
                }
                uint64_t v165 = (const llvm::APInt **)(v93 - 32 * (*(_DWORD *)(v93 + 20) & 0x7FFFFFF));
                if (!*v165) {
                  goto LABEL_168;
                }
                int v501 = *v165;
                if (!sub_1CBF5295C((uint64_t)&v504 + 8, v165[4])) {
                  goto LABEL_168;
                }
              }
              else
              {
                if (v146 != 53) {
                  goto LABEL_168;
                }
                if (!*(void *)(v93 - 64)) {
                  goto LABEL_168;
                }
                int v501 = *(const llvm::APInt **)(v93 - 64);
                if ((sub_1CBF528D8((uint64_t)&v504 + 8, *(unsigned __int8 **)(v93 - 32)) & 1) == 0) {
                  goto LABEL_168;
                }
              }
              int v508 = &v500;
              uint64_t v166 = *((void *)v501 + 1);
              if (!v166 || *(void *)(v166 + 8) || (sub_1CBC5BE40(&v508, (uint64_t)v501) & 1) == 0) {
                goto LABEL_168;
              }
              uint64_t v167 = v499;
              uint64_t v168 = *((unsigned int *)v499 + 2);
              if (v168 >= 0x41)
              {
                int v169 = 0;
                int64_t v170 = (unint64_t)(v168 + 63) >> 6;
                do
                {
                  if (v170-- < 1) {
                    break;
                  }
                  unint64_t v172 = *(void *)(*(void *)v499 + 8 * v170);
                  v169 += __clz(v172);
                }
                while (!v172);
                int v173 = v168 | 0xFFFFFFC0;
                if ((v168 & 0x3F) == 0) {
                  int v173 = 0;
                }
                if ((v168 - v169 - v173) > 0x40) {
                  goto LABEL_168;
                }
                uint64_t v167 = *(const llvm::APInt **)v499;
              }
              if (*(void *)v167 != v91) {
                goto LABEL_168;
              }
              unint64_t v174 = v502;
              uint64_t v175 = *(void *)v502;
              if (*(void *)v502 != *(void *)v500) {
                goto LABEL_168;
              }
              if ((*(_DWORD *)(v175 + 8) & 0xFE) == 0x12) {
                uint64_t v175 = **(void **)(v175 + 16);
              }
              if (v91 != llvm::Type::getPrimitiveSizeInBits((llvm::Type *)v175)) {
                goto LABEL_168;
              }
              *(void *)&long long v504 = v474;
              *((void *)&v504 + 1) = &v503;
              *(void *)&long long v505 = &v483;
              *((void *)&v505 + 1) = v6;
              int v497 = 0;
              unsigned int v498 = 0;
              LODWORD(v490) = 9;
              uint8x8_t v491 = 0;
              int v492 = (llvm **)&v498;
              if (sub_1CC045310((uint64_t)&v490, (uint64_t)v174)
                && (LODWORD(v508) = 9,
                    int v509 = 0,
                    unint64_t v510 = &v497,
                    sub_1CC045310((uint64_t)&v508, (uint64_t)v500)))
              {
                int v176 = v497;
                uint64_t v177 = v498;
                int v178 = 9;
              }
              else
              {
                int v495 = 0;
                v496 = 0;
                LODWORD(v490) = 8;
                uint8x8_t v491 = 0;
                int v492 = &v496;
                if (!sub_1CC045310((uint64_t)&v490, (uint64_t)v502))
                {
                  uint64_t v12 = 0;
LABEL_957:
                  if (v12) {
                    return (llvm::Value *)sub_1CC9D3C84(a1, (llvm::ValueAsMetadata *)v6, v12);
                  }
LABEL_168:
                  int v508 = 0;
                  int64_t v502 = 0;
                  int v503 = 0;
                  *(void *)&long long v504 = &v508;
                  *((void *)&v504 + 1) = &v502;
                  *(void *)&long long v505 = 0;
                  *((void *)&v505 + 1) = &v503;
                  int v97 = *(unsigned __int8 *)(v6 + 16);
                  if (v97 == 57)
                  {
                    uint64_t v98 = *v9;
                    uint64_t v99 = *(void *)(*v9 + 8);
                    if (!v99 || *(void *)(v99 + 8)) {
                      goto LABEL_171;
                    }
                    int v120 = *(unsigned __int8 *)(v98 + 16);
                    if (v120 == 5)
                    {
                      if (*(_WORD *)(v98 + 18) != 30) {
                        goto LABEL_171;
                      }
                      if (!*(void *)(v98 - 32 * (*(_DWORD *)(v98 + 20) & 0x7FFFFFF))) {
                        goto LABEL_171;
                      }
                      int v508 = *(llvm::ConstantExpr ***)(v98 - 32 * (*(_DWORD *)(v98 + 20) & 0x7FFFFFF));
                      if (!sub_1CBF5295C((uint64_t)&v504 + 8, *(llvm::Constant **)(v98 - 32 * (*(_DWORD *)(v98 + 20) & 0x7FFFFFF) + 32)))goto LABEL_171; {
                    }
                      }
                    else
                    {
                      if (v120 != 58) {
                        goto LABEL_171;
                      }
                      if (!*(void *)(v98 - 64)) {
                        goto LABEL_171;
                      }
                      int v508 = *(llvm::ConstantExpr ***)(v98 - 64);
                      if ((sub_1CBF528D8((uint64_t)&v504 + 8, *(unsigned __int8 **)(v98 - 32)) & 1) == 0) {
                        goto LABEL_171;
                      }
                    }
                    uint64_t v136 = *(void *)(v6 - 32);
                    if (!v136)
                    {
LABEL_171:
                      uint64_t v100 = *(void *)(v6 - 32);
                      uint64_t v101 = *(void *)(v100 + 8);
                      if (!v101 || *(void *)(v101 + 8)) {
                        goto LABEL_184;
                      }
                      int v102 = *(unsigned __int8 *)(v100 + 16);
                      if (v102 == 5)
                      {
                        if (*(_WORD *)(v100 + 18) != 30) {
                          goto LABEL_184;
                        }
                        uint64_t v141 = *(void *)(v100 - 32 * (*(_DWORD *)(v100 + 20) & 0x7FFFFFF));
                        if (!v141) {
                          goto LABEL_184;
                        }
                        *(void *)long long v504 = v141;
                        if (!sub_1CBF5295C((uint64_t)&v504 + 8, *(llvm::Constant **)(v100- 32 * (*(_DWORD *)(v100 + 20) & 0x7FFFFFF)+ 32)))goto LABEL_184; {
                      }
                        }
                      else
                      {
                        if (v102 != 58) {
                          goto LABEL_184;
                        }
                        uint64_t v103 = *(void *)(v100 - 64);
                        if (!v103) {
                          goto LABEL_184;
                        }
                        *(void *)long long v504 = v103;
                        if ((sub_1CBF528D8((uint64_t)&v504 + 8, *(unsigned __int8 **)(v100 - 32)) & 1) == 0) {
                          goto LABEL_184;
                        }
                      }
                      uint64_t v136 = *v9;
                      if (!*v9) {
                        goto LABEL_184;
                      }
                    }
LABEL_276:
                    **((void **)&v505 + 1) = v136;
                    int v144 = v502;
                    unsigned int v145 = *((_DWORD *)v502 + 2);
                    if (!v145) {
                      goto LABEL_184;
                    }
                    if (v145 > 0x40)
                    {
                      if (llvm::APInt::countTrailingOnesSlowCase(v502) == v145) {
                        goto LABEL_184;
                      }
                    }
                    else if (*(void *)v502 == 0xFFFFFFFFFFFFFFFFLL >> -(char)v145)
                    {
                      goto LABEL_184;
                    }
                    if (llvm::MaskedValueIsZero(v503, v144, *(const llvm::APInt **)(a1 + 80), 0, *(const llvm::DataLayout **)(a1 + 56), (llvm::AssumptionCache *)v6, *(const llvm::Instruction **)(a1 + 72), (const llvm::DominatorTree *)1, v473))
                    {
                      uint64_t v155 = *(void *)(a1 + 24);
                      LOWORD(v506) = 257;
                      char v156 = sub_1CB844AF4(v155, v508, (uint64_t)v503, (uint64_t)&v504);
                      Splat = (unsigned __int8 *)llvm::ConstantInt::get(*(llvm::ConstantInt **)v476, v502, v157);
                      if ((*((_DWORD *)v476 + 2) & 0xFE) == 0x12) {
                        Splat = (unsigned __int8 *)llvm::ConstantVector::getSplat((llvm::Type *)(*((unsigned int *)v476 + 8) | ((unint64_t)(*((_DWORD *)v476 + 2) == 19) << 32)), (uint64_t)Splat);
                      }
                      LOWORD(v506) = 257;
                      uint64_t v153 = (const char **)&v504;
                      char v154 = 30;
                      uint64_t v152 = v156;
                      return llvm::BinaryOperator::Create(v154, v152, (uint64_t)Splat, v153, 0);
                    }
LABEL_184:
                    int v108 = *(unsigned __int8 *)(v6 + 16);
                    if (v108 != 5)
                    {
                      if (v108 != 57) {
                        goto LABEL_195;
                      }
                      uint64_t v109 = *v9;
                      uint64_t v110 = *(void *)(*v9 + 8);
                      if (!v110 || *(void *)(v110 + 8)) {
                        goto LABEL_188;
                      }
                      int v124 = *(unsigned __int8 *)(v109 + 16);
                      if (v124 == 5)
                      {
                        if (*(_WORD *)(v109 + 18) != 17) {
                          goto LABEL_188;
                        }
                        unsigned int v142 = (llvm::ConstantExpr ***)(v109 - 32 * (*(_DWORD *)(v109 + 20) & 0x7FFFFFF));
                        uint64_t v125 = *v142;
                        if (!*v142) {
                          goto LABEL_188;
                        }
                        int v508 = *v142;
                        uint64_t v126 = (llvm *)v142[4];
                        if (!v126) {
                          goto LABEL_188;
                        }
                      }
                      else if (v124 != 45 {
                             || (uint64_t v125 = *(llvm::ConstantExpr ***)(v109 - 64)) == 0
                      }
                             || (v508 = *(llvm::ConstantExpr ***)(v109 - 64), (uint64_t v126 = *(llvm **)(v109 - 32)) == 0))
                      {
LABEL_188:
                        uint64_t v111 = *(void *)(v6 - 32);
                        goto LABEL_193;
                      }
                      int v503 = v126;
                      if (v125 == *(llvm::ConstantExpr ***)(v6 - 32)) {
                        goto LABEL_289;
                      }
                      goto LABEL_188;
                    }
                    if (*(_WORD *)(v6 + 18) != 29) {
                      goto LABEL_195;
                    }
                    uint64_t v112 = (uint64_t *)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF));
                    uint64_t v109 = *v112;
                    uint64_t v113 = *(void *)(*v112 + 8);
                    if (!v113 || *(void *)(v113 + 8))
                    {
LABEL_192:
                      uint64_t v111 = v112[4];
LABEL_193:
                      uint64_t v114 = *(void *)(v111 + 8);
                      if (!v114 || *(void *)(v114 + 8)) {
                        goto LABEL_195;
                      }
                      int v121 = *(unsigned __int8 *)(v111 + 16);
                      if (v121 == 5)
                      {
                        if (*(_WORD *)(v111 + 18) != 17) {
                          goto LABEL_195;
                        }
                        int v140 = (llvm::ConstantExpr ***)(v111 - 32 * (*(_DWORD *)(v111 + 20) & 0x7FFFFFF));
                        uint64_t v122 = *v140;
                        if (!*v140) {
                          goto LABEL_195;
                        }
                        int v508 = *v140;
                        uint64_t v123 = (llvm *)v140[4];
                        if (!v123) {
                          goto LABEL_195;
                        }
                      }
                      else
                      {
                        if (v121 != 45) {
                          goto LABEL_195;
                        }
                        uint64_t v122 = *(llvm::ConstantExpr ***)(v111 - 64);
                        if (!v122) {
                          goto LABEL_195;
                        }
                        int v508 = *(llvm::ConstantExpr ***)(v111 - 64);
                        uint64_t v123 = *(llvm **)(v111 - 32);
                        if (!v123) {
                          goto LABEL_195;
                        }
                      }
                      int v503 = v123;
                      if (v122 != (llvm::ConstantExpr **)v109) {
                        goto LABEL_195;
                      }
LABEL_289:
                      if (llvm::haveNoCommonBitsSet((llvm *)v68, (const llvm::Value *)v69, *(void ***)(a1 + 80), 0, 0, 0, (const llvm::DominatorTree *)1))
                      {
                        uint64_t v148 = *(void *)(a1 + 24);
                        char v149 = v503;
                        char v150 = llvm::ConstantInt::get(v476, 1uLL, 0);
                        LOWORD(v506) = 257;
                        Splat = (unsigned __int8 *)sub_1CB844A3C(v148, v149, (uint64_t)v150, (uint64_t)&v504, 0, 0);
                        uint64_t v152 = (llvm::Instruction *)v508;
                        LOWORD(v506) = 257;
                        uint64_t v153 = (const char **)&v504;
                        char v154 = 17;
                        return llvm::BinaryOperator::Create(v154, v152, (uint64_t)Splat, v153, 0);
                      }
LABEL_195:
                      unsigned int v500 = 0;
                      int v501 = 0;
                      unsigned int v498 = 0;
                      int v499 = 0;
                      int v115 = *(unsigned __int8 *)(v68 + 16);
                      if (v115 == 5)
                      {
                        if (*(_WORD *)(v68 + 18) != 28) {
                          goto LABEL_514;
                        }
                        char v117 = (const llvm::APInt **)(v68 - 32 * (*(_DWORD *)(v68 + 20) & 0x7FFFFFF));
                        if (!*v117) {
                          goto LABEL_514;
                        }
                        int v501 = *v117;
                        uint64_t v116 = (unsigned __int8 *)v117[4];
                        if (!v116) {
                          goto LABEL_514;
                        }
                      }
                      else
                      {
                        if (v115 != 56) {
                          goto LABEL_510;
                        }
                        if (!*(void *)(v68 - 64)) {
                          goto LABEL_514;
                        }
                        int v501 = *(const llvm::APInt **)(v68 - 64);
                        uint64_t v116 = *(unsigned __int8 **)(v68 - 32);
                        if (!v116) {
                          goto LABEL_514;
                        }
                      }
                      int v499 = (const llvm::APInt *)v116;
                      int v118 = *(unsigned __int8 *)(v69 + 16);
                      if (v118 == 5)
                      {
                        if (*(_WORD *)(v69 + 18) != 28) {
                          goto LABEL_514;
                        }
                        uint64_t v127 = (llvm::ConstantExpr **)(v69 - 32 * (*(_DWORD *)(v69 + 20) & 0x7FFFFFF));
                        if (!*v127) {
                          goto LABEL_514;
                        }
                        unsigned int v500 = *v127;
                        size_t v119 = (unsigned __int8 *)v127[4];
                        if (!v119) {
                          goto LABEL_514;
                        }
                      }
                      else
                      {
                        if (v118 != 56) {
                          goto LABEL_514;
                        }
                        if (!*(void *)(v69 - 64)) {
                          goto LABEL_514;
                        }
                        unsigned int v500 = *(llvm::ConstantExpr **)(v69 - 64);
                        size_t v119 = *(unsigned __int8 **)(v69 - 32);
                        if (!v119) {
                          goto LABEL_514;
                        }
                      }
                      int v497 = 0;
                      unsigned int v498 = v119;
                      v496 = 0;
                      *(void *)&long long v504 = &v497;
                      *((void *)&v504 + 1) = 0;
                      if (!sub_1CBF528D8((uint64_t)&v504, v116)
                        || (v490 = &v496, uint8x8_t v491 = 0, !sub_1CBF528D8((uint64_t)&v490, v498)))
                      {
LABEL_505:
                        uint64_t v251 = *(void *)(v68 + 8);
                        if (v251 && !*(void *)(v251 + 8)
                          || (uint64_t v252 = *(void *)(v69 + 8)) != 0 && !*(void *)(v252 + 8))
                        {
                          uint64_t v11 = (uint64_t)sub_1CCA06B38((void *)a1, (uint64_t)v501, v499, v500, v498);
                          if (v11) {
                            goto LABEL_2;
                          }
                          uint64_t v11 = (uint64_t)sub_1CCA06B38((void *)a1, (uint64_t)v501, v499, (llvm::ConstantExpr *)v498, (unsigned __int8 *)v500);
                          if (v11) {
                            goto LABEL_2;
                          }
                          uint64_t v11 = (uint64_t)sub_1CCA06B38((void *)a1, (uint64_t)v499, v501, v500, v498);
                          if (v11) {
                            goto LABEL_2;
                          }
                          uint64_t v11 = (uint64_t)sub_1CCA06B38((void *)a1, (uint64_t)v499, v501, (llvm::ConstantExpr *)v498, (unsigned __int8 *)v500);
                          if (v11) {
                            goto LABEL_2;
                          }
                          uint64_t v11 = (uint64_t)sub_1CCA06B38((void *)a1, (uint64_t)v500, (const llvm::APInt *)v498, v501, (unsigned __int8 *)v499);
                          if (v11) {
                            goto LABEL_2;
                          }
                          uint64_t v11 = (uint64_t)sub_1CCA06B38((void *)a1, (uint64_t)v500, (const llvm::APInt *)v498, v499, (unsigned __int8 *)v501);
                          if (v11) {
                            goto LABEL_2;
                          }
                          uint64_t v11 = (uint64_t)sub_1CCA06B38((void *)a1, (uint64_t)v498, v500, v501, (unsigned __int8 *)v499);
                          if (v11) {
                            goto LABEL_2;
                          }
                          uint64_t v11 = (uint64_t)sub_1CCA06B38((void *)a1, (uint64_t)v498, v500, v499, (unsigned __int8 *)v501);
                          if (v11) {
                            goto LABEL_2;
                          }
                        }
                        int v115 = *(unsigned __int8 *)(v68 + 16);
LABEL_510:
                        if (v115 == 58)
                        {
                          int v253 = *(const llvm::APInt **)(v68 - 64);
                          if (!v253) {
                            goto LABEL_520;
                          }
                          int v501 = *(const llvm::APInt **)(v68 - 64);
                          unint64_t v254 = *(llvm::ConstantExpr **)(v68 - 32);
                          if (!v254) {
                            goto LABEL_520;
                          }
                          goto LABEL_518;
                        }
LABEL_514:
                        if (v115 != 5) {
                          goto LABEL_520;
                        }
                        if (*(_WORD *)(v68 + 18) != 30) {
                          goto LABEL_520;
                        }
                        BOOL v255 = (const llvm::APInt **)(v68 - 32 * (*(_DWORD *)(v68 + 20) & 0x7FFFFFF));
                        int v253 = *v255;
                        if (!*v255) {
                          goto LABEL_520;
                        }
                        int v501 = *v255;
                        unint64_t v254 = v255[4];
                        if (!v254) {
                          goto LABEL_520;
                        }
LABEL_518:
                        unsigned int v500 = v254;
                        *(void *)&long long v504 = v254;
                        *((void *)&v504 + 1) = &v499;
                        *(void *)&long long v505 = v253;
                        if (sub_1CCA16C7C((uint64_t)&v504, v69))
                        {
                          Splat = (unsigned __int8 *)v499;
                          LOWORD(v506) = 257;
                          uint64_t v153 = (const char **)&v504;
                          char v154 = 29;
                          uint64_t v152 = (llvm::Instruction *)v68;
                          return llvm::BinaryOperator::Create(v154, v152, (uint64_t)Splat, v153, 0);
                        }
LABEL_520:
                        *(void *)&long long v504 = &v501;
                        *((void *)&v504 + 1) = &v499;
                        *(void *)&long long v505 = &v500;
                        if (!sub_1CCA16DD8((void **)&v504, v68)) {
                          goto LABEL_529;
                        }
                        int v256 = *(unsigned __int8 *)(v69 + 16);
                        if (v256 == 5)
                        {
                          if (*(_WORD *)(v69 + 18) != 30) {
                            goto LABEL_529;
                          }
                          uint64_t v258 = v69 - 32 * (*(_DWORD *)(v69 + 20) & 0x7FFFFFF);
                          if (v500 != *(llvm::ConstantExpr **)v258) {
                            goto LABEL_529;
                          }
                          int v257 = *(const llvm::APInt **)(v258 + 32);
                        }
                        else
                        {
                          if (v256 != 58 || v500 != *(llvm::ConstantExpr **)(v69 - 64)) {
                            goto LABEL_529;
                          }
                          int v257 = *(const llvm::APInt **)(v69 - 32);
                        }
                        if (v501 == v257)
                        {
                          Splat = (unsigned __int8 *)v499;
                          LOWORD(v506) = 257;
                          uint64_t v153 = (const char **)&v504;
                          goto LABEL_574;
                        }
LABEL_529:
                        int v259 = *(unsigned __int8 *)(v68 + 16);
                        if (v259 != 5)
                        {
                          if (v259 != 56) {
                            goto LABEL_552;
                          }
                          uint64_t v260 = *(void *)(v68 - 64);
                          int v261 = *(unsigned __int8 *)(v260 + 16);
                          if (v261 != 5)
                          {
                            if (v261 != 57) {
                              goto LABEL_552;
                            }
                            if (v69 != *(void *)(v260 - 64)) {
                              goto LABEL_552;
                            }
                            unint64_t v262 = *(unsigned __int8 **)(v260 - 32);
                            if (!v262) {
                              goto LABEL_552;
                            }
                            goto LABEL_545;
                          }
                          if (*(_WORD *)(v260 + 18) == 29)
                          {
                            std::string::size_type v266 = (void *)(v260 - 32 * (*(_DWORD *)(v260 + 20) & 0x7FFFFFF));
                            if (v69 == *v266)
                            {
                              unint64_t v262 = (unsigned __int8 *)v266[4];
                              if (v262)
                              {
LABEL_545:
                                int v499 = (const llvm::APInt *)v262;
                                unsigned int v267 = *(const llvm::APInt **)(v68 - 32);
                                if (!v267) {
                                  goto LABEL_552;
                                }
                                goto LABEL_551;
                              }
                            }
                          }
LABEL_552:
                          unint64_t v14 = (unint64_t)sub_1CCA062A4((uint64_t ***)v6, *(void *)(a1 + 24));
                          if (v14) {
                            return (llvm::Value *)v14;
                          }
                          int v270 = *(unsigned __int8 *)(v68 + 16);
                          if (v270 == 58
                            || (uint64_t v271 = v69, v272 = v68, v270 == 5)
                            && (uint64_t v271 = v69, v272 = v68, *(_WORD *)(v68 + 18) == 30))
                          {
                            uint64_t v271 = v68;
                            uint64_t v272 = v69;
                          }
                          int v273 = *(unsigned __int8 *)(v271 + 16);
                          if (v273 == 5)
                          {
                            if (*(_WORD *)(v271 + 18) != 30) {
                              goto LABEL_632;
                            }
                            uint64_t v274 = v271 - 32 * (*(_DWORD *)(v271 + 20) & 0x7FFFFFF);
                            uint64_t v152 = *(llvm::Instruction **)v274;
                            if (!*(void *)v274) {
                              goto LABEL_632;
                            }
                            int v501 = *(const llvm::APInt **)v274;
                            Splat = *(unsigned __int8 **)(v274 + 32);
                            if (!Splat) {
                              goto LABEL_632;
                            }
                          }
                          else
                          {
                            if (v273 != 58) {
                              goto LABEL_632;
                            }
                            uint64_t v152 = *(llvm::Instruction **)(v271 - 64);
                            if (!v152) {
                              goto LABEL_632;
                            }
                            int v501 = *(const llvm::APInt **)(v271 - 64);
                            Splat = *(unsigned __int8 **)(v271 - 32);
                            if (!Splat) {
                              goto LABEL_632;
                            }
                          }
                          unsigned int v500 = (llvm::ConstantExpr *)Splat;
                          if ((unsigned __int8 *)v272 != Splat && (llvm::Instruction *)v272 != v152)
                          {
                            int v275 = *(unsigned __int8 *)(v272 + 16);
                            if (v275 == 5)
                            {
                              if (*(_WORD *)(v272 + 18) != 28) {
                                goto LABEL_590;
                              }
                              uint64_t v278 = (unsigned __int8 **)(v272 - 32 * (*(_DWORD *)(v272 + 20) & 0x7FFFFFF));
                              if (v152 != (llvm::Instruction *)*v278 || Splat != v278[4])
                              {
                                if (Splat != *v278) {
                                  goto LABEL_590;
                                }
                                BOOL v277 = (llvm::Instruction *)v278[4];
LABEL_589:
                                if (v152 != v277)
                                {
LABEL_590:
                                  uint64_t v279 = *(void *)(v272 + 8);
                                  if (!v279 || *(void *)(v279 + 8))
                                  {
                                    uint64_t v280 = *(void *)(v271 + 8);
                                    if (!v280 || *(void *)(v280 + 8)) {
                                      goto LABEL_628;
                                    }
                                  }
                                  *(void *)&long long v504 = v152;
                                  if (v275 == 5)
                                  {
                                    if (*(_WORD *)(v272 + 18) == 30)
                                    {
                                      uint64_t v281 = *(_DWORD *)(v272 + 20) & 0x7FFFFFF;
                                      int8x8_t v282 = (llvm::Instruction **)(v272 - 32 * v281);
                                      if (v152 == *v282)
                                      {
                                        if (sub_1CBF68974((uint64_t)&v504 + 8, v282[4])) {
                                          goto LABEL_627;
                                        }
                                        uint64_t v152 = (llvm::Instruction *)v504;
                                        uint64_t v283 = -(uint64_t)(*(_DWORD *)(v272 + 20) & 0x7FFFFFF);
                                      }
                                      else
                                      {
                                        uint64_t v283 = -v281;
                                      }
                                      int v284 = (llvm::Constant **)(v272 + 32 * v283);
                                      if (v152 == v284[4] && (sub_1CBF68974((uint64_t)&v504 + 8, *v284) & 1) != 0) {
                                        goto LABEL_627;
                                      }
                                    }
                                  }
                                  else
                                  {
                                    if (v275 != 58)
                                    {
LABEL_612:
                                      int8x8_t v490 = (llvm::LLVMContext **)Splat;
                                      if (v275 != 5)
                                      {
                                        if (v275 != 58) {
                                          goto LABEL_628;
                                        }
                                        if (Splat == *(unsigned __int8 **)(v272 - 64))
                                        {
                                          if (sub_1CBF687D0((uint64_t)&v491, *(llvm::Constant **)(v272 - 32))) {
                                            goto LABEL_627;
                                          }
                                          Splat = (unsigned __int8 *)v490;
                                        }
                                        if (Splat != *(unsigned __int8 **)(v272 - 32)
                                          || (sub_1CBF687D0((uint64_t)&v491, *(llvm::Constant **)(v272 - 64)) & 1) == 0)
                                        {
                                          goto LABEL_628;
                                        }
LABEL_627:
                                        uint64_t v289 = *(void *)(a1 + 24);
                                        LOWORD(v506) = 257;
                                        char v290 = (llvm::Constant **)sub_1CBF52474(v289, v501, (uint64_t)v500, (uint64_t)&v504);
                                        __int16 v494 = 257;
                                        return llvm::BinaryOperator::CreateNot(v290, (llvm::Value *)&v490, 0, v291);
                                      }
                                      if (*(_WORD *)(v272 + 18) != 30) {
                                        goto LABEL_628;
                                      }
                                      uint64_t v285 = *(_DWORD *)(v272 + 20) & 0x7FFFFFF;
                                      uint64_t v286 = v272 - 32 * v285;
                                      if (Splat == *(unsigned __int8 **)v286)
                                      {
                                        if (sub_1CBF68974((uint64_t)&v491, *(llvm::Constant **)(v286 + 32))) {
                                          goto LABEL_627;
                                        }
                                        Splat = (unsigned __int8 *)v490;
                                        uint64_t v287 = -(uint64_t)(*(_DWORD *)(v272 + 20) & 0x7FFFFFF);
                                      }
                                      else
                                      {
                                        uint64_t v287 = -v285;
                                      }
                                      uint64_t v288 = v272 + 32 * v287;
                                      if (Splat == *(unsigned __int8 **)(v288 + 32)
                                        && (sub_1CBF68974((uint64_t)&v491, *(llvm::Constant **)v288) & 1) != 0)
                                      {
                                        goto LABEL_627;
                                      }
LABEL_628:
                                      uint64_t v292 = *(void *)(v271 + 8);
                                      if (!v292 || *(void *)(v292 + 8))
                                      {
LABEL_630:
                                        uint64_t v293 = *(void *)(v271 + 8);
                                        if (!v293 || *(void *)(v293 + 8)) {
                                          goto LABEL_632;
                                        }
                                        int v352 = v500;
                                        *(void *)&long long v504 = v272;
                                        int v353 = *((unsigned __int8 *)v500 + 16);
                                        if (v353 == 5)
                                        {
                                          if (*((_WORD *)v500 + 9) == 30)
                                          {
                                            uint64_t v375 = *((_DWORD *)v500 + 5) & 0x7FFFFFF;
                                            uint64_t v376 = (void *)((char *)v500 - 32 * v375);
                                            if (v272 == *v376)
                                            {
                                              if (sub_1CBF68974((uint64_t)&v504 + 8, (llvm::Constant *)v376[4])) {
                                                goto LABEL_842;
                                              }
                                              uint64_t v378 = v504;
                                              uint64_t v377 = -(uint64_t)(*((_DWORD *)v352 + 5) & 0x7FFFFFF);
                                            }
                                            else
                                            {
                                              uint64_t v377 = -v375;
                                              uint64_t v378 = v272;
                                            }
                                            uint64_t v415 = (char *)v352 + 32 * v377;
                                            if (v378 == *((void *)v415 + 4))
                                            {
                                              if (sub_1CBF68974((uint64_t)&v504 + 8, *(llvm::Constant **)v415))
                                              {
LABEL_842:
                                                uint64_t v298 = *(void *)(a1 + 24);
                                                uint64_t v296 = v501;
                                                if ((*((unsigned char *)v501 + 23) & 0x10) != 0)
                                                {
                                                  uint64_t v416 = ***(void ***)v501;
                                                  uint64_t v300 = *(void *)(v416 + 152);
                                                  uint64_t v301 = *(unsigned int *)(v416 + 168);
                                                  if (v301)
                                                  {
                                                    LODWORD(v302) = (v301 - 1) & ((v501 >> 4) ^ (v501 >> 9));
                                                    uint64_t v303 = v300 + 16 * v302;
                                                    uint64_t v417 = *(const llvm::APInt **)v303;
                                                    if (*(const llvm::APInt **)v303 != v501)
                                                    {
                                                      int v418 = 1;
                                                      while (v417 != (const llvm::APInt *)-4096)
                                                      {
                                                        int v419 = v302 + v418++;
                                                        uint64_t v302 = v419 & (v301 - 1);
                                                        uint64_t v417 = *(const llvm::APInt **)(v300 + 16 * v302);
                                                        if (v417 == v501) {
                                                          goto LABEL_649;
                                                        }
                                                      }
                                                      goto LABEL_849;
                                                    }
                                                    goto LABEL_850;
                                                  }
LABEL_849:
                                                  uint64_t v303 = v300 + 16 * v301;
                                                  goto LABEL_850;
                                                }
LABEL_854:
                                                uint64_t v422 = 0;
                                                uint64_t v421 = &byte_1CFBCE98E;
                                                goto LABEL_851;
                                              }
                                            }
                                          }
                                        }
                                        else if (v353 == 58)
                                        {
                                          uint64_t v354 = v272;
                                          if (v272 == *((void *)v500 - 8))
                                          {
                                            if (sub_1CBF687D0((uint64_t)&v504 + 8, *((llvm::Constant **)v500 - 4))) {
                                              goto LABEL_842;
                                            }
                                            uint64_t v354 = v504;
                                          }
                                          if (v354 == *((void *)v352 - 4)
                                            && (sub_1CBF687D0((uint64_t)&v504 + 8, *((llvm::Constant **)v352 - 8)) & 1) != 0)
                                          {
                                            goto LABEL_842;
                                          }
                                        }
LABEL_632:
                                        *(void *)&long long v504 = &v501;
                                        if (sub_1CBF686A0((void **)&v504, 30, v271))
                                        {
                                          if (v501)
                                          {
                                            unsigned int v295 = *((unsigned __int8 *)v501 + 16);
                                            if (v295 >= 0x1C && v295 - 59 >= 0xFFFFFFEE)
                                            {
                                              uint64_t v296 = (const llvm::APInt *)*((void *)v501 - 8);
                                              if ((const llvm::APInt *)v272 == v296 || v272 == *((void *)v501 - 4))
                                              {
                                                uint64_t v297 = *(void *)(v271 + 8);
                                                if (v297)
                                                {
                                                  if (!*(void *)(v297 + 8) && v295 - 57 <= 1)
                                                  {
                                                    if ((const llvm::APInt *)v272 == v296) {
                                                      uint64_t v296 = (const llvm::APInt *)*((void *)v501 - 4);
                                                    }
                                                    uint64_t v298 = *(void *)(a1 + 24);
                                                    if ((*((unsigned char *)v296 + 23) & 0x10) != 0)
                                                    {
                                                      uint64_t v299 = ***(void ***)v296;
                                                      uint64_t v300 = *(void *)(v299 + 152);
                                                      uint64_t v301 = *(unsigned int *)(v299 + 168);
                                                      if (v301)
                                                      {
                                                        LODWORD(v302) = (v301 - 1) & ((v296 >> 4) ^ (v296 >> 9));
                                                        uint64_t v303 = v300 + 16 * v302;
                                                        unsigned int v304 = *(const llvm::APInt **)v303;
                                                        if (*(const llvm::APInt **)v303 != v296)
                                                        {
                                                          int v305 = 1;
                                                          while (v304 != (const llvm::APInt *)-4096)
                                                          {
                                                            int v306 = v302 + v305++;
                                                            uint64_t v302 = v306 & (v301 - 1);
                                                            unsigned int v304 = *(const llvm::APInt **)(v300
                                                                                         + 16 * v302);
                                                            if (v304 == v296) {
                                                              goto LABEL_649;
                                                            }
                                                          }
                                                          goto LABEL_849;
                                                        }
LABEL_850:
                                                        uint64_t v420 = *(void **)(v303 + 8);
                                                        uint64_t v423 = *v420;
                                                        uint64_t v421 = (char *)(v420 + 2);
                                                        uint64_t v422 = v423;
LABEL_851:
                                                        LOWORD(v506) = 773;
                                                        *(void *)&long long v504 = v421;
                                                        *((void *)&v504 + 1) = v422;
                                                        *(void *)&long long v505 = ".not";
                                                        uint64_t v152 = sub_1CC2427E8(v298, (uint64_t)v296, (uint64_t)&v504, v294);
                                                        LOWORD(v506) = 257;
                                                        uint64_t v153 = (const char **)&v504;
                                                        char v154 = 29;
LABEL_852:
                                                        Splat = (unsigned __int8 *)v272;
                                                        return llvm::BinaryOperator::Create(v154, v152, (uint64_t)Splat, v153, 0);
                                                      }
                                                      goto LABEL_849;
                                                    }
                                                    goto LABEL_854;
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                        if (*(unsigned char *)(v68 + 16) == 81) {
                                          uint64_t v307 = v68;
                                        }
                                        else {
                                          uint64_t v307 = 0;
                                        }
                                        if (*(unsigned char *)(v69 + 16) == 81) {
                                          uint64_t v308 = v69;
                                        }
                                        else {
                                          uint64_t v308 = 0;
                                        }
                                        if (v307 && v308)
                                        {
                                          uint64_t v11 = (uint64_t)sub_1CCA00728(a1, v307, v308, (llvm::AssumptionCache *)v6);
                                          if (v11) {
                                            goto LABEL_2;
                                          }
                                        }
                                        else if (!v307)
                                        {
                                          goto LABEL_663;
                                        }
                                        uint64_t v309 = *(void *)(v69 + 8);
                                        if (v309 && !*(void *)(v309 + 8))
                                        {
                                          int v321 = *(unsigned __int8 *)(v69 + 16);
                                          if (v321 == 5)
                                          {
                                            if (*(_WORD *)(v69 + 18) != 29) {
                                              goto LABEL_663;
                                            }
                                            unint64_t v326 = (uint64_t *)(v69 - 32 * (*(_DWORD *)(v69 + 20) & 0x7FFFFFF));
                                            uint64_t v322 = *v326;
                                            if (!*v326) {
                                              goto LABEL_663;
                                            }
                                            uint64_t v323 = v326[4];
                                          }
                                          else
                                          {
                                            if (v321 != 57) {
                                              goto LABEL_663;
                                            }
                                            uint64_t v322 = *(void *)(v69 - 64);
                                            if (!v322) {
                                              goto LABEL_663;
                                            }
                                            uint64_t v323 = *(void *)(v69 - 32);
                                          }
                                          uint64_t v475 = v323;
                                          if (v323)
                                          {
                                            if (*(unsigned char *)(v322 + 16) == 81)
                                            {
                                              int v327 = sub_1CCA00728(a1, v307, v322, (llvm::AssumptionCache *)v6);
                                              if (v327)
                                              {
                                                int v328 = v327;
                                                uint64_t v329 = *(void *)(a1 + 24);
                                                LOWORD(v506) = 257;
                                                uint64_t v330 = v475;
                                                goto LABEL_746;
                                              }
                                            }
                                            if (*(unsigned char *)(v475 + 16) == 81)
                                            {
                                              int v332 = sub_1CCA00728(a1, v307, v475, (llvm::AssumptionCache *)v6);
                                              if (v332)
                                              {
LABEL_745:
                                                int v328 = v332;
                                                uint64_t v329 = *(void *)(a1 + 24);
                                                LOWORD(v506) = 257;
                                                uint64_t v330 = v322;
                                                goto LABEL_746;
                                              }
                                            }
                                          }
                                        }
LABEL_663:
                                        if (!v308 || (uint64_t v310 = *(void *)(v68 + 8)) == 0 || *(void *)(v310 + 8))
                                        {
LABEL_666:
                                          uint64_t v311 = *v9;
                                          if (!*v9
                                            || *(unsigned char *)(v311 + 16) != 82
                                            || (uint64_t v312 = *(void *)(v6 - 32)) == 0
                                            || *(unsigned char *)(v312 + 16) != 82
                                            || (uint64_t v11 = (uint64_t)sub_1CCA00074(a1, v311, v312, 0, 0)) == 0)
                                          {
                                            unint64_t v14 = (unint64_t)sub_1CCA0660C(v6, *(void *)(a1 + 24));
                                            if (v14) {
                                              return (llvm::Value *)v14;
                                            }
                                            unint64_t v14 = (unint64_t)sub_1CCA002D4(a1, (unsigned __int8 *)v6);
                                            if (v14) {
                                              return (llvm::Value *)v14;
                                            }
                                            unint64_t v14 = (unint64_t)sub_1CC9D4074(a1, v6);
                                            if (v14) {
                                              return (llvm::Value *)v14;
                                            }
                                            *(void *)&long long v504 = &v501;
                                            uint64_t v313 = *(void *)(v68 + 8);
                                            if (v313
                                              && !*(void *)(v313 + 8)
                                              && sub_1CBC5BEAC((void **)&v504, v68))
                                            {
                                              uint64_t v316 = v501;
                                              int v317 = *(_DWORD *)(*(void *)v501 + 8);
                                              if ((v317 & 0xFE) == 0x12) {
                                                int v317 = *(_DWORD *)(**(void **)(*(void *)v501 + 16) + 8);
                                              }
                                              if (v317 == 269)
                                              {
                                                AllOnesValue = (uint64_t *)llvm::Constant::getAllOnesValue(v476, v314, v315);
                                                LOWORD(v506) = 257;
                                                uint64_t v319 = v316;
                                                uint64_t v320 = (llvm::Instruction *)v69;
                                                return sub_1CC199EFC((uint64_t)v319, AllOnesValue, (uint64_t)v320, (const char **)&v504, 0, 0);
                                              }
                                            }
                                            *(void *)&long long v504 = &v501;
                                            uint64_t v334 = *(void *)(v69 + 8);
                                            if (v334
                                              && !*(void *)(v334 + 8)
                                              && sub_1CBC5BEAC((void **)&v504, v69))
                                            {
                                              uint64_t v337 = v501;
                                              int v338 = *(_DWORD *)(*(void *)v501 + 8);
                                              if ((v338 & 0xFE) == 0x12) {
                                                int v338 = *(_DWORD *)(**(void **)(*(void *)v501 + 16) + 8);
                                              }
                                              if (v338 == 269)
                                              {
                                                AllOnesValue = (uint64_t *)llvm::Constant::getAllOnesValue(v476, v335, v336);
                                                LOWORD(v506) = 257;
                                                uint64_t v319 = v337;
                                                uint64_t v320 = (llvm::Instruction *)v68;
                                                return sub_1CC199EFC((uint64_t)v319, AllOnesValue, (uint64_t)v320, (const char **)&v504, 0, 0);
                                              }
                                            }
                                            uint64_t v339 = *(void *)(v68 + 8);
                                            if (!v339)
                                            {
LABEL_715:
                                              int8x8_t v490 = 0;
                                              int v497 = 0;
                                              uint64_t v340 = v476;
                                              if ((*((_DWORD *)v476 + 2) & 0xFE) == 0x12) {
                                                uint64_t v340 = (llvm::Type *)**((void **)v476 + 2);
                                              }
                                              int v341 = llvm::Type::getPrimitiveSizeInBits(v340);
                                              *(void *)&long long v504 = &v497;
                                              *((void *)&v504 + 1) = &v490;
                                              DWORD2(v505) = 64;
                                              *(void *)&long long v505 = (v341 - 1);
                                              *(void *)&long long v506 = &v490;
                                              int v342 = *(unsigned __int8 *)(v6 + 16);
                                              if (v342 != 5)
                                              {
                                                if (v342 != 57) {
                                                  goto LABEL_756;
                                                }
                                                uint64_t v343 = *v9;
                                                uint64_t v344 = *(void *)(*v9 + 8);
                                                if (!v344 || *(void *)(v344 + 8))
                                                {
LABEL_721:
                                                  uint64_t v345 = *(void *)(v6 - 32);
                                                  uint64_t v346 = *(void *)(v345 + 8);
                                                  if (v346 && !*(void *)(v346 + 8))
                                                  {
                                                    int v347 = *(unsigned __int8 *)(v345 + 16);
                                                    if (v347 == 5)
                                                    {
                                                      if (*(_WORD *)(v345 + 18) == 27
                                                        && sub_1CCA17234((void **)&v504, *(void *)(v345- 32* (*(_DWORD *)(v345 + 20) & 0x7FFFFFF))))
                                                      {
                                                        BOOL v348 = sub_1CBF531E4((llvm::APInt *)&v505, *(llvm::Constant **)(v345- 32* (*(_DWORD *)(v345 + 20) & 0x7FFFFFF)+ 32));
LABEL_890:
                                                        int v436 = v9;
                                                        if (v348) {
                                                          goto LABEL_901;
                                                        }
                                                      }
                                                    }
                                                    else if (v347 == 55 {
                                                           && sub_1CCA17234((void **)&v504, *(void *)(v345 - 64)))
                                                    }
                                                    {
                                                      BOOL v348 = sub_1CBF53154((llvm::APInt *)&v505, *(unsigned __int8 **)(v345 - 32));
                                                      goto LABEL_890;
                                                    }
                                                  }
LABEL_752:
                                                  BOOL v359 = 0;
LABEL_753:
                                                  if (DWORD2(v505) >= 0x41 && (void)v505)
                                                  {
                                                    MEMORY[0x1D25D9CB0](v505, 0x1000C8000313F17);
                                                    if (!v359) {
                                                      goto LABEL_756;
                                                    }
                                                  }
                                                  else if (!v359)
                                                  {
LABEL_756:
                                                    unint64_t v14 = (unint64_t)sub_1CC9EA104(a1, v6);
                                                    if (v14) {
                                                      return (llvm::Value *)v14;
                                                    }
                                                    int v477 = 0;
                                                    int8x8_t v490 = 0;
                                                    v496 = 0;
                                                    int v497 = 0;
                                                    int v495 = 0;
                                                    *(void *)&long long v504 = &v495;
                                                    *((void *)&v504 + 1) = &v497;
                                                    *(void *)&long long v505 = &v477;
                                                    *((void *)&v505 + 1) = &v495;
                                                    *(void *)&long long v506 = &v490;
                                                    unint64_t v507 = &v496;
                                                    int v360 = *(unsigned __int8 *)(v6 + 16);
                                                    if (v360 == 57)
                                                    {
                                                      uint64_t v361 = *v9;
                                                      if (!*v9
                                                        || *(unsigned char *)(v361 + 16) != 92
                                                        || *(_DWORD *)(v361 + 72) != 1
                                                        || **(_DWORD **)(v361 + 64) != 1
                                                        || !*(void *)(v361 - 32)
                                                        || (int v495 = *(llvm::ConstantInt ****)(v361 - 32),
                                                            **((void **)&v504 + 1) = v361,
                                                            uint64_t v362 = *(void *)(v6 - 32),
                                                            char v363 = sub_1CCA17320((uint64_t)&v505, v362),
                                                            !v362)
                                                        || (v363 & 1) == 0)
                                                      {
                                                        uint64_t v364 = *(void *)(v6 - 32);
                                                        if (!v364) {
                                                          goto LABEL_814;
                                                        }
                                                        if (*(unsigned char *)(v364 + 16) != 92) {
                                                          goto LABEL_814;
                                                        }
                                                        if (*(_DWORD *)(v364 + 72) != 1) {
                                                          goto LABEL_814;
                                                        }
                                                        if (**(_DWORD **)(v364 + 64) != 1) {
                                                          goto LABEL_814;
                                                        }
                                                        uint64_t v365 = *(void *)(v364 - 32);
                                                        if (!v365) {
                                                          goto LABEL_814;
                                                        }
                                                        *(void *)long long v504 = v365;
                                                        **((void **)&v504 + 1) = v364;
                                                        uint64_t v362 = *v9;
                                                        char v366 = sub_1CCA17320((uint64_t)&v505, *v9);
                                                        if (!v362 || (v366 & 1) == 0) {
                                                          goto LABEL_814;
                                                        }
                                                      }
                                                      goto LABEL_805;
                                                    }
                                                    if (v360 != 5 || *(_WORD *)(v6 + 18) != 29) {
                                                      goto LABEL_814;
                                                    }
                                                    uint64_t v381 = *(_DWORD *)(v6 + 20) & 0x7FFFFFF;
                                                    uint64_t v382 = -v381;
                                                    uint64_t v383 = *(void *)(v6 - 32 * v381);
                                                    if (v383
                                                      && *(unsigned char *)(v383 + 16) == 92
                                                      && *(_DWORD *)(v383 + 72) == 1
                                                      && **(_DWORD **)(v383 + 64) == 1
                                                      && *(void *)(v383 - 32))
                                                    {
                                                      int v495 = *(llvm::ConstantInt ****)(v383 - 32);
                                                      **((void **)&v504 + 1) = v383;
                                                      uint64_t v362 = *(void *)(v6
                                                                       - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF)
                                                                       + 32);
                                                      char v384 = sub_1CCA17320((uint64_t)&v505, v362);
                                                      if (v362 && (v384 & 1) != 0)
                                                      {
LABEL_805:
                                                        *unint64_t v507 = (llvm::LLVMContext *)v362;
                                                        uint64_t v388 = *((void *)v497 + 1);
                                                        if ((v388 && !*(void *)(v388 + 8)
                                                           || (uint64_t v389 = *((void *)v496 + 1)) != 0
                                                           && !*(void *)(v389 + 8)
                                                           && (int v390 = v490[1]) != 0
                                                           && !*((void *)v390 + 1))
                                                          && v477 == 33)
                                                        {
                                                          char v482 = 0;
                                                          uint64_t v483 = 0;
                                                          LODWORD(v504) = 309;
                                                          *((void *)&v504 + 1) = 0;
                                                          *(void *)&long long v505 = &v483;
                                                          *((void *)&v505 + 1) = 1;
                                                          *(void *)&long long v506 = &v482;
                                                          if (sub_1CC9F99A8((uint64_t)&v504, (uint64_t)v495))
                                                          {
                                                            uint64_t v393 = *(void *)(a1 + 24);
                                                            int v394 = v483;
                                                            LOWORD(v506) = 257;
                                                            NullValue = llvm::Constant::getNullValue((llvm::Constant *)*v483, v391, v392);
                                                            uint64_t v396 = sub_1CB845F20(v393, 33, v394, (uint64_t)NullValue, (uint64_t)&v504);
                                                            uint64_t v397 = *(void *)(a1 + 24);
                                                            uint64_t v398 = v482;
                                                            LOWORD(v506) = 257;
                                                            uint64_t v401 = llvm::Constant::getNullValue(*(llvm::Constant **)v482, v399, v400);
                                                            uint64_t v402 = sub_1CB845F20(v397, 33, v398, (uint64_t)v401, (uint64_t)&v504);
                                                            LOWORD(v506) = 257;
                                                            char v403 = 28;
                                                            int v404 = v396;
                                                            return llvm::BinaryOperator::Create(v403, v404, (uint64_t)v402, (const char **)&v504, 0);
                                                          }
                                                        }
LABEL_814:
                                                        if (sub_1CCA06844(a1, (unsigned __int8 *)v6)) {
                                                          return (llvm::Value *)v6;
                                                        }
                                                        *((void *)&v504 + 1) = &v508;
                                                        *(void *)&long long v506 = &v508;
                                                        int v405 = *(unsigned __int8 *)(v6 + 16);
                                                        if (v405 != 5)
                                                        {
                                                          if (v405 != 57) {
                                                            goto LABEL_933;
                                                          }
                                                          if (!sub_1CCA173D0((uint64_t)&v504, 13, *v9)) {
                                                            goto LABEL_906;
                                                          }
                                                          uint64_t v406 = *(void *)(v6 - 32);
                                                          int v407 = *(unsigned __int8 *)(v406 + 16);
                                                          if (v407 == 5)
                                                          {
                                                            if (*(_WORD *)(v406 + 18) == 25
                                                              && sub_1CBF5270C((uint64_t)&v505 + 8, *(llvm::Constant **)(v406 - 32 * (*(_DWORD *)(v406 + 20) & 0x7FFFFFF))))
                                                            {
                                                              uint64_t v408 = *(void *)(v406
                                                                               - 32
                                                                               * (*(_DWORD *)(v406 + 20) & 0x7FFFFFF)
                                                                               + 32);
LABEL_905:
                                                              if (*(void *)v506 == v408) {
                                                                goto LABEL_922;
                                                              }
                                                            }
                                                          }
                                                          else if (v407 == 53 {
                                                                 && sub_1CBF5250C((uint64_t)&v505 + 8, *(llvm::Constant **)(v406 - 64)))
                                                          }
                                                          {
                                                            uint64_t v408 = *(void *)(v406 - 32);
                                                            goto LABEL_905;
                                                          }
LABEL_906:
                                                          if (!sub_1CCA173D0((uint64_t)&v504, 13, *(void *)(v6 - 32))) {
                                                            goto LABEL_933;
                                                          }
                                                          uint64_t v437 = *v9;
                                                          goto LABEL_914;
                                                        }
                                                        if (*(_WORD *)(v6 + 18) != 29) {
                                                          goto LABEL_933;
                                                        }
                                                        if (sub_1CCA173D0((uint64_t)&v504, 13, *(void *)(v6 - 32* (*(_DWORD *)(v6 + 20) & 0x7FFFFFF))))
                                                        {
                                                          uint64_t v424 = *(void *)(v6
                                                                           - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF)
                                                                           + 32);
                                                          int v425 = *(unsigned __int8 *)(v424 + 16);
                                                          if (v425 == 5)
                                                          {
                                                            if (*(_WORD *)(v424 + 18) == 25
                                                              && sub_1CBF5270C((uint64_t)&v505 + 8, *(llvm::Constant **)(v424 - 32 * (*(_DWORD *)(v424 + 20) & 0x7FFFFFF))))
                                                            {
                                                              uint64_t v426 = *(void *)(v424
                                                                               - 32
                                                                               * (*(_DWORD *)(v424 + 20) & 0x7FFFFFF)
                                                                               + 32);
LABEL_911:
                                                              if (*(void *)v506 == v426) {
                                                                goto LABEL_922;
                                                              }
                                                            }
                                                          }
                                                          else if (v425 == 53 {
                                                                 && sub_1CBF5250C((uint64_t)&v505 + 8, *(llvm::Constant **)(v424 - 64)))
                                                          }
                                                          {
                                                            uint64_t v426 = *(void *)(v424 - 32);
                                                            goto LABEL_911;
                                                          }
                                                        }
                                                        if (!sub_1CCA173D0((uint64_t)&v504, 13, *(void *)(v6- 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF)+ 32)))goto LABEL_933; {
                                                        uint64_t v437 = *(void *)(v6 - 32
                                                        }
                                                                              * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF));
LABEL_914:
                                                        int v438 = *(unsigned __int8 *)(v437 + 16);
                                                        if (v438 == 5)
                                                        {
                                                          if (*(_WORD *)(v437 + 18) != 25
                                                            || !sub_1CBF5270C((uint64_t)&v505 + 8, *(llvm::Constant **)(v437 - 32 * (*(_DWORD *)(v437 + 20) & 0x7FFFFFF))))
                                                          {
                                                            goto LABEL_933;
                                                          }
                                                          uint64_t v439 = *(void *)(v437
                                                                           - 32 * (*(_DWORD *)(v437 + 20) & 0x7FFFFFF)
                                                                           + 32);
                                                        }
                                                        else
                                                        {
                                                          if (v438 != 53
                                                            || !sub_1CBF5250C((uint64_t)&v505 + 8, *(llvm::Constant **)(v437 - 64)))
                                                          {
                                                            goto LABEL_933;
                                                          }
                                                          uint64_t v439 = *(void *)(v437 - 32);
                                                        }
                                                        if (*(void *)v506 == v439)
                                                        {
LABEL_922:
                                                          int v440 = *(unsigned __int8 *)(v6 + 16);
                                                          if (v440 == 57)
                                                          {
                                                            uint64_t v441 = *(void *)(*v9 + 8);
                                                            if (!v441 || *(void *)(v441 + 8))
                                                            {
                                                              uint64_t v442 = *(void *)(v6 - 32);
LABEL_931:
                                                              uint64_t v445 = *(void *)(v442 + 8);
                                                              if (!v445 || *(void *)(v445 + 8)) {
                                                                goto LABEL_933;
                                                              }
                                                            }
                                                          }
                                                          else
                                                          {
                                                            if (v440 != 5 || *(_WORD *)(v6 + 18) != 29) {
                                                              goto LABEL_933;
                                                            }
                                                            unint64_t v443 = (void *)(v6
                                                                            - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF));
                                                            uint64_t v444 = *(void *)(*v443 + 8);
                                                            if (!v444 || *(void *)(v444 + 8))
                                                            {
                                                              uint64_t v442 = v443[4];
                                                              goto LABEL_931;
                                                            }
                                                          }
                                                          uint64_t v452 = *(void *)(a1 + 24);
                                                          uint64_t v453 = v476;
                                                          if ((*((_DWORD *)v476 + 2) & 0xFE) == 0x12) {
                                                            uint64_t v453 = (llvm::Type *)**((void **)v476 + 2);
                                                          }
                                                          int v454 = llvm::Type::getPrimitiveSizeInBits(v453);
                                                          unsigned int v455 = llvm::ConstantInt::get(v476, (v454 - 1), 0);
                                                          LOWORD(v506) = 257;
                                                          uint64_t v456 = sub_1CB84494C(v452, (uint64_t)v455, (uint64_t)v508, (uint64_t)&v504, 0, 0);
                                                          int v404 = llvm::Constant::getAllOnesValue(v476, v457, v458);
                                                          LOWORD(v506) = 257;
                                                          char v403 = 26;
                                                          uint64_t v402 = v456;
                                                          return llvm::BinaryOperator::Create(v403, v404, (uint64_t)v402, (const char **)&v504, 0);
                                                        }
LABEL_933:
                                                        char v482 = 0;
                                                        uint64_t v483 = 0;
                                                        *(void *)&long long v504 = 0;
                                                        uint64_t v446 = (const llvm::Instruction *)*v9;
                                                        if (!*v9 || *((unsigned char *)v446 + 16) != 83)
                                                        {
                                                          uint64_t v446 = *(const llvm::Instruction **)(v6 - 32);
                                                          if (!v446 || *((unsigned char *)v446 + 16) != 83) {
                                                            return 0;
                                                          }
                                                        }
                                                        if ((llvm::matchSimpleRecurrence((uint64_t)v446, &v504, &v483, &v482) & 1) == 0)return 0; {
                                                        if ((void)v504 != v6)
                                                        }
                                                          return 0;
                                                        uint64_t v447 = v482;
                                                        if (!llvm::DominatorTree::dominates(*(llvm::DominatorTree **)(a1 + 72), v482, v446))return 0; {
                                                        uint64_t v448 = *(void *)(a1 + 24);
                                                        }
                                                        LOWORD(v506) = 257;
                                                        uint64_t v449 = sub_1CB844AF4(v448, v483, (uint64_t)v447, (uint64_t)&v504);
                                                        return (llvm::Value *)sub_1CC9D3C84(a1, (llvm::ValueAsMetadata *)v6, v449);
                                                      }
                                                      uint64_t v382 = -(uint64_t)(*(_DWORD *)(v6 + 20) & 0x7FFFFFF);
                                                    }
                                                    uint64_t v385 = *(void *)(v6 + 32 * v382 + 32);
                                                    if (!v385) {
                                                      goto LABEL_814;
                                                    }
                                                    if (*(unsigned char *)(v385 + 16) != 92) {
                                                      goto LABEL_814;
                                                    }
                                                    if (*(_DWORD *)(v385 + 72) != 1) {
                                                      goto LABEL_814;
                                                    }
                                                    if (**(_DWORD **)(v385 + 64) != 1) {
                                                      goto LABEL_814;
                                                    }
                                                    uint64_t v386 = *(void *)(v385 - 32);
                                                    if (!v386) {
                                                      goto LABEL_814;
                                                    }
                                                    *(void *)long long v504 = v386;
                                                    **((void **)&v504 + 1) = v385;
                                                    uint64_t v362 = *(void *)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF));
                                                    int v387 = sub_1CCA17320((uint64_t)&v505, v362);
                                                    if (!v362 || !v387) {
                                                      goto LABEL_814;
                                                    }
                                                    goto LABEL_805;
                                                  }
                                                  uint64_t v367 = *(void *)(a1 + 24);
                                                  LOWORD(v506) = 257;
                                                  char v368 = sub_1CB845F20(v367, 38, v490, (uint64_t)v497, (uint64_t)&v504);
                                                  AllOnesValue = (uint64_t *)llvm::Constant::getAllOnesValue(v476, v369, v370);
                                                  uint64_t v320 = (llvm::Instruction *)v490;
                                                  LOWORD(v506) = 257;
                                                  uint64_t v319 = v368;
                                                  return sub_1CC199EFC((uint64_t)v319, AllOnesValue, (uint64_t)v320, (const char **)&v504, 0, 0);
                                                }
                                                int v409 = *(unsigned __int8 *)(v343 + 16);
                                                if (v409 == 5)
                                                {
                                                  if (*(_WORD *)(v343 + 18) != 27
                                                    || !sub_1CCA17234((void **)&v504, *(void *)(v343- 32* (*(_DWORD *)(v343 + 20) & 0x7FFFFFF)))|| !sub_1CBF531E4((llvm::APInt *)&v505, *(llvm::Constant **)(v343- 32* (*(_DWORD *)(v343 + 20) & 0x7FFFFFF)+ 32)))
                                                  {
                                                    goto LABEL_721;
                                                  }
                                                }
                                                else if (v409 != 55 {
                                                       || !sub_1CCA17234((void **)&v504, *(void *)(v343 - 64))|| !sub_1CBF53154((llvm::APInt *)&v505, *(unsigned __int8 **)(v343 - 32)))
                                                }
                                                {
                                                  goto LABEL_721;
                                                }
                                                if (*(void *)v506 != *(void *)(v6 - 32)) {
                                                  goto LABEL_721;
                                                }
LABEL_896:
                                                BOOL v359 = 1;
                                                goto LABEL_753;
                                              }
                                              if (*(_WORD *)(v6 + 18) != 29) {
                                                goto LABEL_752;
                                              }
                                              uint64_t v355 = *(void *)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF));
                                              uint64_t v356 = *(void *)(v355 + 8);
                                              if (v356 && !*(void *)(v356 + 8))
                                              {
                                                int v434 = *(unsigned __int8 *)(v355 + 16);
                                                if (v434 == 5)
                                                {
                                                  if (*(_WORD *)(v355 + 18) != 27
                                                    || !sub_1CCA17234((void **)&v504, *(void *)(v355- 32* (*(_DWORD *)(v355 + 20) & 0x7FFFFFF)))|| !sub_1CBF531E4((llvm::APInt *)&v505, *(llvm::Constant **)(v355- 32* (*(_DWORD *)(v355 + 20) & 0x7FFFFFF)+ 32)))
                                                  {
                                                    goto LABEL_750;
                                                  }
                                                }
                                                else if (v434 != 55 {
                                                       || !sub_1CCA17234((void **)&v504, *(void *)(v355 - 64))|| !sub_1CBF53154((llvm::APInt *)&v505, *(unsigned __int8 **)(v355 - 32)))
                                                }
                                                {
                                                  goto LABEL_750;
                                                }
                                                if (*(void *)v506 == *(void *)(v6
                                                                                  - 32
                                                                                  * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF)
                                                                                  + 32))
                                                  goto LABEL_896;
                                              }
LABEL_750:
                                              uint64_t v357 = *(void *)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF) + 32);
                                              uint64_t v358 = *(void *)(v357 + 8);
                                              if (!v358 || *(void *)(v358 + 8)) {
                                                goto LABEL_752;
                                              }
                                              int v435 = *(unsigned __int8 *)(v357 + 16);
                                              if (v435 == 5)
                                              {
                                                if (*(_WORD *)(v357 + 18) != 27
                                                  || !sub_1CCA17234((void **)&v504, *(void *)(v357- 32* (*(_DWORD *)(v357 + 20) & 0x7FFFFFF)))|| !sub_1CBF531E4((llvm::APInt *)&v505, *(llvm::Constant **)(v357- 32 * (*(_DWORD *)(v357 + 20) & 0x7FFFFFF)+ 32)))
                                                {
                                                  goto LABEL_752;
                                                }
                                              }
                                              else if (v435 != 55 {
                                                     || !sub_1CCA17234((void **)&v504, *(void *)(v357 - 64))|| !sub_1CBF53154((llvm::APInt *)&v505, *(unsigned __int8 **)(v357 - 32)))
                                              }
                                              {
                                                goto LABEL_752;
                                              }
                                              int v436 = (uint64_t *)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF));
LABEL_901:
                                              BOOL v359 = *(void *)v506 == *v436;
                                              goto LABEL_753;
                                            }
                                            if (*(void *)(v339 + 8))
                                            {
                                              int v497 = 0;
                                              goto LABEL_715;
                                            }
                                            if (*(unsigned char *)(v69 + 16) != 16)
                                            {
                                              int v379 = *(unsigned __int8 *)(v68 + 16);
                                              if (v379 == 5)
                                              {
                                                if (*(_WORD *)(v68 + 18) != 29) {
                                                  goto LABEL_866;
                                                }
                                                uint64_t v427 = v68 - 32 * (*(_DWORD *)(v68 + 20) & 0x7FFFFFF);
                                                unsigned int v380 = *(const llvm::APInt **)v427;
                                                if (!*(void *)v427) {
                                                  goto LABEL_866;
                                                }
                                                int v501 = *(const llvm::APInt **)v427;
                                                uint64_t v272 = *(void *)(v427 + 32);
                                                if (!v272) {
                                                  goto LABEL_866;
                                                }
                                              }
                                              else
                                              {
                                                if (v379 != 57) {
                                                  goto LABEL_866;
                                                }
                                                unsigned int v380 = *(const llvm::APInt **)(v68 - 64);
                                                if (!v380) {
                                                  goto LABEL_866;
                                                }
                                                int v501 = *(const llvm::APInt **)(v68 - 64);
                                                uint64_t v272 = *(void *)(v68 - 32);
                                                if (!v272) {
                                                  goto LABEL_866;
                                                }
                                              }
                                              if (*(unsigned char *)(v272 + 16) == 16)
                                              {
                                                uint64_t v428 = *(void *)(a1 + 24);
                                                LOWORD(v506) = 257;
                                                uint64_t v429 = (int32x2_t ****)sub_1CB844AF4(v428, v380, v69, (uint64_t)&v504);
                                                llvm::Value::takeName(v429, (llvm::Value *)v68);
                                                LOWORD(v506) = 257;
                                                uint64_t v153 = (const char **)&v504;
                                                char v154 = 29;
                                                uint64_t v152 = (llvm::Instruction *)v429;
                                                goto LABEL_852;
                                              }
                                            }
LABEL_866:
                                            v496 = 0;
                                            int v497 = 0;
                                            uint64_t v430 = *(void *)(v69 + 8);
                                            if (v430)
                                            {
                                              if (!*(void *)(v430 + 8))
                                              {
                                                *(void *)&long long v504 = &v497;
                                                *((void *)&v504 + 1) = &v501;
                                                *(void *)&long long v505 = &v500;
                                                if (sub_1CC189B48((void **)&v504, v68))
                                                {
                                                  int8x8_t v490 = &v496;
                                                  uint8x8_t v491 = &v499;
                                                  int v492 = (llvm **)&v498;
                                                  if (sub_1CC189B48(&v490, v69))
                                                  {
                                                    if (v497 == v496)
                                                    {
                                                      uint64_t v431 = *(void *)(a1 + 24);
                                                      LOWORD(v506) = 257;
                                                      int v432 = sub_1CB844AF4(v431, v501, (uint64_t)v499, (uint64_t)&v504);
                                                      uint64_t v433 = *(void *)(a1 + 24);
                                                      LOWORD(v506) = 257;
                                                      uint64_t v320 = sub_1CB844AF4(v433, v500, (uint64_t)v498, (uint64_t)&v504);
                                                      uint64_t v319 = v497;
                                                      LOWORD(v506) = 257;
                                                      AllOnesValue = (uint64_t *)v432;
                                                      return sub_1CC199EFC((uint64_t)v319, AllOnesValue, (uint64_t)v320, (const char **)&v504, 0, 0);
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                            goto LABEL_715;
                                          }
LABEL_2:
                                          uint64_t v12 = (llvm::Value *)v11;
                                          return (llvm::Value *)sub_1CC9D3C84(a1, (llvm::ValueAsMetadata *)v6, v12);
                                        }
                                        int v324 = *(unsigned __int8 *)(v68 + 16);
                                        if (v324 == 5)
                                        {
                                          if (*(_WORD *)(v68 + 18) != 29) {
                                            goto LABEL_666;
                                          }
                                          int v331 = (uint64_t *)(v68 - 32 * (*(_DWORD *)(v68 + 20) & 0x7FFFFFF));
                                          uint64_t v325 = *v331;
                                          if (!*v331) {
                                            goto LABEL_666;
                                          }
                                          uint64_t v322 = v331[4];
                                          if (!v322) {
                                            goto LABEL_666;
                                          }
                                        }
                                        else
                                        {
                                          if (v324 != 57) {
                                            goto LABEL_666;
                                          }
                                          uint64_t v325 = *(void *)(v68 - 64);
                                          if (!v325) {
                                            goto LABEL_666;
                                          }
                                          uint64_t v322 = *(void *)(v68 - 32);
                                          if (!v322) {
                                            goto LABEL_666;
                                          }
                                        }
                                        if (*(unsigned char *)(v325 + 16) != 81
                                          || (int v332 = sub_1CCA00728(a1, v325, v308, (llvm::AssumptionCache *)v6)) == 0)
                                        {
                                          if (*(unsigned char *)(v322 + 16) != 81) {
                                            goto LABEL_666;
                                          }
                                          uint64_t v333 = sub_1CCA00728(a1, v322, v308, (llvm::AssumptionCache *)v6);
                                          if (!v333) {
                                            goto LABEL_666;
                                          }
                                          int v328 = v333;
                                          uint64_t v329 = *(void *)(a1 + 24);
                                          LOWORD(v506) = 257;
                                          uint64_t v330 = v325;
LABEL_746:
                                          uint64_t v11 = (uint64_t)sub_1CB844AF4(v329, v328, v330, (uint64_t)&v504);
                                          goto LABEL_2;
                                        }
                                        goto LABEL_745;
                                      }
                                      char v349 = v501;
                                      *(void *)&long long v504 = v272;
                                      int v350 = *((unsigned __int8 *)v501 + 16);
                                      if (v350 == 5)
                                      {
                                        if (*((_WORD *)v501 + 9) != 30) {
                                          goto LABEL_630;
                                        }
                                        uint64_t v371 = *((_DWORD *)v501 + 5) & 0x7FFFFFF;
                                        std::string::size_type v372 = (void *)((char *)v501 - 32 * v371);
                                        if (v272 == *v372)
                                        {
                                          if (sub_1CBF68974((uint64_t)&v504 + 8, (llvm::Constant *)v372[4])) {
                                            goto LABEL_831;
                                          }
                                          uint64_t v374 = v504;
                                          uint64_t v373 = -(uint64_t)(*((_DWORD *)v349 + 5) & 0x7FFFFFF);
                                        }
                                        else
                                        {
                                          uint64_t v373 = -v371;
                                          uint64_t v374 = v272;
                                        }
                                        uint64_t v410 = (char *)v349 + 32 * v373;
                                        if (v374 != *((void *)v410 + 4)
                                          || !sub_1CBF68974((uint64_t)&v504 + 8, *(llvm::Constant **)v410))
                                        {
                                          goto LABEL_630;
                                        }
                                      }
                                      else
                                      {
                                        if (v350 != 58) {
                                          goto LABEL_630;
                                        }
                                        uint64_t v351 = v272;
                                        if (v272 == *((void *)v501 - 8))
                                        {
                                          if (sub_1CBF687D0((uint64_t)&v504 + 8, *((llvm::Constant **)v501 - 4))) {
                                            goto LABEL_831;
                                          }
                                          uint64_t v351 = v504;
                                        }
                                        if (v351 != *((void *)v349 - 4)
                                          || (sub_1CBF687D0((uint64_t)&v504 + 8, *((llvm::Constant **)v349 - 8)) & 1) == 0)
                                        {
                                          goto LABEL_630;
                                        }
                                      }
LABEL_831:
                                      uint64_t v298 = *(void *)(a1 + 24);
                                      uint64_t v296 = v500;
                                      if ((*((unsigned char *)v500 + 23) & 0x10) != 0)
                                      {
                                        uint64_t v411 = ***(void ***)v500;
                                        uint64_t v300 = *(void *)(v411 + 152);
                                        uint64_t v301 = *(unsigned int *)(v411 + 168);
                                        if (v301)
                                        {
                                          LODWORD(v302) = (v301 - 1) & ((v500 >> 4) ^ (v500 >> 9));
                                          uint64_t v303 = v300 + 16 * v302;
                                          int v412 = *(llvm::ConstantExpr **)v303;
                                          if (*(llvm::ConstantExpr **)v303 != v500)
                                          {
                                            int v413 = 1;
                                            while (v412 != (llvm::ConstantExpr *)-4096)
                                            {
                                              int v414 = v302 + v413++;
                                              uint64_t v302 = v414 & (v301 - 1);
                                              int v412 = *(llvm::ConstantExpr **)(v300 + 16 * v302);
                                              if (v412 == v500)
                                              {
LABEL_649:
                                                uint64_t v303 = v300 + 16 * v302;
                                                goto LABEL_850;
                                              }
                                            }
                                            goto LABEL_849;
                                          }
                                          goto LABEL_850;
                                        }
                                        goto LABEL_849;
                                      }
                                      goto LABEL_854;
                                    }
                                    if (v152 == *(llvm::Instruction **)(v272 - 64))
                                    {
                                      if (sub_1CBF687D0((uint64_t)&v504 + 8, *(llvm::Constant **)(v272 - 32))) {
                                        goto LABEL_627;
                                      }
                                      uint64_t v152 = (llvm::Instruction *)v504;
                                    }
                                    if (v152 == *(llvm::Instruction **)(v272 - 32)
                                      && (sub_1CBF687D0((uint64_t)&v504 + 8, *(llvm::Constant **)(v272 - 64)) & 1) != 0)
                                    {
                                      goto LABEL_627;
                                    }
                                  }
                                  int v275 = *(unsigned __int8 *)(v272 + 16);
                                  Splat = (unsigned __int8 *)v500;
                                  goto LABEL_612;
                                }
                              }
                            }
                            else
                            {
                              if (v275 != 56) {
                                goto LABEL_590;
                              }
                              uint64_t v276 = *(unsigned __int8 **)(v272 - 64);
                              if (v152 != (llvm::Instruction *)v276 || Splat != *(unsigned __int8 **)(v272 - 32))
                              {
                                if (Splat != v276) {
                                  goto LABEL_590;
                                }
                                BOOL v277 = *(llvm::Instruction **)(v272 - 32);
                                goto LABEL_589;
                              }
                            }
                          }
                          LOWORD(v506) = 257;
                          uint64_t v153 = (const char **)&v504;
                          goto LABEL_603;
                        }
                        if (*(_WORD *)(v68 + 18) != 28) {
                          goto LABEL_552;
                        }
                        unsigned int v263 = (void *)(v68 - 32 * (*(_DWORD *)(v68 + 20) & 0x7FFFFFF));
                        uint64_t v264 = *v263;
                        int v265 = *(unsigned __int8 *)(*v263 + 16);
                        if (v265 == 5)
                        {
                          if (*(_WORD *)(v264 + 18) != 29) {
                            goto LABEL_552;
                          }
                          uint64_t v268 = (void *)(v264 - 32 * (*(_DWORD *)(v264 + 20) & 0x7FFFFFF));
                          if (v69 != *v268) {
                            goto LABEL_552;
                          }
                          unint64_t v262 = (unsigned __int8 *)v268[4];
                          if (!v262) {
                            goto LABEL_552;
                          }
                        }
                        else
                        {
                          if (v265 != 57) {
                            goto LABEL_552;
                          }
                          if (v69 != *(void *)(v264 - 64)) {
                            goto LABEL_552;
                          }
                          unint64_t v262 = *(unsigned __int8 **)(v264 - 32);
                          if (!v262) {
                            goto LABEL_552;
                          }
                        }
                        int v499 = (const llvm::APInt *)v262;
                        unsigned int v267 = (const llvm::APInt *)v263[4];
                        if (!v267) {
                          goto LABEL_552;
                        }
LABEL_551:
                        int v501 = v267;
                        uint64_t v269 = *(void *)(a1 + 24);
                        LOWORD(v506) = 257;
                        Splat = (unsigned __int8 *)sub_1CBF52474(v269, v267, (uint64_t)v262, (uint64_t)&v504);
                        __int16 v494 = 257;
                        uint64_t v153 = (const char **)&v490;
LABEL_574:
                        char v154 = 29;
                        uint64_t v152 = (llvm::Instruction *)v69;
                        return llvm::BinaryOperator::Create(v154, v152, (uint64_t)Splat, v153, 0);
                      }
                      int v495 = 0;
                      unsigned int v129 = *((_DWORD *)v496 + 2);
                      unsigned int v489 = v129;
                      if (v129 > 0x40) {
                        operator new[]();
                      }
                      uint64_t v130 = ~*(void *)v496;
                      if (v129) {
                        unint64_t v131 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v129;
                      }
                      else {
                        unint64_t v131 = 0;
                      }
                      uint64_t v132 = (const void *)(v131 & v130);
                      unint64_t v488 = v131 & v130;
                      unsigned int v489 = 0;
                      uint64_t v158 = *((unsigned int *)v497 + 2);
                      if (v158 > 0x40) {
                        BOOL v159 = memcmp(*(const void **)v497, v132, ((unint64_t)(v158 + 63) >> 3) & 0x3FFFFFF8) == 0;
                      }
                      else {
                        BOOL v159 = *(void *)v497 == (void)v132;
                      }
                      if (!v159)
                      {
LABEL_396:
                        if (*((_DWORD *)v497 + 2) >= 0x41u) {
                          operator new[]();
                        }
                        if ((*(void *)v496 & *(void *)v497) != 0) {
                          goto LABEL_505;
                        }
                        uint8x8_t v213 = v500;
                        uint64_t v212 = v501;
                        int v214 = *((unsigned __int8 *)v501 + 16);
                        if (v214 == 5)
                        {
                          if (*((_WORD *)v501 + 9) != 29) {
                            goto LABEL_437;
                          }
                          int v215 = (llvm **)((char *)v501 - 32 * (*((_DWORD *)v501 + 5) & 0x7FFFFFF));
                          int v216 = *v215;
                          if (!*v215)
                          {
                            uint64_t v217 = v215[4];
                            goto LABEL_420;
                          }
                          int v495 = (llvm::ConstantInt ***)*v215;
                          uint64_t v217 = v215[4];
                        }
                        else
                        {
                          if (v214 != 57) {
                            goto LABEL_437;
                          }
                          int v215 = (llvm **)((char *)v501 - 64);
                          int v216 = (llvm *)*((void *)v501 - 8);
                          if (!v216)
                          {
                            uint64_t v217 = (llvm::ConstantExpr *)*((void *)v501 - 4);
                            goto LABEL_420;
                          }
                          int v495 = (llvm::ConstantInt ***)*((void *)v501 - 8);
                          uint64_t v217 = (llvm::ConstantExpr *)*((void *)v501 - 4);
                        }
                        if (v500 == v217)
                        {
LABEL_422:
                          unsigned int v224 = *((_DWORD *)v497 + 2);
                          unsigned int v487 = v224;
                          if (v224 > 0x40) {
                            operator new[]();
                          }
                          unint64_t v225 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v224;
                          if (!v224) {
                            unint64_t v225 = 0;
                          }
                          unint64_t v486 = v225 & ~*(void *)v497;
                          DWORD2(v504) = v224;
                          *(void *)&long long v504 = v486;
                          unsigned int v487 = 0;
                          BOOL IsZero = llvm::MaskedValueIsZero(v216, (const llvm::Value *)&v504, *(const llvm::APInt **)(a1 + 80), 0, *(const llvm::DataLayout **)(a1 + 56), (llvm::AssumptionCache *)v6, *(const llvm::Instruction **)(a1 + 72), (const llvm::DominatorTree *)1, v473);
                          BOOL v228 = IsZero;
                          if (DWORD2(v504) >= 0x41 && (void)v504) {
                            MEMORY[0x1D25D9CB0](v504, 0x1000C8000313F17);
                          }
                          if (v487 >= 0x41 && v486) {
                            MEMORY[0x1D25D9CB0](v486, 0x1000C8000313F17);
                          }
                          if (v228)
                          {
                            if (*((_DWORD *)v497 + 2) > 0x40u) {
                              operator new[]();
                            }
                            uint64_t v229 = *(void *)v496 | *(void *)v497;
                            DWORD2(v504) = *((_DWORD *)v497 + 2);
                            *(void *)&long long v504 = v229;
                            uint64_t v244 = (llvm::Value *)llvm::ConstantInt::get(*(llvm::ConstantInt **)v476, (llvm::LLVMContext *)&v504, v227);
                            int v245 = v244;
                            if ((*((_DWORD *)v476 + 2) & 0xFE) == 0x12) {
                              int v245 = llvm::ConstantVector::getSplat((llvm::Type *)(*((unsigned int *)v476 + 8) | ((unint64_t)(*((_DWORD *)v476 + 2) == 19) << 32)), (uint64_t)v244);
                            }
                            if (DWORD2(v504) >= 0x41 && (void)v504) {
                              MEMORY[0x1D25D9CB0](v504, 0x1000C8000313F17);
                            }
                            uint64_t v152 = v501;
LABEL_494:
                            LOWORD(v506) = 257;
                            uint64_t v153 = (const char **)&v504;
                            char v154 = 28;
                            Splat = (unsigned __int8 *)v245;
                            return llvm::BinaryOperator::Create(v154, v152, (uint64_t)Splat, v153, 0);
                          }
                          uint8x8_t v213 = v500;
                          uint64_t v212 = v501;
LABEL_437:
                          int v230 = *((unsigned __int8 *)v213 + 16);
                          if (v230 == 5)
                          {
                            if (*((_WORD *)v213 + 9) != 29) {
                              goto LABEL_465;
                            }
                            uint64_t v231 = (char *)v213 - 32 * (*((_DWORD *)v213 + 5) & 0x7FFFFFF);
                            uint64_t v232 = *(llvm **)v231;
                            if (!*(void *)v231)
                            {
                              uint64_t v233 = (const llvm::APInt *)*((void *)v231 + 4);
                              goto LABEL_448;
                            }
                            int v495 = *(llvm::ConstantInt ****)v231;
                            uint64_t v233 = (const llvm::APInt *)*((void *)v231 + 4);
                          }
                          else
                          {
                            if (v230 != 57) {
                              goto LABEL_465;
                            }
                            uint64_t v231 = (char *)v213 - 64;
                            uint64_t v232 = (llvm *)*((void *)v213 - 8);
                            if (!v232)
                            {
                              uint64_t v233 = (const llvm::APInt *)*((void *)v213 - 4);
                              goto LABEL_448;
                            }
                            int v495 = (llvm::ConstantInt ***)*((void *)v213 - 8);
                            uint64_t v233 = (const llvm::APInt *)*((void *)v213 - 4);
                          }
                          if (v212 == v233)
                          {
LABEL_450:
                            unsigned int v234 = *((_DWORD *)v496 + 2);
                            unsigned int v485 = v234;
                            if (v234 > 0x40) {
                              operator new[]();
                            }
                            unint64_t v235 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v234;
                            if (!v234) {
                              unint64_t v235 = 0;
                            }
                            unint64_t v484 = v235 & ~*(void *)v496;
                            DWORD2(v504) = v234;
                            *(void *)&long long v504 = v484;
                            unsigned int v485 = 0;
                            BOOL v236 = llvm::MaskedValueIsZero(v232, (const llvm::Value *)&v504, *(const llvm::APInt **)(a1 + 80), 0, *(const llvm::DataLayout **)(a1 + 56), (llvm::AssumptionCache *)v6, *(const llvm::Instruction **)(a1 + 72), (const llvm::DominatorTree *)1, v473);
                            BOOL v238 = v236;
                            if (DWORD2(v504) >= 0x41 && (void)v504) {
                              MEMORY[0x1D25D9CB0](v504, 0x1000C8000313F17);
                            }
                            if (v485 >= 0x41 && v484) {
                              MEMORY[0x1D25D9CB0](v484, 0x1000C8000313F17);
                            }
                            if (v238)
                            {
                              if (*((_DWORD *)v497 + 2) > 0x40u) {
                                operator new[]();
                              }
                              uint64_t v239 = *(void *)v496 | *(void *)v497;
                              DWORD2(v504) = *((_DWORD *)v497 + 2);
                              *(void *)&long long v504 = v239;
                              uint64_t v246 = (llvm::Value *)llvm::ConstantInt::get(*(llvm::ConstantInt **)v476, (llvm::LLVMContext *)&v504, v237);
                              int v245 = v246;
                              if ((*((_DWORD *)v476 + 2) & 0xFE) == 0x12) {
                                int v245 = llvm::ConstantVector::getSplat((llvm::Type *)(*((unsigned int *)v476 + 8) | ((unint64_t)(*((_DWORD *)v476 + 2) == 19) << 32)), (uint64_t)v246);
                              }
                              if (DWORD2(v504) >= 0x41 && (void)v504) {
                                MEMORY[0x1D25D9CB0](v504, 0x1000C8000313F17);
                              }
                              uint64_t v152 = v500;
                              goto LABEL_494;
                            }
                            uint64_t v212 = v501;
LABEL_465:
                            char v482 = 0;
                            uint64_t v483 = 0;
                            *(void *)&long long v504 = &v495;
                            *((void *)&v504 + 1) = &v483;
                            *(void *)&long long v505 = 0;
                            int v240 = *((unsigned __int8 *)v212 + 16);
                            if (v240 == 5)
                            {
                              if (*((_WORD *)v212 + 9) != 29) {
                                goto LABEL_505;
                              }
                              uint8x8_t v241 = (llvm::Constant **)((char *)v212 - 32 * (*((_DWORD *)v212 + 5) & 0x7FFFFFF));
                              if (!*v241) {
                                goto LABEL_505;
                              }
                              int v495 = (llvm::ConstantInt ***)*v241;
                              if ((sub_1CBF5295C((uint64_t)&v504 + 8, v241[4]) & 1) == 0) {
                                goto LABEL_505;
                              }
                            }
                            else
                            {
                              if (v240 != 57) {
                                goto LABEL_505;
                              }
                              if (!*((void *)v212 - 8)) {
                                goto LABEL_505;
                              }
                              int v495 = (llvm::ConstantInt ***)*((void *)v212 - 8);
                              if (!sub_1CBF528D8((uint64_t)&v504 + 8, *((unsigned __int8 **)v212 - 4))) {
                                goto LABEL_505;
                              }
                            }
                            int8x8_t v490 = (llvm::LLVMContext **)v495;
                            uint8x8_t v491 = &v482;
                            int v492 = 0;
                            int v242 = *((unsigned __int8 *)v500 + 16);
                            if (v242 == 5)
                            {
                              if (*((_WORD *)v500 + 9) != 29) {
                                goto LABEL_505;
                              }
                              uint64_t v247 = (llvm::ConstantInt ****)((char *)v500 - 32 * (*((_DWORD *)v500 + 5) & 0x7FFFFFF));
                              if (v495 != *v247
                                || !sub_1CBF5295C((uint64_t)&v491, (llvm::Constant *)v247[4]))
                              {
                                goto LABEL_505;
                              }
                            }
                            else if (v242 != 57 {
                                   || v495 != *((llvm::ConstantInt ****)v500 - 8)
                            }
                                   || (sub_1CBF528D8((uint64_t)&v491, *((unsigned __int8 **)v500 - 4)) & 1) == 0)
                            {
                              goto LABEL_505;
                            }
                            unsigned int v248 = *((_DWORD *)v497 + 2);
                            unsigned int v481 = v248;
                            if (v248 > 0x40) {
                              operator new[]();
                            }
                            uint64_t v249 = ~*(void *)v497;
                            if (v248) {
                              unint64_t v250 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v248;
                            }
                            else {
                              unint64_t v250 = 0;
                            }
                            unint64_t v480 = v250 & v249;
                            unsigned int v481 = 0;
                            if ((*v483 & v250 & v249) == 0)
                            {
                              unsigned int v459 = *((_DWORD *)v496 + 2);
                              unsigned int v479 = v459;
                              if (v459 > 0x40) {
                                operator new[]();
                              }
                              uint64_t v460 = ~*(void *)v496;
                              unint64_t v461 = v459 ? 0xFFFFFFFFFFFFFFFFLL >> -(char)v459 : 0;
                              unint64_t v478 = v461 & v460;
                              unsigned int v479 = 0;
                              if ((*(void *)v482 & v461 & v460) == 0)
                              {
                                uint64_t v462 = *(void *)(a1 + 24);
                                uint64_t v463 = v495;
                                if (*((_DWORD *)v483 + 2) > 0x40u) {
                                  operator new[]();
                                }
                                unint64_t v464 = (llvm::LLVMContext **)(*(void *)v482 | *v483);
                                LODWORD(v491) = *((_DWORD *)v483 + 2);
                                int8x8_t v490 = v464;
                                *(void *)&long long v504 = "bitfield";
                                LOWORD(v506) = 259;
                                char v465 = (llvm::LLVMContext *)*v495;
                                long long v466 = (llvm::Value *)llvm::ConstantInt::get(**v495, (llvm::LLVMContext *)&v490, v243);
                                unint64_t v467 = v466;
                                if ((*((_DWORD *)v465 + 2) & 0xFE) == 0x12) {
                                  unint64_t v467 = llvm::ConstantVector::getSplat((llvm::Type *)(*((unsigned int *)v465 + 8) | ((unint64_t)(*((_DWORD *)v465 + 2) == 19) << 32)), (uint64_t)v466);
                                }
                                int v469 = sub_1CB844AF4(v462, v463, (uint64_t)v467, (uint64_t)&v504);
                                if (v491 >= 0x41 && v490) {
                                  MEMORY[0x1D25D9CB0](v490, 0x1000C8000313F17);
                                }
                                if (*((_DWORD *)v497 + 2) > 0x40u) {
                                  operator new[]();
                                }
                                uint64_t v470 = *(void *)v496 | *(void *)v497;
                                DWORD2(v504) = *((_DWORD *)v497 + 2);
                                *(void *)&long long v504 = v470;
                                uint64_t v471 = (llvm::Value *)llvm::ConstantInt::get(*(llvm::ConstantInt **)v476, (llvm::LLVMContext *)&v504, v468);
                                uint64_t v472 = v471;
                                if ((*((_DWORD *)v476 + 2) & 0xFE) == 0x12) {
                                  uint64_t v472 = llvm::ConstantVector::getSplat((llvm::Type *)(*((unsigned int *)v476 + 8) | ((unint64_t)(*((_DWORD *)v476 + 2) == 19) << 32)), (uint64_t)v471);
                                }
                                if (DWORD2(v504) >= 0x41 && (void)v504) {
                                  MEMORY[0x1D25D9CB0](v504, 0x1000C8000313F17);
                                }
                                LOWORD(v506) = 257;
                                uint64_t v153 = (const char **)&v504;
                                char v154 = 28;
                                uint64_t v152 = v469;
                                Splat = (unsigned __int8 *)v472;
                                return llvm::BinaryOperator::Create(v154, v152, (uint64_t)Splat, v153, 0);
                              }
                            }
                            goto LABEL_505;
                          }
LABEL_448:
                          if (!v233) {
                            goto LABEL_465;
                          }
                          int v495 = (llvm::ConstantInt ***)v233;
                          uint64_t v232 = v233;
                          if (v212 != *(const llvm::APInt **)v231) {
                            goto LABEL_465;
                          }
                          goto LABEL_450;
                        }
LABEL_420:
                        if (!v217) {
                          goto LABEL_437;
                        }
                        int v495 = (llvm::ConstantInt ***)v217;
                        int v216 = v217;
                        if (v500 != *v215) {
                          goto LABEL_437;
                        }
                        goto LABEL_422;
                      }
                      int v161 = *((unsigned __int8 *)v501 + 16);
                      if (v161 == 5)
                      {
                        if (*((_WORD *)v501 + 9) != 29) {
                          goto LABEL_352;
                        }
                        BOOL v162 = (llvm::ConstantInt ****)((char *)v501 - 32 * (*((_DWORD *)v501 + 5) & 0x7FFFFFF));
                        int v163 = *v162;
                        if (*v162)
                        {
                          int v495 = *v162;
                          uint64_t v164 = (llvm::ConstantExpr *)v162[4];
LABEL_335:
                          if (v500 == v164)
                          {
LABEL_366:
                            uint64_t v202 = *(void *)(a1 + 24);
                            LOWORD(v506) = 257;
                            uint64_t v203 = *v163;
                            uint64_t v204 = llvm::ConstantInt::get(**v163, v497, v128);
                            if ((v203[1] & 0xFE) == 0x12) {
                              uint64_t v204 = llvm::ConstantVector::getSplat((llvm::Type *)(*((unsigned int *)v203 + 8) | ((unint64_t)(*((_DWORD *)v203 + 2) == 19) << 32)), (uint64_t)v204);
                            }
                            uint64_t v152 = sub_1CBF52474(v202, v163, (uint64_t)v204, (uint64_t)&v504);
                            Splat = (unsigned __int8 *)v500;
LABEL_379:
                            __int16 v494 = 257;
                            uint64_t v153 = (const char **)&v490;
LABEL_603:
                            char v154 = 29;
                            return llvm::BinaryOperator::Create(v154, v152, (uint64_t)Splat, v153, 0);
                          }
                          goto LABEL_350;
                        }
                        uint64_t v164 = (llvm::ConstantExpr *)v162[4];
                      }
                      else
                      {
                        if (v161 != 57) {
                          goto LABEL_352;
                        }
                        BOOL v162 = (llvm::ConstantInt ****)((char *)v501 - 64);
                        int v163 = (llvm::ConstantInt ***)*((void *)v501 - 8);
                        if (v163)
                        {
                          int v495 = (llvm::ConstantInt ***)*((void *)v501 - 8);
                          uint64_t v164 = (llvm::ConstantExpr *)*((void *)v501 - 4);
                          goto LABEL_335;
                        }
                        uint64_t v164 = (llvm::ConstantExpr *)*((void *)v501 - 4);
                      }
LABEL_350:
                      if (v164)
                      {
                        int v495 = (llvm::ConstantInt ***)v164;
                        int v163 = (llvm::ConstantInt ***)v164;
                        if (v500 == (llvm::ConstantExpr *)*v162) {
                          goto LABEL_366;
                        }
                      }
LABEL_352:
                      int v194 = *((unsigned __int8 *)v500 + 16);
                      if (v194 == 5)
                      {
                        if (*((_WORD *)v500 + 9) != 29) {
                          goto LABEL_362;
                        }
                        uint64_t v197 = (llvm::ConstantInt ****)((char *)v500 - 32 * (*((_DWORD *)v500 + 5) & 0x7FFFFFF));
                        char v196 = *v197;
                        uint64_t v198 = (const llvm::APInt *)v197[4];
                        if (v501 == (const llvm::APInt *)v196)
                        {
                          char v196 = (llvm::ConstantInt ***)v198;
                          if (!v198) {
                            goto LABEL_362;
                          }
                        }
                        else if (!v196 || v501 != v198)
                        {
                          goto LABEL_362;
                        }
                      }
                      else
                      {
                        if (v194 != 57) {
                          goto LABEL_362;
                        }
                        uint64_t v195 = (const llvm::APInt *)*((void *)v500 - 8);
                        char v196 = (llvm::ConstantInt ***)*((void *)v500 - 4);
                        if (v501 != v195)
                        {
                          if (v195 && v501 == (const llvm::APInt *)v196)
                          {
                            int v495 = (llvm::ConstantInt ***)*((void *)v500 - 8);
                            char v196 = (llvm::ConstantInt ***)v195;
LABEL_376:
                            uint64_t v205 = *(void *)(a1 + 24);
                            LOWORD(v506) = 257;
                            int v206 = *v196;
                            int v207 = llvm::ConstantInt::get(**v196, v496, v128);
                            if ((v206[1] & 0xFE) == 0x12) {
                              int v207 = llvm::ConstantVector::getSplat((llvm::Type *)(*((unsigned int *)v206 + 8) | ((unint64_t)(*((_DWORD *)v206 + 2) == 19) << 32)), (uint64_t)v207);
                            }
                            uint64_t v152 = sub_1CBF52474(v205, v196, (uint64_t)v207, (uint64_t)&v504);
                            Splat = (unsigned __int8 *)v501;
                            goto LABEL_379;
                          }
LABEL_362:
                          if (v161 == 5)
                          {
                            if (*((_WORD *)v501 + 9) != 30) {
                              goto LABEL_386;
                            }
                            uint64_t v199 = (llvm::ConstantInt ****)((char *)v501 - 32 * (*((_DWORD *)v501 + 5) & 0x7FFFFFF));
                            uint64_t v200 = *v199;
                            if (*v199)
                            {
                              int v495 = *v199;
                              uint64_t v201 = (llvm::ConstantExpr *)v199[4];
LABEL_372:
                              if (v500 == v201)
                              {
LABEL_409:
                                uint64_t v218 = *(void *)(a1 + 24);
                                LOWORD(v506) = 257;
                                uint64_t v219 = *v200;
                                uint64_t v220 = llvm::ConstantInt::get(**v200, v497, v128);
                                if ((v219[1] & 0xFE) == 0x12) {
                                  uint64_t v220 = llvm::ConstantVector::getSplat((llvm::Type *)(*((unsigned int *)v219 + 8) | ((unint64_t)(*((_DWORD *)v219 + 2) == 19) << 32)), (uint64_t)v220);
                                }
                                uint64_t v152 = sub_1CBF52474(v218, v200, (uint64_t)v220, (uint64_t)&v504);
                                Splat = (unsigned __int8 *)v500;
LABEL_418:
                                __int16 v494 = 257;
                                uint64_t v153 = (const char **)&v490;
                                char v154 = 30;
                                return llvm::BinaryOperator::Create(v154, v152, (uint64_t)Splat, v153, 0);
                              }
                              goto LABEL_384;
                            }
                            uint64_t v201 = (llvm::ConstantExpr *)v199[4];
                          }
                          else
                          {
                            if (v161 != 58) {
                              goto LABEL_386;
                            }
                            uint64_t v199 = (llvm::ConstantInt ****)((char *)v501 - 64);
                            uint64_t v200 = (llvm::ConstantInt ***)*((void *)v501 - 8);
                            if (v200)
                            {
                              int v495 = (llvm::ConstantInt ***)*((void *)v501 - 8);
                              uint64_t v201 = (llvm::ConstantExpr *)*((void *)v501 - 4);
                              goto LABEL_372;
                            }
                            uint64_t v201 = (llvm::ConstantExpr *)*((void *)v501 - 4);
                          }
LABEL_384:
                          if (v201)
                          {
                            int v495 = (llvm::ConstantInt ***)v201;
                            uint64_t v200 = (llvm::ConstantInt ***)v201;
                            if (v500 == (llvm::ConstantExpr *)*v199) {
                              goto LABEL_409;
                            }
                          }
LABEL_386:
                          if (v194 == 5)
                          {
                            if (*((_WORD *)v500 + 9) != 30) {
                              goto LABEL_396;
                            }
                            uint64_t v210 = (llvm::ConstantInt ****)((char *)v500 - 32 * (*((_DWORD *)v500 + 5) & 0x7FFFFFF));
                            uint64_t v209 = *v210;
                            uint64_t v211 = (const llvm::APInt *)v210[4];
                            if (v501 == (const llvm::APInt *)v209)
                            {
                              uint64_t v209 = (llvm::ConstantInt ***)v211;
                              if (!v211) {
                                goto LABEL_396;
                              }
                            }
                            else if (!v209 || v501 != v211)
                            {
                              goto LABEL_396;
                            }
                          }
                          else
                          {
                            if (v194 != 58) {
                              goto LABEL_396;
                            }
                            int v208 = (const llvm::APInt *)*((void *)v500 - 8);
                            uint64_t v209 = (llvm::ConstantInt ***)*((void *)v500 - 4);
                            if (v501 != v208)
                            {
                              if (v208 && v501 == (const llvm::APInt *)v209)
                              {
                                int v495 = (llvm::ConstantInt ***)*((void *)v500 - 8);
                                uint64_t v209 = (llvm::ConstantInt ***)v208;
LABEL_415:
                                uint64_t v221 = *(void *)(a1 + 24);
                                LOWORD(v506) = 257;
                                uint64_t v222 = *v209;
                                uint64_t v223 = llvm::ConstantInt::get(**v209, v496, v128);
                                if ((v222[1] & 0xFE) == 0x12) {
                                  uint64_t v223 = llvm::ConstantVector::getSplat((llvm::Type *)(*((unsigned int *)v222 + 8) | ((unint64_t)(*((_DWORD *)v222 + 2) == 19) << 32)), (uint64_t)v223);
                                }
                                uint64_t v152 = sub_1CBF52474(v221, v209, (uint64_t)v223, (uint64_t)&v504);
                                Splat = (unsigned __int8 *)v501;
                                goto LABEL_418;
                              }
                              goto LABEL_396;
                            }
                            if (!v209) {
                              goto LABEL_396;
                            }
                          }
                          int v495 = v209;
                          goto LABEL_415;
                        }
                        if (!v196) {
                          goto LABEL_362;
                        }
                      }
                      int v495 = v196;
                      goto LABEL_376;
                    }
                    int v137 = *(unsigned __int8 *)(v109 + 16);
                    if (v137 == 5)
                    {
                      if (*(_WORD *)(v109 + 18) != 17) {
                        goto LABEL_192;
                      }
                      __int16 v147 = (llvm::ConstantExpr ***)(v109 - 32 * (*(_DWORD *)(v109 + 20) & 0x7FFFFFF));
                      uint64_t v138 = *v147;
                      if (!*v147) {
                        goto LABEL_192;
                      }
                      int v508 = *v147;
                      __int16 v139 = (llvm *)v147[4];
                      if (!v139) {
                        goto LABEL_192;
                      }
                    }
                    else
                    {
                      if (v137 != 45) {
                        goto LABEL_192;
                      }
                      uint64_t v138 = *(llvm::ConstantExpr ***)(v109 - 64);
                      if (!v138) {
                        goto LABEL_192;
                      }
                      int v508 = *(llvm::ConstantExpr ***)(v109 - 64);
                      __int16 v139 = *(llvm **)(v109 - 32);
                      if (!v139) {
                        goto LABEL_192;
                      }
                    }
                    int v503 = v139;
                    if (v138 == (llvm::ConstantExpr **)v112[4]) {
                      goto LABEL_289;
                    }
                    goto LABEL_192;
                  }
                  if (v97 != 5 || *(_WORD *)(v6 + 18) != 29) {
                    goto LABEL_184;
                  }
                  uint64_t v104 = *(void *)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF));
                  uint64_t v105 = *(void *)(v104 + 8);
                  if (v105 && !*(void *)(v105 + 8))
                  {
                    int v133 = *(unsigned __int8 *)(v104 + 16);
                    if (v133 == 5)
                    {
                      if (*(_WORD *)(v104 + 18) != 30) {
                        goto LABEL_182;
                      }
                      if (!*(void *)(v104 - 32 * (*(_DWORD *)(v104 + 20) & 0x7FFFFFF))) {
                        goto LABEL_182;
                      }
                      int v508 = *(llvm::ConstantExpr ***)(v104 - 32 * (*(_DWORD *)(v104 + 20) & 0x7FFFFFF));
                      if (!sub_1CBF5295C((uint64_t)&v504 + 8, *(llvm::Constant **)(v104 - 32 * (*(_DWORD *)(v104 + 20) & 0x7FFFFFF) + 32)))goto LABEL_182; {
                    }
                      }
                    else
                    {
                      if (v133 != 58) {
                        goto LABEL_182;
                      }
                      if (!*(void *)(v104 - 64)) {
                        goto LABEL_182;
                      }
                      int v508 = *(llvm::ConstantExpr ***)(v104 - 64);
                      if ((sub_1CBF528D8((uint64_t)&v504 + 8, *(unsigned __int8 **)(v104 - 32)) & 1) == 0) {
                        goto LABEL_182;
                      }
                    }
                    uint64_t v136 = *(void *)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF) + 32);
                    if (v136) {
                      goto LABEL_276;
                    }
                  }
LABEL_182:
                  uint64_t v106 = *(void *)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF) + 32);
                  uint64_t v107 = *(void *)(v106 + 8);
                  if (!v107 || *(void *)(v107 + 8)) {
                    goto LABEL_184;
                  }
                  int v134 = *(unsigned __int8 *)(v106 + 16);
                  if (v134 == 5)
                  {
                    if (*(_WORD *)(v106 + 18) != 30) {
                      goto LABEL_184;
                    }
                    uint64_t v143 = *(void *)(v106 - 32 * (*(_DWORD *)(v106 + 20) & 0x7FFFFFF));
                    if (!v143) {
                      goto LABEL_184;
                    }
                    *(void *)long long v504 = v143;
                    if (!sub_1CBF5295C((uint64_t)&v504 + 8, *(llvm::Constant **)(v106 - 32 * (*(_DWORD *)(v106 + 20) & 0x7FFFFFF) + 32)))goto LABEL_184; {
                  }
                    }
                  else
                  {
                    if (v134 != 58) {
                      goto LABEL_184;
                    }
                    uint64_t v135 = *(void *)(v106 - 64);
                    if (!v135) {
                      goto LABEL_184;
                    }
                    *(void *)long long v504 = v135;
                    if ((sub_1CBF528D8((uint64_t)&v504 + 8, *(unsigned __int8 **)(v106 - 32)) & 1) == 0) {
                      goto LABEL_184;
                    }
                  }
                  uint64_t v136 = *(void *)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF));
                  if (!v136) {
                    goto LABEL_184;
                  }
                  goto LABEL_276;
                }
                LODWORD(v508) = 8;
                int v509 = 0;
                unint64_t v510 = (llvm::LLVMContext **)&v495;
                int v451 = sub_1CC045310((uint64_t)&v508, (uint64_t)v500);
                uint64_t v12 = 0;
                if (!v451) {
                  goto LABEL_957;
                }
                int v176 = (llvm::LLVMContext *)v495;
                uint64_t v177 = (unsigned __int8 *)v496;
                int v178 = 8;
              }
              uint64_t v12 = (llvm::Value *)sub_1CCA16080((uint64_t)&v504, v178, (uint64_t)v176, v177);
              goto LABEL_957;
            }
            uint64_t v179 = v500;
            uint64_t v180 = v501;
            if (v84 == 54)
            {
              uint64_t v181 = v502;
              int64_t v502 = v503;
              int v503 = v181;
              unsigned int v500 = v501;
              int v501 = v179;
              uint64_t v182 = v180;
            }
            else
            {
              uint64_t v182 = v500;
              uint64_t v179 = v501;
            }
            int8x8_t v490 = (llvm::LLVMContext **)a1;
            uint8x8_t v491 = (llvm::Value **)v6;
            int v492 = &v503;
            unint64_t v493 = &v502;
            uint64_t v183 = sub_1CCA150B4((uint64_t)&v490, (unsigned __int8 *)v179, (uint64_t)v182, PrimitiveSizeInBits);
            if (v183)
            {
              uint64_t v184 = (llvm::LLVMContext **)v183;
              int v185 = 148;
            }
            else
            {
              int v186 = sub_1CCA150B4((uint64_t)&v490, (unsigned __int8 *)v500, (uint64_t)v501, PrimitiveSizeInBits);
              if (!v186) {
                goto LABEL_151;
              }
              uint64_t v184 = (llvm::LLVMContext **)v186;
              int v185 = 149;
            }
            uint64_t v187 = *(uint64_t ***)(*(void *)(*(void *)(v6 + 40) + 56) + 40);
            *(void *)&long long v504 = *(void *)v6;
            uint64_t Declaration = llvm::Intrinsic::getDeclaration(v187, v185, (uint64_t)&v504, 1);
            uint64_t v189 = (uint64_t **)Declaration;
            if (Declaration) {
              uint64_t v190 = *(uint64_t ***)(Declaration + 24);
            }
            else {
              uint64_t v190 = 0;
            }
            int v508 = (llvm::ConstantExpr **)v503;
            int v509 = v502;
            unint64_t v510 = v184;
            LOWORD(v506) = 257;
            uint64_t v191 = (char *)operator new(0xD0uLL);
            uint64_t v192 = 0;
            unint64_t v14 = (unint64_t)(v191 + 128);
            *((_DWORD *)v191 + 37) = *((_DWORD *)v191 + 37) & 0x38000000 | 4;
            do
            {
              uint64_t v193 = &v191[v192];
              *(void *)uint64_t v193 = 0;
              *((void *)v193 + 1) = 0;
              *((void *)v193 + 2) = 0;
              *((void *)v193 + 3) = v14;
              v192 += 32;
            }
            while (v192 != 128);
            *((void *)v191 + 16) = *v190[2];
            *((void *)v191 + 17) = 0;
            v191[144] = 84;
            v191[145] = 0;
            *((_WORD *)v191 + 73) = 0;
            *((_DWORD *)v191 + 37) = *((_DWORD *)v191 + 37) & 0xC0000000 | 4;
            *(_OWORD *)(v191 + 152) = 0u;
            *(_OWORD *)(v191 + 168) = 0u;
            *((_DWORD *)v191 + 46) = 0;
            *((void *)v191 + 24) = 0;
            llvm::CallInst::init((uint64_t ***)v191 + 16, v190, v189, (uint64_t *)&v508, 3, 0, 0, (const char **)&v504);
            return (llvm::Value *)v14;
          }
        }
        else if (v38 == 58)
        {
          if (v508 == *(llvm::ConstantExpr ***)(v37 - 64))
          {
            if (sub_1CBF687D0((uint64_t)&v491, *(llvm::Constant **)(v37 - 32))) {
              goto LABEL_70;
            }
            uint64_t v34 = v490;
          }
          if (v34 != *(llvm::ConstantExpr ***)(v37 - 32)
            || (sub_1CBF687D0((uint64_t)&v491, *(llvm::Constant **)(v37 - 64)) & 1) == 0)
          {
            goto LABEL_71;
          }
          goto LABEL_70;
        }
LABEL_71:
        uint64_t v48 = *(void *)(v18 - 32);
        int v49 = *(unsigned __int8 *)(v48 + 16);
        if (v49 == 5)
        {
          if (*(_WORD *)(v48 + 18) != 30) {
            goto LABEL_111;
          }
          uint64_t v51 = *(_DWORD *)(v48 + 20) & 0x7FFFFFF;
          uint64_t v52 = v48 - 32 * v51;
          int v53 = v490;
          if (v490 == *(llvm::LLVMContext ***)v52)
          {
            if (sub_1CBF68974((uint64_t)&v491, *(llvm::Constant **)(v52 + 32))) {
              goto LABEL_108;
            }
            int v53 = v490;
            uint64_t v54 = -(uint64_t)(*(_DWORD *)(v48 + 20) & 0x7FFFFFF);
          }
          else
          {
            uint64_t v54 = -v51;
          }
          uint64_t v55 = v48 + 32 * v54;
          if (v53 != *(llvm::LLVMContext ***)(v55 + 32)
            || (sub_1CBF68974((uint64_t)&v491, *(llvm::Constant **)v55) & 1) == 0)
          {
            goto LABEL_111;
          }
          goto LABEL_108;
        }
        if (v49 != 58) {
          goto LABEL_111;
        }
        uint64_t v50 = v490;
        if (v490 != *(llvm::LLVMContext ***)(v48 - 64))
        {
LABEL_76:
          if (v50 != *(llvm::LLVMContext ***)(v48 - 32)
            || (sub_1CBF687D0((uint64_t)&v491, *(llvm::Constant **)(v48 - 64)) & 1) == 0)
          {
            goto LABEL_111;
          }
          goto LABEL_108;
        }
        if ((sub_1CBF687D0((uint64_t)&v491, *(llvm::Constant **)(v48 - 32)) & 1) == 0)
        {
          uint64_t v50 = v490;
          goto LABEL_76;
        }
LABEL_108:
        if (v492 != *v36) {
          goto LABEL_111;
        }
        goto LABEL_109;
      }
      if (*(_WORD *)(v18 + 18) != 28) {
        goto LABEL_111;
      }
      uint64_t v39 = *(void *)(v18 - 32 * (*(_DWORD *)(v18 + 20) & 0x7FFFFFF));
      int v40 = *(unsigned __int8 *)(v39 + 16);
      if (v40 != 5)
      {
        if (v40 != 58) {
          goto LABEL_92;
        }
        if (v508 != *(llvm::ConstantExpr ***)(v39 - 64))
        {
LABEL_57:
          if (v34 != *(llvm::ConstantExpr ***)(v39 - 32)
            || (sub_1CBF687D0((uint64_t)&v491, *(llvm::Constant **)(v39 - 64)) & 1) == 0)
          {
            goto LABEL_92;
          }
          goto LABEL_91;
        }
        if ((sub_1CBF687D0((uint64_t)&v491, *(llvm::Constant **)(v39 - 32)) & 1) == 0)
        {
          uint64_t v34 = v490;
          goto LABEL_57;
        }
LABEL_91:
        if (v492 == *(llvm ***)(v18 - 32 * (*(_DWORD *)(v18 + 20) & 0x7FFFFFF) + 32)) {
          goto LABEL_109;
        }
LABEL_92:
        uint64_t v57 = *(void *)(v18 - 32 * (*(_DWORD *)(v18 + 20) & 0x7FFFFFF) + 32);
        int v58 = *(unsigned __int8 *)(v57 + 16);
        if (v58 != 5)
        {
          if (v58 != 58) {
            goto LABEL_111;
          }
          int64_t v59 = v490;
          if (v490 != *(llvm::LLVMContext ***)(v57 - 64))
          {
LABEL_97:
            if (v59 != *(llvm::LLVMContext ***)(v57 - 32)
              || (sub_1CBF687D0((uint64_t)&v491, *(llvm::Constant **)(v57 - 64)) & 1) == 0)
            {
              goto LABEL_111;
            }
            goto LABEL_107;
          }
          if ((sub_1CBF687D0((uint64_t)&v491, *(llvm::Constant **)(v57 - 32)) & 1) == 0)
          {
            int64_t v59 = v490;
            goto LABEL_97;
          }
LABEL_107:
          int v36 = (llvm ***)(v18 - 32 * (*(_DWORD *)(v18 + 20) & 0x7FFFFFF));
          goto LABEL_108;
        }
        if (*(_WORD *)(v57 + 18) != 30) {
          goto LABEL_111;
        }
        uint64_t v60 = *(_DWORD *)(v57 + 20) & 0x7FFFFFF;
        uint64_t v61 = v57 - 32 * v60;
        int v62 = v490;
        if (v490 == *(llvm::LLVMContext ***)v61)
        {
          if (sub_1CBF68974((uint64_t)&v491, *(llvm::Constant **)(v61 + 32))) {
            goto LABEL_107;
          }
          int v62 = v490;
          uint64_t v63 = -(uint64_t)(*(_DWORD *)(v57 + 20) & 0x7FFFFFF);
        }
        else
        {
          uint64_t v63 = -v60;
        }
        uint64_t v64 = v57 + 32 * v63;
        if (v62 != *(llvm::LLVMContext ***)(v64 + 32)
          || !sub_1CBF68974((uint64_t)&v491, *(llvm::Constant **)v64))
        {
          goto LABEL_111;
        }
        goto LABEL_107;
      }
      if (*(_WORD *)(v39 + 18) != 30) {
        goto LABEL_92;
      }
      uint64_t v44 = *(_DWORD *)(v39 + 20) & 0x7FFFFFF;
      uint64_t v45 = v39 - 32 * v44;
      if (v508 == *(llvm::ConstantExpr ***)v45)
      {
        if (sub_1CBF68974((uint64_t)&v491, *(llvm::Constant **)(v45 + 32))) {
          goto LABEL_91;
        }
        uint64_t v34 = v490;
        uint64_t v46 = -(uint64_t)(*(_DWORD *)(v39 + 20) & 0x7FFFFFF);
      }
      else
      {
        uint64_t v46 = -v44;
      }
      uint64_t v56 = v39 + 32 * v46;
      if (v34 != *(llvm::ConstantExpr ***)(v56 + 32)
        || !sub_1CBF68974((uint64_t)&v491, *(llvm::Constant **)v56))
      {
        goto LABEL_92;
      }
      goto LABEL_91;
    }
  }
  return (llvm::Value *)v14;
}

uint64_t sub_1CCA0BAEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  if (!v2) {
    return 1;
  }
  while (1)
  {
    uint64_t v4 = *(void *)(v2 + 24);
    if (v4 == a2) {
      goto LABEL_12;
    }
    int v5 = *(unsigned __int8 *)(v4 + 16);
    if (v5 == 85) {
      break;
    }
    if (v5 != 30)
    {
      if (v5 != 58) {
        return 0;
      }
      int v9 = sub_1CBF687D0((uint64_t)&v10, *(llvm::Constant **)(v4 - 32));
      if (!v9 && (sub_1CBF687D0((uint64_t)&v10, *(llvm::Constant **)(v4 - 64)) & 1) == 0) {
        return 0;
      }
    }
LABEL_12:
    uint64_t v2 = *(void *)(v2 + 8);
    if (!v2) {
      return 1;
    }
  }
  int v6 = *(_DWORD *)(v4 + 20);
  if ((v6 & 0x40000000) != 0) {
    uint64_t v7 = *(void *)(v4 - 8);
  }
  else {
    uint64_t v7 = v4 - 32 * (v6 & 0x7FFFFFF);
  }
  if (((v2 - v7) & 0x1FFFFFFFE0) == 0
    && !sub_1CCA16428((uint64_t)v12, *(unsigned __int8 **)(v2 + 24))
    && !sub_1CCA16538((uint64_t)v11, (unsigned __int8 *)v4))
  {
    goto LABEL_12;
  }
  return 0;
}

llvm::Value *sub_1CCA0BBD0(uint64_t a1, llvm **a2, uint64_t a3, uint64_t a4, const llvm::DataLayout *a5, llvm::DSOLocalEquivalent **a6)
{
  int v9 = (uint64_t *)(a2 - 8);
  uint64_t v8 = *(a2 - 8);
  char v10 = *(a2 - 4);
  long long v11 = *(_OWORD *)(a1 + 120);
  long long v12 = *(_OWORD *)(a1 + 104);
  long long v988 = *(_OWORD *)(a1 + 88);
  long long v989 = v12;
  v991 = (llvm::Type **)*((void *)&v11 + 1);
  v990 = a2;
  uint64_t v13 = (uint64_t)sub_1CC02EA0C(v8, v10, (uint64_t)&v988, 3, a5, a6);
  if (v13) {
    goto LABEL_2;
  }
  if (sub_1CC9D1CF4(a1, (llvm::Instruction *)a2)) {
    return (llvm::Value *)a2;
  }
  uint64_t v16 = sub_1CC9D812C(a1, (unsigned __int8 *)a2);
  if (!v16)
  {
    uint64_t v16 = sub_1CC9D6B70(a1, (uint64_t)a2);
    if (!v16)
    {
      uint64_t v18 = *(void *)(a1 + 24);
      uint64_t v19 = (uint64_t)*(a2 - 8);
      uint64_t v20 = (uint64_t)*(a2 - 4);
      unint64_t __src = 0;
      v998 = 0;
      int v21 = *((unsigned __int8 *)a2 + 16);
      if (v21 != 5)
      {
        if (v21 != 58)
        {
LABEL_90:
          *(void *)&long long v988 = &__src;
          *((void *)&v988 + 1) = &v998;
          *((void *)&v989 + 1) = &__src;
          v991 = &v998;
          if (v21 == 58) {
            goto LABEL_91;
          }
          int v25 = *((unsigned __int16 *)a2 + 9);
LABEL_98:
          if (v21 != 5 || v25 != 30) {
            goto LABEL_181;
          }
          uint64_t v54 = a2[-4 * (*((_DWORD *)a2 + 5) & 0x7FFFFFF)];
          int v55 = *((unsigned __int8 *)v54 + 16);
          if (v55 == 5)
          {
            if (*((_WORD *)v54 + 9) != 29) {
              goto LABEL_181;
            }
            uint64_t v57 = *((_DWORD *)v54 + 5) & 0x7FFFFFF;
            if (*((void *)v54 - 4 * v57))
            {
              unint64_t __src = (void *)*((void *)v54 - 4 * v57);
              if (sub_1CBF686A0((void **)&v988 + 1, 30, ((void *)v54 - 4 * (*((_DWORD *)v54 + 5) & 0x7FFFFFF))[4])) {
                goto LABEL_113;
              }
              uint64_t v57 = *((_DWORD *)v54 + 5) & 0x7FFFFFF;
            }
            int v58 = (void *)((void *)v54 - 4 * v57)[4];
            if (!v58) {
              goto LABEL_181;
            }
            *(void *)long long v988 = v58;
            if (!sub_1CBF686A0((void **)&v988 + 1, 30, *((void *)v54 - 4 * (*((_DWORD *)v54 + 5) & 0x7FFFFFF))))goto LABEL_181; {
          }
            }
          else
          {
            if (v55 != 57) {
              goto LABEL_181;
            }
            if (!*((void *)v54 - 8)
              || (unint64_t __src = (void *)*((void *)v54 - 8),
                  (sub_1CBF686A0((void **)&v988 + 1, 30, *((void *)v54 - 4)) & 1) == 0))
            {
              uint64_t v56 = *((void *)v54 - 4);
              if (!v56) {
                goto LABEL_181;
              }
              *(void *)long long v988 = v56;
              if ((sub_1CBF686A0((void **)&v988 + 1, 30, *((void *)v54 - 8)) & 1) == 0) {
                goto LABEL_181;
              }
            }
          }
LABEL_113:
          int64_t v59 = a2[-4 * (*((_DWORD *)a2 + 5) & 0x7FFFFFF) + 4];
          int v60 = *((unsigned __int8 *)v59 + 16);
          if (v60 != 5)
          {
            if (v60 != 57) {
              goto LABEL_181;
            }
            uint64_t v61 = (llvm::Type **)((char *)v59 - 64);
            uint64_t v62 = *((void *)v59 - 8);
            int v63 = *(unsigned __int8 *)(v62 + 16);
            if (v63 == 5)
            {
              if (*(_WORD *)(v62 + 18) == 30)
              {
                uint64_t v68 = *(_DWORD *)(v62 + 20) & 0x7FFFFFF;
                uint64_t v69 = v62 - 32 * v68;
                uint64_t v70 = **((void **)&v989 + 1);
                if (**((void **)&v989 + 1) == *(void *)v69)
                {
                  if (sub_1CBF68974((uint64_t)&v990, *(llvm::Constant **)(v69 + 32))) {
                    goto LABEL_142;
                  }
                  uint64_t v70 = **((void **)&v989 + 1);
                  uint64_t v71 = -(uint64_t)(*(_DWORD *)(v62 + 20) & 0x7FFFFFF);
                }
                else
                {
                  uint64_t v71 = -v68;
                }
                uint64_t v76 = v62 + 32 * v71;
                if (v70 != *(void *)(v76 + 32)
                  || !sub_1CBF68974((uint64_t)&v990, *(llvm::Constant **)v76))
                {
                  goto LABEL_143;
                }
LABEL_142:
                if (*v991 == *((llvm::Type **)v59 - 4)) {
                  goto LABEL_93;
                }
              }
            }
            else if (v63 == 58)
            {
              uint64_t v64 = **((void **)&v989 + 1);
              if (**((void **)&v989 + 1) == *(void *)(v62 - 64))
              {
                if (sub_1CBF687D0((uint64_t)&v990, *(llvm::Constant **)(v62 - 32))) {
                  goto LABEL_142;
                }
                uint64_t v64 = **((void **)&v989 + 1);
              }
              if (v64 != *(void *)(v62 - 32)
                || (sub_1CBF687D0((uint64_t)&v990, *(llvm::Constant **)(v62 - 64)) & 1) == 0)
              {
                goto LABEL_143;
              }
              goto LABEL_142;
            }
LABEL_143:
            uint64_t v77 = *((void *)v59 - 4);
            int v78 = *(unsigned __int8 *)(v77 + 16);
            if (v78 == 5)
            {
              if (*(_WORD *)(v77 + 18) != 30) {
                goto LABEL_181;
              }
              uint64_t v80 = *(_DWORD *)(v77 + 20) & 0x7FFFFFF;
              uint64_t v81 = v77 - 32 * v80;
              uint64_t v82 = **((void **)&v989 + 1);
              if (**((void **)&v989 + 1) == *(void *)v81)
              {
                if (sub_1CBF68974((uint64_t)&v990, *(llvm::Constant **)(v81 + 32))) {
                  goto LABEL_180;
                }
                uint64_t v82 = **((void **)&v989 + 1);
                uint64_t v83 = -(uint64_t)(*(_DWORD *)(v77 + 20) & 0x7FFFFFF);
              }
              else
              {
                uint64_t v83 = -v80;
              }
              uint64_t v84 = v77 + 32 * v83;
              if (v82 != *(void *)(v84 + 32) || (sub_1CBF68974((uint64_t)&v990, *(llvm::Constant **)v84) & 1) == 0) {
                goto LABEL_181;
              }
              goto LABEL_180;
            }
            if (v78 != 58) {
              goto LABEL_181;
            }
            uint64_t v79 = **((void **)&v989 + 1);
            if (**((void **)&v989 + 1) != *(void *)(v77 - 64))
            {
LABEL_148:
              if (v79 != *(void *)(v77 - 32)
                || (sub_1CBF687D0((uint64_t)&v990, *(llvm::Constant **)(v77 - 64)) & 1) == 0)
              {
                goto LABEL_181;
              }
              goto LABEL_180;
            }
            if ((sub_1CBF687D0((uint64_t)&v990, *(llvm::Constant **)(v77 - 32)) & 1) == 0)
            {
              uint64_t v79 = **((void **)&v989 + 1);
              goto LABEL_148;
            }
LABEL_180:
            if (*v991 == *v61) {
              goto LABEL_93;
            }
LABEL_181:
            *(void *)&long long v988 = &__src;
            *((void *)&v988 + 1) = &v998;
            *((void *)&v989 + 1) = &__src;
            v991 = &v998;
            int v94 = *((unsigned __int8 *)a2 + 16);
            if (v94 == 58)
            {
              if (!sub_1CC04308C((void **)&v988, 28, *v9)) {
                goto LABEL_268;
              }
              uint64_t v95 = *(a2 - 4);
LABEL_200:
              int v101 = *((unsigned __int8 *)v95 + 16);
              if (v101 != 5)
              {
                if (v101 != 56) {
                  goto LABEL_268;
                }
                int v102 = (llvm::Type **)((char *)v95 - 64);
                uint64_t v103 = *((void *)v95 - 8);
                int v104 = *(unsigned __int8 *)(v103 + 16);
                if (v104 != 5)
                {
                  if (v104 != 58) {
                    goto LABEL_230;
                  }
                  uint64_t v105 = **((void **)&v989 + 1);
                  if (**((void **)&v989 + 1) != *(void *)(v103 - 64))
                  {
LABEL_207:
                    if (v105 != *(void *)(v103 - 32)
                      || (sub_1CBF687D0((uint64_t)&v990, *(llvm::Constant **)(v103 - 64)) & 1) == 0)
                    {
                      goto LABEL_230;
                    }
                    goto LABEL_229;
                  }
                  if ((sub_1CBF687D0((uint64_t)&v990, *(llvm::Constant **)(v103 - 32)) & 1) == 0)
                  {
                    uint64_t v105 = **((void **)&v989 + 1);
                    goto LABEL_207;
                  }
LABEL_229:
                  if (*v991 == *((llvm::Type **)v95 - 4)) {
                    goto LABEL_93;
                  }
LABEL_230:
                  uint64_t v118 = *((void *)v95 - 4);
                  int v119 = *(unsigned __int8 *)(v118 + 16);
                  if (v119 == 5)
                  {
                    if (*(_WORD *)(v118 + 18) != 30) {
                      goto LABEL_268;
                    }
                    uint64_t v121 = *(_DWORD *)(v118 + 20) & 0x7FFFFFF;
                    uint64_t v122 = v118 - 32 * v121;
                    uint64_t v123 = **((void **)&v989 + 1);
                    if (**((void **)&v989 + 1) == *(void *)v122)
                    {
                      if (sub_1CBF68974((uint64_t)&v990, *(llvm::Constant **)(v122 + 32))) {
                        goto LABEL_267;
                      }
                      uint64_t v123 = **((void **)&v989 + 1);
                      uint64_t v124 = -(uint64_t)(*(_DWORD *)(v118 + 20) & 0x7FFFFFF);
                    }
                    else
                    {
                      uint64_t v124 = -v121;
                    }
                    uint64_t v125 = v118 + 32 * v124;
                    if (v123 != *(void *)(v125 + 32)
                      || (sub_1CBF68974((uint64_t)&v990, *(llvm::Constant **)v125) & 1) == 0)
                    {
                      goto LABEL_268;
                    }
                  }
                  else
                  {
                    if (v119 != 58) {
                      goto LABEL_268;
                    }
                    uint64_t v120 = **((void **)&v989 + 1);
                    if (**((void **)&v989 + 1) == *(void *)(v118 - 64))
                    {
                      if (sub_1CBF687D0((uint64_t)&v990, *(llvm::Constant **)(v118 - 32))) {
                        goto LABEL_267;
                      }
                      uint64_t v120 = **((void **)&v989 + 1);
                    }
                    if (v120 != *(void *)(v118 - 32)
                      || (sub_1CBF687D0((uint64_t)&v990, *(llvm::Constant **)(v118 - 64)) & 1) == 0)
                    {
                      goto LABEL_268;
                    }
                  }
LABEL_267:
                  if (*v991 != *v102) {
                    goto LABEL_268;
                  }
LABEL_93:
                  int v23 = (llvm::Type *)__src;
                  uint64_t v24 = v998;
                  goto LABEL_94;
                }
                if (*(_WORD *)(v103 + 18) != 30) {
                  goto LABEL_230;
                }
                uint64_t v109 = *(_DWORD *)(v103 + 20) & 0x7FFFFFF;
                uint64_t v110 = v103 - 32 * v109;
                uint64_t v111 = **((void **)&v989 + 1);
                if (**((void **)&v989 + 1) == *(void *)v110)
                {
                  if (sub_1CBF68974((uint64_t)&v990, *(llvm::Constant **)(v110 + 32))) {
                    goto LABEL_229;
                  }
                  uint64_t v111 = **((void **)&v989 + 1);
                  uint64_t v112 = -(uint64_t)(*(_DWORD *)(v103 + 20) & 0x7FFFFFF);
                }
                else
                {
                  uint64_t v112 = -v109;
                }
                uint64_t v117 = v103 + 32 * v112;
                if (v111 != *(void *)(v117 + 32)
                  || !sub_1CBF68974((uint64_t)&v990, *(llvm::Constant **)v117))
                {
                  goto LABEL_230;
                }
                goto LABEL_229;
              }
              if (*((_WORD *)v95 + 9) != 28) {
                goto LABEL_268;
              }
              uint64_t v106 = (void *)*((void *)v95 - 4 * (*((_DWORD *)v95 + 5) & 0x7FFFFFF));
              int v107 = *((unsigned __int8 *)v106 + 16);
              if (v107 != 5)
              {
                if (v107 != 58) {
                  goto LABEL_251;
                }
                uint64_t v108 = **((void **)&v989 + 1);
                if (**((void **)&v989 + 1) != *(v106 - 8))
                {
LABEL_216:
                  if (v108 != *(v106 - 4) || (sub_1CBF687D0((uint64_t)&v990, (llvm::Constant *)*(v106 - 8)) & 1) == 0) {
                    goto LABEL_251;
                  }
                  goto LABEL_250;
                }
                if ((sub_1CBF687D0((uint64_t)&v990, (llvm::Constant *)*(v106 - 4)) & 1) == 0)
                {
                  uint64_t v108 = **((void **)&v989 + 1);
                  goto LABEL_216;
                }
LABEL_250:
                if (*v991 == ((llvm::Type **)v95 - 4 * (*((_DWORD *)v95 + 5) & 0x7FFFFFF))[4]) {
                  goto LABEL_93;
                }
LABEL_251:
                uint64_t v127 = (void *)((void *)v95 - 4 * (*((_DWORD *)v95 + 5) & 0x7FFFFFF))[4];
                int v128 = *((unsigned __int8 *)v127 + 16);
                if (v128 != 5)
                {
                  if (v128 != 58) {
                    goto LABEL_268;
                  }
                  uint64_t v129 = **((void **)&v989 + 1);
                  if (**((void **)&v989 + 1) != *(v127 - 8)) {
                    goto LABEL_256;
                  }
                  if ((sub_1CBF687D0((uint64_t)&v990, (llvm::Constant *)*(v127 - 4)) & 1) == 0)
                  {
                    uint64_t v129 = **((void **)&v989 + 1);
LABEL_256:
                    if (v129 != *(v127 - 4) || (sub_1CBF687D0((uint64_t)&v990, (llvm::Constant *)*(v127 - 8)) & 1) == 0) {
                      goto LABEL_268;
                    }
                  }
LABEL_266:
                  int v102 = (llvm::Type **)((char *)v95 - 32 * (*((_DWORD *)v95 + 5) & 0x7FFFFFF));
                  goto LABEL_267;
                }
                if (*((_WORD *)v127 + 9) != 30) {
                  goto LABEL_268;
                }
                uint64_t v130 = *((_DWORD *)v127 + 5) & 0x7FFFFFF;
                unint64_t v131 = &v127[-4 * v130];
                uint64_t v132 = (llvm::Constant *)**((void **)&v989 + 1);
                if (**((void **)&v989 + 1) == *v131)
                {
                  if (sub_1CBF68974((uint64_t)&v990, (llvm::Constant *)v131[4])) {
                    goto LABEL_266;
                  }
                  uint64_t v132 = (llvm::Constant *)**((void **)&v989 + 1);
                  uint64_t v133 = -(uint64_t)(*((_DWORD *)v127 + 5) & 0x7FFFFFF);
                }
                else
                {
                  uint64_t v133 = -v130;
                }
                int v134 = (llvm::Constant **)&v127[4 * v133];
                if (v132 != v134[4] || !sub_1CBF68974((uint64_t)&v990, *v134)) {
                  goto LABEL_268;
                }
                goto LABEL_266;
              }
              if (*((_WORD *)v106 + 9) != 30) {
                goto LABEL_251;
              }
              uint64_t v113 = *((_DWORD *)v106 + 5) & 0x7FFFFFF;
              uint64_t v114 = &v106[-4 * v113];
              int v115 = (llvm::Constant *)**((void **)&v989 + 1);
              if (**((void **)&v989 + 1) == *v114)
              {
                if (sub_1CBF68974((uint64_t)&v990, (llvm::Constant *)v114[4])) {
                  goto LABEL_250;
                }
                int v115 = (llvm::Constant *)**((void **)&v989 + 1);
                uint64_t v116 = -(uint64_t)(*((_DWORD *)v106 + 5) & 0x7FFFFFF);
              }
              else
              {
                uint64_t v116 = -v113;
              }
              uint64_t v126 = (llvm::Constant **)&v106[4 * v116];
              if (v115 != v126[4] || !sub_1CBF68974((uint64_t)&v990, *v126)) {
                goto LABEL_251;
              }
              goto LABEL_250;
            }
            if (v94 != 5 || *((_WORD *)a2 + 9) != 30) {
              goto LABEL_268;
            }
            uint64_t v96 = a2[-4 * (*((_DWORD *)a2 + 5) & 0x7FFFFFF)];
            int v97 = *((unsigned __int8 *)v96 + 16);
            if (v97 != 5)
            {
              if (v97 != 56
                || (!*((void *)v96 - 8)
                 || (unint64_t __src = (void *)*((void *)v96 - 8),
                     (sub_1CBF686A0((void **)&v988 + 1, 30, *((void *)v96 - 4)) & 1) == 0))
                && ((uint64_t v98 = *((void *)v96 - 4)) == 0
                 || (*(void *)long long v988 = v98, (sub_1CBF686A0((void **)&v988 + 1, 30, *((void *)v96 - 8)) & 1) == 0)))
              {
LABEL_268:
                uint64_t v135 = *(void *)(v19 + 8);
                if (!v135 || *(void *)(v135 + 8))
                {
                  uint64_t v136 = *(void *)(v20 + 8);
                  if (!v136 || *(void *)(v136 + 8)) {
                    goto LABEL_342;
                  }
                }
                int v137 = *(unsigned __int8 *)(v19 + 16);
                if (v137 == 5)
                {
                  if (*(_WORD *)(v19 + 18) != 29) {
                    goto LABEL_332;
                  }
                  uint64_t v140 = v19 - 32 * (*(_DWORD *)(v19 + 20) & 0x7FFFFFF);
                  uint64_t v138 = *(llvm::Type **)v140;
                  if (!*(void *)v140) {
                    goto LABEL_332;
                  }
                  unint64_t __src = *(void **)v140;
                  __int16 v139 = *(llvm::Type **)(v140 + 32);
                  if (!v139) {
                    goto LABEL_332;
                  }
                }
                else
                {
                  if (v137 != 57)
                  {
LABEL_332:
                    if (v137 == 5)
                    {
                      if (*(_WORD *)(v19 + 18) != 28) {
                        goto LABEL_342;
                      }
                      uint64_t v172 = v19 - 32 * (*(_DWORD *)(v19 + 20) & 0x7FFFFFF);
                      int64_t v170 = *(const char **)v172;
                      if (!*(void *)v172) {
                        goto LABEL_342;
                      }
                      unint64_t __src = *(void **)v172;
                      unsigned int v171 = *(llvm::Type **)(v172 + 32);
                      if (!v171) {
                        goto LABEL_342;
                      }
                    }
                    else
                    {
                      if (v137 != 56) {
                        goto LABEL_342;
                      }
                      int64_t v170 = *(const char **)(v19 - 64);
                      if (!v170) {
                        goto LABEL_342;
                      }
                      unint64_t __src = *(void **)(v19 - 64);
                      unsigned int v171 = *(llvm::Type **)(v19 - 32);
                      if (!v171) {
                        goto LABEL_342;
                      }
                    }
                    v998 = v171;
                    uint64_t v999 = (uint64_t)v170;
                    *(void *)&long long v1000 = v171;
                    if ((sub_1CC046E98(&v999, 30, v20) & 1) == 0)
                    {
LABEL_342:
                      uint64_t v13 = (uint64_t)sub_1CC9D337C(a1, (unsigned __int8 *)a2);
                      if (v13) {
                        goto LABEL_2;
                      }
                      if (sub_1CCAB350C(a1, (llvm::UndefValue *)a2)) {
                        return (llvm::Value *)a2;
                      }
                      uint64_t v13 = sub_1CCA060BC((uint64_t)a2, *(uint64_t **)(a1 + 24));
                      if (v13)
                      {
LABEL_2:
                        unint64_t v14 = (llvm::Value *)v13;
                        return (llvm::Value *)sub_1CC9D3C84(a1, (llvm::ValueAsMetadata *)a2, v14);
                      }
                      v998 = 0;
                      *(void *)&long long v988 = &v998;
                      int v177 = *((unsigned __int8 *)a2 + 16);
                      if (v177 == 5)
                      {
                        if (*((_WORD *)a2 + 9) != 30) {
                          goto LABEL_920;
                        }
                        uint64_t v180 = *((_DWORD *)a2 + 5) & 0x7FFFFFF;
                        uint64_t v181 = &a2[-4 * v180];
                        if (*v181)
                        {
                          v998 = *v181;
                          if (sub_1CBF68974((uint64_t)&v988 + 8, v181[4])) {
                            goto LABEL_359;
                          }
                          uint64_t v182 = -(uint64_t)(*((_DWORD *)a2 + 5) & 0x7FFFFFF);
                        }
                        else
                        {
                          uint64_t v182 = -v180;
                        }
                        uint64_t v183 = a2[4 * v182 + 4];
                        if (!v183) {
                          goto LABEL_920;
                        }
                        *(void *)long long v988 = v183;
                        if (!sub_1CBF68974((uint64_t)&v988 + 8, a2[-4 * (*((_DWORD *)a2 + 5) & 0x7FFFFFF)]))goto LABEL_920; {
                      }
                        }
                      else
                      {
                        if (v177 != 58) {
                          goto LABEL_920;
                        }
                        if (!*v9 || (v998 = (llvm::Type *)*v9, (sub_1CBF687D0((uint64_t)&v988 + 8, *(a2 - 4)) & 1) == 0))
                        {
                          uint64_t v179 = (uint64_t)*(a2 - 4);
                          if (!v179) {
                            goto LABEL_920;
                          }
                          *(void *)long long v988 = v179;
                          if ((sub_1CBF687D0((uint64_t)&v988 + 8, (llvm::Constant *)*v9) & 1) == 0) {
                            goto LABEL_920;
                          }
                        }
                      }
LABEL_359:
                      uint64_t v184 = *a2;
                      v996 = 0;
                      v997 = 0;
                      int v185 = v998;
                      *(void *)&long long v988 = &v997;
                      *(void *)&long long v989 = &v996;
                      uint64_t v186 = *((void *)v998 + 1);
                      if (v186 && !*(void *)(v186 + 8))
                      {
                        if (sub_1CC046BB0((void **)&v988, 28, (uint64_t)v998))
                        {
                          uint64_t v187 = *(void *)(a1 + 24);
                          if ((*((unsigned char *)v996 + 23) & 0x10) == 0)
                          {
                            uint64_t v203 = 0;
                            uint64_t v202 = &byte_1CFBCE98E;
                            goto LABEL_382;
                          }
                          uint64_t v188 = ***(void ***)v996;
                          uint64_t v189 = *(void *)(v188 + 152);
                          uint64_t v190 = *(unsigned int *)(v188 + 168);
                          if (v190)
                          {
                            LODWORD(v191) = (v190 - 1) & ((v996 >> 4) ^ (v996 >> 9));
                            uint64_t v192 = v189 + 16 * v191;
                            uint64_t v193 = *(llvm **)v192;
                            if (*(llvm **)v192 == v996)
                            {
LABEL_381:
                              uint64_t v201 = *(void **)(v192 + 8);
                              uint64_t v204 = *v201;
                              uint64_t v202 = (char *)(v201 + 2);
                              uint64_t v203 = v204;
LABEL_382:
                              LOWORD(v990) = 773;
                              *(void *)&long long v988 = v202;
                              *((void *)&v988 + 1) = v203;
                              *(void *)&long long v989 = ".not";
                              uint64_t v205 = sub_1CC2427E8(v187, (uint64_t)v996, (uint64_t)&v988, v178);
                              int v206 = v997;
                              LOWORD(v990) = 257;
                              int v207 = (const char **)&v988;
                              char v208 = 29;
LABEL_917:
                              uint64_t v369 = llvm::BinaryOperator::Create(v208, v206, (uint64_t)v205, v207, 0);
                              goto LABEL_918;
                            }
                            int v194 = 1;
                            while (v193 != (llvm *)-4096)
                            {
                              int v195 = v191 + v194++;
                              uint64_t v191 = v195 & (v190 - 1);
                              uint64_t v193 = *(llvm **)(v189 + 16 * v191);
                              if (v193 == v996)
                              {
                                uint64_t v192 = v189 + 16 * v191;
                                goto LABEL_381;
                              }
                            }
                          }
                          uint64_t v192 = v189 + 16 * v190;
                          goto LABEL_381;
                        }
                        int v185 = v998;
                      }
                      *(void *)&long long v988 = &v997;
                      *(void *)&long long v989 = &v996;
                      uint64_t v196 = *((void *)v185 + 1);
                      if (!v196 || *(void *)(v196 + 8))
                      {
LABEL_411:
                        *(void *)&long long v988 = &v997;
                        *(void *)&long long v989 = &v996;
                        uint64_t v236 = *((void *)v185 + 1);
                        if (v236 && !*(void *)(v236 + 8))
                        {
                          if (sub_1CC046BB0((void **)&v988, 29, (uint64_t)v185))
                          {
                            uint64_t v237 = *(void *)(a1 + 24);
                            if ((*((unsigned char *)v996 + 23) & 0x10) == 0)
                            {
                              uint64_t v253 = 0;
                              uint64_t v252 = &byte_1CFBCE98E;
                              goto LABEL_434;
                            }
                            uint64_t v238 = ***(void ***)v996;
                            uint64_t v239 = *(void *)(v238 + 152);
                            uint64_t v240 = *(unsigned int *)(v238 + 168);
                            if (v240)
                            {
                              LODWORD(v241) = (v240 - 1) & ((v996 >> 4) ^ (v996 >> 9));
                              uint64_t v242 = v239 + 16 * v241;
                              unsigned int v243 = *(llvm **)v242;
                              if (*(llvm **)v242 == v996)
                              {
LABEL_433:
                                uint64_t v251 = *(void **)(v242 + 8);
                                uint64_t v254 = *v251;
                                uint64_t v252 = (char *)(v251 + 2);
                                uint64_t v253 = v254;
LABEL_434:
                                LOWORD(v990) = 773;
                                *(void *)&long long v988 = v252;
                                *((void *)&v988 + 1) = v253;
                                *(void *)&long long v989 = ".not";
                                uint64_t v205 = sub_1CC2427E8(v237, (uint64_t)v996, (uint64_t)&v988, v178);
                                int v206 = v997;
                                LOWORD(v990) = 257;
                                int v207 = (const char **)&v988;
                                char v208 = 28;
                                goto LABEL_917;
                              }
                              int v244 = 1;
                              while (v243 != (llvm *)-4096)
                              {
                                int v245 = v241 + v244++;
                                uint64_t v241 = v245 & (v240 - 1);
                                unsigned int v243 = *(llvm **)(v239 + 16 * v241);
                                if (v243 == v996)
                                {
                                  uint64_t v242 = v239 + 16 * v241;
                                  goto LABEL_433;
                                }
                              }
                            }
                            uint64_t v242 = v239 + 16 * v240;
                            goto LABEL_433;
                          }
                          int v185 = v998;
                        }
                        *(void *)&long long v988 = &v997;
                        *(void *)&long long v989 = &v996;
                        uint64_t v246 = *((void *)v185 + 1);
                        if (!v246 || *(void *)(v246 + 8))
                        {
LABEL_451:
                          if (!v185
                            || ((unsigned int v268 = *((unsigned __int8 *)v185 + 16), v268 >= 0x1C)
                              ? (BOOL v269 = v268 - 59 >= 0xFFFFFFEE)
                              : (BOOL v269 = 0),
                                !v269))
                          {
LABEL_604:
                            uint64_t v337 = *((void *)v185 + 1);
                            if (v337)
                            {
                              if (!*(void *)(v337 + 8))
                              {
                                unsigned int v353 = *((unsigned __int8 *)v185 + 16);
                                if (v353 >= 0x1C && v353 - 83 >= 0xFFFFFFFE)
                                {
                                  *((_WORD *)v185 + 9) = word_1CFB27690[*((_WORD *)v185 + 9) & 0x3FLL] | *((_WORD *)v185 + 9) & 0xFFC0;
LABEL_663:
                                  uint64_t v366 = a1;
                                  uint64_t v367 = (llvm::ValueAsMetadata *)a2;
                                  Binaryuint64_t Intrinsic = v185;
LABEL_664:
                                  uint64_t v369 = sub_1CC9D3C84(v366, v367, BinaryIntrinsic);
LABEL_918:
                                  uint64_t v16 = (uint64_t)v369;
LABEL_919:
                                  if (v16) {
                                    return (llvm::Value *)v16;
                                  }
LABEL_920:
                                  uint64_t v514 = (uint64_t)*(a2 - 8);
                                  uint64_t v515 = (uint64_t)*(a2 - 4);
                                  uint64_t v987 = 0;
                                  *(void *)&long long v988 = &v987;
                                  *((void *)&v989 + 1) = &v987;
                                  int v516 = *((unsigned __int8 *)a2 + 16);
                                  if (v516 != 5)
                                  {
                                    if (v516 != 58) {
                                      goto LABEL_981;
                                    }
                                    int v517 = *(unsigned __int8 *)(v514 + 16);
                                    if (v517 == 5)
                                    {
                                      if (*(_WORD *)(v514 + 18) != 28
                                        || (sub_1CBF686A0((void **)&v988, 30, *(void *)(v514 - 32 * (*(_DWORD *)(v514 + 20) & 0x7FFFFFF))) & 1) == 0&& !sub_1CBF686A0((void **)&v988, 30, *(void *)(v514- 32 * (*(_DWORD *)(v514 + 20) & 0x7FFFFFF)+ 32)))
                                      {
                                        goto LABEL_951;
                                      }
                                    }
                                    else if (v517 != 56 {
                                           || (sub_1CBF686A0((void **)&v988, 30, *(void *)(v514 - 64)) & 1) == 0
                                    }
                                           && (sub_1CBF686A0((void **)&v988, 30, *(void *)(v514 - 32)) & 1) == 0)
                                    {
                                      goto LABEL_951;
                                    }
                                    uint64_t v520 = (uint64_t)*(a2 - 4);
                                    int v521 = *(unsigned __int8 *)(v520 + 16);
                                    if (v521 == 5)
                                    {
                                      if (*(_WORD *)(v520 + 18) == 28)
                                      {
                                        uint64_t v528 = (void *)(v520 - 32 * (*(_DWORD *)(v520 + 20) & 0x7FFFFFF));
                                        uint64_t v522 = **((void **)&v989 + 1);
                                        if (**((void **)&v989 + 1) == *v528) {
                                          goto LABEL_1007;
                                        }
                                        int v523 = v528 + 4;
LABEL_950:
                                        if (v522 == *v523) {
                                          goto LABEL_1007;
                                        }
                                      }
                                    }
                                    else if (v521 == 56)
                                    {
                                      uint64_t v522 = **((void **)&v989 + 1);
                                      if (**((void **)&v989 + 1) == *(void *)(v520 - 64)) {
                                        goto LABEL_1007;
                                      }
                                      int v523 = (void *)(v520 - 32);
                                      goto LABEL_950;
                                    }
LABEL_951:
                                    uint64_t v529 = (uint64_t)*(a2 - 4);
                                    int v530 = *(unsigned __int8 *)(v529 + 16);
                                    if (v530 != 5)
                                    {
                                      if (v530 != 56
                                        || (sub_1CBF686A0((void **)&v988, 30, *(void *)(v529 - 64)) & 1) == 0
                                        && (sub_1CBF686A0((void **)&v988, 30, *(void *)(v529 - 32)) & 1) == 0)
                                      {
                                        goto LABEL_981;
                                      }
                                      goto LABEL_959;
                                    }
                                    if (*(_WORD *)(v529 + 18) == 28
                                      && ((sub_1CBF686A0((void **)&v988, 30, *(void *)(v529 - 32 * (*(_DWORD *)(v529 + 20) & 0x7FFFFFF))) & 1) != 0|| sub_1CBF686A0((void **)&v988, 30, *(void *)(v529- 32 * (*(_DWORD *)(v529 + 20) & 0x7FFFFFF)+ 32))))
                                    {
LABEL_959:
                                      uint64_t v531 = *v9;
                                      goto LABEL_973;
                                    }
LABEL_981:
                                    uint64_t v539 = *(void *)(a1 + 24);
                                    unint64_t __src = 0;
                                    v997 = 0;
                                    v998 = 0;
                                    *(void *)&long long v988 = &v999;
                                    *((void *)&v988 + 1) = &v999;
                                    *(void *)&long long v989 = &__src;
                                    *((void *)&v989 + 1) = &v998;
                                    v990 = &v997;
                                    int v540 = *((unsigned __int8 *)a2 + 16);
                                    if (v540 != 5)
                                    {
                                      if (v540 != 58) {
                                        goto LABEL_1013;
                                      }
                                      if (!*v9) {
                                        goto LABEL_987;
                                      }
                                      uint64_t v999 = *v9;
                                      uint64_t v175 = *(a2 - 4);
                                      uint64_t v541 = *((void *)v175 + 1);
                                      if (!v541) {
                                        goto LABEL_988;
                                      }
                                      if (*(void *)(v541 + 8)
                                        || (sub_1CCA165C0((uint64_t **)&v988 + 1, (uint64_t)v175) & 1) == 0)
                                      {
LABEL_987:
                                        uint64_t v175 = *(a2 - 4);
                                        if (!v175) {
                                          goto LABEL_1013;
                                        }
LABEL_988:
                                        uint64_t v999 = (uint64_t)v175;
                                        uint64_t v175 = (llvm::Type *)*v9;
                                        uint64_t v542 = *(void *)(*v9 + 8);
                                        if (!v542
                                          || *(void *)(v542 + 8)
                                          || (sub_1CCA165C0((uint64_t **)&v988 + 1, (uint64_t)v175) & 1) == 0)
                                        {
                                          goto LABEL_1013;
                                        }
                                      }
LABEL_1003:
                                      v996 = 0;
                                      *(void *)&long long v988 = &v996;
                                      int v549 = sub_1CBF686A0((void **)&v988, 30, (uint64_t)v997);
                                      uint64_t v175 = v998;
                                      if (v549)
                                      {
                                        LOWORD(v990) = 257;
                                        int v550 = sub_1CBF52474(v539, v998, (uint64_t)v996, (uint64_t)&v988);
                                        unint64_t v551 = __src;
                                        LOWORD(v990) = 257;
                                        char v552 = 30;
                                      }
                                      else
                                      {
                                        uint64_t v557 = *((void *)v998 + 1);
                                        if (!v557) {
                                          goto LABEL_1013;
                                        }
                                        if (*(void *)(v557 + 8)) {
                                          goto LABEL_1013;
                                        }
                                        int v558 = v997;
                                        if (!v997 || *((unsigned __int8 *)v997 + 16) > 0x14u) {
                                          goto LABEL_1013;
                                        }
                                        uint64_t v640 = *(llvm::Constant **)v997;
                                        if ((*(_DWORD *)(*(void *)v997 + 8) & 0xFE) == 0x12) {
                                          uint64_t v640 = (llvm::Constant *)**((void **)v640 + 2);
                                        }
                                        AllOnesValue = (llvm::Constant *)llvm::Constant::getAllOnesValue(v640, v998, v176);
                                        unsigned int v643 = llvm::Constant::replaceUndefsWith(v558, AllOnesValue, v642);
                                        LOWORD(v990) = 257;
                                        uint64_t v644 = sub_1CBF52474(v539, __src, (uint64_t)v643, (uint64_t)&v988);
                                        LOWORD(v990) = 257;
                                        int v646 = sub_1CC2427E8(v539, (uint64_t)v643, (uint64_t)&v988, v645);
                                        LOWORD(v990) = 257;
                                        unint64_t v551 = sub_1CBF52474(v539, (void *)v999, (uint64_t)v646, (uint64_t)&v988);
                                        LOWORD(v990) = 257;
                                        char v552 = 29;
                                        int v550 = v644;
                                      }
                                      uint64_t v16 = (uint64_t)llvm::BinaryOperator::Create(v552, v550, (uint64_t)v551, (const char **)&v988, 0);
                                      if (v16) {
                                        return (llvm::Value *)v16;
                                      }
LABEL_1013:
                                      v998 = 0;
                                      if (*(unsigned __int8 *)(v515 + 16) > 0x14u || !v515) {
                                        goto LABEL_1023;
                                      }
                                      unint64_t __src = 0;
                                      uint64_t v559 = *(void *)(v514 + 8);
                                      if (v559 && !*(void *)(v559 + 8))
                                      {
                                        int v571 = *(unsigned __int8 *)(v514 + 16);
                                        if (v571 == 5)
                                        {
                                          if (*(_WORD *)(v514 + 18) != 29) {
                                            goto LABEL_1017;
                                          }
                                          uint64_t v588 = v514 - 32 * (*(_DWORD *)(v514 + 20) & 0x7FFFFFF);
                                          if (!*(void *)v588) {
                                            goto LABEL_1017;
                                          }
                                          v998 = *(llvm::Type **)v588;
                                          v572 = *(unsigned __int8 **)(v588 + 32);
                                          if (!v572) {
                                            goto LABEL_1017;
                                          }
                                          unint64_t __src = *(void **)(v588 + 32);
                                          unsigned int v573 = v572[16];
                                        }
                                        else
                                        {
                                          if (v571 != 57) {
                                            goto LABEL_1017;
                                          }
                                          if (!*(void *)(v514 - 64)) {
                                            goto LABEL_1017;
                                          }
                                          v998 = *(llvm::Type **)(v514 - 64);
                                          v572 = *(unsigned __int8 **)(v514 - 32);
                                          if (!v572) {
                                            goto LABEL_1017;
                                          }
                                          unsigned int v573 = v572[16];
                                          if (v573 > 0x14) {
                                            goto LABEL_1017;
                                          }
                                          unint64_t __src = *(void **)(v514 - 32);
                                        }
                                        if (v573 != 5 && *(unsigned char *)(v515 + 16) != 5)
                                        {
                                          unint64_t v589 = *(llvm::Constant **)v572;
                                          if ((*(_DWORD *)(*(void *)v572 + 8) & 0xFE) == 0x12) {
                                            unint64_t v589 = (llvm::Constant *)**((void **)v589 + 2);
                                          }
                                          int v590 = (llvm::Constant *)llvm::Constant::getAllOnesValue(v589, v175, v176);
                                          unint64_t __src = llvm::Constant::replaceUndefsWith((llvm::Constant *)v572, v590, v591);
                                          uint64_t v592 = *(void *)(a1 + 24);
                                          uint64_t v593 = v998;
                                          Not = llvm::ConstantExpr::getNot((llvm::Constant **)__src, v594, v595);
                                          unint64_t v598 = llvm::Constant::mergeUndefsWith(Not, (llvm::Constant *)v515, v597);
                                          LOWORD(v990) = 257;
                                          unint64_t v599 = sub_1CBF52474(v592, v593, (uint64_t)v598, (uint64_t)&v988);
                                          Xor = (llvm::Constant *)llvm::ConstantExpr::getXor((llvm::ConstantExpr *)v515, (llvm::Constant *)__src, v600, v601);
                                          unint64_t v604 = llvm::Constant::mergeUndefsWith(Xor, (llvm::Constant *)v515, v603);
                                          goto LABEL_1085;
                                        }
                                      }
LABEL_1017:
                                      *(void *)&long long v988 = &v998;
                                      *(void *)&long long v989 = &__src;
                                      uint64_t v560 = *(void *)(v514 + 8);
                                      if (!v560 || *(void *)(v560 + 8)) {
                                        goto LABEL_1019;
                                      }
                                      int v574 = *(unsigned __int8 *)(v514 + 16);
                                      if (v574 == 5)
                                      {
                                        if (*(_WORD *)(v514 + 18) != 29) {
                                          goto LABEL_1019;
                                        }
                                        if (!sub_1CBF686A0((void **)&v988, 30, *(void *)(v514- 32 * (*(_DWORD *)(v514 + 20) & 0x7FFFFFF))))goto LABEL_1019; {
                                        uint64_t v577 = *(void *)(v514 - 32 * (*(_DWORD *)(v514 + 20) & 0x7FFFFFF) + 32);
                                        }
                                        if (!v577) {
                                          goto LABEL_1019;
                                        }
                                      }
                                      else if (v574 != 57 {
                                             || !sub_1CBF686A0((void **)&v988, 30, *(void *)(v514 - 64))|| (uint64_t v577 = *(void *)(v514 - 32)) == 0|| *(unsigned __int8 *)(v577 + 16) > 0x14u)
                                      }
                                      {
LABEL_1019:
                                        *(void *)&long long v988 = &v998;
                                        *(void *)&long long v989 = &__src;
                                        uint64_t v561 = *(void *)(v514 + 8);
                                        if (!v561 || *(void *)(v561 + 8))
                                        {
LABEL_1021:
                                          v997 = 0;
                                          *(void *)&long long v988 = &v998;
                                          *((void *)&v988 + 1) = &v997;
                                          *(void *)&long long v989 = 1;
                                          *((void *)&v989 + 1) = &v998;
                                          v990 = &v997;
                                          v991 = (llvm::Type **)1;
                                          uint64_t v562 = *(void *)(v514 + 8);
                                          if (!v562 || *(void *)(v562 + 8)) {
                                            goto LABEL_1023;
                                          }
                                          unsigned int v585 = *(unsigned __int8 *)(v514 + 16);
                                          if (v585 > 0x1B || v585 == 5)
                                          {
                                            if (v585 <= 0x1B) {
                                              unsigned int v586 = *(unsigned __int16 *)(v514 + 18);
                                            }
                                            else {
                                              unsigned int v586 = v585 - 28;
                                            }
                                            if (v586 == 38)
                                            {
                                              int v636 = *(_DWORD *)(v514 + 20);
                                              if ((v636 & 0x40000000) != 0) {
                                                uint64_t v637 = *(uint64_t **)(v514 - 8);
                                              }
                                              else {
                                                uint64_t v637 = (uint64_t *)(v514 - 32 * (v636 & 0x7FFFFFF));
                                              }
                                              uint64_t v638 = *v637;
                                              int v639 = *(unsigned __int8 *)(v638 + 16);
                                              if (v639 == 5)
                                              {
                                                if (*(_WORD *)(v638 + 18) == 27)
                                                {
                                                  if (*(void *)(v638 - 32 * (*(_DWORD *)(v638 + 20) & 0x7FFFFFF)))
                                                  {
                                                    v998 = *(llvm::Type **)(v638
                                                                          - 32 * (*(_DWORD *)(v638 + 20) & 0x7FFFFFF));
                                                    if (sub_1CBF5295C((uint64_t)&v988 + 8, *(llvm::Constant **)(v638- 32* (*(_DWORD *)(v638 + 20) & 0x7FFFFFF)+ 32)))goto LABEL_1090; {
                                                  }
                                                    }
                                                }
                                              }
                                              else if (v639 == 55)
                                              {
                                                if (*(void *)(v638 - 64))
                                                {
                                                  v998 = *(llvm::Type **)(v638 - 64);
                                                  if (sub_1CBF528D8((uint64_t)&v988 + 8, *(unsigned __int8 **)(v638 - 32)))goto LABEL_1090; {
                                                }
                                                  }
                                              }
                                            }
                                            unsigned int v585 = *(unsigned __int8 *)(v514 + 16);
                                          }
                                          if (v585 == 5)
                                          {
                                            if (*(_WORD *)(v514 + 18) != 27) {
                                              goto LABEL_1023;
                                            }
                                            uint64_t v614 = *(void *)(v514 - 32 * (*(_DWORD *)(v514 + 20) & 0x7FFFFFF));
                                            if (!v614) {
                                              goto LABEL_1023;
                                            }
                                            **((void **)&v989 + 1) = v614;
                                            if ((sub_1CBF5295C((uint64_t)&v990, *(llvm::Constant **)(v514- 32 * (*(_DWORD *)(v514 + 20) & 0x7FFFFFF)+ 32)) & 1) == 0)goto LABEL_1023; {
                                          }
                                            }
                                          else
                                          {
                                            if (v585 != 55) {
                                              goto LABEL_1023;
                                            }
                                            uint64_t v587 = *(void *)(v514 - 64);
                                            if (!v587) {
                                              goto LABEL_1023;
                                            }
                                            **((void **)&v989 + 1) = v587;
                                            if ((sub_1CBF528D8((uint64_t)&v990, *(unsigned __int8 **)(v514 - 32)) & 1) == 0) {
                                              goto LABEL_1023;
                                            }
                                          }
LABEL_1090:
                                          uint64_t v615 = v997;
                                          unsigned int v616 = *(llvm::Type **)v998;
                                          if ((*(_DWORD *)(*(void *)v998 + 8) & 0xFE) == 0x12) {
                                            unsigned int v616 = (llvm::Type *)**((void **)v616 + 2);
                                          }
                                          int PrimitiveSizeInBits = llvm::Type::getPrimitiveSizeInBits(v616);
                                          uint64_t v618 = *((unsigned int *)v615 + 2);
                                          if (v618 >= 0x41)
                                          {
                                            int v619 = 0;
                                            int64_t v620 = (unint64_t)(v618 + 63) >> 6;
                                            do
                                            {
                                              BOOL v310 = v620-- < 1;
                                              if (v310) {
                                                break;
                                              }
                                              unint64_t v621 = *(void *)(*(void *)v615 + 8 * v620);
                                              v619 += __clz(v621);
                                            }
                                            while (!v621);
                                            int v622 = v618 | 0xFFFFFFC0;
                                            if ((v618 & 0x3F) == 0) {
                                              int v622 = 0;
                                            }
                                            if ((v618 - v619 - v622) > 0x40) {
                                              goto LABEL_1023;
                                            }
                                            uint64_t v615 = *(llvm **)v615;
                                          }
                                          if (*(void *)v615 == PrimitiveSizeInBits - 1
                                            && (sub_1CBF68974((uint64_t)&v999, (llvm::Constant *)v515) & 1) == 0)
                                          {
                                            uint64_t v625 = *(void *)(a1 + 24);
                                            uint64_t v626 = v998;
                                            uint64_t v627 = llvm::Constant::getAllOnesValue(*(llvm::Constant **)v998, v623, v624);
                                            LOWORD(v990) = 257;
                                            uint64_t v628 = sub_1CB845F20(v625, 38, v626, (uint64_t)v627, (uint64_t)&v988);
                                            uint64_t v629 = *(void *)(a1 + 24);
                                            LOWORD(v990) = 257;
                                            uint64_t v631 = sub_1CC2427E8(v629, v515, (uint64_t)&v988, v630);
                                            __int16 v1002 = 257;
                                            return sub_1CC199EFC((uint64_t)v628, (uint64_t *)v515, (uint64_t)v631, (const char **)&v999, 0, 0);
                                          }
LABEL_1023:
                                          int v563 = *a2;
                                          v997 = 0;
                                          long long v988 = (unint64_t)&v997;
                                          if (!sub_1CBF528D8((uint64_t)&v988, (unsigned __int8 *)v515)) {
                                            goto LABEL_1159;
                                          }
                                          v996 = 0;
                                          v986 = 0;
                                          uint64_t v567 = (uint64_t)v997;
                                          unsigned int v568 = *((_DWORD *)v997 + 2);
                                          if (v568 > 0x40)
                                          {
                                            LODWORD(v647) = v568 - 1;
                                            if (((*(void *)(*(void *)v997 + 8 * ((v568 - 1) >> 6)) >> (v568 - 1)) & 1) == 0) {
                                              goto LABEL_1124;
                                            }
LABEL_1866:
                                            if (llvm::APInt::countTrailingZerosSlowCase((unint64_t **)v567) != v647) {
                                              goto LABEL_1124;
                                            }
                                          }
                                          else if (*(void *)v997 != 1 << (v568 - 1))
                                          {
                                            goto LABEL_1124;
                                          }
                                          long long v988 = (unint64_t)&v986;
                                          *(void *)&long long v989 = &v996;
                                          int v569 = *(unsigned __int8 *)(v514 + 16);
                                          if (v569 != 5)
                                          {
                                            if (v569 != 43) {
                                              goto LABEL_1124;
                                            }
                                            if (!sub_1CBF528D8((uint64_t)&v988, *(unsigned __int8 **)(v514 - 64)))goto LABEL_1124; {
                                            uint64_t v570 = *(void *)(v514 - 32);
                                            }
                                            if (!v570) {
                                              goto LABEL_1124;
                                            }
LABEL_1052:
                                            *(void *)long long v989 = v570;
                                            unsigned int v582 = *((_DWORD *)v986 + 2);
                                            if (v582 >= 0x41) {
                                              operator new[]();
                                            }
                                            uint64_t v583 = *(void *)v997 + *(void *)v986;
                                            unint64_t v584 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v582;
                                            if (!v582) {
                                              unint64_t v584 = 0;
                                            }
                                            LODWORD(v1000) = *((_DWORD *)v986 + 2);
                                            uint64_t v999 = v584 & v583;
                                            char v632 = (llvm::Value *)llvm::ConstantInt::get(*(llvm::ConstantInt **)v563, (llvm::LLVMContext *)&v999, v564);
                                            Splat = v632;
                                            if ((*((_DWORD *)v563 + 2) & 0xFE) == 0x12) {
                                              Splat = llvm::ConstantVector::getSplat((llvm::Type *)(*((unsigned int *)v563 + 8) | ((unint64_t)(*((_DWORD *)v563 + 2) == 19) << 32)), (uint64_t)v632);
                                            }
                                            size_t v634 = v996;
                                            LOWORD(v990) = 257;
                                            char v635 = 15;
                                            goto LABEL_1306;
                                          }
                                          if (*(_WORD *)(v514 + 18) == 15)
                                          {
                                            if (sub_1CBF5295C((uint64_t)&v988, *(llvm::Constant **)(v514- 32* (*(_DWORD *)(v514 + 20) & 0x7FFFFFF))))
                                            {
                                              uint64_t v570 = *(void *)(v514 - 32 * (*(_DWORD *)(v514 + 20) & 0x7FFFFFF) + 32);
                                              if (v570) {
                                                goto LABEL_1052;
                                              }
                                            }
                                          }
LABEL_1124:
                                          unsigned int v648 = *((_DWORD *)v997 + 2);
                                          if (v648 > 0x40)
                                          {
                                            if (((*(void *)(*(void *)v997 + 8 * ((v648 - 1) >> 6)) >> (v648 - 1)) & 1) == 0
                                              || llvm::APInt::countTrailingZerosSlowCase((unint64_t **)v997) != v648 - 1)
                                            {
                                              goto LABEL_1144;
                                            }
                                          }
                                          else if (*(void *)v997 != 1 << (v648 - 1))
                                          {
                                            goto LABEL_1144;
                                          }
                                          *(void *)&long long v988 = &v996;
                                          *((void *)&v988 + 1) = &v986;
                                          *(void *)&long long v989 = 0;
                                          int v649 = *(unsigned __int8 *)(v514 + 16);
                                          if (v649 != 5)
                                          {
                                            if (v649 != 41) {
                                              goto LABEL_1144;
                                            }
                                            if (!*(void *)(v514 - 64)) {
                                              goto LABEL_1144;
                                            }
                                            v996 = *(llvm **)(v514 - 64);
                                            if (!sub_1CBF528D8((uint64_t)&v988 + 8, *(unsigned __int8 **)(v514 - 32)))goto LABEL_1144; {
LABEL_1134:
                                            }
                                            v651 = v996;
                                            unsigned int v652 = *((_DWORD *)v986 + 2);
                                            if (v652 >= 0x41) {
                                              operator new[]();
                                            }
                                            uint64_t v653 = *(void *)v997 + *(void *)v986;
                                            unint64_t v654 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v652;
                                            if (!v652) {
                                              unint64_t v654 = 0;
                                            }
                                            LODWORD(v1000) = *((_DWORD *)v986 + 2);
                                            uint64_t v999 = v654 & v653;
                                            int v655 = (llvm *)llvm::ConstantInt::get(*(llvm::ConstantInt **)v563, (llvm::LLVMContext *)&v999, v564);
                                            size_t v634 = v655;
                                            if ((*((_DWORD *)v563 + 2) & 0xFE) == 0x12) {
                                              size_t v634 = llvm::ConstantVector::getSplat((llvm::Type *)(*((unsigned int *)v563 + 8) | ((unint64_t)(*((_DWORD *)v563 + 2) == 19) << 32)), (uint64_t)v655);
                                            }
                                            LOWORD(v990) = 257;
                                            char v635 = 13;
                                            goto LABEL_1305;
                                          }
                                          if (*(_WORD *)(v514 + 18) == 13)
                                          {
                                            uint64_t v650 = (llvm **)(v514 - 32 * (*(_DWORD *)(v514 + 20) & 0x7FFFFFF));
                                            if (*v650)
                                            {
                                              v996 = *v650;
                                              if (sub_1CBF5295C((uint64_t)&v988 + 8, v650[4])) {
                                                goto LABEL_1134;
                                              }
                                            }
                                          }
LABEL_1144:
                                          *(void *)&long long v988 = &v996;
                                          *((void *)&v988 + 1) = &v986;
                                          *(void *)&long long v989 = 0;
                                          int v656 = *(unsigned __int8 *)(v514 + 16);
                                          if (v656 == 5)
                                          {
                                            if (*(_WORD *)(v514 + 18) != 29) {
                                              goto LABEL_1155;
                                            }
                                            uint64_t v657 = v514 - 32 * (*(_DWORD *)(v514 + 20) & 0x7FFFFFF);
                                            if (!*(void *)v657) {
                                              goto LABEL_1155;
                                            }
                                            v996 = *(llvm **)v657;
                                            if (!sub_1CBF5295C((uint64_t)&v988 + 8, *(llvm::Constant **)(v657 + 32)))goto LABEL_1155; {
                                          }
                                            }
                                          else
                                          {
                                            if (v656 != 57) {
                                              goto LABEL_1155;
                                            }
                                            if (!*(void *)(v514 - 64)) {
                                              goto LABEL_1155;
                                            }
                                            v996 = *(llvm **)(v514 - 64);
                                            if ((sub_1CBF528D8((uint64_t)&v988 + 8, *(unsigned __int8 **)(v514 - 32)) & 1) == 0) {
                                              goto LABEL_1155;
                                            }
                                          }
                                          if (llvm::MaskedValueIsZero(v996, v986, *(const llvm::APInt **)(a1 + 80), 0, *(const llvm::DataLayout **)(a1 + 56), (llvm::AssumptionCache *)a2, *(const llvm::Instruction **)(a1 + 72), (const llvm::DominatorTree *)1, v978))
                                          {
                                            v651 = v996;
                                            if (*((_DWORD *)v986 + 2) > 0x40u) {
                                              operator new[]();
                                            }
                                            uint64_t v658 = (const char *)(*(void *)v997 ^ *(void *)v986);
                                            LODWORD(v1000) = *((_DWORD *)v986 + 2);
                                            uint64_t v999 = (uint64_t)v658;
                                            unsigned int v728 = (llvm *)llvm::ConstantInt::get(*(llvm::ConstantInt **)v563, (llvm::LLVMContext *)&v999, v564);
                                            size_t v634 = v728;
                                            if ((*((_DWORD *)v563 + 2) & 0xFE) == 0x12) {
                                              size_t v634 = llvm::ConstantVector::getSplat((llvm::Type *)(*((unsigned int *)v563 + 8) | ((unint64_t)(*((_DWORD *)v563 + 2) == 19) << 32)), (uint64_t)v728);
                                            }
                                            LOWORD(v990) = 257;
LABEL_1304:
                                            char v635 = 30;
LABEL_1305:
                                            Splat = v651;
LABEL_1306:
                                            uint64_t v16 = (uint64_t)llvm::BinaryOperator::Create(v635, Splat, (uint64_t)v634, (const char **)&v988, 0);
                                            if (v1000 >= 0x41 && v999) {
                                              MEMORY[0x1D25D9CB0](v999, 0x1000C8000313F17);
                                            }
                                            return (llvm::Value *)v16;
                                          }
LABEL_1155:
                                          *(void *)&long long v988 = &v996;
                                          *((void *)&v988 + 1) = &v986;
                                          *(void *)&long long v989 = 0;
                                          uint64_t v659 = *(void *)(v514 + 8);
                                          if (!v659 || *(void *)(v659 + 8))
                                          {
LABEL_1157:
                                            *(void *)&long long v988 = &v996;
                                            *((void *)&v988 + 1) = &v986;
                                            *(void *)&long long v989 = 0;
                                            uint64_t v660 = *(void *)(v514 + 8);
                                            if (!v660 || *(void *)(v660 + 8)) {
                                              goto LABEL_1159;
                                            }
                                            int v670 = *(unsigned __int8 *)(v514 + 16);
                                            if (v670 == 5)
                                            {
                                              if (*(_WORD *)(v514 + 18) != 26) {
                                                goto LABEL_1159;
                                              }
                                              uint64_t v686 = v514 - 32 * (*(_DWORD *)(v514 + 20) & 0x7FFFFFF);
                                              if (!*(void *)v686) {
                                                goto LABEL_1159;
                                              }
                                              v996 = *(llvm **)v686;
                                              if (!sub_1CBF5295C((uint64_t)&v988 + 8, *(llvm::Constant **)(v686 + 32)))goto LABEL_1159; {
                                            }
                                              }
                                            else
                                            {
                                              if (v670 != 54) {
                                                goto LABEL_1159;
                                              }
                                              if (!*(void *)(v514 - 64)) {
                                                goto LABEL_1159;
                                              }
                                              v996 = *(llvm **)(v514 - 64);
                                              if ((sub_1CBF528D8((uint64_t)&v988 + 8, *(unsigned __int8 **)(v514 - 32)) & 1) == 0) {
                                                goto LABEL_1159;
                                              }
                                            }
                                            uint64_t v687 = (const void **)v997;
                                            uint64_t v688 = v563;
                                            if ((*((_DWORD *)v563 + 2) & 0xFE) == 0x12) {
                                              uint64_t v688 = (llvm::Type *)**((void **)v563 + 2);
                                            }
                                            unsigned int v689 = llvm::Type::getPrimitiveSizeInBits(v688);
                                            unsigned int v984 = v689;
                                            if (v689 > 0x40) {
                                              llvm::APInt::initSlowCase((llvm::APInt *)&__src);
                                            }
                                            if (v689) {
                                              unint64_t v690 = (void *)(0xFFFFFFFFFFFFFFFFLL >> -(char)v689);
                                            }
                                            else {
                                              unint64_t v690 = 0;
                                            }
                                            unint64_t __src = v690;
                                            LODWORD(v1000) = v689;
                                            uint64_t v999 = (uint64_t)v690;
                                            llvm::APInt::lshrInPlace((llvm::APInt *)&v999, v986);
                                            uint64_t v691 = *((unsigned int *)v687 + 2);
                                            uint64_t v692 = v999;
                                            if (v691 > 0x40) {
                                              BOOL v693 = memcmp(*v687, (const void *)v999, ((unint64_t)(v691 + 63) >> 3) & 0x3FFFFFF8) == 0;
                                            }
                                            else {
                                              BOOL v693 = *v687 == (const void *)v999;
                                            }
                                            int v732 = v693;
                                            if (v1000 >= 0x41 && v692) {
                                              MEMORY[0x1D25D9CB0](v692, 0x1000C8000313F17);
                                            }
                                            if (v984 >= 0x41 && __src) {
                                              MEMORY[0x1D25D9CB0](__src, 0x1000C8000313F17);
                                            }
                                            if (!v732)
                                            {
LABEL_1159:
                                              if (*(unsigned char *)(v515 + 16) != 16) {
                                                goto LABEL_1232;
                                              }
                                              int v661 = *(unsigned __int8 *)(v514 + 16);
                                              if (v661 == 5)
                                              {
                                                if (*(_WORD *)(v514 + 18) != 26) {
                                                  goto LABEL_1232;
                                                }
                                                v666 = (void *)(v514 - 32 * (*(_DWORD *)(v514 + 20) & 0x7FFFFFF));
                                                uint64_t v667 = *v666;
                                                int v668 = *(unsigned __int8 *)(*v666 + 16);
                                                if (v668 == 5)
                                                {
                                                  if (*(_WORD *)(v667 + 18) != 30) {
                                                    goto LABEL_1232;
                                                  }
                                                  int v694 = (uint64_t *)(v667 - 32 * (*(_DWORD *)(v667 + 20) & 0x7FFFFFF));
                                                  uint64_t v664 = *v694;
                                                  if (!*v694) {
                                                    goto LABEL_1232;
                                                  }
                                                  uint64_t v665 = v694[4];
                                                }
                                                else
                                                {
                                                  if (v668 != 58) {
                                                    goto LABEL_1232;
                                                  }
                                                  uint64_t v664 = *(void *)(v667 - 64);
                                                  if (!v664) {
                                                    goto LABEL_1232;
                                                  }
                                                  uint64_t v665 = *(void *)(v667 - 32);
                                                }
                                                if (v665) {
                                                  BOOL v695 = *(unsigned char *)(v665 + 16) == 16;
                                                }
                                                else {
                                                  BOOL v695 = 0;
                                                }
                                                if (v695)
                                                {
                                                  uint64_t v673 = v666[4];
                                                  if (v673)
                                                  {
LABEL_1229:
                                                    if (*(unsigned char *)(v673 + 16) != 16) {
                                                      goto LABEL_1232;
                                                    }
                                                    uint64_t v696 = *(void *)(v514 + 8);
                                                    if (!v696 || *(void *)(v696 + 8)) {
                                                      goto LABEL_1232;
                                                    }
                                                    LODWORD(v1000) = *(_DWORD *)(v665 + 32);
                                                    if (v1000 > 0x40) {
                                                      operator new[]();
                                                    }
                                                    uint64_t v999 = *(void *)(v665 + 24);
                                                    llvm::APInt::lshrInPlace((llvm::APInt *)&v999, (const llvm::APInt *)(v673 + 24));
                                                    if (v1000 > 0x40)
                                                    {
                                                      v755 = (void *)v999;
                                                      uint64_t v756 = *(uint64_t **)(v515 + 24);
                                                      unint64_t v757 = ((unint64_t)v1000 + 63) >> 6;
                                                      do
                                                      {
                                                        uint64_t v758 = *v756++;
                                                        *v755++ ^= v758;
                                                        --v757;
                                                      }
                                                      while (v757);
                                                    }
                                                    else
                                                    {
                                                      v999 ^= *(void *)(v515 + 24);
                                                    }
                                                    uint64_t v759 = *(void *)(a1 + 24);
                                                    LOWORD(v990) = 257;
                                                    v651 = sub_1CC2429AC(v759, v664, v673, (uint64_t)&v988, 0);
                                                    llvm::Value::takeName((int32x2_t ****)v651, (llvm::Value *)v514);
                                                    size_t v634 = (llvm *)llvm::ConstantInt::get(*(llvm::ConstantInt **)v563, (llvm::LLVMContext *)&v999, v760);
                                                    if ((*((_DWORD *)v563 + 2) & 0xFE) == 0x12) {
                                                      size_t v634 = llvm::ConstantVector::getSplat((llvm::Type *)(*((unsigned int *)v563 + 8) | ((unint64_t)(*((_DWORD *)v563 + 2) == 19) << 32)), (uint64_t)v634);
                                                    }
                                                    LOWORD(v990) = 257;
                                                    goto LABEL_1304;
                                                  }
                                                }
                                              }
                                              else
                                              {
                                                if (v661 != 54) {
                                                  goto LABEL_1232;
                                                }
                                                uint64_t v662 = *(void *)(v514 - 64);
                                                int v663 = *(unsigned __int8 *)(v662 + 16);
                                                if (v663 != 5)
                                                {
                                                  if (v663 != 58) {
                                                    goto LABEL_1232;
                                                  }
                                                  uint64_t v664 = *(void *)(v662 - 64);
                                                  if (!v664) {
                                                    goto LABEL_1232;
                                                  }
                                                  uint64_t v665 = *(void *)(v662 - 32);
                                                  if (!v665 || *(unsigned char *)(v665 + 16) != 16) {
                                                    goto LABEL_1232;
                                                  }
                                                  goto LABEL_1190;
                                                }
                                                if (*(_WORD *)(v662 + 18) == 30)
                                                {
                                                  int v671 = (uint64_t *)(v662 - 32 * (*(_DWORD *)(v662 + 20) & 0x7FFFFFF));
                                                  uint64_t v664 = *v671;
                                                  if (*v671)
                                                  {
                                                    uint64_t v665 = v671[4];
                                                    if (v665 && *(unsigned char *)(v665 + 16) == 16)
                                                    {
LABEL_1190:
                                                      uint64_t v673 = *(void *)(v514 - 32);
                                                      if (!v673) {
                                                        goto LABEL_1232;
                                                      }
                                                      goto LABEL_1229;
                                                    }
                                                  }
                                                }
                                              }
LABEL_1232:
                                              uint64_t v16 = (uint64_t)sub_1CC9D74E0(a1, a2, (uint64_t)v564, (uint64_t)v565, v566);
                                              if (v16) {
                                                return (llvm::Value *)v16;
                                              }
                                              uint64_t v698 = *(void *)(v515 + 8);
                                              if (!v698 || *(void *)(v698 + 8))
                                              {
LABEL_1235:
                                                uint64_t v699 = *(void *)(v514 + 8);
                                                if (!v699 || *(void *)(v699 + 8))
                                                {
LABEL_1237:
                                                  if (!v698)
                                                  {
                                                    unsigned int v701 = *(unsigned __int8 *)(v515 + 16);
                                                    goto LABEL_1245;
                                                  }
                                                  uint64_t v700 = *(void *)(v698 + 8);
                                                  unsigned int v701 = *(unsigned __int8 *)(v515 + 16);
                                                  if (!v700)
                                                  {
                                                    if (v701 == 5)
                                                    {
                                                      if (*(_WORD *)(v515 + 18) != 28) {
                                                        goto LABEL_1248;
                                                      }
                                                      uint64_t v703 = v515 - 32 * (*(_DWORD *)(v515 + 20) & 0x7FFFFFF);
                                                      int v702 = *(llvm::Type **)v703;
                                                      if (*(void *)v703)
                                                      {
                                                        v998 = *(llvm::Type **)v703;
                                                        uint64_t v704 = *(llvm::Type **)(v703 + 32);
                                                        if ((llvm::Type *)v514 == v704) {
                                                          goto LABEL_1356;
                                                        }
                                                      }
                                                      else
                                                      {
                                                        uint64_t v704 = *(llvm::Type **)(v703 + 32);
                                                      }
                                                      if (!v704) {
                                                        goto LABEL_1248;
                                                      }
                                                    }
                                                    else
                                                    {
                                                      if (v701 != 56) {
                                                        goto LABEL_1245;
                                                      }
                                                      uint64_t v703 = v515 - 64;
                                                      int v702 = *(llvm::Type **)(v515 - 64);
                                                      if (v702)
                                                      {
                                                        v998 = *(llvm::Type **)(v515 - 64);
                                                        uint64_t v704 = *(llvm::Type **)(v515 - 32);
                                                        if ((llvm::Type *)v514 == v704) {
                                                          goto LABEL_1356;
                                                        }
                                                      }
                                                      else
                                                      {
                                                        uint64_t v704 = *(llvm::Type **)(v515 - 32);
                                                      }
                                                      if (!v704)
                                                      {
                                                        if (!v699) {
                                                          goto LABEL_1248;
                                                        }
                                                        goto LABEL_1247;
                                                      }
                                                    }
                                                    v998 = v704;
                                                    int v702 = v704;
                                                    if (v514 == *(void *)v703)
                                                    {
LABEL_1356:
                                                      uint64_t v737 = *(void *)(a1 + 24);
                                                      LOWORD(v990) = 257;
                                                      int v556 = sub_1CC2427E8(v737, (uint64_t)v702, (uint64_t)&v988, v697);
                                                      __int16 v1002 = 257;
                                                      p_src = (void **)&v999;
                                                      char v554 = 28;
                                                      uint64_t v555 = (llvm::Instruction *)v514;
                                                      return llvm::BinaryOperator::Create(v554, v555, (uint64_t)v556, (const char **)p_src, 0);
                                                    }
                                                  }
LABEL_1245:
                                                  if (!v699 || v701 < 0x15) {
                                                    goto LABEL_1248;
                                                  }
LABEL_1247:
                                                  if (*(void *)(v699 + 8)) {
                                                    goto LABEL_1248;
                                                  }
                                                  int v719 = *(unsigned __int8 *)(v514 + 16);
                                                  if (v719 == 5)
                                                  {
                                                    if (*(_WORD *)(v514 + 18) != 28) {
                                                      goto LABEL_1248;
                                                    }
                                                    uint64_t v721 = v514 - 32 * (*(_DWORD *)(v514 + 20) & 0x7FFFFFF);
                                                    uint64_t v720 = *(llvm::Type **)v721;
                                                    if (*(void *)v721)
                                                    {
                                                      v998 = *(llvm::Type **)v721;
                                                      uint64_t v722 = *(llvm::Type **)(v721 + 32);
LABEL_1298:
                                                      if ((llvm::Type *)v515 == v722)
                                                      {
LABEL_1376:
                                                        uint64_t v743 = *(void *)(a1 + 24);
                                                        LOWORD(v990) = 257;
                                                        int v556 = sub_1CC2427E8(v743, (uint64_t)v720, (uint64_t)&v988, v697);
                                                        __int16 v1002 = 257;
                                                        p_src = (void **)&v999;
                                                        char v554 = 28;
                                                        uint64_t v555 = (llvm::Instruction *)v515;
                                                        return llvm::BinaryOperator::Create(v554, v555, (uint64_t)v556, (const char **)p_src, 0);
                                                      }
                                                      goto LABEL_1374;
                                                    }
                                                    uint64_t v722 = *(llvm::Type **)(v721 + 32);
                                                  }
                                                  else
                                                  {
                                                    if (v719 != 56) {
                                                      goto LABEL_1248;
                                                    }
                                                    uint64_t v721 = v514 - 64;
                                                    uint64_t v720 = *(llvm::Type **)(v514 - 64);
                                                    if (v720)
                                                    {
                                                      v998 = *(llvm::Type **)(v514 - 64);
                                                      uint64_t v722 = *(llvm::Type **)(v514 - 32);
                                                      goto LABEL_1298;
                                                    }
                                                    uint64_t v722 = *(llvm::Type **)(v514 - 32);
                                                  }
LABEL_1374:
                                                  if (v722)
                                                  {
                                                    v998 = v722;
                                                    uint64_t v720 = v722;
                                                    if (v515 == *(void *)v721) {
                                                      goto LABEL_1376;
                                                    }
                                                  }
LABEL_1248:
                                                  v996 = 0;
                                                  v997 = 0;
                                                  v986 = 0;
                                                  *(void *)&long long v988 = &v997;
                                                  *((void *)&v988 + 1) = &v996;
                                                  *(void *)&long long v989 = &v997;
                                                  *((void *)&v989 + 1) = &v986;
                                                  if (sub_1CCA17584((void **)&v988, (uint64_t)a2))
                                                  {
                                                    uint64_t v706 = *(void *)(a1 + 24);
                                                    LOWORD(v990) = 257;
                                                    uint64_t v707 = sub_1CC2427E8(v706, (uint64_t)v997, (uint64_t)&v988, v705);
                                                    __int16 v1002 = 257;
                                                    uint64_t v555 = sub_1CBF52474(v706, v707, (uint64_t)v986, (uint64_t)&v999);
                                                    int v556 = v996;
LABEL_1252:
                                                    __int16 v985 = 257;
                                                    p_src = &__src;
                                                    char v554 = 30;
                                                    return llvm::BinaryOperator::Create(v554, v555, (uint64_t)v556, (const char **)p_src, 0);
                                                  }
                                                  *(void *)&long long v988 = &v997;
                                                  *((void *)&v988 + 1) = &v996;
                                                  *(void *)&long long v989 = &v996;
                                                  *((void *)&v989 + 1) = &v986;
                                                  if (sub_1CCA17584((void **)&v988, (uint64_t)a2))
                                                  {
                                                    uint64_t v709 = *(void *)(a1 + 24);
                                                    LOWORD(v990) = 257;
                                                    uint64_t v710 = sub_1CC2427E8(v709, (uint64_t)v996, (uint64_t)&v988, v708);
                                                    __int16 v1002 = 257;
                                                    uint64_t v555 = sub_1CBF52474(v709, v710, (uint64_t)v986, (uint64_t)&v999);
                                                    int v556 = v997;
                                                    goto LABEL_1252;
                                                  }
                                                  int v718 = *(unsigned __int8 *)(v514 + 16);
                                                  switch(v718)
                                                  {
                                                    case 5:
                                                      int v723 = *(unsigned __int16 *)(v514 + 18);
                                                      if (v723 != 28) {
                                                        goto LABEL_1367;
                                                      }
                                                      v724 = (llvm::Instruction **)(v514
                                                                                  - 32
                                                                                  * (*(_DWORD *)(v514 + 20) & 0x7FFFFFF));
                                                      uint64_t v555 = *v724;
                                                      if (!*v724) {
                                                        goto LABEL_1383;
                                                      }
                                                      v997 = *v724;
                                                      int v556 = v724[4];
                                                      if (!v556) {
                                                        goto LABEL_1383;
                                                      }
                                                      break;
                                                    case 58:
                                                      uint64_t v555 = *(llvm::Instruction **)(v514 - 64);
                                                      if (!v555) {
                                                        goto LABEL_1383;
                                                      }
                                                      v997 = *(llvm **)(v514 - 64);
                                                      int v556 = *(llvm **)(v514 - 32);
                                                      if (!v556) {
                                                        goto LABEL_1383;
                                                      }
                                                      goto LABEL_1370;
                                                    case 56:
                                                      uint64_t v555 = *(llvm::Instruction **)(v514 - 64);
                                                      if (!v555) {
                                                        goto LABEL_1383;
                                                      }
                                                      v997 = *(llvm **)(v514 - 64);
                                                      int v556 = *(llvm **)(v514 - 32);
                                                      if (!v556) {
                                                        goto LABEL_1383;
                                                      }
                                                      break;
                                                    default:
                                                      goto LABEL_1383;
                                                  }
                                                  v996 = v556;
                                                  int v725 = *(unsigned __int8 *)(v515 + 16);
                                                  if (v725 == 5)
                                                  {
                                                    if (*(_WORD *)(v515 + 18) == 30)
                                                    {
                                                      uint64_t v738 = (llvm::Instruction **)(v515
                                                                                  - 32
                                                                                  * (*(_DWORD *)(v515 + 20) & 0x7FFFFFF));
                                                      uint64_t v726 = *v738;
                                                      v727 = v738[4];
LABEL_1361:
                                                      if (v555 == v726 && v556 == v727 || v555 == v727 && v556 == v726) {
                                                        goto LABEL_1442;
                                                      }
                                                    }
                                                  }
                                                  else if (v725 == 58)
                                                  {
                                                    uint64_t v726 = *(llvm::Instruction **)(v515 - 64);
                                                    v727 = *(llvm **)(v515 - 32);
                                                    goto LABEL_1361;
                                                  }
                                                  if (v718 != 5) {
                                                    goto LABEL_1383;
                                                  }
                                                  int v723 = *(unsigned __int16 *)(v514 + 18);
LABEL_1367:
                                                  if (v723 != 30) {
                                                    goto LABEL_1383;
                                                  }
                                                  uint64_t v739 = (llvm::Instruction **)(v514
                                                                              - 32
                                                                              * (*(_DWORD *)(v514 + 20) & 0x7FFFFFF));
                                                  uint64_t v555 = *v739;
                                                  if (!*v739) {
                                                    goto LABEL_1383;
                                                  }
                                                  v997 = *v739;
                                                  int v556 = v739[4];
                                                  if (!v556) {
                                                    goto LABEL_1383;
                                                  }
LABEL_1370:
                                                  v996 = v556;
                                                  int v740 = *(unsigned __int8 *)(v515 + 16);
                                                  if (v740 == 5)
                                                  {
                                                    if (*(_WORD *)(v515 + 18) != 28) {
                                                      goto LABEL_1383;
                                                    }
                                                    int v744 = (llvm::Instruction **)(v515
                                                                                - 32
                                                                                * (*(_DWORD *)(v515 + 20) & 0x7FFFFFF));
                                                    uint64_t v741 = *v744;
                                                    uint64_t v742 = v744[4];
                                                  }
                                                  else
                                                  {
                                                    if (v740 != 56) {
                                                      goto LABEL_1383;
                                                    }
                                                    uint64_t v741 = *(llvm::Instruction **)(v515 - 64);
                                                    uint64_t v742 = *(llvm **)(v515 - 32);
                                                  }
                                                  if (v555 == v741 && v556 == v742 || v555 == v742 && v556 == v741) {
                                                    goto LABEL_1442;
                                                  }
LABEL_1383:
                                                  *(void *)&long long v988 = &v997;
                                                  *((void *)&v988 + 1) = &v996;
                                                  uint64_t v567 = sub_1CC04308C((void **)&v988, 28, v514);
                                                  if (!v567) {
                                                    goto LABEL_1408;
                                                  }
                                                  unint64_t v750 = v997;
                                                  uint64_t v999 = (uint64_t)v997;
                                                  int v751 = *(unsigned __int8 *)(v515 + 16);
                                                  if (v751 == 5)
                                                  {
                                                    if (*(_WORD *)(v515 + 18) != 30) {
                                                      goto LABEL_1408;
                                                    }
                                                    uint64_t v752 = *(_DWORD *)(v515 + 20) & 0x7FFFFFF;
                                                    uint64_t v753 = v515 - 32 * v752;
                                                    if (v997 == *(llvm **)v753)
                                                    {
                                                      uint64_t v567 = sub_1CBF68974((uint64_t)&v1000, *(llvm::Constant **)(v753 + 32));
                                                      if (v567) {
                                                        goto LABEL_1407;
                                                      }
                                                      unint64_t v750 = (void *)v999;
                                                      uint64_t v754 = -(uint64_t)(*(_DWORD *)(v515 + 20) & 0x7FFFFFF);
                                                    }
                                                    else
                                                    {
                                                      uint64_t v754 = -v752;
                                                    }
                                                    uint64_t v761 = v515 + 32 * v754;
                                                    if (v750 != *(void **)(v761 + 32)
                                                      || (uint64_t v567 = sub_1CBF68974((uint64_t)&v1000, *(llvm::Constant **)v761), !v567))
                                                    {
LABEL_1408:
                                                      *(void *)&long long v988 = &v997;
                                                      *(void *)&long long v989 = &v996;
                                                      *((void *)&v989 + 1) = &v997;
                                                      int v765 = *((unsigned __int8 *)a2 + 16);
                                                      if (v765 == 5)
                                                      {
                                                        if (*((_WORD *)a2 + 9) == 30)
                                                        {
                                                          int v769 = (uint64_t *)&a2[-4 * (*((_DWORD *)a2 + 5) & 0x7FFFFFF)];
                                                          int v770 = sub_1CCA17AF0((void **)&v988, *v769, (char)v769);
                                                          unint64_t v771 = &a2[-4 * (*((_DWORD *)a2 + 5) & 0x7FFFFFF)];
                                                          uint64_t v772 = (uint64_t)v771[4];
                                                          if (v770)
                                                          {
                                                            unint64_t v771 = (llvm **)**((void **)&v989 + 1);
                                                            if (**((void **)&v989 + 1) == v772) {
                                                              goto LABEL_1441;
                                                            }
                                                          }
                                                          uint64_t v567 = sub_1CCA17AF0((void **)&v988, v772, (char)v771);
                                                          if (v567)
                                                          {
                                                            unint64_t v768 = (uint64_t *)&a2[-4 * (*((_DWORD *)a2 + 5) & 0x7FFFFFF)];
                                                            goto LABEL_1419;
                                                          }
                                                        }
                                                      }
                                                      else if (v765 == 58)
                                                      {
                                                        int v766 = sub_1CC046BB0((void **)&v988, 28, (uint64_t)*(a2 - 8));
                                                        uint64_t v767 = (uint64_t)*(a2 - 4);
                                                        if (!v766 || **((void **)&v989 + 1) != v767)
                                                        {
                                                          uint64_t v567 = sub_1CC046BB0((void **)&v988, 28, v767);
                                                          unint64_t v768 = v9;
                                                          if ((v567 & 1) == 0) {
                                                            goto LABEL_1420;
                                                          }
LABEL_1419:
                                                          if (**((void **)&v989 + 1) != *v768) {
                                                            goto LABEL_1420;
                                                          }
                                                        }
LABEL_1441:
                                                        int v556 = v996;
                                                        uint64_t v555 = v997;
LABEL_1442:
                                                        LOWORD(v990) = 257;
                                                        p_src = (void **)&v988;
                                                        char v554 = 29;
                                                        return llvm::BinaryOperator::Create(v554, v555, (uint64_t)v556, (const char **)p_src, 0);
                                                      }
LABEL_1420:
                                                      *(void *)&long long v988 = v515;
                                                      *(void *)&long long v989 = &v996;
                                                      uint64_t v773 = *(void *)(v514 + 8);
                                                      if (v773)
                                                      {
                                                        if (!*(void *)(v773 + 8))
                                                        {
                                                          uint64_t v567 = sub_1CCA17C0C((uint64_t *)&v988, 29, v514);
                                                          if (v567)
                                                          {
                                                            uint64_t v762 = *(void *)(a1 + 24);
                                                            v764 = v996;
                                                            LOWORD(v990) = 257;
                                                            unsigned int v763 = (void *)v515;
                                                            goto LABEL_1428;
                                                          }
                                                        }
                                                      }
                                                      *(void *)&long long v988 = v514;
                                                      *(void *)&long long v989 = &v996;
                                                      uint64_t v774 = *(void *)(v515 + 8);
                                                      if (v774)
                                                      {
                                                        if (!*(void *)(v774 + 8))
                                                        {
                                                          uint64_t v567 = sub_1CCA17C0C((uint64_t *)&v988, 29, v515);
                                                          if (v567)
                                                          {
                                                            uint64_t v762 = *(void *)(a1 + 24);
                                                            v764 = v996;
                                                            LOWORD(v990) = 257;
                                                            unsigned int v763 = (void *)v514;
                                                            goto LABEL_1428;
                                                          }
                                                        }
                                                      }
                                                      uint64_t v777 = *(void *)(v514 + 8);
                                                      if (v777 && !*(void *)(v777 + 8))
                                                      {
                                                        int v785 = *(unsigned __int8 *)(v514 + 16);
                                                        if (v785 == 5)
                                                        {
                                                          if (*(_WORD *)(v514 + 18) != 29) {
                                                            goto LABEL_1431;
                                                          }
                                                          unsigned int v787 = (llvm **)(v514
                                                                         - 32 * (*(_DWORD *)(v514 + 20) & 0x7FFFFFF));
                                                          unint64_t v786 = *v787;
                                                          if (!*v787) {
                                                            goto LABEL_1431;
                                                          }
                                                          v997 = *v787;
                                                          int v745 = v787[4];
                                                          if (!v745) {
                                                            goto LABEL_1431;
                                                          }
                                                        }
                                                        else
                                                        {
                                                          if (v785 != 57) {
                                                            goto LABEL_1431;
                                                          }
                                                          unint64_t v786 = *(llvm **)(v514 - 64);
                                                          if (!v786) {
                                                            goto LABEL_1431;
                                                          }
                                                          v997 = *(llvm **)(v514 - 64);
                                                          int v745 = *(llvm **)(v514 - 32);
                                                          if (!v745) {
                                                            goto LABEL_1431;
                                                          }
                                                        }
                                                        v996 = v745;
                                                        uint64_t v788 = *(void *)(v515 + 8);
                                                        if (v788 && !*(void *)(v788 + 8))
                                                        {
                                                          int v789 = *(unsigned __int8 *)(v515 + 16);
                                                          if (v789 == 5)
                                                          {
                                                            if (*(_WORD *)(v515 + 18) != 29) {
                                                              goto LABEL_1431;
                                                            }
                                                            v794 = (llvm::APInt **)(v515
                                                                                  - 32
                                                                                  * (*(_DWORD *)(v515 + 20) & 0x7FFFFFF));
                                                            int v790 = *v794;
                                                            if (!*v794) {
                                                              goto LABEL_1431;
                                                            }
                                                            v986 = *v794;
                                                            unsigned int v791 = v794[4];
                                                            if (!v791) {
                                                              goto LABEL_1431;
                                                            }
                                                          }
                                                          else
                                                          {
                                                            if (v789 != 57) {
                                                              goto LABEL_1431;
                                                            }
                                                            int v790 = *(llvm::APInt **)(v515 - 64);
                                                            if (!v790) {
                                                              goto LABEL_1431;
                                                            }
                                                            v986 = *(llvm::APInt **)(v515 - 64);
                                                            unsigned int v791 = *(llvm::APInt **)(v515 - 32);
                                                            if (!v791) {
                                                              goto LABEL_1431;
                                                            }
                                                          }
                                                          if (v745 == v790 || v745 == v791)
                                                          {
                                                            v996 = v786;
                                                            v997 = v745;
                                                          }
                                                          else
                                                          {
                                                            int v745 = v786;
                                                          }
                                                          if (v745 == v790) {
                                                            v986 = v791;
                                                          }
                                                          else {
                                                            int v790 = v791;
                                                          }
                                                          if (v745 == v790)
                                                          {
                                                            uint64_t v800 = *(void *)(a1 + 24);
                                                            LOWORD(v990) = 257;
                                                            unsigned int v801 = sub_1CC2427E8(v800, (uint64_t)v745, (uint64_t)&v988, v747);
                                                            uint64_t v802 = *(void *)(a1 + 24);
                                                            LOWORD(v990) = 257;
                                                            uint64_t v555 = sub_1CC2428C0(v802, (uint64_t)v996, (uint64_t)v986, (uint64_t)&v988);
                                                            __int16 v1002 = 257;
                                                            p_src = (void **)&v999;
                                                            char v554 = 28;
                                                            int v556 = v801;
                                                            return llvm::BinaryOperator::Create(v554, v555, (uint64_t)v556, (const char **)p_src, 0);
                                                          }
                                                        }
                                                      }
LABEL_1431:
                                                      uint64_t v515 = *v9;
                                                      if (!*v9) {
                                                        goto LABEL_1656;
                                                      }
                                                      if (*(unsigned char *)(v515 + 16) != 81) {
                                                        goto LABEL_1656;
                                                      }
                                                      uint64_t v514 = (uint64_t)*(a2 - 4);
                                                      if (!v514 || *(unsigned char *)(v514 + 16) != 81) {
                                                        goto LABEL_1656;
                                                      }
                                                      __int16 v778 = *(_WORD *)(v515 + 18);
                                                      __int16 v779 = v778 & 0x3F;
                                                      unsigned int v780 = (v778 & 0x3F) - 38;
                                                      unsigned int v781 = (*(_WORD *)(v514 + 18) & 0x3F) - 38;
                                                      if (v780 < 4 == v781 < 4)
                                                      {
                                                        v782 = (llvm::Constant ***)(v515 - 64);
                                                        uint64_t v647 = *(llvm::Constant ***)(v515 - 64);
                                                        v783 = (llvm::Constant ***)(v514 - 64);
LABEL_1437:
                                                        int v784 = *(llvm::Constant ***)(v514 - 64);
                                                        if (v647 == *(llvm::Constant ***)(v514 - 32)
                                                          && *(llvm::Constant ***)(v515 - 32) == v784)
                                                        {
                                                          switch(v778 & 0x3F)
                                                          {
                                                            case 2:
                                                              __int16 v779 = 4;
                                                              goto LABEL_1510;
                                                            case 3:
                                                              __int16 v779 = 5;
                                                              goto LABEL_1510;
                                                            case 4:
                                                              __int16 v779 = 2;
                                                              goto LABEL_1510;
                                                            case 5:
                                                              __int16 v779 = 3;
                                                              goto LABEL_1510;
                                                            case 0xA:
                                                              __int16 v779 = 12;
                                                              goto LABEL_1510;
                                                            case 0xB:
                                                              __int16 v779 = 13;
                                                              goto LABEL_1510;
                                                            case 0xC:
                                                              __int16 v779 = 10;
                                                              goto LABEL_1510;
                                                            case 0xD:
                                                              __int16 v779 = 11;
                                                              goto LABEL_1510;
                                                            case 0x10:
                                                            case 0x11:
                                                            case 0x12:
                                                            case 0x13:
                                                            case 0x14:
                                                            case 0x15:
                                                            case 0x16:
                                                            case 0x17:
                                                            case 0x18:
                                                            case 0x19:
                                                            case 0x1A:
                                                            case 0x1B:
                                                            case 0x1C:
                                                            case 0x1D:
                                                            case 0x1E:
                                                            case 0x1F:
                                                              __break(1u);
                                                              goto LABEL_1866;
                                                            case 0x22:
                                                              __int16 v779 = 36;
                                                              goto LABEL_1510;
                                                            case 0x23:
                                                              __int16 v779 = 37;
                                                              goto LABEL_1510;
                                                            case 0x24:
                                                              __int16 v779 = 34;
                                                              goto LABEL_1510;
                                                            case 0x25:
                                                              __int16 v779 = 35;
                                                              goto LABEL_1510;
                                                            case 0x26:
                                                              __int16 v779 = 40;
                                                              goto LABEL_1510;
                                                            case 0x27:
                                                              __int16 v779 = 41;
                                                              goto LABEL_1510;
                                                            case 0x28:
                                                              __int16 v779 = 38;
                                                              goto LABEL_1510;
                                                            case 0x29:
                                                              __int16 v779 = 39;
                                                              goto LABEL_1510;
                                                            default:
LABEL_1510:
                                                              __int16 v778 = v779 | v778 & 0xFFC0;
                                                              *(_WORD *)(v515 + 18) = v778;
                                                              if (v647 != v784)
                                                              {
                                                                uint64_t v803 = *(void *)(v515 - 24);
                                                                *(void *)(v515 - 64) = v784;
                                                                *(void *)(v515 - 32) = v647;
                                                                long long v804 = *(_OWORD *)(v515 - 56);
                                                                v805 = *(llvm::Constant *****)(v515 - 16);
                                                                *(void *)(v515 - 56) = v803;
                                                                *(void *)(v515 - 48) = v805;
                                                                *(_OWORD *)(v515 - 24) = v804;
                                                                llvm::Value *v805 = v782;
                                                                uint64_t v806 = *(void *)(v515 - 56);
                                                                if (v806) {
                                                                  *(void *)(v806 + 16) = v515 - 56;
                                                                }
                                                                **(void **)(v515 - 16) = v515 - 32;
                                                                uint64_t v807 = *(void *)(v515 - 24);
                                                                if (v807) {
                                                                  *(void *)(v807 + 16) = v515 - 24;
                                                                }
                                                              }
                                                              uint64_t v647 = *v782;
                                                              int v784 = *v783;
                                                              break;
                                                          }
                                                        }
                                                        if (v647 == v784)
                                                        {
                                                          uint64_t v808 = *(void *)(v515 - 32);
                                                          if (v808 == *(void *)(v514 - 32))
                                                          {
                                                            uint64_t v815 = *(_WORD *)(v514 + 18) & 0x3F;
                                                            BOOL v817 = (v778 & 0x3Fu) - 38 < 4
                                                                || (v815 - 38) < 4;
                                                            int v818 = sub_1CC9FDA70(dword_1CFB276E4[v815 - 32] ^ dword_1CFB276E4[(v778 & 0x3F) - 32], v817, v784, v808, *(void *)(a1 + 24));
LABEL_1655:
                                                            unint64_t v14 = v818;
                                                            if (v818) {
                                                              return (llvm::Value *)sub_1CC9D3C84(a1, (llvm::ValueAsMetadata *)a2, v14);
                                                            }
LABEL_1656:
                                                            uint64_t v16 = (uint64_t)sub_1CCA002D4(a1, (unsigned __int8 *)a2);
                                                            if (v16) {
                                                              return (llvm::Value *)v16;
                                                            }
                                                            uint64_t v888 = *(void *)(a1 + 24);
                                                            uint64_t v889 = (uint64_t)*(a2 - 8);
                                                            v890 = (const char *)*(a2 - 4);
                                                            uint64_t v891 = *(void *)(v889 + 8);
                                                            if (v891)
                                                            {
                                                              uint64_t v892 = *(void *)(v891 + 8);
                                                              if (v892)
                                                              {
                                                                uint64_t v893 = *(void *)(v892 + 8);
                                                                BOOL v894 = v893 == 0;
                                                                if (v893) {
                                                                  v895 = (const char *)*(a2 - 4);
                                                                }
                                                                else {
                                                                  v895 = (const char *)*(a2 - 8);
                                                                }
                                                                if (v894) {
                                                                  uint64_t v889 = (uint64_t)*(a2 - 4);
                                                                }
                                                                v890 = v895;
                                                              }
                                                            }
                                                            v896 = *a2;
                                                            unint64_t __src = 0;
                                                            *(void *)&long long v988 = &v999;
                                                            *((void *)&v988 + 1) = &__src;
                                                            *(void *)&long long v989 = 0;
                                                            int v897 = *((unsigned __int8 *)v890 + 16);
                                                            if (v897 == 5)
                                                            {
                                                              if (*((_WORD *)v890 + 9) != 27) {
                                                                goto LABEL_1676;
                                                              }
                                                              v898 = &v890[-32 * (*((_DWORD *)v890 + 5) & 0x7FFFFFF)];
                                                              if (!*(void *)v898) {
                                                                goto LABEL_1676;
                                                              }
                                                              uint64_t v999 = *(void *)v898;
                                                              if (!sub_1CBF5295C((uint64_t)&v988 + 8, *((llvm::Constant **)v898 + 4)))goto LABEL_1676; {
                                                            }
                                                              }
                                                            else
                                                            {
                                                              if (v897 != 55) {
                                                                goto LABEL_1676;
                                                              }
                                                              if (!*((void *)v890 - 8)) {
                                                                goto LABEL_1676;
                                                              }
                                                              uint64_t v999 = *((void *)v890 - 8);
                                                              if ((sub_1CBF528D8((uint64_t)&v988 + 8, *((unsigned __int8 **)v890 - 4)) & 1) == 0)goto LABEL_1676; {
                                                            }
                                                              }
                                                            uint64_t v899 = *((void *)v890 + 1);
                                                            if (!v899) {
                                                              goto LABEL_1676;
                                                            }
                                                            uint64_t v900 = *(void *)(v899 + 8);
                                                            if (!v900 || *(void *)(v900 + 8)) {
                                                              goto LABEL_1676;
                                                            }
                                                            v925 = (unsigned int *)__src;
                                                            v926 = v896;
                                                            if ((*((_DWORD *)v896 + 2) & 0xFE) == 0x12) {
                                                              v926 = (llvm::Type *)**((void **)v896 + 2);
                                                            }
                                                            int v927 = llvm::Type::getPrimitiveSizeInBits(v926);
                                                            uint64_t v930 = v925[2];
                                                            if (v930 >= 0x41)
                                                            {
                                                              int v931 = 0;
                                                              int64_t v932 = (unint64_t)(v930 + 63) >> 6;
                                                              do
                                                              {
                                                                BOOL v310 = v932-- < 1;
                                                                if (v310) {
                                                                  break;
                                                                }
                                                                unint64_t v933 = *(void *)(*(void *)v925
                                                                                 + 8 * v932);
                                                                v931 += __clz(v933);
                                                              }
                                                              while (!v933);
                                                              int v934 = v930 | 0xFFFFFFC0;
                                                              if ((v930 & 0x3F) == 0) {
                                                                int v934 = 0;
                                                              }
                                                              if ((v930 - v931 - v934) > 0x40) {
                                                                goto LABEL_1676;
                                                              }
                                                              v925 = *(unsigned int **)v925;
                                                            }
                                                            if (*(void *)v925 != v927 - 1) {
                                                              goto LABEL_1676;
                                                            }
                                                            uint64_t v935 = *(void *)(v889 + 8);
                                                            if (!v935 || *(void *)(v935 + 8)) {
                                                              goto LABEL_1676;
                                                            }
                                                            v936 = (char *)v999;
                                                            int v937 = *(unsigned __int8 *)(v889 + 16);
                                                            if (v937 == 5)
                                                            {
                                                              if (*(_WORD *)(v889 + 18) != 13) {
                                                                goto LABEL_1676;
                                                              }
                                                              v943 = (const char **)(v889
                                                                                   - 32
                                                                                   * (*(_DWORD *)(v889 + 20) & 0x7FFFFFF));
                                                              v938 = *v943;
                                                              v939 = v943[4];
                                                              if ((const char *)v999 == v938 && v890 == v939) {
                                                                goto LABEL_1775;
                                                              }
                                                            }
                                                            else
                                                            {
                                                              if (v937 != 41) {
                                                                goto LABEL_1676;
                                                              }
                                                              v938 = *(const char **)(v889 - 64);
                                                              v939 = *(const char **)(v889 - 32);
                                                              if ((const char *)v999 == v938 && v890 == v939)
                                                              {
LABEL_1775:
                                                                NullValue = llvm::Constant::getNullValue(v896, v928, v929);
                                                                LOWORD(v990) = 257;
                                                                v946 = sub_1CB845F20(v888, 40, v936, (uint64_t)NullValue, (uint64_t)&v988);
                                                                LOWORD(v990) = 257;
                                                                v947 = (uint64_t *)sub_1CD5A6358(v888, (llvm::BinaryOperator *)v999, (uint64_t)&v988, (llvm::Instruction *)((*(unsigned __int8 *)(v889 + 17) >> 1) & 1), (*(unsigned __int8 *)(v889 + 17) >> 2) & 1);
                                                                LOWORD(v990) = 257;
                                                                uint64_t v16 = (uint64_t)sub_1CC199EFC((uint64_t)v946, v947, v999, (const char **)&v988, 0, 0);
                                                                if (v16) {
                                                                  return (llvm::Value *)v16;
                                                                }
LABEL_1676:
                                                                int v901 = *((unsigned __int8 *)a2 + 16);
                                                                if (v901 == 58)
                                                                {
                                                                  uint64_t v902 = *v9;
                                                                  uint64_t v903 = *(void *)(*v9 + 8);
                                                                  if (!v903 || *(void *)(v903 + 8)) {
                                                                    goto LABEL_1679;
                                                                  }
                                                                  int v917 = *(unsigned __int8 *)(v902 + 16);
                                                                  if (v917 == 5)
                                                                  {
                                                                    if (*(_WORD *)(v902 + 18) != 30) {
                                                                      goto LABEL_1679;
                                                                    }
                                                                    uint64_t v940 = v902
                                                                         - 32 * (*(_DWORD *)(v902 + 20) & 0x7FFFFFF);
                                                                    v907 = *(llvm::Type **)v940;
                                                                    if (!*(void *)v940) {
                                                                      goto LABEL_1679;
                                                                    }
                                                                    v998 = *(llvm::Type **)v940;
                                                                    if (*((unsigned char *)v907 + 16) == 5) {
                                                                      goto LABEL_1679;
                                                                    }
                                                                    uint64_t v515 = *(void *)(v940 + 32);
                                                                    if (!v515 || *(unsigned char *)(v515 + 16) == 5) {
                                                                      goto LABEL_1679;
                                                                    }
                                                                  }
                                                                  else if (v917 != 58 {
                                                                         || (v907 = *(llvm::Type **)(v902 - 64)) == 0
                                                                  }
                                                                         || (v998 = *(llvm::Type **)(v902 - 64),
                                                                             *((unsigned char *)v907 + 16) == 5)
                                                                         || (uint64_t v515 = *(void *)(v902 - 32)) == 0
                                                                         || ((unsigned int v918 = *(unsigned __int8 *)(v515 + 16),
                                                                              v918 <= 0x14)
                                                                           ? (BOOL v919 = v918 == 5)
                                                                           : (BOOL v919 = 1),
                                                                             v919))
                                                                  {
LABEL_1679:
                                                                    uint64_t v904 = (uint64_t)*(a2 - 4);
                                                                    uint64_t v905 = *(void *)(v904 + 8);
                                                                    if (!v905 || *(void *)(v905 + 8)) {
                                                                      return 0;
                                                                    }
                                                                    int v906 = *(unsigned __int8 *)(v904 + 16);
                                                                    if (v906 != 5)
                                                                    {
                                                                      if (v906 == 58)
                                                                      {
                                                                        v907 = *(llvm::Type **)(v904 - 64);
                                                                        if (v907)
                                                                        {
                                                                          v998 = *(llvm::Type **)(v904 - 64);
                                                                          if (*((unsigned char *)v907 + 16) != 5)
                                                                          {
                                                                            uint64_t v16 = 0;
                                                                            uint64_t v515 = *(void *)(v904 - 32);
                                                                            if (!v515) {
                                                                              return (llvm::Value *)v16;
                                                                            }
                                                                            unsigned int v908 = *(unsigned __int8 *)(v515 + 16);
                                                                            if (v908 > 0x14) {
                                                                              return (llvm::Value *)v16;
                                                                            }
                                                                            uint64_t v909 = v902;
                                                                            if (v908 == 5) {
                                                                              return (llvm::Value *)v16;
                                                                            }
                                                                            goto LABEL_1767;
                                                                          }
                                                                        }
                                                                      }
                                                                      return 0;
                                                                    }
                                                                    goto LABEL_1730;
                                                                  }
                                                                  uint64_t v909 = (uint64_t)*(a2 - 4);
                                                                  if (v909) {
                                                                    goto LABEL_1767;
                                                                  }
                                                                  goto LABEL_1679;
                                                                }
                                                                uint64_t v16 = 0;
                                                                if (v901 != 5 || *((_WORD *)a2 + 9) != 30) {
                                                                  return (llvm::Value *)v16;
                                                                }
                                                                v910 = (uint64_t *)&a2[-4
                                                                                    * (*((_DWORD *)a2 + 5) & 0x7FFFFFF)];
                                                                uint64_t v902 = *v910;
                                                                uint64_t v911 = *(void *)(*v910 + 8);
                                                                if (v911 && !*(void *)(v911 + 8))
                                                                {
                                                                  int v920 = *(unsigned __int8 *)(v902 + 16);
                                                                  if (v920 == 5)
                                                                  {
                                                                    if (*(_WORD *)(v902 + 18) != 30) {
                                                                      goto LABEL_1693;
                                                                    }
                                                                    uint64_t v941 = v902
                                                                         - 32 * (*(_DWORD *)(v902 + 20) & 0x7FFFFFF);
                                                                    v907 = *(llvm::Type **)v941;
                                                                    if (!*(void *)v941) {
                                                                      goto LABEL_1693;
                                                                    }
                                                                    v998 = *(llvm::Type **)v941;
                                                                    if (*((unsigned char *)v907 + 16) == 5) {
                                                                      goto LABEL_1693;
                                                                    }
                                                                    uint64_t v515 = *(void *)(v941 + 32);
                                                                    if (!v515 || *(unsigned char *)(v515 + 16) == 5) {
                                                                      goto LABEL_1693;
                                                                    }
                                                                  }
                                                                  else
                                                                  {
                                                                    if (v920 != 58) {
                                                                      goto LABEL_1693;
                                                                    }
                                                                    v907 = *(llvm::Type **)(v902 - 64);
                                                                    if (!v907) {
                                                                      goto LABEL_1693;
                                                                    }
                                                                    v998 = *(llvm::Type **)(v902 - 64);
                                                                    if (*((unsigned char *)v907 + 16) == 5) {
                                                                      goto LABEL_1693;
                                                                    }
                                                                    uint64_t v515 = *(void *)(v902 - 32);
                                                                    unsigned int v921 = *(unsigned __int8 *)(v515 + 16);
                                                                    BOOL v922 = !v515 || v921 > 0x14;
                                                                    if (v922 || v921 == 5) {
                                                                      goto LABEL_1693;
                                                                    }
                                                                  }
                                                                  uint64_t v909 = v910[4];
                                                                  if (v909) {
                                                                    goto LABEL_1767;
                                                                  }
                                                                }
LABEL_1693:
                                                                uint64_t v904 = v910[4];
                                                                uint64_t v912 = *(void *)(v904 + 8);
                                                                if (!v912 || *(void *)(v912 + 8)) {
                                                                  return 0;
                                                                }
                                                                int v913 = *(unsigned __int8 *)(v904 + 16);
                                                                if (v913 != 5)
                                                                {
                                                                  if (v913 != 58) {
                                                                    return 0;
                                                                  }
                                                                  v907 = *(llvm::Type **)(v904 - 64);
                                                                  if (!v907) {
                                                                    return 0;
                                                                  }
                                                                  v998 = *(llvm::Type **)(v904 - 64);
                                                                  if (*((unsigned char *)v907 + 16) == 5) {
                                                                    return 0;
                                                                  }
                                                                  uint64_t v515 = *(void *)(v904 - 32);
                                                                  unsigned int v914 = *(unsigned __int8 *)(v515 + 16);
                                                                  BOOL v915 = !v515 || v914 > 0x14;
                                                                  BOOL v916 = v915 || v914 == 5;
                                                                  uint64_t v909 = v902;
                                                                  if (v916) {
                                                                    return 0;
                                                                  }
                                                                  goto LABEL_1767;
                                                                }
LABEL_1730:
                                                                if (*(_WORD *)(v904 + 18) != 30) {
                                                                  return 0;
                                                                }
                                                                uint64_t v924 = v904
                                                                     - 32 * (*(_DWORD *)(v904 + 20) & 0x7FFFFFF);
                                                                v907 = *(llvm::Type **)v924;
                                                                if (!*(void *)v924) {
                                                                  return 0;
                                                                }
                                                                v998 = *(llvm::Type **)v924;
                                                                if (*((unsigned char *)v907 + 16) == 5) {
                                                                  return 0;
                                                                }
                                                                uint64_t v515 = *(void *)(v924 + 32);
                                                                if (!v515) {
                                                                  return 0;
                                                                }
                                                                uint64_t v909 = v902;
                                                                if (*(unsigned char *)(v515 + 16) == 5) {
                                                                  return 0;
                                                                }
LABEL_1767:
                                                                uint64_t v942 = *(void *)(a1 + 24);
                                                                LOWORD(v990) = 257;
                                                                uint64_t v555 = sub_1CC2428C0(v942, (uint64_t)v907, v909, (uint64_t)&v988);
                                                                __int16 v1002 = 257;
                                                                p_src = (void **)&v999;
                                                                char v554 = 30;
                                                                goto LABEL_1008;
                                                              }
                                                            }
                                                            if ((const char *)v999 != v939 || v890 != v938) {
                                                              goto LABEL_1676;
                                                            }
                                                            goto LABEL_1775;
                                                          }
                                                          uint64_t v647 = v784;
                                                        }
LABEL_1519:
                                                        uint64_t v809 = *(void *)(v515 - 32);
                                                        uint64_t v810 = *(void *)(v514 - 32);
                                                        uint64_t v811 = *(void *)(v515 + 8);
                                                        if (!v811 || *(void *)(v811 + 8))
                                                        {
                                                          uint64_t v812 = *(void *)(v514 + 8);
                                                          if (!v812 || *(void *)(v812 + 8)) {
                                                            goto LABEL_1596;
                                                          }
                                                        }
                                                        v813 = *v647;
                                                        if (*v647 != *v784) {
                                                          goto LABEL_1596;
                                                        }
                                                        int v814 = (*((_DWORD *)v813 + 2) & 0xFE) == 0x12
                                                             ? *(unsigned __int8 *)(**((void **)v813 + 2) + 8)
                                                             : *((_DWORD *)v813 + 2);
                                                        if (v814 != 13) {
                                                          goto LABEL_1596;
                                                        }
                                                        int v819 = v778 & 0x3F;
                                                        int v820 = *(_WORD *)(v514 + 18) & 0x3F;
                                                        if (v819 != 40)
                                                        {
                                                          if (v819 != 38) {
                                                            goto LABEL_1596;
                                                          }
                                                          if (sub_1CBF687D0((uint64_t)&v999, *(llvm::Constant **)(v515 - 32))&& v820 == 38)
                                                          {
                                                            if (sub_1CBF687D0((uint64_t)&__src, (llvm::Constant *)v810))
                                                            {
LABEL_1540:
                                                              int v821 = llvm::Constant::getNullValue(*v647, v745, v746);
                                                              uint64_t v822 = *(void *)(a1 + 24);
                                                              LOWORD(v990) = 257;
                                                              uint64_t v823 = sub_1CC2428C0(v822, (uint64_t)v647, (uint64_t)v784, (uint64_t)&v988);
                                                              __int16 v1002 = 257;
                                                              uint64_t v824 = v822;
                                                              __int16 v825 = 40;
LABEL_1595:
                                                              int v818 = sub_1CB845F20(v824, v825, v823, (uint64_t)v821, (uint64_t)&v999);
                                                              goto LABEL_1655;
                                                            }
                                                            sub_1CBF687D0((uint64_t)&v999, (llvm::Constant *)v809);
LABEL_1596:
                                                            v839 = sub_1CC02DBDC((llvm *)v515, (llvm::Constant *)v514, a1 + 88, 3, v748, v749);
                                                            if (!v839) {
                                                              goto LABEL_1656;
                                                            }
                                                            uint64_t v842 = v839;
                                                            uint64_t v843 = sub_1CC02C2C8((llvm *)v515, (llvm::Constant *)v514, a1 + 88, 3, v840, v841);
                                                            if (!v843) {
                                                              goto LABEL_1656;
                                                            }
                                                            BOOL v844 = v842 == (llvm::SmallPtrSetImplBase *)v515;
                                                            BOOL v845 = v843 == (llvm::Value *)v514;
                                                            BOOL v846 = !v844 || !v845;
                                                            uint64_t v847 = v844 && v845 ? v515 : 0;
                                                            int v848 = v846 ? 0 : (uint64_t ***)v514;
                                                            if (v842 == (llvm::SmallPtrSetImplBase *)v514
                                                              && v843 == (llvm::Value *)v515)
                                                            {
                                                              uint64_t v847 = v514;
                                                              v849 = (uint64_t ***)v515;
                                                            }
                                                            else
                                                            {
                                                              v849 = v848;
                                                            }
                                                            if (!v847 || !v849) {
                                                              goto LABEL_1656;
                                                            }
                                                            BOOL v850 = v849[1];
                                                            if ((!v850 || v850[1])
                                                              && !sub_1CCA0BAEC((uint64_t)v849, (uint64_t)a2))
                                                            {
                                                              goto LABEL_1656;
                                                            }
                                                            *((_WORD *)v849 + 9) = word_1CFB27690[*((_WORD *)v849 + 9) & 0x3FLL] | *((_WORD *)v849 + 9) & 0xFFC0;
                                                            BOOL v851 = v849[1];
                                                            if (v851 && !v851[1]) {
                                                              goto LABEL_1654;
                                                            }
                                                            uint64_t v852 = *(void *)(a1 + 24);
                                                            uint64_t v999 = v852;
                                                            long long v1000 = *(_OWORD *)(v852 + 48);
                                                            uint64_t v853 = *(unsigned int *)(v852 + 8);
                                                            if (v853)
                                                            {
                                                              v948 = (unsigned __int8 **)(*(void *)v852 + 8);
                                                              uint64_t v949 = 16 * v853;
                                                              while (*((_DWORD *)v948 - 2))
                                                              {
                                                                v948 += 2;
                                                                v949 -= 16;
                                                                if (!v949) {
                                                                  goto LABEL_1615;
                                                                }
                                                              }
                                                              v1001 = *v948;
                                                              if (v1001)
                                                              {
                                                                llvm::MetadataTracking::track((uint64_t)&v1001, v1001, 2);
                                                                uint64_t v852 = *(void *)(a1 + 24);
                                                              }
                                                            }
                                                            else
                                                            {
LABEL_1615:
                                                              v1001 = 0;
                                                            }
                                                            sub_1CBF5385C(v852, (uint64_t)v849[5], (uint64_t)v849[4]);
                                                            uint64_t v855 = *(void *)(a1 + 24);
                                                            if ((*((unsigned char *)v849 + 23) & 0x10) == 0)
                                                            {
                                                              v866 = 0;
                                                              unsigned int v865 = &byte_1CFBCE98E;
LABEL_1625:
                                                              LOWORD(v990) = 773;
                                                              *(void *)&long long v988 = v865;
                                                              *((void *)&v988 + 1) = v866;
                                                              *(void *)&long long v989 = ".not";
                                                              v982 = sub_1CC2427E8(v855, (uint64_t)v849, (uint64_t)&v988, v854);
                                                              uint64_t v868 = v849[1];
                                                              if (v868)
                                                              {
                                                                uint64_t v869 = *(void *)(a1 + 32);
                                                                int v870 = *(_DWORD *)(v869 + 8);
                                                                while (1)
                                                                {
                                                                  long long v871 = v868[3];
                                                                  *(void *)&long long v988 = v871;
                                                                  DWORD2(v988) = v870;
                                                                  int v872 = *(_DWORD *)(v869 + 2080);
                                                                  if (!v872) {
                                                                    break;
                                                                  }
                                                                  uint64_t v873 = *(void *)(v869 + 2064);
                                                                  int v874 = v872 - 1;
                                                                  unsigned int v875 = v874 & ((v871 >> 4) ^ (v871 >> 9));
                                                                  uint64_t v876 = (void *)(v873 + 16 * v875);
                                                                  uint64_t v877 = *v876;
                                                                  if ((uint64_t *)*v876 != v871)
                                                                  {
                                                                    v878 = 0;
                                                                    int v879 = 1;
                                                                    while (v877 != -4096)
                                                                    {
                                                                      if (v878) {
                                                                        BOOL v880 = 0;
                                                                      }
                                                                      else {
                                                                        BOOL v880 = v877 == -8192;
                                                                      }
                                                                      if (v880) {
                                                                        v878 = v876;
                                                                      }
                                                                      unsigned int v881 = v875 + v879++;
                                                                      unsigned int v875 = v881 & v874;
                                                                      uint64_t v876 = (void *)(v873 + 16 * v875);
                                                                      uint64_t v877 = *v876;
                                                                      if ((uint64_t *)*v876 == v871) {
                                                                        goto LABEL_1643;
                                                                      }
                                                                    }
                                                                    if (v878) {
                                                                      v882 = v878;
                                                                    }
                                                                    else {
                                                                      v882 = v876;
                                                                    }
                                                                    goto LABEL_1641;
                                                                  }
LABEL_1643:
                                                                  uint64_t v868 = (uint64_t **)v868[1];
                                                                  if (!v868) {
                                                                    goto LABEL_1647;
                                                                  }
                                                                }
                                                                v882 = 0;
LABEL_1641:
                                                                v883 = sub_1CBF569E0((_DWORD *)(v869 + 2064), (uint64_t)&v988, (uint64_t *)&v988, v882);
                                                                void *v883 = v988;
                                                                *((_DWORD *)v883 + 2) = DWORD2(v988);
                                                                unint64_t v884 = *(unsigned int *)(v869 + 8);
                                                                if (v884 >= *(unsigned int *)(v869 + 12)) {
                                                                  llvm::SmallVectorBase<unsigned int>::grow_pod();
                                                                }
                                                                *(void *)(*(void *)v869 + 8 * v884) = v871;
                                                                int v870 = *(_DWORD *)(v869 + 8) + 1;
                                                                *(_DWORD *)(v869 + 8) = v870;
                                                                goto LABEL_1643;
                                                              }
LABEL_1647:
                                                              *(void *)&long long v988 = v982;
                                                              llvm::Value::replaceUsesWithIf((llvm::Value *)v849, v982, (unsigned int (*)(uint64_t, uint64_t))sub_1CCA17570, (uint64_t)&v988);
                                                              v885 = (const char *)v999;
                                                              if ((void)v1000)
                                                              {
                                                                sub_1CBF5385C(v999, v1000, *((uint64_t *)&v1000 + 1));
                                                                v885 = (const char *)v999;
                                                              }
                                                              else
                                                              {
                                                                *(void *)(v999 + 48) = 0;
                                                                *((void *)v885 + 7) = 0;
                                                              }
                                                              unint64_t __src = v1001;
                                                              if (v1001)
                                                              {
                                                                llvm::MetadataTracking::track((uint64_t)&__src, v1001, 2);
                                                                v886 = __src;
                                                              }
                                                              else
                                                              {
                                                                v886 = 0;
                                                              }
                                                              sub_1CB8461A4((uint64_t)v885, 0, (uint64_t)v886);
                                                              if (!__src)
                                                              {
LABEL_1653:
                                                                if (v1001)
                                                                {
                                                                  int v953 = *v1001;
                                                                  if ((v953 - 4) > 0x1E)
                                                                  {
                                                                    if ((v953 - 3) >= 0xFFFFFFFE) {
                                                                      v957 = v1001;
                                                                    }
                                                                    else {
                                                                      v957 = 0;
                                                                    }
                                                                    if ((v953 - 3) < 0xFFFFFFFE)
                                                                    {
                                                                      if (v953 == 3) {
                                                                        *((void *)v1001 + 1) = 0;
                                                                      }
                                                                      goto LABEL_1654;
                                                                    }
                                                                    unint64_t v955 = (unint64_t)(v957 + 8);
                                                                  }
                                                                  else
                                                                  {
                                                                    if ((v1001[1] & 0x7F) != 2
                                                                      && !*((_DWORD *)v1001 + 3))
                                                                    {
                                                                      goto LABEL_1654;
                                                                    }
                                                                    uint64_t v954 = *((void *)v1001 + 2);
                                                                    if ((v954 & 4) == 0) {
                                                                      goto LABEL_1654;
                                                                    }
                                                                    unint64_t v955 = v954 & 0xFFFFFFFFFFFFFFF8;
                                                                    if (!v955) {
                                                                      goto LABEL_1654;
                                                                    }
                                                                  }
                                                                  *(void *)&long long v988 = &v1001;
                                                                  sub_1CC5FA668(v955 + 16, &v988);
                                                                }
LABEL_1654:
                                                                uint64_t v887 = *(void *)(a1 + 24);
                                                                LOWORD(v990) = 257;
                                                                int v818 = sub_1CBF52474(v887, (void *)v515, v514, (uint64_t)&v988);
                                                                goto LABEL_1655;
                                                              }
                                                              int v950 = *(unsigned __int8 *)__src;
                                                              if ((v950 - 4) > 0x1E)
                                                              {
                                                                if ((v950 - 3) >= 0xFFFFFFFE) {
                                                                  v956 = __src;
                                                                }
                                                                else {
                                                                  v956 = 0;
                                                                }
                                                                if ((v950 - 3) < 0xFFFFFFFE)
                                                                {
                                                                  if (v950 == 3) {
                                                                    *((void *)__src + 1) = 0;
                                                                  }
                                                                  goto LABEL_1653;
                                                                }
                                                                unint64_t v952 = (unint64_t)v956 + 8;
                                                              }
                                                              else
                                                              {
                                                                if ((*((unsigned char *)__src + 1) & 0x7F) != 2
                                                                  && !*((_DWORD *)__src + 3))
                                                                {
                                                                  goto LABEL_1653;
                                                                }
                                                                uint64_t v951 = *((void *)__src + 2);
                                                                if ((v951 & 4) == 0) {
                                                                  goto LABEL_1653;
                                                                }
                                                                unint64_t v952 = v951 & 0xFFFFFFFFFFFFFFF8;
                                                                if (!v952) {
                                                                  goto LABEL_1653;
                                                                }
                                                              }
                                                              *(void *)&long long v988 = &__src;
                                                              sub_1CC5FA668(v952 + 16, &v988);
                                                              goto LABEL_1653;
                                                            }
                                                            uint64_t v856 = ***v849;
                                                            uint64_t v857 = *(void *)(v856 + 152);
                                                            uint64_t v858 = *(unsigned int *)(v856 + 168);
                                                            if (v858)
                                                            {
                                                              LODWORD(v859) = (v858 - 1) & ((v849 >> 4) ^ (v849 >> 9));
                                                              unsigned int v860 = (uint64_t ****)(v857 + 16 * v859);
                                                              v861 = *v860;
                                                              if (*v860 == v849)
                                                              {
LABEL_1624:
                                                                v864 = v860[1];
                                                                v867 = *v864;
                                                                unsigned int v865 = (char *)(v864 + 2);
                                                                v866 = v867;
                                                                goto LABEL_1625;
                                                              }
                                                              int v862 = 1;
                                                              while (v861 != (uint64_t ***)-4096)
                                                              {
                                                                int v863 = v859 + v862++;
                                                                uint64_t v859 = v863 & (v858 - 1);
                                                                v861 = *(uint64_t ****)(v857 + 16 * v859);
                                                                if (v861 == v849)
                                                                {
                                                                  unsigned int v860 = (uint64_t ****)(v857 + 16 * v859);
                                                                  goto LABEL_1624;
                                                                }
                                                              }
                                                            }
                                                            unsigned int v860 = (uint64_t ****)(v857 + 16 * v858);
                                                            goto LABEL_1624;
                                                          }
                                                          if (!sub_1CBF687D0((uint64_t)&v999, (llvm::Constant *)v809))goto LABEL_1596; {
                                                          if (v820 != 40)
                                                          }
                                                            goto LABEL_1596;
                                                          if (!v810) {
                                                            goto LABEL_1596;
                                                          }
                                                          unsigned int v831 = *(unsigned __int8 *)(v810 + 16);
                                                          if (v831 > 0x14) {
                                                            goto LABEL_1596;
                                                          }
                                                          if (v831 == 16)
                                                          {
                                                            uint64_t v832 = *(unsigned int *)(v810 + 32);
                                                            if (v832 >= 0x41)
                                                            {
                                                              int v970 = 0;
                                                              int64_t v971 = (unint64_t)(v832 + 63) >> 6;
                                                              do
                                                              {
                                                                BOOL v310 = v971-- < 1;
                                                                if (v310) {
                                                                  break;
                                                                }
                                                                unint64_t v972 = *(void *)(*(void *)(v810 + 24)
                                                                                 + 8 * v971);
                                                                v970 += __clz(v972);
                                                              }
                                                              while (!v972);
                                                              int v973 = v832 | 0xFFFFFFC0;
                                                              if ((v832 & 0x3F) == 0) {
                                                                int v973 = 0;
                                                              }
                                                              if (v970 + v973 == v832) {
                                                                goto LABEL_1594;
                                                              }
                                                            }
                                                            else if (!*(void *)(v810 + 24))
                                                            {
                                                              goto LABEL_1594;
                                                            }
                                                          }
                                                          else if (v831 == 17)
                                                          {
                                                            if (sub_1CB844168(v810, 0.0)) {
                                                              goto LABEL_1594;
                                                            }
                                                          }
                                                          else if (v831 - 18 < 3 || v831 == 13)
                                                          {
                                                            goto LABEL_1594;
                                                          }
                                                          if ((sub_1CC03F414((uint64_t)&v988, (llvm::Constant *)v810) & 1) == 0) {
                                                            goto LABEL_1596;
                                                          }
LABEL_1594:
                                                          int v821 = llvm::Constant::getAllOnesValue(*v647, v829, v830);
                                                          uint64_t v838 = *(void *)(a1 + 24);
                                                          LOWORD(v990) = 257;
                                                          uint64_t v823 = sub_1CC2428C0(v838, (uint64_t)v647, (uint64_t)v784, (uint64_t)&v988);
                                                          __int16 v1002 = 257;
                                                          uint64_t v824 = v838;
                                                          __int16 v825 = 38;
                                                          goto LABEL_1595;
                                                        }
                                                        if (!v809
                                                          || (unsigned int v826 = *(unsigned __int8 *)(v809 + 16), v826 >= 0x15))
                                                        {
LABEL_1575:
                                                          if (!v809) {
                                                            goto LABEL_1596;
                                                          }
                                                          unsigned int v835 = *(unsigned __int8 *)(v809 + 16);
                                                          if (v835 >= 0x15) {
                                                            goto LABEL_1596;
                                                          }
                                                          if (v835 == 16)
                                                          {
                                                            uint64_t v836 = *(unsigned int *)(v809 + 32);
                                                            if (v836 >= 0x41)
                                                            {
                                                              int v966 = 0;
                                                              int64_t v967 = (unint64_t)(v836 + 63) >> 6;
                                                              do
                                                              {
                                                                BOOL v310 = v967-- < 1;
                                                                if (v310) {
                                                                  break;
                                                                }
                                                                unint64_t v968 = *(void *)(*(void *)(v809 + 24)
                                                                                 + 8 * v967);
                                                                v966 += __clz(v968);
                                                              }
                                                              while (!v968);
                                                              int v969 = v836 | 0xFFFFFFC0;
                                                              if ((v836 & 0x3F) == 0) {
                                                                int v969 = 0;
                                                              }
                                                              if (v966 + v969 != v836) {
                                                                goto LABEL_1580;
                                                              }
                                                            }
                                                            else if (*(void *)(v809 + 24))
                                                            {
                                                              goto LABEL_1580;
                                                            }
                                                          }
                                                          else
                                                          {
                                                            if (v835 != 17)
                                                            {
                                                              int v837 = 1;
                                                              if (v835 - 18 < 3 || v835 == 13)
                                                              {
LABEL_1591:
                                                                if (!v837
                                                                  || v820 != 38
                                                                  || (sub_1CBF687D0((uint64_t)&__src, (llvm::Constant *)v810) & 1) == 0)
                                                                {
                                                                  goto LABEL_1596;
                                                                }
                                                                goto LABEL_1594;
                                                              }
LABEL_1580:
                                                              int v837 = sub_1CC03F414((uint64_t)&v988, (llvm::Constant *)v809);
                                                              goto LABEL_1591;
                                                            }
                                                            if ((sub_1CB844168(v809, 0.0) & 1) == 0) {
                                                              goto LABEL_1580;
                                                            }
                                                          }
                                                          int v837 = 1;
                                                          goto LABEL_1591;
                                                        }
                                                        if (v826 == 16)
                                                        {
                                                          uint64_t v827 = *(unsigned int *)(v809 + 32);
                                                          if (v827 >= 0x41)
                                                          {
                                                            int v962 = 0;
                                                            int64_t v963 = (unint64_t)(v827 + 63) >> 6;
                                                            do
                                                            {
                                                              BOOL v310 = v963-- < 1;
                                                              if (v310) {
                                                                break;
                                                              }
                                                              unint64_t v964 = *(void *)(*(void *)(v809 + 24)
                                                                               + 8 * v963);
                                                              v962 += __clz(v964);
                                                            }
                                                            while (!v964);
                                                            int v965 = v827 | 0xFFFFFFC0;
                                                            if ((v827 & 0x3F) == 0) {
                                                              int v965 = 0;
                                                            }
                                                            if (v962 + v965 != v827) {
                                                              goto LABEL_1546;
                                                            }
                                                          }
                                                          else if (*(void *)(v809 + 24))
                                                          {
                                                            goto LABEL_1546;
                                                          }
                                                        }
                                                        else
                                                        {
                                                          if (v826 != 17)
                                                          {
                                                            int v828 = 1;
                                                            if (v826 - 18 < 3 || v826 == 13)
                                                            {
LABEL_1567:
                                                              if (v828)
                                                              {
                                                                if (v820 == 40)
                                                                {
                                                                  if (v810)
                                                                  {
                                                                    unsigned int v833 = *(unsigned __int8 *)(v810 + 16);
                                                                    if (v833 <= 0x14)
                                                                    {
                                                                      if (v833 == 16)
                                                                      {
                                                                        uint64_t v834 = *(unsigned int *)(v810 + 32);
                                                                        if (v834 >= 0x41)
                                                                        {
                                                                          int v974 = 0;
                                                                          int64_t v975 = (unint64_t)(v834 + 63) >> 6;
                                                                          do
                                                                          {
                                                                            BOOL v310 = v975-- < 1;
                                                                            if (v310) {
                                                                              break;
                                                                            }
                                                                            unint64_t v976 = *(void *)(*(void *)(v810 + 24)
                                                                                             + 8 * v975);
                                                                            v974 += __clz(v976);
                                                                          }
                                                                          while (!v976);
                                                                          int v977 = v834 | 0xFFFFFFC0;
                                                                          if ((v834 & 0x3F) == 0) {
                                                                            int v977 = 0;
                                                                          }
                                                                          if (v974 + v977 == v834) {
                                                                            goto LABEL_1540;
                                                                          }
                                                                        }
                                                                        else if (!*(void *)(v810 + 24))
                                                                        {
                                                                          goto LABEL_1540;
                                                                        }
                                                                      }
                                                                      else if (v833 == 17)
                                                                      {
                                                                        if (sub_1CB844168(v810, 0.0)) {
                                                                          goto LABEL_1540;
                                                                        }
                                                                      }
                                                                      else if (v833 - 18 < 3 || v833 == 13)
                                                                      {
                                                                        goto LABEL_1540;
                                                                      }
                                                                      if (sub_1CC03F414((uint64_t)&v988, (llvm::Constant *)v810))goto LABEL_1540; {
                                                                    }
                                                                      }
                                                                  }
                                                                }
                                                              }
                                                              goto LABEL_1575;
                                                            }
LABEL_1546:
                                                            int v828 = sub_1CC03F414((uint64_t)&v988, (llvm::Constant *)v809);
                                                            goto LABEL_1567;
                                                          }
                                                          if ((sub_1CB844168(*(void *)(v515 - 32), 0.0) & 1) == 0) {
                                                            goto LABEL_1546;
                                                          }
                                                        }
                                                        int v828 = 1;
                                                        goto LABEL_1567;
                                                      }
                                                      BOOL v792 = v780 < 4 && (*(_WORD *)(v514 + 18) & 0x3E) == 32;
                                                      char v793 = v792;
                                                      if (v792 || v781 > 3)
                                                      {
                                                        v782 = (llvm::Constant ***)(v515 - 64);
                                                        uint64_t v647 = *(llvm::Constant ***)(v515 - 64);
                                                        v783 = (llvm::Constant ***)(v514 - 64);
                                                        if (v793) {
                                                          goto LABEL_1437;
                                                        }
                                                      }
                                                      else
                                                      {
                                                        v782 = (llvm::Constant ***)(v515 - 64);
                                                        uint64_t v647 = *(llvm::Constant ***)(v515 - 64);
                                                        v783 = (llvm::Constant ***)(v514 - 64);
                                                        if ((v778 & 0x3E) == 0x20) {
                                                          goto LABEL_1437;
                                                        }
                                                      }
                                                      int v784 = *v783;
                                                      goto LABEL_1519;
                                                    }
                                                  }
                                                  else
                                                  {
                                                    if (v751 != 58) {
                                                      goto LABEL_1408;
                                                    }
                                                    if (v997 == *(llvm **)(v515 - 64))
                                                    {
                                                      uint64_t v567 = sub_1CBF687D0((uint64_t)&v1000, *(llvm::Constant **)(v515 - 32));
                                                      if (v567) {
                                                        goto LABEL_1407;
                                                      }
                                                      unint64_t v750 = (void *)v999;
                                                    }
                                                    if (v750 != *(void **)(v515 - 32)) {
                                                      goto LABEL_1408;
                                                    }
                                                    uint64_t v567 = sub_1CBF687D0((uint64_t)&v1000, *(llvm::Constant **)(v515 - 64));
                                                    if ((v567 & 1) == 0) {
                                                      goto LABEL_1408;
                                                    }
                                                  }
LABEL_1407:
                                                  uint64_t v762 = *(void *)(a1 + 24);
                                                  v764 = v996;
                                                  unsigned int v763 = v997;
                                                  LOWORD(v990) = 257;
LABEL_1428:
                                                  int v775 = (llvm::Constant **)sub_1CBF52474(v762, v763, (uint64_t)v764, (uint64_t)&v988);
                                                  __int16 v1002 = 257;
                                                  return llvm::BinaryOperator::CreateNot(v775, (llvm::Value *)&v999, 0, v776);
                                                }
                                                int v715 = *(unsigned __int8 *)(v514 + 16);
                                                if (v715 == 5)
                                                {
                                                  if (*(_WORD *)(v514 + 18) != 29) {
                                                    goto LABEL_1237;
                                                  }
                                                  size_t v716 = (llvm::Type **)(v514
                                                                       - 32 * (*(_DWORD *)(v514 + 20) & 0x7FFFFFF));
                                                  uint64_t v713 = *v716;
                                                  if (!*v716)
                                                  {
                                                    uint64_t v717 = v716[4];
                                                    goto LABEL_1349;
                                                  }
                                                  v998 = *v716;
                                                  uint64_t v717 = v716[4];
                                                }
                                                else
                                                {
                                                  if (v715 != 57) {
                                                    goto LABEL_1237;
                                                  }
                                                  size_t v716 = (llvm::Type **)(v514 - 64);
                                                  uint64_t v713 = *(llvm::Type **)(v514 - 64);
                                                  if (!v713)
                                                  {
                                                    uint64_t v717 = *(llvm::Type **)(v514 - 32);
                                                    goto LABEL_1349;
                                                  }
                                                  v998 = *(llvm::Type **)(v514 - 64);
                                                  uint64_t v717 = *(llvm::Type **)(v514 - 32);
                                                }
                                                if ((llvm::Type *)v515 == v717)
                                                {
LABEL_1351:
                                                  uint64_t v735 = *(void *)(a1 + 24);
                                                  LOWORD(v990) = 257;
                                                  uint64_t v736 = v515;
                                                  goto LABEL_1352;
                                                }
LABEL_1349:
                                                if (!v717) {
                                                  goto LABEL_1237;
                                                }
                                                v998 = v717;
                                                uint64_t v713 = v717;
                                                if ((llvm::Type *)v515 != *v716) {
                                                  goto LABEL_1237;
                                                }
                                                goto LABEL_1351;
                                              }
                                              int v711 = *(unsigned __int8 *)(v515 + 16);
                                              if (v711 == 5)
                                              {
                                                if (*(_WORD *)(v515 + 18) != 29) {
                                                  goto LABEL_1235;
                                                }
                                                BOOL v712 = (llvm::Type **)(v515 - 32
                                                                            * (*(_DWORD *)(v515 + 20) & 0x7FFFFFF));
                                                uint64_t v713 = *v712;
                                                if (*v712)
                                                {
                                                  v998 = *v712;
                                                  BOOL v714 = v712[4];
LABEL_1275:
                                                  if ((llvm::Type *)v514 == v714) {
                                                    goto LABEL_1347;
                                                  }
                                                  goto LABEL_1345;
                                                }
                                                BOOL v714 = v712[4];
                                              }
                                              else
                                              {
                                                if (v711 != 57) {
                                                  goto LABEL_1235;
                                                }
                                                BOOL v712 = (llvm::Type **)(v515 - 64);
                                                uint64_t v713 = *(llvm::Type **)(v515 - 64);
                                                if (v713)
                                                {
                                                  v998 = *(llvm::Type **)(v515 - 64);
                                                  BOOL v714 = *(llvm::Type **)(v515 - 32);
                                                  goto LABEL_1275;
                                                }
                                                BOOL v714 = *(llvm::Type **)(v515 - 32);
                                              }
LABEL_1345:
                                              if (!v714) {
                                                goto LABEL_1235;
                                              }
                                              v998 = v714;
                                              uint64_t v713 = v714;
                                              if ((llvm::Type *)v514 != *v712) {
                                                goto LABEL_1235;
                                              }
LABEL_1347:
                                              uint64_t v735 = *(void *)(a1 + 24);
                                              LOWORD(v990) = 257;
                                              uint64_t v736 = v514;
LABEL_1352:
                                              int v556 = sub_1CC2427E8(v735, v736, (uint64_t)&v988, v697);
                                              __int16 v1002 = 257;
                                              p_src = (void **)&v999;
                                              char v554 = 28;
                                              uint64_t v555 = v713;
                                              return llvm::BinaryOperator::Create(v554, v555, (uint64_t)v556, (const char **)p_src, 0);
                                            }
                                            uint64_t v733 = *(void *)(a1 + 24);
                                            LOWORD(v990) = 257;
                                            unint64_t v599 = sub_1CC2427E8(v733, (uint64_t)v996, (uint64_t)&v988, v565);
                                            int v556 = (llvm *)llvm::ConstantInt::get(*(llvm::ConstantInt **)v563, v986, v734);
                                            if ((*((_DWORD *)v563 + 2) & 0xFE) == 0x12) {
                                              int v556 = llvm::ConstantVector::getSplat((llvm::Type *)(*((unsigned int *)v563 + 8) | ((unint64_t)(*((_DWORD *)v563 + 2) == 19) << 32)), (uint64_t)v556);
                                            }
                                            LOWORD(v990) = 257;
                                            p_src = (void **)&v988;
                                            char v554 = 26;
LABEL_1086:
                                            uint64_t v555 = v599;
                                            return llvm::BinaryOperator::Create(v554, v555, (uint64_t)v556, (const char **)p_src, 0);
                                          }
                                          int v669 = *(unsigned __int8 *)(v514 + 16);
                                          if (v669 == 5)
                                          {
                                            if (*(_WORD *)(v514 + 18) != 25) {
                                              goto LABEL_1157;
                                            }
                                            uint64_t v674 = v514 - 32 * (*(_DWORD *)(v514 + 20) & 0x7FFFFFF);
                                            if (!*(void *)v674) {
                                              goto LABEL_1157;
                                            }
                                            v996 = *(llvm **)v674;
                                            if (!sub_1CBF5295C((uint64_t)&v988 + 8, *(llvm::Constant **)(v674 + 32)))goto LABEL_1157; {
                                          }
                                            }
                                          else
                                          {
                                            if (v669 != 53) {
                                              goto LABEL_1157;
                                            }
                                            if (!*(void *)(v514 - 64)) {
                                              goto LABEL_1157;
                                            }
                                            v996 = *(llvm **)(v514 - 64);
                                            if ((sub_1CBF528D8((uint64_t)&v988 + 8, *(unsigned __int8 **)(v514 - 32)) & 1) == 0) {
                                              goto LABEL_1157;
                                            }
                                          }
                                          v979 = (const void **)v997;
                                          BOOL v675 = v563;
                                          if ((*((_DWORD *)v563 + 2) & 0xFE) == 0x12) {
                                            BOOL v675 = (llvm::Type *)**((void **)v563 + 2);
                                          }
                                          unsigned int v676 = llvm::Type::getPrimitiveSizeInBits(v675);
                                          unsigned int v677 = v676;
                                          unsigned int v984 = v676;
                                          if (v676 > 0x40) {
                                            llvm::APInt::initSlowCase((llvm::APInt *)&__src);
                                          }
                                          if (v676) {
                                            unint64_t v981 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v676;
                                          }
                                          else {
                                            unint64_t v981 = 0;
                                          }
                                          unint64_t __src = (void *)v981;
                                          LODWORD(v1000) = v676;
                                          uint64_t v999 = v981;
                                          int v678 = v676;
                                          uint64_t v679 = *((unsigned int *)v986 + 2);
                                          if (v679 >= 0x41)
                                          {
                                            int v795 = 0;
                                            int64_t v796 = (unint64_t)(v679 + 63) >> 6;
                                            uint64_t v797 = *(unint64_t **)v986;
                                            do
                                            {
                                              BOOL v310 = v796-- < 1;
                                              if (v310) {
                                                break;
                                              }
                                              unint64_t v798 = v797[v796];
                                              v795 += __clz(v798);
                                            }
                                            while (!v798);
                                            int v799 = v679 | 0xFFFFFFC0;
                                            if ((v679 & 0x3F) == 0) {
                                              int v799 = 0;
                                            }
                                            if ((v679 - v795 - v799) > 0x40)
                                            {
LABEL_1204:
                                              unint64_t v681 = v981 << v678;
                                              if (v676 == v678) {
                                                unint64_t v681 = 0;
                                              }
                                              if (v676) {
                                                unint64_t v682 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v676;
                                              }
                                              else {
                                                unint64_t v682 = 0;
                                              }
                                              uint64_t v999 = v682 & v681;
                                              uint64_t v683 = *((unsigned int *)v979 + 2);
                                              uint64_t v684 = v999;
                                              if (v683 > 0x40) {
                                                BOOL v685 = memcmp(*v979, (const void *)v999, ((unint64_t)(v683 + 63) >> 3) & 0x3FFFFFF8) == 0;
                                              }
                                              else {
                                                BOOL v685 = *v979 == (const void *)v999;
                                              }
                                              int v729 = v685;
                                              int v980 = v729;
                                              if (v1000 >= 0x41 && v684) {
                                                MEMORY[0x1D25D9CB0](v684, 0x1000C8000313F17);
                                              }
                                              if (v677 >= 0x41 && v981) {
                                                MEMORY[0x1D25D9CB0](v981, 0x1000C8000313F17);
                                              }
                                              if (v980)
                                              {
                                                uint64_t v730 = *(void *)(a1 + 24);
                                                LOWORD(v990) = 257;
                                                unint64_t v599 = sub_1CC2427E8(v730, (uint64_t)v996, (uint64_t)&v988, v565);
                                                int v556 = (llvm *)llvm::ConstantInt::get(*(llvm::ConstantInt **)v563, v986, v731);
                                                if ((*((_DWORD *)v563 + 2) & 0xFE) == 0x12) {
                                                  int v556 = llvm::ConstantVector::getSplat((llvm::Type *)(*((unsigned int *)v563 + 8) | ((unint64_t)(*((_DWORD *)v563 + 2) == 19) << 32)), (uint64_t)v556);
                                                }
                                                LOWORD(v990) = 257;
                                                p_src = (void **)&v988;
                                                char v554 = 25;
                                                goto LABEL_1086;
                                              }
                                              goto LABEL_1157;
                                            }
                                            unint64_t v680 = *v797;
                                          }
                                          else
                                          {
                                            unint64_t v680 = *(void *)v986;
                                          }
                                          if (v680 <= v676) {
                                            int v678 = v680;
                                          }
                                          goto LABEL_1204;
                                        }
                                        int v578 = *(unsigned __int8 *)(v514 + 16);
                                        if (v578 == 5)
                                        {
                                          if (*(_WORD *)(v514 + 18) != 28) {
                                            goto LABEL_1021;
                                          }
                                          if (!sub_1CBF686A0((void **)&v988, 30, *(void *)(v514- 32 * (*(_DWORD *)(v514 + 20) & 0x7FFFFFF))))goto LABEL_1021; {
                                          uint64_t v581 = *(void *)(v514 - 32 * (*(_DWORD *)(v514 + 20) & 0x7FFFFFF) + 32);
                                          }
                                          if (!v581) {
                                            goto LABEL_1021;
                                          }
                                        }
                                        else
                                        {
                                          if (v578 != 56) {
                                            goto LABEL_1021;
                                          }
                                          if (!sub_1CBF686A0((void **)&v988, 30, *(void *)(v514 - 64)))goto LABEL_1021; {
                                          uint64_t v581 = *(void *)(v514 - 32);
                                          }
                                          if (!v581 || *(unsigned __int8 *)(v581 + 16) > 0x14u) {
                                            goto LABEL_1021;
                                          }
                                        }
                                        *(void *)long long v989 = v581;
                                        uint64_t v611 = *(void *)(a1 + 24);
                                        uint64_t v612 = v998;
                                        unint64_t v613 = llvm::ConstantExpr::getNot((llvm::Constant **)__src, v579, v580);
                                        LOWORD(v990) = 257;
                                        v608 = sub_1CB844AF4(v611, v612, (uint64_t)v613, (uint64_t)&v988);
                                        goto LABEL_1084;
                                      }
                                      *(void *)long long v989 = v577;
                                      uint64_t v605 = *(void *)(a1 + 24);
                                      v606 = v998;
                                      unsigned int v607 = llvm::ConstantExpr::getNot((llvm::Constant **)__src, v575, v576);
                                      LOWORD(v990) = 257;
                                      v608 = sub_1CBF52474(v605, v606, (uint64_t)v607, (uint64_t)&v988);
LABEL_1084:
                                      unint64_t v599 = v608;
                                      unint64_t v604 = llvm::ConstantExpr::getNot((llvm::Constant **)v515, v609, v610);
LABEL_1085:
                                      int v556 = v604;
                                      LOWORD(v990) = 257;
                                      p_src = (void **)&v988;
                                      char v554 = 30;
                                      goto LABEL_1086;
                                    }
                                    if (*((_WORD *)a2 + 9) != 30) {
                                      goto LABEL_1013;
                                    }
                                    uint64_t v543 = *((_DWORD *)a2 + 5) & 0x7FFFFFF;
                                    if (a2[-4 * v543])
                                    {
                                      uint64_t v999 = (uint64_t)a2[-4 * v543];
                                      uint64_t v544 = *((_DWORD *)a2 + 5) & 0x7FFFFFF;
                                      uint64_t v545 = -v544;
                                      uint64_t v175 = a2[-4 * v544 + 4];
                                      uint64_t v546 = *((void *)v175 + 1);
                                      if (!v546 || *(void *)(v546 + 8))
                                      {
LABEL_999:
                                        int64_t v547 = (const char *)a2[4 * v545 + 4];
                                        if (!v547) {
                                          goto LABEL_1013;
                                        }
                                        uint64_t v999 = (uint64_t)v547;
                                        uint64_t v175 = a2[-4 * (*((_DWORD *)a2 + 5) & 0x7FFFFFF)];
                                        uint64_t v548 = *((void *)v175 + 1);
                                        if (!v548
                                          || *(void *)(v548 + 8)
                                          || (sub_1CCA165C0((uint64_t **)&v988 + 1, (uint64_t)v175) & 1) == 0)
                                        {
                                          goto LABEL_1013;
                                        }
                                        goto LABEL_1003;
                                      }
                                      if (sub_1CCA165C0((uint64_t **)&v988 + 1, (uint64_t)v175)) {
                                        goto LABEL_1003;
                                      }
                                      uint64_t v543 = *((_DWORD *)a2 + 5) & 0x7FFFFFF;
                                    }
                                    uint64_t v545 = -v543;
                                    goto LABEL_999;
                                  }
                                  if (*((_WORD *)a2 + 9) != 30) {
                                    goto LABEL_981;
                                  }
                                  int64_t v518 = a2[-4 * (*((_DWORD *)a2 + 5) & 0x7FFFFFF)];
                                  int v519 = *((unsigned __int8 *)v518 + 16);
                                  if (v519 == 5)
                                  {
                                    if (*((_WORD *)v518 + 9) != 28
                                      || (sub_1CBF686A0((void **)&v988, 30, *((void *)v518 - 4 * (*((_DWORD *)v518 + 5) & 0x7FFFFFF))) & 1) == 0&& !sub_1CBF686A0((void **)&v988, 30, ((void *)v518 - 4 * (*((_DWORD *)v518 + 5) & 0x7FFFFFF))[4]))
                                    {
                                      goto LABEL_964;
                                    }
                                  }
                                  else if (v519 != 56 {
                                         || (sub_1CBF686A0((void **)&v988, 30, *((void *)v518 - 8)) & 1) == 0
                                  }
                                         && (sub_1CBF686A0((void **)&v988, 30, *((void *)v518 - 4)) & 1) == 0)
                                  {
                                    goto LABEL_964;
                                  }
                                  v524 = a2[-4 * (*((_DWORD *)a2 + 5) & 0x7FFFFFF) + 4];
                                  int v525 = *((unsigned __int8 *)v524 + 16);
                                  if (v525 == 5)
                                  {
                                    if (*((_WORD *)v524 + 9) != 28) {
                                      goto LABEL_964;
                                    }
                                    int v532 = (void *)((char *)v524 - 32 * (*((_DWORD *)v524 + 5) & 0x7FFFFFF));
                                    uint64_t v526 = **((void **)&v989 + 1);
                                    if (**((void **)&v989 + 1) == *v532) {
                                      goto LABEL_1007;
                                    }
                                    uint64_t v527 = v532 + 4;
                                  }
                                  else
                                  {
                                    if (v525 != 56) {
                                      goto LABEL_964;
                                    }
                                    uint64_t v526 = **((void **)&v989 + 1);
                                    if (**((void **)&v989 + 1) == *((void *)v524 - 8)) {
                                      goto LABEL_1007;
                                    }
                                    uint64_t v527 = (void *)((char *)v524 - 32);
                                  }
                                  if (v526 == *v527) {
                                    goto LABEL_1007;
                                  }
LABEL_964:
                                  uint64_t v533 = a2[-4 * (*((_DWORD *)a2 + 5) & 0x7FFFFFF) + 4];
                                  int v534 = *((unsigned __int8 *)v533 + 16);
                                  if (v534 == 5)
                                  {
                                    if (*((_WORD *)v533 + 9) != 28
                                      || (sub_1CBF686A0((void **)&v988, 30, *((void *)v533 - 4 * (*((_DWORD *)v533 + 5) & 0x7FFFFFF))) & 1) == 0&& !sub_1CBF686A0((void **)&v988, 30, ((void *)v533 - 4 * (*((_DWORD *)v533 + 5) & 0x7FFFFFF))[4]))
                                    {
                                      goto LABEL_981;
                                    }
                                  }
                                  else if (v534 != 56 {
                                         || (sub_1CBF686A0((void **)&v988, 30, *((void *)v533 - 8)) & 1) == 0
                                  }
                                         && (sub_1CBF686A0((void **)&v988, 30, *((void *)v533 - 4)) & 1) == 0)
                                  {
                                    goto LABEL_981;
                                  }
                                  uint64_t v531 = (uint64_t)a2[-4 * (*((_DWORD *)a2 + 5) & 0x7FFFFFF)];
LABEL_973:
                                  int v535 = *(unsigned __int8 *)(v531 + 16);
                                  if (v535 == 5)
                                  {
                                    if (*(_WORD *)(v531 + 18) != 28) {
                                      goto LABEL_981;
                                    }
                                    int v538 = (void *)(v531 - 32 * (*(_DWORD *)(v531 + 20) & 0x7FFFFFF));
                                    uint64_t v536 = **((void **)&v989 + 1);
                                    if (**((void **)&v989 + 1) == *v538) {
                                      goto LABEL_1007;
                                    }
                                    unint64_t v537 = v538 + 4;
                                  }
                                  else
                                  {
                                    if (v535 != 56) {
                                      goto LABEL_981;
                                    }
                                    uint64_t v536 = **((void **)&v989 + 1);
                                    if (**((void **)&v989 + 1) == *(void *)(v531 - 64)) {
                                      goto LABEL_1007;
                                    }
                                    unint64_t v537 = (void *)(v531 - 32);
                                  }
                                  if (v536 != *v537) {
                                    goto LABEL_981;
                                  }
LABEL_1007:
                                  LOWORD(v990) = 257;
                                  p_src = (void **)&v988;
                                  char v554 = 29;
                                  uint64_t v555 = (llvm::Instruction *)v514;
LABEL_1008:
                                  int v556 = (llvm *)v515;
                                  return llvm::BinaryOperator::Create(v554, v555, (uint64_t)v556, (const char **)p_src, 0);
                                }
                              }
                            }
                            if (*((unsigned char *)v185 + 16) != 84
                              || (uint64_t v338 = *((void *)v185 - 4)) == 0
                              || *(unsigned char *)(v338 + 16)
                              || *(void *)(v338 + 24) != *((void *)v185 + 9)
                              || (*(unsigned char *)(v338 + 33) & 0x20) == 0)
                            {
                              if (!v337) {
                                goto LABEL_837;
                              }
                              goto LABEL_612;
                            }
                            if (!v337 || *(void *)(v337 + 8)) {
                              goto LABEL_837;
                            }
                            *(void *)&long long v988 = &v997;
                            *((void *)&v988 + 1) = &v996;
                            *(void *)&long long v989 = &v997;
                            *((void *)&v989 + 1) = &v996;
                            v990 = &v997;
                            v991 = &v996;
                            v992[0] = &v997;
                            v992[1] = &v996;
                            if ((sub_1CC04A6C4((void **)&v988, (uint64_t)v185) & 1) != 0
                              || (sub_1CC04A7E0((void **)&v989, (uint64_t)v185) & 1) != 0
                              || (sub_1CC04A914(&v990, (uint64_t)v185) & 1) != 0
                              || sub_1CC04AA3C(v992, (uint64_t)v185))
                            {
                              uint64_t v354 = *((void *)v997 + 1);
                              BOOL v355 = v354 && *(void *)(v354 + 8) == 0;
                              if (sub_1CC9F4000((uint64_t)v997, v355))
                              {
                                uint64_t v400 = *((void *)v996 + 1);
                                BOOL v401 = v400 && *(void *)(v400 + 8) == 0;
                                if (sub_1CC9F4000((uint64_t)v996, v401))
                                {
                                  int v403 = *(_DWORD *)(*((void *)v185 - 4) + 36);
                                  switch(v403)
                                  {
                                    case 306:
                                      int v404 = 305;
                                      break;
                                    case 274:
                                      int v404 = 275;
                                      break;
                                    case 275:
                                      int v404 = 274;
                                      break;
                                    default:
                                      int v404 = 306;
                                      break;
                                  }
                                  uint64_t v405 = *(void *)(a1 + 24);
                                  LOWORD(v990) = 257;
                                  uint64_t v406 = sub_1CC2427E8(v405, (uint64_t)v997, (uint64_t)&v988, v402);
                                  uint64_t v407 = *(void *)(a1 + 24);
                                  LOWORD(v990) = 257;
                                  int v409 = sub_1CC2427E8(v407, (uint64_t)v996, (uint64_t)&v988, v408);
                                  uint64_t v410 = *(llvm::IRBuilderBase **)(a1 + 24);
                                  LOWORD(v990) = 257;
                                  int v411 = v404;
                                  int v412 = v406;
LABEL_831:
                                  Binaryuint64_t Intrinsic = (llvm::Value *)llvm::IRBuilderBase::CreateBinaryIntrinsic(v410, v411, v412, v409, 0, (const llvm::Twine *)&v988);
                                  uint64_t v366 = a1;
                                  uint64_t v367 = (llvm::ValueAsMetadata *)a2;
                                  goto LABEL_664;
                                }
                              }
                            }
                            int v413 = v998;
                            int v414 = (llvm ***)&v989;
                            *(void *)&long long v988 = &v997;
                            *(void *)&long long v989 = &v996;
                            *((void *)&v989 + 1) = &v997;
                            v991 = &v996;
                            v992[0] = &v997;
                            v993 = &v996;
                            v994[0] = &v997;
                            v995 = &v996;
                            int v415 = *((unsigned __int8 *)v998 + 16);
                            if (v415 == 85)
                            {
                              uint64_t v420 = *((void *)v998 - 12);
                              if (v420 && *(unsigned char *)(v420 + 16) == 81)
                              {
                                if ((uint64_t v421 = *((void *)v998 - 8),
                                      uint64_t v422 = *((void *)v998 - 4),
                                      uint64_t v418 = *(void *)(v420 - 64),
                                      uint64_t v419 = *(void *)(v420 - 32),
                                      v421 == v418)
                                  && v422 == v419
                                  || v421 == v419 && v422 == v418)
                                {
                                  int v423 = *(_WORD *)(v420 + 18) & 0x3E;
                                  if (v421 == v418)
                                  {
                                    if (v423 == 38) {
                                      goto LABEL_748;
                                    }
                                  }
                                  else if (v423 == 40)
                                  {
                                    goto LABEL_748;
                                  }
                                }
                              }
                            }
                            else
                            {
                              if (v415 != 84) {
                                goto LABEL_762;
                              }
                              uint64_t v416 = *((void *)v998 - 4);
                              if (!v416) {
                                goto LABEL_836;
                              }
                              if (!*(unsigned char *)(v416 + 16)
                                && *(void *)(v416 + 24) == *((void *)v998 + 9)
                                && (*(unsigned char *)(v416 + 33) & 0x20) != 0
                                && *(_DWORD *)(v416 + 36) == 274)
                              {
                                uint64_t v417 = (uint64_t *)((char *)v998 - 32 * (*((_DWORD *)v998 + 5) & 0x7FFFFFF));
                                uint64_t v418 = *v417;
                                uint64_t v419 = v417[4];
LABEL_748:
                                if (sub_1CBF686A0((void **)&v988, 30, v418) && v419)
                                {
                                  uint64_t v418 = v419;
                                  goto LABEL_828;
                                }
                                char v429 = sub_1CBF686A0((void **)&v988, 30, v419);
                                if (v418 && (v429 & 1) != 0) {
                                  goto LABEL_828;
                                }
                              }
                            }
                            int v415 = *((unsigned __int8 *)v413 + 16);
LABEL_762:
                            int v414 = &v991;
                            if (v415 == 85)
                            {
                              uint64_t v433 = *((void *)v413 - 12);
                              if (!v433 || *(unsigned char *)(v433 + 16) != 81) {
                                goto LABEL_784;
                              }
                              uint64_t v434 = *((void *)v413 - 8);
                              uint64_t v435 = *((void *)v413 - 4);
                              uint64_t v418 = *(void *)(v433 - 64);
                              uint64_t v432 = *(void *)(v433 - 32);
                              if ((v434 != v418 || v435 != v432) && (v434 != v432 || v435 != v418)) {
                                goto LABEL_784;
                              }
                              int v436 = *(_WORD *)(v433 + 18) & 0x3E;
                              if (v434 == v418)
                              {
                                if (v436 != 40) {
                                  goto LABEL_784;
                                }
                              }
                              else if (v436 != 38)
                              {
                                goto LABEL_784;
                              }
                            }
                            else
                            {
                              if (v415 != 84) {
                                goto LABEL_784;
                              }
                              uint64_t v430 = *((void *)v413 - 4);
                              if (!v430
                                || *(unsigned char *)(v430 + 16)
                                || *(void *)(v430 + 24) != *((void *)v413 + 9)
                                || (*(unsigned char *)(v430 + 33) & 0x20) == 0
                                || *(_DWORD *)(v430 + 36) != 275)
                              {
                                goto LABEL_784;
                              }
                              uint64_t v431 = (uint64_t *)((char *)v413 - 32 * (*((_DWORD *)v413 + 5) & 0x7FFFFFF));
                              uint64_t v418 = *v431;
                              uint64_t v432 = v431[4];
                            }
                            if (sub_1CBF686A0((void **)&v989 + 1, 30, v418) && v432) {
                              goto LABEL_827;
                            }
                            char v437 = sub_1CBF686A0((void **)&v989 + 1, 30, v432);
                            if (v418 && (v437 & 1) != 0) {
                              goto LABEL_828;
                            }
LABEL_784:
                            int v414 = &v993;
                            int v438 = *((unsigned __int8 *)v413 + 16);
                            if (v438 == 85)
                            {
                              uint64_t v441 = *((void *)v413 - 12);
                              if (v441 && *(unsigned char *)(v441 + 16) == 81)
                              {
                                if ((uint64_t v442 = *((void *)v413 - 8),
                                      uint64_t v443 = *((void *)v413 - 4),
                                      uint64_t v418 = *(void *)(v441 - 64),
                                      uint64_t v432 = *(void *)(v441 - 32),
                                      v442 == v418)
                                  && v443 == v432
                                  || v442 == v432 && v443 == v418)
                                {
                                  int v444 = *(_WORD *)(v441 + 18) & 0x3E;
                                  if (v442 == v418)
                                  {
                                    if (v444 == 34) {
                                      goto LABEL_802;
                                    }
                                  }
                                  else if (v444 == 36)
                                  {
                                    goto LABEL_802;
                                  }
                                }
                              }
                            }
                            else
                            {
                              if (v438 != 84)
                              {
LABEL_807:
                                int v414 = &v995;
                                if (v438 == 85)
                                {
                                  uint64_t v448 = *((void *)v413 - 12);
                                  if (!v448 || *(unsigned char *)(v448 + 16) != 81) {
                                    goto LABEL_836;
                                  }
                                  uint64_t v449 = *((void *)v413 - 8);
                                  uint64_t v450 = *((void *)v413 - 4);
                                  uint64_t v418 = *(void *)(v448 - 64);
                                  uint64_t v432 = *(void *)(v448 - 32);
                                  if ((v449 != v418 || v450 != v432) && (v449 != v432 || v450 != v418)) {
                                    goto LABEL_836;
                                  }
                                  int v451 = *(_WORD *)(v448 + 18) & 0x3E;
                                  if (v449 == v418)
                                  {
                                    if (v451 != 36) {
                                      goto LABEL_836;
                                    }
                                  }
                                  else if (v451 != 34)
                                  {
                                    goto LABEL_836;
                                  }
                                }
                                else
                                {
                                  if (v438 != 84) {
                                    goto LABEL_836;
                                  }
                                  uint64_t v446 = *((void *)v413 - 4);
                                  if (!v446
                                    || *(unsigned char *)(v446 + 16)
                                    || *(void *)(v446 + 24) != *((void *)v413 + 9)
                                    || (*(unsigned char *)(v446 + 33) & 0x20) == 0
                                    || *(_DWORD *)(v446 + 36) != 306)
                                  {
                                    goto LABEL_836;
                                  }
                                  uint64_t v447 = (uint64_t *)((char *)v413 - 32 * (*((_DWORD *)v413 + 5) & 0x7FFFFFF));
                                  uint64_t v418 = *v447;
                                  uint64_t v432 = v447[4];
                                }
                                if (sub_1CBF686A0(v994, 30, v418) && v432)
                                {
LABEL_827:
                                  uint64_t v418 = v432;
                                  goto LABEL_828;
                                }
                                char v455 = sub_1CBF686A0(v994, 30, v432);
                                if (!v418 || (v455 & 1) == 0)
                                {
LABEL_836:
                                  int v185 = v998;
                                  uint64_t v337 = *((void *)v998 + 1);
                                  if (!v337) {
                                    goto LABEL_837;
                                  }
LABEL_612:
                                  if (*(void *)(v337 + 8) || *((unsigned char *)v185 + 16) != 85) {
                                    goto LABEL_837;
                                  }
                                  uint64_t v340 = (const llvm::detail::DoubleAPFloat **)((char *)v185 - 64);
                                  uint64_t v339 = *((void *)v185 - 8);
                                  int v342 = (const llvm::detail::DoubleAPFloat **)((char *)v185 - 32);
                                  uint64_t v341 = *((void *)v185 - 4);
                                  unsigned int v343 = *(unsigned __int8 *)(v339 + 16);
                                  if (v343 - 81 < 2 && v343 > 0x1B) {
                                    uint64_t v345 = *((void *)v185 - 8);
                                  }
                                  else {
                                    uint64_t v345 = 0;
                                  }
                                  unsigned int v346 = *(unsigned __int8 *)(v341 + 16);
                                  if (v346 - 81 < 2 && v346 > 0x1B) {
                                    uint64_t v348 = *((void *)v185 - 4);
                                  }
                                  else {
                                    uint64_t v348 = 0;
                                  }
                                  if (v345 && (uint64_t v349 = *(void *)(v345 + 8)) != 0 && !*(void *)(v349 + 8))
                                  {
                                    BOOL v350 = 1;
                                    if (!v348) {
                                      goto LABEL_632;
                                    }
                                  }
                                  else
                                  {
                                    BOOL v350 = v343 < 0x15;
                                    if (!v348) {
                                      goto LABEL_632;
                                    }
                                  }
                                  uint64_t v351 = *(void *)(v348 + 8);
                                  if (v351 && !*(void *)(v351 + 8))
                                  {
                                    BOOL v352 = 0;
                                    if (!v350) {
                                      goto LABEL_837;
                                    }
                                    goto LABEL_633;
                                  }
LABEL_632:
                                  BOOL v352 = v346 > 0x14;
                                  if (!v350) {
                                    goto LABEL_837;
                                  }
LABEL_633:
                                  if (!v352)
                                  {
                                    if (v345)
                                    {
                                      *(_WORD *)(v345 + 18) = word_1CFB27690[*(_WORD *)(v345 + 18) & 0x3FLL] | *(_WORD *)(v345 + 18) & 0xFFC0;
                                    }
                                    else
                                    {
                                      uint64_t v356 = llvm::ConstantExpr::getNot((llvm::Constant **)v339, v175, v176);
                                      if (*v340)
                                      {
                                        **((void **)v185 - 6) = *((void *)v185 - 7);
                                        uint64_t v357 = *((void *)v185 - 7);
                                        if (v357) {
                                          *(void *)(v357 + 16) = *((void *)v185 - 6);
                                        }
                                      }
                                      *uint64_t v340 = v356;
                                      if (v356)
                                      {
                                        uint64_t v360 = *((void *)v356 + 1);
                                        uint64_t v358 = (const llvm::detail::DoubleAPFloat ***)((char *)v356 + 8);
                                        uint64_t v359 = v360;
                                        *((void *)v185 - 7) = v360;
                                        if (v360) {
                                          *(void *)(v359 + 16) = (char *)v185 - 56;
                                        }
                                        *((void *)v185 - 6) = v358;
                                        llvm::DataLayout *v358 = v340;
                                      }
                                    }
                                    if (v348)
                                    {
                                      *(_WORD *)(v348 + 18) = word_1CFB27690[*(_WORD *)(v348 + 18) & 0x3FLL] | *(_WORD *)(v348 + 18) & 0xFFC0;
                                    }
                                    else
                                    {
                                      uint64_t v361 = llvm::ConstantExpr::getNot((llvm::Constant **)v341, v175, v176);
                                      if (*v342)
                                      {
                                        **((void **)v185 - 2) = *((void *)v185 - 3);
                                        uint64_t v362 = *((void *)v185 - 3);
                                        if (v362) {
                                          *(void *)(v362 + 16) = *((void *)v185 - 2);
                                        }
                                      }
                                      void *v342 = v361;
                                      if (v361)
                                      {
                                        uint64_t v365 = *((void *)v361 + 1);
                                        char v363 = (const llvm::detail::DoubleAPFloat ***)((char *)v361 + 8);
                                        uint64_t v364 = v365;
                                        *((void *)v185 - 3) = v365;
                                        if (v365) {
                                          *(void *)(v364 + 16) = (char *)v185 - 24;
                                        }
                                        *((void *)v185 - 2) = v363;
                                        llvm::Type *v363 = v342;
                                      }
                                    }
                                    goto LABEL_663;
                                  }
LABEL_837:
                                  uint64_t v456 = *(void *)(a1 + 24);
                                  uint64_t v999 = 0;
                                  unint64_t __src = 0;
                                  *(void *)&long long v988 = &v999;
                                  *((void *)&v988 + 1) = &__src;
                                  int v457 = *((unsigned __int8 *)a2 + 16);
                                  if (v457 != 5)
                                  {
                                    if (v457 != 58) {
                                      goto LABEL_853;
                                    }
                                    uint64_t v458 = *v9;
                                    uint64_t v459 = *(void *)(*v9 + 8);
                                    if (!v459 || *(void *)(v459 + 8)) {
                                      goto LABEL_841;
                                    }
                                    int v472 = *(unsigned __int8 *)(v458 + 16);
                                    if (v472 == 5)
                                    {
                                      if (*(_WORD *)(v458 + 18) != 30) {
                                        goto LABEL_841;
                                      }
                                      unsigned int v479 = (uint64_t *)(v458 - 32 * (*(_DWORD *)(v458 + 20) & 0x7FFFFFF));
                                      if (!*v479) {
                                        goto LABEL_841;
                                      }
                                      uint64_t v999 = *v479;
                                      BOOL v473 = (void *)v479[4];
                                      if (!v473) {
                                        goto LABEL_841;
                                      }
                                    }
                                    else
                                    {
                                      if (v472 != 58) {
                                        goto LABEL_841;
                                      }
                                      if (!*(void *)(v458 - 64)) {
                                        goto LABEL_841;
                                      }
                                      uint64_t v999 = *(void *)(v458 - 64);
                                      BOOL v473 = *(void **)(v458 - 32);
                                      if (!v473) {
                                        goto LABEL_841;
                                      }
                                    }
                                    unint64_t __src = v473;
                                    if (sub_1CBF687D0((uint64_t)&v989, *(a2 - 4))) {
                                      goto LABEL_888;
                                    }
LABEL_841:
                                    uint64_t v460 = (uint64_t)*(a2 - 4);
                                    uint64_t v461 = *(void *)(v460 + 8);
                                    if (!v461 || *(void *)(v461 + 8)) {
                                      goto LABEL_853;
                                    }
                                    int v462 = *(unsigned __int8 *)(v460 + 16);
                                    if (v462 == 5)
                                    {
                                      if (*(_WORD *)(v460 + 18) != 30) {
                                        goto LABEL_853;
                                      }
                                      uint64_t v480 = *(void *)(v460 - 32 * (*(_DWORD *)(v460 + 20) & 0x7FFFFFF));
                                      if (!v480) {
                                        goto LABEL_853;
                                      }
                                      *(void *)long long v988 = v480;
                                      uint64_t v464 = *(void *)(v460 - 32 * (*(_DWORD *)(v460 + 20) & 0x7FFFFFF) + 32);
                                      if (!v464) {
                                        goto LABEL_853;
                                      }
                                    }
                                    else
                                    {
                                      if (v462 != 58) {
                                        goto LABEL_853;
                                      }
                                      uint64_t v463 = *(void *)(v460 - 64);
                                      if (!v463) {
                                        goto LABEL_853;
                                      }
                                      *(void *)long long v988 = v463;
                                      uint64_t v464 = *(void *)(v460 - 32);
                                      if (!v464) {
                                        goto LABEL_853;
                                      }
                                    }
                                    **((void **)&v988 + 1) = v464;
                                    if (sub_1CBF687D0((uint64_t)&v989, (llvm::Constant *)*v9))
                                    {
LABEL_888:
                                      uint64_t v483 = *(void *)(v999 + 8);
                                      if (v483) {
                                        BOOL v484 = *(void *)(v483 + 8) == 0;
                                      }
                                      else {
                                        BOOL v484 = 0;
                                      }
                                      if (sub_1CC9F4000(v999, v484))
                                      {
                                        unint64_t v486 = (const char *)v999;
                                      }
                                      else
                                      {
                                        uint64_t v487 = *((void *)__src + 1);
                                        if (v487) {
                                          BOOL v488 = *(void *)(v487 + 8) == 0;
                                        }
                                        else {
                                          BOOL v488 = 0;
                                        }
                                        if (!sub_1CC9F4000((uint64_t)__src, v488)) {
                                          goto LABEL_853;
                                        }
                                        unsigned int v489 = (char *)v999;
                                        unint64_t v486 = (const char *)__src;
                                        uint64_t v999 = (uint64_t)__src;
                                        unint64_t __src = v489;
                                      }
                                      if ((v486[23] & 0x10) == 0)
                                      {
                                        uint64_t v500 = 0;
                                        int v499 = &byte_1CFBCE98E;
LABEL_907:
                                        LOWORD(v990) = 773;
                                        *(void *)&long long v988 = v499;
                                        *((void *)&v988 + 1) = v500;
                                        *(void *)&long long v989 = ".not";
                                        int v206 = sub_1CC2427E8(v456, (uint64_t)v486, (uint64_t)&v988, v485);
                                        uint64_t v205 = (llvm *)__src;
                                        if ((*((unsigned char *)a2 + 23) & 0x10) == 0)
                                        {
                                          unsigned int v512 = 0;
                                          uint64_t v511 = &byte_1CFBCE98E;
                                          goto LABEL_916;
                                        }
                                        uint64_t v502 = **(void **)*a2;
                                        uint64_t v503 = *(void *)(v502 + 152);
                                        uint64_t v504 = *(unsigned int *)(v502 + 168);
                                        if (v504)
                                        {
                                          LODWORD(v505) = (v504 - 1) & ((a2 >> 4) ^ (a2 >> 9));
                                          long long v506 = (llvm ***)(v503 + 16 * v505);
                                          unint64_t v507 = *v506;
                                          if (*v506 == a2)
                                          {
LABEL_915:
                                            unint64_t v510 = v506[1];
                                            uint64_t v513 = *v510;
                                            uint64_t v511 = (char *)(v510 + 2);
                                            unsigned int v512 = v513;
LABEL_916:
                                            LOWORD(v990) = 773;
                                            *(void *)&long long v988 = v511;
                                            *((void *)&v988 + 1) = v512;
                                            *(void *)&long long v989 = ".demorgan";
                                            int v207 = (const char **)&v988;
                                            char v208 = 30;
                                            goto LABEL_917;
                                          }
                                          int v508 = 1;
                                          while (v507 != (llvm **)-4096)
                                          {
                                            int v509 = v505 + v508++;
                                            uint64_t v505 = v509 & (v504 - 1);
                                            unint64_t v507 = *(llvm ***)(v503 + 16 * v505);
                                            if (v507 == a2)
                                            {
                                              long long v506 = (llvm ***)(v503 + 16 * v505);
                                              goto LABEL_915;
                                            }
                                          }
                                        }
                                        long long v506 = (llvm ***)(v503 + 16 * v504);
                                        goto LABEL_915;
                                      }
                                      uint64_t v490 = ***(void ***)v486;
                                      uint64_t v491 = *(void *)(v490 + 152);
                                      uint64_t v492 = *(unsigned int *)(v490 + 168);
                                      if (v492)
                                      {
                                        LODWORD(v493) = (v492 - 1) & ((v486 >> 4) ^ (v486 >> 9));
                                        __int16 v494 = (const char **)(v491 + 16 * v493);
                                        int v495 = *v494;
                                        if (*v494 == v486)
                                        {
LABEL_906:
                                          unsigned int v498 = v494[1];
                                          uint64_t v501 = *(void *)v498;
                                          int v499 = (char *)(v498 + 16);
                                          uint64_t v500 = v501;
                                          goto LABEL_907;
                                        }
                                        int v496 = 1;
                                        while (v495 != (const char *)-4096)
                                        {
                                          int v497 = v493 + v496++;
                                          uint64_t v493 = v497 & (v492 - 1);
                                          int v495 = *(const char **)(v491 + 16 * v493);
                                          if (v495 == v486)
                                          {
                                            __int16 v494 = (const char **)(v491 + 16 * v493);
                                            goto LABEL_906;
                                          }
                                        }
                                      }
                                      __int16 v494 = (const char **)(v491 + 16 * v492);
                                      goto LABEL_906;
                                    }
LABEL_853:
                                    uint64_t v16 = 0;
                                    goto LABEL_919;
                                  }
                                  if (*((_WORD *)a2 + 9) != 30) {
                                    goto LABEL_853;
                                  }
                                  uint64_t v465 = *((_DWORD *)a2 + 5) & 0x7FFFFFF;
                                  uint64_t v466 = -v465;
                                  unint64_t v467 = &a2[-4 * v465];
                                  uint64_t v468 = *v467;
                                  uint64_t v469 = *((void *)*v467 + 1);
                                  if (v469 && !*(void *)(v469 + 8))
                                  {
                                    int v474 = *((unsigned __int8 *)v468 + 16);
                                    if (v474 == 5)
                                    {
                                      if (*((_WORD *)v468 + 9) != 30) {
                                        goto LABEL_851;
                                      }
                                      unsigned int v481 = (uint64_t *)((char *)v468 - 32 * (*((_DWORD *)v468 + 5) & 0x7FFFFFF));
                                      if (!*v481) {
                                        goto LABEL_851;
                                      }
                                      uint64_t v999 = *v481;
                                      uint64_t v475 = (void *)v481[4];
                                      if (!v475) {
                                        goto LABEL_851;
                                      }
                                    }
                                    else
                                    {
                                      if (v474 != 58) {
                                        goto LABEL_851;
                                      }
                                      if (!*((void *)v468 - 8)) {
                                        goto LABEL_851;
                                      }
                                      uint64_t v999 = *((void *)v468 - 8);
                                      uint64_t v475 = (void *)*((void *)v468 - 4);
                                      if (!v475) {
                                        goto LABEL_851;
                                      }
                                    }
                                    unint64_t __src = v475;
                                    if (sub_1CBF68974((uint64_t)&v989, v467[4])) {
                                      goto LABEL_888;
                                    }
                                    uint64_t v466 = -(uint64_t)(*((_DWORD *)a2 + 5) & 0x7FFFFFF);
                                  }
LABEL_851:
                                  uint64_t v470 = a2[4 * v466 + 4];
                                  uint64_t v471 = (void *)*((void *)v470 + 1);
                                  if (!v471 || v471[1]) {
                                    goto LABEL_853;
                                  }
                                  int v476 = *((unsigned __int8 *)v470 + 16);
                                  if (v476 == 5)
                                  {
                                    if (*((_WORD *)v470 + 9) != 30) {
                                      goto LABEL_853;
                                    }
                                    char v482 = (void *)*((void *)v470 - 4 * (*((_DWORD *)v470 + 5) & 0x7FFFFFF));
                                    if (!v482) {
                                      goto LABEL_853;
                                    }
                                    *(void *)long long v988 = v482;
                                    unint64_t v478 = (void *)((void *)v470 - 4 * (*((_DWORD *)v470 + 5) & 0x7FFFFFF))[4];
                                    if (!v478) {
                                      goto LABEL_853;
                                    }
                                  }
                                  else
                                  {
                                    if (v476 != 58) {
                                      goto LABEL_853;
                                    }
                                    uint64_t v477 = *((void *)v470 - 8);
                                    if (!v477) {
                                      goto LABEL_853;
                                    }
                                    *(void *)long long v988 = v477;
                                    unint64_t v478 = (void *)*((void *)v470 - 4);
                                    if (!v478) {
                                      goto LABEL_853;
                                    }
                                  }
                                  **((void **)&v988 + 1) = v478;
                                  if (sub_1CBF68974((uint64_t)&v989, a2[-4 * (*((_DWORD *)a2 + 5) & 0x7FFFFFF)]))goto LABEL_888; {
                                  goto LABEL_853;
                                  }
                                }
LABEL_828:
                                **int v414 = (llvm *)v418;
                                int v452 = *(_DWORD *)(*((void *)v185 - 4) + 36);
                                switch(v452)
                                {
                                  case 306:
                                    int v453 = 305;
                                    break;
                                  case 274:
                                    int v453 = 275;
                                    break;
                                  case 275:
                                    int v453 = 274;
                                    break;
                                  default:
                                    int v453 = 306;
                                    break;
                                }
                                uint64_t v454 = *(void *)(a1 + 24);
                                LOWORD(v990) = 257;
                                int v409 = sub_1CC2427E8(v454, (uint64_t)v996, (uint64_t)&v988, v425);
                                uint64_t v410 = *(llvm::IRBuilderBase **)(a1 + 24);
                                int v412 = v997;
                                LOWORD(v990) = 257;
                                int v411 = v453;
                                goto LABEL_831;
                              }
                              uint64_t v439 = *((void *)v413 - 4);
                              if (!v439) {
                                goto LABEL_836;
                              }
                              if (!*(unsigned char *)(v439 + 16)
                                && *(void *)(v439 + 24) == *((void *)v413 + 9)
                                && (*(unsigned char *)(v439 + 33) & 0x20) != 0
                                && *(_DWORD *)(v439 + 36) == 305)
                              {
                                int v440 = (uint64_t *)((char *)v413 - 32 * (*((_DWORD *)v413 + 5) & 0x7FFFFFF));
                                uint64_t v418 = *v440;
                                uint64_t v432 = v440[4];
LABEL_802:
                                if (sub_1CBF686A0(v992, 30, v418) && v432) {
                                  goto LABEL_827;
                                }
                                char v445 = sub_1CBF686A0(v992, 30, v432);
                                if (v418 && (v445 & 1) != 0) {
                                  goto LABEL_828;
                                }
                              }
                            }
                            int v438 = *((unsigned __int8 *)v413 + 16);
                            goto LABEL_807;
                          }
                          if ((v268 & 0xFE) == 0x38)
                          {
                            uint64_t v270 = *((void *)v185 - 8);
                            uint64_t v271 = *(void *)(v270 + 8);
                            BOOL v272 = v271 && *(void *)(v271 + 8) == 0;
                            if (sub_1CC9F4000(v270, v272))
                            {
                              uint64_t v273 = *((void *)v185 - 4);
                              uint64_t v274 = *(void *)(v273 + 8);
                              BOOL v275 = v274 && *(void *)(v274 + 8) == 0;
                              if (sub_1CC9F4000(v273, v275))
                              {
                                uint64_t v276 = *(void *)(a1 + 24);
                                uint64_t v277 = *((void *)v185 - 8);
                                *(void *)&long long v988 = "notlhs";
                                LOWORD(v990) = 259;
                                uint64_t v278 = sub_1CC2427E8(v276, v277, (uint64_t)&v988, v178);
                                uint64_t v279 = *(void *)(a1 + 24);
                                uint64_t v280 = *((void *)v185 - 4);
                                *(void *)&long long v988 = "notrhs";
                                LOWORD(v990) = 259;
                                uint64_t v205 = sub_1CC2427E8(v279, v280, (uint64_t)&v988, v281);
                                if (*((unsigned char *)v185 + 16) == 56)
                                {
                                  LOWORD(v990) = 257;
                                  int v207 = (const char **)&v988;
                                  char v208 = 29;
                                }
                                else
                                {
                                  LOWORD(v990) = 257;
                                  int v207 = (const char **)&v988;
                                  char v208 = 28;
                                }
                                int v206 = v278;
                                goto LABEL_917;
                              }
                            }
                          }
                          *((void *)&v988 + 1) = &v997;
                          *(void *)&long long v989 = &v996;
                          uint64_t v282 = *((void *)v185 + 1);
                          if (!v282 || *(void *)(v282 + 8))
                          {
LABEL_470:
                            *(void *)&long long v988 = &v997;
                            *(void *)&long long v989 = &v996;
                            int v283 = *((unsigned __int8 *)v185 + 16);
                            if (v283 == 5)
                            {
                              if (*((_WORD *)v185 + 9) != 27
                                || !sub_1CBF686A0((void **)&v988, 30, *((void *)v185 - 4 * (*((_DWORD *)v185 + 5) & 0x7FFFFFF)))|| (uint64_t v284 = ((void *)v185 - 4 * (*((_DWORD *)v185 + 5) & 0x7FFFFFF))[4]) == 0)
                              {
LABEL_480:
                                int v285 = *((unsigned __int8 *)v185 + 16);
                                if (v285 == 5)
                                {
                                  if (*((_WORD *)v185 + 9) != 27) {
                                    goto LABEL_491;
                                  }
                                  uint64_t v288 = (unsigned __int8 **)((char *)v185 - 32 * (*((_DWORD *)v185 + 5) & 0x7FFFFFF));
                                  uint64_t v286 = *v288;
                                  if (!*v288) {
                                    goto LABEL_491;
                                  }
                                  uint64_t v287 = (llvm *)v288[4];
                                  if (!v287) {
                                    goto LABEL_491;
                                  }
                                }
                                else if (v285 != 55 {
                                       || (uint64_t v286 = (unsigned __int8 *)*((void *)v185 - 8)) == 0
                                }
                                       || v286[16] > 0x14u
                                       || (uint64_t v287 = (llvm *)*((void *)v185 - 4)) == 0)
                                {
LABEL_491:
                                  if (v285 == 5)
                                  {
                                    int v292 = *((unsigned __int16 *)v185 + 9);
                                    if (v292 != 26)
                                    {
LABEL_510:
                                      if (v292 != 15)
                                      {
                                        if (v292 == 13)
                                        {
                                          uint64_t v299 = (llvm **)((char *)v185 - 32 * (*((_DWORD *)v185 + 5) & 0x7FFFFFF));
                                          if (*v299)
                                          {
                                            v997 = *v299;
                                            uint64_t v300 = v299[4];
                                            if (!v300) {
                                              goto LABEL_595;
                                            }
                                            if (*((unsigned char *)v300 + 16) != 5) {
                                              goto LABEL_594;
                                            }
                                          }
                                          else
                                          {
                                            uint64_t v300 = v299[4];
                                            if (!v300) {
                                              goto LABEL_595;
                                            }
                                          }
                                          v997 = v300;
                                          uint64_t v300 = *v299;
                                          if (*v299)
                                          {
                                            int v285 = *((unsigned __int8 *)v300 + 16);
                                            if (v285 != 5)
                                            {
LABEL_594:
                                              int v206 = llvm::ConstantExpr::getNot((llvm::Constant **)v300, v175, v176);
                                              uint64_t v205 = v997;
                                              LOWORD(v990) = 257;
                                              int v207 = (const char **)&v988;
                                              char v208 = 15;
                                              goto LABEL_917;
                                            }
                                            goto LABEL_596;
                                          }
                                        }
LABEL_595:
                                        int v285 = 5;
                                        goto LABEL_596;
                                      }
                                      uint64_t v312 = (llvm::Type **)((char *)v185 - 32 * (*((_DWORD *)v185 + 5) & 0x7FFFFFF));
                                      uint64_t v175 = *v312;
                                      if (!*v312) {
                                        goto LABEL_595;
                                      }
                                      v997 = *v312;
                                      uint64_t v311 = v312[4];
                                      int v285 = 5;
                                      if (!v311) {
                                        goto LABEL_596;
                                      }
LABEL_541:
                                      v996 = v311;
                                      if (*((unsigned __int8 *)v175 + 16) < 0x15u
                                        || (uint64_t v335 = *((void *)v185 + 1)) != 0 && !*(void *)(v335 + 8))
                                      {
                                        uint64_t v313 = *(void *)(a1 + 24);
                                        LOWORD(v990) = 257;
                                        int v206 = sub_1CC2427E8(v313, (uint64_t)v175, (uint64_t)&v988, v178);
                                        uint64_t v205 = v996;
                                        __int16 v1002 = 257;
                                        int v207 = (const char **)&v999;
                                        char v208 = 13;
                                        goto LABEL_917;
                                      }
                                      goto LABEL_596;
                                    }
                                    uint64_t v293 = (unsigned __int8 **)((char *)v185 - 32 * (*((_DWORD *)v185 + 5) & 0x7FFFFFF));
                                    uint64_t v289 = *v293;
                                    if (!*v293) {
                                      goto LABEL_595;
                                    }
                                    int v291 = (llvm *)v293[4];
                                    if (!v291) {
                                      goto LABEL_595;
                                    }
                                    unsigned int v290 = v289[16];
                                  }
                                  else
                                  {
                                    if (v285 != 54) {
                                      goto LABEL_506;
                                    }
                                    uint64_t v289 = (unsigned __int8 *)*((void *)v185 - 8);
                                    if (!v289) {
                                      goto LABEL_596;
                                    }
                                    unsigned int v290 = v289[16];
                                    if (v290 > 0x14) {
                                      goto LABEL_596;
                                    }
                                    int v291 = (llvm *)*((void *)v185 - 4);
                                    if (!v291)
                                    {
                                      int v285 = 54;
                                      goto LABEL_596;
                                    }
                                  }
                                  v996 = v291;
                                  SplatValue = v289;
                                  if (v290 != 16)
                                  {
                                    uint64_t v320 = *(void *)v289;
                                    if (!*(void *)v289 || (*(_DWORD *)(v320 + 8) & 0xFE) != 0x12)
                                    {
LABEL_505:
                                      int v285 = *((unsigned __int8 *)v185 + 16);
LABEL_506:
                                      if (v285 == 43)
                                      {
                                        uint64_t v175 = (llvm::Type *)*((void *)v185 - 8);
                                        if (!v175)
                                        {
                                          int v285 = 43;
                                          goto LABEL_596;
                                        }
                                        v997 = (llvm *)*((void *)v185 - 8);
                                        uint64_t v311 = (llvm *)*((void *)v185 - 4);
                                        int v285 = 43;
                                        if (!v311)
                                        {
LABEL_596:
                                          *(void *)&long long v988 = &v997;
                                          *(void *)&long long v989 = &v996;
                                          if (v285 == 5 && *((_WORD *)v185 + 9) == 13)
                                          {
                                            if ((v336 = sub_1CBF686A0((void **)&v988, 30, *((void *)v185 - 4 * (*((_DWORD *)v185 + 5) & 0x7FFFFFF))), int v176 = (const llvm::APInt *)((void *)v185- 4 * (*((_DWORD *)v185 + 5) & 0x7FFFFFF))[4], v336)&& v176|| sub_1CBF686A0((void **)&v988, 30, (uint64_t)v176)&& (int v176 = (const llvm::APInt *)*((void *)v185- 4 * (*((_DWORD *)v185 + 5) & 0x7FFFFFF))) != 0)
                                            {
LABEL_602:
                                              *(void *)long long v989 = v176;
                                              LOWORD(v990) = 257;
                                              uint64_t v16 = (uint64_t)llvm::BinaryOperator::Create(15, v997, (uint64_t)v996, (const char **)&v988, 0);
                                              llvm::Instruction::copyIRFlags(v16, (uint64_t)v185, 1);
                                              goto LABEL_919;
                                            }
                                          }
LABEL_603:
                                          int v185 = v998;
                                          goto LABEL_604;
                                        }
                                        goto LABEL_541;
                                      }
                                      if (v285 != 41)
                                      {
                                        if (v285 != 5) {
                                          goto LABEL_596;
                                        }
                                        int v292 = *((unsigned __int16 *)v185 + 9);
                                        goto LABEL_510;
                                      }
                                      if (*((void *)v185 - 8))
                                      {
                                        v997 = (llvm *)*((void *)v185 - 8);
                                        uint64_t v300 = (llvm *)*((void *)v185 - 4);
                                        unsigned int v308 = *((unsigned __int8 *)v300 + 16);
                                        BOOL v310 = v308 == 5 || v300 == 0 || v308 > 0x14;
                                        if (!v310) {
                                          goto LABEL_594;
                                        }
                                      }
                                      else
                                      {
                                        uint64_t v300 = (llvm *)*((void *)v185 - 4);
                                        if (!v300) {
                                          goto LABEL_582;
                                        }
                                      }
                                      v997 = v300;
                                      uint64_t v300 = (llvm *)*((void *)v185 - 8);
                                      unsigned int v331 = *((unsigned __int8 *)v300 + 16);
                                      if (v331 != 5 && v300 != 0 && v331 <= 0x14) {
                                        goto LABEL_594;
                                      }
LABEL_582:
                                      *(void *)&long long v988 = &v997;
                                      *(void *)&long long v989 = &v996;
                                      char v334 = sub_1CBF686A0((void **)&v988, 30, *((void *)v185 - 8));
                                      int v176 = (const llvm::APInt *)*((void *)v185 - 4);
                                      if ((v334 & 1) != 0 && v176) {
                                        goto LABEL_602;
                                      }
                                      if (sub_1CBF686A0((void **)&v988, 30, (uint64_t)v176))
                                      {
                                        int v176 = (const llvm::APInt *)*((void *)v185 - 8);
                                        if (v176) {
                                          goto LABEL_602;
                                        }
                                      }
                                      goto LABEL_603;
                                    }
                                    SplatValue = llvm::Constant::getSplatValue((llvm::Constant *)v289, 0);
                                    if (!SplatValue || SplatValue[16] != 16)
                                    {
                                      if (*(unsigned char *)(v320 + 8) == 18)
                                      {
                                        int v321 = *(_DWORD *)(v320 + 32);
                                        if (v321)
                                        {
                                          int v322 = 0;
                                          char v323 = 0;
                                          int v324 = -v321;
LABEL_562:
                                          ++v322;
                                          while (1)
                                          {
                                            AggregateElement = llvm::Constant::getAggregateElement((llvm::Constant *)v289, (llvm::Type *)(v322 - 1));
                                            if (!AggregateElement) {
                                              break;
                                            }
                                            int v326 = *((unsigned __int8 *)AggregateElement + 16);
                                            if ((v326 - 11) >= 2)
                                            {
                                              if (v326 != 16) {
                                                goto LABEL_505;
                                              }
                                              uint64_t v328 = AggregateElement[3];
                                              int v327 = AggregateElement + 3;
                                              unsigned int v329 = *((_DWORD *)v327 + 2);
                                              uint64_t v330 = (void *)(v328 + 8 * ((v329 - 1) >> 6));
                                              if (v329 < 0x41) {
                                                uint64_t v330 = v327;
                                              }
                                              if ((*v330 >> (v329 - 1))) {
                                                goto LABEL_505;
                                              }
                                              char v323 = 1;
                                              if (v324 + v322) {
                                                goto LABEL_562;
                                              }
                                              goto LABEL_701;
                                            }
                                            ++v322;
                                            if (v324 + v322 == 1)
                                            {
                                              if ((v323 & 1) == 0) {
                                                goto LABEL_505;
                                              }
                                              goto LABEL_701;
                                            }
                                          }
                                        }
                                      }
                                      goto LABEL_505;
                                    }
                                  }
                                  uint64_t v296 = *((void *)SplatValue + 3);
                                  unsigned int v295 = SplatValue + 24;
                                  unsigned int v297 = *((_DWORD *)v295 + 2);
                                  uint64_t v298 = (void *)(v296 + 8 * ((v297 - 1) >> 6));
                                  if (v297 < 0x41) {
                                    uint64_t v298 = v295;
                                  }
                                  if ((*v298 >> (v297 - 1))) {
                                    goto LABEL_505;
                                  }
LABEL_701:
                                  if ((*((_DWORD *)v184 + 2) & 0xFE) == 0x12) {
                                    uint64_t v184 = (llvm::Constant *)**((void **)v184 + 2);
                                  }
                                  uint64_t v389 = llvm::Constant::getNullValue(v184, v175, v176);
                                  uint64_t v391 = (llvm::Constant **)llvm::Constant::replaceUndefsWith((llvm::Constant *)v289, v389, v390);
                                  int v206 = llvm::ConstantExpr::getNot(v391, v392, v393);
LABEL_479:
                                  uint64_t v205 = v996;
                                  LOWORD(v990) = 257;
                                  int v207 = (const char **)&v988;
                                  char v208 = 27;
                                  goto LABEL_917;
                                }
                                v996 = v287;
                                if (sub_1CC04D2B0((uint64_t)&v988, (llvm::Constant *)v286))
                                {
                                  if ((*((_DWORD *)v184 + 2) & 0xFE) == 0x12) {
                                    uint64_t v184 = (llvm::Constant *)**((void **)v184 + 2);
                                  }
                                  uint64_t v374 = (llvm::Constant *)llvm::Constant::getAllOnesValue(v184, v175, v176);
                                  uint64_t v376 = (llvm::Constant **)llvm::Constant::replaceUndefsWith((llvm::Constant *)v286, v374, v375);
                                  int v206 = llvm::ConstantExpr::getNot(v376, v377, v378);
                                  uint64_t v205 = v996;
                                  LOWORD(v990) = 257;
                                  int v207 = (const char **)&v988;
                                  char v208 = 26;
                                  goto LABEL_917;
                                }
                                int v285 = *((unsigned __int8 *)v185 + 16);
                                goto LABEL_491;
                              }
                            }
                            else
                            {
                              if (v283 != 55) {
                                goto LABEL_480;
                              }
                              if (!sub_1CBF686A0((void **)&v988, 30, *((void *)v185 - 8))) {
                                goto LABEL_480;
                              }
                              uint64_t v284 = *((void *)v185 - 4);
                              if (!v284) {
                                goto LABEL_480;
                              }
                            }
                            *(void *)long long v989 = v284;
                            int v206 = v997;
                            goto LABEL_479;
                          }
                          int v301 = *((unsigned __int8 *)v185 + 16);
                          if (v301 != 5)
                          {
                            if (v301 != 57) {
                              goto LABEL_470;
                            }
                            uint64_t v302 = *((void *)v185 - 8);
                            uint64_t v303 = *(void *)(v302 + 8);
                            if (!v303 || *(void *)(v303 + 8)) {
                              goto LABEL_520;
                            }
                            int v370 = *(unsigned __int8 *)(v302 + 16);
                            if (v370 == 5)
                            {
                              if (*(_WORD *)(v302 + 18) != 15) {
                                goto LABEL_520;
                              }
                              if (!sub_1CC03F414((uint64_t)&v988, *(llvm::Constant **)(v302- 32 * (*(_DWORD *)(v302 + 20) & 0x7FFFFFF))))goto LABEL_520; {
                              uint64_t v371 = *(void *)(v302 - 32 * (*(_DWORD *)(v302 + 20) & 0x7FFFFFF) + 32);
                              }
                              if (!v371) {
                                goto LABEL_520;
                              }
                            }
                            else if (v370 != 43 {
                                   || !sub_1CBF535C4((uint64_t)&v988, *(llvm::Constant **)(v302 - 64))
                            }
                                   || (uint64_t v371 = *(void *)(v302 - 32)) == 0)
                            {
LABEL_520:
                              uint64_t v304 = *((void *)v185 - 4);
                              uint64_t v305 = *(void *)(v304 + 8);
                              if (!v305 || *(void *)(v305 + 8)) {
                                goto LABEL_470;
                              }
                              int v306 = *(unsigned __int8 *)(v304 + 16);
                              if (v306 == 5)
                              {
                                if (*(_WORD *)(v304 + 18) != 15) {
                                  goto LABEL_470;
                                }
                                if (!sub_1CC03F414((uint64_t)&v988, *(llvm::Constant **)(v304- 32 * (*(_DWORD *)(v304 + 20) & 0x7FFFFFF))))goto LABEL_470; {
                                uint64_t v307 = *(void *)(v304 - 32 * (*(_DWORD *)(v304 + 20) & 0x7FFFFFF) + 32);
                                }
                                if (!v307) {
                                  goto LABEL_470;
                                }
                              }
                              else
                              {
                                if (v306 != 43) {
                                  goto LABEL_470;
                                }
                                if (!sub_1CBF535C4((uint64_t)&v988, *(llvm::Constant **)(v304 - 64))) {
                                  goto LABEL_470;
                                }
                                uint64_t v307 = *(void *)(v304 - 32);
                                if (!v307) {
                                  goto LABEL_470;
                                }
                              }
                              **((void **)&v988 + 1) = v307;
                              uint64_t v379 = *((void *)v185 - 8);
                              if (!v379) {
                                goto LABEL_470;
                              }
                              goto LABEL_713;
                            }
                            **((void **)&v988 + 1) = v371;
                            uint64_t v379 = *((void *)v185 - 4);
                            if (v379) {
                              goto LABEL_713;
                            }
                            goto LABEL_520;
                          }
                          if (*((_WORD *)v185 + 9) != 29) {
                            goto LABEL_470;
                          }
                          uint64_t v314 = *((void *)v185 - 4 * (*((_DWORD *)v185 + 5) & 0x7FFFFFF));
                          uint64_t v315 = *(void *)(v314 + 8);
                          if (!v315 || *(void *)(v315 + 8))
                          {
LABEL_546:
                            uint64_t v316 = ((void *)v185 - 4 * (*((_DWORD *)v185 + 5) & 0x7FFFFFF))[4];
                            uint64_t v317 = *(void *)(v316 + 8);
                            if (!v317 || *(void *)(v317 + 8)) {
                              goto LABEL_470;
                            }
                            int v318 = *(unsigned __int8 *)(v316 + 16);
                            if (v318 == 5)
                            {
                              if (*(_WORD *)(v316 + 18) != 15) {
                                goto LABEL_470;
                              }
                              if (!sub_1CC03F414((uint64_t)&v988, *(llvm::Constant **)(v316- 32 * (*(_DWORD *)(v316 + 20) & 0x7FFFFFF))))goto LABEL_470; {
                              uint64_t v319 = *(void *)(v316 - 32 * (*(_DWORD *)(v316 + 20) & 0x7FFFFFF) + 32);
                              }
                              if (!v319) {
                                goto LABEL_470;
                              }
                            }
                            else
                            {
                              if (v318 != 43) {
                                goto LABEL_470;
                              }
                              if (!sub_1CBF535C4((uint64_t)&v988, *(llvm::Constant **)(v316 - 64))) {
                                goto LABEL_470;
                              }
                              uint64_t v319 = *(void *)(v316 - 32);
                              if (!v319) {
                                goto LABEL_470;
                              }
                            }
                            **((void **)&v988 + 1) = v319;
                            uint64_t v379 = *((void *)v185 - 4 * (*((_DWORD *)v185 + 5) & 0x7FFFFFF));
                            if (!v379) {
                              goto LABEL_470;
                            }
LABEL_713:
                            *(void *)long long v989 = v379;
                            uint64_t v394 = *(void *)(a1 + 24);
                            int v395 = v997;
                            uint64_t v396 = llvm::Constant::getAllOnesValue(v184, v175, v176);
                            LOWORD(v990) = 257;
                            uint64_t v397 = sub_1CB844A3C(v394, v395, (uint64_t)v396, (uint64_t)&v988, 0, 0);
                            uint64_t v398 = *(void *)(a1 + 24);
                            LOWORD(v990) = 257;
                            uint64_t v205 = sub_1CC2427E8(v398, (uint64_t)v996, (uint64_t)&v988, v399);
                            LOWORD(v990) = 257;
                            int v207 = (const char **)&v988;
                            char v208 = 28;
                            int v206 = v397;
                            goto LABEL_917;
                          }
                          int v372 = *(unsigned __int8 *)(v314 + 16);
                          if (v372 == 5)
                          {
                            if (*(_WORD *)(v314 + 18) != 15) {
                              goto LABEL_546;
                            }
                            if (!sub_1CC03F414((uint64_t)&v988, *(llvm::Constant **)(v314 - 32* (*(_DWORD *)(v314 + 20) & 0x7FFFFFF))))goto LABEL_546; {
                            uint64_t v373 = *(void *)(v314 - 32 * (*(_DWORD *)(v314 + 20) & 0x7FFFFFF) + 32);
                            }
                            if (!v373) {
                              goto LABEL_546;
                            }
                          }
                          else
                          {
                            if (v372 != 43) {
                              goto LABEL_546;
                            }
                            if (!sub_1CBF535C4((uint64_t)&v988, *(llvm::Constant **)(v314 - 64))) {
                              goto LABEL_546;
                            }
                            uint64_t v373 = *(void *)(v314 - 32);
                            if (!v373) {
                              goto LABEL_546;
                            }
                          }
                          **((void **)&v988 + 1) = v373;
                          uint64_t v379 = ((void *)v185 - 4 * (*((_DWORD *)v185 + 5) & 0x7FFFFFF))[4];
                          if (v379) {
                            goto LABEL_713;
                          }
                          goto LABEL_546;
                        }
                        unsigned int v247 = *((unsigned __int8 *)v185 + 16);
                        if (v247 >= 0x1C)
                        {
                          int v248 = *(_DWORD *)(*(void *)v185 + 8);
                          if ((v248 & 0xFE) == 0x12) {
                            int v248 = *(_DWORD *)(**(void **)(*(void *)v185 + 16) + 8);
                          }
                          if (v248 == 269)
                          {
                            if (v247 == 85)
                            {
                              BOOL v255 = (unsigned __int8 *)*((void *)v185 - 8);
                              if (v255)
                              {
                                if (v255[16] <= 0x14u)
                                {
                                  uint64_t v256 = *((void *)v185 - 12);
                                  uint64_t v257 = *((void *)v185 - 4);
                                  if (llvm::Constant::isOneValue((llvm::Constant *)v255))
                                  {
                                    uint64_t v258 = v256;
                                    goto LABEL_441;
                                  }
                                }
                              }
                            }
                            else if (v247 == 57)
                            {
                              int v249 = *((_DWORD *)v185 + 5);
                              if ((v249 & 0x40000000) != 0) {
                                unint64_t v250 = (uint64_t *)*((void *)v185 - 1);
                              }
                              else {
                                unint64_t v250 = (uint64_t *)((char *)v185 - 32 * (v249 & 0x7FFFFFF));
                              }
                              uint64_t v258 = *v250;
                              uint64_t v257 = v250[4];
LABEL_441:
                              if (sub_1CBF686A0((void **)&v988, 30, v258) && v257)
                              {
                                *(void *)long long v989 = v257;
                                uint64_t v259 = *(void *)(a1 + 24);
                                if ((*((unsigned char *)v996 + 23) & 0x10) == 0)
                                {
                                  uint64_t v382 = 0;
                                  uint64_t v381 = &byte_1CFBCE98E;
                                  goto LABEL_695;
                                }
                                uint64_t v260 = ***(void ***)v996;
                                uint64_t v261 = *(void *)(v260 + 152);
                                uint64_t v262 = *(unsigned int *)(v260 + 168);
                                if (v262)
                                {
                                  LODWORD(v263) = (v262 - 1) & ((v996 >> 4) ^ (v996 >> 9));
                                  uint64_t v264 = v261 + 16 * v263;
                                  int v265 = *(llvm **)v264;
                                  if (*(llvm **)v264 == v996)
                                  {
LABEL_694:
                                    unsigned int v380 = *(void **)(v264 + 8);
                                    uint64_t v383 = *v380;
                                    uint64_t v381 = (char *)(v380 + 2);
                                    uint64_t v382 = v383;
LABEL_695:
                                    LOWORD(v990) = 773;
                                    *(void *)&long long v988 = v381;
                                    *((void *)&v988 + 1) = v382;
                                    *(void *)&long long v989 = ".not";
                                    uint64_t v385 = sub_1CC2427E8(v259, (uint64_t)v996, (uint64_t)&v988, v178);
                                    uint64_t v386 = v997;
                                    uint64_t v387 = **(void **)v184;
                                    uint64_t v388 = *(void **)(v387 + 1568);
                                    if (!v388)
                                    {
                                      uint64_t v424 = *(llvm::ConstantInt **)(v387 + 1888);
                                      DWORD2(v988) = *(_DWORD *)(v387 + 1896) >> 8;
                                      if (DWORD2(v988) > 0x40) {
                                        llvm::APInt::initSlowCase((llvm::APInt *)&v988);
                                      }
                                      *(void *)&long long v988 = 0;
                                      uint64_t v388 = llvm::ConstantInt::get(v424, (llvm::LLVMContext *)&v988, v384);
                                      if (DWORD2(v988) >= 0x41 && (void)v988) {
                                        MEMORY[0x1D25D9CB0](v988, 0x1000C8000313F17);
                                      }
                                      *(void *)(v387 + 1568) = v388;
                                    }
                                    if ((*((_DWORD *)v184 + 2) & 0xFE) == 0x12) {
                                      uint64_t v388 = llvm::ConstantVector::getSplat((llvm::Type *)(*((unsigned int *)v184 + 8) | ((unint64_t)(*((_DWORD *)v184 + 2) == 19) << 32)), (uint64_t)v388);
                                    }
                                    LOWORD(v990) = 257;
                                    uint64_t v233 = (uint64_t)v386;
                                    unsigned int v234 = (uint64_t *)v385;
                                    uint64_t v235 = (uint64_t)v388;
                                    goto LABEL_699;
                                  }
                                  int v266 = 1;
                                  while (v265 != (llvm *)-4096)
                                  {
                                    int v267 = v263 + v266++;
                                    uint64_t v263 = v267 & (v262 - 1);
                                    int v265 = *(llvm **)(v261 + 16 * v263);
                                    if (v265 == v996)
                                    {
                                      uint64_t v264 = v261 + 16 * v263;
                                      goto LABEL_694;
                                    }
                                  }
                                }
                                uint64_t v264 = v261 + 16 * v262;
                                goto LABEL_694;
                              }
                            }
                          }
                        }
                        int v185 = v998;
                        goto LABEL_451;
                      }
                      unsigned int v197 = *((unsigned __int8 *)v185 + 16);
                      if (v197 >= 0x1C)
                      {
                        int v198 = *(_DWORD *)(*(void *)v185 + 8);
                        if ((v198 & 0xFE) == 0x12) {
                          int v198 = *(_DWORD *)(**(void **)(*(void *)v185 + 16) + 8);
                        }
                        if (v198 == 269)
                        {
                          if (v197 == 85)
                          {
                            uint64_t v209 = *((void *)v185 - 4);
                            if (!v209) {
                              goto LABEL_410;
                            }
                            unsigned int v210 = *(unsigned __int8 *)(v209 + 16);
                            if (v210 > 0x14) {
                              goto LABEL_410;
                            }
                            uint64_t v211 = *((void *)v185 - 12);
                            uint64_t v212 = *((void *)v185 - 8);
                            if (v210 == 16)
                            {
                              uint64_t v213 = *(unsigned int *)(v209 + 32);
                              if (v213 >= 0x41)
                              {
                                int v958 = 0;
                                int64_t v959 = (unint64_t)(v213 + 63) >> 6;
                                do
                                {
                                  BOOL v310 = v959-- < 1;
                                  if (v310) {
                                    break;
                                  }
                                  unint64_t v960 = *(void *)(*(void *)(v209 + 24) + 8 * v959);
                                  v958 += __clz(v960);
                                }
                                while (!v960);
                                int v961 = v213 | 0xFFFFFFC0;
                                if ((v213 & 0x3F) == 0) {
                                  int v961 = 0;
                                }
                                if (v958 + v961 != v213) {
                                  goto LABEL_410;
                                }
                              }
                              else if (*(void *)(v209 + 24))
                              {
                                goto LABEL_410;
                              }
                            }
                            else if (v210 == 17)
                            {
                              if ((sub_1CB844168(v209, 0.0) & 1) == 0) {
                                goto LABEL_410;
                              }
                            }
                            else if (v210 - 18 >= 3 && v210 != 13)
                            {
                              goto LABEL_410;
                            }
                            uint64_t v214 = v211;
                            goto LABEL_391;
                          }
                          if (v197 == 56)
                          {
                            int v199 = *((_DWORD *)v185 + 5);
                            if ((v199 & 0x40000000) != 0) {
                              uint64_t v200 = (uint64_t *)*((void *)v185 - 1);
                            }
                            else {
                              uint64_t v200 = (uint64_t *)((char *)v185 - 32 * (v199 & 0x7FFFFFF));
                            }
                            uint64_t v214 = *v200;
                            uint64_t v212 = v200[4];
LABEL_391:
                            if (sub_1CBF686A0((void **)&v988, 30, v214) && v212)
                            {
                              *(void *)long long v989 = v212;
                              uint64_t v215 = *(void *)(a1 + 24);
                              if ((*((unsigned char *)v996 + 23) & 0x10) == 0)
                              {
                                uint64_t v226 = 0;
                                unint64_t v225 = &byte_1CFBCE98E;
                                goto LABEL_403;
                              }
                              uint64_t v216 = ***(void ***)v996;
                              uint64_t v217 = *(void *)(v216 + 152);
                              uint64_t v218 = *(unsigned int *)(v216 + 168);
                              if (v218)
                              {
                                LODWORD(v219) = (v218 - 1) & ((v996 >> 4) ^ (v996 >> 9));
                                uint64_t v220 = v217 + 16 * v219;
                                uint64_t v221 = *(llvm **)v220;
                                if (*(llvm **)v220 == v996)
                                {
LABEL_402:
                                  unsigned int v224 = *(void **)(v220 + 8);
                                  uint64_t v227 = *v224;
                                  unint64_t v225 = (char *)(v224 + 2);
                                  uint64_t v226 = v227;
LABEL_403:
                                  LOWORD(v990) = 773;
                                  *(void *)&long long v988 = v225;
                                  *((void *)&v988 + 1) = v226;
                                  *(void *)&long long v989 = ".not";
                                  uint64_t v229 = sub_1CC2427E8(v215, (uint64_t)v996, (uint64_t)&v988, v178);
                                  int v230 = v997;
                                  uint64_t v231 = **(void **)v184;
                                  uint64_t v232 = *(uint64_t **)(v231 + 1560);
                                  if (!v232)
                                  {
                                    uint64_t v426 = *(llvm::ConstantInt **)(v231 + 1888);
                                    unsigned int v427 = *(_DWORD *)(v231 + 1896);
                                    DWORD2(v988) = v427 >> 8;
                                    if (v427 >> 8 > 0x40) {
                                      llvm::APInt::initSlowCase((llvm::APInt *)&v988);
                                    }
                                    if (v427 <= 0xFF) {
                                      char v428 = 0;
                                    }
                                    else {
                                      char v428 = 0xFFFFFFFFFFFFFFFFLL >> -BYTE1(v427);
                                    }
                                    *(void *)&long long v988 = v428 & 1;
                                    uint64_t v232 = llvm::ConstantInt::get(v426, (llvm::LLVMContext *)&v988, v228);
                                    if (DWORD2(v988) >= 0x41 && (void)v988) {
                                      MEMORY[0x1D25D9CB0](v988, 0x1000C8000313F17);
                                    }
                                    *(void *)(v231 + 1560) = v232;
                                  }
                                  if ((*((_DWORD *)v184 + 2) & 0xFE) == 0x12) {
                                    uint64_t v232 = (uint64_t *)llvm::ConstantVector::getSplat((llvm::Type *)(*((unsigned int *)v184 + 8) | ((unint64_t)(*((_DWORD *)v184 + 2) == 19) << 32)), (uint64_t)v232);
                                  }
                                  LOWORD(v990) = 257;
                                  uint64_t v233 = (uint64_t)v230;
                                  unsigned int v234 = v232;
                                  uint64_t v235 = (uint64_t)v229;
LABEL_699:
                                  uint64_t v369 = sub_1CC199EFC(v233, v234, v235, (const char **)&v988, 0, 0);
                                  goto LABEL_918;
                                }
                                int v222 = 1;
                                while (v221 != (llvm *)-4096)
                                {
                                  int v223 = v219 + v222++;
                                  uint64_t v219 = v223 & (v218 - 1);
                                  uint64_t v221 = *(llvm **)(v217 + 16 * v219);
                                  if (v221 == v996)
                                  {
                                    uint64_t v220 = v217 + 16 * v219;
                                    goto LABEL_402;
                                  }
                                }
                              }
                              uint64_t v220 = v217 + 16 * v218;
                              goto LABEL_402;
                            }
                          }
                        }
                      }
LABEL_410:
                      int v185 = v998;
                      goto LABEL_411;
                    }
LABEL_341:
                    LOWORD(v990) = 257;
                    int v173 = (llvm::Constant **)sub_1CC2428C0(v18, (uint64_t)__src, (uint64_t)v998, (uint64_t)&v988);
                    __int16 v1002 = 257;
                    int v53 = llvm::BinaryOperator::CreateNot(v173, (llvm::Value *)&v999, 0, v174);
LABEL_95:
                    uint64_t v16 = (uint64_t)v53;
                    if (v53) {
                      return (llvm::Value *)v16;
                    }
                    goto LABEL_342;
                  }
                  uint64_t v138 = *(llvm::Type **)(v19 - 64);
                  if (!v138) {
                    goto LABEL_342;
                  }
                  unint64_t __src = *(void **)(v19 - 64);
                  __int16 v139 = *(llvm::Type **)(v19 - 32);
                  if (!v139) {
                    goto LABEL_342;
                  }
                }
                v998 = v139;
                *(void *)&long long v988 = v138;
                *((void *)&v988 + 1) = v139;
                int v141 = *(unsigned __int8 *)(v20 + 16);
                if (v141 != 5)
                {
                  if (v141 != 58) {
                    goto LABEL_331;
                  }
                  uint64_t v142 = *(void *)(v20 - 64);
                  int v143 = *(unsigned __int8 *)(v142 + 16);
                  if (v143 == 5)
                  {
                    if (*(_WORD *)(v142 + 18) != 28) {
                      goto LABEL_299;
                    }
                    uint64_t v153 = (void **)(v142 - 32 * (*(_DWORD *)(v142 + 20) & 0x7FFFFFF));
                    int v144 = (llvm::Type *)*v153;
                    unsigned int v145 = (llvm::Type *)v153[4];
                  }
                  else
                  {
                    if (v143 != 56) {
                      goto LABEL_299;
                    }
                    int v144 = *(llvm::Type **)(v142 - 64);
                    unsigned int v145 = *(llvm::Type **)(v142 - 32);
                  }
                  if ((v138 == v144 && v139 == v145 || v138 == v145 && v139 == v144)
                    && (sub_1CBF687D0((uint64_t)&v989, *(llvm::Constant **)(v20 - 32)) & 1) != 0)
                  {
                    goto LABEL_341;
                  }
LABEL_299:
                  uint64_t v154 = *(void *)(v20 - 32);
                  int v155 = *(unsigned __int8 *)(v154 + 16);
                  if (v155 == 5)
                  {
                    if (*(_WORD *)(v154 + 18) != 28) {
                      goto LABEL_331;
                    }
                    uint64_t v158 = (unint64_t *)(v154 - 32 * (*(_DWORD *)(v154 + 20) & 0x7FFFFFF));
                    unint64_t v156 = *v158;
                    unint64_t v159 = v158[4];
                    if (v988 == __PAIR128__(v159, v156)) {
                      goto LABEL_308;
                    }
                    if ((void)v988 != v159)
                    {
LABEL_331:
                      int v137 = *(unsigned __int8 *)(v19 + 16);
                      goto LABEL_332;
                    }
                  }
                  else
                  {
                    if (v155 != 56) {
                      goto LABEL_331;
                    }
                    unint64_t v156 = *(void *)(v154 - 64);
                    unint64_t v157 = *(void *)(v154 - 32);
                    if (v988 == __PAIR128__(v157, v156)) {
                      goto LABEL_308;
                    }
                    if ((void)v988 != v157) {
                      goto LABEL_331;
                    }
                  }
                  if (*((void *)&v988 + 1) == v156)
                  {
LABEL_308:
                    if (sub_1CBF687D0((uint64_t)&v989, *(llvm::Constant **)(v20 - 64))) {
                      goto LABEL_341;
                    }
                    goto LABEL_331;
                  }
                  goto LABEL_331;
                }
                if (*(_WORD *)(v20 + 18) != 30) {
                  goto LABEL_331;
                }
                uint64_t v146 = *(_DWORD *)(v20 + 20) & 0x7FFFFFF;
                uint64_t v147 = -v146;
                uint64_t v148 = (llvm::Constant **)(v20 - 32 * v146);
                char v149 = *v148;
                int v150 = *((unsigned __int8 *)*v148 + 16);
                if (v150 == 5)
                {
                  if (*((_WORD *)v149 + 9) != 28) {
                    goto LABEL_319;
                  }
                  int v160 = (llvm::Type **)((char *)v149 - 32 * (*((_DWORD *)v149 + 5) & 0x7FFFFFF));
                  uint64_t v151 = *v160;
                  uint64_t v152 = v160[4];
                  if (v138 != v151 || v139 != v152)
                  {
LABEL_315:
                    if (v138 != v152 || v139 != v151) {
                      goto LABEL_319;
                    }
                  }
                }
                else
                {
                  if (v150 != 56) {
                    goto LABEL_319;
                  }
                  uint64_t v151 = (llvm::Type *)*((void *)v149 - 8);
                  uint64_t v152 = (llvm::Type *)*((void *)v149 - 4);
                  if (v138 != v151 || v139 != v152) {
                    goto LABEL_315;
                  }
                }
                if (sub_1CBF68974((uint64_t)&v989, v148[4])) {
                  goto LABEL_341;
                }
                uint64_t v147 = -(uint64_t)(*(_DWORD *)(v20 + 20) & 0x7FFFFFF);
LABEL_319:
                uint64_t v162 = v20 + 32 * v147;
                uint64_t v163 = *(void *)(v162 + 32);
                int v164 = *(unsigned __int8 *)(v163 + 16);
                if (v164 == 5)
                {
                  if (*(_WORD *)(v163 + 18) != 28) {
                    goto LABEL_331;
                  }
                  uint64_t v168 = (unint64_t *)(v163 - 32 * (*(_DWORD *)(v163 + 20) & 0x7FFFFFF));
                  unint64_t v165 = *v168;
                  unint64_t v167 = v168[4];
                  uint64_t v166 = v988;
                  if ((void)v988 == v165 && *((void *)&v988 + 1) == v167) {
                    goto LABEL_330;
                  }
                }
                else
                {
                  if (v164 != 56) {
                    goto LABEL_331;
                  }
                  unint64_t v165 = *(void *)(v163 - 64);
                  uint64_t v166 = v988;
                  unint64_t v167 = *(void *)(v163 - 32);
                  if (v988 == __PAIR128__(v167, v165))
                  {
LABEL_330:
                    if (sub_1CBF68974((uint64_t)&v989, *(llvm::Constant **)v162)) {
                      goto LABEL_341;
                    }
                    goto LABEL_331;
                  }
                }
                if (v166 != v167 || *((void *)&v988 + 1) != v165) {
                  goto LABEL_331;
                }
                goto LABEL_330;
              }
              goto LABEL_199;
            }
            if (*((_WORD *)v96 + 9) != 28) {
              goto LABEL_268;
            }
            uint64_t v99 = *((_DWORD *)v96 + 5) & 0x7FFFFFF;
            if (*((void *)v96 - 4 * v99))
            {
              unint64_t __src = (void *)*((void *)v96 - 4 * v99);
              if (sub_1CBF686A0((void **)&v988 + 1, 30, ((void *)v96 - 4 * (*((_DWORD *)v96 + 5) & 0x7FFFFFF))[4]))
              {
LABEL_199:
                uint64_t v95 = a2[-4 * (*((_DWORD *)a2 + 5) & 0x7FFFFFF) + 4];
                goto LABEL_200;
              }
              uint64_t v99 = *((_DWORD *)v96 + 5) & 0x7FFFFFF;
            }
            uint64_t v100 = (void *)((void *)v96 - 4 * v99)[4];
            if (!v100) {
              goto LABEL_268;
            }
            *(void *)long long v988 = v100;
            if (!sub_1CBF686A0((void **)&v988 + 1, 30, *((void *)v96 - 4 * (*((_DWORD *)v96 + 5) & 0x7FFFFFF))))goto LABEL_268; {
            goto LABEL_199;
            }
          }
          if (*((_WORD *)v59 + 9) != 29) {
            goto LABEL_181;
          }
          uint64_t v65 = (void *)*((void *)v59 - 4 * (*((_DWORD *)v59 + 5) & 0x7FFFFFF));
          int v66 = *((unsigned __int8 *)v65 + 16);
          if (v66 != 5)
          {
            if (v66 != 58) {
              goto LABEL_164;
            }
            uint64_t v67 = **((void **)&v989 + 1);
            if (**((void **)&v989 + 1) != *(v65 - 8))
            {
LABEL_129:
              if (v67 != *(v65 - 4) || (sub_1CBF687D0((uint64_t)&v990, (llvm::Constant *)*(v65 - 8)) & 1) == 0) {
                goto LABEL_164;
              }
              goto LABEL_163;
            }
            if ((sub_1CBF687D0((uint64_t)&v990, (llvm::Constant *)*(v65 - 4)) & 1) == 0)
            {
              uint64_t v67 = **((void **)&v989 + 1);
              goto LABEL_129;
            }
LABEL_163:
            if (*v991 == ((llvm::Type **)v59 - 4 * (*((_DWORD *)v59 + 5) & 0x7FFFFFF))[4]) {
              goto LABEL_93;
            }
LABEL_164:
            int v86 = (void *)((void *)v59 - 4 * (*((_DWORD *)v59 + 5) & 0x7FFFFFF))[4];
            int v87 = *((unsigned __int8 *)v86 + 16);
            if (v87 != 5)
            {
              if (v87 != 58) {
                goto LABEL_181;
              }
              uint64_t v88 = **((void **)&v989 + 1);
              if (**((void **)&v989 + 1) != *(v86 - 8))
              {
LABEL_169:
                if (v88 != *(v86 - 4) || (sub_1CBF687D0((uint64_t)&v990, (llvm::Constant *)*(v86 - 8)) & 1) == 0) {
                  goto LABEL_181;
                }
                goto LABEL_179;
              }
              if ((sub_1CBF687D0((uint64_t)&v990, (llvm::Constant *)*(v86 - 4)) & 1) == 0)
              {
                uint64_t v88 = **((void **)&v989 + 1);
                goto LABEL_169;
              }
LABEL_179:
              uint64_t v61 = (llvm::Type **)((char *)v59 - 32 * (*((_DWORD *)v59 + 5) & 0x7FFFFFF));
              goto LABEL_180;
            }
            if (*((_WORD *)v86 + 9) != 30) {
              goto LABEL_181;
            }
            uint64_t v89 = *((_DWORD *)v86 + 5) & 0x7FFFFFF;
            unsigned int v90 = &v86[-4 * v89];
            uint64_t v91 = (llvm::Constant *)**((void **)&v989 + 1);
            if (**((void **)&v989 + 1) == *v90)
            {
              if (sub_1CBF68974((uint64_t)&v990, (llvm::Constant *)v90[4])) {
                goto LABEL_179;
              }
              uint64_t v91 = (llvm::Constant *)**((void **)&v989 + 1);
              uint64_t v92 = -(uint64_t)(*((_DWORD *)v86 + 5) & 0x7FFFFFF);
            }
            else
            {
              uint64_t v92 = -v89;
            }
            uint64_t v93 = (llvm::Constant **)&v86[4 * v92];
            if (v91 != v93[4] || !sub_1CBF68974((uint64_t)&v990, *v93)) {
              goto LABEL_181;
            }
            goto LABEL_179;
          }
          if (*((_WORD *)v65 + 9) != 30) {
            goto LABEL_164;
          }
          uint64_t v72 = *((_DWORD *)v65 + 5) & 0x7FFFFFF;
          uint64_t v73 = &v65[-4 * v72];
          int v74 = (llvm::Constant *)**((void **)&v989 + 1);
          if (**((void **)&v989 + 1) == *v73)
          {
            if (sub_1CBF68974((uint64_t)&v990, (llvm::Constant *)v73[4])) {
              goto LABEL_163;
            }
            int v74 = (llvm::Constant *)**((void **)&v989 + 1);
            uint64_t v75 = -(uint64_t)(*((_DWORD *)v65 + 5) & 0x7FFFFFF);
          }
          else
          {
            uint64_t v75 = -v72;
          }
          int v85 = (llvm::Constant **)&v65[4 * v75];
          if (v74 != v85[4] || !sub_1CBF68974((uint64_t)&v990, *v85)) {
            goto LABEL_164;
          }
          goto LABEL_163;
        }
        int v22 = *(unsigned __int8 *)(v19 + 16);
        if (v22 == 5)
        {
          if (*(_WORD *)(v19 + 18) != 28) {
            goto LABEL_44;
          }
          uint64_t v29 = v19 - 32 * (*(_DWORD *)(v19 + 20) & 0x7FFFFFF);
          int v23 = *(llvm::Type **)v29;
          if (!*(void *)v29) {
            goto LABEL_44;
          }
          unint64_t __src = *(void **)v29;
          uint64_t v24 = *(llvm::Type **)(v29 + 32);
          if (!v24) {
            goto LABEL_44;
          }
        }
        else
        {
          if (v22 != 56) {
            goto LABEL_44;
          }
          int v23 = *(llvm::Type **)(v19 - 64);
          if (!v23) {
            goto LABEL_44;
          }
          unint64_t __src = *(void **)(v19 - 64);
          uint64_t v24 = *(llvm::Type **)(v19 - 32);
          if (!v24) {
            goto LABEL_44;
          }
        }
        v998 = v24;
        int v30 = *(unsigned __int8 *)(v20 + 16);
        if (v30 == 5)
        {
          if (*(_WORD *)(v20 + 18) != 29) {
            goto LABEL_44;
          }
          int v38 = (llvm::Type **)(v20 - 32 * (*(_DWORD *)(v20 + 20) & 0x7FFFFFF));
          int v31 = *v38;
          uint64_t v32 = v38[4];
          if (v23 == v31 && v24 == v32) {
            goto LABEL_94;
          }
        }
        else
        {
          if (v30 != 57) {
            goto LABEL_44;
          }
          int v31 = *(llvm::Type **)(v20 - 64);
          uint64_t v32 = *(llvm::Type **)(v20 - 32);
          if (v23 == v31 && v24 == v32) {
            goto LABEL_94;
          }
        }
        if (v23 == v32 && v24 == v31) {
          goto LABEL_94;
        }
LABEL_44:
        int v40 = *(unsigned __int8 *)(v20 + 16);
        if (v40 == 5)
        {
          if (*(_WORD *)(v20 + 18) != 28) {
            goto LABEL_60;
          }
          uint64_t v41 = v20 - 32 * (*(_DWORD *)(v20 + 20) & 0x7FFFFFF);
          int v23 = *(llvm::Type **)v41;
          if (!*(void *)v41) {
            goto LABEL_60;
          }
          unint64_t __src = *(void **)v41;
          uint64_t v24 = *(llvm::Type **)(v41 + 32);
          if (!v24) {
            goto LABEL_60;
          }
        }
        else
        {
          if (v40 != 56) {
            goto LABEL_60;
          }
          int v23 = *(llvm::Type **)(v20 - 64);
          if (!v23) {
            goto LABEL_60;
          }
          unint64_t __src = *(void **)(v20 - 64);
          uint64_t v24 = *(llvm::Type **)(v20 - 32);
          if (!v24) {
            goto LABEL_60;
          }
        }
        v998 = v24;
        if (v22 == 5)
        {
          if (*(_WORD *)(v19 + 18) == 29)
          {
            uint64_t v44 = (llvm::Type **)(v19 - 32 * (*(_DWORD *)(v19 + 20) & 0x7FFFFFF));
            uint64_t v42 = *v44;
            uint64_t v43 = v44[4];
            goto LABEL_57;
          }
        }
        else if (v22 == 57)
        {
          uint64_t v42 = *(llvm::Type **)(v19 - 64);
          uint64_t v43 = *(llvm::Type **)(v19 - 32);
LABEL_57:
          if (v23 == v42 && v24 == v43) {
            goto LABEL_94;
          }
          if (v23 != v43) {
            goto LABEL_60;
          }
          goto LABEL_89;
        }
LABEL_60:
        *(void *)&long long v988 = &__src;
        *((void *)&v988 + 1) = &v998;
        *((void *)&v989 + 1) = &__src;
        v991 = &v998;
LABEL_91:
        if (sub_1CC04308C((void **)&v988, 29, v19)
          && sub_1CCA138C8((uint64_t **)&v989 + 1, (uint64_t)*(a2 - 4)))
        {
          goto LABEL_93;
        }
        goto LABEL_181;
      }
      int v25 = *((unsigned __int16 *)a2 + 9);
      if (v25 != 30) {
        goto LABEL_88;
      }
      uint64_t v26 = &a2[-4 * (*((_DWORD *)a2 + 5) & 0x7FFFFFF)];
      uint64_t v27 = *v26;
      int v28 = *((unsigned __int8 *)*v26 + 16);
      if (v28 == 5)
      {
        if (*((_WORD *)v27 + 9) != 28) {
          goto LABEL_69;
        }
        uint64_t v33 = (llvm::Type **)((char *)v27 - 32 * (*((_DWORD *)v27 + 5) & 0x7FFFFFF));
        int v23 = *v33;
        if (!*v33) {
          goto LABEL_69;
        }
        unint64_t __src = *v33;
        uint64_t v24 = v33[4];
        if (!v24) {
          goto LABEL_69;
        }
      }
      else
      {
        if (v28 != 56) {
          goto LABEL_69;
        }
        int v23 = (llvm::Type *)*((void *)v27 - 8);
        if (!v23) {
          goto LABEL_69;
        }
        unint64_t __src = (void *)*((void *)v27 - 8);
        uint64_t v24 = (llvm::Type *)*((void *)v27 - 4);
        if (!v24) {
          goto LABEL_69;
        }
      }
      v998 = v24;
      uint64_t v34 = v26[4];
      int v35 = *((unsigned __int8 *)v34 + 16);
      if (v35 == 5)
      {
        if (*((_WORD *)v34 + 9) == 29)
        {
          uint64_t v45 = (llvm::Type **)((char *)v34 - 32 * (*((_DWORD *)v34 + 5) & 0x7FFFFFF));
          int v36 = *v45;
          uint64_t v37 = v45[4];
LABEL_63:
          BOOL v46 = v23 == v36 && v24 == v37;
          if (v46 || v23 == v37 && v24 == v36) {
            goto LABEL_94;
          }
        }
      }
      else if (v35 == 57)
      {
        int v36 = (llvm::Type *)*((void *)v34 - 8);
        uint64_t v37 = (llvm::Type *)*((void *)v34 - 4);
        goto LABEL_63;
      }
LABEL_69:
      uint64_t v47 = v26[4];
      int v48 = *((unsigned __int8 *)v47 + 16);
      if (v48 == 5)
      {
        if (*((_WORD *)v47 + 9) != 28) {
          goto LABEL_88;
        }
        int v49 = (llvm::Type **)((char *)v47 - 32 * (*((_DWORD *)v47 + 5) & 0x7FFFFFF));
        int v23 = *v49;
        if (!*v49) {
          goto LABEL_88;
        }
        unint64_t __src = *v49;
        uint64_t v24 = v49[4];
        if (!v24) {
          goto LABEL_88;
        }
      }
      else
      {
        if (v48 != 56) {
          goto LABEL_88;
        }
        int v23 = (llvm::Type *)*((void *)v47 - 8);
        if (!v23) {
          goto LABEL_88;
        }
        unint64_t __src = (void *)*((void *)v47 - 8);
        uint64_t v24 = (llvm::Type *)*((void *)v47 - 4);
        if (!v24) {
          goto LABEL_88;
        }
      }
      v998 = v24;
      if (v28 == 5)
      {
        if (*((_WORD *)v27 + 9) != 29) {
          goto LABEL_88;
        }
        uint64_t v51 = (llvm::Type **)((char *)v27 - 32 * (*((_DWORD *)v27 + 5) & 0x7FFFFFF));
        uint64_t v42 = *v51;
        uint64_t v50 = v51[4];
        if (v23 == v42 && v24 == v50) {
          goto LABEL_94;
        }
      }
      else
      {
        if (v28 != 57) {
          goto LABEL_88;
        }
        uint64_t v42 = (llvm::Type *)*((void *)v27 - 8);
        uint64_t v50 = (llvm::Type *)*((void *)v27 - 4);
        if (v23 == v42 && v24 == v50) {
          goto LABEL_94;
        }
      }
      if (v23 == v50)
      {
LABEL_89:
        if (v24 == v42)
        {
LABEL_94:
          LOWORD(v990) = 257;
          int v53 = llvm::BinaryOperator::Create(30, v23, (uint64_t)v24, (const char **)&v988, 0);
          goto LABEL_95;
        }
        goto LABEL_90;
      }
LABEL_88:
      *(void *)&long long v988 = &__src;
      *((void *)&v988 + 1) = &v998;
      *((void *)&v989 + 1) = &__src;
      v991 = &v998;
      goto LABEL_98;
    }
  }
  return (llvm::Value *)v16;
}

uint64_t sub_1CCA12274(uint64_t a1, unsigned __int8 *a2, int *a3, uint64_t *a4, void *a5, void *a6)
{
  unsigned int v15 = 1;
  unint64_t v14 = 0;
  uint64_t v10 = llvm::decomposeBitTestICmp(a1, a2, a3, a4, &v14, 1);
  if (v10)
  {
    uint64_t v11 = *(void *)*a4;
    Splat = llvm::ConstantInt::get(*(llvm::ConstantInt **)v11, (llvm::LLVMContext *)&v14, v9);
    if ((*(_DWORD *)(v11 + 8) & 0xFE) == 0x12) {
      Splat = llvm::ConstantVector::getSplat((llvm::Type *)(*(unsigned int *)(v11 + 32) | ((unint64_t)(*(_DWORD *)(v11 + 8) == 19) << 32)), (uint64_t)Splat);
    }
    *a5 = Splat;
    *a6 = llvm::ConstantInt::get(*(llvm::ConstantInt **)*a4, 0, 0);
  }
  if (v15 >= 0x41 && v14) {
    MEMORY[0x1D25D9CB0](v14, 0x1000C8000313F17);
  }
  return v10;
}

uint64_t sub_1CCA12364(unsigned __int8 *a1, unsigned __int8 *a2, unsigned __int8 *a3, int a4)
{
  uint64_t v57 = 0;
  uint64_t v58 = 0;
  uint64_t v55 = 0;
  uint64_t v56 = 0;
  uint64_t v54 = &v58;
  sub_1CBF528D8((uint64_t)&v54, a1);
  uint64_t v54 = &v57;
  uint64_t v55 = 0;
  sub_1CBF528D8((uint64_t)&v54, a2);
  uint64_t v54 = &v56;
  uint64_t v55 = 0;
  sub_1CBF528D8((uint64_t)&v54, a3);
  if (v58)
  {
    uint64_t v8 = *(unsigned int *)(v58 + 8);
    if (v8 > 0x40)
    {
      int v10 = 0;
      unint64_t v11 = (unint64_t)(v8 + 63) >> 6;
      long long v12 = *(int8x8_t **)v58;
      do
      {
        int8x8_t v13 = *v12++;
        uint8x8_t v14 = (uint8x8_t)vcnt_s8(v13);
        v14.i16[0] = vaddlv_u8(v14);
        v10 += v14.i32[0];
        --v11;
      }
      while (v11);
      BOOL v9 = v10 == 1;
    }
    else if (*(void *)v58)
    {
      BOOL v9 = (*(void *)v58 & (*(void *)v58 - 1)) == 0;
    }
    else
    {
      BOOL v9 = 0;
    }
  }
  else
  {
    BOOL v9 = 0;
  }
  if (v57)
  {
    uint64_t v15 = *(unsigned int *)(v57 + 8);
    if (v15 > 0x40)
    {
      int v17 = 0;
      unint64_t v18 = (unint64_t)(v15 + 63) >> 6;
      uint64_t v19 = *(int8x8_t **)v57;
      do
      {
        int8x8_t v20 = *v19++;
        uint8x8_t v21 = (uint8x8_t)vcnt_s8(v20);
        v21.i16[0] = vaddlv_u8(v21);
        v17 += v21.i32[0];
        --v18;
      }
      while (v18);
      BOOL v16 = v17 == 1;
    }
    else if (*(void *)v57)
    {
      BOOL v16 = (*(void *)v57 & (*(void *)v57 - 1)) == 0;
    }
    else
    {
      BOOL v16 = 0;
    }
  }
  else
  {
    BOOL v16 = 0;
  }
  if (v56)
  {
    uint64_t v22 = *(unsigned int *)(v56 + 8);
    if (v22 <= 0x40)
    {
      if (*(void *)v56) {
        goto LABEL_22;
      }
LABEL_37:
      if (a4 == 32) {
        int v30 = 336;
      }
      else {
        int v30 = 672;
      }
      if (a4 == 32) {
        int v31 = 466;
      }
      else {
        int v31 = 737;
      }
      if (a4 == 32) {
        int v32 = 520;
      }
      else {
        int v32 = 260;
      }
      if (v9) {
        int v30 = v31;
      }
      if (v16) {
        int v33 = v32;
      }
      else {
        int v33 = 0;
      }
      return v33 | v30;
    }
    int v25 = 0;
    int64_t v26 = (unint64_t)(v22 + 63) >> 6;
    do
    {
      if (v26-- < 1) {
        break;
      }
      unint64_t v28 = *(void *)(*(void *)v56 + 8 * v26);
      v25 += __clz(v28);
    }
    while (!v28);
    int v29 = v22 | 0xFFFFFFC0;
    if ((v22 & 0x3F) == 0) {
      int v29 = 0;
    }
    if (v25 + v29 == v22) {
      goto LABEL_37;
    }
  }
LABEL_22:
  if (a1 == a3)
  {
    if (a4 == 32) {
      unsigned int v34 = 65;
    }
    else {
      unsigned int v34 = 130;
    }
    if (a4 == 32) {
      unsigned int v35 = 225;
    }
    else {
      unsigned int v35 = 210;
    }
    if (v9) {
      uint64_t result = v35;
    }
    else {
      uint64_t result = v34;
    }
  }
  else
  {
    uint64_t result = 0;
    if (v58 && v56)
    {
      uint64_t v24 = *(unsigned int *)(v56 + 8);
      if (v24 >= 0x41)
      {
        unint64_t v42 = (unint64_t)(v24 + 63) >> 6;
        uint64_t v43 = *(uint64_t **)v56;
        uint64_t v44 = *(int8x8_t **)v58;
        while (1)
        {
          uint64_t v46 = *v43++;
          uint64_t v45 = v46;
          uint64_t v47 = (uint64_t)*v44++;
          if ((v45 & ~v47) != 0) {
            goto LABEL_30;
          }
          if (!--v42)
          {
            if (a4 == 32) {
              uint64_t result = 64;
            }
            else {
              uint64_t result = 128;
            }
            goto LABEL_61;
          }
        }
      }
      if (a4 == 32) {
        uint64_t result = 64;
      }
      else {
        uint64_t result = 128;
      }
      if ((*(void *)v56 & ~*(void *)v58) != 0) {
LABEL_30:
      }
        uint64_t result = 0;
    }
  }
LABEL_61:
  if (a2 == a3)
  {
    if (a4 == 32) {
      int v38 = 260;
    }
    else {
      int v38 = 520;
    }
    unsigned int v39 = result | v38;
    if (a4 == 32) {
      int v40 = 544;
    }
    else {
      int v40 = 272;
    }
    unsigned int v41 = v39 | v40;
    if (v16) {
      return v41;
    }
    else {
      return v39;
    }
  }
  else if (v57 && v56)
  {
    uint64_t v36 = *(unsigned int *)(v56 + 8);
    if (v36 > 0x40)
    {
      unint64_t v48 = (unint64_t)(v36 + 63) >> 6;
      int v49 = *(uint64_t **)v56;
      uint64_t v50 = *(int8x8_t **)v57;
      while (1)
      {
        uint64_t v52 = *v49++;
        uint64_t v51 = v52;
        uint64_t v53 = (uint64_t)*v50++;
        if ((v51 & ~v53) != 0) {
          break;
        }
        if (!--v48) {
          goto LABEL_66;
        }
      }
    }
    else if ((*(void *)v56 & ~*(void *)v57) == 0)
    {
LABEL_66:
      if (a4 == 32) {
        int v37 = 256;
      }
      else {
        int v37 = 512;
      }
      return result | v37;
    }
  }
  return result;
}

llvm::Instruction *sub_1CCA126A0(llvm::ConstantInt **a1, llvm::Instruction *a2, llvm::Constant *a3, llvm::Constant *a4, uint64_t a5, uint64_t a6, llvm::ConstantExpr *this, llvm::Constant *a8, int a9, uint64_t a10)
{
  int v10 = 0;
  if (!a5) {
    return v10;
  }
  if (*(unsigned char *)(a5 + 16) != 16) {
    return v10;
  }
  int v10 = 0;
  if (!a6) {
    return v10;
  }
  if (*(unsigned char *)(a6 + 16) != 16) {
    return v10;
  }
  int v10 = 0;
  if (!this) {
    return v10;
  }
  if (*((unsigned char *)this + 16) != 16) {
    return v10;
  }
  Xor = a8;
  int v10 = 0;
  if (!a8 || *((unsigned char *)a8 + 16) != 16) {
    return v10;
  }
  int v15 = (int)a3;
  if (a3) {
    int v18 = 32;
  }
  else {
    int v18 = 33;
  }
  __int16 v58 = v18;
  if (v18 != a9) {
    Xor = (llvm::Constant *)llvm::ConstantExpr::getXor(this, a8, a3, a4);
  }
  uint64_t v19 = (unint64_t *)(a5 + 24);
  uint64_t v20 = *(unsigned int *)(a5 + 32);
  uint8x8_t v21 = (void *)(a5 + 24);
  if (v20 >= 0x41)
  {
    int v22 = 0;
    int64_t v23 = (unint64_t)(v20 + 63) >> 6;
    do
    {
      BOOL v24 = v23-- < 1;
      if (v24) {
        break;
      }
      unint64_t v25 = *(void *)(*v19 + 8 * v23);
      v22 += __clz(v25);
    }
    while (!v25);
    int v26 = v20 | 0xFFFFFFC0;
    if ((v20 & 0x3F) == 0) {
      int v26 = 0;
    }
    if ((v20 - v22 - v26) > 0x40) {
      goto LABEL_23;
    }
    uint8x8_t v21 = (void *)*v19;
  }
  if (!*v21) {
    return 0;
  }
LABEL_23:
  uint64_t v27 = (void *)((char *)this + 24);
  uint64_t v28 = *((unsigned int *)this + 8);
  int v29 = (void *)((char *)this + 24);
  if (v28 >= 0x41)
  {
    int v30 = 0;
    int64_t v31 = (unint64_t)(v28 + 63) >> 6;
    do
    {
      BOOL v24 = v31-- < 1;
      if (v24) {
        break;
      }
      unint64_t v32 = *(void *)(*v27 + 8 * v31);
      v30 += __clz(v32);
    }
    while (!v32);
    int v33 = v28 | 0xFFFFFFC0;
    if ((v28 & 0x3F) == 0) {
      int v33 = 0;
    }
    if ((v28 - v30 - v33) > 0x40) {
      goto LABEL_32;
    }
    int v29 = (void *)*v27;
  }
  if (!*v29) {
    return 0;
  }
LABEL_32:
  int64_t v59 = (uint64_t *)((char *)this + 24);
  if (v20 >= 0x41) {
    operator new[]();
  }
  if ((*v27 & *v19) == 0) {
    return 0;
  }
  if (*(_DWORD *)(a5 + 32) >= 0x41u) {
    operator new[]();
  }
  uint64_t v57 = (char *)Xor + 24;
  if ((*v19 & *((void *)Xor + 3) & *v27) != 0) {
    goto LABEL_40;
  }
  if (*(_DWORD *)(a5 + 32) >= 0x41u) {
    operator new[]();
  }
  unint64_t v35 = *v19 & ~*v27;
  if (!v35) {
LABEL_40:
  }
    BOOL v34 = 0;
  else {
    BOOL v34 = (v35 & (v35 - 1)) == 0;
  }
  if (v34)
  {
    unsigned int v36 = *(_DWORD *)(a5 + 32);
    if (v36 > 0x40) {
      operator new[]();
    }
    unint64_t v37 = *v19;
    uint64_t v38 = *v59;
    unint64_t v39 = *v59 | *v19;
    unsigned int v65 = *(_DWORD *)(a5 + 32);
    unint64_t v64 = v39;
    unint64_t v40 = *(void *)v57 | v37 & ~v38;
    unsigned int v63 = v36;
    unint64_t v62 = v40;
    int v49 = *(llvm::ConstantInt ***)a5;
    uint64_t v50 = (llvm::Value *)llvm::ConstantInt::get(**(llvm::ConstantInt ***)a5, (llvm::LLVMContext *)&v64, a3);
    Splat = v50;
    if ((v49[1] & 0xFE) == 0x12) {
      Splat = llvm::ConstantVector::getSplat((llvm::Type *)(*((unsigned int *)v49 + 8) | ((unint64_t)(*((_DWORD *)v49 + 2) == 19) << 32)), (uint64_t)v50);
    }
    uint64_t v53 = *(llvm::ConstantInt ***)a5;
    uint64_t v54 = llvm::ConstantInt::get(**(llvm::ConstantInt ***)a5, (llvm::LLVMContext *)&v62, v51);
    if ((v53[1] & 0xFE) == 0x12) {
      uint64_t v54 = llvm::ConstantVector::getSplat((llvm::Type *)(*((unsigned int *)v53 + 8) | ((unint64_t)(*((_DWORD *)v53 + 2) == 19) << 32)), (uint64_t)v54);
    }
    __int16 v61 = 257;
    uint64_t v55 = sub_1CBF52474(a10, a4, (uint64_t)Splat, (uint64_t)v60);
    __int16 v61 = 257;
    int v10 = sub_1CB845F20(a10, v58, v55, (uint64_t)v54, (uint64_t)v60);
    if (v63 >= 0x41 && v62) {
      MEMORY[0x1D25D9CB0](v62, 0x1000C8000313F17);
    }
    if (v65 >= 0x41 && v64) {
      MEMORY[0x1D25D9CB0](v64, 0x1000C8000313F17);
    }
    return v10;
  }
  if (*(_DWORD *)(a5 + 32) >= 0x41u) {
    operator new[]();
  }
  if ((*v19 & ~*v59) != 0 && (*v59 & ~*v19) != 0) {
    return 0;
  }
  unsigned int v41 = *((_DWORD *)Xor + 8);
  if (v41 > 0x40)
  {
    int v43 = 0;
    unint64_t v42 = (void *)((char *)Xor + 24);
    uint64_t v44 = *((unsigned int *)v57 + 2);
    int64_t v45 = (unint64_t)(v44 + 63) >> 6;
    do
    {
      BOOL v24 = v45-- < 1;
      if (v24) {
        break;
      }
      unint64_t v46 = *(void *)(*(void *)v57 + 8 * v45);
      v43 += __clz(v46);
    }
    while (!v46);
    if ((v44 & 0x3F) != 0) {
      int v47 = v44 | 0xFFFFFFC0;
    }
    else {
      int v47 = 0;
    }
    if (v43 + v47 != v41) {
      goto LABEL_57;
    }
    goto LABEL_67;
  }
  unint64_t v42 = (void *)((char *)Xor + 24);
  if (!*(void *)v57)
  {
LABEL_67:
    if (*(_DWORD *)(a5 + 32) >= 0x41u) {
      operator new[]();
    }
    if ((*v19 & ~*v59) == 0) {
      goto LABEL_86;
    }
    return 0;
  }
LABEL_57:
  if (*(_DWORD *)(a5 + 32) >= 0x41u) {
    operator new[]();
  }
  if ((*v59 & ~*v19) == 0) {
    return a2;
  }
  int v10 = a2;
  if ((*v42 & *v19) != 0) {
    return v10;
  }
LABEL_86:
  uint64_t v56 = *a1;

  return (llvm::Instruction *)llvm::ConstantInt::get(v56, v15 ^ 1u, 0);
}

uint64_t sub_1CCA132BC(uint64_t a1, void *a2, void **this)
{
  unint64_t v62 = (int8x8_t **)&v65;
  unsigned int v63 = (int8x8_t **)&v64;
  if (!a1) {
    return 0;
  }
  int v66 = 0;
  unsigned int v65 = 0;
  unint64_t v64 = 0;
  uint64_t v5 = *(void *)(a1 - 64);
  int v6 = *(unsigned __int8 *)(v5 + 16);
  if (v6 != 5)
  {
    if (v6 != 41) {
      return 0;
    }
    uint64_t v7 = *(void *)(v5 - 64);
    if (!v7) {
      return 0;
    }
    *a2 = v7;
    uint64_t v8 = *(llvm::Constant **)(v5 - 32);
    unsigned int v9 = *((unsigned __int8 *)v8 + 16);
    if (v8) {
      BOOL v10 = v9 == 16;
    }
    else {
      BOOL v10 = 0;
    }
    if (!v10) {
      goto LABEL_46;
    }
    unint64_t v11 = (int8x8_t *)((char *)v8 + 24);
    uint64_t v12 = *((unsigned int *)v8 + 8);
    if (v12 > 0x40)
    {
      int v30 = 0;
      unint64_t v31 = (unint64_t)(v12 + 63) >> 6;
      unint64_t v32 = (int8x8_t *)*v11;
      do
      {
        int8x8_t v33 = *v32++;
        uint8x8_t v34 = (uint8x8_t)vcnt_s8(v33);
        v34.i16[0] = vaddlv_u8(v34);
        v30 += v34.i32[0];
        --v31;
      }
      while (v31);
      if (v30 != 1)
      {
LABEL_46:
        if ((*(_DWORD *)(*(void *)v8 + 8) & 0xFE) != 0x12 || v9 > 0x14) {
          return 0;
        }
LABEL_50:
        SplatValue = (int8x8_t *)llvm::Constant::getSplatValue(v8, 0);
        if (!SplatValue || SplatValue[2].i8[0] != 16) {
          return 0;
        }
        unint64_t v11 = SplatValue + 3;
        uint64_t v37 = SplatValue[4].u32[0];
        if (v37 > 0x40)
        {
          int v52 = 0;
          unint64_t v53 = (unint64_t)(v37 + 63) >> 6;
          uint64_t v54 = (int8x8_t *)*v11;
          do
          {
            int8x8_t v55 = *v54++;
            uint8x8_t v56 = (uint8x8_t)vcnt_s8(v55);
            v56.i16[0] = vaddlv_u8(v56);
            v52 += v56.i32[0];
            --v53;
          }
          while (v53);
          if (v52 != 1) {
            return 0;
          }
        }
        else
        {
          uint8x8_t v38 = (uint8x8_t)vcnt_s8(*v11);
          v38.i16[0] = vaddlv_u8(v38);
          if (v38.u32[0] != 1) {
            return 0;
          }
        }
      }
    }
    else
    {
      uint8x8_t v13 = (uint8x8_t)vcnt_s8(*v11);
      v13.i16[0] = vaddlv_u8(v13);
      if (v13.u32[0] != 1)
      {
        if ((*(_DWORD *)(*(void *)v8 + 8) & 0xFE) != 0x12) {
          return 0;
        }
        goto LABEL_50;
      }
    }
    char *v62 = v11;
    goto LABEL_13;
  }
  if (*(_WORD *)(v5 + 18) != 13) {
    return 0;
  }
  uint64_t v27 = *(void *)(v5 - 32 * (*(_DWORD *)(v5 + 20) & 0x7FFFFFF));
  if (!v27) {
    return 0;
  }
  *a2 = v27;
  if (!sub_1CD68A8DC(&v62, *(llvm::Constant **)(v5 - 32 * (*(_DWORD *)(v5 + 20) & 0x7FFFFFF) + 32))) {
    return 0;
  }
LABEL_13:
  uint8x8_t v14 = *(llvm::Constant **)(a1 - 32);
  unsigned int v15 = *((unsigned __int8 *)v14 + 16);
  if (!v14 || v15 != 16)
  {
LABEL_58:
    if ((*(_DWORD *)(*(void *)v14 + 8) & 0xFE) != 0x12 || v15 > 0x14) {
      return 0;
    }
    goto LABEL_70;
  }
  BOOL v16 = (int8x8_t *)((char *)v14 + 24);
  uint64_t v17 = *((unsigned int *)v14 + 8);
  if (v17 > 0x40)
  {
    int v39 = 0;
    unint64_t v40 = (unint64_t)(v17 + 63) >> 6;
    unsigned int v41 = (int8x8_t *)*v16;
    do
    {
      int8x8_t v42 = *v41++;
      uint8x8_t v43 = (uint8x8_t)vcnt_s8(v42);
      v43.i16[0] = vaddlv_u8(v43);
      v39 += v43.i32[0];
      --v40;
    }
    while (v40);
    if (v39 == 1) {
      goto LABEL_17;
    }
    goto LABEL_58;
  }
  uint8x8_t v18 = (uint8x8_t)vcnt_s8(*v16);
  v18.i16[0] = vaddlv_u8(v18);
  if (v18.u32[0] == 1) {
    goto LABEL_17;
  }
  if ((*(_DWORD *)(*(void *)v14 + 8) & 0xFE) != 0x12) {
    return 0;
  }
LABEL_70:
  int v49 = (int8x8_t *)llvm::Constant::getSplatValue(v14, 0);
  if (!v49 || v49[2].i8[0] != 16) {
    return 0;
  }
  BOOL v16 = v49 + 3;
  uint64_t v50 = v49[4].u32[0];
  if (v50 > 0x40)
  {
    int v57 = 0;
    unint64_t v58 = (unint64_t)(v50 + 63) >> 6;
    int64_t v59 = (int8x8_t *)*v16;
    do
    {
      int8x8_t v60 = *v59++;
      uint8x8_t v61 = (uint8x8_t)vcnt_s8(v60);
      v61.i16[0] = vaddlv_u8(v61);
      v57 += v61.i32[0];
      --v58;
    }
    while (v58);
    if (v57 != 1) {
      return 0;
    }
  }
  else
  {
    uint8x8_t v51 = (uint8x8_t)vcnt_s8(*v16);
    v51.i16[0] = vaddlv_u8(v51);
    if (v51.u32[0] != 1) {
      return 0;
    }
  }
LABEL_17:
  *unsigned int v63 = v16;
  int v66 = *(_WORD *)(a1 + 18) & 0x3F;
  if (v66 != 36) {
    return 0;
  }
  uint64_t v19 = *((unsigned int *)v64 + 2);
  if (v19 > 0x40)
  {
    unint64_t v20 = *v64;
    uint8x8_t v21 = *(void **)v65;
    unint64_t v46 = ((unint64_t)(v19 + 63) >> 3) & 0x3FFFFFF8;
    while (v46)
    {
      unint64_t v47 = *(void *)(v20 - 8 + v46);
      unint64_t v48 = *(void *)(*(void *)v65 - 8 + v46);
      v46 -= 8;
      BOOL v22 = v47 > v48;
      if (v47 != v48) {
        goto LABEL_20;
      }
    }
    return 0;
  }
  unint64_t v20 = *v64;
  uint8x8_t v21 = *(void **)v65;
  BOOL v22 = (unint64_t)*v64 > *(void *)v65;
LABEL_20:
  if (!v22) {
    return 0;
  }
  unsigned int v23 = v65[2];
  if (v23 > 0x40) {
    operator new[]();
  }
  uint64_t v24 = 2 * (void)v21;
  unint64_t v25 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v23;
  if (!v23) {
    unint64_t v25 = 0;
  }
  if (v23 == 1)
  {
    uint64_t v24 = 0;
    uint64_t v26 = 1;
  }
  else
  {
    uint64_t v26 = v25;
  }
  if ((v26 & v24) != v20) {
    return 0;
  }
  uint64_t v28 = v65;
  if (*((_DWORD *)this + 2) > 0x40u || v65[2] > 0x40)
  {
    if (v65 != (unsigned int *)this)
    {
      llvm::APInt::reallocate((uint64_t)this, v65[2]);
      uint64_t v45 = *((unsigned int *)this + 2);
      if (v45 <= 0x40) {
        *this = *(void **)v28;
      }
      else {
        memcpy(*this, *(const void **)v28, ((unint64_t)(v45 + 63) >> 3) & 0x3FFFFFF8);
      }
    }
  }
  else
  {
    *this = *(void **)v65;
    *((_DWORD *)this + 2) = v28[2];
  }
  return 1;
}

BOOL sub_1CCA137A8@<W0>(void **a1@<X0>, uint64_t a2@<X1>, BOOL a3@<W8>)
{
  int v3 = *(unsigned __int8 *)(a2 + 16);
  if (v3 == 56)
  {
    uint64_t v4 = *(void *)(a2 - 64);
    BOOL result = 0;
    if (v4)
    {
      **a1 = v4;
      if (sub_1CBF528D8((uint64_t)(a1 + 1), *(unsigned __int8 **)(a2 - 32))) {
        return 1;
      }
    }
  }
  else
  {
    if (v3 == 5)
    {
      a3 = 0;
      if (*(_WORD *)(a2 + 18) == 28)
      {
        uint64_t v6 = *(void *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));
        if (v6)
        {
          **a1 = v6;
          if (sub_1CBF5295C((uint64_t)(a1 + 1), *(llvm::Constant **)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF) + 32)))a3 = 1; {
        }
          }
      }
    }
    return v3 == 5 && a3;
  }
  return result;
}

BOOL sub_1CCA1385C(int **a1, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  BOOL result = sub_1CC04B8F0((uint64_t)(a1 + 1), *(void *)(a2 - 64));
  if (result)
  {
    BOOL result = sub_1CBF53154((llvm::APInt *)(a1 + 4), *(unsigned __int8 **)(a2 - 32));
    if (result)
    {
      **a1 = *(_WORD *)(a2 + 18) & 0x3F;
      return 1;
    }
  }
  return result;
}

uint64_t sub_1CCA138C8(uint64_t **a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a2 + 16);
  if (v4 != 5)
  {
    if (v4 != 57) {
      return 0;
    }
    uint64_t v5 = (void *)(a2 - 64);
    uint64_t v6 = *(void *)(a2 - 64);
    int v7 = *(unsigned __int8 *)(v6 + 16);
    if (v7 != 5)
    {
      if (v7 != 58) {
        goto LABEL_27;
      }
      uint64_t v8 = **a1;
      if (v8 != *(void *)(v6 - 64))
      {
LABEL_8:
        if (v8 != *(void *)(v6 - 32) || (sub_1CBF687D0((uint64_t)(a1 + 1), *(llvm::Constant **)(v6 - 64)) & 1) == 0) {
          goto LABEL_27;
        }
        goto LABEL_26;
      }
      if ((sub_1CBF687D0((uint64_t)(a1 + 1), *(llvm::Constant **)(v6 - 32)) & 1) == 0)
      {
        uint64_t v8 = **a1;
        goto LABEL_8;
      }
LABEL_26:
      if (*a1[2] != *(void *)(a2 - 32)) {
        goto LABEL_27;
      }
      return 1;
    }
    if (*(_WORD *)(v6 + 18) != 30) {
      goto LABEL_27;
    }
    uint64_t v12 = *(_DWORD *)(v6 + 20) & 0x7FFFFFF;
    uint64_t v13 = v6 - 32 * v12;
    uint64_t v14 = **a1;
    if (v14 == *(void *)v13)
    {
      if (sub_1CBF68974((uint64_t)(a1 + 1), *(llvm::Constant **)(v13 + 32))) {
        goto LABEL_26;
      }
      uint64_t v14 = **a1;
      uint64_t v12 = *(_DWORD *)(v6 + 20) & 0x7FFFFFF;
    }
    uint64_t v15 = v6 - 32 * v12;
    if (v14 != *(void *)(v15 + 32) || !sub_1CBF68974((uint64_t)(a1 + 1), *(llvm::Constant **)v15))
    {
LABEL_27:
      uint64_t v16 = *(void *)(a2 - 32);
      int v17 = *(unsigned __int8 *)(v16 + 16);
      if (v17 == 5)
      {
        if (*(_WORD *)(v16 + 18) == 30)
        {
          uint64_t v19 = *(_DWORD *)(v16 + 20) & 0x7FFFFFF;
          uint64_t v20 = v16 - 32 * v19;
          uint64_t v21 = **a1;
          if (v21 == *(void *)v20)
          {
            if (sub_1CBF68974((uint64_t)(a1 + 1), *(llvm::Constant **)(v20 + 32))) {
              return *a1[2] == *v5;
            }
            uint64_t v21 = **a1;
            uint64_t v19 = *(_DWORD *)(v16 + 20) & 0x7FFFFFF;
          }
          uint64_t v22 = v16 - 32 * v19;
          if (v21 == *(void *)(v22 + 32) && (sub_1CBF68974((uint64_t)(a1 + 1), *(llvm::Constant **)v22) & 1) != 0) {
            return *a1[2] == *v5;
          }
        }
      }
      else if (v17 == 58)
      {
        uint64_t v18 = **a1;
        if (v18 != *(void *)(v16 - 64))
        {
LABEL_32:
          if (v18 == *(void *)(v16 - 32)
            && (sub_1CBF687D0((uint64_t)(a1 + 1), *(llvm::Constant **)(v16 - 64)) & 1) != 0)
          {
            return *a1[2] == *v5;
          }
          return 0;
        }
        if ((sub_1CBF687D0((uint64_t)(a1 + 1), *(llvm::Constant **)(v16 - 32)) & 1) == 0)
        {
          uint64_t v18 = **a1;
          goto LABEL_32;
        }
        return *a1[2] == *v5;
      }
      return 0;
    }
    goto LABEL_26;
  }
  if (*(_WORD *)(a2 + 18) != 29) {
    return 0;
  }
  uint64_t v9 = *(void *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));
  int v10 = *(unsigned __int8 *)(v9 + 16);
  if (v10 == 5)
  {
    if (*(_WORD *)(v9 + 18) != 30) {
      goto LABEL_49;
    }
    uint64_t v23 = *(_DWORD *)(v9 + 20) & 0x7FFFFFF;
    uint64_t v24 = v9 - 32 * v23;
    uint64_t v25 = **a1;
    if (v25 == *(void *)v24)
    {
      if (sub_1CBF68974((uint64_t)(a1 + 1), *(llvm::Constant **)(v24 + 32))) {
        goto LABEL_48;
      }
      uint64_t v25 = **a1;
      uint64_t v23 = *(_DWORD *)(v9 + 20) & 0x7FFFFFF;
    }
    uint64_t v26 = v9 - 32 * v23;
    if (v25 != *(void *)(v26 + 32) || !sub_1CBF68974((uint64_t)(a1 + 1), *(llvm::Constant **)v26)) {
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v10 != 58) {
    goto LABEL_49;
  }
  uint64_t v11 = **a1;
  if (v11 != *(void *)(v9 - 64))
  {
LABEL_17:
    if (v11 != *(void *)(v9 - 32) || (sub_1CBF687D0((uint64_t)(a1 + 1), *(llvm::Constant **)(v9 - 64)) & 1) == 0) {
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if ((sub_1CBF687D0((uint64_t)(a1 + 1), *(llvm::Constant **)(v9 - 32)) & 1) == 0)
  {
    uint64_t v11 = **a1;
    goto LABEL_17;
  }
LABEL_48:
  if (*a1[2] == *(void *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF) + 32)) {
    return 1;
  }
LABEL_49:
  uint64_t v27 = *(void *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF) + 32);
  int v28 = *(unsigned __int8 *)(v27 + 16);
  if (v28 != 5)
  {
    if (v28 != 58) {
      return 0;
    }
    uint64_t v29 = **a1;
    if (v29 == *(void *)(v27 - 64))
    {
      if (sub_1CBF687D0((uint64_t)(a1 + 1), *(llvm::Constant **)(v27 - 32))) {
        goto LABEL_66;
      }
      uint64_t v29 = **a1;
    }
    if (v29 != *(void *)(v27 - 32) || (sub_1CBF687D0((uint64_t)(a1 + 1), *(llvm::Constant **)(v27 - 64)) & 1) == 0) {
      return 0;
    }
LABEL_66:
    uint64_t v5 = (void *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));
    return *a1[2] == *v5;
  }
  if (*(_WORD *)(v27 + 18) != 30) {
    return 0;
  }
  uint64_t v30 = *(_DWORD *)(v27 + 20) & 0x7FFFFFF;
  uint64_t v31 = v27 - 32 * v30;
  uint64_t v32 = **a1;
  if (v32 == *(void *)v31)
  {
    if (sub_1CBF68974((uint64_t)(a1 + 1), *(llvm::Constant **)(v31 + 32))) {
      goto LABEL_66;
    }
    uint64_t v32 = **a1;
    uint64_t v30 = *(_DWORD *)(v27 + 20) & 0x7FFFFFF;
  }
  uint64_t v33 = v27 - 32 * v30;
  if (v32 != *(void *)(v33 + 32)) {
    return 0;
  }
  uint64_t result = sub_1CBF68974((uint64_t)(a1 + 1), *(llvm::Constant **)v33);
  if (result) {
    goto LABEL_66;
  }
  return result;
}

uint64_t sub_1CCA13CE8(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a2 + 16);
  if (v4 == 5)
  {
    if (*(_WORD *)(a2 + 18) != 30) {
      return 0;
    }
    uint64_t v10 = *(void *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));
    int v11 = *(_DWORD *)(a1 + 16);
    int v12 = *(unsigned __int8 *)(v10 + 16);
    if (v11 + 28 == v12)
    {
      uint64_t v13 = *(void *)(v10 - 64);
      if (v13)
      {
        **(void **)a1 = v13;
        uint64_t v14 = *(void *)(v10 - 32);
        if (!v14) {
          goto LABEL_56;
        }
      }
      else
      {
        uint64_t v18 = *(void *)(v10 - 32);
        if (!v18) {
          goto LABEL_56;
        }
        **(void **)a1 = v18;
        uint64_t v14 = *(void *)(v10 - 64);
        if (!v14) {
          goto LABEL_56;
        }
      }
LABEL_52:
      **(void **)(a1 + 8) = v14;
      if (sub_1CBF68974(a1 + 24, *(llvm::Constant **)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF) + 32))) {
        return 1;
      }
      int v11 = *(_DWORD *)(a1 + 16);
      int v12 = v11 + 28;
LABEL_56:
      uint64_t v30 = *(void *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF) + 32);
      int v31 = *(unsigned __int8 *)(v30 + 16);
      if (v12 == v31)
      {
        uint64_t v32 = *(void *)(v30 - 64);
        if (v32)
        {
          **(void **)a1 = v32;
          uint64_t v33 = *(void *)(v30 - 32);
          if (!v33) {
            return 0;
          }
        }
        else
        {
          uint64_t v35 = *(void *)(v30 - 32);
          if (!v35) {
            return 0;
          }
          **(void **)a1 = v35;
          uint64_t v33 = *(void *)(v30 - 64);
          if (!v33) {
            return 0;
          }
        }
      }
      else
      {
        if (v31 != 5 || v11 != *(unsigned __int16 *)(v30 + 18)) {
          return 0;
        }
        uint8x8_t v34 = (void *)(v30 - 32 * (*(_DWORD *)(v30 + 20) & 0x7FFFFFF));
        if (*v34)
        {
          **(void **)a1 = *v34;
          uint64_t v33 = *(void *)(v30 - 32 * (*(_DWORD *)(v30 + 20) & 0x7FFFFFF) + 32);
          if (!v33) {
            return 0;
          }
        }
        else
        {
          uint64_t v36 = v34[4];
          if (!v36) {
            return 0;
          }
          **(void **)a1 = v36;
          uint64_t v33 = *(void *)(v30 - 32 * (*(_DWORD *)(v30 + 20) & 0x7FFFFFF));
          if (!v33) {
            return 0;
          }
        }
      }
      **(void **)(a1 + 8) = v33;
      uint64_t v37 = *(llvm::Constant **)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));
      return sub_1CBF68974(a1 + 24, v37);
    }
    if (v12 == 5 && v11 == *(unsigned __int16 *)(v10 + 18))
    {
      uint64_t v16 = (void *)(v10 - 32 * (*(_DWORD *)(v10 + 20) & 0x7FFFFFF));
      if (*v16)
      {
        **(void **)a1 = *v16;
        uint64_t v14 = *(void *)(v10 - 32 * (*(_DWORD *)(v10 + 20) & 0x7FFFFFF) + 32);
        goto LABEL_51;
      }
      uint64_t v29 = v16[4];
      if (v29)
      {
        **(void **)a1 = v29;
        uint64_t v14 = *(void *)(v10 - 32 * (*(_DWORD *)(v10 + 20) & 0x7FFFFFF));
LABEL_51:
        int v12 = v11 + 28;
        if (!v14) {
          goto LABEL_56;
        }
        goto LABEL_52;
      }
    }
    int v12 = v11 + 28;
    goto LABEL_56;
  }
  if (v4 != 58) {
    return 0;
  }
  uint64_t v5 = *(void *)(a2 - 64);
  int v6 = *(_DWORD *)(a1 + 16);
  int v7 = *(unsigned __int8 *)(v5 + 16);
  if (v6 + 28 == v7)
  {
    uint64_t v8 = *(void *)(v5 - 64);
    if (v8)
    {
      **(void **)a1 = v8;
      uint64_t v9 = *(void *)(v5 - 32);
      if (!v9) {
        goto LABEL_32;
      }
    }
    else
    {
      uint64_t v17 = *(void *)(v5 - 32);
      if (!v17) {
        goto LABEL_32;
      }
      **(void **)a1 = v17;
      uint64_t v9 = *(void *)(v5 - 64);
      if (!v9) {
        goto LABEL_32;
      }
    }
LABEL_29:
    **(void **)(a1 + 8) = v9;
    if ((sub_1CBF687D0(a1 + 24, *(llvm::Constant **)(a2 - 32)) & 1) == 0)
    {
      int v6 = *(_DWORD *)(a1 + 16);
      int v7 = v6 + 28;
      goto LABEL_32;
    }
    return 1;
  }
  if (v7 != 5 || v6 != *(unsigned __int16 *)(v5 + 18)) {
    goto LABEL_31;
  }
  uint64_t v15 = (void *)(v5 - 32 * (*(_DWORD *)(v5 + 20) & 0x7FFFFFF));
  if (*v15)
  {
    **(void **)a1 = *v15;
    uint64_t v9 = *(void *)(v5 - 32 * (*(_DWORD *)(v5 + 20) & 0x7FFFFFF) + 32);
    goto LABEL_28;
  }
  uint64_t v19 = v15[4];
  if (!v19)
  {
LABEL_31:
    int v7 = v6 + 28;
    goto LABEL_32;
  }
  **(void **)a1 = v19;
  uint64_t v9 = *(void *)(v5 - 32 * (*(_DWORD *)(v5 + 20) & 0x7FFFFFF));
LABEL_28:
  int v7 = v6 + 28;
  if (v9) {
    goto LABEL_29;
  }
LABEL_32:
  uint64_t v20 = *(void *)(a2 - 32);
  int v21 = *(unsigned __int8 *)(v20 + 16);
  if (v7 == v21)
  {
    uint64_t v22 = *(void *)(v20 - 64);
    if (v22)
    {
      **(void **)a1 = v22;
      uint64_t v23 = *(void *)(v20 - 32);
      if (!v23) {
        return 0;
      }
    }
    else
    {
      uint64_t v25 = *(void *)(v20 - 32);
      if (!v25) {
        return 0;
      }
      **(void **)a1 = v25;
      uint64_t v23 = *(void *)(v20 - 64);
      if (!v23) {
        return 0;
      }
    }
  }
  else
  {
    if (v21 != 5 || v6 != *(unsigned __int16 *)(v20 + 18)) {
      return 0;
    }
    uint64_t v24 = (void *)(v20 - 32 * (*(_DWORD *)(v20 + 20) & 0x7FFFFFF));
    if (*v24)
    {
      **(void **)a1 = *v24;
      uint64_t v23 = *(void *)(v20 - 32 * (*(_DWORD *)(v20 + 20) & 0x7FFFFFF) + 32);
      if (!v23) {
        return 0;
      }
    }
    else
    {
      uint64_t v28 = v24[4];
      if (!v28) {
        return 0;
      }
      **(void **)a1 = v28;
      uint64_t v23 = *(void *)(v20 - 32 * (*(_DWORD *)(v20 + 20) & 0x7FFFFFF));
      if (!v23) {
        return 0;
      }
    }
  }
  **(void **)(a1 + 8) = v23;
  uint64_t v26 = *(llvm::Constant **)(a2 - 64);

  return sub_1CBF687D0(a1 + 24, v26);
}

uint64_t sub_1CCA140F0(uint64_t a1, int a2, uint64_t a3)
{
  int v5 = *(unsigned __int8 *)(a3 + 16);
  if (a2 + 28 == v5)
  {
    int v7 = (void *)(a3 - 64);
    uint64_t v6 = *(void *)(a3 - 64);
    if (!v6
      || (**(void **)a1 = v6, !sub_1CCA14228((uint64_t *)(a1 + 8), v6))
      || *(void *)(a1 + 40) != *(void *)(a3 - 32))
    {
      uint64_t v8 = *(void *)(a3 - 32);
      if (!v8) {
        return 0;
      }
      **(void **)a1 = v8;
      if ((sub_1CCA14228((uint64_t *)(a1 + 8), v8) & 1) == 0) {
        return 0;
      }
      return *(void *)(a1 + 40) == *v7;
    }
    return 1;
  }
  if (v5 != 5 || *(unsigned __int16 *)(a3 + 18) != a2) {
    return 0;
  }
  uint64_t v9 = *(_DWORD *)(a3 + 20) & 0x7FFFFFF;
  uint64_t v10 = *(void *)(a3 - 32 * v9);
  if (v10)
  {
    **(void **)a1 = v10;
    char v11 = sub_1CCA14228((uint64_t *)(a1 + 8), v10);
    int v12 = *(_DWORD *)(a3 + 20);
    if (v11)
    {
      uint64_t v9 = v12 & 0x7FFFFFF;
      if (*(void *)(a1 + 40) == *(void *)(a3 - 32 * v9 + 32)) {
        return 1;
      }
    }
    else
    {
      uint64_t v9 = v12 & 0x7FFFFFF;
    }
  }
  uint64_t v14 = *(void *)(a3 - 32 * v9 + 32);
  if (v14)
  {
    **(void **)a1 = v14;
    uint64_t result = sub_1CCA14228((uint64_t *)(a1 + 8), v14);
    if (!result) {
      return result;
    }
    int v7 = (void *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF));
    return *(void *)(a1 + 40) == *v7;
  }
  return 0;
}

uint64_t sub_1CCA14228(uint64_t *a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a2 + 16);
  if (v4 != 5)
  {
    if (v4 != 58) {
      return 0;
    }
    uint64_t v5 = *(void *)(a2 - 64);
    int v6 = *((_DWORD *)a1 + 4);
    int v7 = *(unsigned __int8 *)(v5 + 16);
    int v8 = v6 + 28;
    if (v6 + 28 == v7)
    {
      uint64_t v9 = *(void *)(v5 - 64);
      if (*a1 == v9)
      {
        uint64_t v10 = *(void *)(v5 - 32);
        if (a1[1] == v10) {
          goto LABEL_27;
        }
      }
      else
      {
        uint64_t v10 = *(void *)(v5 - 32);
      }
      if (*a1 != v10)
      {
        int v8 = v7;
        goto LABEL_29;
      }
    }
    else
    {
      if (v7 != 5 || v6 != *(unsigned __int16 *)(v5 + 18))
      {
LABEL_29:
        uint64_t v24 = *(void *)(a2 - 32);
        int v25 = *(unsigned __int8 *)(v24 + 16);
        if (v8 == v25)
        {
          uint64_t v26 = *(void *)(v24 - 64);
          uint64_t v27 = *a1;
          if (*a1 != v26)
          {
            uint64_t v28 = *(void *)(v24 - 32);
            goto LABEL_39;
          }
          uint64_t v28 = *(void *)(v24 - 32);
        }
        else
        {
          if (v25 != 5 || v6 != *(unsigned __int16 *)(v24 + 18)) {
            return 0;
          }
          uint64_t v29 = (uint64_t *)(v24 - 32 * (*(_DWORD *)(v24 + 20) & 0x7FFFFFF));
          uint64_t v26 = *v29;
          uint64_t v27 = *a1;
          if (*a1 != *v29)
          {
            uint64_t v28 = v29[4];
            goto LABEL_39;
          }
          uint64_t v28 = v29[4];
        }
        if (a1[1] == v28) {
          goto LABEL_41;
        }
LABEL_39:
        if (v27 == v28 && a1[1] == v26)
        {
LABEL_41:
          uint64_t v30 = *(llvm::Constant **)(a2 - 64);
          return sub_1CBF687D0((uint64_t)(a1 + 3), v30);
        }
        return 0;
      }
      uint64_t v20 = (uint64_t *)(v5 - 32 * (*(_DWORD *)(v5 + 20) & 0x7FFFFFF));
      uint64_t v9 = *v20;
      if (*a1 == *v20)
      {
        uint64_t v21 = v20[4];
        if (a1[1] == v21) {
          goto LABEL_27;
        }
      }
      else
      {
        uint64_t v21 = v20[4];
      }
      if (*a1 != v21) {
        goto LABEL_29;
      }
    }
    if (a1[1] != v9) {
      goto LABEL_29;
    }
LABEL_27:
    if ((sub_1CBF687D0((uint64_t)(a1 + 3), *(llvm::Constant **)(a2 - 32)) & 1) == 0)
    {
      int v6 = *((_DWORD *)a1 + 4);
      int v8 = v6 + 28;
      goto LABEL_29;
    }
    return 1;
  }
  if (*(_WORD *)(a2 + 18) != 30) {
    return 0;
  }
  uint64_t v11 = *(_DWORD *)(a2 + 20) & 0x7FFFFFF;
  uint64_t v12 = -v11;
  uint64_t v13 = (llvm::Constant **)(a2 - 32 * v11);
  uint64_t v14 = *v13;
  int v15 = *((_DWORD *)a1 + 4);
  int v16 = *((unsigned __int8 *)*v13 + 16);
  int v17 = v15 + 28;
  if (v15 + 28 != v16)
  {
    if (v16 != 5 || v15 != *((unsigned __int16 *)v14 + 9)) {
      goto LABEL_50;
    }
    uint64_t v22 = (uint64_t *)((char *)v14 - 32 * (*((_DWORD *)v14 + 5) & 0x7FFFFFF));
    uint64_t v18 = *v22;
    if (*a1 == *v22)
    {
      uint64_t v23 = v22[4];
      if (a1[1] == v23) {
        goto LABEL_47;
      }
    }
    else
    {
      uint64_t v23 = v22[4];
    }
    if (*a1 != v23) {
      goto LABEL_50;
    }
LABEL_46:
    if (a1[1] != v18) {
      goto LABEL_50;
    }
    goto LABEL_47;
  }
  uint64_t v18 = *((void *)v14 - 8);
  if (*a1 != v18)
  {
    uint64_t v19 = *((void *)v14 - 4);
    goto LABEL_22;
  }
  uint64_t v19 = *((void *)v14 - 4);
  if (a1[1] != v19)
  {
LABEL_22:
    if (*a1 != v19)
    {
      int v17 = *((unsigned __int8 *)*v13 + 16);
      goto LABEL_50;
    }
    goto LABEL_46;
  }
LABEL_47:
  if (sub_1CBF68974((uint64_t)(a1 + 3), v13[4])) {
    return 1;
  }
  int v15 = *((_DWORD *)a1 + 4);
  uint64_t v12 = -(uint64_t)(*(_DWORD *)(a2 + 20) & 0x7FFFFFF);
  int v17 = v15 + 28;
LABEL_50:
  uint64_t v32 = a2 + 32 * v12;
  uint64_t v33 = *(void *)(v32 + 32);
  int v34 = *(unsigned __int8 *)(v33 + 16);
  if (v17 != v34)
  {
    if (v34 != 5 || v15 != *(unsigned __int16 *)(v33 + 18)) {
      return 0;
    }
    uint8x8_t v38 = (uint64_t *)(v33 - 32 * (*(_DWORD *)(v33 + 20) & 0x7FFFFFF));
    uint64_t v35 = *v38;
    uint64_t v36 = *a1;
    if (*a1 != *v38)
    {
      uint64_t v37 = v38[4];
      goto LABEL_59;
    }
    uint64_t v37 = v38[4];
LABEL_58:
    if (a1[1] == v37) {
      goto LABEL_62;
    }
    goto LABEL_59;
  }
  uint64_t v35 = *(void *)(v33 - 64);
  uint64_t v36 = *a1;
  if (*a1 == v35)
  {
    uint64_t v37 = *(void *)(v33 - 32);
    goto LABEL_58;
  }
  uint64_t v37 = *(void *)(v33 - 32);
LABEL_59:
  if (v36 != v37 || a1[1] != v35) {
    return 0;
  }
LABEL_62:
  int v39 = *(llvm::Constant **)v32;

  return sub_1CBF68974((uint64_t)(a1 + 3), v39);
}

uint64_t sub_1CCA14580(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a2 + 16);
  if (v4 != 5)
  {
    if (v4 != 58) {
      return 0;
    }
    uint64_t v5 = *(void *)(a2 - 64);
    uint64_t v6 = *(void *)(v5 + 8);
    if (!v6 || *(void *)(v6 + 8))
    {
LABEL_5:
      uint64_t v7 = *(void *)(a2 - 32);
      uint64_t v8 = *(void *)(v7 + 8);
      if (!v8 || *(void *)(v8 + 8)) {
        return 0;
      }
      int v9 = *(_DWORD *)(a1 + 16);
      int v10 = *(unsigned __int8 *)(v7 + 16);
      if (v9 + 28 == v10)
      {
        uint64_t v11 = *(void *)(v7 - 64);
        if (*(void *)a1 != v11)
        {
          uint64_t v12 = *(void *)(v7 - 32);
          goto LABEL_46;
        }
        uint64_t v12 = *(void *)(v7 - 32);
        if (*(void *)(a1 + 8) != v12)
        {
LABEL_46:
          if (*(void *)a1 != v12) {
            return 0;
          }
          goto LABEL_61;
        }
LABEL_62:
        unsigned int v41 = *(llvm::Constant **)(a2 - 64);
        return sub_1CBF687D0(a1 + 24, v41);
      }
      if (v10 != 5 || v9 != *(unsigned __int16 *)(v7 + 18)) {
        return 0;
      }
      uint64_t v35 = (uint64_t *)(v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF));
      uint64_t v11 = *v35;
      if (*(void *)a1 == *v35)
      {
        uint64_t v36 = v35[4];
        if (*(void *)(a1 + 8) == v36) {
          goto LABEL_62;
        }
      }
      else
      {
        uint64_t v36 = v35[4];
      }
      if (*(void *)a1 != v36) {
        return 0;
      }
LABEL_61:
      if (*(void *)(a1 + 8) == v11) {
        goto LABEL_62;
      }
      return 0;
    }
    int v25 = *(_DWORD *)(a1 + 16);
    int v26 = *(unsigned __int8 *)(v5 + 16);
    if (v25 + 28 == v26)
    {
      uint64_t v27 = *(void *)(v5 - 64);
      if (*(void *)a1 != v27)
      {
        uint64_t v28 = *(void *)(v5 - 32);
        goto LABEL_41;
      }
      uint64_t v28 = *(void *)(v5 - 32);
      if (*(void *)(a1 + 8) != v28)
      {
LABEL_41:
        if (*(void *)a1 != v28) {
          goto LABEL_5;
        }
        goto LABEL_42;
      }
LABEL_43:
      if ((sub_1CBF687D0(a1 + 24, *(llvm::Constant **)(a2 - 32)) & 1) == 0) {
        goto LABEL_5;
      }
      return 1;
    }
    if (v26 != 5 || v25 != *(unsigned __int16 *)(v5 + 18)) {
      goto LABEL_5;
    }
    uint64_t v33 = (uint64_t *)(v5 - 32 * (*(_DWORD *)(v5 + 20) & 0x7FFFFFF));
    uint64_t v27 = *v33;
    if (*(void *)a1 == *v33)
    {
      uint64_t v34 = v33[4];
      if (*(void *)(a1 + 8) == v34) {
        goto LABEL_43;
      }
    }
    else
    {
      uint64_t v34 = v33[4];
    }
    if (*(void *)a1 != v34) {
      goto LABEL_5;
    }
LABEL_42:
    if (*(void *)(a1 + 8) != v27) {
      goto LABEL_5;
    }
    goto LABEL_43;
  }
  if (*(_WORD *)(a2 + 18) != 30) {
    return 0;
  }
  uint64_t v13 = *(_DWORD *)(a2 + 20) & 0x7FFFFFF;
  uint64_t v14 = -v13;
  int v15 = (llvm::Constant **)(a2 - 32 * v13);
  int v16 = *v15;
  uint64_t v17 = *((void *)*v15 + 1);
  if (v17 && !*(void *)(v17 + 8))
  {
    int v29 = *(_DWORD *)(a1 + 16);
    int v30 = *((unsigned __int8 *)v16 + 16);
    if (v29 + 28 == v30)
    {
      uint64_t v31 = *((void *)v16 - 8);
      if (*(void *)a1 != v31)
      {
        uint64_t v32 = *((void *)v16 - 4);
        goto LABEL_49;
      }
      uint64_t v32 = *((void *)v16 - 4);
      if (*(void *)(a1 + 8) != v32)
      {
LABEL_49:
        if (*(void *)a1 != v32) {
          goto LABEL_13;
        }
        goto LABEL_50;
      }
LABEL_68:
      if (sub_1CBF68974(a1 + 24, v15[4])) {
        return 1;
      }
      uint64_t v14 = -(uint64_t)(*(_DWORD *)(a2 + 20) & 0x7FFFFFF);
      goto LABEL_13;
    }
    if (v30 != 5 || v29 != *((unsigned __int16 *)v16 + 9)) {
      goto LABEL_13;
    }
    uint64_t v37 = (uint64_t *)((char *)v16 - 32 * (*((_DWORD *)v16 + 5) & 0x7FFFFFF));
    uint64_t v31 = *v37;
    if (*(void *)a1 == *v37)
    {
      uint64_t v38 = v37[4];
      if (*(void *)(a1 + 8) == v38) {
        goto LABEL_68;
      }
    }
    else
    {
      uint64_t v38 = v37[4];
    }
    if (*(void *)a1 != v38) {
      goto LABEL_13;
    }
LABEL_50:
    if (*(void *)(a1 + 8) != v31) {
      goto LABEL_13;
    }
    goto LABEL_68;
  }
LABEL_13:
  uint64_t v18 = a2 + 32 * v14;
  uint64_t v19 = *(void *)(v18 + 32);
  uint64_t v20 = *(void *)(v19 + 8);
  if (!v20 || *(void *)(v20 + 8)) {
    return 0;
  }
  int v21 = *(_DWORD *)(a1 + 16);
  int v22 = *(unsigned __int8 *)(v19 + 16);
  if (v21 + 28 == v22)
  {
    uint64_t v23 = *(void *)(v19 - 64);
    if (*(void *)a1 == v23)
    {
      uint64_t v24 = *(void *)(v19 - 32);
      if (*(void *)(a1 + 8) == v24) {
        goto LABEL_74;
      }
    }
    else
    {
      uint64_t v24 = *(void *)(v19 - 32);
    }
    if (*(void *)a1 != v24) {
      return 0;
    }
  }
  else
  {
    if (v22 != 5 || v21 != *(unsigned __int16 *)(v19 + 18)) {
      return 0;
    }
    int v39 = (uint64_t *)(v19 - 32 * (*(_DWORD *)(v19 + 20) & 0x7FFFFFF));
    uint64_t v23 = *v39;
    if (*(void *)a1 == *v39)
    {
      uint64_t v40 = v39[4];
      if (*(void *)(a1 + 8) == v40) {
        goto LABEL_74;
      }
    }
    else
    {
      uint64_t v40 = v39[4];
    }
    if (*(void *)a1 != v40) {
      return 0;
    }
  }
  if (*(void *)(a1 + 8) != v23) {
    return 0;
  }
LABEL_74:
  uint8x8_t v43 = *(llvm::Constant **)v18;

  return sub_1CBF68974(a1 + 24, v43);
}

BOOL sub_1CCA14944(uint64_t *a1, int a2, uint64_t a3)
{
  int v3 = *(unsigned __int8 *)(a3 + 16);
  if (a2 + 28 != v3)
  {
    if (v3 != 5 || *(unsigned __int16 *)(a3 + 18) != a2) {
      return 0;
    }
    uint64_t v7 = (uint64_t *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF));
    uint64_t v4 = *v7;
    uint64_t v5 = *a1;
    if (*a1 != *v7)
    {
      uint64_t v6 = v7[4];
      goto LABEL_22;
    }
    uint64_t v6 = v7[4];
LABEL_9:
    int v8 = *(unsigned __int8 *)(v6 + 16);
    if (v8 == 5)
    {
      if (*(_WORD *)(v6 + 18) != 30) {
        goto LABEL_22;
      }
      uint64_t v12 = (uint64_t *)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF));
      uint64_t v9 = *v12;
      uint64_t v10 = a1[1];
      if (v10 != *v12)
      {
        uint64_t v11 = v12[4];
        goto LABEL_20;
      }
      uint64_t v11 = v12[4];
    }
    else
    {
      if (v8 != 58) {
        goto LABEL_22;
      }
      uint64_t v9 = *(void *)(v6 - 64);
      uint64_t v10 = a1[1];
      if (v10 != v9)
      {
        uint64_t v11 = *(void *)(v6 - 32);
LABEL_20:
        if (v10 == v11 && a1[2] == v9) {
          return 1;
        }
        goto LABEL_22;
      }
      uint64_t v11 = *(void *)(v6 - 32);
    }
    if (a1[2] == v11) {
      return 1;
    }
    goto LABEL_20;
  }
  uint64_t v4 = *(void *)(a3 - 64);
  uint64_t v5 = *a1;
  if (*a1 == v4)
  {
    uint64_t v6 = *(void *)(a3 - 32);
    goto LABEL_9;
  }
  uint64_t v6 = *(void *)(a3 - 32);
LABEL_22:
  if (v5 != v6) {
    return 0;
  }
  int v14 = *(unsigned __int8 *)(v4 + 16);
  if (v14 == 5)
  {
    if (*(_WORD *)(v4 + 18) != 30) {
      return 0;
    }
    uint64_t v18 = (uint64_t *)(v4 - 32 * (*(_DWORD *)(v4 + 20) & 0x7FFFFFF));
    uint64_t v15 = *v18;
    uint64_t v19 = a1[1];
    if (v19 == *v18)
    {
      uint64_t v20 = v18[4];
      if (a1[2] == v20) {
        return 1;
      }
    }
    else
    {
      uint64_t v20 = v18[4];
    }
    if (v19 != v20) {
      return 0;
    }
    return a1[2] == v15;
  }
  if (v14 != 58) {
    return 0;
  }
  uint64_t v15 = *(void *)(v4 - 64);
  uint64_t v16 = a1[1];
  if (v16 != v15)
  {
    uint64_t v17 = *(void *)(v4 - 32);
    goto LABEL_32;
  }
  uint64_t v17 = *(void *)(v4 - 32);
  if (a1[2] != v17)
  {
LABEL_32:
    if (v16 != v17) {
      return 0;
    }
    return a1[2] == v15;
  }
  return 1;
}

BOOL sub_1CCA14AF0(void **a1, int a2, uint64_t a3)
{
  int v5 = *(unsigned __int8 *)(a3 + 16);
  LOBYTE(v6) = a2 + 28;
  if (a2 + 28 != v5)
  {
    if (v5 == 5)
    {
      if (*(unsigned __int16 *)(a3 + 18) != a2) {
        goto LABEL_20;
      }
      uint64_t v12 = *(_DWORD *)(a3 + 20) & 0x7FFFFFF;
      uint64_t v13 = *(void *)(a3 - 32 * v12);
      if (v13)
      {
        **a1 = v13;
        uint64_t v12 = *(_DWORD *)(a3 + 20) & 0x7FFFFFF;
        uint64_t v14 = *(void *)(a3 - 32 * v12 + 32);
        if (v14)
        {
          *a1[1] = v14;
          if (sub_1CBF686A0(a1 + 2, 30, v14))
          {
LABEL_18:
            LOBYTE(v6) = 1;
            return (v5 == 5) & v6;
          }
          uint64_t v12 = *(_DWORD *)(a3 + 20) & 0x7FFFFFF;
        }
      }
      uint64_t v6 = *(void *)(a3 - 32 * v12 + 32);
      if (v6)
      {
        **a1 = v6;
        uint64_t v15 = *(void *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF));
        if (v15)
        {
          *a1[1] = v15;
          if (sub_1CBF686A0(a1 + 2, 30, v15)) {
            goto LABEL_18;
          }
        }
LABEL_20:
        LOBYTE(v6) = 0;
      }
    }
    return (v5 == 5) & v6;
  }
  uint64_t v7 = *(void *)(a3 - 64);
  BOOL result = 1;
  if (!v7 || (**a1 = v7, (uint64_t v8 = *(void *)(a3 - 32)) == 0) || (*a1[1] = v8, (sub_1CBF686A0(a1 + 2, 30, v8) & 1) == 0))
  {
    uint64_t v9 = *(void *)(a3 - 32);
    if (!v9) {
      return 0;
    }
    **a1 = v9;
    uint64_t v10 = *(void *)(a3 - 64);
    if (!v10) {
      return 0;
    }
    *a1[1] = v10;
    if ((sub_1CBF686A0(a1 + 2, 30, v10) & 1) == 0) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1CCA14C5C(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a2 + 16);
  if (v4 != 5)
  {
    if (v4 == 58)
    {
      int v5 = *(_DWORD *)(a1 + 32);
      if (!sub_1CCA14DB8((uint64_t *)a1, v5, *(void *)(a2 - 64))) {
        goto LABEL_6;
      }
      if ((sub_1CBF687D0(a1 + 40, *(llvm::Constant **)(a2 - 32)) & 1) == 0)
      {
        int v5 = *(_DWORD *)(a1 + 32);
LABEL_6:
        uint64_t result = sub_1CCA14DB8((uint64_t *)a1, v5, *(void *)(a2 - 32));
        if (result)
        {
          uint64_t v7 = *(llvm::Constant **)(a2 - 64);
          return sub_1CBF687D0(a1 + 40, v7);
        }
        return result;
      }
      return 1;
    }
    return 0;
  }
  if (*(_WORD *)(a2 + 18) != 30) {
    return 0;
  }
  uint64_t v8 = *(_DWORD *)(a2 + 20) & 0x7FFFFFF;
  uint64_t v9 = a2 - 32 * v8;
  int v10 = *(_DWORD *)(a1 + 32);
  if (sub_1CCA14DB8((uint64_t *)a1, v10, *(void *)v9))
  {
    if (sub_1CBF68974(a1 + 40, *(llvm::Constant **)(v9 + 32))) {
      return 1;
    }
    int v10 = *(_DWORD *)(a1 + 32);
    uint64_t v11 = -(uint64_t)(*(_DWORD *)(a2 + 20) & 0x7FFFFFF);
  }
  else
  {
    uint64_t v11 = -v8;
  }
  uint64_t v12 = a2 + 32 * v11;
  uint64_t result = sub_1CCA14DB8((uint64_t *)a1, v10, *(void *)(v12 + 32));
  if (result)
  {
    uint64_t v13 = *(llvm::Constant **)v12;
    return sub_1CBF68974(a1 + 40, v13);
  }
  return result;
}

uint64_t sub_1CCA14DB8(uint64_t *a1, int a2, uint64_t a3)
{
  int v3 = *(unsigned __int8 *)(a3 + 16);
  if (a2 + 28 == v3)
  {
    uint64_t v4 = *(void *)(a3 - 64);
    int v5 = *((_DWORD *)a1 + 4);
    int v6 = *(unsigned __int8 *)(v4 + 16);
    if (v5 + 28 == v6)
    {
      uint64_t v7 = *(void *)(v4 - 64);
      uint64_t v8 = *a1;
      if (*a1 != v7)
      {
        uint64_t v9 = *(void *)(v4 - 32);
LABEL_16:
        if (v8 != v9 || a1[1] != v7) {
          goto LABEL_19;
        }
LABEL_18:
        if (a1[3] != *(void *)(a3 - 32))
        {
LABEL_19:
          uint64_t v17 = *(void *)(a3 - 32);
          int v18 = *(unsigned __int8 *)(v17 + 16);
          if (v5 + 28 == v18)
          {
            uint64_t v19 = *(void *)(v17 - 64);
            uint64_t v20 = *a1;
            if (*a1 != v19)
            {
              uint64_t v21 = *(void *)(v17 - 32);
              goto LABEL_34;
            }
            uint64_t v21 = *(void *)(v17 - 32);
            goto LABEL_33;
          }
          if (v18 != 5 || v5 != *(unsigned __int16 *)(v17 + 18)) {
            return 0;
          }
          int v22 = (uint64_t *)(v17 - 32 * (*(_DWORD *)(v17 + 20) & 0x7FFFFFF));
LABEL_25:
          uint64_t v19 = *v22;
          uint64_t v20 = *a1;
          if (*a1 != *v22)
          {
            uint64_t v21 = v22[4];
            goto LABEL_34;
          }
          uint64_t v21 = v22[4];
LABEL_33:
          if (a1[1] == v21) {
            return a1[3] == v4;
          }
LABEL_34:
          if (v20 == v21) {
            goto LABEL_35;
          }
          return 0;
        }
        return 1;
      }
      uint64_t v9 = *(void *)(v4 - 32);
    }
    else
    {
      if (v6 != 5 || v5 != *(unsigned __int16 *)(v4 + 18)) {
        goto LABEL_19;
      }
      uint64_t v16 = (uint64_t *)(v4 - 32 * (*(_DWORD *)(v4 + 20) & 0x7FFFFFF));
      uint64_t v7 = *v16;
      uint64_t v8 = *a1;
      if (*a1 != *v16)
      {
        uint64_t v9 = v16[4];
        goto LABEL_16;
      }
      uint64_t v9 = v16[4];
    }
    if (a1[1] == v9) {
      goto LABEL_18;
    }
    goto LABEL_16;
  }
  if (v3 != 5 || *(unsigned __int16 *)(a3 + 18) != a2) {
    return 0;
  }
  int v10 = (void *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF));
  uint64_t v4 = *v10;
  int v11 = *((_DWORD *)a1 + 4);
  int v12 = *(unsigned __int8 *)(*v10 + 16);
  if (v11 + 28 == v12)
  {
    uint64_t v13 = *(void *)(v4 - 64);
    uint64_t v14 = *a1;
    if (*a1 != v13)
    {
      uint64_t v15 = *(void *)(v4 - 32);
LABEL_41:
      if (v14 != v15 || a1[1] != v13) {
        goto LABEL_44;
      }
      goto LABEL_43;
    }
    uint64_t v15 = *(void *)(v4 - 32);
  }
  else
  {
    if (v12 != 5 || v11 != *(unsigned __int16 *)(v4 + 18)) {
      goto LABEL_44;
    }
    uint64_t v23 = (uint64_t *)(v4 - 32 * (*(_DWORD *)(v4 + 20) & 0x7FFFFFF));
    uint64_t v13 = *v23;
    uint64_t v14 = *a1;
    if (*a1 != *v23)
    {
      uint64_t v15 = v23[4];
      goto LABEL_41;
    }
    uint64_t v15 = v23[4];
  }
  if (a1[1] != v15) {
    goto LABEL_41;
  }
LABEL_43:
  if (a1[3] == v10[4]) {
    return 1;
  }
LABEL_44:
  uint64_t v25 = v10[4];
  int v26 = *(unsigned __int8 *)(v25 + 16);
  if (v11 + 28 != v26)
  {
    if (v26 != 5 || v11 != *(unsigned __int16 *)(v25 + 18)) {
      return 0;
    }
    int v22 = (uint64_t *)(v25 - 32 * (*(_DWORD *)(v25 + 20) & 0x7FFFFFF));
    goto LABEL_25;
  }
  uint64_t v19 = *(void *)(v25 - 64);
  if (*a1 == v19)
  {
    uint64_t v27 = *(void *)(v25 - 32);
    if (a1[1] == v27) {
      return a1[3] == v4;
    }
  }
  else
  {
    uint64_t v27 = *(void *)(v25 - 32);
  }
  if (*a1 == v27)
  {
LABEL_35:
    if (a1[1] == v19) {
      return a1[3] == v4;
    }
  }
  return 0;
}

BOOL sub_1CCA15040(uint64_t a1, uint64_t a2)
{
  BOOL result = 0;
  if (a2 && *(unsigned char *)(a2 + 16) == 82)
  {
    uint64_t v5 = *(void *)(a2 - 64);
    if (v5)
    {
      **(void **)(a1 + 8) = v5;
      BOOL result = sub_1CC0241FC(a1 + 16, *(llvm::Constant **)(a2 - 32));
      if (result)
      {
        **(_DWORD **)a1 = *(_WORD *)(a2 + 18) & 0x3F;
        return 1;
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

llvm::UndefValue *sub_1CCA150B4(uint64_t a1, unsigned __int8 *a2, uint64_t a3, unsigned int a4)
{
  uint64_t v6 = (uint64_t)a2;
  uint64_t v69 = 0;
  uint64_t v70 = 0;
  uint64_t v71 = (uint64_t)&v70;
  uint64_t p_src = 1;
  if (!sub_1CBF528D8((uint64_t)&v71, a2)) {
    goto LABEL_29;
  }
  unint64_t __src = &v69;
  uint64_t v62 = 1;
  if (!sub_1CBF528D8((uint64_t)&__src, (unsigned __int8 *)a3)) {
    goto LABEL_29;
  }
  uint64_t v10 = *((unsigned int *)v70 + 2);
  int v11 = v70;
  if (v10 >= 0x41)
  {
    int v12 = 0;
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    do
    {
      BOOL v14 = v13-- < 1;
      if (v14) {
        break;
      }
      unint64_t v15 = *(void *)(*(void *)v70 + 8 * v13);
      v12 += __clz(v15);
    }
    while (!v15);
    int v16 = v10 | 0xFFFFFFC0;
    if ((v10 & 0x3F) == 0) {
      int v16 = 0;
    }
    if ((v10 - v12 - v16) > 0x40) {
      goto LABEL_29;
    }
    int v11 = *(llvm::LLVMContext **)v70;
  }
  if (*(void *)v11 >= (unint64_t)a4) {
    goto LABEL_29;
  }
  uint64_t v17 = *(unsigned int *)(v69 + 8);
  int v18 = (void *)v69;
  if (v17 >= 0x41)
  {
    int v19 = 0;
    int64_t v20 = (unint64_t)(v17 + 63) >> 6;
    do
    {
      BOOL v14 = v20-- < 1;
      if (v14) {
        break;
      }
      unint64_t v21 = *(void *)(*(void *)v69 + 8 * v20);
      v19 += __clz(v21);
    }
    while (!v21);
    int v22 = v17 | 0xFFFFFFC0;
    if ((v17 & 0x3F) == 0) {
      int v22 = 0;
    }
    if ((v17 - v19 - v22) <= 0x40)
    {
      int v18 = *(void **)v69;
      goto LABEL_20;
    }
LABEL_29:
    if (v6 && *(unsigned __int8 *)(v6 + 16) <= 0x14u && a3 && *(unsigned __int8 *)(a3 + 16) <= 0x14u)
    {
      unint64_t v27 = a4;
      LODWORD(v62) = a4;
      if (a4 > 0x40) {
        llvm::APInt::initSlowCase((llvm::APInt *)&__src);
      }
      if (a4) {
        unint64_t v28 = 0xFFFFFFFFFFFFFFFFLL >> -(char)a4;
      }
      else {
        LODWORD(v28) = 0;
      }
      unint64_t __src = (void *)(v28 & a4);
      uint64_t v71 = 36;
      uint64_t p_src = (uint64_t)&__src;
      if (sub_1CCA16878((uint64_t)&v71, (llvm::Constant *)v6))
      {
        unsigned int v68 = a4;
        if (a4) {
          unint64_t v30 = 0xFFFFFFFFFFFFFFFFLL >> -(char)a4;
        }
        else {
          LODWORD(v30) = 0;
        }
        uint64_t v67 = v30 & a4;
        uint64_t v58 = 36;
        int64_t v59 = &v67;
        if (sub_1CCA16878((uint64_t)&v58, (llvm::Constant *)a3))
        {
          Add = llvm::ConstantExpr::getAdd((llvm::ConstantExpr *)v6, (llvm::Constant *)a3, 0, 0);
          unsigned int v66 = 64;
          uint64_t v65 = a4;
          BOOL v32 = sub_1CCA15C64((llvm::APInt *)&v65, Add);
          if (v66 >= 0x41 && v65) {
            MEMORY[0x1D25D9CB0](v65, 0x1000C8000313F17);
          }
        }
        else
        {
          BOOL v32 = 0;
        }
        if (v68 >= 0x41 && v67) {
          MEMORY[0x1D25D9CB0](v67, 0x1000C8000313F17);
        }
      }
      else
      {
        BOOL v32 = 0;
      }
      if (v62 >= 0x41 && __src) {
        MEMORY[0x1D25D9CB0](__src, 0x1000C8000313F17);
      }
      if (v32) {
        return llvm::Constant::mergeUndefsWith((llvm::Constant *)v6, (llvm::Constant *)a3, v29);
      }
    }
    else
    {
      unint64_t v27 = a4;
    }
    LODWORD(p_src) = 64;
    uint64_t v71 = v27;
    uint64_t v73 = v6;
    uint64_t v33 = *(void *)(a3 + 8);
    if (v33)
    {
      uint64_t v34 = *(void *)(v33 + 8);
      if (!v34)
      {
        int v43 = *(unsigned __int8 *)(a3 + 16);
        if (v43 != 43)
        {
          if (v43 == 5) {
            LOBYTE(v34) = *(_WORD *)(a3 + 18) == 15
          }
                       && sub_1CBF531E4((llvm::APInt *)&v71, *(llvm::Constant **)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF)))&& v73 == *(void *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF) + 32);
          int v35 = (v43 == 5) & v34;
LABEL_47:
          if (p_src >= 0x41 && v71) {
            MEMORY[0x1D25D9CB0](v71, 0x1000C8000313F17);
          }
          if (v35)
          {
            uint64_t v36 = *(void *)(a1 + 8);
            uint64_t v37 = *(void *)(*(void *)a1 + 56);
            uint64_t v38 = *(void *)(*(void *)a1 + 72);
            if (!v36 || !*(void *)(v36 + 40))
            {
              if (!v6 || *(unsigned __int8 *)(v6 + 16) < 0x1Cu || (uint64_t v36 = v6, !*(void *)(v6 + 40))) {
                uint64_t v36 = 0;
              }
            }
            uint64_t v71 = *(void *)(*(void *)a1 + 80);
            uint64_t p_src = v37;
            uint64_t v73 = v36;
            uint64_t v74 = v38;
            uint64_t v75 = 0;
            char v76 = 1;
            sub_1CC16089C((uint64_t *)v6, 0, (const llvm::DataLayout **)&v71, (uint64_t)&__src);
            LODWORD(p_src) = v62;
            if (v62 > 0x40) {
              operator new[]();
            }
            if (v62) {
              unint64_t v39 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v62;
            }
            else {
              unint64_t v39 = 0;
            }
            if ((v39 & ~(unint64_t)__src) >= v27) {
              uint64_t v25 = 0;
            }
            else {
              uint64_t v25 = (void *)v6;
            }
            if (v64 >= 0x41 && v63) {
              MEMORY[0x1D25D9CB0](v63, 0x1000C8000313F17);
            }
            if (v62 >= 0x41 && __src) {
              MEMORY[0x1D25D9CB0](__src, 0x1000C8000313F17);
            }
            return (llvm::UndefValue *)v25;
          }
          uint64_t v25 = 0;
          if (!a4) {
            return (llvm::UndefValue *)v25;
          }
          if (**(void **)(a1 + 16) != **(void **)(a1 + 24)) {
            return (llvm::UndefValue *)v25;
          }
          v8.i32[0] = a4;
          uint8x8_t v40 = (uint8x8_t)vcnt_s8(v8);
          v40.i16[0] = vaddlv_u8(v40);
          if (v40.i32[0] > 1u) {
            return (llvm::UndefValue *)v25;
          }
          uint64_t v65 = 0;
          uint64_t v41 = a4 - 1;
          LODWORD(v63) = 64;
          unint64_t __src = &v65;
          uint64_t v62 = v41;
          int v42 = *(unsigned __int8 *)(v6 + 16);
          if (v42 == 5)
          {
            if (*(_WORD *)(v6 + 18) != 28
              || (uint64_t v44 = v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF), !*(void *)v44)
              || (uint64_t v65 = *(void *)v44, !sub_1CBF531E4((llvm::APInt *)&v62, *(llvm::Constant **)(v44 + 32))))
            {
LABEL_89:
              int v45 = 0;
              goto LABEL_90;
            }
          }
          else
          {
            if (v42 != 56) {
              goto LABEL_93;
            }
            if (!*(void *)(v6 - 64)) {
              goto LABEL_89;
            }
            uint64_t v65 = *(void *)(v6 - 64);
            if (!sub_1CBF53154((llvm::APInt *)&v62, *(unsigned __int8 **)(v6 - 32))) {
              goto LABEL_89;
            }
          }
          LODWORD(v74) = 64;
          uint64_t p_src = v65;
          uint64_t v73 = a4 - 1;
          int v45 = sub_1CCA15DB0((uint64_t)&v71, 28, a3);
          if (v74 >= 0x41 && v73) {
            MEMORY[0x1D25D9CB0](v73, 0x1000C8000313F17);
          }
LABEL_90:
          if (v63 >= 0x41 && v62)
          {
            MEMORY[0x1D25D9CB0](v62, 0x1000C8000313F17);
            if ((v45 & 1) == 0) {
              goto LABEL_93;
            }
          }
          else if (!v45)
          {
LABEL_93:
            unsigned int v60 = 64;
            uint64_t v58 = (uint64_t)&v65;
            int64_t v59 = (void *)v41;
            if (!sub_1CCA15F48((void **)&v58, v6, (BOOL)&v65))
            {
              char v46 = 0;
              goto LABEL_95;
            }
            unsigned int v64 = 64;
            uint64_t v62 = v65;
            uint64_t v63 = v41;
            unsigned int v68 = 64;
            uint64_t v67 = v41;
            sub_1CD68AB34((uint64_t)&v71, (uint64_t)&__src, (llvm::APInt *)&v67);
            int v49 = *(unsigned __int8 *)(a3 + 16);
            if (v49 == 56)
            {
              uint64_t v50 = *(void *)(a3 - 64);
              int v51 = *(unsigned __int8 *)(v50 + 16);
              if (v51 == 5)
              {
                if (*(_WORD *)(v50 + 18) != 15) {
                  goto LABEL_146;
                }
                if (!sub_1CC03F414((uint64_t)&v71, *(llvm::Constant **)(v50 - 32 * (*(_DWORD *)(v50 + 20) & 0x7FFFFFF))))goto LABEL_146; {
                uint64_t v56 = v50 - 32 * (*(_DWORD *)(v50 + 20) & 0x7FFFFFF);
                }
                if (!sub_1CD68AAB4(&p_src, *(void *)(v56 + 32), v56)) {
                  goto LABEL_146;
                }
              }
              else if (v51 != 43 {
                     || !sub_1CBF535C4((uint64_t)&v71, *(llvm::Constant **)(v50 - 64))
              }
                     || (sub_1CD68AAB4(&p_src, *(void *)(v50 - 32), v52) & 1) == 0)
              {
                goto LABEL_146;
              }
              if (sub_1CBF53154((llvm::APInt *)&v75, *(unsigned __int8 **)(a3 - 32)))
              {
                char v46 = 1;
LABEL_154:
                sub_1CD68ABB8((uint64_t)&v71);
LABEL_95:
                if (v60 >= 0x41 && v59) {
                  MEMORY[0x1D25D9CB0](v59, 0x1000C8000313F17);
                }
                if ((v46 & 1) == 0)
                {
                  LODWORD(v63) = 64;
                  unint64_t __src = &v65;
                  uint64_t v62 = v41;
                  if (sub_1CCA15F48((void **)&__src, v6, (BOOL)&v65))
                  {
                    LODWORD(v74) = 64;
                    uint64_t p_src = v65;
                    uint64_t v73 = v41;
                    if (!sub_1CD68AC2C((uint64_t)&v71, a3, v65)) {
                      uint64_t v6 = 0;
                    }
                    if (v74 >= 0x41 && v73) {
                      MEMORY[0x1D25D9CB0](v73, 0x1000C8000313F17);
                    }
                  }
                  else
                  {
                    uint64_t v6 = 0;
                  }
                  if (v63 >= 0x41 && v62) {
                    MEMORY[0x1D25D9CB0](v62, 0x1000C8000313F17);
                  }
                }
                return (llvm::UndefValue *)v6;
              }
LABEL_146:
              char v46 = 0;
              goto LABEL_154;
            }
            if (v49 == 5)
            {
              if (*(_WORD *)(a3 + 18) != 28) {
                goto LABEL_152;
              }
              uint64_t v53 = *(void *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF));
              int v54 = *(unsigned __int8 *)(v53 + 16);
              if (v54 == 5)
              {
                if (*(_WORD *)(v53 + 18) != 15) {
                  goto LABEL_152;
                }
                if (!sub_1CC03F414((uint64_t)&v71, *(llvm::Constant **)(v53 - 32 * (*(_DWORD *)(v53 + 20) & 0x7FFFFFF))))goto LABEL_152; {
                uint64_t v57 = v53 - 32 * (*(_DWORD *)(v53 + 20) & 0x7FFFFFF);
                }
                if (!sub_1CD68AAB4(&p_src, *(void *)(v57 + 32), v57)) {
                  goto LABEL_152;
                }
              }
              else if (v54 != 43 {
                     || !sub_1CBF535C4((uint64_t)&v71, *(llvm::Constant **)(v53 - 64))
              }
                     || (sub_1CD68AAB4(&p_src, *(void *)(v53 - 32), v55) & 1) == 0)
              {
                goto LABEL_152;
              }
              if (!sub_1CBF531E4((llvm::APInt *)&v75, *(llvm::Constant **)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF) + 32)))
              {
LABEL_152:
                char v48 = 0;
                goto LABEL_153;
              }
              char v48 = 1;
            }
LABEL_153:
            char v46 = (v49 == 5) & v48;
            goto LABEL_154;
          }
          return (llvm::UndefValue *)v65;
        }
        if (sub_1CBF53154((llvm::APInt *)&v71, *(unsigned __int8 **)(a3 - 64)) && v73 == *(void *)(a3 - 32))
        {
          int v35 = 1;
          goto LABEL_47;
        }
      }
    }
    int v35 = 0;
    goto LABEL_47;
  }
LABEL_20:
  if (*v18 >= (unint64_t)a4) {
    goto LABEL_29;
  }
  if (v10 >= 0x41) {
    operator new[]();
  }
  unint64_t v23 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v10;
  if (!v10) {
    unint64_t v23 = 0;
  }
  if ((v23 & (*(void *)v69 + *(void *)v70)) != a4) {
    goto LABEL_29;
  }
  uint64_t v24 = *(void *)v6;
  uint64_t v25 = llvm::ConstantInt::get(*(llvm::ConstantInt **)v24, v70, v9);
  if ((*(_DWORD *)(v24 + 8) & 0xFE) == 0x12) {
    return llvm::ConstantVector::getSplat((llvm::Type *)(*(unsigned int *)(v24 + 32) | ((unint64_t)(*(_DWORD *)(v24 + 8) == 19) << 32)), (uint64_t)v25);
  }
  return (llvm::UndefValue *)v25;
}

uint64_t sub_1CCA15BF0(void **a1, uint64_t a2)
{
  if (!a2 || *(unsigned __int8 *)(a2 + 16) - 53 > 1) {
    return 0;
  }
  int v2 = *(_DWORD *)(a2 + 20);
  int v3 = (v2 & 0x40000000) != 0 ? *(uint64_t **)(a2 - 8) : (uint64_t *)(a2 - 32 * (v2 & 0x7FFFFFF));
  uint64_t v4 = *v3;
  if (!v4) {
    return 0;
  }
  **a1 = v4;
  int v5 = *(_DWORD *)(a2 + 20);
  uint64_t v6 = (v5 & 0x40000000) != 0 ? *(void *)(a2 - 8) : a2 - 32 * (v5 & 0x7FFFFFF);
  uint64_t v7 = *(void *)(v6 + 32);
  if (!v7) {
    return 0;
  }
  *a1[1] = v7;
  return 1;
}

BOOL sub_1CCA15C64(llvm::APInt *this, llvm::Constant *a2)
{
  int v2 = this;
  if (!a2 || *((unsigned char *)a2 + 16) != 16)
  {
    if ((*(_DWORD *)(*(void *)a2 + 8) & 0xFE) != 0x12) {
      return 0;
    }
    SplatValue = (llvm::Constant *)llvm::Constant::getSplatValue(a2, (llvm::Type *)1);
    int v2 = this;
    if (!SplatValue) {
      return 0;
    }
    a2 = SplatValue;
    if (*((unsigned char *)SplatValue + 16) != 16) {
      return 0;
    }
  }

  return sub_1CBF53278((uint64_t)a2 + 24, v2);
}

BOOL sub_1CCA15CF8(void **a1, int a2, uint64_t a3)
{
  int v3 = *(unsigned __int8 *)(a3 + 16);
  char v4 = a2 + 28;
  if (a2 + 28 == v3)
  {
    uint64_t v5 = *(void *)(a3 - 64);
    BOOL result = 0;
    if (v5)
    {
      **a1 = v5;
      if (sub_1CBF53154((llvm::APInt *)(a1 + 1), *(unsigned __int8 **)(a3 - 32))) {
        return 1;
      }
    }
  }
  else
  {
    if (v3 == 5)
    {
      char v4 = 0;
      if (*(unsigned __int16 *)(a3 + 18) == a2)
      {
        uint64_t v7 = *(void *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF));
        if (v7)
        {
          **a1 = v7;
          if (sub_1CBF531E4((llvm::APInt *)(a1 + 1), *(llvm::Constant **)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF) + 32)))
          {
            char v4 = 1;
          }
        }
      }
    }
    return (v3 == 5) & v4;
  }
  return result;
}

uint64_t sub_1CCA15DB0(uint64_t a1, int a2, uint64_t a3)
{
  int v5 = *(unsigned __int8 *)(a3 + 16);
  char v6 = a2 + 28;
  if (a2 + 28 == v5)
  {
    uint64_t v7 = *(void *)(a3 - 64);
    int v8 = *(unsigned __int8 *)(v7 + 16);
    if (v8 == 5)
    {
      if (*(_WORD *)(v7 + 18) == 15
        && sub_1CC03F414(a1, *(llvm::Constant **)(v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF))))
      {
        uint64_t v9 = *(void *)(v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF) + 32);
        goto LABEL_15;
      }
    }
    else if (v8 == 43 && sub_1CBF535C4(a1, *(llvm::Constant **)(v7 - 64)))
    {
      uint64_t v9 = *(void *)(v7 - 32);
LABEL_15:
      if (*(void *)(a1 + 8) == v9 && sub_1CBF53154((llvm::APInt *)(a1 + 16), *(unsigned __int8 **)(a3 - 32))) {
        return 1;
      }
    }
    return 0;
  }
  if (v5 == 5)
  {
    if (*(unsigned __int16 *)(a3 + 18) == a2)
    {
      uint64_t v10 = *(void *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF));
      int v11 = *(unsigned __int8 *)(v10 + 16);
      if (v11 == 5)
      {
        if (*(_WORD *)(v10 + 18) != 15
          || !sub_1CC03F414(a1, *(llvm::Constant **)(v10 - 32 * (*(_DWORD *)(v10 + 20) & 0x7FFFFFF))))
        {
          goto LABEL_25;
        }
        uint64_t v12 = *(void *)(v10 - 32 * (*(_DWORD *)(v10 + 20) & 0x7FFFFFF) + 32);
      }
      else
      {
        if (v11 != 43 || !sub_1CBF535C4(a1, *(llvm::Constant **)(v10 - 64))) {
          goto LABEL_25;
        }
        uint64_t v12 = *(void *)(v10 - 32);
      }
      if (*(void *)(a1 + 8) == v12
        && sub_1CBF531E4((llvm::APInt *)(a1 + 16), *(llvm::Constant **)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF) + 32)))
      {
        char v6 = 1;
        return (v5 == 5) & v6;
      }
    }
LABEL_25:
    char v6 = 0;
  }
  return (v5 == 5) & v6;
}

uint64_t sub_1CCA15F48@<X0>(void **a1@<X0>, uint64_t a2@<X1>, BOOL a3@<W8>)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 16);
  unsigned int v4 = v3 - 28;
  BOOL v6 = v3 < 0x1C && v3 != 5 || a2 == 0;
  int v7 = v6;
  if (!v6)
  {
    if (v3 <= 0x1B) {
      unsigned int v4 = *(unsigned __int16 *)(a2 + 18);
    }
    if (v4 == 39)
    {
      int v9 = *(_DWORD *)(a2 + 20);
      if ((v9 & 0x40000000) != 0) {
        uint64_t v10 = *(uint64_t **)(a2 - 8);
      }
      else {
        uint64_t v10 = (uint64_t *)(a2 - 32 * (v9 & 0x7FFFFFF));
      }
      a3 = sub_1CCA15CF8(a1, 28, *v10);
    }
    else
    {
      a3 = 0;
    }
  }
  return (v7 ^ 1) & a3;
}

BOOL sub_1CCA15FD0@<W0>(void *a1@<X0>, uint64_t a2@<X1>, BOOL a3@<W8>)
{
  int v3 = *(unsigned __int8 *)(a2 + 16);
  if (v3 == 56) {
    return *a1 == *(void *)(a2 - 64) && sub_1CBF53154((llvm::APInt *)(a1 + 1), *(unsigned __int8 **)(a2 - 32));
  }
  if (v3 == 5)
  {
    a3 = 0;
    if (*(_WORD *)(a2 + 18) == 28)
    {
      uint64_t v5 = a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF);
      if (*a1 == *(void *)v5 && sub_1CBF531E4((llvm::APInt *)(a1 + 1), *(llvm::Constant **)(v5 + 32))) {
        a3 = 1;
      }
    }
  }
  return v3 == 5 && a3;
}

uint64_t sub_1CCA16080(uint64_t a1, int a2, uint64_t a3, unsigned __int8 *a4)
{
  uint64_t v5 = (unsigned __int8 *)a3;
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = **(void **)(a1 + 8);
  __int16 v36 = 257;
  if (*(void *)a3 != v9)
  {
    if (*(unsigned __int8 *)(a3 + 16) <= 0x14u)
    {
      uint64_t v5 = (unsigned __int8 *)(*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(**(void **)(v8 + 72)
                                                                                           + 224))(*(void *)(v8 + 72), 39, a3, v9);
      if (v5) {
        BOOL v13 = v5[16] >= 0x1Cu;
      }
      else {
        BOOL v13 = 0;
      }
      if (v13)
      {
        (*(void (**)(void, unsigned __int8 *, uint64_t *, void, void))(**(void **)(v8 + 80) + 16))(*(void *)(v8 + 80), v5, v35, *(void *)(v8 + 48), *(void *)(v8 + 56));
        uint64_t v29 = *(unsigned int *)(v8 + 8);
        if (v29)
        {
          uint64_t v30 = *(void *)v8;
          uint64_t v31 = v30 + 16 * v29;
          do
          {
            llvm::Instruction::setMetadata((llvm::Instruction *)v5, *(_DWORD *)v30, *(llvm::MDNode **)(v30 + 8));
            v30 += 16;
          }
          while (v30 != v31);
        }
      }
    }
    else
    {
      __int16 v38 = 257;
      uint64_t v5 = (unsigned __int8 *)llvm::CastInst::Create(39, a3, v9, v37, 0);
      (*(void (**)(void, unsigned __int8 *, uint64_t *, void, void))(**(void **)(v8 + 80) + 16))(*(void *)(v8 + 80), v5, v35, *(void *)(v8 + 48), *(void *)(v8 + 56));
      uint64_t v10 = *(unsigned int *)(v8 + 8);
      if (v10)
      {
        uint64_t v11 = *(void *)v8;
        uint64_t v12 = v11 + 16 * v10;
        do
        {
          llvm::Instruction::setMetadata((llvm::Instruction *)v5, *(_DWORD *)v11, *(llvm::MDNode **)(v11 + 8));
          v11 += 16;
        }
        while (v11 != v12);
      }
    }
  }
  uint64_t v14 = *(void *)a1;
  uint64_t v15 = **(void **)(a1 + 8);
  __int16 v36 = 257;
  if (*(void *)a4 != v15)
  {
    if (a4[16] <= 0x14u)
    {
      a4 = (unsigned __int8 *)(*(uint64_t (**)(void, uint64_t, unsigned __int8 *, uint64_t))(**(void **)(v14 + 72) + 224))(*(void *)(v14 + 72), 39, a4, v15);
      if (a4) {
        BOOL v19 = a4[16] >= 0x1Cu;
      }
      else {
        BOOL v19 = 0;
      }
      if (v19)
      {
        (*(void (**)(void, unsigned __int8 *, uint64_t *, void, void))(**(void **)(v14 + 80) + 16))(*(void *)(v14 + 80), a4, v35, *(void *)(v14 + 48), *(void *)(v14 + 56));
        uint64_t v32 = *(unsigned int *)(v14 + 8);
        if (v32)
        {
          uint64_t v33 = *(void *)v14;
          uint64_t v34 = *(void *)v14 + 16 * v32;
          do
          {
            llvm::Instruction::setMetadata((llvm::Instruction *)a4, *(_DWORD *)v33, *(llvm::MDNode **)(v33 + 8));
            v33 += 16;
          }
          while (v33 != v34);
        }
      }
    }
    else
    {
      __int16 v38 = 257;
      a4 = (unsigned __int8 *)llvm::CastInst::Create(39, (uint64_t)a4, v15, v37, 0);
      (*(void (**)(void, unsigned __int8 *, uint64_t *, void, void))(**(void **)(v14 + 80) + 16))(*(void *)(v14 + 80), a4, v35, *(void *)(v14 + 48), *(void *)(v14 + 56));
      uint64_t v16 = *(unsigned int *)(v14 + 8);
      if (v16)
      {
        uint64_t v17 = *(void *)v14;
        uint64_t v18 = *(void *)v14 + 16 * v16;
        do
        {
          llvm::Instruction::setMetadata((llvm::Instruction *)a4, *(_DWORD *)v17, *(llvm::MDNode **)(v17 + 8));
          v17 += 16;
        }
        while (v17 != v18);
      }
    }
  }
  uint64_t v20 = *(void *)a1;
  unint64_t v21 = **(unsigned int **)(a1 + 16);
  __int16 v38 = 257;
  int v22 = llvm::ConstantInt::get(*(llvm::ConstantInt **)a4, v21, 0);
  unint64_t v23 = sub_1CC242524(v20, (uint64_t)a4, (uint64_t)v22, (uint64_t)v37, 0, 0);
  uint64_t v24 = *(void *)a1;
  __int16 v38 = 257;
  v35[0] = (uint64_t)sub_1CB844AF4(v24, v5, (uint64_t)v23, (uint64_t)v37);
  uint64_t Declaration = llvm::Intrinsic::getDeclaration(*(uint64_t ***)(*(void *)(*(void *)(*(void *)(a1 + 24) + 40) + 56) + 40), a2, *(void *)(a1 + 8), 1);
  int v26 = *(uint64_t **)a1;
  if (Declaration) {
    unint64_t v27 = *(uint64_t ***)(Declaration + 24);
  }
  else {
    unint64_t v27 = 0;
  }
  __int16 v38 = 257;
  return sub_1CB845BAC(v26, v27, (uint64_t **)Declaration, v35, 1, (uint64_t)v37, 0);
}

BOOL sub_1CCA16428(uint64_t a1, unsigned __int8 *a2)
{
  if (!a2) {
    return 0;
  }
  int v2 = *(_DWORD *)(*(void *)a2 + 8);
  if ((v2 & 0xFE) == 0x12) {
    int v2 = *(_DWORD *)(**(void **)(*(void *)a2 + 16) + 8);
  }
  if (v2 != 269) {
    return 0;
  }
  int v3 = a2[16];
  if (v3 == 56) {
    return 1;
  }
  if (v3 != 85) {
    return 0;
  }
  uint64_t v4 = *((void *)a2 - 4);
  if (!v4) {
    return 0;
  }
  unsigned int v5 = *(unsigned __int8 *)(v4 + 16);
  if (v5 > 0x14) {
    return 0;
  }
  if (v5 == 16)
  {
    uint64_t v6 = *(unsigned int *)(v4 + 32);
    if (v6 >= 0x41)
    {
      int v8 = 0;
      int64_t v9 = (unint64_t)(v6 + 63) >> 6;
      do
      {
        if (v9-- < 1) {
          break;
        }
        unint64_t v11 = *(void *)(*(void *)(v4 + 24) + 8 * v9);
        v8 += __clz(v11);
      }
      while (!v11);
      int v12 = v6 | 0xFFFFFFC0;
      if ((v6 & 0x3F) == 0) {
        int v12 = 0;
      }
      if (v8 + v12 != v6) {
        return 0;
      }
    }
    else if (*(void *)(v4 + 24))
    {
      return 0;
    }
    return 1;
  }
  if (v5 == 17) {
    return (sub_1CB844168(v4, 0.0) & 1) != 0;
  }
  BOOL result = 1;
  if (v5 - 18 >= 3 && v5 != 13) {
    return 0;
  }
  return result;
}

BOOL sub_1CCA16538(uint64_t a1, unsigned __int8 *a2)
{
  if (!a2) {
    return 0;
  }
  int v2 = *(_DWORD *)(*(void *)a2 + 8);
  if ((v2 & 0xFE) == 0x12) {
    int v2 = *(_DWORD *)(**(void **)(*(void *)a2 + 16) + 8);
  }
  BOOL result = 0;
  if (v2 == 269)
  {
    int v3 = a2[16];
    if (v3 == 57) {
      return 1;
    }
    if (v3 == 85)
    {
      uint64_t v4 = (unsigned __int8 *)*((void *)a2 - 8);
      if (v4)
      {
        if (v4[16] <= 0x14u && (llvm::Constant::isOneValue((llvm::Constant *)v4) & 1) != 0) {
          return 1;
        }
      }
    }
  }
  return result;
}

uint64_t sub_1CCA165C0(uint64_t **a1, uint64_t a2)
{
  int v3 = *(unsigned __int8 *)(a2 + 16);
  if (v3 == 56)
  {
    uint64_t v4 = *(void *)(a2 - 64);
    int v5 = *(unsigned __int8 *)(v4 + 16);
    if (v5 == 5)
    {
      if (*(_WORD *)(v4 + 18) != 30) {
        goto LABEL_20;
      }
      uint64_t v16 = (uint64_t *)(v4 - 32 * (*(_DWORD *)(v4 + 20) & 0x7FFFFFF));
      uint64_t v6 = *v16;
      uint64_t v7 = **a1;
      uint64_t v8 = v16[4];
    }
    else
    {
      if (v5 != 58) {
        goto LABEL_20;
      }
      uint64_t v6 = *(void *)(v4 - 64);
      uint64_t v7 = **a1;
      uint64_t v8 = *(void *)(v4 - 32);
    }
    if (v7 == v6 && v8 || (v6 ? (v17 = v7 == v8) : (v17 = 0), uint64_t v8 = v6, v17))
    {
      *a1[1] = v8;
      *a1[2] = v4;
      uint64_t v18 = *(void *)(a2 - 32);
      if (v18) {
        goto LABEL_34;
      }
    }
LABEL_20:
    uint64_t v19 = *(void *)(a2 - 32);
    int v20 = *(unsigned __int8 *)(v19 + 16);
    if (v20 == 5)
    {
      if (*(_WORD *)(v19 + 18) == 30)
      {
        uint64_t v24 = (uint64_t *)(v19 - 32 * (*(_DWORD *)(v19 + 20) & 0x7FFFFFF));
        uint64_t v21 = *v24;
        uint64_t v22 = **a1;
        uint64_t v23 = v24[4];
        goto LABEL_25;
      }
    }
    else if (v20 == 58)
    {
      uint64_t v21 = *(void *)(v19 - 64);
      uint64_t v22 = **a1;
      uint64_t v23 = *(void *)(v19 - 32);
LABEL_25:
      if (v22 == v21 && v23 || (v21 ? (v25 = v22 == v23) : (v25 = 0), uint64_t v23 = v21, v25))
      {
        *a1[1] = v23;
        *a1[2] = v19;
        uint64_t v18 = *(void *)(a2 - 64);
        if (v18)
        {
LABEL_34:
          *a1[3] = v18;
          return 1;
        }
      }
    }
    return 0;
  }
  if (v3 == 5)
  {
    if (*(_WORD *)(a2 + 18) != 28) {
      goto LABEL_57;
    }
    uint64_t v9 = *(_DWORD *)(a2 + 20) & 0x7FFFFFF;
    uint64_t v10 = -v9;
    uint64_t v11 = *(void *)(a2 - 32 * v9);
    int v12 = *(unsigned __int8 *)(v11 + 16);
    if (v12 == 5)
    {
      if (*(_WORD *)(v11 + 18) != 30) {
        goto LABEL_47;
      }
      unint64_t v27 = (uint64_t *)(v11 - 32 * (*(_DWORD *)(v11 + 20) & 0x7FFFFFF));
      uint64_t v13 = *v27;
      uint64_t v14 = **a1;
      uint64_t v15 = v27[4];
    }
    else
    {
      if (v12 != 58) {
        goto LABEL_47;
      }
      uint64_t v13 = *(void *)(v11 - 64);
      uint64_t v14 = **a1;
      uint64_t v15 = *(void *)(v11 - 32);
    }
    if (v14 == v13 && v15 || (v13 ? (v28 = v14 == v15) : (v28 = 0), uint64_t v15 = v13, v28))
    {
      *a1[1] = v15;
      *a1[2] = v11;
      uint64_t v29 = *(_DWORD *)(a2 + 20) & 0x7FFFFFF;
      uint64_t v2 = *(void *)(a2 - 32 * v29 + 32);
      if (v2) {
        goto LABEL_61;
      }
      uint64_t v10 = -v29;
    }
LABEL_47:
    uint64_t v30 = *(void *)(a2 + 32 * v10 + 32);
    int v31 = *(unsigned __int8 *)(v30 + 16);
    if (v31 == 5)
    {
      if (*(_WORD *)(v30 + 18) == 30)
      {
        int v35 = (uint64_t *)(v30 - 32 * (*(_DWORD *)(v30 + 20) & 0x7FFFFFF));
        uint64_t v32 = *v35;
        uint64_t v33 = **a1;
        uint64_t v34 = v35[4];
        goto LABEL_52;
      }
    }
    else if (v31 == 58)
    {
      uint64_t v32 = *(void *)(v30 - 64);
      uint64_t v33 = **a1;
      uint64_t v34 = *(void *)(v30 - 32);
LABEL_52:
      if (v33 != v32 || !v34)
      {
        BOOL v36 = v32 && v33 == v34;
        uint64_t v34 = v32;
        if (!v36) {
          goto LABEL_57;
        }
      }
      *a1[1] = v34;
      *a1[2] = v30;
      uint64_t v2 = *(void *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));
      if (!v2) {
        return (v3 == 5) & v2;
      }
LABEL_61:
      *a1[3] = v2;
      LOBYTE(v2) = 1;
      return (v3 == 5) & v2;
    }
LABEL_57:
    LOBYTE(v2) = 0;
  }
  return (v3 == 5) & v2;
}

uint64_t sub_1CCA16878(uint64_t a1, llvm::Constant *this)
{
  unsigned int v4 = *((unsigned __int8 *)this + 16);
  if (this && v4 == 16)
  {
    SplatValue = this;
    goto LABEL_4;
  }
  uint64_t v10 = *(void *)this;
  if (v4 <= 0x14 && v10 != 0 && (*(_DWORD *)(*(void *)this + 8) & 0xFE) == 18)
  {
    SplatValue = (llvm::Constant *)llvm::Constant::getSplatValue(this, 0);
    if (SplatValue && *((unsigned char *)SplatValue + 16) == 16)
    {
LABEL_4:
      uint64_t v6 = (uint64_t)SplatValue + 24;
      uint64_t v7 = *(void *)(a1 + 8);
      int v8 = *(_DWORD *)a1;
      return llvm::ICmpInst::compare(v6, v7, v8);
    }
    if (*(unsigned char *)(v10 + 8) == 18)
    {
      int v13 = *(_DWORD *)(v10 + 32);
      if (v13)
      {
        uint64_t v14 = 0;
        char v15 = 0;
        while (1)
        {
          AggregateElement = llvm::Constant::getAggregateElement(this, v14);
          if (!AggregateElement) {
            break;
          }
          int v17 = *((unsigned __int8 *)AggregateElement + 16);
          if ((v17 - 11) >= 2)
          {
            if (v17 != 16
              || !llvm::ICmpInst::compare((uint64_t)(AggregateElement + 3), *(void *)(a1 + 8), *(_DWORD *)a1))
            {
              break;
            }
            char v15 = 1;
          }
          uint64_t v14 = (llvm::Type *)(v14 + 1);
          if (v13 == v14) {
            return v15 & 1;
          }
        }
      }
    }
  }
  char v15 = 0;
  return v15 & 1;
}

uint64_t sub_1CCA1699C(uint64_t *a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a2 + 16);
  if (v4 != 5)
  {
    if (v4 != 58) {
      return 0;
    }
    uint64_t v5 = *(void *)(a2 - 64);
    int v6 = *(unsigned __int8 *)(v5 + 16);
    if (v6 == 5)
    {
      if (*(_WORD *)(v5 + 18) != 30) {
        goto LABEL_20;
      }
      int v17 = (uint64_t *)(v5 - 32 * (*(_DWORD *)(v5 + 20) & 0x7FFFFFF));
      uint64_t v7 = *v17;
      uint64_t v8 = *a1;
      uint64_t v9 = v17[4];
    }
    else
    {
      if (v6 != 58) {
        goto LABEL_20;
      }
      uint64_t v7 = *(void *)(v5 - 64);
      uint64_t v8 = *a1;
      uint64_t v9 = *(void *)(v5 - 32);
    }
    if ((v8 != v7 || !v9) && (v7 ? (v18 = v8 == v9) : (v18 = 0), uint64_t v9 = v7, !v18)
      || (*(void *)a1[1] = v9, (sub_1CBF687D0((uint64_t)(a1 + 2), *(llvm::Constant **)(a2 - 32)) & 1) == 0))
    {
LABEL_20:
      uint64_t v19 = *(void *)(a2 - 32);
      int v20 = *(unsigned __int8 *)(v19 + 16);
      if (v20 == 5)
      {
        if (*(_WORD *)(v19 + 18) == 30)
        {
          uint64_t v24 = (uint64_t *)(v19 - 32 * (*(_DWORD *)(v19 + 20) & 0x7FFFFFF));
          uint64_t v25 = *v24;
          uint64_t v22 = v24[4];
          if (*a1 == v25)
          {
            if (v22) {
              goto LABEL_65;
            }
          }
          BOOL v26 = v25 && *a1 == v22;
          uint64_t v22 = v25;
          if (v26) {
            goto LABEL_65;
          }
        }
      }
      else if (v20 == 58)
      {
        uint64_t v21 = *(void *)(v19 - 64);
        uint64_t v22 = *(void *)(v19 - 32);
        if (*a1 != v21 || !v22)
        {
          uint64_t result = 0;
          if (!v21) {
            return result;
          }
          BOOL v18 = *a1 == v22;
          uint64_t v22 = v21;
          if (!v18) {
            return result;
          }
        }
LABEL_65:
        *(void *)a1[1] = v22;
        uint64_t v37 = *(llvm::Constant **)(a2 - 64);
        return sub_1CBF687D0((uint64_t)(a1 + 2), v37);
      }
      return 0;
    }
    return 1;
  }
  if (*(_WORD *)(a2 + 18) != 30) {
    return 0;
  }
  uint64_t v10 = *(_DWORD *)(a2 + 20) & 0x7FFFFFF;
  uint64_t v11 = -v10;
  uint64_t v12 = *(void *)(a2 - 32 * v10);
  int v13 = *(unsigned __int8 *)(v12 + 16);
  if (v13 == 5)
  {
    if (*(_WORD *)(v12 + 18) != 30) {
      goto LABEL_48;
    }
    unint64_t v27 = (uint64_t *)(v12 - 32 * (*(_DWORD *)(v12 + 20) & 0x7FFFFFF));
    uint64_t v14 = *v27;
    uint64_t v15 = *a1;
    uint64_t v16 = v27[4];
  }
  else
  {
    if (v13 != 58) {
      goto LABEL_48;
    }
    uint64_t v14 = *(void *)(v12 - 64);
    uint64_t v15 = *a1;
    uint64_t v16 = *(void *)(v12 - 32);
  }
  if (v15 == v14 && v16 || (v14 ? (v28 = v15 == v16) : (v28 = 0), uint64_t v16 = v14, v28))
  {
    *(void *)a1[1] = v16;
    if (sub_1CBF68974((uint64_t)(a1 + 2), *(llvm::Constant **)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF) + 32))) {
      return 1;
    }
    uint64_t v11 = -(uint64_t)(*(_DWORD *)(a2 + 20) & 0x7FFFFFF);
  }
LABEL_48:
  uint64_t v29 = *(void *)(a2 + 32 * v11 + 32);
  int v30 = *(unsigned __int8 *)(v29 + 16);
  if (v30 == 5)
  {
    if (*(_WORD *)(v29 + 18) != 30) {
      return 0;
    }
    uint64_t v34 = (uint64_t *)(v29 - 32 * (*(_DWORD *)(v29 + 20) & 0x7FFFFFF));
    uint64_t v31 = *v34;
    uint64_t v32 = *a1;
    uint64_t v33 = v34[4];
  }
  else
  {
    if (v30 != 58) {
      return 0;
    }
    uint64_t v31 = *(void *)(v29 - 64);
    uint64_t v32 = *a1;
    uint64_t v33 = *(void *)(v29 - 32);
  }
  if (v32 != v31 || !v33)
  {
    BOOL v35 = v31 && v32 == v33;
    uint64_t v33 = v31;
    if (!v35) {
      return 0;
    }
  }
  *(void *)a1[1] = v33;
  BOOL v36 = *(llvm::Constant **)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));

  return sub_1CBF68974((uint64_t)(a1 + 2), v36);
}

BOOL sub_1CCA16C7C(uint64_t a1, uint64_t a2)
{
  int v3 = *(unsigned __int8 *)(a2 + 16);
  if (v3 != 58)
  {
    if (v3 != 5) {
      return (v3 == 5) & v2;
    }
    if (*(_WORD *)(a2 + 18) == 30)
    {
      uint64_t v7 = *(void *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));
      int v8 = *(unsigned __int8 *)(v7 + 16);
      if (v8 == 5)
      {
        if (*(_WORD *)(v7 + 18) != 30) {
          goto LABEL_23;
        }
        uint64_t v12 = (void *)(v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF));
        if (*(void *)a1 != *v12) {
          goto LABEL_23;
        }
        uint64_t v9 = v12[4];
        if (!v9) {
          goto LABEL_23;
        }
      }
      else
      {
        if (v8 != 58) {
          goto LABEL_23;
        }
        if (*(void *)a1 != *(void *)(v7 - 64)) {
          goto LABEL_23;
        }
        uint64_t v9 = *(void *)(v7 - 32);
        if (!v9) {
          goto LABEL_23;
        }
      }
      **(void **)(a1 + 8) = v9;
      if (*(void *)(a1 + 16) == *(void *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF) + 32))
      {
        char v2 = 1;
        return (v3 == 5) & v2;
      }
    }
LABEL_23:
    char v2 = 0;
    return (v3 == 5) & v2;
  }
  uint64_t v4 = *(void *)(a2 - 64);
  int v5 = *(unsigned __int8 *)(v4 + 16);
  if (v5 == 5)
  {
    if (*(_WORD *)(v4 + 18) != 30) {
      return 0;
    }
    uint64_t v10 = (void *)(v4 - 32 * (*(_DWORD *)(v4 + 20) & 0x7FFFFFF));
    if (*(void *)a1 != *v10) {
      return 0;
    }
    uint64_t v6 = v10[4];
    if (!v6) {
      return 0;
    }
  }
  else
  {
    if (v5 != 58) {
      return 0;
    }
    if (*(void *)a1 != *(void *)(v4 - 64)) {
      return 0;
    }
    uint64_t v6 = *(void *)(v4 - 32);
    if (!v6) {
      return 0;
    }
  }
  **(void **)(a1 + 8) = v6;
  return *(void *)(a1 + 16) == *(void *)(a2 - 32);
}

uint64_t sub_1CCA16DD8(void **a1, uint64_t a2)
{
  int v3 = *(unsigned __int8 *)(a2 + 16);
  if (v3 == 58)
  {
    uint64_t v4 = *(void *)(a2 - 64);
    int v5 = *(unsigned __int8 *)(v4 + 16);
    if (v5 == 5)
    {
      if (*(_WORD *)(v4 + 18) != 30) {
        return 0;
      }
      uint64_t v11 = *(void *)(v4 - 32 * (*(_DWORD *)(v4 + 20) & 0x7FFFFFF));
      if (!v11) {
        return 0;
      }
      **a1 = v11;
      uint64_t v7 = *(void *)(v4 - 32 * (*(_DWORD *)(v4 + 20) & 0x7FFFFFF) + 32);
      if (!v7) {
        return 0;
      }
    }
    else
    {
      if (v5 != 58) {
        return 0;
      }
      uint64_t v6 = *(void *)(v4 - 64);
      if (!v6) {
        return 0;
      }
      **a1 = v6;
      uint64_t v7 = *(void *)(v4 - 32);
      if (!v7) {
        return 0;
      }
    }
    *a1[1] = v7;
    uint64_t v12 = *(void *)(a2 - 32);
    if (v12)
    {
      *a1[2] = v12;
      return 1;
    }
    return 0;
  }
  if (v3 == 5)
  {
    if (*(_WORD *)(a2 + 18) != 30) {
      goto LABEL_25;
    }
    uint64_t v8 = *(void *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));
    int v9 = *(unsigned __int8 *)(v8 + 16);
    if (v9 != 5)
    {
      if (v9 == 58)
      {
        uint64_t v10 = *(void *)(v8 - 64);
        if (v10)
        {
          **a1 = v10;
          uint64_t v2 = *(void *)(v8 - 32);
          if (!v2) {
            return (v3 == 5) & v2;
          }
LABEL_23:
          *a1[1] = v2;
          uint64_t v2 = *(void *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF) + 32);
          if (v2)
          {
            *a1[2] = v2;
            LOBYTE(v2) = 1;
          }
          return (v3 == 5) & v2;
        }
      }
      goto LABEL_25;
    }
    if (*(_WORD *)(v8 + 18) != 30 || (uint64_t v14 = *(void *)(v8 - 32 * (*(_DWORD *)(v8 + 20) & 0x7FFFFFF))) == 0)
    {
LABEL_25:
      LOBYTE(v2) = 0;
      return (v3 == 5) & v2;
    }
    **a1 = v14;
    uint64_t v2 = *(void *)(v8 - 32 * (*(_DWORD *)(v8 + 20) & 0x7FFFFFF) + 32);
    if (v2) {
      goto LABEL_23;
    }
  }
  return (v3 == 5) & v2;
}

uint64_t sub_1CCA16F4C(void **a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a2 + 16);
  if (v4 == 5)
  {
    if (*(_WORD *)(a2 + 18) != 30) {
      return 0;
    }
    uint64_t v8 = *(void *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));
    int v9 = *(unsigned __int8 *)(v8 + 16);
    if (v9 == 5)
    {
      if (*(_WORD *)(v8 + 18) != 27) {
        goto LABEL_34;
      }
      uint64_t v18 = *(void *)(v8 - 32 * (*(_DWORD *)(v8 + 20) & 0x7FFFFFF));
      if (!v18) {
        goto LABEL_34;
      }
      **a1 = v18;
      if (!sub_1CBF531E4((llvm::APInt *)(a1 + 1), *(llvm::Constant **)(v8 - 32 * (*(_DWORD *)(v8 + 20) & 0x7FFFFFF) + 32)))goto LABEL_34; {
    }
      }
    else
    {
      if (v9 != 55) {
        goto LABEL_34;
      }
      uint64_t v10 = *(void *)(v8 - 64);
      if (!v10) {
        goto LABEL_34;
      }
      **a1 = v10;
      if (!sub_1CBF53154((llvm::APInt *)(a1 + 1), *(unsigned __int8 **)(v8 - 32))) {
        goto LABEL_34;
      }
    }
    if (sub_1CBF68974((uint64_t)(a1 + 3), *(llvm::Constant **)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF) + 32))) {
      return 1;
    }
LABEL_34:
    uint64_t v19 = *(void *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF) + 32);
    int v20 = *(unsigned __int8 *)(v19 + 16);
    if (v20 == 5)
    {
      if (*(_WORD *)(v19 + 18) != 27) {
        return 0;
      }
      uint64_t v22 = *(void *)(v19 - 32 * (*(_DWORD *)(v19 + 20) & 0x7FFFFFF));
      if (!v22) {
        return 0;
      }
      **a1 = v22;
      uint64_t result = sub_1CBF531E4((llvm::APInt *)(a1 + 1), *(llvm::Constant **)(v19 - 32 * (*(_DWORD *)(v19 + 20) & 0x7FFFFFF) + 32));
      if (!result) {
        return result;
      }
    }
    else
    {
      if (v20 != 55) {
        return 0;
      }
      uint64_t v21 = *(void *)(v19 - 64);
      if (!v21) {
        return 0;
      }
      **a1 = v21;
      if (!sub_1CBF53154((llvm::APInt *)(a1 + 1), *(unsigned __int8 **)(v19 - 32))) {
        return 0;
      }
    }
    uint64_t v23 = *(llvm::Constant **)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));
    return sub_1CBF68974((uint64_t)(a1 + 3), v23);
  }
  if (v4 != 58) {
    return 0;
  }
  uint64_t v5 = *(void *)(a2 - 64);
  int v6 = *(unsigned __int8 *)(v5 + 16);
  if (v6 == 5)
  {
    if (*(_WORD *)(v5 + 18) != 27) {
      goto LABEL_18;
    }
    uint64_t v11 = *(void *)(v5 - 32 * (*(_DWORD *)(v5 + 20) & 0x7FFFFFF));
    if (!v11) {
      goto LABEL_18;
    }
    **a1 = v11;
    if (!sub_1CBF531E4((llvm::APInt *)(a1 + 1), *(llvm::Constant **)(v5 - 32 * (*(_DWORD *)(v5 + 20) & 0x7FFFFFF) + 32)))goto LABEL_18; {
  }
    }
  else
  {
    if (v6 != 55) {
      goto LABEL_18;
    }
    uint64_t v7 = *(void *)(v5 - 64);
    if (!v7) {
      goto LABEL_18;
    }
    **a1 = v7;
    if (!sub_1CBF53154((llvm::APInt *)(a1 + 1), *(unsigned __int8 **)(v5 - 32))) {
      goto LABEL_18;
    }
  }
  if (sub_1CBF687D0((uint64_t)(a1 + 3), *(llvm::Constant **)(a2 - 32))) {
    return 1;
  }
LABEL_18:
  uint64_t v12 = *(void *)(a2 - 32);
  int v13 = *(unsigned __int8 *)(v12 + 16);
  if (v13 == 5)
  {
    if (*(_WORD *)(v12 + 18) != 27) {
      return 0;
    }
    uint64_t v15 = *(void *)(v12 - 32 * (*(_DWORD *)(v12 + 20) & 0x7FFFFFF));
    if (!v15) {
      return 0;
    }
    **a1 = v15;
    uint64_t result = sub_1CBF531E4((llvm::APInt *)(a1 + 1), *(llvm::Constant **)(v12 - 32 * (*(_DWORD *)(v12 + 20) & 0x7FFFFFF) + 32));
    if (!result) {
      return result;
    }
  }
  else
  {
    if (v13 != 55) {
      return 0;
    }
    uint64_t v14 = *(void *)(v12 - 64);
    if (!v14) {
      return 0;
    }
    **a1 = v14;
    if (!sub_1CBF53154((llvm::APInt *)(a1 + 1), *(unsigned __int8 **)(v12 - 32))) {
      return 0;
    }
  }
  int v17 = *(llvm::Constant **)(a2 - 64);

  return sub_1CBF687D0((uint64_t)(a1 + 3), v17);
}

uint64_t sub_1CCA17234(void **a1, uint64_t a2)
{
  LODWORD(v2) = *(unsigned __int8 *)(a2 + 16);
  if (v2 < 0x1C)
  {
    if (v2 == 5)
    {
      LODWORD(v2) = *(unsigned __int16 *)(a2 + 18);
      HIDWORD(v9) = v2 - 13;
      LODWORD(v9) = v2 - 13;
      unsigned int v8 = v9 >> 1;
      BOOL v5 = v8 > 6;
      int v10 = (1 << v8) & 0x47;
      if (!v5 && v10 != 0) {
        goto LABEL_12;
      }
    }
LABEL_16:
    int v12 = 0;
    return v12 & v2;
  }
  HIDWORD(v4) = v2 - 41;
  LODWORD(v4) = v2 - 41;
  unsigned int v3 = v4 >> 1;
  BOOL v5 = v3 > 6;
  int v6 = (1 << v3) & 0x47;
  if (v5 || v6 == 0) {
    goto LABEL_16;
  }
  LODWORD(v2) = v2 - 28;
LABEL_12:
  if (v2 == 15 && (*(unsigned char *)(a2 + 17) & 4) != 0)
  {
    int v14 = *(_DWORD *)(a2 + 20);
    if ((v14 & 0x40000000) != 0) {
      uint64_t v15 = *(uint64_t **)(a2 - 8);
    }
    else {
      uint64_t v15 = (uint64_t *)(a2 - 32 * (v14 & 0x7FFFFFF));
    }
    uint64_t v2 = *v15;
    if (v2)
    {
      **a1 = v2;
      int v16 = *(_DWORD *)(a2 + 20);
      uint64_t v17 = (v16 & 0x40000000) != 0 ? *(void *)(a2 - 8) : a2 - 32 * (v16 & 0x7FFFFFF);
      uint64_t v2 = *(void *)(v17 + 32);
      if (v2)
      {
        *a1[1] = v2;
        int v12 = 1;
        LODWORD(v2) = 1;
        return v12 & v2;
      }
    }
  }
  else
  {
    LODWORD(v2) = 0;
  }
  int v12 = 1;
  return v12 & v2;
}

uint64_t sub_1CCA17320(uint64_t a1, uint64_t a2)
{
  uint64_t result = 0;
  if (a2)
  {
    if (*(unsigned char *)(a2 + 16) == 81)
    {
      uint64_t result = 0;
      uint64_t v5 = *(void *)(a2 - 64);
      if (v5)
      {
        if (*(unsigned char *)(v5 + 16) == 92)
        {
          if (*(_DWORD *)(v5 + 72) == 1 && !**(_DWORD **)(v5 + 64) && **(void **)(a1 + 8) == *(void *)(v5 - 32))
          {
            **(void **)(a1 + 16) = v5;
            uint64_t result = sub_1CBF535C4(a1 + 24, *(llvm::Constant **)(a2 - 32));
            if (result)
            {
              **(_DWORD **)a1 = *(_WORD *)(a2 + 18) & 0x3F;
              return 1;
            }
          }
          else
          {
            return 0;
          }
        }
      }
    }
  }
  return result;
}

BOOL sub_1CCA173D0(uint64_t a1, int a2, uint64_t a3)
{
  int v5 = *(unsigned __int8 *)(a3 + 16);
  char v6 = a2 + 28;
  if (a2 + 28 == v5)
  {
    uint64_t v7 = *(void *)(a3 - 64);
    int v8 = *(unsigned __int8 *)(v7 + 16);
    if (v8 == 5)
    {
      if (*(_WORD *)(v7 + 18) != 25) {
        return 0;
      }
      if (!sub_1CBF5270C(a1, *(llvm::Constant **)(v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF)))) {
        return 0;
      }
      uint64_t v9 = *(void *)(v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF) + 32);
      if (!v9) {
        return 0;
      }
    }
    else
    {
      if (v8 != 53) {
        return 0;
      }
      if (!sub_1CBF5250C(a1, *(llvm::Constant **)(v7 - 64))) {
        return 0;
      }
      uint64_t v9 = *(void *)(v7 - 32);
      if (!v9) {
        return 0;
      }
    }
    **(void **)(a1 + 8) = v9;
    return (sub_1CBF687D0(a1 + 16, *(llvm::Constant **)(a3 - 32)) & 1) != 0;
  }
  if (v5 == 5)
  {
    if (*(unsigned __int16 *)(a3 + 18) != a2) {
      goto LABEL_25;
    }
    uint64_t v10 = *(void *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF));
    int v11 = *(unsigned __int8 *)(v10 + 16);
    if (v11 == 5)
    {
      if (*(_WORD *)(v10 + 18) != 25) {
        goto LABEL_25;
      }
      if (!sub_1CBF5270C(a1, *(llvm::Constant **)(v10 - 32 * (*(_DWORD *)(v10 + 20) & 0x7FFFFFF)))) {
        goto LABEL_25;
      }
      uint64_t v12 = *(void *)(v10 - 32 * (*(_DWORD *)(v10 + 20) & 0x7FFFFFF) + 32);
      if (!v12) {
        goto LABEL_25;
      }
    }
    else
    {
      if (v11 != 53) {
        goto LABEL_25;
      }
      if (!sub_1CBF5250C(a1, *(llvm::Constant **)(v10 - 64))) {
        goto LABEL_25;
      }
      uint64_t v12 = *(void *)(v10 - 32);
      if (!v12) {
        goto LABEL_25;
      }
    }
    **(void **)(a1 + 8) = v12;
    if ((sub_1CBF68974(a1 + 16, *(llvm::Constant **)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF) + 32)) & 1) == 0)
    {
LABEL_25:
      char v6 = 0;
      return (v5 == 5) & v6;
    }
    char v6 = 1;
  }
  return (v5 == 5) & v6;
}

BOOL sub_1CCA17570(void *a1, uint64_t a2)
{
  return *(void *)(a2 + 24) != *a1;
}

uint64_t sub_1CCA17584(void **a1, uint64_t a2)
{
  int v3 = *(unsigned __int8 *)(a2 + 16);
  if (v3 == 5)
  {
    if (*(_WORD *)(a2 + 18) != 30) {
      return 0;
    }
    uint64_t v11 = *(void *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));
    uint64_t v12 = *(void *)(v11 + 8);
    if (!v12 || *(void *)(v12 + 8))
    {
LABEL_15:
      uint64_t v13 = *(void *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF) + 32);
      uint64_t v14 = *(void *)(v13 + 8);
      if (!v14 || *(void *)(v14 + 8)) {
        return 0;
      }
      int v22 = *(unsigned __int8 *)(v13 + 16);
      if (v22 == 5)
      {
        if (*(_WORD *)(v13 + 18) != 30) {
          return 0;
        }
        uint64_t v43 = *(void *)(v13 - 32 * (*(_DWORD *)(v13 + 20) & 0x7FFFFFF));
        if (!v43) {
          return 0;
        }
        uint64_t v24 = *a1;
        **a1 = v43;
        uint64_t v10 = *(void *)(v13 - 32 * (*(_DWORD *)(v13 + 20) & 0x7FFFFFF) + 32);
        if (!v10) {
          return v10;
        }
      }
      else
      {
        if (v22 != 58) {
          return 0;
        }
        uint64_t v23 = *(void *)(v13 - 64);
        if (!v23) {
          return 0;
        }
        uint64_t v24 = *a1;
        **a1 = v23;
        uint64_t v10 = *(void *)(v13 - 32);
        if (!v10) {
          return v10;
        }
      }
      *a1[1] = v10;
      uint64_t v44 = *(void *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));
      uint64_t v10 = *(void *)(v44 + 8);
      if (!v10) {
        return v10;
      }
      if (*(void *)(v10 + 8)) {
        return 0;
      }
      int v45 = *(unsigned __int8 *)(v44 + 16);
      if (v45 != 57)
      {
        if (v45 == 5)
        {
          if (*(_WORD *)(v44 + 18) == 29
            && ((uint64_t v56 = (void *)(v44 - 32 * (*(_DWORD *)(v44 + 20) & 0x7FFFFFF)),
                 uint64_t v57 = (void *)*v56,
                 uint64_t v58 = (void *)*a1[2],
                 uint64_t v24 = (void *)v56[4],
                 v58 == v57)
             && v24
             || (v57 ? (v59 = v58 == v24) : (v59 = 0), uint64_t v24 = v57, v59)))
          {
            *a1[3] = v24;
            LOBYTE(v24) = 1;
          }
          else
          {
            LOBYTE(v24) = 0;
          }
        }
        return (v45 == 5) & v24;
      }
      uint64_t v31 = *(void *)(v44 - 64);
      uint64_t v46 = *a1[2];
      uint64_t v29 = *(void *)(v44 - 32);
      if (v46 == v31 && v29)
      {
LABEL_130:
        *a1[3] = v29;
        return 1;
      }
      if (!v31 || v46 != v29) {
        return 0;
      }
      goto LABEL_121;
    }
    int v19 = *(unsigned __int8 *)(v11 + 16);
    if (v19 == 5)
    {
      if (*(_WORD *)(v11 + 18) != 30) {
        goto LABEL_15;
      }
      uint64_t v37 = *(void *)(v11 - 32 * (*(_DWORD *)(v11 + 20) & 0x7FFFFFF));
      if (!v37) {
        goto LABEL_15;
      }
      **a1 = v37;
      uint64_t v21 = *(void *)(v11 - 32 * (*(_DWORD *)(v11 + 20) & 0x7FFFFFF) + 32);
      if (!v21) {
        goto LABEL_15;
      }
    }
    else
    {
      if (v19 != 58) {
        goto LABEL_15;
      }
      uint64_t v20 = *(void *)(v11 - 64);
      if (!v20) {
        goto LABEL_15;
      }
      **a1 = v20;
      uint64_t v21 = *(void *)(v11 - 32);
      if (!v21) {
        goto LABEL_15;
      }
    }
    *a1[1] = v21;
    uint64_t v38 = *(void *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF) + 32);
    uint64_t v39 = *(void *)(v38 + 8);
    if (v39 && !*(void *)(v39 + 8))
    {
      int v40 = *(unsigned __int8 *)(v38 + 16);
      if (v40 == 5)
      {
        if (*(_WORD *)(v38 + 18) == 29)
        {
          unsigned int v60 = (uint64_t *)(v38 - 32 * (*(_DWORD *)(v38 + 20) & 0x7FFFFFF));
          uint64_t v61 = *v60;
          uint64_t v62 = *a1[2];
          uint64_t v29 = v60[4];
          if (v62 == v61)
          {
            if (v29) {
              goto LABEL_130;
            }
          }
          BOOL v63 = v61 && v62 == v29;
          uint64_t v29 = v61;
          if (v63) {
            goto LABEL_130;
          }
        }
      }
      else if (v40 == 57)
      {
        uint64_t v29 = *(void *)(v38 - 64);
        uint64_t v41 = *a1[2];
        uint64_t v31 = *(void *)(v38 - 32);
        if (v41 == v29 && v31) {
          goto LABEL_121;
        }
        if (v29) {
          BOOL v42 = v41 == v31;
        }
        else {
          BOOL v42 = 0;
        }
        if (v42) {
          goto LABEL_130;
        }
      }
    }
    goto LABEL_15;
  }
  if (v3 != 58) {
    return 0;
  }
  uint64_t v4 = *(void *)(a2 - 64);
  uint64_t v5 = *(void *)(v4 + 8);
  if (v5 && !*(void *)(v5 + 8))
  {
    int v16 = *(unsigned __int8 *)(v4 + 16);
    if (v16 == 5)
    {
      if (*(_WORD *)(v4 + 18) != 30) {
        goto LABEL_5;
      }
      uint64_t v25 = *(void *)(v4 - 32 * (*(_DWORD *)(v4 + 20) & 0x7FFFFFF));
      if (!v25) {
        goto LABEL_5;
      }
      **a1 = v25;
      uint64_t v18 = *(void *)(v4 - 32 * (*(_DWORD *)(v4 + 20) & 0x7FFFFFF) + 32);
      if (!v18) {
        goto LABEL_5;
      }
    }
    else
    {
      if (v16 != 58) {
        goto LABEL_5;
      }
      uint64_t v17 = *(void *)(v4 - 64);
      if (!v17) {
        goto LABEL_5;
      }
      **a1 = v17;
      uint64_t v18 = *(void *)(v4 - 32);
      if (!v18) {
        goto LABEL_5;
      }
    }
    *a1[1] = v18;
    uint64_t v26 = *(void *)(a2 - 32);
    uint64_t v27 = *(void *)(v26 + 8);
    if (!v27 || *(void *)(v27 + 8)) {
      goto LABEL_5;
    }
    int v28 = *(unsigned __int8 *)(v26 + 16);
    if (v28 == 5)
    {
      if (*(_WORD *)(v26 + 18) == 29)
      {
        BOOL v52 = (uint64_t *)(v26 - 32 * (*(_DWORD *)(v26 + 20) & 0x7FFFFFF));
        uint64_t v53 = *v52;
        uint64_t v54 = *a1[2];
        uint64_t v29 = v52[4];
        if (v54 == v53)
        {
          if (v29) {
            goto LABEL_130;
          }
        }
        BOOL v55 = v53 && v54 == v29;
        uint64_t v29 = v53;
        if (v55) {
          goto LABEL_130;
        }
      }
      goto LABEL_5;
    }
    if (v28 != 57) {
      goto LABEL_5;
    }
    uint64_t v29 = *(void *)(v26 - 64);
    uint64_t v30 = *a1[2];
    uint64_t v31 = *(void *)(v26 - 32);
    if (v30 != v29 || !v31)
    {
      if (v29 && v30 == v31) {
        goto LABEL_130;
      }
      goto LABEL_5;
    }
LABEL_121:
    *a1[3] = v31;
    return 1;
  }
LABEL_5:
  uint64_t v6 = *(void *)(a2 - 32);
  uint64_t v7 = *(void *)(v6 + 8);
  if (!v7 || *(void *)(v7 + 8)) {
    return 0;
  }
  int v8 = *(unsigned __int8 *)(v6 + 16);
  if (v8 != 5)
  {
    if (v8 == 58)
    {
      uint64_t v9 = *(void *)(v6 - 64);
      if (v9)
      {
        **a1 = v9;
        uint64_t v10 = *(void *)(v6 - 32);
        if (!v10) {
          return v10;
        }
        goto LABEL_48;
      }
    }
    return 0;
  }
  if (*(_WORD *)(v6 + 18) != 30) {
    return 0;
  }
  uint64_t v32 = *(void *)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF));
  if (!v32) {
    return 0;
  }
  **a1 = v32;
  uint64_t v10 = *(void *)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF) + 32);
  if (!v10) {
    return v10;
  }
LABEL_48:
  *a1[1] = v10;
  uint64_t v33 = *(void *)(a2 - 64);
  uint64_t v10 = *(void *)(v33 + 8);
  if (!v10) {
    return v10;
  }
  if (*(void *)(v10 + 8)) {
    return 0;
  }
  int v34 = *(unsigned __int8 *)(v33 + 16);
  if (v34 != 57)
  {
    if (v34 == 5)
    {
      if (*(_WORD *)(v33 + 18) == 29)
      {
        char v48 = (uint64_t *)(v33 - 32 * (*(_DWORD *)(v33 + 20) & 0x7FFFFFF));
        uint64_t v49 = *v48;
        uint64_t v50 = *a1[2];
        uint64_t v51 = v48[4];
        if (v50 == v49 && v51 || (v2 = 0, v49) && (BOOL v42 = v50 == v51, v51 = v49, v42))
        {
          *a1[3] = v51;
          char v2 = 1;
        }
      }
      else
      {
        char v2 = 0;
      }
    }
    return (v34 == 5) & v2;
  }
  uint64_t v35 = *(void *)(v33 - 64);
  uint64_t v36 = *a1[2];
  uint64_t v29 = *(void *)(v33 - 32);
  if (v36 == v35 && v29) {
    goto LABEL_130;
  }
  uint64_t v10 = 0;
  if (v35 && v36 == v29)
  {
    *a1[3] = v35;
    return 1;
  }
  return v10;
}

uint64_t sub_1CCA17AF0@<X0>(void **a1@<X0>, uint64_t a2@<X1>, char a3@<W8>)
{
  int v5 = *(unsigned __int8 *)(a2 + 16);
  if (v5 == 56)
  {
    int v6 = sub_1CBF686A0(a1, 30, *(void *)(a2 - 64));
    uint64_t v7 = *(void *)(a2 - 32);
    if (v6 && v7)
    {
      *a1[2] = v7;
      return 1;
    }
    uint64_t result = sub_1CBF686A0(a1, 30, v7);
    if (result)
    {
      uint64_t v11 = *(void *)(a2 - 64);
      if (v11)
      {
        *a1[2] = v11;
        return 1;
      }
      return 0;
    }
  }
  else
  {
    if (v5 == 5)
    {
      if (*(_WORD *)(a2 + 18) == 28
        && ((int v8 = sub_1CBF686A0(a1, 30, *(void *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF))),
             uint64_t v9 = *(void *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF) + 32),
             v8)
         && v9
         || sub_1CBF686A0(a1, 30, v9)
         && (uint64_t v9 = *(void *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF))) != 0))
      {
        *a1[2] = v9;
        a3 = 1;
      }
      else
      {
        a3 = 0;
      }
    }
    return (v5 == 5) & a3;
  }
  return result;
}

uint64_t sub_1CCA17C0C(uint64_t *a1, int a2, uint64_t a3)
{
  int v5 = *(unsigned __int8 *)(a3 + 16);
  LOBYTE(v6) = a2 + 28;
  if (a2 + 28 == v5)
  {
    uint64_t v7 = *(void *)(a3 - 64);
    int v8 = *(unsigned __int8 *)(v7 + 16);
    if (v8 != 5)
    {
      if (v8 != 58) {
        goto LABEL_27;
      }
      uint64_t v9 = *a1;
      if (*a1 != *(void *)(v7 - 64))
      {
LABEL_7:
        if (v9 != *(void *)(v7 - 32) || (sub_1CBF687D0((uint64_t)(a1 + 1), *(llvm::Constant **)(v7 - 64)) & 1) == 0) {
          goto LABEL_27;
        }
        goto LABEL_26;
      }
      if ((sub_1CBF687D0((uint64_t)(a1 + 1), *(llvm::Constant **)(v7 - 32)) & 1) == 0)
      {
        uint64_t v9 = *a1;
        goto LABEL_7;
      }
LABEL_26:
      uint64_t v17 = *(void *)(a3 - 32);
      if (v17)
      {
LABEL_42:
        *(void *)a1[2] = v17;
        return 1;
      }
LABEL_27:
      uint64_t v18 = *(void *)(a3 - 32);
      int v19 = *(unsigned __int8 *)(v18 + 16);
      if (v19 != 5)
      {
        if (v19 != 58) {
          return 0;
        }
        uint64_t v20 = *a1;
        if (*a1 == *(void *)(v18 - 64))
        {
          if (sub_1CBF687D0((uint64_t)(a1 + 1), *(llvm::Constant **)(v18 - 32))) {
            goto LABEL_41;
          }
          uint64_t v20 = *a1;
        }
        if (v20 != *(void *)(v18 - 32) || (sub_1CBF687D0((uint64_t)(a1 + 1), *(llvm::Constant **)(v18 - 64)) & 1) == 0) {
          return 0;
        }
LABEL_41:
        uint64_t v17 = *(void *)(a3 - 64);
        if (v17) {
          goto LABEL_42;
        }
        return 0;
      }
      if (*(_WORD *)(v18 + 18) != 30) {
        return 0;
      }
      uint64_t v21 = *(_DWORD *)(v18 + 20) & 0x7FFFFFF;
      uint64_t v22 = v18 - 32 * v21;
      uint64_t v23 = *a1;
      if (*a1 == *(void *)v22)
      {
        if (sub_1CBF68974((uint64_t)(a1 + 1), *(llvm::Constant **)(v22 + 32))) {
          goto LABEL_41;
        }
        uint64_t v23 = *a1;
        uint64_t v21 = *(_DWORD *)(v18 + 20) & 0x7FFFFFF;
      }
      uint64_t v24 = v18 - 32 * v21;
      if (v23 != *(void *)(v24 + 32)) {
        return 0;
      }
      uint64_t result = sub_1CBF68974((uint64_t)(a1 + 1), *(llvm::Constant **)v24);
      if (!result) {
        return result;
      }
      goto LABEL_41;
    }
    if (*(_WORD *)(v7 + 18) != 30) {
      goto LABEL_27;
    }
    uint64_t v13 = *(_DWORD *)(v7 + 20) & 0x7FFFFFF;
    uint64_t v14 = v7 - 32 * v13;
    uint64_t v15 = *a1;
    if (*a1 == *(void *)v14)
    {
      if (sub_1CBF68974((uint64_t)(a1 + 1), *(llvm::Constant **)(v14 + 32))) {
        goto LABEL_26;
      }
      uint64_t v15 = *a1;
      uint64_t v13 = *(_DWORD *)(v7 + 20) & 0x7FFFFFF;
    }
    uint64_t v16 = v7 - 32 * v13;
    if (v15 != *(void *)(v16 + 32) || !sub_1CBF68974((uint64_t)(a1 + 1), *(llvm::Constant **)v16)) {
      goto LABEL_27;
    }
    goto LABEL_26;
  }
  if (v5 != 5) {
    return (v5 == 5) & v6;
  }
  if (*(unsigned __int16 *)(a3 + 18) != a2) {
    goto LABEL_67;
  }
  uint64_t v10 = *(void *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF));
  int v11 = *(unsigned __int8 *)(v10 + 16);
  if (v11 == 5)
  {
    if (*(_WORD *)(v10 + 18) != 30) {
      goto LABEL_51;
    }
    uint64_t v26 = *(_DWORD *)(v10 + 20) & 0x7FFFFFF;
    uint64_t v27 = v10 - 32 * v26;
    uint64_t v28 = *a1;
    if (*a1 == *(void *)v27)
    {
      if (sub_1CBF68974((uint64_t)(a1 + 1), *(llvm::Constant **)(v27 + 32))) {
        goto LABEL_50;
      }
      uint64_t v28 = *a1;
      uint64_t v26 = *(_DWORD *)(v10 + 20) & 0x7FFFFFF;
    }
    uint64_t v29 = v10 - 32 * v26;
    if (v28 != *(void *)(v29 + 32) || !sub_1CBF68974((uint64_t)(a1 + 1), *(llvm::Constant **)v29)) {
      goto LABEL_51;
    }
    goto LABEL_50;
  }
  if (v11 != 58) {
    goto LABEL_51;
  }
  uint64_t v12 = *a1;
  if (*a1 != *(void *)(v10 - 64))
  {
LABEL_17:
    if (v12 != *(void *)(v10 - 32) || (sub_1CBF687D0((uint64_t)(a1 + 1), *(llvm::Constant **)(v10 - 64)) & 1) == 0) {
      goto LABEL_51;
    }
    goto LABEL_50;
  }
  if ((sub_1CBF687D0((uint64_t)(a1 + 1), *(llvm::Constant **)(v10 - 32)) & 1) == 0)
  {
    uint64_t v12 = *a1;
    goto LABEL_17;
  }
LABEL_50:
  uint64_t v6 = *(void *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF) + 32);
  if (v6)
  {
LABEL_66:
    *(void *)a1[2] = v6;
    LOBYTE(v6) = 1;
    return (v5 == 5) & v6;
  }
LABEL_51:
  uint64_t v30 = *(void *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF) + 32);
  int v31 = *(unsigned __int8 *)(v30 + 16);
  if (v31 != 5)
  {
    if (v31 == 58)
    {
      uint64_t v32 = *a1;
      if (*a1 == *(void *)(v30 - 64))
      {
        if (sub_1CBF687D0((uint64_t)(a1 + 1), *(llvm::Constant **)(v30 - 32))) {
          goto LABEL_65;
        }
        uint64_t v32 = *a1;
      }
      if (v32 != *(void *)(v30 - 32) || (sub_1CBF687D0((uint64_t)(a1 + 1), *(llvm::Constant **)(v30 - 64)) & 1) == 0) {
        goto LABEL_67;
      }
      goto LABEL_65;
    }
LABEL_67:
    LOBYTE(v6) = 0;
    return (v5 == 5) & v6;
  }
  if (*(_WORD *)(v30 + 18) != 30) {
    goto LABEL_67;
  }
  uint64_t v33 = *(_DWORD *)(v30 + 20) & 0x7FFFFFF;
  uint64_t v34 = v30 - 32 * v33;
  uint64_t v35 = *a1;
  if (*a1 == *(void *)v34)
  {
    if (sub_1CBF68974((uint64_t)(a1 + 1), *(llvm::Constant **)(v34 + 32))) {
      goto LABEL_65;
    }
    uint64_t v35 = *a1;
    uint64_t v33 = *(_DWORD *)(v30 + 20) & 0x7FFFFFF;
  }
  uint64_t v36 = v30 - 32 * v33;
  if (v35 != *(void *)(v36 + 32) || !sub_1CBF68974((uint64_t)(a1 + 1), *(llvm::Constant **)v36)) {
    goto LABEL_67;
  }
LABEL_65:
  uint64_t v6 = *(void *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF));
  if (v6) {
    goto LABEL_66;
  }
  return (v5 == 5) & v6;
}

uint64_t sub_1CCA17FF4(uint64_t a1)
{
  if ((*(_DWORD *)(*(void *)(a1 - 32) + 36) - 194) > 5
    || ((1 << (*(unsigned char *)(*(void *)(a1 - 32) + 36) + 62)) & 0x2D) == 0)
  {
    return 0;
  }
  uint64_t v2 = *(void *)(a1 - 32 * (*(_DWORD *)(a1 + 20) & 0x7FFFFFF) + 96);
  uint64_t v3 = *(unsigned int *)(v2 + 32);
  if (v3 > 0x40)
  {
    int v5 = 0;
    int64_t v6 = (unint64_t)(v3 + 63) >> 6;
    do
    {
      if (v6-- < 1) {
        break;
      }
      unint64_t v8 = *(void *)(*(void *)(v2 + 24) + 8 * v6);
      v5 += __clz(v8);
    }
    while (!v8);
    int v9 = v3 | 0xFFFFFFC0;
    if ((v3 & 0x3F) == 0) {
      int v9 = 0;
    }
    BOOL v4 = v5 + v9 == v3;
  }
  else
  {
    BOOL v4 = *(void *)(v2 + 24) == 0;
  }
  int v10 = v4;
  return v10 ^ 1u;
}

uint64_t sub_1CCA18094(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = (void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 40) + 40;
  if (a1 + 24 != v4)
  {
    uint64_t v8 = a1 - 32;
    uint64_t v9 = a1 - 8;
    do
    {
      uint64_t v10 = v3 ? (uint64_t)(v3 - 3) : 0;
      if (*(unsigned char *)(v10 + 16) != 84) {
        break;
      }
      uint64_t v11 = *(void *)(v10 - 32);
      if (!v11
        || *(unsigned char *)(v11 + 16)
        || *(void *)(v11 + 24) != *(void *)(v10 + 72)
        || (*(unsigned char *)(v11 + 33) & 0x20) == 0)
      {
        break;
      }
      if (!sub_1CBF63B28((uint64_t)(v3 - 3))
        && !sub_1CC27D470((uint64_t)(v3 - 3))
        && *(_DWORD *)(*(v3 - 7) + 36) != *(_DWORD *)(*(void *)v8 + 36))
      {
        uint64_t v12 = *(void *)(a3 + 24);
        if (!v12)
        {
          sub_1CB920400();
          return sub_1CCA18294(v25, v26);
        }
        uint64_t result = (*(uint64_t (**)(uint64_t, void *))(*(void *)v12 + 48))(v12, v3 - 3);
        if (!result) {
          return result;
        }
        int v14 = *(unsigned __int8 *)(a1 + 16);
        if (v14 == 84)
        {
          uint64_t v15 = 0;
        }
        else if (v14 == 39)
        {
          uint64_t v15 = (*(_DWORD *)(a1 + 80) + 1);
        }
        else
        {
          uint64_t v15 = 2;
        }
        int v16 = *(_DWORD *)(a1 + 20);
        if (v16 < 0 && (uint64_t v24 = v16 & 0x7FFFFFF, (*(void *)(v9 - 32 * v24) & 0xFFFFFFFF0) != 0))
        {
          uint64_t v18 = -v24;
          uint64_t v17 = (*(_DWORD *)(a1 - 32 * v24 - 12)
                             - *(_DWORD *)(a1 - 32 * v24 - *(void *)(a1 - 32 * v24 - 8)));
        }
        else
        {
          uint64_t v17 = 0;
          uint64_t v18 = -(uint64_t)(v16 & 0x7FFFFFF);
        }
        uint64_t v19 = v8 - 32 * v15 - 32 * v17;
        uint64_t v20 = (void *)(a1 + 32 * v18);
        if (((v19 - (void)v20) & 0x1FFFFFFFE0) == 0) {
LABEL_35:
        }
          sub_1CC9D6844(a2, (uint64_t)(v3 - 3));
        uint64_t v21 = &v3[-4 * (*((_DWORD *)v3 - 1) & 0x7FFFFFF) - 3];
        uint64_t v22 = -(uint64_t)((unint64_t)(v19 - (void)v20) >> 5);
        while (*v20 == *v21)
        {
          v21 += 4;
          v20 += 4;
          if (__CFADD__(v22++, 1)) {
            goto LABEL_35;
          }
        }
      }
      uint64_t v3 = (void *)*v3;
    }
    while (v3 != (void *)v4);
  }
  return 0;
}

#error "1CCA18294: too big function (funcsize=0)"

char *sub_1CCA2DB44(uint64_t a1, llvm::LLVMContext ***a2)
{
  uint64_t v402 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = *(uint64_t **)(a1 + 64);
  if (byte_1EBD04470) {
    int v5 = 59;
  }
  else {
    int v5 = 63;
  }
  sub_1CC095244((uint64_t)a2, v5, v4, &v383);
  if (!(_BYTE)v386
    || ((uint64_t v383 = 0, llvm::getObjectSize((llvm::Value *)a2, &v383, *(void *)(a1 + 80), (uint64_t)v4, 0, 0, v6))
      ? (BOOL v333 = v383 == 0)
      : (BOOL v333 = 1),
        v333))
  {
    uint64_t v7 = 0;
  }
  else
  {
    if (sub_1CBF5BCC4((uint64_t)a2, 39))
    {
      int v334 = sub_1CBF5BCC4((uint64_t)a2, 76);
      unint64_t v335 = llvm::Attribute::getWithDereferenceableBytes(**a2, v383);
    }
    else
    {
      int v334 = sub_1CBF5BCC4((uint64_t)a2, 77);
      unint64_t v335 = llvm::Attribute::getWithDereferenceableOrNullBytes(**a2, v383);
    }
    uint64_t v7 = v334 ^ 1u;
    a2[8] = (llvm::LLVMContext **)llvm::AttributeList::addAttributeAtIndex((llvm::AttributeList *)(a2 + 8), **a2, 0, v335);
  }
  Allocchar Alignment = llvm::getAllocAlignment((uint64_t)a2, v4);
  if (!AllocAlignment || *(unsigned char *)(AllocAlignment + 16) != 16) {
    goto LABEL_7;
  }
  uint64_t v336 = *(unsigned int *)(AllocAlignment + 32);
  if (v336 < 0x41)
  {
    unint64_t v337 = *(void *)(AllocAlignment + 24);
    goto LABEL_626;
  }
  int v339 = 0;
  int64_t v340 = (unint64_t)(v336 + 63) >> 6;
  do
  {
    BOOL v73 = v340-- < 1;
    if (v73) {
      break;
    }
    unint64_t v341 = *(void *)(*(void *)(AllocAlignment + 24) + 8 * v340);
    v339 += __clz(v341);
  }
  while (!v341);
  int v342 = v336 | 0xFFFFFFC0;
  if ((v336 & 0x3F) == 0) {
    int v342 = 0;
  }
  if ((v336 - v339 - v342) < 0x41)
  {
    unint64_t v337 = **(void **)(AllocAlignment + 24);
LABEL_626:
    if (!HIDWORD(v337))
    {
      uint8x8_t v343 = (uint8x8_t)vcnt_s8((int8x8_t)v337);
      v343.i16[0] = vaddlv_u8(v343);
      if (v343.u32[0] == 1)
      {
        unsigned int v344 = (unsigned __int16)sub_1CC63020C((uint64_t)a2);
        unsigned __int8 v345 = v344 <= 0x100 ? 0 : v344;
        unint64_t v346 = 63 - __clz(v337);
        if (v346 > v345)
        {
          uint64_t v7 = 1;
          unint64_t v347 = llvm::Attribute::get((uint64_t *)**a2, 0x4Au, 1 << v346);
          a2[8] = (llvm::LLVMContext **)llvm::AttributeList::addAttributeAtIndex((llvm::AttributeList *)(a2 + 8), **a2, 0, v347);
        }
      }
    }
  }
LABEL_7:
  uint64_t v394 = v396;
  uint64_t v395 = 0x400000000;
  int v10 = *((_DWORD *)a2 + 5);
  uint64_t v11 = v10 & 0x7FFFFFF;
  int v12 = *((unsigned __int8 *)a2 + 16);
  if (v12 == 84)
  {
    uint64_t v13 = 0;
  }
  else if (v12 == 39)
  {
    uint64_t v13 = (*((_DWORD *)a2 + 20) + 1);
  }
  else
  {
    uint64_t v13 = 2;
  }
  int v14 = &a2[-4 * v11];
  if (v10 < 0 && (uint64_t v338 = (uint64_t)*(v14 - 1), (v338 & 0xFFFFFFFF0) != 0)) {
    uint64_t v15 = (*((_DWORD *)v14 - 3) - *(_DWORD *)((char *)v14 - v338));
  }
  else {
    uint64_t v15 = 0;
  }
  if (v14 != &(&a2[-4 * v13])[-4 * v15 - 4])
  {
    int v16 = 0;
    unint64_t v17 = (32 * v13 + 32 * v15) ^ 0xFFFFFFFFFFFFFFE0;
    uint64_t v18 = -32 * v11;
    do
    {
      uint64_t v19 = (uint64_t)a2[(unint64_t)v18 / 8];
      if (*(unsigned char *)(*(void *)v19 + 8) == 15 && (llvm::CallBase::paramHasAttr((uint64_t)a2, v16, 39) & 1) == 0)
      {
        uint64_t v20 = a2;
        if (!a2[5])
        {
          if (*(unsigned __int8 *)(v19 + 16) < 0x1Cu || (uint64_t v20 = (void **)v19, !*(void *)(v19 + 40))) {
            uint64_t v20 = 0;
          }
        }
        uint64_t v21 = *(void *)(a1 + 56);
        uint64_t v22 = *(llvm::LLVMContext **)(a1 + 72);
        uint64_t v383 = *(llvm::LLVMContext **)(a1 + 80);
        uint64_t v384 = v21;
        uint64_t v385 = (uint64_t)v20;
        uint64_t v386 = v22;
        *(void *)&long long v387 = 0;
        BYTE8(v387) = 1;
        if (sub_1CC1620B8(v19, 0, (uint64_t)&v383))
        {
          if (v395 >= (unint64_t)HIDWORD(v395)) {
            llvm::SmallVectorBase<unsigned int>::grow_pod();
          }
          v394[v395] = v16;
          LODWORD(v395) = v395 + 1;
        }
      }
      ++v16;
      v18 += 32;
    }
    while (v17 != v18);
    uint64_t v23 = v395;
    if (v395)
    {
      uint64_t v383 = (llvm::LLVMContext *)a2[8];
      uint64_t v24 = (uint64_t *)**a2;
      int v25 = v394;
      unint64_t v26 = llvm::Attribute::get(v24, 0x27u, 0);
      a2[8] = (llvm::LLVMContext **)llvm::AttributeList::addParamAttribute(&v383, v24, v25, v23, v26);
      uint64_t v7 = 1;
    }
  }
  uint64_t v28 = (llvm::CastInst **)(a2 - 4);
  uint64_t v27 = (uint64_t)*(a2 - 4);
  if (!v27 || *(unsigned char *)(v27 + 16))
  {
    if ((sub_1CCA304D8(a1, (llvm::Value *)a2) & 1) == 0) {
      goto LABEL_57;
    }
    goto LABEL_64;
  }
  if (*(llvm::LLVMContext ***)(v27 + 24) != a2[9] && (sub_1CCA304D8(a1, (llvm::Value *)a2) & 1) != 0) {
    goto LABEL_64;
  }
  uint64_t v29 = a2[8];
  if (v29 && (*((unsigned char *)v29 + 12) & 0x40) != 0
    || llvm::CallBase::hasFnAttrOnCalledFunction((uint64_t)a2, 6))
  {
    uint64_t v30 = *(void *)(v27 + 112);
    if ((!v30 || (*(unsigned char *)(v30 + 12) & 0x40) == 0) && (*(unsigned char *)(v27 + 33) & 0x20) == 0)
    {
      a2[8] = (llvm::LLVMContext **)llvm::AttributeList::removeAttributeAtIndex((uint64_t *)a2 + 8, (uint64_t *)**a2, -1, 6);
      int v31 = (char *)a2;
      goto LABEL_65;
    }
  }
  int v32 = (*(unsigned __int16 *)(v27 + 18) >> 4) & 0x3FF;
  unsigned int v33 = *((unsigned __int16 *)a2 + 9);
  int v34 = (v33 >> 2) & 0x3FF;
  if (v32 != v34)
  {
    if (v32) {
      goto LABEL_50;
    }
    uint64_t v35 = *((void *)a2[5][7] + 5);
    uint64_t v38 = *(void *)(v35 + 216);
    uint64_t v36 = v35 + 216;
    uint64_t v37 = v38;
    char v39 = *(unsigned char *)(v36 + 23);
    if (v39 >= 0) {
      uint64_t v40 = v36;
    }
    else {
      uint64_t v40 = v37;
    }
    uint64_t v41 = *(void *)(v36 + 8);
    if (v39 >= 0) {
      uint64_t v42 = v39 & 0x7F;
    }
    else {
      uint64_t v42 = v41;
    }
    if (!sub_1CC153868(v34, v40, v42, (uint64_t)a2[9]))
    {
      LOWORD(v33) = *((_WORD *)a2 + 9);
LABEL_50:
      if ((v33 & 0xFFC) == 0
        && llvm::TargetLibraryInfoImpl::isCallingConvCCompatible((llvm::TargetLibraryInfoImpl *)v27, v9))
      {
        goto LABEL_57;
      }
      if (*(unsigned char *)(v27 + 16))
      {
        if (*(unsigned char *)(v27 + 16) == 3 && (*(_DWORD *)(v27 + 20) & 0x7FFFFFF) == 0) {
          goto LABEL_57;
        }
      }
      else if (*(void *)(v27 + 72) == v27 + 72 && (*(unsigned char *)(v27 + 34) & 0x80) == 0)
      {
        goto LABEL_57;
      }
      sub_1CD6895C8(a1, (llvm::Instruction *)a2);
      if (*((unsigned char *)*a2 + 8) != 7)
      {
        int v78 = (llvm::Value *)llvm::PoisonValue::get((llvm::PoisonValue *)*a2, v76);
        sub_1CC9D3C84(a1, (llvm::ValueAsMetadata *)a2, v78);
      }
      if (*((unsigned char *)a2 + 16) == 84)
      {
LABEL_130:
        uint64_t v79 = a1;
        uint64_t v80 = (llvm::UndefValue **)a2;
        goto LABEL_131;
      }
      uint64_t v81 = *(llvm::LLVMContext ***)(v27 + 24);
      NullValue = llvm::Constant::getNullValue(*(llvm::Constant **)v27, v76, v77);
      a2[9] = v81;
      if (*(a2 - 4))
      {
        **(a2 - 2) = (llvm::LLVMContext *)*(a2 - 3);
        uint64_t v83 = (uint64_t)*(a2 - 3);
        if (v83) {
          *(void *)(v83 + 16) = *(a2 - 2);
        }
      }
      unsigned int *v28 = NullValue;
      if (NullValue)
      {
        int v86 = (llvm::LLVMContext **)*((void *)NullValue + 1);
        uint64_t v84 = (llvm::CastInst ***)((char *)NullValue + 8);
        int v85 = v86;
        *(a2 - 3) = v86;
        if (v86) {
          v85[2] = (llvm::LLVMContext *)(a2 - 3);
        }
        int v31 = 0;
        *(a2 - 2) = (llvm::LLVMContext **)v84;
        unsigned __int8 *v84 = v28;
        goto LABEL_65;
      }
LABEL_64:
      int v31 = 0;
      goto LABEL_65;
    }
  }
LABEL_57:
  int v43 = *(unsigned __int8 *)(v27 + 16);
  if (v43 == 19)
  {
    uint64_t v44 = a2[5][7];
    if (!v44) {
      goto LABEL_61;
    }
    uint64_t v45 = *((void *)v44 + 14);
    if (!v45 || (*(unsigned char *)(v45 + 17) & 1) == 0) {
      goto LABEL_61;
    }
  }
  else if ((v43 - 11) <= 1)
  {
LABEL_61:
    if (*((unsigned char *)*a2 + 8) != 7)
    {
      uint64_t v46 = (llvm::Value *)llvm::PoisonValue::get((llvm::PoisonValue *)*a2, v9);
      sub_1CC9D3C84(a1, (llvm::ValueAsMetadata *)a2, v46);
    }
    if (*((unsigned __int8 *)a2 + 16) - 29 < 0xB) {
      goto LABEL_64;
    }
    sub_1CD6895C8(a1, (llvm::Instruction *)a2);
    goto LABEL_130;
  }
  char v48 = llvm::Value::stripPointerCasts((llvm::Value *)v27);
  uint64_t v368 = v7;
  if (*((unsigned char *)v48 + 16) != 84) {
    goto LABEL_141;
  }
  uint64_t v49 = v48;
  uint64_t v50 = *((void *)v48 - 4);
  if (!v50
    || *(unsigned char *)(v50 + 16)
    || *(void *)(v50 + 24) != *((void *)v48 + 9)
    || (*(unsigned char *)(v50 + 33) & 0x20) == 0
    || *(_DWORD *)(v50 + 36) != 3)
  {
    goto LABEL_141;
  }
  uint64_t v51 = (llvm::Value *)*((void *)v48 - 4 * (*((_DWORD *)v48 + 5) & 0x7FFFFFF));
  BOOL v52 = llvm::Value::stripPointerCasts(v51);
  if ((v52 == v51 || (uint64_t v53 = *((void *)v52 + 1)) != 0 && !*(void *)(v53 + 8) && *(llvm::Value **)(v53 + 24) == v51)
    && *((unsigned char *)v52 + 16) == 59)
  {
    uint64_t v54 = *((void *)v51 + 1);
    if (v54)
    {
      uint64_t v55 = 0;
      do
      {
        uint64_t v56 = *(void *)(v54 + 24);
        if (*(unsigned char *)(v56 + 16) != 84) {
          goto LABEL_96;
        }
        uint64_t v57 = *(void *)(v56 - 32);
        if (!v57
          || *(unsigned char *)(v57 + 16)
          || *(void *)(v57 + 24) != *(void *)(v56 + 72)
          || (*(unsigned char *)(v57 + 33) & 0x20) == 0)
        {
          goto LABEL_96;
        }
        int v58 = *(_DWORD *)(v57 + 36);
        if (v58 != 3)
        {
          BOOL v59 = v58 == 158 && v55 == 0;
          uint64_t v55 = *(void *)(v54 + 24);
          if (!v59) {
            goto LABEL_96;
          }
        }
        uint64_t v54 = *(void *)(v54 + 8);
      }
      while (v54);
      if (v55 && *(llvm::Value **)(v55 - 32 * (*(_DWORD *)(v55 + 20) & 0x7FFFFFF)) == v51)
      {
        uint64_t v146 = (uint64_t)sub_1CCA32034(a1, (uint64_t)a2, v55);
        goto LABEL_261;
      }
    }
  }
LABEL_96:
  unsigned int v60 = (llvm::Value *)((char *)v49 + 24);
  uint64_t v383 = (llvm::Value *)((char *)v49 + 24);
  uint64_t v61 = *(llvm::LLVMContext **)(*((void *)v49 + 5) + 48);
  if ((llvm::Value *)((char *)v49 + 24) == v61) {
    goto LABEL_141;
  }
  while (1)
  {
    uint64_t v62 = *(llvm::LLVMContext **)v60;
    uint64_t v383 = v62;
    if (v62) {
      uint64_t v63 = (uint64_t)v62 - 24;
    }
    else {
      uint64_t v63 = 0;
    }
    if (sub_1CC82F368(&v383)
      && v383
      && *(_DWORD *)(*((void *)v383 - 7) + 36) == 158
      && *((llvm::Value **)v383 - 4 * (*((_DWORD *)v383 - 1) & 0x7FFFFFF) - 3) == v51)
    {
      int v31 = sub_1CCA32034(a1, (uint64_t)a2, (uint64_t)v383 - 24);
      goto LABEL_65;
    }
    uint64_t v64 = *(unsigned __int8 *)(v63 + 16) - 33;
    if (v64 > 0x37) {
      goto LABEL_108;
    }
    if (((1 << (*(unsigned char *)(v63 + 16) - 33)) & 0x8000000000041) == 0)
    {
      if (v64 == 27)
      {
        if ((*(_WORD *)(v63 + 18) & 0x301) != 0) {
          goto LABEL_141;
        }
      }
      else if (((1 << (*(unsigned char *)(v63 + 16) - 33)) & 0x808001D0000010) != 0)
      {
        goto LABEL_141;
      }
      goto LABEL_108;
    }
    uint64_t v65 = *(void *)(v63 + 64);
    if (v65 && (*(unsigned char *)(v65 + 17) & 0x30) != 0) {
      goto LABEL_108;
    }
    int v66 = *(_DWORD *)(v63 + 20);
    if (v66 < 0)
    {
      uint64_t v67 = v63 - 32 * (v66 & 0x7FFFFFF);
      uint64_t v70 = *(void *)(v67 - 8);
      uint64_t v68 = v67 - 8;
      uint64_t v69 = v70;
      if (v70) {
        break;
      }
    }
LABEL_113:
    if ((llvm::CallBase::hasFnAttrOnCalledFunction(v63, 45) & 1) == 0
      && (llvm::CallBase::hasFnAttrOnCalledFunction(v63, 44) & 1) == 0)
    {
      goto LABEL_141;
    }
LABEL_108:
    unsigned int v60 = v383;
    if (v383 == v61) {
      goto LABEL_141;
    }
  }
  uint64_t v71 = -v69;
  while (1)
  {
    unsigned int v72 = *(_DWORD *)(*(void *)(v68 + v71) + 8);
    BOOL v73 = v72 > 7;
    int v74 = (1 << v72) & 0x83;
    if (v73 || v74 == 0) {
      break;
    }
    v71 += 16;
    if (!v71) {
      goto LABEL_113;
    }
  }
LABEL_141:
  int v87 = *v28;
  if (!*v28) {
    goto LABEL_171;
  }
  if (*((unsigned char *)v87 + 16) != 76) {
    goto LABEL_171;
  }
  if (!llvm::CastInst::isNoopCast(*v28, *(const llvm::DataLayout **)(a1 + 80))) {
    goto LABEL_171;
  }
  uint64_t v88 = *((void *)v87 - 4);
  if (*(unsigned char *)(v88 + 16) != 84) {
    goto LABEL_171;
  }
  uint64_t v89 = *(void *)(v88 - 32);
  if (!v89
    || *(unsigned char *)(v89 + 16)
    || *(void *)(v89 + 24) != *(void *)(v88 + 72)
    || (*(unsigned char *)(v89 + 33) & 0x20) == 0)
  {
    goto LABEL_171;
  }
  uint64_t v383 = (llvm::LLVMContext *)&v385;
  uint64_t v384 = 0x200000000;
  int v90 = *((_DWORD *)a2 + 5);
  if (v90 < 0 && (unint64_t v349 = (unint64_t)a2[-4 * (v90 & 0x7FFFFFF) - 1], (v349 & 0xFFFFFFFF0) != 0))
  {
    uint64_t v92 = 0;
    int v91 = 0;
    uint64_t v365 = (llvm::DataLayout *)(v349 >> 4);
    uint64_t v367 = a2;
    do
    {
      uint64_t v350 = *((_DWORD *)a2 + 5) & 0x7FFFFFF;
      uint64_t v351 = (unsigned int *)((char *)v367 - (char *)&a2[-4 * v350 - 1][4 * v350]);
      uint64_t v352 = *v351;
      unsigned int v353 = (uint64_t *)&(&a2[4 * v352])[-4 * v350];
      uint64_t v354 = v351[1] - v352;
      uint64_t v355 = *((void *)v351 - 1);
      uint64_t v397 = (uint64_t)v353;
      *(void *)&long long v398 = v354;
      *((void *)&v398 + 1) = v355;
      if (*(_DWORD *)(v355 + 8) == 7)
      {
        int v91 = 1;
        uint64_t v92 = v353;
      }
      else
      {
        sub_1CD5C74F0((uint64_t)&v383, (uint64_t)&v397);
      }
      BOOL v59 = v365 == (llvm::DataLayout *)1;
      uint64_t v365 = (llvm::DataLayout *)((char *)v365 - 1);
      v367 += 2;
    }
    while (!v59);
    uint64_t v89 = *(void *)(v88 - 32);
  }
  else
  {
    int v91 = 0;
    uint64_t v92 = 0;
  }
  int v93 = *(_DWORD *)(v89 + 36);
  switch(v93)
  {
    case 246:
      if (v91) {
        break;
      }
      uint64_t v95 = (void *)(v88 - 32 * (*(_DWORD *)(v88 + 20) & 0x7FFFFFF));
LABEL_570:
      uint64_t v397 = v95[4];
      *(void *)&long long v398 = v95[8];
      sub_1CD68B0B4((uint64_t)&v383, (__n128 *)&v397);
      int v94 = (uint64_t *)(v88 - 32 * (*(_DWORD *)(v88 + 20) & 0x7FFFFFF));
      goto LABEL_571;
    case 248:
      if (!v91) {
        break;
      }
      uint64_t v95 = (void *)(v88 - 32 * (*(_DWORD *)(v88 + 20) & 0x7FFFFFF));
      if (v95[12] != *v92 || v95[16] != v92[4]) {
        break;
      }
      goto LABEL_570;
    case 249:
      if (v91)
      {
        int v94 = (uint64_t *)(v88 - 32 * (*(_DWORD *)(v88 + 20) & 0x7FFFFFF));
        if (v94[4] == *v92 && v94[8] == v92[4])
        {
LABEL_571:
          uint64_t v314 = *v94;
          if (*v94)
          {
            uint64_t v315 = *(void *)(a1 + 24);
            uint64_t v316 = *(void *)v87;
            LOWORD(v400) = 257;
            uint64_t v317 = sub_1CC240E88(v315, v314, v316, (uint64_t)&v397);
            if (*((unsigned char *)a2 + 16) == 84) {
              uint64_t v318 = llvm::CallInst::Create((uint64_t)a2, (uint64_t)v383, v384, 0);
            }
            else {
              uint64_t v318 = (uint64_t)llvm::InvokeInst::Create((llvm::Value *)a2, (uint64_t)v383, v384, 0);
            }
            int v31 = (char *)v318;
            uint64_t v319 = (llvm::Instruction **)(v318 - 32);
            if (*(void *)(v318 - 32))
            {
              **(void **)(v318 - 16) = *(void *)(v318 - 24);
              uint64_t v320 = *(void *)(v318 - 24);
              if (v320) {
                *(void *)(v320 + 16) = *(void *)(v318 - 16);
              }
            }
            *uint64_t v319 = v317;
            if (v317)
            {
              uint64_t v323 = *((void *)v317 + 1);
              int v322 = (llvm::Instruction ***)((char *)v317 + 8);
              uint64_t v321 = v323;
              *(void *)(v318 - 24) = v323;
              if (v323) {
                *(void *)(v321 + 16) = v318 - 24;
              }
              *(void *)(v318 - 16) = v322;
              *int v322 = v319;
            }
            goto LABEL_164;
          }
        }
      }
      break;
  }
  int v31 = 0;
LABEL_164:
  uint64_t v96 = v383;
  if (v384)
  {
    uint64_t v97 = 48 * v384;
    uint64_t v98 = (char *)v383 - 48;
    do
    {
      sub_1CD4AF9B4((uint64_t)&v98[v97]);
      v97 -= 48;
    }
    while (v97);
    uint64_t v96 = v383;
  }
  if (v96 != (llvm::LLVMContext *)&v385) {
    free(v96);
  }
  if (v31) {
    goto LABEL_65;
  }
LABEL_171:
  uint64_t v99 = a2[9];
  if (*((_DWORD *)v99 + 2) >= 0x100u)
  {
    int v100 = *((_DWORD *)v99 + 3);
    uint64_t v101 = (v100 - 1);
    int v102 = *((_DWORD *)a2 + 5);
    uint64_t v103 = v102 & 0x7FFFFFF;
    int v104 = &a2[-4 * v103];
    int v105 = *((unsigned __int8 *)a2 + 16);
    if (v105 == 84) {
      uint64_t v106 = 0;
    }
    else {
      uint64_t v106 = v105 == 39 ? (*((_DWORD *)a2 + 20) + 1) : 2;
    }
    int v107 = &v104[4 * v101];
    if (v102 < 0 && (uint64_t v348 = (uint64_t)*(v104 - 1), (v348 & 0xFFFFFFFF0) != 0)) {
      uint64_t v108 = (*((_DWORD *)v104 - 3) - *(_DWORD *)((char *)v104 - v348));
    }
    else {
      uint64_t v108 = 0;
    }
    if (v107 != &(&a2[-4 * v106])[-4 * v108 - 4])
    {
      uint64_t v366 = (uint64_t *)(a2 + 8);
      unint64_t v109 = (32 * v106 + 32 * v108) ^ 0xFFFFFFFFFFFFFFE0;
      uint64_t v110 = 32 * v101 - 32 * v103;
      while (1)
      {
        uint64_t v111 = *(unsigned __int8 **)((char *)a2 + v110);
        unsigned int v112 = v111[16];
        BOOL v113 = v111 && v112 >= 0x1C;
        if (v113 && v112 - 79 >= 0xFFFFFFF3 && v112 == 77)
        {
          int v115 = *(llvm::DataLayout **)(a1 + 80);
          uint64_t v116 = **((void **)v111 - 4);
          if (v116 == *(void *)v111 || *(unsigned char *)(v116 + 8) == 15 && *(unsigned char *)(*(void *)v111 + 8) == 15)
          {
            uint64_t v117 = *v28;
            if ((!*v28
               || *((unsigned char *)v117 + 16)
               || *((llvm::LLVMContext ***)v117 + 3) != a2[9]
               || *((_DWORD *)v117 + 9) != 124)
              && !sub_1CC070820((uint64_t)a2)
              && !sub_1CC64B564((uint64_t)a2))
            {
              uint64_t v364 = v115;
              int v118 = v100 - 1;
              uint64_t v361 = (llvm::Type *)**((void **)v111 - 4);
              if (!*((void *)v361 + 3)
                || (llvm::CallBase::paramHasAttr((uint64_t)a2, v100 - 1, 69) & 1) == 0
                && (llvm::CallBase::paramHasAttr((uint64_t)a2, v100 - 1, 71) & 1) == 0
                && !llvm::CallBase::paramHasAttr((uint64_t)a2, v100 - 1, 72))
              {
LABEL_207:
                sub_1CC9DFE20((void *)a1, (uint64_t *)((char *)a2 + v110), *((void *)v111 - 4));
                uint64_t v130 = **((void **)v111 - 4);
                if (*(void *)(v130 + 24) && llvm::CallBase::paramHasAttr((uint64_t)a2, v118, 69))
                {
                  a2[8] = (llvm::LLVMContext **)llvm::AttributeList::removeAttributeAtIndex(v366, (uint64_t *)**a2, v100, 69);
                  unint64_t v131 = llvm::Attribute::get((uint64_t *)**a2, 69, **(void **)(v130 + 16));
                  LODWORD(v383) = v118;
                  a2[8] = (llvm::LLVMContext **)llvm::AttributeList::addParamAttribute(v366, (uint64_t *)**a2, &v383, 1, v131);
                }
                uint64_t v368 = 1;
                goto LABEL_211;
              }
              if (llvm::CallBase::paramHasAttr((uint64_t)a2, v100 - 1, 69)) {
                break;
              }
            }
          }
        }
LABEL_211:
        ++v100;
        v110 += 32;
        if (v109 == v110) {
          goto LABEL_228;
        }
      }
      uint64_t v362 = (unsigned __int8 *)**((void **)v361 + 2);
      uint64_t v119 = sub_1CD49471C((uint64_t)a2, v100 - 1);
      uint64_t v120 = (uint64_t)v364;
      unsigned int v121 = v362[8];
      uint64_t v360 = (llvm::Type *)v119;
      if (v121 > 0x11) {
        goto LABEL_219;
      }
      uint64_t v122 = v119;
      if (((1 << v121) & 0xAC7F) != 0)
      {
LABEL_203:
        unsigned int v123 = *(unsigned __int8 *)(v122 + 8);
        if (v123 > 0x11) {
          goto LABEL_226;
        }
        if (((1 << v123) & 0xAC7F) != 0)
        {
LABEL_205:
          uint64_t v124 = (llvm::DataLayout *)v120;
          unint64_t v358 = (unint64_t)(sub_1CB83544C(v120, (uint64_t)v362) + 7) >> 3;
          BOOL v357 = v125 == 1;
          char Alignment = llvm::DataLayout::getAlignment(v124, (llvm::Type *)v362, 1);
          char v363 = (llvm::Type *)(((1 << Alignment) + v358 - 1) & -(1 << Alignment));
          uint64_t v127 = sub_1CB83544C((uint64_t)v124, (uint64_t)v360);
          BOOL v356 = v128 == 1;
          unint64_t v359 = (unint64_t)(v127 + 7) >> 3;
          char v129 = llvm::DataLayout::getAlignment(v364, v360, 1);
          if (v363 == (llvm::Type *)(((1 << v129) + v359 - 1) & -(1 << v129)))
          {
            int v118 = v100 - 1;
            if ((v357 ^ v356 ^ 1)) {
              goto LABEL_207;
            }
          }
          goto LABEL_211;
        }
        uint64_t v122 = (uint64_t)v360;
        if (((1 << v123) & 0x30000) == 0)
        {
LABEL_226:
          if ((v123 & 0xFE) != 0x12 && v123 != 21) {
            goto LABEL_211;
          }
        }
        int isSizedDerivedType = llvm::Type::isSizedDerivedType(v122, 0);
        uint64_t v120 = (uint64_t)v364;
        if (!isSizedDerivedType) {
          goto LABEL_211;
        }
        goto LABEL_205;
      }
      if (((1 << v121) & 0x30000) == 0)
      {
LABEL_219:
        if ((v121 & 0xFE) != 0x12 && v121 != 21) {
          goto LABEL_211;
        }
      }
      int v132 = llvm::Type::isSizedDerivedType((uint64_t)v362, 0);
      uint64_t v120 = (uint64_t)v364;
      uint64_t v122 = (uint64_t)v360;
      if (!v132) {
        goto LABEL_211;
      }
      goto LABEL_203;
    }
  }
LABEL_228:
  if (*(unsigned char *)(v27 + 16) == 24)
  {
    uint64_t v135 = a2[8];
    uint64_t v136 = v368;
    if ((!v135 || ((_BYTE)v135[2] & 0x20) == 0)
      && (llvm::CallBase::hasFnAttrOnCalledFunction((uint64_t)a2, 37) & 1) == 0
      && !*(unsigned char *)(v27 + 88))
    {
      a2[8] = (llvm::LLVMContext **)llvm::AttributeList::addAttributeAtIndex((uint64_t *)a2 + 8, (uint64_t *)**a2, -1, 37);
      uint64_t v136 = 1;
    }
  }
  else
  {
    uint64_t v136 = v368;
  }
  if (*((unsigned char *)a2 + 16) == 84)
  {
    int v137 = *v28;
    if (*v28)
    {
      if (!*((unsigned char *)v137 + 16) && *((llvm::LLVMContext ***)v137 + 3) == a2[9] && (*((_WORD *)a2 + 9) & 2) == 0)
      {
        uint64_t v397 = a1;
        uint64_t v379 = (uint64_t *)a1;
        uint64_t v138 = *(void *)(a1 + 80);
        uint64_t v139 = *(void *)(a1 + 152);
        uint64_t v383 = *(llvm::LLVMContext **)(a1 + 64);
        LOBYTE(v384) = 0;
        uint64_t v385 = v138;
        uint64_t v386 = v383;
        long long v387 = *(_OWORD *)(a1 + 136);
        uint64_t v388 = v139;
        char v389 = 0;
        int v390 = sub_1CCA38D54;
        uint64_t v391 = &v397;
        uint64_t v392 = sub_1CCA38D5C;
        uint64_t v393 = &v379;
        uint64_t v140 = llvm::LibCallSimplifier::optimizeCall((llvm::LibCallSimplifier *)&v383, (llvm::CallInst *)a2, *(llvm::IRBuilderBase **)(a1 + 24));
        if (v140)
        {
          if (a2[1])
          {
            uint64_t v80 = sub_1CC9D3C84(a1, (llvm::ValueAsMetadata *)a2, v140);
            if (!v80) {
              goto LABEL_242;
            }
          }
          else
          {
            uint64_t v80 = (llvm::UndefValue **)a2;
          }
          uint64_t v79 = a1;
LABEL_131:
          sub_1CC9D6844(v79, (uint64_t)v80);
        }
      }
    }
  }
LABEL_242:
  if (!a2[1] || *((unsigned char *)a2 + 16) == 84 && (*((_WORD *)a2 + 9) & 3) == 2) {
    goto LABEL_252;
  }
  int v141 = a2[8];
  if (!v141 || (*((unsigned char *)v141 + 29) & 0x40) == 0)
  {
    uint64_t v142 = *v28;
    if (!*v28) {
      goto LABEL_252;
    }
    if (*((unsigned char *)v142 + 16)) {
      goto LABEL_252;
    }
    if (*((llvm::LLVMContext ***)v142 + 3) != a2[9]) {
      goto LABEL_252;
    }
    uint64_t v143 = *((void *)v142 + 14);
    if (!v143 || (*(unsigned char *)(v143 + 29) & 0x40) == 0) {
      goto LABEL_252;
    }
    uint64_t v327 = *(unsigned int *)(v143 + 8);
    if (v327)
    {
      uint64_t v328 = v143 + 40;
      int v326 = -1;
      while (!*(void *)v328 || (*(unsigned char *)(*(void *)v328 + 17) & 0x40) == 0)
      {
        ++v326;
        v328 += 8;
        if (!--v327) {
          goto LABEL_599;
        }
      }
      goto LABEL_600;
    }
LABEL_599:
    int v326 = 0;
    goto LABEL_600;
  }
  uint64_t v324 = *((unsigned int *)v141 + 2);
  if (!v324) {
    goto LABEL_599;
  }
  uint64_t v325 = v141 + 5;
  int v326 = -1;
  while (!*v325 || (*(unsigned char *)(*v325 + 17) & 0x40) == 0)
  {
    ++v326;
    ++v325;
    if (!--v324) {
      goto LABEL_599;
    }
  }
LABEL_600:
  unsigned int v329 = (&a2[4 * (v326 - 1)])[-4 * (*((_DWORD *)a2 + 5) & 0x7FFFFFF)];
  if (v329)
  {
    uint64_t v330 = *a2;
    if (llvm::Type::canLosslesslyBitCastTo(*v329, (llvm::Type *)*a2))
    {
      uint64_t v331 = *(void *)(a1 + 24);
      LOWORD(v387) = 257;
      int v332 = sub_1CC240E88(v331, (uint64_t)v329, (uint64_t)v330, (uint64_t)&v383);
      uint64_t v146 = (uint64_t)sub_1CC9D3C84(a1, (llvm::ValueAsMetadata *)a2, v332);
      goto LABEL_261;
    }
  }
LABEL_252:
  if (byte_1EBD04470) {
    int v144 = 59;
  }
  else {
    int v144 = 63;
  }
  sub_1CC095244((uint64_t)a2, v144, *(uint64_t **)(a1 + 64), &v383);
  if ((_BYTE)v386)
  {
    int v145 = byte_1EBD04470 ? 43 : 47;
    sub_1CC095244((uint64_t)a2, v145, *(uint64_t **)(a1 + 64), &v383);
    if ((_BYTE)v386)
    {
      uint64_t v146 = sub_1CC9DDA74((uint64_t *)a1, (uint64_t)a2);
LABEL_261:
      int v31 = (char *)v146;
      goto LABEL_65;
    }
  }
  uint64_t v147 = *v28;
  if (!*v28 || *((unsigned char *)v147 + 16) || *((llvm::LLVMContext ***)v147 + 3) != a2[9] || *((_DWORD *)v147 + 9) != 124) {
    goto LABEL_408;
  }
  uint64_t v383 = (llvm::LLVMContext *)&v387;
  uint64_t v384 = (uint64_t)&v387;
  uint64_t v385 = 32;
  LODWORD(v386) = 0;
  sub_1CCA32FA0((uint64_t)a2, &v379);
  uint64_t v148 = (llvm::GCRelocateInst **)v379;
  char v149 = v380;
  if (v379 != v380)
  {
    while (1)
    {
      uint64_t v223 = (uint64_t)*v148;
      if (!*((void *)*v148 + 1)) {
        goto LABEL_397;
      }
      uint64_t DerivedPtr = llvm::GCRelocateInst::getDerivedPtr(*v148);
      uint64_t BasePtr = llvm::GCRelocateInst::getBasePtr((llvm::GCRelocateInst *)v223);
      int v153 = *(unsigned __int8 *)(DerivedPtr + 16);
      if ((v153 - 11) < 2 || (uint64_t v154 = BasePtr, *(unsigned __int8 *)(BasePtr + 16) - 11 <= 1))
      {
        int v155 = llvm::UndefValue::get(*(llvm::UndefValue **)v223, v152);
        sub_1CC9D3C84(a1, (llvm::ValueAsMetadata *)v223, v155);
LABEL_397:
        sub_1CC9D6844(a1, v223);
      }
      uint64_t v369 = v136;
      if (*(void *)v223 && *(unsigned char *)(*(void *)v223 + 8) == 15)
      {
        if (v153 == 19)
        {
          unint64_t v157 = (llvm::Value *)llvm::ConstantPointerNull::get(*(llvm::ConstantPointerNull **)v223, v152);
          sub_1CC9D3C84(a1, (llvm::ValueAsMetadata *)v223, v157);
          sub_1CC9D6844(a1, v223);
        }
        if ((sub_1CBF5BCC4(v223, 39) & 1) == 0)
        {
          uint64_t v158 = a2;
          if (!a2[5])
          {
            if (*(unsigned __int8 *)(DerivedPtr + 16) < 0x1Cu
              || (uint64_t v158 = (llvm::LLVMContext ***)DerivedPtr, !*(void *)(DerivedPtr + 40)))
            {
              uint64_t v158 = 0;
            }
          }
          uint64_t v159 = *(void *)(a1 + 56);
          int v160 = *(char **)(a1 + 72);
          uint64_t v397 = *(void *)(a1 + 80);
          *(void *)&long long v398 = v159;
          *((void *)&v398 + 1) = v158;
          v399 = v160;
          uint64_t v400 = 0;
          LOBYTE(v401) = 1;
          if (sub_1CC1620B8(DerivedPtr, 0, (uint64_t)&v397))
          {
            *(void *)(v223 + 64) = llvm::AttributeList::addAttributeAtIndex((uint64_t *)(v223 + 64), **(uint64_t ***)v223, 0, 39);
            uint64_t v161 = *(void *)(v223 + 8);
            if (v161) {
              break;
            }
          }
        }
      }
LABEL_282:
      uint64_t v162 = llvm::GCRelocateInst::getBasePtr((llvm::GCRelocateInst *)v223);
      uint64_t v136 = v369;
      if (v162 == llvm::GCRelocateInst::getDerivedPtr((llvm::GCRelocateInst *)v223))
      {
        uint64_t v163 = v223 - 32 * (*(_DWORD *)(v223 + 20) & 0x7FFFFFF);
        uint64_t v164 = *(void *)(v163 + 32);
        unint64_t v165 = (unsigned int *)(v164 + 24);
        unsigned int v166 = *(_DWORD *)(v164 + 32);
        unint64_t v167 = v165;
        if (v166 >= 0x41) {
          unint64_t v167 = *(_DWORD **)v165;
        }
        uint64_t v168 = *(void *)(v163 + 64);
        int v169 = (void *)(v168 + 24);
        if (*(_DWORD *)(v168 + 32) >= 0x41u) {
          int v169 = (void *)*v169;
        }
        if (*v167 != *(_DWORD *)v169)
        {
          if (v166 >= 0x41) {
            unint64_t v165 = *(unsigned int **)v165;
          }
          int64_t v170 = llvm::ConstantInt::get(*(llvm::ConstantInt **)v168, *v165, 0);
          uint64_t v171 = v223 - 32 * (*(_DWORD *)(v223 + 20) & 0x7FFFFFF);
          uint64_t v172 = (void *)(v171 + 64);
          if (*(void *)(v171 + 64))
          {
            **(void **)(v171 + 80) = *(void *)(v171 + 72);
            uint64_t v173 = *(void *)(v171 + 72);
            if (v173) {
              *(void *)(v173 + 16) = *(void *)(v171 + 80);
            }
          }
          void *v172 = v170;
          if (v170)
          {
            uint64_t v176 = v170[1];
            unint64_t v174 = v170 + 1;
            uint64_t v175 = v176;
            *(void *)(v171 + 72) = v176;
            if (v176) {
              *(void *)(v175 + 16) = v171 + 72;
            }
            *(void *)(v171 + 80) = v174;
            *unint64_t v174 = v172;
          }
        }
      }
      uint64_t v177 = v384;
      uint64_t v178 = HIDWORD(v385);
      if ((llvm::LLVMContext *)v384 != v383)
      {
        unsigned int v182 = v385;
LABEL_308:
        if (3 * v182 <= 4 * (HIDWORD(v385) - (int)v386))
        {
          if (v182 >= 0x40) {
            v182 *= 2;
          }
          else {
            unsigned int v182 = 128;
          }
        }
        else if (v182 - HIDWORD(v385) >= v182 >> 3)
        {
          goto LABEL_310;
        }
        llvm::SmallPtrSetImplBase::Grow((llvm::SmallPtrSetImplBase *)&v383, v182);
        unsigned int v182 = v385;
        uint64_t v177 = v384;
LABEL_310:
        unsigned int v183 = v182 - 1;
        unsigned int v184 = (v182 - 1) & ((v154 >> 4) ^ (v154 >> 9));
        int v185 = (uint64_t *)(v177 + 8 * v184);
        uint64_t v186 = *v185;
        if (*v185 == -1)
        {
          uint64_t v187 = 0;
LABEL_322:
          if (v187) {
            uint64_t v191 = v187;
          }
          else {
            uint64_t v191 = v185;
          }
          if (*v191 != v154)
          {
            if (*v191 == -2) {
              LODWORD(v386) = v386 - 1;
            }
            else {
              ++HIDWORD(v385);
            }
            *uint64_t v191 = v154;
          }
        }
        else
        {
          uint64_t v187 = 0;
          int v188 = 1;
          while (v186 != v154)
          {
            if (v187) {
              BOOL v189 = 0;
            }
            else {
              BOOL v189 = v186 == -2;
            }
            if (v189) {
              uint64_t v187 = v185;
            }
            unsigned int v190 = v184 + v188++;
            unsigned int v184 = v190 & v183;
            int v185 = (uint64_t *)(v177 + 8 * (v190 & v183));
            uint64_t v186 = *v185;
            if (*v185 == -1) {
              goto LABEL_322;
            }
          }
        }
        goto LABEL_329;
      }
      if (HIDWORD(v385))
      {
        uint64_t v179 = 0;
        uint64_t v180 = 8 * HIDWORD(v385);
        uint64_t v181 = (uint64_t *)v384;
        while (*v181 != v154)
        {
          if (*v181 == -2) {
            uint64_t v179 = v181;
          }
          ++v181;
          v180 -= 8;
          if (!v180)
          {
            if (!v179) {
              goto LABEL_305;
            }
            *uint64_t v179 = v154;
            LODWORD(v386) = v386 - 1;
            goto LABEL_329;
          }
        }
        goto LABEL_329;
      }
LABEL_305:
      unsigned int v182 = v385;
      if (HIDWORD(v385) >= v385) {
        goto LABEL_308;
      }
      ++HIDWORD(v385);
      *(void *)(v384 + 8 * v178) = v154;
LABEL_329:
      uint64_t v192 = v384;
      unsigned int v193 = v385;
      uint64_t v194 = HIDWORD(v385);
      if ((llvm::LLVMContext *)v384 != v383) {
        goto LABEL_339;
      }
      if (HIDWORD(v385))
      {
        int v195 = 0;
        uint64_t v196 = 8 * HIDWORD(v385);
        unsigned int v197 = (uint64_t *)v384;
        while (*v197 != DerivedPtr)
        {
          if (*v197 == -2) {
            int v195 = v197;
          }
          ++v197;
          v196 -= 8;
          if (!v196)
          {
            if (!v195) {
              goto LABEL_337;
            }
            *int v195 = DerivedPtr;
            LODWORD(v386) = v386 - 1;
            goto LABEL_398;
          }
        }
        goto LABEL_398;
      }
LABEL_337:
      if (v385 <= HIDWORD(v385))
      {
LABEL_339:
        if (3 * (int)v385 <= (4 * (HIDWORD(v385) - v386)))
        {
          if (v385 >= 0x40) {
            unsigned int v193 = 2 * v385;
          }
          else {
            unsigned int v193 = 128;
          }
        }
        else if ((int)v385 - HIDWORD(v385) >= v385 >> 3)
        {
          goto LABEL_341;
        }
        llvm::SmallPtrSetImplBase::Grow((llvm::SmallPtrSetImplBase *)&v383, v193);
        unsigned int v193 = v385;
        uint64_t v192 = v384;
LABEL_341:
        unsigned int v198 = v193 - 1;
        unsigned int v199 = (v193 - 1) & ((DerivedPtr >> 4) ^ (DerivedPtr >> 9));
        uint64_t v200 = (uint64_t *)(v192 + 8 * v199);
        uint64_t v201 = *v200;
        if (*v200 == -1)
        {
          uint64_t v202 = 0;
LABEL_353:
          if (v202) {
            int v206 = v202;
          }
          else {
            int v206 = v200;
          }
          if (*v206 != DerivedPtr)
          {
            if (*v206 == -2) {
              LODWORD(v386) = v386 - 1;
            }
            else {
              ++HIDWORD(v385);
            }
            uint64_t *v206 = DerivedPtr;
          }
        }
        else
        {
          uint64_t v202 = 0;
          int v203 = 1;
          while (v201 != DerivedPtr)
          {
            if (v202) {
              BOOL v204 = 0;
            }
            else {
              BOOL v204 = v201 == -2;
            }
            if (v204) {
              uint64_t v202 = v200;
            }
            unsigned int v205 = v199 + v203++;
            unsigned int v199 = v205 & v198;
            uint64_t v200 = (uint64_t *)(v192 + 8 * (v205 & v198));
            uint64_t v201 = *v200;
            if (*v200 == -1) {
              goto LABEL_353;
            }
          }
        }
        goto LABEL_398;
      }
      ++HIDWORD(v385);
      *(void *)(v384 + 8 * v194) = DerivedPtr;
LABEL_398:
      if (++v148 == (llvm::GCRelocateInst **)v149)
      {
        uint64_t v148 = (llvm::GCRelocateInst **)v379;
        goto LABEL_400;
      }
    }
    uint64_t v207 = *(void *)(a1 + 32);
    while (1)
    {
      char v208 = *(uint64_t **)(v161 + 24);
      int v209 = *(_DWORD *)(v207 + 8);
      uint64_t v397 = (uint64_t)v208;
      LODWORD(v398) = v209;
      int v210 = *(_DWORD *)(v207 + 2080);
      if (!v210) {
        break;
      }
      uint64_t v211 = *(void *)(v207 + 2064);
      int v212 = v210 - 1;
      unsigned int v213 = v212 & ((v208 >> 4) ^ (v208 >> 9));
      uint64_t v214 = (uint64_t **)(v211 + 16 * v213);
      uint64_t v215 = *v214;
      if (*v214 != v208)
      {
        uint64_t v216 = 0;
        int v217 = 1;
        while (v215 != (uint64_t *)-4096)
        {
          if (v216) {
            BOOL v218 = 0;
          }
          else {
            BOOL v218 = v215 == (uint64_t *)-8192;
          }
          if (v218) {
            uint64_t v216 = v214;
          }
          unsigned int v219 = v213 + v217++;
          unsigned int v213 = v219 & v212;
          uint64_t v214 = (uint64_t **)(v211 + 16 * v213);
          uint64_t v215 = *v214;
          if (*v214 == v208) {
            goto LABEL_377;
          }
        }
        if (v216) {
          uint64_t v220 = v216;
        }
        else {
          uint64_t v220 = v214;
        }
        goto LABEL_375;
      }
LABEL_377:
      uint64_t v161 = *(void *)(v161 + 8);
      if (!v161) {
        goto LABEL_282;
      }
    }
    uint64_t v220 = 0;
LABEL_375:
    uint64_t v221 = sub_1CBF569E0((_DWORD *)(v207 + 2064), (uint64_t)&v397, &v397, v220);
    void *v221 = v397;
    *((_DWORD *)v221 + 2) = v398;
    unint64_t v222 = *(unsigned int *)(v207 + 8);
    if (v222 >= *(unsigned int *)(v207 + 12)) {
      llvm::SmallVectorBase<unsigned int>::grow_pod();
    }
    *(void *)(*(void *)v207 + 8 * v222) = v208;
    ++*(_DWORD *)(v207 + 8);
    goto LABEL_377;
  }
LABEL_400:
  if (v148)
  {
    unsigned int v380 = (uint64_t *)v148;
    operator delete(v148);
  }
  sub_1CC233A58((char *)a2, 5, (uint64_t *)&v379);
  if (!v381 || (int v224 = HIDWORD(v385) - v386, v380 == (uint64_t *)(HIDWORD(v385) - v386)))
  {
    int v31 = 0;
    int v225 = 1;
    goto LABEL_405;
  }
  char v370 = v136;
  uint64_t v226 = 0;
  uint64_t v227 = 0;
  v377[0] = 0;
  v377[1] = 0;
  int v378 = 0;
  uint64_t v228 = v380;
  if (v380)
  {
    uint64_t v268 = 0;
    uint64_t v227 = 0;
    uint64_t v226 = 0;
    BOOL v269 = 0;
    do
    {
      uint64_t v397 = 0;
      uint64_t v270 = (uint64_t *)v379[4 * v268];
      uint64_t v397 = (uint64_t)v270;
      if (v378)
      {
        unsigned int v271 = ((v270 >> 4) ^ (v270 >> 9)) & (v378 - 1);
        BOOL v272 = *(uint64_t **)(v377[0] + 16 * v271);
        if (v270 == v272) {
          goto LABEL_464;
        }
        int v273 = 1;
        while (v272 != (uint64_t *)-4096)
        {
          unsigned int v274 = v271 + v273++;
          unsigned int v271 = v274 & (v378 - 1);
          BOOL v272 = *(uint64_t **)(v377[0] + 16 * v271);
          if (v270 == v272) {
            goto LABEL_464;
          }
        }
      }
      BOOL v275 = v383;
      if ((llvm::LLVMContext *)v384 == v383)
      {
        unsigned int v276 = HIDWORD(v385);
        uint64_t v277 = (char *)(v384 + 8 * HIDWORD(v385));
        if (HIDWORD(v385))
        {
          uint64_t v278 = 0;
          while (*(uint64_t **)(v384 + v278) != v270)
          {
            v278 += 8;
            if (8 * HIDWORD(v385) == v278) {
              goto LABEL_489;
            }
          }
          uint64_t v277 = (char *)(v384 + v278);
        }
LABEL_489:
        BOOL v275 = (llvm::LLVMContext *)v384;
      }
      else
      {
        int v279 = v385 - 1;
        unsigned int v280 = (v385 - 1) & ((v270 >> 4) ^ (v270 >> 9));
        uint64_t v277 = (char *)(v384 + 8 * v280);
        uint64_t v281 = *(uint64_t **)v277;
        if (*(void *)v277 == -1)
        {
          uint64_t v282 = 0;
LABEL_545:
          if (v282) {
            uint64_t v277 = v282;
          }
          unsigned int v276 = HIDWORD(v385);
          if (*(uint64_t **)v277 != v270) {
            uint64_t v277 = (char *)(v384 + 8 * v385);
          }
        }
        else
        {
          uint64_t v282 = 0;
          int v283 = 1;
          while (v281 != v270)
          {
            if (v282) {
              BOOL v284 = 0;
            }
            else {
              BOOL v284 = v281 == (uint64_t *)-2;
            }
            if (v284) {
              uint64_t v282 = v277;
            }
            unsigned int v285 = v280 + v283++;
            unsigned int v280 = v285 & v279;
            uint64_t v277 = (char *)(v384 + 8 * (v285 & v279));
            uint64_t v281 = *(uint64_t **)v277;
            if (*(void *)v277 == -1) {
              goto LABEL_545;
            }
          }
          unsigned int v276 = HIDWORD(v385);
        }
      }
      if ((llvm::LLVMContext *)v384 == v275) {
        unsigned int v286 = v276;
      }
      else {
        unsigned int v286 = v385;
      }
      if (v277 == (char *)(v384 + 8 * v286))
      {
        if (v378)
        {
          unsigned int v296 = ((v270 >> 4) ^ (v270 >> 9)) & (v378 - 1);
          unsigned int v297 = (uint64_t *)(v377[0] + 16 * v296);
          uint64_t v298 = *v297;
          if (v270 != (uint64_t *)*v297)
          {
            uint64_t v299 = 0;
            int v300 = 1;
            while (v298 != -4096)
            {
              if (v299) {
                BOOL v301 = 0;
              }
              else {
                BOOL v301 = v298 == -8192;
              }
              if (v301) {
                uint64_t v299 = v297;
              }
              unsigned int v302 = v296 + v300++;
              unsigned int v296 = v302 & (v378 - 1);
              unsigned int v297 = (uint64_t *)(v377[0] + 16 * v296);
              uint64_t v298 = *v297;
              if (v270 == (uint64_t *)*v297) {
                goto LABEL_535;
              }
            }
            if (v299) {
              uint64_t v307 = v299;
            }
            else {
              uint64_t v307 = v297;
            }
LABEL_534:
            unsigned int v297 = sub_1CBFFD5B4((uint64_t)v377, (uint64_t)&v397, &v397, v307);
            *unsigned int v297 = v397;
            *((_DWORD *)v297 + 2) = 0;
          }
LABEL_535:
          *((_DWORD *)v297 + 2) = v224;
          goto LABEL_464;
        }
        uint64_t v307 = 0;
        goto LABEL_534;
      }
      if (v378)
      {
        unsigned int v287 = ((v270 >> 4) ^ (v270 >> 9)) & (v378 - 1);
        uint64_t v288 = (uint64_t *)(v377[0] + 16 * v287);
        uint64_t v289 = *v288;
        if (v270 == (uint64_t *)*v288) {
          goto LABEL_509;
        }
        unsigned int v290 = 0;
        int v291 = 1;
        while (v289 != -4096)
        {
          if (v290) {
            BOOL v292 = 0;
          }
          else {
            BOOL v292 = v289 == -8192;
          }
          if (v292) {
            unsigned int v290 = v288;
          }
          unsigned int v293 = v287 + v291++;
          unsigned int v287 = v293 & (v378 - 1);
          uint64_t v288 = (uint64_t *)(v377[0] + 16 * v287);
          uint64_t v289 = *v288;
          if (v270 == (uint64_t *)*v288) {
            goto LABEL_509;
          }
        }
        if (v290) {
          uint64_t v294 = v290;
        }
        else {
          uint64_t v294 = v288;
        }
      }
      else
      {
        uint64_t v294 = 0;
      }
      uint64_t v288 = sub_1CBFFD5B4((uint64_t)v377, (uint64_t)&v397, &v397, v294);
      *uint64_t v288 = v397;
      *((_DWORD *)v288 + 2) = 0;
LABEL_509:
      uint64_t v295 = (char *)v226 - (char *)v227;
      *((_DWORD *)v288 + 2) = (unint64_t)((char *)v226 - (char *)v227) >> 3;
      if (v226 >= v269)
      {
        uint64_t v303 = v295 >> 3;
        unint64_t v304 = (v295 >> 3) + 1;
        if (v304 >> 61) {
          goto LABEL_586;
        }
        if (((char *)v269 - (char *)v227) >> 2 > v304) {
          unint64_t v304 = ((char *)v269 - (char *)v227) >> 2;
        }
        if ((unint64_t)((char *)v269 - (char *)v227) >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v305 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v305 = v304;
        }
        if (v305)
        {
          if (v305 >> 61) {
            sub_1CB833614();
          }
          int v306 = (char *)operator new(8 * v305);
        }
        else
        {
          int v306 = 0;
        }
        unsigned int v308 = (uint64_t *)&v306[8 * v303];
        uint64_t *v308 = v397;
        uint64_t v309 = v308 + 1;
        while (v226 != v227)
        {
          uint64_t v310 = *--v226;
          *--unsigned int v308 = v310;
        }
        BOOL v269 = (uint64_t *)&v306[8 * v305];
        if (v227) {
          operator delete(v227);
        }
        uint64_t v226 = v309;
        uint64_t v227 = v308;
      }
      else
      {
        *v226++ = v397;
      }
LABEL_464:
      ++v268;
    }
    while (v268 != v228);
  }
  sub_1CCA32FA0((uint64_t)a2, (uint64_t **)&v397);
  uint64_t v229 = (uint64_t *)v397;
  int v230 = (uint64_t *)v398;
  if (v397 == (void)v398) {
    goto LABEL_551;
  }
  do
  {
    uint64_t v231 = (llvm::GCRelocateInst *)*v229;
    uint64_t v376 = 0;
    uint64_t v232 = llvm::GCRelocateInst::getBasePtr(v231);
    uint64_t v376 = v232;
    uint64_t v233 = (llvm::ConstantInt *)*((void **)v231 - 4 * (*((_DWORD *)v231 + 5) & 0x7FFFFFF))[4];
    if (!v378)
    {
      uint64_t v242 = 0;
LABEL_427:
      uint64_t v236 = sub_1CBFFD5B4((uint64_t)v377, (uint64_t)&v376, &v376, v242);
      uint64_t *v236 = v376;
      *((_DWORD *)v236 + 2) = 0;
      goto LABEL_428;
    }
    int v234 = v378 - 1;
    unsigned int v235 = (v378 - 1) & ((v232 >> 4) ^ (v232 >> 9));
    uint64_t v236 = (uint64_t *)(v377[0] + 16 * v235);
    uint64_t v237 = *v236;
    if (v232 != *v236)
    {
      uint64_t v238 = 0;
      int v239 = 1;
      while (v237 != -4096)
      {
        if (v238) {
          BOOL v240 = 0;
        }
        else {
          BOOL v240 = v237 == -8192;
        }
        if (v240) {
          uint64_t v238 = v236;
        }
        unsigned int v241 = v235 + v239++;
        unsigned int v235 = v241 & v234;
        uint64_t v236 = (uint64_t *)(v377[0] + 16 * (v241 & v234));
        uint64_t v237 = *v236;
        if (v232 == *v236) {
          goto LABEL_428;
        }
      }
      if (v238) {
        uint64_t v242 = v238;
      }
      else {
        uint64_t v242 = v236;
      }
      goto LABEL_427;
    }
LABEL_428:
    unsigned int v243 = llvm::ConstantInt::get(v233, *((unsigned int *)v236 + 2), 0);
    int v244 = (_DWORD *)((char *)v231 - 32 * (*((_DWORD *)v231 + 5) & 0x7FFFFFF));
    int v245 = v244 + 8;
    if (*((void *)v244 + 4))
    {
      **((void **)v244 + 6) = *((void *)v244 + 5);
      uint64_t v246 = *((void *)v244 + 5);
      if (v246) {
        *(void *)(v246 + 16) = *((void *)v244 + 6);
      }
    }
    *int v245 = v243;
    if (v243)
    {
      uint64_t v249 = v243[1];
      unsigned int v247 = v243 + 1;
      uint64_t v248 = v249;
      *((void *)v244 + 5) = v249;
      if (v249) {
        *(void *)(v248 + 16) = v244 + 10;
      }
      *((void *)v244 + 6) = v247;
      void *v247 = v245;
    }
    uint64_t v375 = 0;
    uint64_t v250 = llvm::GCRelocateInst::getDerivedPtr(v231);
    uint64_t v375 = v250;
    uint64_t v251 = (llvm::ConstantInt *)*((void **)v231 - 4 * (*((_DWORD *)v231 + 5) & 0x7FFFFFF))[8];
    if (!v378)
    {
      uint64_t v260 = 0;
LABEL_449:
      uint64_t v254 = sub_1CBFFD5B4((uint64_t)v377, (uint64_t)&v375, &v375, v260);
      *uint64_t v254 = v375;
      *((_DWORD *)v254 + 2) = 0;
      goto LABEL_450;
    }
    int v252 = v378 - 1;
    unsigned int v253 = (v378 - 1) & ((v250 >> 4) ^ (v250 >> 9));
    uint64_t v254 = (uint64_t *)(v377[0] + 16 * v253);
    uint64_t v255 = *v254;
    if (v250 != *v254)
    {
      uint64_t v256 = 0;
      int v257 = 1;
      while (v255 != -4096)
      {
        if (v256) {
          BOOL v258 = 0;
        }
        else {
          BOOL v258 = v255 == -8192;
        }
        if (v258) {
          uint64_t v256 = v254;
        }
        unsigned int v259 = v253 + v257++;
        unsigned int v253 = v259 & v252;
        uint64_t v254 = (uint64_t *)(v377[0] + 16 * (v259 & v252));
        uint64_t v255 = *v254;
        if (v250 == *v254) {
          goto LABEL_450;
        }
      }
      if (v256) {
        uint64_t v260 = v256;
      }
      else {
        uint64_t v260 = v254;
      }
      goto LABEL_449;
    }
LABEL_450:
    uint64_t v261 = llvm::ConstantInt::get(v251, *((unsigned int *)v254 + 2), 0);
    uint64_t v262 = (_DWORD *)((char *)v231 - 32 * (*((_DWORD *)v231 + 5) & 0x7FFFFFF));
    uint64_t v263 = v262 + 16;
    if (*((void *)v262 + 8))
    {
      **((void **)v262 + 10) = *((void *)v262 + 9);
      uint64_t v264 = *((void *)v262 + 9);
      if (v264) {
        *(void *)(v264 + 16) = *((void *)v262 + 10);
      }
    }
    void *v263 = v261;
    if (v261)
    {
      uint64_t v267 = v261[1];
      int v265 = v261 + 1;
      uint64_t v266 = v267;
      *((void *)v262 + 9) = v267;
      if (v267) {
        *(void *)(v266 + 16) = v262 + 18;
      }
      *((void *)v262 + 10) = v265;
      void *v265 = v263;
    }
    ++v229;
  }
  while (v229 != v230);
  uint64_t v229 = (uint64_t *)v397;
LABEL_551:
  if (v229)
  {
    *(void *)&long long v398 = v229;
    operator delete(v229);
  }
  uint64_t v311 = (char *)v226 - (char *)v227;
  if (v226 == v227)
  {
    uint64_t v312 = 0;
    uint64_t v313 = 0;
    goto LABEL_557;
  }
  if (v311 < 0) {
LABEL_586:
  }
    abort();
  uint64_t v313 = (char *)operator new((char *)v226 - (char *)v227);
  uint64_t v312 = &v313[8 * (v311 >> 3)];
  memmove(v313, v227, (char *)v226 - (char *)v227);
LABEL_557:
  uint64_t v397 = 0x6576696C2D6367;
  *(void *)&long long v398 = v382[0];
  *(void *)((char *)&v398 + 7) = *(void *)((char *)v382 + 7);
  HIBYTE(v398) = 7;
  v382[0] = 0;
  *(void *)((char *)v382 + 7) = 0;
  v399 = v313;
  uint64_t v400 = v312;
  BOOL v401 = v312;
  sub_1CD5C4920((uint64_t)v371, (long long *)&v397);
  int v31 = llvm::CallBase::Create((uint64_t)a2, v371, 0);
  if (__p)
  {
    uint64_t v374 = __p;
    operator delete(__p);
  }
  if (v372 < 0) {
    operator delete(v371[0]);
  }
  if (v399)
  {
    uint64_t v400 = v399;
    operator delete(v399);
  }
  if (SHIBYTE(v398) < 0) {
    operator delete((void *)v397);
  }
  if (v227) {
    operator delete(v227);
  }
  MEMORY[0x1D25D9CD0](v377[0], 8);
  int v225 = 0;
  LOBYTE(v136) = v370;
LABEL_405:
  if ((llvm::LLVMContext *)v384 != v383) {
    free((void *)v384);
  }
  if (v225)
  {
LABEL_408:
    if (v136) {
      int v31 = (char *)a2;
    }
    else {
      int v31 = 0;
    }
  }
LABEL_65:
  if (v394 != (_DWORD *)v396) {
    free(v394);
  }
  return v31;
}

BOOL sub_1CCA2FBFC(llvm::AssumptionCache *a1, void **a2, llvm::Instruction *a3, const llvm::DataLayout *a4)
{
  int v4 = *((unsigned __int8 *)a1 + 16);
  if ((v4 - 41) > 0x11) {
    return 0;
  }
  int v5 = *((_DWORD *)a1 + 5);
  uint64_t v6 = (v5 & 0x40000000) != 0
     ? (llvm::AssumptionCache *)*((void *)a1 - 1)
     : (llvm::AssumptionCache *)((char *)a1 - 32 * (v5 & 0x7FFFFFF));
  if (*(unsigned char *)(*((void *)v6 + 4) + 16) != 16) {
    return 0;
  }
  if (v4 == 41) {
    return 1;
  }
  if (v4 != 57) {
    return 0;
  }
  if ((v5 & 0x40000000) != 0) {
    uint64_t v7 = (llvm **)*((void *)a1 - 1);
  }
  else {
    uint64_t v7 = (llvm **)((char *)a1 - 32 * (v5 & 0x7FFFFFF));
  }
  return llvm::haveNoCommonBitsSet(*v7, v7[4], a2, a4, a1, a3, (const llvm::DominatorTree *)1);
}

llvm::Value *sub_1CCA2FC84(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *a1;
  v20[0] = &v22;
  uint64_t v4 = *(void *)(a2 + 8);
  if (!v4) {
    return 0;
  }
  if (*(void *)(v4 + 8)) {
    return 0;
  }
  uint64_t v22 = 0;
  if (!sub_1CBF686A0(v20, 30, a2)) {
    return 0;
  }
  uint64_t v7 = *((void *)v22 + 1);
  BOOL v8 = v7 && *(void *)(v7 + 8) == 0;
  if (sub_1CC9F4000((uint64_t)v22, v8)) {
    return 0;
  }
  uint64_t v9 = *(void *)(a3 + 8);
  BOOL v10 = v9 && *(void *)(v9 + 8) == 0;
  if (!sub_1CC9F4000(a3, v10)) {
    return 0;
  }
  uint64_t v12 = *(void *)(v3 + 24);
  __int16 v21 = 257;
  uint64_t v13 = sub_1CC2427E8(v12, a3, (uint64_t)v20, v11);
  int v14 = *(_DWORD *)a1[1];
  switch(v14)
  {
    case 306:
      int v15 = 305;
      break;
    case 274:
      int v15 = 275;
      break;
    case 275:
      int v15 = 274;
      break;
    default:
      int v15 = 306;
      break;
  }
  int v16 = *(llvm::IRBuilderBase **)(v3 + 24);
  __int16 v21 = 257;
  Binaryuint64_t Intrinsic = (llvm::Constant **)llvm::IRBuilderBase::CreateBinaryIntrinsic(v16, v15, v22, v13, 0, (const llvm::Twine *)v20);
  __int16 v21 = 257;
  return llvm::BinaryOperator::CreateNot(BinaryIntrinsic, (llvm::Value *)v20, 0, v18);
}

uint64_t sub_1CCA2FDC8@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  char v3 = a2;
  if (a2)
  {
    int v6 = result;
    if (result > 0x40) {
      llvm::APInt::initSlowCase((llvm::APInt *)&v5);
    }
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t result = sub_1CBA62420(result, (llvm::APInt *)&v5);
  }
  *(_DWORD *)(a3 + 8) = v6;
  *(void *)a3 = v5;
  *(unsigned char *)(a3 + 12) = v3;
  return result;
}

uint64_t sub_1CCA2FE3C@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  char v3 = a2;
  if (a2)
  {
    int v7 = result;
    if (result > 0x40) {
      llvm::APInt::initSlowCase((llvm::APInt *)&v6);
    }
    unint64_t v5 = 0xFFFFFFFFFFFFFFFFLL >> -(char)result;
    if (!result) {
      unint64_t v5 = 0;
    }
    unint64_t v6 = v5;
  }
  else
  {
    uint64_t result = sub_1CBFD9168(result, (llvm::APInt *)&v6);
  }
  *(_DWORD *)(a3 + 8) = v7;
  *(void *)a3 = v6;
  *(unsigned char *)(a3 + 12) = v3;
  return result;
}

BOOL sub_1CCA2FEC4(uint64_t a1)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  LODWORD(v12) = 32;
  uint64_t v11 = 0;
  llvm::detail::IEEEFloat::initFromFloatAPInt((llvm::detail::IEEEFloat *)&v17, &v11);
  uint64_t v23 = v17;
  uint64_t v24 = v18;
  int v25 = v19;
  unsigned __int8 v26 = BYTE4(v19) & 0xF;
  int v16 = 32;
  uint64_t v15 = 1065353216;
  llvm::detail::IEEEFloat::initFromFloatAPInt((llvm::detail::IEEEFloat *)&v11, (const llvm::APInt **)&v15);
  uint64_t v18 = v11;
  uint64_t v19 = v12;
  int v20 = v13;
  unsigned __int8 v21 = v14 & 0xF;
  llvm::APFloat::convert((uint64_t)v22, *(void **)(a1 + 32), 1, &v11);
  llvm::APFloat::convert((uint64_t)&v17, *(void **)(a1 + 32), 1, &v11);
  if (*(_UNKNOWN **)(a1 + 32) != &unk_1CFB2E344)
  {
    unsigned int v2 = *(unsigned __int8 *)(a1 + 52);
    BOOL result = 0;
    switch(4 * (v2 & 7) + (v26 & 7))
    {
      case 1u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
      case 9u:
      case 0xDu:
      case 0xFu:
        goto LABEL_26;
      case 2u:
      case 3u:
      case 0xBu:
        int v4 = ~(v2 >> 2) & 2;
        goto LABEL_6;
      case 8u:
      case 0xCu:
      case 0xEu:
        int v4 = (v26 >> 2) & 2;
        goto LABEL_6;
      case 0xAu:
        int v5 = (v2 >> 3) & 1;
        if (v5 != ((v26 >> 3) & 1)) {
          goto LABEL_22;
        }
        int v4 = llvm::detail::IEEEFloat::compareAbsoluteValue((llvm::detail::IEEEFloat *)(a1 + 32), (const llvm::detail::IEEEFloat *)&v23);
        if ((*(unsigned char *)(a1 + 52) & 8) == 0) {
          goto LABEL_6;
        }
        if (v4) {
          goto LABEL_19;
        }
        goto LABEL_7;
      default:
        int v5 = (v2 >> 3) & 1;
        if (v5 == ((v26 >> 3) & 1)) {
          goto LABEL_19;
        }
LABEL_22:
        int v4 = (2 * v5) ^ 2;
        goto LABEL_6;
    }
  }
  int v4 = llvm::detail::DoubleAPFloat::compare((llvm::detail::DoubleAPFloat *)(a1 + 32), (const llvm::detail::DoubleAPFloat *)&v23);
LABEL_6:
  if (v4 == 2)
  {
LABEL_7:
    if (*(_UNKNOWN **)(a1 + 32) == &unk_1CFB2E344)
    {
      int v7 = llvm::detail::DoubleAPFloat::compare((llvm::detail::DoubleAPFloat *)(a1 + 32), (const llvm::detail::DoubleAPFloat *)&v18);
    }
    else
    {
      unsigned int v6 = *(unsigned __int8 *)(a1 + 52);
      int v7 = 3;
      switch(4 * (v6 & 7) + (v21 & 7))
      {
        case 1u:
        case 4u:
        case 5u:
        case 6u:
        case 7u:
        case 9u:
        case 0xDu:
          break;
        case 2u:
        case 3u:
        case 0xBu:
          int v7 = ~(v6 >> 2) & 2;
          break;
        case 8u:
        case 0xCu:
        case 0xEu:
          int v7 = (v21 >> 2) & 2;
          break;
        case 0xAu:
          int v8 = (v6 >> 3) & 1;
          if (v8 != ((v21 >> 3) & 1)) {
            goto LABEL_31;
          }
          int v7 = llvm::detail::IEEEFloat::compareAbsoluteValue((llvm::detail::IEEEFloat *)(a1 + 32), (const llvm::detail::IEEEFloat *)&v18);
          if ((*(unsigned char *)(a1 + 52) & 8) != 0)
          {
            if (v7)
            {
              if (v7 == 2) {
                int v7 = 0;
              }
            }
            else
            {
              int v7 = 2;
            }
          }
          break;
        case 0xFu:
          goto LABEL_24;
        default:
          int v8 = (v6 >> 3) & 1;
          if (v8 == ((v21 >> 3) & 1)) {
LABEL_24:
          }
            int v7 = 1;
          else {
LABEL_31:
          }
            int v7 = (2 * v8) ^ 2;
          break;
      }
    }
    BOOL result = v7 != 2;
  }
  else
  {
LABEL_19:
    BOOL result = 0;
  }
LABEL_26:
  if (v18 == (const llvm::APInt *)&unk_1CFB2E344)
  {
    BOOL v9 = result;
    sub_1CB845718(&v19);
LABEL_36:
    BOOL result = v9;
    goto LABEL_28;
  }
  if ((*((_DWORD *)v18 + 2) - 64) <= 0xFFFFFF7F && v19)
  {
    BOOL v9 = result;
    MEMORY[0x1D25D9CB0](v19, 0x1000C8000313F17);
    goto LABEL_36;
  }
LABEL_28:
  if ((_UNKNOWN *)v23 == &unk_1CFB2E344)
  {
    BOOL v10 = result;
    sub_1CB845718((uint64_t *)&v24);
    return v10;
  }
  if ((*(_DWORD *)(v23 + 8) - 64) <= 0xFFFFFF7F && v24)
  {
    BOOL v10 = result;
    MEMORY[0x1D25D9CB0](v24, 0x1000C8000313F17);
    return v10;
  }
  return result;
}