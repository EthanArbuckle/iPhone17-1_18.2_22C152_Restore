__n128 pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::LogicalNode<std::logical_and>::LogicalNode(void *a1, __n128 *a2)
{
  __n128 result;

  *a1 = &unk_26C757410;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 0;
  result = *a2;
  *(__n128 *)(a1 + 1) = *a2;
  a1[3] = a2[1].n128_u64[0];
  a2->n128_u64[0] = 0;
  a2->n128_u64[1] = 0;
  a2[1].n128_u64[0] = 0;
  return result;
}

{
  __n128 result;

  *a1 = &unk_26C757410;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 0;
  result = *a2;
  *(__n128 *)(a1 + 1) = *a2;
  a1[3] = a2[1].n128_u64[0];
  a2->n128_u64[0] = 0;
  a2->n128_u64[1] = 0;
  a2[1].n128_u64[0] = 0;
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::LogicalNode<std::logical_and>::Evaluate@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v46 = *MEMORY[0x263EF8340];
  unint64_t v45 = 0;
  v36 = 0;
  v37 = 0;
  unint64_t v38 = 0;
  uint64_t v3 = *(void *)(a1 + 8);
  if (*(void *)(a1 + 16) == v3) {
    goto LABEL_55;
  }
  unint64_t v5 = 0;
  do
  {
    (*(void (**)(uint64_t *__return_ptr))(**(void **)(v3 + 8 * v5) + 16))(&v40);
    if (v42 == v43)
    {
      if (sub_216959490((pxrInternal__aapl__pxrReserved__::VtValue *)&v40))
      {
        if (v45)
        {
          if ((v45 & 4) != 0) {
            v6 = (uint64_t *)(*(uint64_t (**)(uint64_t *))((v45 & 0xFFFFFFFFFFFFFFF8) + 168))(&v44);
          }
          else {
            v6 = &v44;
          }
          if ((v41 & 4) != 0) {
            v7 = (uint64_t *)(*(uint64_t (**)(uint64_t *))((v41 & 0xFFFFFFFFFFFFFFF8) + 168))(&v40);
          }
          else {
            v7 = &v40;
          }
          if (*(unsigned char *)v6) {
            BOOL v8 = *(unsigned char *)v7 == 0;
          }
          else {
            BOOL v8 = 1;
          }
          char v9 = !v8;
          if (v45 && (v45 & 3) != 3) {
            (*(void (**)(uint64_t *))((v45 & 0xFFFFFFFFFFFFFFF8) + 32))(&v44);
          }
        }
        else if ((v41 & 4) != 0)
        {
          char v9 = *(unsigned char *)(*(uint64_t (**)(uint64_t *))((v41 & 0xFFFFFFFFFFFFFFF8) + 168))(&v40);
          if (v45 && (v45 & 3) != 3) {
            (*(void (**)(uint64_t *))((v45 & 0xFFFFFFFFFFFFFFF8) + 32))(&v44);
          }
        }
        else
        {
          char v9 = v40;
        }
        unint64_t v45 = (unint64_t)&unk_26C7501AB;
        LOBYTE(v44) = v9;
      }
      else
      {
        pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::GetValueTypeName((pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl *)&v40, v30);
        v12 = v30;
        if (v31 < 0) {
          v12 = (void **)v30[0];
        }
        pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Invalid type %s for argument %zu", v10, v11, v12, v5);
        if (v33 >= 0) {
          v15 = &v32;
        }
        else {
          v15 = v32;
        }
        pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v13, v14, "and", v15);
        v16 = v37;
        if ((unint64_t)v37 >= v38)
        {
          unint64_t v18 = 0xAAAAAAAAAAAAAAABLL * (((char *)v37 - (char *)v36) >> 3);
          unint64_t v19 = v18 + 1;
          if (v18 + 1 > 0xAAAAAAAAAAAAAAALL) {
            sub_21677CB10();
          }
          if (0x5555555555555556 * ((uint64_t)(v38 - (void)v36) >> 3) > v19) {
            unint64_t v19 = 0x5555555555555556 * ((uint64_t)(v38 - (void)v36) >> 3);
          }
          if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v38 - (void)v36) >> 3) >= 0x555555555555555) {
            unint64_t v20 = 0xAAAAAAAAAAAAAAALL;
          }
          else {
            unint64_t v20 = v19;
          }
          v39[4] = (void **)&v38;
          if (v20) {
            v21 = (void **)sub_216782ED8((uint64_t)&v38, v20);
          }
          else {
            v21 = 0;
          }
          v22 = &v21[3 * v18];
          v39[0] = v21;
          v39[1] = v22;
          v39[3] = &v21[3 * v20];
          long long v23 = *(_OWORD *)__p;
          v22[2] = v35;
          *(_OWORD *)v22 = v23;
          __p[1] = 0;
          v35 = 0;
          __p[0] = 0;
          v39[2] = v22 + 3;
          sub_216790CCC((uint64_t *)&v36, v39);
          v24 = v37;
          sub_216790E64((uint64_t)v39);
          v37 = v24;
          if (SHIBYTE(v35) < 0) {
            operator delete(__p[0]);
          }
        }
        else
        {
          long long v17 = *(_OWORD *)__p;
          *((void *)v37 + 2) = v35;
          long long *v16 = v17;
          __p[1] = 0;
          v35 = 0;
          __p[0] = 0;
          v37 = (long long *)((char *)v16 + 24);
        }
        if (v33 < 0) {
          operator delete(v32);
        }
        if (v31 < 0) {
          operator delete(v30[0]);
        }
      }
    }
    else
    {
      sub_216A30E64((uint64_t *)&v36, v37, (uint64_t)v42, v43, 0xAAAAAAAAAAAAAAABLL * (((char *)v43 - (char *)v42) >> 3));
    }
    v39[0] = (void **)&v42;
    sub_216782F20(v39);
    sub_2168EE084((uint64_t)&v40);
    ++v5;
    uint64_t v3 = *(void *)(a1 + 8);
  }
  while (v5 < (*(void *)(a1 + 16) - v3) >> 3);
  v26 = v36;
  v25 = v37;
  if (v36 == v37)
  {
LABEL_55:
    sub_2168EDFA8(a2, &v44);
    v28 = (long long **)(a2 + 2);
  }
  else
  {
    a2[1] = 0;
    a2[2] = v26;
    unint64_t v27 = v38;
    a2[3] = v25;
    a2[4] = v27;
    v28 = &v36;
  }
  *v28 = 0;
  v28[1] = 0;
  v28[2] = 0;
  v39[0] = (void **)&v36;
  sub_216782F20(v39);
  return sub_2168EE084((uint64_t)&v44);
}

void sub_2169F32A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30,char a31,uint64_t a32,uint64_t a33,char a34)
{
  if (a30 < 0) {
    operator delete(__p);
  }
  if (a24 < 0) {
    operator delete(a19);
  }
  if (a18 < 0) {
    operator delete(a13);
  }
  sub_2169E8360(v34 - 152);
  *(void *)(v34 - 152) = &a31;
  sub_216782F20((void ***)(v34 - 152));
  sub_2168EE084(v34 - 112);
  _Unwind_Resume(a1);
}

long long *sub_2169F3338(long long *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  uint64_t v3 = *(long long **)(a2 + 24);
  if ((long long *)v2 != v3) {
    return sub_216A30E64((uint64_t *)result, *((long long **)result + 1), v2, v3, 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v3 - v2) >> 3));
  }
  return result;
}

__n128 pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::LogicalNode<std::logical_or>::LogicalNode(void *a1, __n128 *a2)
{
  *a1 = &unk_26C757438;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 0;
  __n128 result = *a2;
  *(__n128 *)(a1 + 1) = *a2;
  a1[3] = a2[1].n128_u64[0];
  a2->n128_u64[0] = 0;
  a2->n128_u64[1] = 0;
  a2[1].n128_u64[0] = 0;
  return result;
}

{
  __n128 result;

  *a1 = &unk_26C757438;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 0;
  __n128 result = *a2;
  *(__n128 *)(a1 + 1) = *a2;
  a1[3] = a2[1].n128_u64[0];
  a2->n128_u64[0] = 0;
  a2->n128_u64[1] = 0;
  a2[1].n128_u64[0] = 0;
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::LogicalNode<std::logical_or>::Evaluate@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v45 = *MEMORY[0x263EF8340];
  unint64_t v44 = 0;
  v35 = 0;
  v36 = 0;
  unint64_t v37 = 0;
  uint64_t v3 = *(void *)(a1 + 8);
  if (*(void *)(a1 + 16) == v3) {
    goto LABEL_49;
  }
  unint64_t v5 = 0;
  do
  {
    (*(void (**)(uint64_t *__return_ptr))(**(void **)(v3 + 8 * v5) + 16))(&v39);
    if (v41 == v42)
    {
      if (sub_216959490((pxrInternal__aapl__pxrReserved__::VtValue *)&v39))
      {
        if (v44)
        {
          if ((v44 & 4) != 0) {
            v6 = (unsigned __int8 *)(*(uint64_t (**)(uint64_t *))((v44 & 0xFFFFFFFFFFFFFFF8) + 168))(&v43);
          }
          else {
            v6 = (unsigned __int8 *)&v43;
          }
          if ((v40 & 4) != 0) {
            v7 = (unsigned __int8 *)(*(uint64_t (**)(uint64_t *))((v40 & 0xFFFFFFFFFFFFFFF8) + 168))(&v39);
          }
          else {
            v7 = (unsigned __int8 *)&v39;
          }
          char v8 = (*v6 | *v7) != 0;
          if (v44 && (v44 & 3) != 3) {
            (*(void (**)(uint64_t *))((v44 & 0xFFFFFFFFFFFFFFF8) + 32))(&v43);
          }
        }
        else if ((v40 & 4) != 0)
        {
          char v8 = *(unsigned char *)(*(uint64_t (**)(uint64_t *))((v40 & 0xFFFFFFFFFFFFFFF8) + 168))(&v39);
          if (v44 && (v44 & 3) != 3) {
            (*(void (**)(uint64_t *))((v44 & 0xFFFFFFFFFFFFFFF8) + 32))(&v43);
          }
        }
        else
        {
          char v8 = v39;
        }
        unint64_t v44 = (unint64_t)&unk_26C7501AB;
        LOBYTE(v43) = v8;
      }
      else
      {
        pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::GetValueTypeName((pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl *)&v39, v29);
        v11 = v29;
        if (v30 < 0) {
          v11 = (void **)v29[0];
        }
        pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Invalid type %s for argument %zu", v9, v10, v11, v5);
        if (v32 >= 0) {
          v14 = &v31;
        }
        else {
          v14 = v31;
        }
        pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v12, v13, "or", v14);
        v15 = v36;
        if ((unint64_t)v36 >= v37)
        {
          unint64_t v17 = 0xAAAAAAAAAAAAAAABLL * (((char *)v36 - (char *)v35) >> 3);
          unint64_t v18 = v17 + 1;
          if (v17 + 1 > 0xAAAAAAAAAAAAAAALL) {
            sub_21677CB10();
          }
          if (0x5555555555555556 * ((uint64_t)(v37 - (void)v35) >> 3) > v18) {
            unint64_t v18 = 0x5555555555555556 * ((uint64_t)(v37 - (void)v35) >> 3);
          }
          if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v37 - (void)v35) >> 3) >= 0x555555555555555) {
            unint64_t v19 = 0xAAAAAAAAAAAAAAALL;
          }
          else {
            unint64_t v19 = v18;
          }
          v38[4] = (void **)&v37;
          if (v19) {
            unint64_t v20 = (void **)sub_216782ED8((uint64_t)&v37, v19);
          }
          else {
            unint64_t v20 = 0;
          }
          v21 = &v20[3 * v17];
          v38[0] = v20;
          v38[1] = v21;
          v38[3] = &v20[3 * v19];
          long long v22 = *(_OWORD *)__p;
          v21[2] = v34;
          *(_OWORD *)v21 = v22;
          __p[1] = 0;
          uint64_t v34 = 0;
          __p[0] = 0;
          v38[2] = v21 + 3;
          sub_216790CCC((uint64_t *)&v35, v38);
          long long v23 = v36;
          sub_216790E64((uint64_t)v38);
          v36 = v23;
          if (SHIBYTE(v34) < 0) {
            operator delete(__p[0]);
          }
        }
        else
        {
          long long v16 = *(_OWORD *)__p;
          *((void *)v36 + 2) = v34;
          long long *v15 = v16;
          __p[1] = 0;
          uint64_t v34 = 0;
          __p[0] = 0;
          v36 = (long long *)((char *)v15 + 24);
        }
        if (v32 < 0) {
          operator delete(v31);
        }
        if (v30 < 0) {
          operator delete(v29[0]);
        }
      }
    }
    else
    {
      sub_216A30E64((uint64_t *)&v35, v36, (uint64_t)v41, v42, 0xAAAAAAAAAAAAAAABLL * (((char *)v42 - (char *)v41) >> 3));
    }
    v38[0] = (void **)&v41;
    sub_216782F20(v38);
    sub_2168EE084((uint64_t)&v39);
    ++v5;
    uint64_t v3 = *(void *)(a1 + 8);
  }
  while (v5 < (*(void *)(a1 + 16) - v3) >> 3);
  v25 = v35;
  v24 = v36;
  if (v35 == v36)
  {
LABEL_49:
    sub_2168EDFA8(a2, &v43);
    unint64_t v27 = (long long **)(a2 + 2);
  }
  else
  {
    a2[1] = 0;
    a2[2] = v25;
    unint64_t v26 = v37;
    a2[3] = v24;
    a2[4] = v26;
    unint64_t v27 = &v35;
  }
  *unint64_t v27 = 0;
  v27[1] = 0;
  v27[2] = 0;
  v38[0] = (void **)&v35;
  sub_216782F20(v38);
  return sub_2168EE084((uint64_t)&v43);
}

void sub_2169F37EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30,char a31,uint64_t a32,uint64_t a33,char a34)
{
  if (a30 < 0) {
    operator delete(__p);
  }
  if (a24 < 0) {
    operator delete(a19);
  }
  if (a18 < 0) {
    operator delete(a13);
  }
  sub_2169E8360(v34 - 152);
  *(void *)(v34 - 152) = &a31;
  sub_216782F20((void ***)(v34 - 152));
  sub_2168EE084(v34 - 112);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::GetValueType(pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl *this, const pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  return sub_2169F38A8(this);
}

uint64_t sub_2169F38A8(pxrInternal__aapl__pxrReserved__::VtValue *a1)
{
  switch(sub_2169FCDDC((uint64_t)a1))
  {
    case 0u:
      uint64_t v5 = *((void *)a1 + 1);
      if ((v5 & 4) != 0) {
        (*(void (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      uint64_t result = 1;
      break;
    case 1u:
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 8u:
    case 9u:
    case 0xAu:
    case 0xBu:
    case 0xDu:
    case 0xEu:
    case 0xFu:
    case 0x10u:
    case 0x11u:
    case 0x12u:
    case 0x13u:
    case 0x14u:
    case 0x15u:
    case 0x16u:
    case 0x17u:
    case 0x18u:
    case 0x19u:
    case 0x1Au:
    case 0x1Bu:
    case 0x1Cu:
    case 0x1Du:
    case 0x1Eu:
    case 0x1Fu:
    case 0x20u:
    case 0x21u:
    case 0x22u:
    case 0x23u:
    case 0x24u:
    case 0x25u:
    case 0x26u:
    case 0x27u:
    case 0x28u:
    case 0x29u:
    case 0x2Au:
    case 0x2Bu:
    case 0x2Cu:
    case 0x2Du:
    case 0x2Eu:
    case 0x30u:
    case 0x31u:
    case 0x32u:
    case 0x33u:
    case 0x34u:
    case 0x35u:
    case 0x37u:
    case 0x38u:
    case 0x39u:
    case 0x3Au:
    case 0x3Cu:
    case 0x3Du:
    case 0x3Eu:
    case 0x3Fu:
    case 0x40u:
    case 0x41u:
    case 0x42u:
    case 0x43u:
    case 0x44u:
    case 0x45u:
    case 0x46u:
    case 0x47u:
    case 0x48u:
    case 0x49u:
    case 0x4Au:
    case 0x4Bu:
    case 0x4Cu:
    case 0x4Du:
    case 0x4Eu:
    case 0x4Fu:
    case 0x50u:
    case 0x51u:
    case 0x52u:
    case 0x53u:
    case 0x54u:
    case 0x55u:
    case 0x56u:
    case 0x57u:
    case 0x58u:
    case 0x59u:
    case 0x5Au:
    case 0x5Bu:
    case 0x5Cu:
    case 0x5Du:
    case 0x5Eu:
    case 0x5Fu:
      uint64_t v2 = *((void *)a1 + 1);
      if ((v2 & 4) != 0) {
        (*(void (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v2 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      uint64_t result = 0;
      break;
    case 7u:
      uint64_t v6 = *((void *)a1 + 1);
      if ((v6 & 4) != 0) {
        (*(void (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      uint64_t result = 2;
      break;
    case 0xCu:
      uint64_t v7 = *((void *)a1 + 1);
      if ((v7 & 4) != 0) {
        (*(void (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v7 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      uint64_t result = 3;
      break;
    case 0x2Fu:
    case 0x36u:
    case 0x3Bu:
      uint64_t v4 = *((void *)a1 + 1);
      if ((v4 & 4) != 0) {
        (*(void (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v4 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      uint64_t result = 4;
      break;
    default:
      if (*((void *)a1 + 1))
      {
        if (sub_2169F7010(a1)) {
          uint64_t result = 4;
        }
        else {
          uint64_t result = 0;
        }
      }
      else
      {
        uint64_t result = 5;
      }
      break;
  }
  return result;
}

void pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::CoerceIfUnsupportedValueType(pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl *this@<X0>, void *a2@<X8>)
{
  uint64_t v3 = this;
  if (sub_21695A85C(this))
  {
    uint64_t v5 = *((void *)v3 + 1);
    if ((v5 & 4) != 0) {
      uint64_t v3 = (pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl *))((v5 & 0xFFFFFFFFFFFFFFF8) + 168))(v3);
    }
    *a2 = *(int *)v3;
    a2[1] = &unk_26C750823;
  }
  else if (sub_216907880(v3))
  {
    uint64_t v6 = *((void *)v3 + 1);
    if ((v6 & 4) != 0) {
      uint64_t v7 = (void *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl *))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))(v3);
    }
    else {
      uint64_t v7 = *(void **)v3;
    }
    sub_2169F3C44((uint64_t)v8, v7[4], v7[4] + 4 * *v7);
    a2[1] = &off_26C755528;
    sub_2168F8DBC(a2, (uint64_t)v8);
    sub_2168F83DC((uint64_t)v8);
  }
  else
  {
    a2[1] = 0;
  }
}

void sub_2169F3C2C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_2168F83DC((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2169F3C44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(a1 + 32) = 0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  sub_216A37FB4((unint64_t *)a1, a2, a3);
  return a1;
}

void sub_2169F3C78(_Unwind_Exception *a1)
{
  sub_2168F83DC(v1);
  _Unwind_Resume(a1);
}

double pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::EvalContext::EvalContext(pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::EvalContext *this, const pxrInternal__aapl__pxrReserved__::VtDictionary *a2)
{
  *(void *)this = a2;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 1065353216;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  return result;
}

{
  double result;

  *(void *)this = a2;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 1065353216;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  return result;
}

BOOL pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::EvalContext::HasVariable(uint64_t **a1, const void **a2)
{
  return sub_2169F3CFC(*a1, a2) != 0;
}

uint64_t sub_2169F3CFC(uint64_t *a1, const void **a2)
{
  uint64_t v3 = pxrInternal__aapl__pxrReserved__::VtDictionary::find(a1, a2);
  uint64_t v5 = v4;
  uint64_t v6 = pxrInternal__aapl__pxrReserved__::VtDictionary::end((pxrInternal__aapl__pxrReserved__::VtDictionary *)a1);
  if (v5 != v7) {
    return v3 + 56;
  }
  uint64_t v8 = v6;
  uint64_t result = 0;
  if (v5)
  {
    if (v3 != v8) {
      return v3 + 56;
    }
  }
  return result;
}

void pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::EvalContext::GetVariable(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v79 = *MEMORY[0x263EF8340];
  unint64_t v6 = *(void *)(a1 + 80);
  uint64_t v7 = *(void *)(a1 + 56);
  uint64_t v8 = *(void *)(a1 + 64);
  char v9 = (uint64_t *)(v7 + 8 * (v6 / 0xAA));
  if (v8 == v7)
  {
    uint64_t v10 = 0;
    uint64_t v13 = 0;
    v12 = (uint64_t *)(v7 + 8 * ((*(void *)(a1 + 88) + v6) / 0xAA));
  }
  else
  {
    uint64_t v10 = *(void *)(v7 + 8 * (v6 / 0xAA)) + 24 * (v6 % 0xAA);
    unint64_t v11 = *(void *)(a1 + 88) + v6;
    v12 = (uint64_t *)(v7 + 8 * (v11 / 0xAA));
    uint64_t v13 = *v12 + 24 * (v11 % 0xAA);
  }
  sub_216A38200(v9, v10, v12, v13, (unsigned __int8 **)a2);
  uint64_t v15 = *(void *)(a1 + 56);
  if (*(void *)(a1 + 64) == v15)
  {
    if (v14)
    {
      v36 = 0;
      locale = 0;
      v67.__locale_ = 0;
      long long v68 = 0uLL;
LABEL_41:
      sub_216881C38(", ", locale, v36, &v70);
      if ((v70.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        v48 = &v70;
      }
      else {
        v48 = (std::string *)v70.__r_.__value_.__r.__words[0];
      }
      if (*(char *)(a2 + 23) >= 0) {
        v49 = (unsigned __int8 *)a2;
      }
      else {
        v49 = *(unsigned __int8 **)a2;
      }
      pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Encountered circular variable substitutions: [%s, '%s']", v46, v47, v48, v49);
      memset(&v71, 0, sizeof(v71));
      v77 = &v71;
      LOBYTE(v78) = 0;
      v71.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x18uLL);
      v71.__r_.__value_.__l.__size_ = v71.__r_.__value_.__r.__words[0];
      v71.__r_.__value_.__r.__words[2] = v71.__r_.__value_.__r.__words[0] + 24;
      v50 = sub_21695F6C0((uint64_t)&v71.__r_.__value_.__r.__words[2], (long long *)__p, (long long *)&v75, v71.__r_.__value_.__l.__data_);
      *(void *)&v76[0] = 0;
      *((void *)&v76[0] + 1) = v71.__r_.__value_.__r.__words[0];
      *(void *)&v76[1] = v50;
      *((void *)&v76[1] + 1) = *((void *)&v71.__r_.__value_.__l + 2);
      memset(&v71, 0, sizeof(v71));
      sub_2168EDFA8((void *)a3, &v75);
      *(_OWORD *)(a3 + 16) = *(_OWORD *)((char *)v76 + 8);
      *(void *)(a3 + 32) = *((void *)&v76[1] + 1);
      memset((char *)v76 + 8, 0, 24);
      *(unsigned char *)(a3 + 40) = 1;
      v77 = (std::string *)((char *)v76 + 8);
      sub_216782F20((void ***)&v77);
      sub_2168EE084((uint64_t)&v75);
      v77 = &v71;
      sub_216782F20((void ***)&v77);
      if (v74 < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v70.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v70.__r_.__value_.__l.__data_);
      }
      v75 = &v67;
      sub_216782F20((void ***)&v75);
      return;
    }
  }
  else
  {
    unint64_t v16 = *(void *)(a1 + 80);
    unint64_t v17 = v16 + *(void *)(a1 + 88);
    unint64_t v18 = v17 / 0xAA;
    uint64_t v19 = *(void *)(v15 + 8 * (v17 / 0xAA));
    unint64_t v20 = v17 % 0xAA;
    if (v19 + 24 * v20 != v14)
    {
      v67.__locale_ = 0;
      long long v68 = 0uLL;
      v21 = (void *)(v15 + 8 * (v16 / 0xAA));
      unint64_t v22 = *v21 + 24 * (v16 % 0xAA);
      uint64_t v23 = *(void *)(v15 + 8 * v18) + 24 * v20;
      if (v22 == v23)
      {
        v36 = 0;
        locale = 0;
      }
      else
      {
        uint64_t v65 = a2;
        uint64_t v66 = a3;
        do
        {
          std::operator+<char>();
          v24 = std::string::append(&v71, "'");
          std::string::size_type v25 = v24->__r_.__value_.__r.__words[0];
          __p[0] = (void *)v24->__r_.__value_.__l.__size_;
          *(void **)((char *)__p + 7) = *(void **)((char *)&v24->__r_.__value_.__r.__words[1] + 7);
          char v26 = HIBYTE(v24->__r_.__value_.__r.__words[2]);
          v24->__r_.__value_.__l.__size_ = 0;
          v24->__r_.__value_.__r.__words[2] = 0;
          v24->__r_.__value_.__r.__words[0] = 0;
          uint64_t v27 = v68;
          if ((unint64_t)v68 >= *((void *)&v68 + 1))
          {
            unint64_t v29 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v68 - (unint64_t)v67.__locale_) >> 3);
            unint64_t v30 = v29 + 1;
            if (v29 + 1 > 0xAAAAAAAAAAAAAAALL) {
              sub_21677CB10();
            }
            if (0x5555555555555556 * ((uint64_t)(*((void *)&v68 + 1) - (unint64_t)v67.__locale_) >> 3) > v30) {
              unint64_t v30 = 0x5555555555555556 * ((uint64_t)(*((void *)&v68 + 1) - (unint64_t)v67.__locale_) >> 3);
            }
            if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)&v68 + 1) - (unint64_t)v67.__locale_) >> 3) >= 0x555555555555555) {
              unint64_t v31 = 0xAAAAAAAAAAAAAAALL;
            }
            else {
              unint64_t v31 = v30;
            }
            *((void *)&v76[1] + 1) = (char *)&v68 + 8;
            if (v31) {
              char v32 = (char *)sub_216782ED8((uint64_t)&v68 + 8, v31);
            }
            else {
              char v32 = 0;
            }
            char v33 = (void **)&v32[24 * v29];
            v75 = v32;
            *(void *)&v76[0] = v33;
            *(void *)&v76[1] = &v32[24 * v31];
            *char v33 = (void *)v25;
            v33[1] = __p[0];
            *(void **)((char *)v33 + 15) = *(void **)((char *)__p + 7);
            *((unsigned char *)v33 + 23) = v26;
            *((void *)&v76[0] + 1) = v33 + 3;
            sub_216790CCC((uint64_t *)&v67, &v75);
            uint64_t v28 = v68;
            sub_216790E64((uint64_t)&v75);
          }
          else
          {
            *(void *)long long v68 = v25;
            *(void **)(v27 + 8) = __p[0];
            *(void **)(v27 + 15) = *(void **)((char *)__p + 7);
            *(unsigned char *)(v27 + 23) = v26;
            uint64_t v28 = v27 + 24;
          }
          *(void *)&long long v68 = v28;
          if (SHIBYTE(v71.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v71.__r_.__value_.__l.__data_);
          }
          v22 += 24;
          if (v22 - *v21 == 4080)
          {
            unint64_t v34 = v21[1];
            ++v21;
            unint64_t v22 = v34;
          }
        }
        while (v22 != v23);
        locale = (std::string *)v67.__locale_;
        v36 = (std::string *)v68;
        a2 = v65;
        a3 = v66;
      }
      goto LABEL_41;
    }
  }
  sub_216A38350(a1 + 8, (unsigned __int8 *)a2, a2);
  unint64_t v37 = (pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl *)sub_2169F3CFC(*(uint64_t **)a1, (const void **)a2);
  unint64_t v38 = v37;
  if (v37)
  {
    uint64_t v39 = (pxrInternal__aapl__pxrReserved__::VtValue *)&v77;
    pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::CoerceIfUnsupportedValueType(v37, &v77);
    uint64_t v40 = v78;
    if (!v78) {
      uint64_t v39 = v38;
    }
    if (sub_2169F38A8(v39))
    {
      if (!sub_21695C360(v39)) {
        goto LABEL_53;
      }
      uint64_t v41 = &v77;
      if (!v40) {
        uint64_t v41 = (std::string **)v38;
      }
      unint64_t v42 = (unint64_t)v41[1];
      uint64_t v43 = (v42 & 4) != 0
          ? (uint64_t *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v42 & 0xFFFFFFFFFFFFFFF8)
                                                                                              + 168))(v39)
          : *(uint64_t **)v39;
      if (pxrInternal__aapl__pxrReserved__::Sdf_IsVariableExpression(v43))
      {
        pxrInternal__aapl__pxrReserved__::Sdf_ParseVariableExpression(v43, &v67);
        if (v67.__locale_)
        {
          sub_2169F4768((void *)(a1 + 48), (long long *)a2);
          v75 = &unk_26C757920;
          *(void *)&v76[0] = a1;
          *(void *)&v76[1] = &v75;
          sub_21687BABC((uint64_t)&v71, (uint64_t)&v75);
          sub_21686060C(&v75);
          (*(void (**)(void **__return_ptr))(*(void *)v67.__locale_ + 16))(&v75);
          sub_2168EDFA8((void *)a3, &v75);
          *(_OWORD *)(a3 + 16) = *(_OWORD *)((char *)v76 + 8);
          *(void *)(a3 + 32) = *((void *)&v76[1] + 1);
          memset((char *)v76 + 8, 0, 24);
          *(unsigned char *)(a3 + 40) = 1;
          __p[0] = (char *)v76 + 8;
          sub_216782F20((void ***)__p);
          sub_2168EE084((uint64_t)&v75);
          sub_2168EB980(&v71);
        }
        else
        {
          v59 = (std::string *)*((void *)&v68 + 1);
          v60 = (std::string *)v68;
          if ((void)v68 == *((void *)&v68 + 1))
          {
            memset(v76, 0, sizeof(v76));
          }
          else
          {
            do
            {
              if (*(char *)(a2 + 23) >= 0) {
                v61 = (unsigned __int8 *)a2;
              }
              else {
                v61 = *(unsigned __int8 **)a2;
              }
              pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)" (in variable '%s')", v44, v45, v61);
              if (v76[0] >= 0) {
                v62 = (const std::string::value_type *)&v75;
              }
              else {
                v62 = (const std::string::value_type *)v75;
              }
              if (v76[0] >= 0) {
                std::string::size_type v63 = HIBYTE(v76[0]);
              }
              else {
                std::string::size_type v63 = *(void *)&v76[0];
              }
              std::string::append(v60, v62, v63);
              if (SHIBYTE(v76[0]) < 0) {
                operator delete(v75);
              }
              ++v60;
            }
            while (v60 != v59);
            *(void *)&v76[0] = 0;
            *(_OWORD *)((char *)v76 + 8) = v68;
            *((void *)&v76[1] + 1) = v69;
            uint64_t v69 = 0;
            long long v68 = 0uLL;
          }
          sub_2168EDFA8((void *)a3, &v75);
          *(_OWORD *)(a3 + 16) = *(_OWORD *)((char *)v76 + 8);
          *(void *)(a3 + 32) = *((void *)&v76[1] + 1);
          memset((char *)v76 + 8, 0, 24);
          *(unsigned char *)(a3 + 40) = 1;
          sub_2169E8360((uint64_t)&v75);
        }
        v75 = &v68;
        sub_216782F20((void ***)&v75);
        v64 = v67.__locale_;
        v67.__locale_ = 0;
        if (v64) {
          (*(void (**)(std::locale::__imp *))(*(void *)v64 + 8))(v64);
        }
      }
      else
      {
LABEL_53:
        sub_2168EE4C4(&v75, v39);
        memset((char *)v76 + 8, 0, 24);
        sub_2168EDFA8((void *)a3, &v75);
        *(_OWORD *)(a3 + 16) = *(_OWORD *)((char *)v76 + 8);
        *(void *)(a3 + 32) = *((void *)&v76[1] + 1);
        memset((char *)v76 + 8, 0, 24);
        *(unsigned char *)(a3 + 40) = 1;
        v67.__locale_ = (std::locale::__imp *)((char *)v76 + 8);
        sub_216782F20((void ***)&v67);
        sub_2168EE084((uint64_t)&v75);
      }
    }
    else
    {
      int v52 = *(char *)(a2 + 23);
      v53 = *(unsigned __int8 **)a2;
      pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::GetValueTypeName(v39, __p);
      if (v52 >= 0) {
        uint64_t v56 = a2;
      }
      else {
        uint64_t v56 = (uint64_t)v53;
      }
      if (v74 >= 0) {
        v57 = __p;
      }
      else {
        v57 = (void **)__p[0];
      }
      pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Variable '%s' has unsupported type %s", v54, v55, v56, v57);
      v67.__locale_ = 0;
      long long v68 = 0uLL;
      v70.__r_.__value_.__r.__words[0] = (std::string::size_type)&v67;
      v70.__r_.__value_.__s.__data_[8] = 0;
      v67.__locale_ = (std::locale::__imp *)operator new(0x18uLL);
      *(std::locale *)&long long v68 = v67;
      *((void *)&v68 + 1) = (char *)v67.__locale_ + 24;
      v58 = sub_21695F6C0((uint64_t)&v68 + 8, (long long *)&v71, (long long *)&v72, (char *)v67.__locale_);
      *(void *)&v76[0] = 0;
      *((std::locale *)&v76[0] + 1) = v67;
      *(void *)&v76[1] = v58;
      *((void *)&v76[1] + 1) = *((void *)&v68 + 1);
      v67.__locale_ = 0;
      long long v68 = 0uLL;
      sub_2168EDFA8((void *)a3, &v75);
      *(_OWORD *)(a3 + 16) = *(_OWORD *)((char *)v76 + 8);
      *(void *)(a3 + 32) = *((void *)&v76[1] + 1);
      memset((char *)v76 + 8, 0, 24);
      *(unsigned char *)(a3 + 40) = 1;
      v70.__r_.__value_.__r.__words[0] = (std::string::size_type)v76 + 8;
      sub_216782F20((void ***)&v70);
      sub_2168EE084((uint64_t)&v75);
      v70.__r_.__value_.__r.__words[0] = (std::string::size_type)&v67;
      sub_216782F20((void ***)&v70);
      if (SHIBYTE(v71.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v71.__r_.__value_.__l.__data_);
      }
      if (v74 < 0) {
        operator delete(__p[0]);
      }
    }
    v51 = (void **)&v77;
  }
  else
  {
    memset(v76, 0, sizeof(v76));
    sub_2168EDFA8((void *)a3, &v75);
    *(_OWORD *)(a3 + 16) = *(_OWORD *)((char *)v76 + 8);
    *(void *)(a3 + 32) = *((void *)&v76[1] + 1);
    memset((char *)v76 + 8, 0, 24);
    *(unsigned char *)(a3 + 40) = 0;
    v67.__locale_ = (std::locale::__imp *)((char *)v76 + 8);
    sub_216782F20((void ***)&v67);
    v51 = &v75;
  }
  sub_2168EE084((uint64_t)v51);
}

void sub_2169F4610(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,void *a31,uint64_t a32,int a33,__int16 a34,char a35,char a36,void *a37,uint64_t a38,int a39,__int16 a40,char a41,char a42)
{
  sub_2168EB980(&__p);
  sub_2169F4834(&a14);
  sub_2168EE084(v42 - 112);
  _Unwind_Resume(a1);
}

void *sub_2169F4768(void *a1, long long *a2)
{
  uint64_t v4 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v6 = 170 * ((v5 - v4) >> 3) - 1;
  if (v5 == v4) {
    uint64_t v6 = 0;
  }
  if (v6 == a1[5] + a1[4])
  {
    sub_216A385D0(a1);
    uint64_t v4 = a1[1];
    uint64_t v5 = a1[2];
  }
  if (v5 == v4)
  {
    uint64_t result = 0;
  }
  else
  {
    unint64_t v7 = a1[5] + a1[4];
    uint64_t result = (void *)(*(void *)(v4 + 8 * (v7 / 0xAA)) + 24 * (v7 % 0xAA));
  }
  if (*((char *)a2 + 23) < 0)
  {
    uint64_t result = sub_216778F24(result, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v9 = *a2;
    result[2] = *((void *)a2 + 2);
    *(_OWORD *)uint64_t result = v9;
  }
  ++a1[5];
  return result;
}

uint64_t *sub_2169F4834(uint64_t *a1)
{
  uint64_t v4 = (void **)(a1 + 1);
  sub_216782F20(&v4);
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  return a1;
}

void *pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::StringNode::StringNode(void *a1, uint64_t a2)
{
  *a1 = &unk_26C757460;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 0;
  *(_OWORD *)(a1 + 1) = *(_OWORD *)a2;
  a1[3] = *(void *)(a2 + 16);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  while (v3 != v4)
  {
    if (!*(unsigned char *)(v3 + 24))
    {
      pxrInternal__aapl__pxrReserved__::TfEscapeString(v3, &v7);
      if (*(char *)(v3 + 23) < 0) {
        operator delete(*(void **)v3);
      }
      long long v5 = v7;
      *(void *)(v3 + 16) = v8;
      *(_OWORD *)uint64_t v3 = v5;
    }
    v3 += 32;
  }
  return a1;
}

void sub_2169F496C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_2168706D8((void ***)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::StringNode::Evaluate(pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::StringNode *this@<X0>, pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::EvalContext *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v38 = *MEMORY[0x263EF8340];
  memset(&v28, 0, sizeof(v28));
  uint64_t v4 = *((void *)this + 1);
  uint64_t v5 = *((void *)this + 2);
  if (v4 == v5)
  {
LABEL_30:
    *(void *)(a3 + 8) = &off_26C750BB8;
    sub_21691B31C((unsigned int **)a3, (uint64_t)&v28);
    *(void *)(a3 + 16) = 0;
    *(void *)(a3 + 24) = 0;
    *(void *)(a3 + 32) = 0;
    goto LABEL_31;
  }
  while (1)
  {
    if (!*(unsigned char *)(v4 + 24))
    {
      int v12 = *(char *)(v4 + 23);
      if (v12 >= 0) {
        uint64_t v13 = (const std::string::value_type *)v4;
      }
      else {
        uint64_t v13 = *(const std::string::value_type **)v4;
      }
      if (v12 >= 0) {
        std::string::size_type v14 = *(unsigned __int8 *)(v4 + 23);
      }
      else {
        std::string::size_type v14 = *(void *)(v4 + 8);
      }
      std::string::append(&v28, v13, v14);
      goto LABEL_27;
    }
    long long v36 = 0u;
    long long v37 = 0u;
    char v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::EvalContext::GetVariable((uint64_t)a2, v4, (uint64_t)&v33);
    __p[0] = &v35;
    __p[1] = &v27;
    sub_2169F4CE8((uint64_t *)__p, (uint64_t)&v33);
    __p[0] = v34;
    sub_216782F20((void ***)__p);
    sub_2168EE084((uint64_t)&v33);
    if (v27) {
      break;
    }
    std::string::size_type v8 = *(unsigned __int8 *)(v4 + 23);
    std::string::size_type v9 = *(void *)(v4 + 8);
    BOOL v10 = (v8 & 0x80u) != 0;
    if ((v8 & 0x80u) == 0) {
      unint64_t v11 = (const std::string::value_type *)v4;
    }
    else {
      unint64_t v11 = *(const std::string::value_type **)v4;
    }
LABEL_21:
    if (v10) {
      std::string::size_type v15 = v9;
    }
    else {
      std::string::size_type v15 = v8;
    }
    std::string::append(&v28, v11, v15);
LABEL_26:
    *(void *)&long long v33 = (char *)&v36 + 8;
    sub_216782F20((void ***)&v33);
    sub_2168EE084((uint64_t)&v35);
LABEL_27:
    v4 += 32;
    if (v4 == v5) {
      goto LABEL_30;
    }
  }
  if (!(void)v36)
  {
    uint64_t v17 = *((void *)&v36 + 1);
    uint64_t v16 = v37;
    if (*((void *)&v36 + 1) != (void)v37)
    {
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = v17;
      uint64_t v24 = *((void *)&v37 + 1);
      *(void *)(a3 + 24) = v16;
      *(void *)(a3 + 32) = v24;
      long long v37 = 0uLL;
      *((void *)&v36 + 1) = 0;
      goto LABEL_44;
    }
    goto LABEL_26;
  }
  if (sub_21695C360((pxrInternal__aapl__pxrReserved__::VtValue *)&v35))
  {
    if ((v36 & 4) != 0) {
      uint64_t v7 = (*(uint64_t (**)(uint64_t *))((v36 & 0xFFFFFFFFFFFFFFF8) + 168))(&v35);
    }
    else {
      uint64_t v7 = v35;
    }
    std::string::size_type v8 = *(unsigned __int8 *)(v7 + 23);
    std::string::size_type v9 = *(void *)(v7 + 8);
    BOOL v10 = (v8 & 0x80u) != 0;
    if ((v8 & 0x80u) == 0) {
      unint64_t v11 = (const std::string::value_type *)v7;
    }
    else {
      unint64_t v11 = *(const std::string::value_type **)v7;
    }
    goto LABEL_21;
  }
  if (*(char *)(v4 + 23) < 0) {
    uint64_t v4 = *(void *)v4;
  }
  pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::GetValueTypeName((pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl *)&v35, v25);
  if (v26 >= 0) {
    unint64_t v20 = v25;
  }
  else {
    unint64_t v20 = (void **)v25[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"String value required for substituting variable '%s', got %s.", v18, v19, v4, v20);
  long long v33 = 0uLL;
  v34[0] = 0;
  unint64_t v29 = (void **)&v33;
  char v30 = 0;
  *(void *)&long long v33 = operator new(0x18uLL);
  *((void *)&v33 + 1) = v33;
  v34[0] = v33 + 24;
  v21 = sub_21695F6C0((uint64_t)v34, (long long *)__p, &v33, (char *)v33);
  uint64_t v22 = v33;
  uint64_t v23 = v34[0];
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = v22;
  *(void *)(a3 + 24) = v21;
  *(void *)(a3 + 32) = v23;
  long long v33 = 0uLL;
  v34[0] = 0;
  unint64_t v29 = (void **)&v33;
  sub_216782F20(&v29);
  if (v32 < 0) {
    operator delete(__p[0]);
  }
  if (v26 < 0) {
    operator delete(v25[0]);
  }
LABEL_44:
  *(void *)&long long v33 = (char *)&v36 + 8;
  sub_216782F20((void ***)&v33);
  sub_2168EE084((uint64_t)&v35);
LABEL_31:
  if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v28.__r_.__value_.__l.__data_);
  }
}

void sub_2169F4C6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void **a24,uint64_t a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33)
{
  sub_216782F20(&a24);
  if (a31 < 0) {
    operator delete(__p);
  }
  if (a16 < 0) {
    operator delete(a11);
  }
  sub_2169E8360(v33 - 128);
  if (a23 < 0) {
    operator delete(a18);
  }
  _Unwind_Resume(a1);
}

uint64_t *sub_2169F4CE8(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = (void *)*a1;
  sub_2168ED33C((void *)*a1, (void *)a2);
  sub_21680F80C(v4 + 2);
  *((_OWORD *)v4 + 1) = *(_OWORD *)(a2 + 16);
  v4[4] = *(void *)(a2 + 32);
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 16) = 0;
  *(unsigned char *)a1[1] = *(unsigned char *)(a2 + 40);
  return a1;
}

__n128 pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::VariableNode::VariableNode(uint64_t a1, __n128 *a2)
{
  *(void *)a1 = &unk_26C757488;
  __n128 result = *a2;
  *(void *)(a1 + 24) = a2[1].n128_u64[0];
  *(__n128 *)(a1 + 8) = result;
  a2->n128_u64[1] = 0;
  a2[1].n128_u64[0] = 0;
  a2->n128_u64[0] = 0;
  return result;
}

{
  __n128 result;

  *(void *)a1 = &unk_26C757488;
  __n128 result = *a2;
  *(void *)(a1 + 24) = a2[1].n128_u64[0];
  *(__n128 *)(a1 + 8) = result;
  a2->n128_u64[1] = 0;
  a2[1].n128_u64[0] = 0;
  a2->n128_u64[0] = 0;
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::VariableNode::Evaluate@<X0>(pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::VariableNode *this@<X0>, pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::EvalContext *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  uint64_t v5 = (void *)((char *)this + 8);
  pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::EvalContext::GetVariable((uint64_t)a2, (uint64_t)this + 8, (uint64_t)&v19);
  if (v22)
  {
    sub_2168EE4C4((void *)a3, &v19);
    *(void *)(a3 + 16) = 0;
    *(void *)(a3 + 24) = 0;
    *(void *)(a3 + 32) = 0;
    sub_216812BD8((char *)(a3 + 16), v20, v21, 0xAAAAAAAAAAAAAAABLL * (((char *)v21 - (char *)v20) >> 3));
  }
  else
  {
    if (*((char *)this + 31) < 0) {
      uint64_t v5 = (void *)*v5;
    }
    pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"No value for variable '%s'", v6, v7, v5);
    int v12 = 0;
    uint64_t v13 = 0;
    std::string::size_type v14 = 0;
    std::string::size_type v15 = &v12;
    char v16 = 0;
    int v12 = (void **)operator new(0x18uLL);
    uint64_t v13 = v12;
    std::string::size_type v14 = v12 + 3;
    std::string::size_type v8 = sub_21695F6C0((uint64_t)&v14, &__p, &v19, (char *)v12);
    std::string::size_type v9 = v12;
    BOOL v10 = v14;
    *(void *)(a3 + 8) = 0;
    *(void *)(a3 + 16) = v9;
    *(void *)(a3 + 24) = v8;
    *(void *)(a3 + 32) = v10;
    int v12 = 0;
    uint64_t v13 = 0;
    std::string::size_type v14 = 0;
    std::string::size_type v15 = &v12;
    sub_216782F20((void ***)&v15);
    if (v18 < 0) {
      operator delete((void *)__p);
    }
  }
  int v12 = (void **)&v20;
  sub_216782F20(&v12);
  return sub_2168EE084((uint64_t)&v19);
}

void sub_2169F4F28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void **a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  sub_2169E8360((uint64_t)&a21);
  _Unwind_Resume(a1);
}

void *pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::NoneNode::NoneNode(void *this)
{
  *this = &unk_26C7574B0;
  return this;
}

{
  *this = &unk_26C7574B0;
  return this;
}

double pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::NoneNode::Evaluate@<D0>(uint64_t a1@<X8>)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 8) = 0u;
  return result;
}

__n128 pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ListNode::ListNode(void *a1, __n128 *a2)
{
  *a1 = &unk_26C7574D8;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 0;
  __n128 result = *a2;
  *(__n128 *)(a1 + 1) = *a2;
  a1[3] = a2[1].n128_u64[0];
  a2->n128_u64[0] = 0;
  a2->n128_u64[1] = 0;
  a2[1].n128_u64[0] = 0;
  return result;
}

{
  __n128 result;

  *a1 = &unk_26C7574D8;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 0;
  __n128 result = *a2;
  *(__n128 *)(a1 + 1) = *a2;
  a1[3] = a2[1].n128_u64[0];
  a2->n128_u64[0] = 0;
  a2->n128_u64[1] = 0;
  a2[1].n128_u64[0] = 0;
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ListNode::Evaluate@<X0>(pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ListNode *this@<X0>, void *a2@<X8>)
{
  uint64_t v37 = *MEMORY[0x263EF8340];
  uint64_t v36 = 0;
  std::string v28 = 0;
  unint64_t v29 = 0;
  unint64_t v30 = 0;
  uint64_t v4 = *((void *)this + 1);
  if (*((void *)this + 2) == v4) {
    goto LABEL_27;
  }
  unint64_t v6 = 0;
  do
  {
    (*(void (**)(void *__return_ptr))(**(void **)(v4 + 8 * v6) + 16))(v32);
    if (v33 == v34)
    {
      if ((sub_2169F53C4((uint64_t)v32, (pxrInternal__aapl__pxrReserved__::VtValue *)&v35) & 1) == 0)
      {
        pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::GetValueTypeName((pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl *)v32, v24);
        if (v25 >= 0) {
          std::string::size_type v9 = v24;
        }
        else {
          std::string::size_type v9 = (void **)v24[0];
        }
        pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Unexpected value of type %s in list at element %zu", v7, v8, v9, v6);
        BOOL v10 = v29;
        if ((unint64_t)v29 >= v30)
        {
          unint64_t v12 = 0xAAAAAAAAAAAAAAABLL * (((char *)v29 - (char *)v28) >> 3);
          unint64_t v13 = v12 + 1;
          if (v12 + 1 > 0xAAAAAAAAAAAAAAALL) {
            sub_21677CB10();
          }
          if (0x5555555555555556 * ((uint64_t)(v30 - (void)v28) >> 3) > v13) {
            unint64_t v13 = 0x5555555555555556 * ((uint64_t)(v30 - (void)v28) >> 3);
          }
          if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v30 - (void)v28) >> 3) >= 0x555555555555555) {
            unint64_t v14 = 0xAAAAAAAAAAAAAAALL;
          }
          else {
            unint64_t v14 = v13;
          }
          v31[4] = (void **)&v30;
          if (v14) {
            std::string::size_type v15 = (void **)sub_216782ED8((uint64_t)&v30, v14);
          }
          else {
            std::string::size_type v15 = 0;
          }
          char v16 = &v15[3 * v12];
          v31[0] = v15;
          v31[1] = v16;
          v31[3] = &v15[3 * v14];
          long long v17 = *(_OWORD *)__p;
          v16[2] = v27;
          *(_OWORD *)char v16 = v17;
          __p[1] = 0;
          char v27 = 0;
          __p[0] = 0;
          v31[2] = v16 + 3;
          sub_216790CCC((uint64_t *)&v28, v31);
          char v18 = v29;
          sub_216790E64((uint64_t)v31);
          unint64_t v29 = v18;
          if (SHIBYTE(v27) < 0) {
            operator delete(__p[0]);
          }
        }
        else
        {
          long long v11 = *(_OWORD *)__p;
          *((void *)v29 + 2) = v27;
          long long *v10 = v11;
          __p[1] = 0;
          char v27 = 0;
          __p[0] = 0;
          unint64_t v29 = (long long *)((char *)v10 + 24);
        }
        if (v25 < 0) {
          operator delete(v24[0]);
        }
      }
    }
    else
    {
      sub_216A30E64((uint64_t *)&v28, v29, (uint64_t)v33, v34, 0xAAAAAAAAAAAAAAABLL * (((char *)v34 - (char *)v33) >> 3));
    }
    v31[0] = (void **)&v33;
    sub_216782F20(v31);
    sub_2168EE084((uint64_t)v32);
    ++v6;
    uint64_t v4 = *((void *)this + 1);
  }
  while (v6 < (*((void *)this + 2) - v4) >> 3);
  unint64_t v20 = v28;
  long long v19 = v29;
  if (v28 == v29)
  {
LABEL_27:
    if (v36) {
      sub_2168EDFA8(a2, &v35);
    }
    else {
      a2[1] = (char *)&off_26C757990 + 3;
    }
    char v22 = (long long **)(a2 + 2);
  }
  else
  {
    a2[1] = 0;
    a2[2] = v20;
    unint64_t v21 = v30;
    a2[3] = v19;
    a2[4] = v21;
    char v22 = &v28;
  }
  *char v22 = 0;
  v22[1] = 0;
  v22[2] = 0;
  v31[0] = (void **)&v28;
  sub_216782F20(v31);
  return sub_2168EE084((uint64_t)&v35);
}

void sub_2169F5348(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char *a32)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  if (a17 < 0) {
    operator delete(a12);
  }
  sub_2169E8360((uint64_t)&a32);
  a32 = &a24;
  sub_216782F20((void ***)&a32);
  sub_2168EE084(v32 - 112);
  _Unwind_Resume(a1);
}

uint64_t sub_2169F53C4(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t v3 = (uint64_t *)a1;
  v9[2] = *MEMORY[0x263EF8340];
  switch(sub_2169FCDDC(a1))
  {
    case 0u:
      return sub_216A310C0((uint64_t)v3, a2);
    case 1u:
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 8u:
    case 9u:
    case 0xAu:
    case 0xBu:
    case 0x3Du:
    case 0x3Eu:
    case 0x3Fu:
    case 0x40u:
    case 0x41u:
    case 0x42u:
    case 0x43u:
    case 0x44u:
    case 0x45u:
    case 0x46u:
    case 0x47u:
    case 0x48u:
    case 0x49u:
    case 0x4Au:
    case 0x4Bu:
    case 0x4Cu:
    case 0x4Du:
    case 0x4Eu:
    case 0x4Fu:
    case 0x50u:
    case 0x51u:
    case 0x52u:
    case 0x53u:
    case 0x54u:
    case 0x55u:
    case 0x56u:
    case 0x57u:
    case 0x58u:
    case 0x59u:
    case 0x5Au:
    case 0x5Bu:
    case 0x5Cu:
    case 0x5Du:
      uint64_t v4 = v3[1];
      if ((v4 & 4) != 0) {
        (*(void (**)(uint64_t *))((v4 & 0xFFFFFFFFFFFFFFF8) + 168))(v3);
      }
      goto LABEL_4;
    case 7u:
      uint64_t v6 = v3[1];
      if ((v6 & 4) != 0) {
        uint64_t v3 = (uint64_t *)(*(uint64_t (**)(uint64_t *))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))(v3);
      }
      uint64_t v7 = *v3;
      return sub_216A318E0(a2, v7);
    case 0xCu:
      return sub_216A31110(v3, a2);
    case 0xDu:
      return sub_216A311BC(v3);
    case 0xEu:
      std::string::size_type v8 = v3;
      goto LABEL_21;
    case 0xFu:
      std::string::size_type v8 = v3;
      goto LABEL_21;
    case 0x10u:
      std::string::size_type v8 = v3;
      goto LABEL_21;
    case 0x11u:
      std::string::size_type v8 = v3;
      goto LABEL_21;
    case 0x12u:
      std::string::size_type v8 = v3;
      goto LABEL_21;
    case 0x13u:
      std::string::size_type v8 = v3;
      goto LABEL_21;
    case 0x14u:
      std::string::size_type v8 = v3;
      goto LABEL_21;
    case 0x15u:
      std::string::size_type v8 = v3;
      goto LABEL_21;
    case 0x16u:
      std::string::size_type v8 = v3;
      goto LABEL_21;
    case 0x17u:
      std::string::size_type v8 = v3;
      goto LABEL_21;
    case 0x18u:
      std::string::size_type v8 = v3;
      goto LABEL_21;
    case 0x19u:
      std::string::size_type v8 = v3;
      goto LABEL_21;
    case 0x1Au:
      std::string::size_type v8 = v3;
      goto LABEL_21;
    case 0x1Bu:
      std::string::size_type v8 = v3;
      goto LABEL_21;
    case 0x1Cu:
      std::string::size_type v8 = v3;
      goto LABEL_21;
    case 0x1Du:
      std::string::size_type v8 = v3;
      goto LABEL_21;
    case 0x1Eu:
      std::string::size_type v8 = v3;
      goto LABEL_21;
    case 0x1Fu:
      std::string::size_type v8 = v3;
      goto LABEL_21;
    case 0x20u:
      std::string::size_type v8 = v3;
      goto LABEL_21;
    case 0x21u:
      std::string::size_type v8 = v3;
      goto LABEL_21;
    case 0x22u:
      std::string::size_type v8 = v3;
      goto LABEL_21;
    case 0x23u:
      std::string::size_type v8 = v3;
      goto LABEL_21;
    case 0x24u:
      std::string::size_type v8 = v3;
      goto LABEL_21;
    case 0x25u:
      std::string::size_type v8 = v3;
      goto LABEL_21;
    case 0x26u:
      std::string::size_type v8 = v3;
      goto LABEL_21;
    case 0x27u:
      std::string::size_type v8 = v3;
      goto LABEL_21;
    case 0x28u:
      std::string::size_type v8 = v3;
      goto LABEL_21;
    case 0x29u:
      std::string::size_type v8 = v3;
      goto LABEL_21;
    case 0x2Au:
      std::string::size_type v8 = v3;
      goto LABEL_21;
    case 0x2Bu:
      std::string::size_type v8 = v3;
      goto LABEL_21;
    case 0x2Cu:
      std::string::size_type v8 = v3;
      goto LABEL_21;
    case 0x2Du:
      std::string::size_type v8 = v3;
      goto LABEL_21;
    case 0x2Eu:
      std::string::size_type v8 = v3;
      goto LABEL_21;
    case 0x2Fu:
      std::string::size_type v8 = v3;
      goto LABEL_21;
    case 0x30u:
      std::string::size_type v8 = v3;
      goto LABEL_21;
    case 0x31u:
      std::string::size_type v8 = v3;
      goto LABEL_21;
    case 0x32u:
      std::string::size_type v8 = v3;
      goto LABEL_21;
    case 0x33u:
      std::string::size_type v8 = v3;
      goto LABEL_21;
    case 0x34u:
      std::string::size_type v8 = v3;
      goto LABEL_21;
    case 0x35u:
      std::string::size_type v8 = v3;
      goto LABEL_21;
    case 0x36u:
      std::string::size_type v8 = v3;
      goto LABEL_21;
    case 0x37u:
      std::string::size_type v8 = v3;
      goto LABEL_21;
    case 0x38u:
      std::string::size_type v8 = v3;
      goto LABEL_21;
    case 0x39u:
      std::string::size_type v8 = v3;
      goto LABEL_21;
    case 0x3Au:
      std::string::size_type v8 = v3;
LABEL_21:
      uint64_t result = sub_216A31220(v8);
      break;
    case 0x3Bu:
      uint64_t result = sub_216A31294(v3);
      break;
    case 0x3Cu:
      uint64_t result = sub_216A31308(v3);
      break;
    case 0x5Eu:
      uint64_t result = sub_216A3137C((uint64_t)v3);
      break;
    case 0x5Fu:
      uint64_t result = sub_216A313CC(v3);
      break;
    default:
      sub_2168EE4C4(v9, v3);
      sub_2168EE084((uint64_t)v9);
LABEL_4:
      uint64_t result = 0;
      break;
  }
  return result;
}

const char *pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::IfNode::GetFunctionName(pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::IfNode *this)
{
  return "if";
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::IfNode::_Evaluate@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v56 = *MEMORY[0x263EF8340];
  (*(void (**)(uint64_t *__return_ptr))(**(void **)a1 + 16))(&v51);
  uint64_t v8 = v53;
  uint64_t v7 = v54;
  if (v53 != v54)
  {
    *(void *)(a4 + 8) = 0;
    *(void *)(a4 + 16) = v8;
    uint64_t v9 = v55;
    *(void *)(a4 + 24) = v7;
    *(void *)(a4 + 32) = v9;
    uint64_t v54 = 0;
    uint64_t v55 = 0;
    uint64_t v53 = 0;
    goto LABEL_35;
  }
  if (sub_216959490((pxrInternal__aapl__pxrReserved__::VtValue *)&v51))
  {
    (*(void (**)(void ***__return_ptr))(**(void **)a2 + 16))(&v47);
    if (*(void *)a3)
    {
      (*(void (**)(void **__return_ptr))(**(void **)a3 + 16))(&v44);
      if (*(void *)a3)
      {
        uint64_t Type = pxrInternal__aapl__pxrReserved__::VtValue::GetType((pxrInternal__aapl__pxrReserved__::VtValue *)&v47, v10, v11);
        uint64_t v15 = pxrInternal__aapl__pxrReserved__::VtValue::GetType((pxrInternal__aapl__pxrReserved__::VtValue *)&v44, v13, v14);
        if (v48)
        {
          if (Type != v15 && (void)v45)
          {
            sub_216779094(v35, "if-value and else-value must evaluate to the same type or None.");
            if (v36 >= 0) {
              char v18 = v35;
            }
            else {
              char v18 = (void **)v35[0];
            }
            pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v16, v17, "if", v18);
            uint64_t v37 = 0;
            uint64_t v38 = 0;
            uint64_t v39 = 0;
            uint64_t v40 = &v37;
            char v41 = 0;
            uint64_t v37 = operator new(0x18uLL);
            uint64_t v38 = v37;
            uint64_t v39 = (char *)v37 + 24;
            long long v19 = sub_21695F6C0((uint64_t)&v39, (long long *)__p, (long long *)&v44, (char *)v37);
            unint64_t v20 = v37;
            unint64_t v21 = v39;
            *(void *)(a4 + 8) = 0;
            *(void *)(a4 + 16) = v20;
            *(void *)(a4 + 24) = v19;
            *(void *)(a4 + 32) = v21;
            uint64_t v37 = 0;
            uint64_t v38 = 0;
            uint64_t v39 = 0;
            uint64_t v40 = &v37;
            sub_216782F20(&v40);
            if (v43 < 0) {
              operator delete(__p[0]);
            }
            if (v36 < 0) {
              operator delete(v35[0]);
            }
LABEL_34:
            uint64_t v37 = (char *)&v45 + 8;
            sub_216782F20((void ***)&v37);
            sub_2168EE084((uint64_t)&v44);
            unint64_t v44 = &v49;
            sub_216782F20((void ***)&v44);
            sub_2168EE084((uint64_t)&v47);
            goto LABEL_35;
          }
        }
      }
    }
    else
    {
      long long v46 = 0u;
      long long v45 = 0u;
    }
    if ((v52 & 4) != 0) {
      std::string v28 = (uint64_t *)(*(uint64_t (**)(uint64_t *))((v52 & 0xFFFFFFFFFFFFFFF8) + 168))(&v51);
    }
    else {
      std::string v28 = &v51;
    }
    int v29 = *(unsigned __int8 *)v28;
    if (*(unsigned char *)v28) {
      unint64_t v30 = (void **)&v47;
    }
    else {
      unint64_t v30 = &v44;
    }
    sub_2168EE4C4((void *)a4, v30);
    unint64_t v31 = (long long **)&v45 + 1;
    *(void *)(a4 + 16) = 0;
    *(void *)(a4 + 24) = 0;
    *(void *)(a4 + 32) = 0;
    if (v29) {
      unint64_t v31 = (long long **)&v49;
    }
    uint64_t v32 = *v31;
    uint64_t v33 = (long long **)&v46;
    if (v29) {
      uint64_t v33 = (long long **)&v50;
    }
    sub_216812BD8((char *)(a4 + 16), v32, *v33, 0xAAAAAAAAAAAAAAABLL * (((char *)*v33 - (char *)v32) >> 3));
    goto LABEL_34;
  }
  sub_216779094(&v37, "Condition must be a BOOLean value");
  if (SHIBYTE(v39) >= 0) {
    uint64_t v24 = &v37;
  }
  else {
    uint64_t v24 = v37;
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v22, v23, "if", v24);
  v47 = 0;
  v48 = 0;
  v49 = 0;
  __p[0] = &v47;
  LOBYTE(__p[1]) = 0;
  v47 = (void **)operator new(0x18uLL);
  v48 = v47;
  v49 = v47 + 3;
  char v25 = sub_21695F6C0((uint64_t)&v49, (long long *)&v44, &v46, (char *)v47);
  char v26 = v47;
  char v27 = v49;
  *(void *)(a4 + 8) = 0;
  *(void *)(a4 + 16) = v26;
  *(void *)(a4 + 24) = v25;
  *(void *)(a4 + 32) = v27;
  v47 = 0;
  v48 = 0;
  v49 = 0;
  __p[0] = &v47;
  sub_216782F20((void ***)__p);
  if (SHIBYTE(v45) < 0) {
    operator delete(v44);
  }
  if (SHIBYTE(v39) < 0) {
    operator delete(v37);
  }
LABEL_35:
  v47 = (void **)&v53;
  sub_216782F20(&v47);
  return sub_2168EE084((uint64_t)&v51);
}

void sub_2169F682C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void **a24,uint64_t a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37)
{
  sub_216782F20(&a24);
  if (a31 < 0) {
    operator delete(__p);
  }
  if (a17 < 0) {
    operator delete(a12);
  }
  sub_2169E8360((uint64_t)&a32);
  sub_2169E8360(v37 - 136);
  sub_2169E8360(v37 - 96);
  _Unwind_Resume(a1);
}

void *pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::If2Node::If2Node(void *result, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3 = *a2;
  *a2 = 0;
  *uint64_t result = &unk_26C757500;
  result[1] = v3;
  uint64_t v4 = *a3;
  *a3 = 0;
  result[2] = v4;
  return result;
}

{
  uint64_t v3;
  uint64_t v4;

  uint64_t v3 = *a2;
  *a2 = 0;
  *uint64_t result = &unk_26C757500;
  result[1] = v3;
  uint64_t v4 = *a3;
  *a3 = 0;
  result[2] = v4;
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::If2Node::Evaluate@<X0>(pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::If2Node *this@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = 0;
  return pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::IfNode::_Evaluate((uint64_t)this + 8, (uint64_t)this + 16, (uint64_t)&v4, a2);
}

void *pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::If3Node::If3Node(void *result, uint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v4 = *a2;
  *a2 = 0;
  *uint64_t result = &unk_26C757528;
  result[1] = v4;
  uint64_t v5 = *a3;
  *a3 = 0;
  result[2] = v5;
  uint64_t v6 = *a4;
  *a4 = 0;
  result[3] = v6;
  return result;
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  uint64_t v4 = *a2;
  *a2 = 0;
  *uint64_t result = &unk_26C757528;
  result[1] = v4;
  uint64_t v5 = *a3;
  *a3 = 0;
  result[2] = v5;
  uint64_t v6 = *a4;
  *a4 = 0;
  result[3] = v6;
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::If3Node::Evaluate@<X0>(pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::If3Node *this@<X0>, uint64_t a2@<X8>)
{
  return pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::IfNode::_Evaluate((uint64_t)this + 8, (uint64_t)this + 16, (uint64_t)this + 24, a2);
}

void pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::_Compare<std::equal_to>(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 1;
  *(void *)(a1 + 8) = &unk_26C7501AB;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
}

void pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::_Compare<std::not_equal_to>(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 0;
  *(void *)(a1 + 8) = &unk_26C7501AB;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
}

const char *pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ComparisonNode<std::equal_to>::GetFunctionName()
{
  return "eq";
}

const char *pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ComparisonNode<std::not_equal_to>::GetFunctionName()
{
  return "neq";
}

const char *pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ComparisonNode<std::less>::GetFunctionName()
{
  return "lt";
}

const char *pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ComparisonNode<std::less_equal>::GetFunctionName()
{
  return "leq";
}

const char *pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ComparisonNode<std::greater>::GetFunctionName()
{
  return "gt";
}

const char *pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ComparisonNode<std::greater_equal>::GetFunctionName()
{
  return "geq";
}

const char *pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::LogicalNode<std::logical_and>::GetFunctionName()
{
  return "and";
}

const char *pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::LogicalNode<std::logical_or>::GetFunctionName()
{
  return "or";
}

const char *pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::LogicalNotNode::GetFunctionName(pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::LogicalNotNode *this)
{
  return "not";
}

void *pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::LogicalNotNode::LogicalNotNode(void *result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a2 = 0;
  *uint64_t result = &unk_26C757550;
  result[1] = v2;
  return result;
}

{
  uint64_t v2;

  uint64_t v2 = *a2;
  *a2 = 0;
  *uint64_t result = &unk_26C757550;
  result[1] = v2;
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::LogicalNotNode::Evaluate@<X0>(pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::LogicalNotNode *this@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  (*(void (**)(long long *__return_ptr))(**((void **)this + 1) + 16))(&v29);
  uint64_t v5 = v30;
  uint64_t v4 = v31;
  if (v30 == v31)
  {
    if (sub_216959490((pxrInternal__aapl__pxrReserved__::VtValue *)&v29))
    {
      if ((BYTE8(v29) & 4) != 0) {
        uint64_t v7 = (long long *)(*(uint64_t (**)(long long *))((*((void *)&v29 + 1) & 0xFFFFFFFFFFFFFFF8) + 168))(&v29);
      }
      else {
        uint64_t v7 = &v29;
      }
      *(unsigned char *)a2 = *(unsigned char *)v7 ^ 1;
      *(void *)(a2 + 8) = &unk_26C7501AB;
      *(void *)(a2 + 16) = 0;
      *(void *)(a2 + 24) = 0;
      *(void *)(a2 + 32) = 0;
    }
    else
    {
      pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::GetValueTypeName((pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl *)&v29, v18);
      if (v19 >= 0) {
        BOOL v10 = v18;
      }
      else {
        BOOL v10 = (void **)v18[0];
      }
      pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Invalid type %s for argument", v8, v9, v10);
      if (v21 >= 0) {
        unint64_t v13 = &v20;
      }
      else {
        unint64_t v13 = v20;
      }
      pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v11, v12, "not", v13);
      char v22 = 0;
      uint64_t v23 = 0;
      uint64_t v24 = 0;
      char v25 = &v22;
      char v26 = 0;
      char v22 = (void **)operator new(0x18uLL);
      uint64_t v23 = v22;
      uint64_t v24 = v22 + 3;
      unint64_t v14 = sub_21695F6C0((uint64_t)&v24, &__p, &v29, (char *)v22);
      uint64_t v15 = v22;
      char v16 = v24;
      *(void *)(a2 + 8) = 0;
      *(void *)(a2 + 16) = v15;
      *(void *)(a2 + 24) = v14;
      *(void *)(a2 + 32) = v16;
      char v22 = 0;
      uint64_t v23 = 0;
      uint64_t v24 = 0;
      char v25 = &v22;
      sub_216782F20((void ***)&v25);
      if (v28 < 0) {
        operator delete((void *)__p);
      }
      if (v21 < 0) {
        operator delete(v20);
      }
      if (v19 < 0) {
        operator delete(v18[0]);
      }
    }
  }
  else
  {
    *(void *)(a2 + 8) = 0;
    *(void *)(a2 + 16) = v5;
    uint64_t v6 = v32;
    *(void *)(a2 + 24) = v4;
    *(void *)(a2 + 32) = v6;
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v30 = 0;
  }
  char v22 = (void **)&v30;
  sub_216782F20(&v22);
  return sub_2168EE084((uint64_t)&v29);
}

void sub_2169F6D58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  sub_2169E8360(v33 - 80);
  _Unwind_Resume(a1);
}

const char *pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ContainsNode::GetFunctionName(pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ContainsNode *this)
{
  return "contains";
}

void *pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ContainsNode::ContainsNode(void *result, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3 = *a2;
  *a2 = 0;
  *uint64_t result = &unk_26C757578;
  result[1] = v3;
  uint64_t v4 = *a3;
  *a3 = 0;
  result[2] = v4;
  return result;
}

{
  uint64_t v3;
  uint64_t v4;

  uint64_t v3 = *a2;
  *a2 = 0;
  *uint64_t result = &unk_26C757578;
  result[1] = v3;
  uint64_t v4 = *a3;
  *a3 = 0;
  result[2] = v4;
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ContainsNode::Evaluate@<X0>(pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ContainsNode *this@<X0>, void *a2@<X8>)
{
  v16[3] = *MEMORY[0x263EF8340];
  (*(void (**)(char ***__return_ptr))(**((void **)this + 1) + 16))(v15);
  (*(void (**)(void ***__return_ptr))(**((void **)this + 2) + 16))(v13);
  sub_2169E63F4((uint64_t)v15, (uint64_t)v13, (uint64_t)&v9);
  uint64_t v6 = v9;
  uint64_t v5 = v10;
  if (v9 == v10)
  {
    if (sub_2169F7010((pxrInternal__aapl__pxrReserved__::VtValue *)v15))
    {
      *(unsigned char *)a2 = 0;
      a2[1] = &unk_26C7501AB;
      a2[2] = 0;
      a2[3] = 0;
      a2[4] = 0;
    }
    else
    {
      unint64_t v12 = v13;
      sub_2169F709C(v15, (pxrInternal__aapl__pxrReserved__::VtValue **)&v12, a2);
    }
  }
  else
  {
    a2[1] = 0;
    a2[2] = v6;
    uint64_t v7 = v11;
    a2[3] = v5;
    a2[4] = v7;
    BOOL v10 = 0;
    uint64_t v11 = 0;
    uint64_t v9 = 0;
  }
  unint64_t v12 = &v9;
  sub_216782F20((void ***)&v12);
  uint64_t v9 = (void **)&v14;
  sub_216782F20(&v9);
  sub_2168EE084((uint64_t)v13);
  v13[0] = (void **)v16;
  sub_216782F20(v13);
  return sub_2168EE084((uint64_t)v15);
}

void sub_2169F6FC8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va3, a2);
  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v3 = va_arg(va1, void);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  va_copy(va2, va1);
  va_arg(va2, void);
  va_copy(va3, va2);
  uint64_t v9 = va_arg(va3, void);
  uint64_t v11 = va_arg(va3, void);
  uint64_t v12 = va_arg(va3, void);
  uint64_t v13 = va_arg(va3, void);
  uint64_t v14 = va_arg(va3, void);
  va_copy((va_list)v7, va);
  sub_216782F20((void ***)va1);
  sub_2169E8360((uint64_t)va2);
  sub_2169E8360((uint64_t)va3);
  _Unwind_Resume(a1);
}

uint64_t sub_2169F7010(pxrInternal__aapl__pxrReserved__::VtValue *a1)
{
  uint64_t v1 = *((void *)a1 + 1);
  if (!v1) {
    return 0;
  }
  if (!strcmp((const char *)(*(void *)(*(void *)(v1 & 0xFFFFFFFFFFFFFFF8) + 8) & 0x7FFFFFFFFFFFFFFFLL), (const char *)(0x800000021746A11FLL & 0x7FFFFFFFFFFFFFFFLL)))return 1; {
  if ((v1 & 4) == 0)
  }
    return 0;

  return pxrInternal__aapl__pxrReserved__::VtValue::_TypeIsImpl(a1, &stru_26C757900);
}

void sub_2169F709C(char ***a1@<X0>, pxrInternal__aapl__pxrReserved__::VtValue **a2@<X1>, void *a3@<X8>)
{
  switch(sub_2169FCDDC((uint64_t)a1))
  {
    case 0u:
      uint64_t v6 = a1[1];
      if ((v6 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v6 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A32210(a3);
      break;
    case 1u:
      uint64_t v7 = a1[1];
      if ((v7 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v7 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A323B8(a3);
      break;
    case 2u:
      uint64_t v8 = a1[1];
      if ((v8 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v8 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A32428(a3);
      break;
    case 3u:
      uint64_t v9 = a1[1];
      if ((v9 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v9 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A32498(a3);
      break;
    case 4u:
      BOOL v10 = a1[1];
      if ((v10 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A32508(a3);
      break;
    case 5u:
      uint64_t v11 = a1[1];
      if ((v11 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v11 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A32578(a3);
      break;
    case 6u:
      uint64_t v12 = a1[1];
      if ((v12 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v12 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A325E8(a3);
      break;
    case 7u:
      uint64_t v13 = a1[1];
      if ((v13 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v13 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A32658(a3);
      break;
    case 8u:
      uint64_t v14 = a1[1];
      if ((v14 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v14 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A326C8(a3);
      break;
    case 9u:
      uint64_t v15 = a1[1];
      if ((v15 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v15 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A32738(a3);
      break;
    case 0xAu:
      char v16 = a1[1];
      if ((v16 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v16 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A327A8(a3);
      break;
    case 0xBu:
      long long v17 = a1[1];
      if ((v17 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v17 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A32818(a3);
      break;
    case 0xCu:
      char v18 = a1[1];
      if ((v18 & 4) != 0) {
        char v19 = (char **)(*(uint64_t (**)(char ***))(((unint64_t)v18 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      else {
        char v19 = *a1;
      }
      sub_216A32888(a2, v19, a3);
      break;
    case 0xDu:
      unint64_t v20 = a1[1];
      if ((v20 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v20 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A32968(a3);
      break;
    case 0xEu:
      char v21 = a1[1];
      if ((v21 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v21 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A329D8(a3);
      break;
    case 0xFu:
      char v22 = a1[1];
      if ((v22 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v22 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A32A48(a3);
      break;
    case 0x10u:
      uint64_t v23 = a1[1];
      if ((v23 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v23 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A32AB8(a3);
      break;
    case 0x11u:
      uint64_t v24 = a1[1];
      if ((v24 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v24 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A32B28(a3);
      break;
    case 0x12u:
      char v25 = a1[1];
      if ((v25 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v25 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A32B98(a3);
      break;
    case 0x13u:
      char v26 = a1[1];
      if ((v26 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v26 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A32C08(a3);
      break;
    case 0x14u:
      char v27 = a1[1];
      if ((v27 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v27 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A32C78(a3);
      break;
    case 0x15u:
      char v28 = a1[1];
      if ((v28 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v28 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A32CE8(a3);
      break;
    case 0x16u:
      long long v29 = a1[1];
      if ((v29 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v29 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A32D58(a3);
      break;
    case 0x17u:
      uint64_t v30 = a1[1];
      if ((v30 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v30 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A32DC8(a3);
      break;
    case 0x18u:
      uint64_t v31 = a1[1];
      if ((v31 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v31 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A32E38(a3);
      break;
    case 0x19u:
      uint64_t v32 = a1[1];
      if ((v32 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v32 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A32EA8(a3);
      break;
    case 0x1Au:
      uint64_t v33 = a1[1];
      if ((v33 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v33 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A32F18(a3);
      break;
    case 0x1Bu:
      unint64_t v34 = a1[1];
      if ((v34 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v34 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A32F88(a3);
      break;
    case 0x1Cu:
      uint64_t v35 = a1[1];
      if ((v35 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v35 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A32FF8(a3);
      break;
    case 0x1Du:
      char v36 = a1[1];
      if ((v36 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v36 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A33068(a3);
      break;
    case 0x1Eu:
      uint64_t v37 = a1[1];
      if ((v37 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v37 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A330D8(a3);
      break;
    case 0x1Fu:
      uint64_t v38 = a1[1];
      if ((v38 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v38 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A33148(a3);
      break;
    case 0x20u:
      uint64_t v39 = a1[1];
      if ((v39 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v39 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A331B8(a3);
      break;
    case 0x21u:
      uint64_t v40 = a1[1];
      if ((v40 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v40 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A33228(a3);
      break;
    case 0x22u:
      char v41 = a1[1];
      if ((v41 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v41 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A33298(a3);
      break;
    case 0x23u:
      uint64_t v42 = a1[1];
      if ((v42 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v42 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A33308(a3);
      break;
    case 0x24u:
      char v43 = a1[1];
      if ((v43 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v43 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A33378(a3);
      break;
    case 0x25u:
      unint64_t v44 = a1[1];
      if ((v44 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v44 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A333E8(a3);
      break;
    case 0x26u:
      long long v45 = a1[1];
      if ((v45 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v45 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A33458(a3);
      break;
    case 0x27u:
      long long v46 = a1[1];
      if ((v46 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v46 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A334C8(a3);
      break;
    case 0x28u:
      v47 = a1[1];
      if ((v47 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v47 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A33538(a3);
      break;
    case 0x29u:
      v48 = a1[1];
      if ((v48 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v48 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A335A8(a3);
      break;
    case 0x2Au:
      v49 = a1[1];
      if ((v49 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v49 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A33618(a3);
      break;
    case 0x2Bu:
      uint64_t v50 = a1[1];
      if ((v50 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v50 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A33688(a3);
      break;
    case 0x2Cu:
      uint64_t v51 = a1[1];
      if ((v51 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v51 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A336F8(a3);
      break;
    case 0x2Du:
      uint64_t v52 = a1[1];
      if ((v52 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v52 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A33768(a3);
      break;
    case 0x2Eu:
      uint64_t v53 = a1[1];
      if ((v53 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v53 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A337D8(a3);
      break;
    case 0x2Fu:
      uint64_t v54 = a1[1];
      if ((v54 & 4) != 0) {
        uint64_t v55 = (size_t *)(*(uint64_t (**)(char ***))(((unint64_t)v54 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      else {
        uint64_t v55 = (size_t *)*a1;
      }
      sub_216A33848(a2, v55, a3);
      break;
    case 0x30u:
      uint64_t v56 = a1[1];
      if ((v56 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v56 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A33954(a3);
      break;
    case 0x31u:
      v57 = a1[1];
      if ((v57 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v57 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A339C4(a3);
      break;
    case 0x32u:
      v58 = a1[1];
      if ((v58 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v58 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A33A34(a3);
      break;
    case 0x33u:
      v59 = a1[1];
      if ((v59 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v59 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A33AA4(a3);
      break;
    case 0x34u:
      v60 = a1[1];
      if ((v60 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v60 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A33B14(a3);
      break;
    case 0x35u:
      v61 = a1[1];
      if ((v61 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v61 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A33B84(a3);
      break;
    case 0x36u:
      v62 = a1[1];
      if ((v62 & 4) != 0) {
        std::string::size_type v63 = (uint64_t *)(*(uint64_t (**)(char ***))(((unint64_t)v62 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      else {
        std::string::size_type v63 = (uint64_t *)*a1;
      }
      sub_216A33BF4(a2, v63, a3);
      break;
    case 0x37u:
      v64 = a1[1];
      if ((v64 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v64 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A33D0C(a3);
      break;
    case 0x38u:
      uint64_t v65 = a1[1];
      if ((v65 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v65 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A33D7C(a3);
      break;
    case 0x39u:
      uint64_t v66 = a1[1];
      if ((v66 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v66 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A33DEC(a3);
      break;
    case 0x3Au:
      std::locale v67 = a1[1];
      if ((v67 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v67 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A33E5C(a3);
      break;
    case 0x3Bu:
      long long v68 = a1[1];
      if ((v68 & 4) != 0) {
        uint64_t v69 = (char **)(*(uint64_t (**)(char ***))(((unint64_t)v68 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      else {
        uint64_t v69 = *a1;
      }
      sub_216A33ECC(a2, v69, a3);
      break;
    case 0x3Cu:
      std::string v70 = a1[1];
      if ((v70 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v70 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A33FD8(a3);
      break;
    case 0x3Du:
      std::string v71 = a1[1];
      if ((v71 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v71 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A34048(a3);
      break;
    case 0x3Eu:
      uint64_t v72 = a1[1];
      if ((v72 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v72 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A340B8(a3);
      break;
    case 0x3Fu:
      v73 = a1[1];
      if ((v73 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v73 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A34128(a3);
      break;
    case 0x40u:
      char v74 = a1[1];
      if ((v74 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v74 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A34198(a3);
      break;
    case 0x41u:
      v75 = a1[1];
      if ((v75 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v75 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A34208(a3);
      break;
    case 0x42u:
      v76 = a1[1];
      if ((v76 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v76 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A34278(a3);
      break;
    case 0x43u:
      v77 = a1[1];
      if ((v77 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v77 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A342E8(a3);
      break;
    case 0x44u:
      uint64_t v78 = a1[1];
      if ((v78 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v78 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A34358(a3);
      break;
    case 0x45u:
      uint64_t v79 = a1[1];
      if ((v79 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v79 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A343C8(a3);
      break;
    case 0x46u:
      v80 = a1[1];
      if ((v80 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v80 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A34438(a3);
      break;
    case 0x47u:
      v81 = a1[1];
      if ((v81 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v81 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A344A8(a3);
      break;
    case 0x48u:
      v82 = a1[1];
      if ((v82 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v82 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A34518(a3);
      break;
    case 0x49u:
      v83 = a1[1];
      if ((v83 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v83 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A34588(a3);
      break;
    case 0x4Au:
      v84 = a1[1];
      if ((v84 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v84 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A345F8(a3);
      break;
    case 0x4Bu:
      v85 = a1[1];
      if ((v85 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v85 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A34668(a3);
      break;
    case 0x4Cu:
      v86 = a1[1];
      if ((v86 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v86 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A346D8(a3);
      break;
    case 0x4Du:
      v87 = a1[1];
      if ((v87 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v87 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A34748(a3);
      break;
    case 0x4Eu:
      v88 = a1[1];
      if ((v88 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v88 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A347B8(a3);
      break;
    case 0x4Fu:
      v89 = a1[1];
      if ((v89 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v89 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A34828(a3);
      break;
    case 0x50u:
      v90 = a1[1];
      if ((v90 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v90 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A34898(a3);
      break;
    case 0x51u:
      v91 = a1[1];
      if ((v91 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v91 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A34908(a3);
      break;
    case 0x52u:
      v92 = a1[1];
      if ((v92 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v92 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A34978(a3);
      break;
    case 0x53u:
      v93 = a1[1];
      if ((v93 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v93 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A349E8(a3);
      break;
    case 0x54u:
      v94 = a1[1];
      if ((v94 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v94 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A34A58(a3);
      break;
    case 0x55u:
      v95 = a1[1];
      if ((v95 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v95 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A34AC8(a3);
      break;
    case 0x56u:
      v96 = a1[1];
      if ((v96 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v96 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A34B38(a3);
      break;
    case 0x57u:
      v97 = a1[1];
      if ((v97 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v97 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A34BA8(a3);
      break;
    case 0x58u:
      v98 = a1[1];
      if ((v98 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v98 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A34C18(a3);
      break;
    case 0x59u:
      v99 = a1[1];
      if ((v99 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v99 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A34C88(a3);
      break;
    case 0x5Au:
      v100 = a1[1];
      if ((v100 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v100 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A34CF8(a3);
      break;
    case 0x5Bu:
      v101 = a1[1];
      if ((v101 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v101 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A34D68(a3);
      break;
    case 0x5Cu:
      v102 = a1[1];
      if ((v102 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v102 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A34DD8(a3);
      break;
    case 0x5Du:
      v103 = a1[1];
      if ((v103 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v103 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A34E48(a3);
      break;
    case 0x5Eu:
      v104 = a1[1];
      if ((v104 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v104 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A34EB8(a3);
      break;
    case 0x5Fu:
      v105 = a1[1];
      if ((v105 & 4) != 0) {
        (*(void (**)(char ***))(((unint64_t)v105 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A34F28(a3);
      break;
    default:
      sub_216A34F98(a3);
      break;
  }
}

const char *pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::AtNode::GetFunctionName(pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::AtNode *this)
{
  return "at";
}

void *pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::AtNode::AtNode(void *result, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3 = *a2;
  *a2 = 0;
  *uint64_t result = &unk_26C7575A0;
  result[1] = v3;
  uint64_t v4 = *a3;
  *a3 = 0;
  result[2] = v4;
  return result;
}

{
  uint64_t v3;
  uint64_t v4;

  uint64_t v3 = *a2;
  *a2 = 0;
  *uint64_t result = &unk_26C7575A0;
  result[1] = v3;
  uint64_t v4 = *a3;
  *a3 = 0;
  result[2] = v4;
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::AtNode::Evaluate@<X0>(pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::AtNode *this@<X0>, uint64_t a2@<X8>)
{
  v32[3] = *MEMORY[0x263EF8340];
  (*(void (**)(uint64_t *__return_ptr))(**((void **)this + 1) + 16))(v31);
  (*(void (**)(long long *__return_ptr))(**((void **)this + 2) + 16))(&v29);
  sub_2169E63F4((uint64_t)v31, (uint64_t)&v29, (uint64_t)&v22);
  uint64_t v6 = v22;
  uint64_t v5 = v23;
  if (v22 == v23)
  {
    if (sub_2169F9268((pxrInternal__aapl__pxrReserved__::VtValue *)&v29))
    {
      if ((BYTE8(v29) & 4) != 0) {
        uint64_t v8 = (void ***)(*(uint64_t (**)(long long *))((*((void *)&v29 + 1) & 0xFFFFFFFFFFFFFFF8) + 168))(&v29);
      }
      else {
        uint64_t v8 = (void ***)&v29;
      }
      char v19 = *v8;
      sub_2169F92A0(v31, (uint64_t *)&v19, (unsigned int **)a2);
    }
    else
    {
      sub_216779094(v17, "Index must be an integer");
      if (v18 >= 0) {
        uint64_t v11 = v17;
      }
      else {
        uint64_t v11 = (void **)v17[0];
      }
      pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v9, v10, "at", v11);
      char v19 = 0;
      unint64_t v20 = 0;
      char v21 = 0;
      char v25 = &v19;
      char v26 = 0;
      char v19 = (void **)operator new(0x18uLL);
      unint64_t v20 = v19;
      char v21 = v19 + 3;
      uint64_t v12 = sub_21695F6C0((uint64_t)&v21, &__p, &v29, (char *)v19);
      uint64_t v13 = v19;
      uint64_t v14 = v21;
      *(void *)(a2 + 8) = 0;
      *(void *)(a2 + 16) = v13;
      *(void *)(a2 + 24) = v12;
      *(void *)(a2 + 32) = v14;
      char v19 = 0;
      unint64_t v20 = 0;
      char v21 = 0;
      char v25 = &v19;
      sub_216782F20((void ***)&v25);
      if (v28 < 0) {
        operator delete((void *)__p);
      }
      if (v18 < 0) {
        operator delete(v17[0]);
      }
    }
  }
  else
  {
    *(void *)(a2 + 8) = 0;
    *(void *)(a2 + 16) = v6;
    uint64_t v7 = v24;
    *(void *)(a2 + 24) = v5;
    *(void *)(a2 + 32) = v7;
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    char v22 = 0;
  }
  char v19 = (void **)&v22;
  sub_216782F20(&v19);
  char v22 = (void **)&v30;
  sub_216782F20(&v22);
  uint64_t v15 = (void ***)sub_2168EE084((uint64_t)&v29);
  *(void *)&long long v29 = v32;
  sub_216782F20(v15);
  return sub_2168EE084((uint64_t)v31);
}

void sub_2169F91D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, char *a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  a18 = &a21;
  sub_216782F20((void ***)&a18);
  sub_2169E8360(v31 - 120);
  sub_2169E8360(v31 - 80);
  _Unwind_Resume(a1);
}

uint64_t sub_2169F9268(pxrInternal__aapl__pxrReserved__::VtValue *a1)
{
  uint64_t v1 = *((void *)a1 + 1);
  if (!v1) {
    return 0;
  }
  if (*(_DWORD *)((v1 & 0xFFFFFFFFFFFFFFF8) + 16) == 7) {
    return 1;
  }
  if ((v1 & 4) != 0) {
    return pxrInternal__aapl__pxrReserved__::VtValue::_TypeIsImpl(a1, MEMORY[0x263F8C290]);
  }
  else {
    return 0;
  }
}

void sub_2169F92A0(uint64_t *a1@<X0>, uint64_t *a2@<X1>, unsigned int **a3@<X8>)
{
  switch(sub_2169FCDDC((uint64_t)a1))
  {
    case 0u:
      uint64_t v6 = a1[1];
      if ((v6 & 4) != 0) {
        (*(void (**)(uint64_t *))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A35008(a3);
      break;
    case 1u:
      uint64_t v7 = a1[1];
      if ((v7 & 4) != 0) {
        (*(void (**)(uint64_t *))((v7 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A351B0(a3);
      break;
    case 2u:
      uint64_t v8 = a1[1];
      if ((v8 & 4) != 0) {
        (*(void (**)(uint64_t *))((v8 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A35220(a3);
      break;
    case 3u:
      uint64_t v9 = a1[1];
      if ((v9 & 4) != 0) {
        (*(void (**)(uint64_t *))((v9 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A35290(a3);
      break;
    case 4u:
      uint64_t v10 = a1[1];
      if ((v10 & 4) != 0) {
        (*(void (**)(uint64_t *))((v10 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A35300(a3);
      break;
    case 5u:
      uint64_t v11 = a1[1];
      if ((v11 & 4) != 0) {
        (*(void (**)(uint64_t *))((v11 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A35370(a3);
      break;
    case 6u:
      uint64_t v12 = a1[1];
      if ((v12 & 4) != 0) {
        (*(void (**)(uint64_t *))((v12 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A353E0(a3);
      break;
    case 7u:
      uint64_t v13 = a1[1];
      if ((v13 & 4) != 0) {
        (*(void (**)(uint64_t *))((v13 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A35450(a3);
      break;
    case 8u:
      uint64_t v14 = a1[1];
      if ((v14 & 4) != 0) {
        (*(void (**)(uint64_t *))((v14 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A354C0(a3);
      break;
    case 9u:
      uint64_t v15 = a1[1];
      if ((v15 & 4) != 0) {
        (*(void (**)(uint64_t *))((v15 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A35530(a3);
      break;
    case 0xAu:
      uint64_t v16 = a1[1];
      if ((v16 & 4) != 0) {
        (*(void (**)(uint64_t *))((v16 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A355A0(a3);
      break;
    case 0xBu:
      uint64_t v17 = a1[1];
      if ((v17 & 4) != 0) {
        (*(void (**)(uint64_t *))((v17 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A35610(a3);
      break;
    case 0xCu:
      uint64_t v18 = a1[1];
      if ((v18 & 4) != 0) {
        uint64_t v19 = (*(uint64_t (**)(uint64_t *))((v18 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      else {
        uint64_t v19 = *a1;
      }
      sub_216A35680(a2, v19, a3);
      break;
    case 0xDu:
      uint64_t v20 = a1[1];
      if ((v20 & 4) != 0) {
        (*(void (**)(uint64_t *))((v20 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A35754(a3);
      break;
    case 0xEu:
      uint64_t v21 = a1[1];
      if ((v21 & 4) != 0) {
        (*(void (**)(uint64_t *))((v21 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A357C4(a3);
      break;
    case 0xFu:
      uint64_t v22 = a1[1];
      if ((v22 & 4) != 0) {
        (*(void (**)(uint64_t *))((v22 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A35834(a3);
      break;
    case 0x10u:
      uint64_t v23 = a1[1];
      if ((v23 & 4) != 0) {
        (*(void (**)(uint64_t *))((v23 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A358A4(a3);
      break;
    case 0x11u:
      uint64_t v24 = a1[1];
      if ((v24 & 4) != 0) {
        (*(void (**)(uint64_t *))((v24 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A35914(a3);
      break;
    case 0x12u:
      uint64_t v25 = a1[1];
      if ((v25 & 4) != 0) {
        (*(void (**)(uint64_t *))((v25 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A35984(a3);
      break;
    case 0x13u:
      uint64_t v26 = a1[1];
      if ((v26 & 4) != 0) {
        (*(void (**)(uint64_t *))((v26 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A359F4(a3);
      break;
    case 0x14u:
      uint64_t v27 = a1[1];
      if ((v27 & 4) != 0) {
        (*(void (**)(uint64_t *))((v27 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A35A64(a3);
      break;
    case 0x15u:
      uint64_t v28 = a1[1];
      if ((v28 & 4) != 0) {
        (*(void (**)(uint64_t *))((v28 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A35AD4(a3);
      break;
    case 0x16u:
      uint64_t v29 = a1[1];
      if ((v29 & 4) != 0) {
        (*(void (**)(uint64_t *))((v29 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A35B44(a3);
      break;
    case 0x17u:
      uint64_t v30 = a1[1];
      if ((v30 & 4) != 0) {
        (*(void (**)(uint64_t *))((v30 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A35BB4(a3);
      break;
    case 0x18u:
      uint64_t v31 = a1[1];
      if ((v31 & 4) != 0) {
        (*(void (**)(uint64_t *))((v31 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A35C24(a3);
      break;
    case 0x19u:
      uint64_t v32 = a1[1];
      if ((v32 & 4) != 0) {
        (*(void (**)(uint64_t *))((v32 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A35C94(a3);
      break;
    case 0x1Au:
      uint64_t v33 = a1[1];
      if ((v33 & 4) != 0) {
        (*(void (**)(uint64_t *))((v33 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A35D04(a3);
      break;
    case 0x1Bu:
      uint64_t v34 = a1[1];
      if ((v34 & 4) != 0) {
        (*(void (**)(uint64_t *))((v34 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A35D74(a3);
      break;
    case 0x1Cu:
      uint64_t v35 = a1[1];
      if ((v35 & 4) != 0) {
        (*(void (**)(uint64_t *))((v35 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A35DE4(a3);
      break;
    case 0x1Du:
      uint64_t v36 = a1[1];
      if ((v36 & 4) != 0) {
        (*(void (**)(uint64_t *))((v36 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A35E54(a3);
      break;
    case 0x1Eu:
      uint64_t v37 = a1[1];
      if ((v37 & 4) != 0) {
        (*(void (**)(uint64_t *))((v37 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A35EC4(a3);
      break;
    case 0x1Fu:
      uint64_t v38 = a1[1];
      if ((v38 & 4) != 0) {
        (*(void (**)(uint64_t *))((v38 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A35F34(a3);
      break;
    case 0x20u:
      uint64_t v39 = a1[1];
      if ((v39 & 4) != 0) {
        (*(void (**)(uint64_t *))((v39 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A35FA4(a3);
      break;
    case 0x21u:
      uint64_t v40 = a1[1];
      if ((v40 & 4) != 0) {
        (*(void (**)(uint64_t *))((v40 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A36014(a3);
      break;
    case 0x22u:
      uint64_t v41 = a1[1];
      if ((v41 & 4) != 0) {
        (*(void (**)(uint64_t *))((v41 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A36084(a3);
      break;
    case 0x23u:
      uint64_t v42 = a1[1];
      if ((v42 & 4) != 0) {
        (*(void (**)(uint64_t *))((v42 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A360F4(a3);
      break;
    case 0x24u:
      uint64_t v43 = a1[1];
      if ((v43 & 4) != 0) {
        (*(void (**)(uint64_t *))((v43 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A36164(a3);
      break;
    case 0x25u:
      uint64_t v44 = a1[1];
      if ((v44 & 4) != 0) {
        (*(void (**)(uint64_t *))((v44 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A361D4(a3);
      break;
    case 0x26u:
      uint64_t v45 = a1[1];
      if ((v45 & 4) != 0) {
        (*(void (**)(uint64_t *))((v45 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A36244(a3);
      break;
    case 0x27u:
      uint64_t v46 = a1[1];
      if ((v46 & 4) != 0) {
        (*(void (**)(uint64_t *))((v46 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A362B4(a3);
      break;
    case 0x28u:
      uint64_t v47 = a1[1];
      if ((v47 & 4) != 0) {
        (*(void (**)(uint64_t *))((v47 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A36324(a3);
      break;
    case 0x29u:
      uint64_t v48 = a1[1];
      if ((v48 & 4) != 0) {
        (*(void (**)(uint64_t *))((v48 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A36394(a3);
      break;
    case 0x2Au:
      uint64_t v49 = a1[1];
      if ((v49 & 4) != 0) {
        (*(void (**)(uint64_t *))((v49 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A36404(a3);
      break;
    case 0x2Bu:
      uint64_t v50 = a1[1];
      if ((v50 & 4) != 0) {
        (*(void (**)(uint64_t *))((v50 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A36474(a3);
      break;
    case 0x2Cu:
      uint64_t v51 = a1[1];
      if ((v51 & 4) != 0) {
        (*(void (**)(uint64_t *))((v51 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A364E4(a3);
      break;
    case 0x2Du:
      uint64_t v52 = a1[1];
      if ((v52 & 4) != 0) {
        (*(void (**)(uint64_t *))((v52 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A36554(a3);
      break;
    case 0x2Eu:
      uint64_t v53 = a1[1];
      if ((v53 & 4) != 0) {
        (*(void (**)(uint64_t *))((v53 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A365C4(a3);
      break;
    case 0x2Fu:
      uint64_t v54 = a1[1];
      if ((v54 & 4) != 0) {
        uint64_t v55 = (void *)(*(uint64_t (**)(uint64_t *))((v54 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      else {
        uint64_t v55 = (void *)*a1;
      }
      sub_216A36634(a2, v55, a3);
      break;
    case 0x30u:
      uint64_t v56 = a1[1];
      if ((v56 & 4) != 0) {
        (*(void (**)(uint64_t *))((v56 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A366E8(a3);
      break;
    case 0x31u:
      uint64_t v57 = a1[1];
      if ((v57 & 4) != 0) {
        (*(void (**)(uint64_t *))((v57 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A36758(a3);
      break;
    case 0x32u:
      uint64_t v58 = a1[1];
      if ((v58 & 4) != 0) {
        (*(void (**)(uint64_t *))((v58 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A367C8(a3);
      break;
    case 0x33u:
      uint64_t v59 = a1[1];
      if ((v59 & 4) != 0) {
        (*(void (**)(uint64_t *))((v59 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A36838(a3);
      break;
    case 0x34u:
      uint64_t v60 = a1[1];
      if ((v60 & 4) != 0) {
        (*(void (**)(uint64_t *))((v60 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A368A8(a3);
      break;
    case 0x35u:
      uint64_t v61 = a1[1];
      if ((v61 & 4) != 0) {
        (*(void (**)(uint64_t *))((v61 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A36918(a3);
      break;
    case 0x36u:
      uint64_t v62 = a1[1];
      if ((v62 & 4) != 0) {
        std::string::size_type v63 = (void *)(*(uint64_t (**)(uint64_t *))((v62 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      else {
        std::string::size_type v63 = (void *)*a1;
      }
      sub_216A36988(a2, v63, a3);
      break;
    case 0x37u:
      uint64_t v64 = a1[1];
      if ((v64 & 4) != 0) {
        (*(void (**)(uint64_t *))((v64 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A36A3C(a3);
      break;
    case 0x38u:
      uint64_t v65 = a1[1];
      if ((v65 & 4) != 0) {
        (*(void (**)(uint64_t *))((v65 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A36AAC(a3);
      break;
    case 0x39u:
      uint64_t v66 = a1[1];
      if ((v66 & 4) != 0) {
        (*(void (**)(uint64_t *))((v66 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A36B1C(a3);
      break;
    case 0x3Au:
      uint64_t v67 = a1[1];
      if ((v67 & 4) != 0) {
        (*(void (**)(uint64_t *))((v67 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A36B8C(a3);
      break;
    case 0x3Bu:
      uint64_t v68 = a1[1];
      if ((v68 & 4) != 0) {
        uint64_t v69 = (void *)(*(uint64_t (**)(uint64_t *))((v68 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      else {
        uint64_t v69 = (void *)*a1;
      }
      sub_216A36BFC(a2, v69, a3);
      break;
    case 0x3Cu:
      uint64_t v70 = a1[1];
      if ((v70 & 4) != 0) {
        (*(void (**)(uint64_t *))((v70 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A36CB4(a3);
      break;
    case 0x3Du:
      uint64_t v71 = a1[1];
      if ((v71 & 4) != 0) {
        (*(void (**)(uint64_t *))((v71 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A36D24(a3);
      break;
    case 0x3Eu:
      uint64_t v72 = a1[1];
      if ((v72 & 4) != 0) {
        (*(void (**)(uint64_t *))((v72 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A36D94(a3);
      break;
    case 0x3Fu:
      uint64_t v73 = a1[1];
      if ((v73 & 4) != 0) {
        (*(void (**)(uint64_t *))((v73 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A36E04(a3);
      break;
    case 0x40u:
      uint64_t v74 = a1[1];
      if ((v74 & 4) != 0) {
        (*(void (**)(uint64_t *))((v74 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A36E74(a3);
      break;
    case 0x41u:
      uint64_t v75 = a1[1];
      if ((v75 & 4) != 0) {
        (*(void (**)(uint64_t *))((v75 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A36EE4(a3);
      break;
    case 0x42u:
      uint64_t v76 = a1[1];
      if ((v76 & 4) != 0) {
        (*(void (**)(uint64_t *))((v76 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A36F54(a3);
      break;
    case 0x43u:
      uint64_t v77 = a1[1];
      if ((v77 & 4) != 0) {
        (*(void (**)(uint64_t *))((v77 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A36FC4(a3);
      break;
    case 0x44u:
      uint64_t v78 = a1[1];
      if ((v78 & 4) != 0) {
        (*(void (**)(uint64_t *))((v78 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A37034(a3);
      break;
    case 0x45u:
      uint64_t v79 = a1[1];
      if ((v79 & 4) != 0) {
        (*(void (**)(uint64_t *))((v79 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A370A4(a3);
      break;
    case 0x46u:
      uint64_t v80 = a1[1];
      if ((v80 & 4) != 0) {
        (*(void (**)(uint64_t *))((v80 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A37114(a3);
      break;
    case 0x47u:
      uint64_t v81 = a1[1];
      if ((v81 & 4) != 0) {
        (*(void (**)(uint64_t *))((v81 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A37184(a3);
      break;
    case 0x48u:
      uint64_t v82 = a1[1];
      if ((v82 & 4) != 0) {
        (*(void (**)(uint64_t *))((v82 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A371F4(a3);
      break;
    case 0x49u:
      uint64_t v83 = a1[1];
      if ((v83 & 4) != 0) {
        (*(void (**)(uint64_t *))((v83 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A37264(a3);
      break;
    case 0x4Au:
      uint64_t v84 = a1[1];
      if ((v84 & 4) != 0) {
        (*(void (**)(uint64_t *))((v84 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A372D4(a3);
      break;
    case 0x4Bu:
      uint64_t v85 = a1[1];
      if ((v85 & 4) != 0) {
        (*(void (**)(uint64_t *))((v85 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A37344(a3);
      break;
    case 0x4Cu:
      uint64_t v86 = a1[1];
      if ((v86 & 4) != 0) {
        (*(void (**)(uint64_t *))((v86 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A373B4(a3);
      break;
    case 0x4Du:
      uint64_t v87 = a1[1];
      if ((v87 & 4) != 0) {
        (*(void (**)(uint64_t *))((v87 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A37424(a3);
      break;
    case 0x4Eu:
      uint64_t v88 = a1[1];
      if ((v88 & 4) != 0) {
        (*(void (**)(uint64_t *))((v88 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A37494(a3);
      break;
    case 0x4Fu:
      uint64_t v89 = a1[1];
      if ((v89 & 4) != 0) {
        (*(void (**)(uint64_t *))((v89 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A37504(a3);
      break;
    case 0x50u:
      uint64_t v90 = a1[1];
      if ((v90 & 4) != 0) {
        (*(void (**)(uint64_t *))((v90 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A37574(a3);
      break;
    case 0x51u:
      uint64_t v91 = a1[1];
      if ((v91 & 4) != 0) {
        (*(void (**)(uint64_t *))((v91 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A375E4(a3);
      break;
    case 0x52u:
      uint64_t v92 = a1[1];
      if ((v92 & 4) != 0) {
        (*(void (**)(uint64_t *))((v92 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A37654(a3);
      break;
    case 0x53u:
      uint64_t v93 = a1[1];
      if ((v93 & 4) != 0) {
        (*(void (**)(uint64_t *))((v93 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A376C4(a3);
      break;
    case 0x54u:
      uint64_t v94 = a1[1];
      if ((v94 & 4) != 0) {
        (*(void (**)(uint64_t *))((v94 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A37734(a3);
      break;
    case 0x55u:
      uint64_t v95 = a1[1];
      if ((v95 & 4) != 0) {
        (*(void (**)(uint64_t *))((v95 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A377A4(a3);
      break;
    case 0x56u:
      uint64_t v96 = a1[1];
      if ((v96 & 4) != 0) {
        (*(void (**)(uint64_t *))((v96 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A37814(a3);
      break;
    case 0x57u:
      uint64_t v97 = a1[1];
      if ((v97 & 4) != 0) {
        (*(void (**)(uint64_t *))((v97 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A37884(a3);
      break;
    case 0x58u:
      uint64_t v98 = a1[1];
      if ((v98 & 4) != 0) {
        (*(void (**)(uint64_t *))((v98 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A378F4(a3);
      break;
    case 0x59u:
      uint64_t v99 = a1[1];
      if ((v99 & 4) != 0) {
        (*(void (**)(uint64_t *))((v99 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A37964(a3);
      break;
    case 0x5Au:
      uint64_t v100 = a1[1];
      if ((v100 & 4) != 0) {
        (*(void (**)(uint64_t *))((v100 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A379D4(a3);
      break;
    case 0x5Bu:
      uint64_t v101 = a1[1];
      if ((v101 & 4) != 0) {
        (*(void (**)(uint64_t *))((v101 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A37A44(a3);
      break;
    case 0x5Cu:
      uint64_t v102 = a1[1];
      if ((v102 & 4) != 0) {
        (*(void (**)(uint64_t *))((v102 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A37AB4(a3);
      break;
    case 0x5Du:
      uint64_t v103 = a1[1];
      if ((v103 & 4) != 0) {
        (*(void (**)(uint64_t *))((v103 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A37B24(a3);
      break;
    case 0x5Eu:
      uint64_t v104 = a1[1];
      if ((v104 & 4) != 0) {
        (*(void (**)(uint64_t *))((v104 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A37B94(a3);
      break;
    case 0x5Fu:
      uint64_t v105 = a1[1];
      if ((v105 & 4) != 0) {
        (*(void (**)(uint64_t *))((v105 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A37C04(a3);
      break;
    default:
      sub_216A37C74((pxrInternal__aapl__pxrReserved__::VtValue *)a1, a3);
      break;
  }
}

const char *pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::LenNode::GetFunctionName(pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::LenNode *this)
{
  return "len";
}

void *pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::LenNode::LenNode(void *result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a2 = 0;
  *uint64_t result = &unk_26C7575C8;
  result[1] = v2;
  return result;
}

{
  uint64_t v2;

  uint64_t v2 = *a2;
  *a2 = 0;
  *uint64_t result = &unk_26C7575C8;
  result[1] = v2;
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::LenNode::Evaluate@<X0>(pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::LenNode *this@<X0>, void *a2@<X8>)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  (*(void (**)(uint64_t *__return_ptr))(**((void **)this + 1) + 16))(v9);
  uint64_t v5 = v10;
  uint64_t v4 = v11;
  if (v10 == v11)
  {
    sub_2169FB264(v9, a2);
  }
  else
  {
    a2[1] = 0;
    a2[2] = v5;
    uint64_t v6 = v12;
    a2[3] = v4;
    a2[4] = v6;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v10 = 0;
  }
  uint64_t v8 = (void **)&v10;
  sub_216782F20(&v8);
  return sub_2168EE084((uint64_t)v9);
}

void sub_2169FB248(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_2169E8360((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2169FB264(uint64_t *a1@<X0>, void *a2@<X8>)
{
  switch(sub_2169FCDDC((uint64_t)a1))
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 7u:
    case 8u:
    case 9u:
    case 0xAu:
    case 0xBu:
    case 0xDu:
    case 0xEu:
    case 0xFu:
    case 0x10u:
    case 0x11u:
    case 0x12u:
    case 0x13u:
    case 0x14u:
    case 0x15u:
    case 0x16u:
    case 0x17u:
    case 0x18u:
    case 0x19u:
    case 0x1Au:
    case 0x1Bu:
    case 0x1Cu:
    case 0x1Du:
    case 0x1Eu:
    case 0x1Fu:
    case 0x20u:
    case 0x21u:
    case 0x22u:
    case 0x23u:
    case 0x24u:
    case 0x25u:
    case 0x26u:
    case 0x27u:
    case 0x28u:
    case 0x29u:
    case 0x2Au:
    case 0x2Bu:
    case 0x2Cu:
    case 0x2Du:
    case 0x2Eu:
    case 0x30u:
    case 0x31u:
    case 0x32u:
    case 0x33u:
    case 0x34u:
    case 0x35u:
    case 0x37u:
    case 0x38u:
    case 0x39u:
    case 0x3Au:
    case 0x3Cu:
    case 0x3Du:
    case 0x3Eu:
    case 0x3Fu:
    case 0x40u:
    case 0x41u:
    case 0x42u:
    case 0x43u:
    case 0x44u:
    case 0x45u:
    case 0x46u:
    case 0x47u:
    case 0x48u:
    case 0x49u:
    case 0x4Au:
    case 0x4Bu:
    case 0x4Cu:
    case 0x4Du:
    case 0x4Eu:
    case 0x4Fu:
    case 0x50u:
    case 0x51u:
    case 0x52u:
    case 0x53u:
    case 0x54u:
    case 0x55u:
    case 0x56u:
    case 0x57u:
    case 0x58u:
    case 0x59u:
    case 0x5Au:
    case 0x5Bu:
    case 0x5Cu:
    case 0x5Du:
    case 0x5Eu:
    case 0x5Fu:
      uint64_t v4 = a1[1];
      if ((v4 & 4) != 0) {
        (*(void (**)(uint64_t *))((v4 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      sub_216A37D14(a2);
      break;
    case 0xCu:
      uint64_t v8 = a1[1];
      if ((v8 & 4) != 0) {
        uint64_t v9 = (*(uint64_t (**)(uint64_t *))((v8 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      else {
        uint64_t v9 = *a1;
      }
      uint64_t v7 = *(unsigned __int8 *)(v9 + 23);
      if ((v7 & 0x80u) != 0) {
        uint64_t v7 = *(void *)(v9 + 8);
      }
      goto LABEL_14;
    case 0x2Fu:
    case 0x36u:
    case 0x3Bu:
      uint64_t v5 = a1[1];
      if ((v5 & 4) != 0) {
        uint64_t v6 = (uint64_t *)(*(uint64_t (**)(uint64_t *))((v5 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      }
      else {
        uint64_t v6 = (uint64_t *)*a1;
      }
      uint64_t v7 = *v6;
LABEL_14:
      *a2 = v7;
      a2[1] = &unk_26C750823;
      a2[3] = 0;
      a2[4] = 0;
      a2[2] = 0;
      break;
    default:
      sub_216A37E88((pxrInternal__aapl__pxrReserved__::VtValue *)a1, a2);
      break;
  }
}

const char *pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::DefinedNode::GetFunctionName(pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::DefinedNode *this)
{
  return "defined";
}

__n128 pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::DefinedNode::DefinedNode(void *a1, __n128 *a2)
{
  *a1 = &unk_26C7575F0;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 0;
  __n128 result = *a2;
  *(__n128 *)(a1 + 1) = *a2;
  a1[3] = a2[1].n128_u64[0];
  a2->n128_u64[0] = 0;
  a2->n128_u64[1] = 0;
  a2[1].n128_u64[0] = 0;
  return result;
}

{
  __n128 result;

  *a1 = &unk_26C7575F0;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 0;
  __n128 result = *a2;
  *(__n128 *)(a1 + 1) = *a2;
  a1[3] = a2[1].n128_u64[0];
  a2->n128_u64[0] = 0;
  a2->n128_u64[1] = 0;
  a2[1].n128_u64[0] = 0;
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::DefinedNode::Evaluate@<X0>(pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::DefinedNode *this@<X0>, uint64_t **a2@<X1>, void *a3@<X8>)
{
  uint64_t v48 = *MEMORY[0x263EF8340];
  unint64_t v47 = 0;
  uint64_t v38 = 0;
  uint64_t v39 = 0;
  unint64_t v40 = 0;
  uint64_t v4 = *((void *)this + 1);
  if (*((void *)this + 2) == v4) {
    goto LABEL_42;
  }
  unint64_t v7 = 0;
  do
  {
    (*(void (**)(const void ***__return_ptr))(**(void **)(v4 + 8 * v7) + 16))(&v42);
    if (v44 == v45)
    {
      if (sub_21695C360((pxrInternal__aapl__pxrReserved__::VtValue *)&v42))
      {
        if ((v43 & 4) != 0) {
          uint64_t v8 = (const void **)(*(uint64_t (**)(const void ***))((v43 & 0xFFFFFFFFFFFFFFF8) + 168))(&v42);
        }
        else {
          uint64_t v8 = v42;
        }
        uint64_t v9 = sub_2169F3CFC(*a2, v8);
        LOBYTE(v41[0]) = 1;
        char v10 = sub_2169FB9EC((pxrInternal__aapl__pxrReserved__::VtValue *)&v46, (pxrInternal__aapl__pxrReserved__::VtValue *)v41);
        if (v9) {
          char v11 = v10;
        }
        else {
          char v11 = 0;
        }
        if (v47 && (v47 & 3) != 3) {
          (*(void (**)(uint64_t *))((v47 & 0xFFFFFFFFFFFFFFF8) + 32))(&v46);
        }
        unint64_t v47 = (unint64_t)&unk_26C7501AB;
        LOBYTE(v46) = v11;
      }
      else
      {
        pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::GetValueTypeName((pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl *)&v42, v32);
        uint64_t v14 = v32;
        if (v33 < 0) {
          uint64_t v14 = (void **)v32[0];
        }
        pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Invalid type %s for argument %zu", v12, v13, v14, v7);
        if (v35 >= 0) {
          uint64_t v17 = &v34;
        }
        else {
          uint64_t v17 = v34;
        }
        pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v15, v16, "defined", v17);
        uint64_t v18 = v39;
        if ((unint64_t)v39 >= v40)
        {
          unint64_t v20 = 0xAAAAAAAAAAAAAAABLL * (((char *)v39 - (char *)v38) >> 3);
          unint64_t v21 = v20 + 1;
          if (v20 + 1 > 0xAAAAAAAAAAAAAAALL) {
            sub_21677CB10();
          }
          if (0x5555555555555556 * ((uint64_t)(v40 - (void)v38) >> 3) > v21) {
            unint64_t v21 = 0x5555555555555556 * ((uint64_t)(v40 - (void)v38) >> 3);
          }
          if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v40 - (void)v38) >> 3) >= 0x555555555555555) {
            unint64_t v22 = 0xAAAAAAAAAAAAAAALL;
          }
          else {
            unint64_t v22 = v21;
          }
          v41[4] = (void **)&v40;
          if (v22) {
            uint64_t v23 = (void **)sub_216782ED8((uint64_t)&v40, v22);
          }
          else {
            uint64_t v23 = 0;
          }
          uint64_t v24 = &v23[3 * v20];
          v41[0] = v23;
          v41[1] = v24;
          v41[3] = &v23[3 * v22];
          long long v25 = *(_OWORD *)__p;
          v24[2] = v37;
          *(_OWORD *)uint64_t v24 = v25;
          __p[1] = 0;
          uint64_t v37 = 0;
          __p[0] = 0;
          v41[2] = v24 + 3;
          sub_216790CCC((uint64_t *)&v38, v41);
          uint64_t v26 = v39;
          sub_216790E64((uint64_t)v41);
          uint64_t v39 = v26;
          if (SHIBYTE(v37) < 0) {
            operator delete(__p[0]);
          }
        }
        else
        {
          long long v19 = *(_OWORD *)__p;
          *((void *)v39 + 2) = v37;
          *uint64_t v18 = v19;
          __p[1] = 0;
          uint64_t v37 = 0;
          __p[0] = 0;
          uint64_t v39 = (long long *)((char *)v18 + 24);
        }
        if (v35 < 0) {
          operator delete(v34);
        }
        if (v33 < 0) {
          operator delete(v32[0]);
        }
      }
    }
    else
    {
      sub_216A30E64((uint64_t *)&v38, v39, (uint64_t)v44, v45, 0xAAAAAAAAAAAAAAABLL * (((char *)v45 - (char *)v44) >> 3));
    }
    v41[0] = (void **)&v44;
    sub_216782F20(v41);
    sub_2168EE084((uint64_t)&v42);
    ++v7;
    uint64_t v4 = *((void *)this + 1);
  }
  while (v7 < (*((void *)this + 2) - v4) >> 3);
  uint64_t v28 = v38;
  uint64_t v27 = v39;
  if (v38 == v39)
  {
LABEL_42:
    sub_2168EE4C4(a3, &v46);
    uint64_t v30 = (long long **)(a3 + 2);
  }
  else
  {
    a3[1] = 0;
    a3[2] = v28;
    unint64_t v29 = v40;
    a3[3] = v27;
    a3[4] = v29;
    uint64_t v30 = &v38;
  }
  *uint64_t v30 = 0;
  v30[1] = 0;
  v30[2] = 0;
  v41[0] = (void **)&v38;
  sub_216782F20(v41);
  return sub_2168EE084((uint64_t)&v46);
}

void sub_2169FB94C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28,char a29,uint64_t a30,uint64_t a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char *a37)
{
  a37 = &a29;
  sub_216782F20((void ***)&a37);
  sub_2168EE084(v37 - 112);
  _Unwind_Resume(a1);
}

uint64_t sub_2169FB9EC(pxrInternal__aapl__pxrReserved__::VtValue *a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  if (sub_216959490(a1))
  {
    uint64_t v4 = *((void *)a1 + 1);
    if ((v4 & 4) != 0) {
      a2 = (pxrInternal__aapl__pxrReserved__::VtValue *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v4 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
    }
    else {
      a2 = a1;
    }
  }
  return *(unsigned __int8 *)a2;
}

uint64_t sub_2169FBA40(uint64_t a1)
{
  *(void *)a1 = &unk_26C757460;
  uint64_t v3 = (void **)(a1 + 8);
  sub_2168706D8(&v3);
  return a1;
}

void sub_2169FBA98(char *a1)
{
  *(void *)a1 = &unk_26C757460;
  uint64_t v2 = (void **)(a1 + 8);
  sub_2168706D8(&v2);
  operator delete(a1);
}

uint64_t sub_2169FBAF4(uint64_t a1)
{
  *(void *)a1 = &unk_26C757488;
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }
  return a1;
}

void sub_2169FBB44(void **__p)
{
  *long long __p = &unk_26C757488;
  if (*((char *)__p + 31) < 0) {
    operator delete(__p[1]);
  }

  operator delete(__p);
}

uint64_t sub_2169FBBBC(uint64_t a1)
{
  *(void *)a1 = &unk_26C7574D8;
  uint64_t v3 = (void **)(a1 + 8);
  sub_216A37EF4(&v3);
  return a1;
}

void sub_2169FBC14(char *a1)
{
  *(void *)a1 = &unk_26C7574D8;
  uint64_t v2 = (void **)(a1 + 8);
  sub_216A37EF4(&v2);
  operator delete(a1);
}

void *sub_2169FBC70(void *a1)
{
  *a1 = &unk_26C757500;
  uint64_t v2 = a1[2];
  a1[2] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = a1[1];
  a1[1] = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  return a1;
}

void sub_2169FBD10(void *__p)
{
  *long long __p = &unk_26C757500;
  uint64_t v2 = __p[2];
  __p[2] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = __p[1];
  __p[1] = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }

  operator delete(__p);
}

void *sub_2169FBDC0(void *a1)
{
  *a1 = &unk_26C757528;
  uint64_t v2 = a1[3];
  a1[3] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = a1[2];
  a1[2] = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  uint64_t v4 = a1[1];
  a1[1] = 0;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  return a1;
}

void sub_2169FBE90(void *__p)
{
  *long long __p = &unk_26C757528;
  uint64_t v2 = __p[3];
  __p[3] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = __p[2];
  __p[2] = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  uint64_t v4 = __p[1];
  __p[1] = 0;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }

  operator delete(__p);
}

void *sub_2169FBF70(void *a1)
{
  *a1 = &unk_26C757320;
  uint64_t v2 = a1[2];
  a1[2] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = a1[1];
  a1[1] = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  return a1;
}

void sub_2169FC010(void *__p)
{
  *long long __p = &unk_26C757320;
  uint64_t v2 = __p[2];
  __p[2] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = __p[1];
  __p[1] = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }

  operator delete(__p);
}

void *sub_2169FC0C0(void *a1)
{
  *a1 = &unk_26C757348;
  uint64_t v2 = a1[2];
  a1[2] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = a1[1];
  a1[1] = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  return a1;
}

void sub_2169FC160(void *__p)
{
  *long long __p = &unk_26C757348;
  uint64_t v2 = __p[2];
  __p[2] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = __p[1];
  __p[1] = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }

  operator delete(__p);
}

void *sub_2169FC210(void *a1)
{
  *a1 = &unk_26C757370;
  uint64_t v2 = a1[2];
  a1[2] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = a1[1];
  a1[1] = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  return a1;
}

void sub_2169FC2B0(void *__p)
{
  *long long __p = &unk_26C757370;
  uint64_t v2 = __p[2];
  __p[2] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = __p[1];
  __p[1] = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }

  operator delete(__p);
}

void *sub_2169FC360(void *a1)
{
  *a1 = &unk_26C757398;
  uint64_t v2 = a1[2];
  a1[2] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = a1[1];
  a1[1] = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  return a1;
}

void sub_2169FC400(void *__p)
{
  *long long __p = &unk_26C757398;
  uint64_t v2 = __p[2];
  __p[2] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = __p[1];
  __p[1] = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }

  operator delete(__p);
}

void *sub_2169FC4B0(void *a1)
{
  *a1 = &unk_26C7573C0;
  uint64_t v2 = a1[2];
  a1[2] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = a1[1];
  a1[1] = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  return a1;
}

void sub_2169FC550(void *__p)
{
  *long long __p = &unk_26C7573C0;
  uint64_t v2 = __p[2];
  __p[2] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = __p[1];
  __p[1] = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }

  operator delete(__p);
}

void *sub_2169FC600(void *a1)
{
  *a1 = &unk_26C7573E8;
  uint64_t v2 = a1[2];
  a1[2] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = a1[1];
  a1[1] = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  return a1;
}

void sub_2169FC6A0(void *__p)
{
  *long long __p = &unk_26C7573E8;
  uint64_t v2 = __p[2];
  __p[2] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = __p[1];
  __p[1] = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }

  operator delete(__p);
}

uint64_t sub_2169FC750(uint64_t a1)
{
  *(void *)a1 = &unk_26C757410;
  uint64_t v3 = (void **)(a1 + 8);
  sub_216A37EF4(&v3);
  return a1;
}

void sub_2169FC7A8(char *a1)
{
  *(void *)a1 = &unk_26C757410;
  uint64_t v2 = (void **)(a1 + 8);
  sub_216A37EF4(&v2);
  operator delete(a1);
}

uint64_t sub_2169FC804(uint64_t a1)
{
  *(void *)a1 = &unk_26C757438;
  uint64_t v3 = (void **)(a1 + 8);
  sub_216A37EF4(&v3);
  return a1;
}

void sub_2169FC85C(char *a1)
{
  *(void *)a1 = &unk_26C757438;
  uint64_t v2 = (void **)(a1 + 8);
  sub_216A37EF4(&v2);
  operator delete(a1);
}

void *sub_2169FC8B8(void *a1)
{
  uint64_t v2 = a1[1];
  *a1 = &unk_26C757550;
  a1[1] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  return a1;
}

void sub_2169FC924(void *__p)
{
  uint64_t v2 = __p[1];
  *long long __p = &unk_26C757550;
  __p[1] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  operator delete(__p);
}

void *sub_2169FC9A0(void *a1)
{
  *a1 = &unk_26C757578;
  uint64_t v2 = a1[2];
  a1[2] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = a1[1];
  a1[1] = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  return a1;
}

void sub_2169FCA40(void *__p)
{
  *long long __p = &unk_26C757578;
  uint64_t v2 = __p[2];
  __p[2] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = __p[1];
  __p[1] = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }

  operator delete(__p);
}

void *sub_2169FCAF0(void *a1)
{
  *a1 = &unk_26C7575A0;
  uint64_t v2 = a1[2];
  a1[2] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = a1[1];
  a1[1] = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  return a1;
}

void sub_2169FCB90(void *__p)
{
  *long long __p = &unk_26C7575A0;
  uint64_t v2 = __p[2];
  __p[2] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = __p[1];
  __p[1] = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }

  operator delete(__p);
}

void *sub_2169FCC40(void *a1)
{
  uint64_t v2 = a1[1];
  *a1 = &unk_26C7575C8;
  a1[1] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  return a1;
}

void sub_2169FCCAC(void *__p)
{
  uint64_t v2 = __p[1];
  *long long __p = &unk_26C7575C8;
  __p[1] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  operator delete(__p);
}

uint64_t sub_2169FCD28(uint64_t a1)
{
  *(void *)a1 = &unk_26C7575F0;
  uint64_t v3 = (void **)(a1 + 8);
  sub_216A37EF4(&v3);
  return a1;
}

void sub_2169FCD80(char *a1)
{
  *(void *)a1 = &unk_26C7575F0;
  uint64_t v2 = (void **)(a1 + 8);
  sub_216A37EF4(&v2);
  operator delete(a1);
}

uint64_t sub_2169FCDDC(uint64_t a1)
{
  v4[2] = *MEMORY[0x263EF8340];
  uint64_t v1 = *(void *)(a1 + 8);
  if ((v1 & 4) != 0)
  {
    (*(void (**)(void *__return_ptr))((v1 & 0xFFFFFFFFFFFFFFF8) + 176))(v4);
    uint64_t v2 = sub_2169FCDDC(v4);
    sub_2168EE084((uint64_t)v4);
  }
  else if (v1)
  {
    return *(unsigned int *)((v1 & 0xFFFFFFFFFFFFFFF8) + 16);
  }
  else
  {
    return 0xFFFFFFFFLL;
  }
  return v2;
}

void sub_2169FCE74(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_2168EE084((uint64_t)va);
  _Unwind_Resume(a1);
}

unsigned __int8 *sub_2169FCE90@<X0>(unsigned __int8 *a1@<X0>, unsigned __int8 **a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = a1;
  uint64_t v6 = *((void *)a1 + 1);
  if ((v6 & 4) != 0) {
    uint64_t v4 = (unsigned __int8 *)(*(uint64_t (**)(unsigned __int8 *))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
  }
  __n128 result = *a2;
  uint64_t v8 = *((void *)*a2 + 1);
  if ((v8 & 4) != 0) {
    __n128 result = (unsigned __int8 *)(*(uint64_t (**)(void))((v8 & 0xFFFFFFFFFFFFFFF8) + 168))();
  }
  *(unsigned char *)a3 = *v4 == *result;
  *(void *)(a3 + 8) = &unk_26C7501AB;
  *(void *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = 0;
  *(void *)(a3 + 32) = 0;
  return result;
}

void *sub_2169FCF24@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = a1;
  uint64_t v6 = a1[1];
  if ((v6 & 4) != 0) {
    uint64_t v4 = (void *)(*(uint64_t (**)(void *))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
  }
  __n128 result = *(void **)a2;
  uint64_t v8 = *(void *)(*(void *)a2 + 8);
  if ((v8 & 4) != 0) {
    __n128 result = (void *)(*(uint64_t (**)(void))((v8 & 0xFFFFFFFFFFFFFFF8) + 168))();
  }
  *(unsigned char *)a3 = *v4 == *result;
  *(void *)(a3 + 8) = &unk_26C7501AB;
  *(void *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = 0;
  *(void *)(a3 + 32) = 0;
  return result;
}

void sub_2169FCFB8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_2169FD0DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_2169FD12C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_2169FD250(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_2169FD2A0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_2169FD3C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_2169FD414(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_2169FD538(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_2169FD588(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_2169FD6AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_2169FD6FC(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_2169FD820(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_2169FD870(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_2169FD994(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_2169FD9E4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_2169FDB08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_2169FDB58(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_2169FDC7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_2169FDCCC(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_2169FDDF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_2169FDE40@<X0>(uint64_t *a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v6 = *(void *)(v5 + 8);
  if ((v6 & 4) != 0) {
    unint64_t v7 = (unsigned __int8 *)(*(uint64_t (**)(void))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))();
  }
  else {
    unint64_t v7 = *(unsigned __int8 **)v5;
  }
  uint64_t result = sub_2168513F8((uint64_t)&v9, a2, v7);
  *(unsigned char *)a3 = result;
  *(void *)(a3 + 8) = &unk_26C7501AB;
  *(void *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = 0;
  *(void *)(a3 + 32) = 0;
  return result;
}

void sub_2169FDEB4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_2169FDFD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_2169FE028(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_2169FE14C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_2169FE19C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_2169FE2C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_2169FE310(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_2169FE434(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_2169FE484(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_2169FE5A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_2169FE5F8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_2169FE71C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_2169FE76C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_2169FE890(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_2169FE8E0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_2169FEA04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_2169FEA54(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_2169FEB78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_2169FEBC8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_2169FECEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_2169FED3C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_2169FEE60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_2169FEEB0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_2169FEFD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_2169FF024(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_2169FF148(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_2169FF198(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_2169FF2BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_2169FF30C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_2169FF430(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_2169FF480(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_2169FF5A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_2169FF5F4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_2169FF718(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_2169FF768(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_2169FF88C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_2169FF8DC(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_2169FFA00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_2169FFA50(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_2169FFB74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_2169FFBC4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_2169FFCE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_2169FFD38(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_2169FFE5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_2169FFEAC(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_2169FFFD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A00020(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A00144(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A00194(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A002B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A00308(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0042C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0047C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A005A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A005F0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A00714(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A00764(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A00888(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A008D8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A009FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A00A4C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A00B70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A00BC0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A00CE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A00D34(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A00E58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A00EA8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A00FCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0101C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A01140(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A01190(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A012B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A01304(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A01428(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A01478(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0159C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A015EC(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A01710(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A01760(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A01884(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A018D4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A019F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A01A48(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A01B6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A01BBC(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A01CE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A01D30(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A01E54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A01EA4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A01FC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A02018(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0213C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0218C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A022B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A02300(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A02424(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A02474(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A02598(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A025E8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0270C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0275C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A02880(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A028D0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A029F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A02A44(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A02B68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A02BB8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A02CDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A02D2C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A02E50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A02EA0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A02FC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A03014(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A03138(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A03188(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A032AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A032FC(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A03420(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A03470(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A03594(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A035E4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A03708(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A03758(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0387C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A038CC(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A039F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A03A40(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A03B64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A03BB4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A03CD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A03D28(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A03E4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A03E9C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A03FC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A04010(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A04134(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A04184(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A042A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A042F8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0441C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0446C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A04590(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A045E0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A04704(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A04754(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A04878(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A048C8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A049EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A04A3C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A04B60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A04BB0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A04CD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A04D24(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A04E48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A04E98(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A04FBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0500C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A05130(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A05180(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A052A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A052F4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A05418(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A05468(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0558C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A055DC(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A05700(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_216A05750@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*(void *)(a2 + 8) || *(void *)(*(void *)result + 8))
  {
    v4[0] = "sdf/variableExpressionImpl.cpp";
    v4[1] = "operator()";
    v4[2] = 614;
    void v4[3] = "EvalResult pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::_ComparisonVisitor<std::equal_to>::"
            "operator()(const VtValue &) const [Comparator = std::equal_to]";
    char v5 = 0;
    uint64_t result = pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v4, "x.IsEmpty() && _y.IsEmpty()", 0);
  }
  *(unsigned char *)a3 = 1;
  *(void *)(a3 + 8) = &unk_26C7501AB;
  *(void *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = 0;
  *(void *)(a3 + 32) = 0;
  return result;
}

unsigned __int8 *sub_216A057E8@<X0>(unsigned __int8 *a1@<X0>, unsigned __int8 **a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = a1;
  uint64_t v6 = *((void *)a1 + 1);
  if ((v6 & 4) != 0) {
    uint64_t v4 = (unsigned __int8 *)(*(uint64_t (**)(unsigned __int8 *))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
  }
  uint64_t result = *a2;
  uint64_t v8 = *((void *)*a2 + 1);
  if ((v8 & 4) != 0) {
    uint64_t result = (unsigned __int8 *)(*(uint64_t (**)(void))((v8 & 0xFFFFFFFFFFFFFFF8) + 168))();
  }
  *(unsigned char *)a3 = *v4 != *result;
  *(void *)(a3 + 8) = &unk_26C7501AB;
  *(void *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = 0;
  *(void *)(a3 + 32) = 0;
  return result;
}

void *sub_216A0587C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = a1;
  uint64_t v6 = a1[1];
  if ((v6 & 4) != 0) {
    uint64_t v4 = (void *)(*(uint64_t (**)(void *))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
  }
  uint64_t result = *(void **)a2;
  uint64_t v8 = *(void *)(*(void *)a2 + 8);
  if ((v8 & 4) != 0) {
    uint64_t result = (void *)(*(uint64_t (**)(void))((v8 & 0xFFFFFFFFFFFFFFF8) + 168))();
  }
  *(unsigned char *)a3 = *v4 != *result;
  *(void *)(a3 + 8) = &unk_26C7501AB;
  *(void *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = 0;
  *(void *)(a3 + 32) = 0;
  return result;
}

void sub_216A05910(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A05A34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A05A84(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A05BA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A05BF8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A05D1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A05D6C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A05E90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A05EE0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A06004(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A06054(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A06178(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A061C8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A062EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0633C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A06460(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A064B0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A065D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A06624(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  char v10 = (char *)operator new(0x18uLL);
  char v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  unint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  char v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A06748(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_216A06798@<X0>(uint64_t *a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v6 = *(void *)(v5 + 8);
  if ((v6 & 4) != 0) {
    unint64_t v7 = (unsigned __int8 *)(*(uint64_t (**)(void))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))();
  }
  else {
    unint64_t v7 = *(unsigned __int8 **)v5;
  }
  uint64_t result = sub_216A0680C((uint64_t)&v9, a2, v7);
  *(unsigned char *)a3 = result;
  *(void *)(a3 + 8) = &unk_26C7501AB;
  *(void *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = 0;
  *(void *)(a3 + 32) = 0;
  return result;
}

uint64_t sub_216A0680C(uint64_t a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a3;
  uint64_t v4 = a2[23];
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = a2[23];
  }
  else {
    uint64_t v5 = *((void *)a2 + 1);
  }
  uint64_t v6 = a3[23];
  int v7 = (char)v6;
  if ((v6 & 0x80u) != 0) {
    uint64_t v6 = *((void *)a3 + 1);
  }
  if (v5 != v6) {
    return 1;
  }
  if (v7 < 0) {
    uint64_t v3 = *(unsigned __int8 **)a3;
  }
  if ((v4 & 0x80) != 0) {
    return memcmp(*(const void **)a2, v3, *((void *)a2 + 1)) != 0;
  }
  if (!a2[23]) {
    return 0;
  }
  uint64_t v8 = v4 - 1;
  do
  {
    int v10 = *a2++;
    int v9 = v10;
    int v11 = *v3++;
    uint64_t result = v9 != v11;
  }
  while (v9 == v11 && v8-- != 0);
  return result;
}

void sub_216A068B0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A069D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A06A24(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A06B48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A06B98(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A06CBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A06D0C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A06E30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A06E80(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A06FA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A06FF4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A07118(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A07168(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0728C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A072DC(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A07400(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A07450(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A07574(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A075C4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A076E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A07738(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0785C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A078AC(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A079D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A07A20(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A07B44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A07B94(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A07CB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A07D08(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A07E2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A07E7C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A07FA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A07FF0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A08114(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A08164(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A08288(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A082D8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A083FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0844C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A08570(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A085C0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A086E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A08734(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A08858(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A088A8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A089CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A08A1C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A08B40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A08B90(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A08CB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A08D04(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A08E28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A08E78(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A08F9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A08FEC(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A09110(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A09160(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A09284(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A092D4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A093F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A09448(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0956C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A095BC(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A096E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A09730(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A09854(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A098A4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A099C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A09A18(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A09B3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A09B8C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A09CB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A09D00(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A09E24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A09E74(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A09F98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A09FE8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0A10C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0A15C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0A280(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0A2D0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0A3F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0A444(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0A568(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0A5B8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0A6DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0A72C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0A850(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0A8A0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0A9C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0AA14(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0AB38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0AB88(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0ACAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0ACFC(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0AE20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0AE70(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0AF94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0AFE4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0B108(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0B158(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0B27C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0B2CC(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0B3F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0B440(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0B564(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0B5B4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0B6D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0B728(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0B84C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0B89C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0B9C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0BA10(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0BB34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0BB84(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0BCA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0BCF8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0BE1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0BE6C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0BF90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0BFE0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0C104(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0C154(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0C278(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0C2C8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0C3EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0C43C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0C560(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0C5B0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0C6D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0C724(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0C848(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0C898(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0C9BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0CA0C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0CB30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0CB80(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0CCA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0CCF4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0CE18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0CE68(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0CF8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0CFDC(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0D100(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0D150(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0D274(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0D2C4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0D3E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0D438(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0D55C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0D5AC(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0D6D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0D720(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0D844(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0D894(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0D9B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0DA08(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0DB2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0DB7C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0DCA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0DCF0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0DE14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0DE64(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0DF88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0DFD8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0E0FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_216A0E14C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*(void *)(a2 + 8) || *(void *)(*(void *)result + 8))
  {
    v4[0] = "sdf/variableExpressionImpl.cpp";
    v4[1] = "operator()";
    v4[2] = 614;
    void v4[3] = "EvalResult pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::_ComparisonVisitor<std::not_equal_t"
            "o>::operator()(const VtValue &) const [Comparator = std::not_equal_to]";
    char v5 = 0;
    uint64_t result = pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v4, "x.IsEmpty() && _y.IsEmpty()", 0);
  }
  *(unsigned char *)a3 = 0;
  *(void *)(a3 + 8) = &unk_26C7501AB;
  *(void *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = 0;
  *(void *)(a3 + 32) = 0;
  return result;
}

unsigned __int8 *sub_216A0E1E0@<X0>(unsigned __int8 *a1@<X0>, unsigned __int8 **a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = a1;
  uint64_t v6 = *((void *)a1 + 1);
  if ((v6 & 4) != 0) {
    uint64_t v4 = (unsigned __int8 *)(*(uint64_t (**)(unsigned __int8 *))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
  }
  uint64_t result = *a2;
  uint64_t v8 = *((void *)*a2 + 1);
  if ((v8 & 4) != 0) {
    uint64_t result = (unsigned __int8 *)(*(uint64_t (**)(void))((v8 & 0xFFFFFFFFFFFFFFF8) + 168))();
  }
  *(unsigned char *)a3 = *v4 < *result;
  *(void *)(a3 + 8) = &unk_26C7501AB;
  *(void *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = 0;
  *(void *)(a3 + 32) = 0;
  return result;
}

void *sub_216A0E274@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = a1;
  uint64_t v6 = a1[1];
  if ((v6 & 4) != 0) {
    uint64_t v4 = (void *)(*(uint64_t (**)(void *))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
  }
  uint64_t result = *(void **)a2;
  uint64_t v8 = *(void *)(*(void *)a2 + 8);
  if ((v8 & 4) != 0) {
    uint64_t result = (void *)(*(uint64_t (**)(void))((v8 & 0xFFFFFFFFFFFFFFF8) + 168))();
  }
  *(unsigned char *)a3 = *v4 < *result;
  *(void *)(a3 + 8) = &unk_26C7501AB;
  *(void *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = 0;
  *(void *)(a3 + 32) = 0;
  return result;
}

void sub_216A0E308(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0E42C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0E47C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0E5A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0E5F0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0E714(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0E764(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0E888(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0E8D8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0E9FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0EA4C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0EB70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0EBC0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0ECE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0ED34(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0EE58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0EEA8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0EFCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0F01C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0F140(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

BOOL sub_216A0F190@<W0>(uint64_t *a1@<X0>, const void **a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v6 = *(void *)(v5 + 8);
  if ((v6 & 4) != 0) {
    int v7 = (const void **)(*(uint64_t (**)(void))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))();
  }
  else {
    int v7 = *(const void ***)v5;
  }
  BOOL result = sub_21677B108((uint64_t)&v9, a2, v7);
  *(unsigned char *)a3 = result;
  *(void *)(a3 + 8) = &unk_26C7501AB;
  *(void *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = 0;
  *(void *)(a3 + 32) = 0;
  return result;
}

void sub_216A0F204(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0F328(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0F378(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0F49C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0F4EC(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0F610(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0F660(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0F784(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0F7D4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0F8F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0F948(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0FA6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0FABC(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0FBE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0FC30(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0FD54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0FDA4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A0FEC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A0FF18(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1003C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1008C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A101B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A10200(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A10324(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A10374(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A10498(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A104E8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1060C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1065C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A10780(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A107D0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A108F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A10944(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A10A68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A10AB8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A10BDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A10C2C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A10D50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A10DA0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A10EC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A10F14(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A11038(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A11088(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A111AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A111FC(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A11320(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A11370(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A11494(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A114E4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A11608(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A11658(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1177C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A117CC(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A118F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A11940(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A11A64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A11AB4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A11BD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A11C28(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A11D4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A11D9C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A11EC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A11F10(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A12034(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A12084(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A121A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A121F8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1231C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1236C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A12490(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A124E0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A12604(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A12654(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A12778(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A127C8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A128EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1293C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A12A60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A12AB0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A12BD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A12C24(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A12D48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A12D98(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A12EBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A12F0C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A13030(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A13080(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A131A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A131F4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A13318(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A13368(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1348C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A134DC(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A13600(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A13650(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A13774(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A137C4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A138E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A13938(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A13A5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A13AAC(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A13BD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A13C20(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A13D44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A13D94(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A13EB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A13F08(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1402C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1407C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A141A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A141F0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A14314(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A14364(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A14488(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A144D8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A145FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1464C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A14770(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A147C0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A148E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A14934(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A14A58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A14AA8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A14BCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A14C1C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A14D40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A14D90(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A14EB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A14F04(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A15028(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A15078(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1519C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A151EC(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A15310(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A15360(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A15484(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A154D4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A155F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A15648(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1576C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A157BC(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A158E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A15930(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A15A54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A15AA4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A15BC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A15C18(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A15D3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A15D8C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A15EB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A15F00(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A16024(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A16074(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A16198(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A161E8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1630C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1635C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A16480(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A164D0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A165F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A16644(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A16768(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A167B8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A168DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1692C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  uint64_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A16A50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A16AA0(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (*(void *)(a2 + 8) || *(void *)(*(void *)a1 + 8))
  {
    v4[0] = "sdf/variableExpressionImpl.cpp";
    v4[1] = "operator()";
    v4[2] = 614;
    void v4[3] = "EvalResult pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::_ComparisonVisitor<std::less>::oper"
            "ator()(const VtValue &) const [Comparator = std::less]";
    char v5 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v4, "x.IsEmpty() && _y.IsEmpty()", 0);
  }
  sub_216A16B3C(a3);
}

void sub_216A16B3C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Comparison operation not supported for None");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A16C60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

unsigned __int8 *sub_216A16CB0@<X0>(unsigned __int8 *a1@<X0>, unsigned __int8 **a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = a1;
  uint64_t v6 = *((void *)a1 + 1);
  if ((v6 & 4) != 0) {
    uint64_t v4 = (unsigned __int8 *)(*(uint64_t (**)(unsigned __int8 *))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
  }
  BOOL result = *a2;
  uint64_t v8 = *((void *)*a2 + 1);
  if ((v8 & 4) != 0) {
    BOOL result = (unsigned __int8 *)(*(uint64_t (**)(void))((v8 & 0xFFFFFFFFFFFFFFF8) + 168))();
  }
  *(unsigned char *)a3 = *v4 <= *result;
  *(void *)(a3 + 8) = &unk_26C7501AB;
  *(void *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = 0;
  *(void *)(a3 + 32) = 0;
  return result;
}

void *sub_216A16D44@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = a1;
  uint64_t v6 = a1[1];
  if ((v6 & 4) != 0) {
    uint64_t v4 = (void *)(*(uint64_t (**)(void *))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
  }
  BOOL result = *(void **)a2;
  uint64_t v8 = *(void *)(*(void *)a2 + 8);
  if ((v8 & 4) != 0) {
    BOOL result = (void *)(*(uint64_t (**)(void))((v8 & 0xFFFFFFFFFFFFFFF8) + 168))();
  }
  *(unsigned char *)a3 = *v4 <= *result;
  *(void *)(a3 + 8) = &unk_26C7501AB;
  *(void *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = 0;
  *(void *)(a3 + 32) = 0;
  return result;
}

void sub_216A16DD8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A16EFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A16F4C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A17070(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A170C0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A171E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A17234(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A17358(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A173A8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A174CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1751C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A17640(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A17690(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A177B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A17804(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A17928(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A17978(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A17A9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A17AEC(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  int v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A17C10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

BOOL sub_216A17C60@<W0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v6 = *(void *)(v5 + 8);
  if ((v6 & 4) != 0) {
    int v7 = (const void **)(*(uint64_t (**)(void))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))();
  }
  else {
    int v7 = *(const void ***)v5;
  }
  BOOL result = sub_216A17CD4((uint64_t)&v9, a2, v7);
  *(unsigned char *)a3 = result;
  *(void *)(a3 + 8) = &unk_26C7501AB;
  *(void *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = 0;
  *(void *)(a3 + 32) = 0;
  return result;
}

BOOL sub_216A17CD4(uint64_t a1, void *a2, const void **a3)
{
  int v3 = *((char *)a2 + 23);
  int v4 = *((char *)a3 + 23);
  if (v4 >= 0) {
    size_t v5 = *((unsigned __int8 *)a3 + 23);
  }
  else {
    size_t v5 = (size_t)a3[1];
  }
  if (v4 >= 0) {
    uint64_t v6 = a3;
  }
  else {
    uint64_t v6 = *a3;
  }
  if (v3 >= 0) {
    size_t v7 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    size_t v7 = a2[1];
  }
  if (v3 < 0) {
    a2 = (void *)*a2;
  }
  if (v7 >= v5) {
    size_t v8 = v5;
  }
  else {
    size_t v8 = v7;
  }
  int v9 = memcmp(v6, a2, v8);
  if (v9) {
    return v9 >= 0;
  }
  else {
    return v5 >= v7;
  }
}

void sub_216A17D40(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A17E64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A17EB4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A17FD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A18028(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1814C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1819C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A182C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A18310(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A18434(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A18484(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A185A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A185F8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1871C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1876C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A18890(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A188E0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A18A04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A18A54(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A18B78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A18BC8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A18CEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A18D3C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A18E60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A18EB0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A18FD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A19024(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A19148(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A19198(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A192BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1930C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A19430(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A19480(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A195A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A195F4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A19718(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A19768(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1988C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A198DC(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A19A00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A19A50(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A19B74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A19BC4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A19CE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A19D38(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A19E5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A19EAC(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A19FD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1A020(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1A144(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1A194(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1A2B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1A308(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1A42C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1A47C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1A5A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1A5F0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1A714(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1A764(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1A888(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1A8D8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1A9FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1AA4C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1AB70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1ABC0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1ACE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1AD34(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1AE58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1AEA8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1AFCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1B01C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1B140(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1B190(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1B2B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1B304(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1B428(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1B478(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1B59C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1B5EC(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1B710(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1B760(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1B884(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1B8D4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1B9F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1BA48(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1BB6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1BBBC(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1BCE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1BD30(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1BE54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1BEA4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1BFC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1C018(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1C13C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1C18C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1C2B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1C300(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1C424(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1C474(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1C598(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1C5E8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1C70C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1C75C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1C880(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1C8D0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1C9F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1CA44(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1CB68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1CBB8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1CCDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1CD2C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1CE50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1CEA0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1CFC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1D014(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1D138(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1D188(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1D2AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1D2FC(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1D420(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1D470(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1D594(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1D5E4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1D708(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1D758(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1D87C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1D8CC(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1D9F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1DA40(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1DB64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1DBB4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1DCD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1DD28(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1DE4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1DE9C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1DFC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1E010(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1E134(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1E184(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1E2A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1E2F8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1E41C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1E46C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1E590(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1E5E0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1E704(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1E754(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1E878(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1E8C8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1E9EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1EA3C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1EB60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1EBB0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1ECD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1ED24(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1EE48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1EE98(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1EFBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1F00C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1F130(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1F180(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1F2A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1F2F4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1F418(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1F468(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1F58C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1F5DC(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (*(void *)(a2 + 8) || *(void *)(*(void *)a1 + 8))
  {
    v4[0] = "sdf/variableExpressionImpl.cpp";
    v4[1] = "operator()";
    v4[2] = 614;
    void v4[3] = "EvalResult pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::_ComparisonVisitor<std::less_equal>"
            "::operator()(const VtValue &) const [Comparator = std::less_equal]";
    char v5 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v4, "x.IsEmpty() && _y.IsEmpty()", 0);
  }
  sub_216A1F678(a3);
}

void sub_216A1F678(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Comparison operation not supported for None");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1F79C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

unsigned __int8 *sub_216A1F7EC@<X0>(unsigned __int8 *a1@<X0>, unsigned __int8 **a2@<X1>, uint64_t a3@<X8>)
{
  int v4 = a1;
  uint64_t v6 = *((void *)a1 + 1);
  if ((v6 & 4) != 0) {
    int v4 = (unsigned __int8 *)(*(uint64_t (**)(unsigned __int8 *))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
  }
  BOOL result = *a2;
  uint64_t v8 = *((void *)*a2 + 1);
  if ((v8 & 4) != 0) {
    BOOL result = (unsigned __int8 *)(*(uint64_t (**)(void))((v8 & 0xFFFFFFFFFFFFFFF8) + 168))();
  }
  *(unsigned char *)a3 = *v4 > *result;
  *(void *)(a3 + 8) = &unk_26C7501AB;
  *(void *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = 0;
  *(void *)(a3 + 32) = 0;
  return result;
}

void *sub_216A1F880@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v4 = a1;
  uint64_t v6 = a1[1];
  if ((v6 & 4) != 0) {
    int v4 = (void *)(*(uint64_t (**)(void *))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
  }
  BOOL result = *(void **)a2;
  uint64_t v8 = *(void *)(*(void *)a2 + 8);
  if ((v8 & 4) != 0) {
    BOOL result = (void *)(*(uint64_t (**)(void))((v8 & 0xFFFFFFFFFFFFFFF8) + 168))();
  }
  *(unsigned char *)a3 = *v4 > *result;
  *(void *)(a3 + 8) = &unk_26C7501AB;
  *(void *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = 0;
  *(void *)(a3 + 32) = 0;
  return result;
}

void sub_216A1F914(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1FA38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1FA88(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1FBAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1FBFC(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1FD20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1FD70(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A1FE94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A1FEE4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A20008(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A20058(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2017C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A201CC(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A202F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A20340(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A20464(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A204B4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A205D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A20628(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2074C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

BOOL sub_216A2079C@<W0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v6 = *(void *)(v5 + 8);
  if ((v6 & 4) != 0) {
    size_t v7 = (const void **)(*(uint64_t (**)(void))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))();
  }
  else {
    size_t v7 = *(const void ***)v5;
  }
  BOOL result = sub_216A20810((uint64_t)&v9, a2, v7);
  *(unsigned char *)a3 = result;
  *(void *)(a3 + 8) = &unk_26C7501AB;
  *(void *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = 0;
  *(void *)(a3 + 32) = 0;
  return result;
}

BOOL sub_216A20810(uint64_t a1, void *a2, const void **a3)
{
  int v3 = *((char *)a2 + 23);
  int v4 = *((char *)a3 + 23);
  if (v4 >= 0) {
    size_t v5 = *((unsigned __int8 *)a3 + 23);
  }
  else {
    size_t v5 = (size_t)a3[1];
  }
  if (v4 >= 0) {
    uint64_t v6 = a3;
  }
  else {
    uint64_t v6 = *a3;
  }
  if (v3 >= 0) {
    size_t v7 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    size_t v7 = a2[1];
  }
  if (v3 < 0) {
    a2 = (void *)*a2;
  }
  if (v7 >= v5) {
    size_t v8 = v5;
  }
  else {
    size_t v8 = v7;
  }
  int v9 = memcmp(v6, a2, v8);
  if (v9) {
    return v9 < 0;
  }
  else {
    return v5 < v7;
  }
}

void sub_216A2087C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A209A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A209F0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A20B14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A20B64(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A20C88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A20CD8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A20DFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A20E4C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A20F70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A20FC0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A210E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A21134(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A21258(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A212A8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A213CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2141C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A21540(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A21590(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A216B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A21704(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A21828(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A21878(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2199C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A219EC(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A21B10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A21B60(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A21C84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A21CD4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A21DF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A21E48(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A21F6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A21FBC(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A220E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A22130(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A22254(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A222A4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A223C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A22418(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2253C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2258C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A226B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A22700(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A22824(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A22874(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A22998(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A229E8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A22B0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A22B5C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A22C80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A22CD0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A22DF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A22E44(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A22F68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A22FB8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A230DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2312C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A23250(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A232A0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A233C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A23414(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A23538(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A23588(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A236AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A236FC(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A23820(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A23870(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A23994(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A239E4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A23B08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A23B58(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A23C7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A23CCC(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A23DF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A23E40(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A23F64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A23FB4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A240D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A24128(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2424C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2429C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A243C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A24410(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A24534(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A24584(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A246A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A246F8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2481C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2486C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A24990(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A249E0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A24B04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A24B54(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A24C78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A24CC8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A24DEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A24E3C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A24F60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A24FB0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A250D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A25124(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A25248(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A25298(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A253BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2540C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A25530(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A25580(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A256A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A256F4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A25818(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A25868(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2598C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A259DC(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A25B00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A25B50(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A25C74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A25CC4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A25DE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A25E38(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A25F5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A25FAC(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A260D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A26120(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A26244(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A26294(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A263B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A26408(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2652C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2657C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A266A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A266F0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A26814(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A26864(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A26988(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A269D8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A26AFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A26B4C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A26C70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A26CC0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A26DE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A26E34(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A26F58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A26FA8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A270CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2711C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A27240(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A27290(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A273B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A27404(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A27528(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A27578(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2769C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A276EC(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A27810(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A27860(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A27984(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A279D4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A27AF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A27B48(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A27C6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A27CBC(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A27DE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A27E30(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A27F54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A27FA4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A280C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A28118(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (*(void *)(a2 + 8) || *(void *)(*(void *)a1 + 8))
  {
    v4[0] = "sdf/variableExpressionImpl.cpp";
    v4[1] = "operator()";
    v4[2] = 614;
    void v4[3] = "EvalResult pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::_ComparisonVisitor<std::greater>::o"
            "perator()(const VtValue &) const [Comparator = std::greater]";
    char v5 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v4, "x.IsEmpty() && _y.IsEmpty()", 0);
  }
  sub_216A281B4(a3);
}

void sub_216A281B4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Comparison operation not supported for None");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A282D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

unsigned __int8 *sub_216A28328@<X0>(unsigned __int8 *a1@<X0>, unsigned __int8 **a2@<X1>, uint64_t a3@<X8>)
{
  int v4 = a1;
  uint64_t v6 = *((void *)a1 + 1);
  if ((v6 & 4) != 0) {
    int v4 = (unsigned __int8 *)(*(uint64_t (**)(unsigned __int8 *))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
  }
  BOOL result = *a2;
  uint64_t v8 = *((void *)*a2 + 1);
  if ((v8 & 4) != 0) {
    BOOL result = (unsigned __int8 *)(*(uint64_t (**)(void))((v8 & 0xFFFFFFFFFFFFFFF8) + 168))();
  }
  *(unsigned char *)a3 = *v4 >= *result;
  *(void *)(a3 + 8) = &unk_26C7501AB;
  *(void *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = 0;
  *(void *)(a3 + 32) = 0;
  return result;
}

void *sub_216A283BC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v4 = a1;
  uint64_t v6 = a1[1];
  if ((v6 & 4) != 0) {
    int v4 = (void *)(*(uint64_t (**)(void *))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
  }
  BOOL result = *(void **)a2;
  uint64_t v8 = *(void *)(*(void *)a2 + 8);
  if ((v8 & 4) != 0) {
    BOOL result = (void *)(*(uint64_t (**)(void))((v8 & 0xFFFFFFFFFFFFFFF8) + 168))();
  }
  *(unsigned char *)a3 = *v4 >= *result;
  *(void *)(a3 + 8) = &unk_26C7501AB;
  *(void *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = 0;
  *(void *)(a3 + 32) = 0;
  return result;
}

void sub_216A28450(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A28574(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A285C4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A286E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A28738(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2885C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A288AC(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A289D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A28A20(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A28B44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A28B94(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A28CB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A28D08(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A28E2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A28E7C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A28FA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A28FF0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A29114(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A29164(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A29288(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

BOOL sub_216A292D8@<W0>(uint64_t *a1@<X0>, const void **a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v6 = *(void *)(v5 + 8);
  if ((v6 & 4) != 0) {
    size_t v7 = (const void **)(*(uint64_t (**)(void))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))();
  }
  else {
    size_t v7 = *(const void ***)v5;
  }
  BOOL result = sub_216A2934C((uint64_t)&v9, a2, v7);
  *(unsigned char *)a3 = result;
  *(void *)(a3 + 8) = &unk_26C7501AB;
  *(void *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = 0;
  *(void *)(a3 + 32) = 0;
  return result;
}

BOOL sub_216A2934C(uint64_t a1, const void **a2, const void **a3)
{
  int v3 = *((char *)a3 + 23);
  int v4 = *((char *)a2 + 23);
  if (v4 >= 0) {
    size_t v5 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    size_t v5 = (size_t)a2[1];
  }
  if (v4 >= 0) {
    uint64_t v6 = a2;
  }
  else {
    uint64_t v6 = *a2;
  }
  if (v3 >= 0) {
    size_t v7 = *((unsigned __int8 *)a3 + 23);
  }
  else {
    size_t v7 = (size_t)a3[1];
  }
  if (v3 >= 0) {
    uint64_t v8 = a3;
  }
  else {
    uint64_t v8 = *a3;
  }
  if (v7 >= v5) {
    size_t v9 = v5;
  }
  else {
    size_t v9 = v7;
  }
  int v10 = memcmp(v6, v8, v9);
  if (v10) {
    return v10 >= 0;
  }
  else {
    return v5 >= v7;
  }
}

void sub_216A293B8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A294DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2952C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A29650(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A296A0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A297C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A29814(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A29938(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A29988(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A29AAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A29AFC(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A29C20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A29C70(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A29D94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A29DE4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A29F08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A29F58(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2A07C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2A0CC(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2A1F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2A240(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2A364(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2A3B4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2A4D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2A528(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2A64C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2A69C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2A7C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2A810(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2A934(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2A984(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2AAA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2AAF8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2AC1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2AC6C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2AD90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2ADE0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2AF04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2AF54(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2B078(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2B0C8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2B1EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2B23C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2B360(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2B3B0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2B4D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2B524(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2B648(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2B698(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2B7BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2B80C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2B930(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2B980(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2BAA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2BAF4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2BC18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2BC68(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2BD8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2BDDC(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2BF00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2BF50(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2C074(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2C0C4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2C1E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2C238(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2C35C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2C3AC(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2C4D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2C520(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2C644(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2C694(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2C7B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2C808(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2C92C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2C97C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2CAA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2CAF0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2CC14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2CC64(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2CD88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2CDD8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2CEFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2CF4C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2D070(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2D0C0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2D1E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2D234(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2D358(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2D3A8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2D4CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2D51C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2D640(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2D690(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2D7B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2D804(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2D928(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2D978(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2DA9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2DAEC(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2DC10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2DC60(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2DD84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2DDD4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2DEF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2DF48(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2E06C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2E0BC(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2E1E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2E230(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2E354(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2E3A4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2E4C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2E518(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2E63C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2E68C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2E7B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2E800(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2E924(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2E974(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2EA98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2EAE8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2EC0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2EC5C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2ED80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2EDD0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2EEF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2EF44(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2F068(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2F0B8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2F1DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2F22C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2F350(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2F3A0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2F4C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2F514(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2F638(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2F688(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2F7AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2F7FC(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2F920(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2F970(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2FA94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2FAE4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2FC08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2FC58(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2FD7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2FDCC(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A2FEF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A2FF40(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A30064(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A300B4(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A301D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A30228(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A3034C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A3039C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A304C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A30510(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A30634(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A30684(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A307A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A307F8(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A3091C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A3096C(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A30A90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A30AE0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type for comparison");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  size_t v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A30C04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A30C54(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (*(void *)(a2 + 8) || *(void *)(*(void *)a1 + 8))
  {
    v4[0] = "sdf/variableExpressionImpl.cpp";
    v4[1] = "operator()";
    v4[2] = 614;
    void v4[3] = "EvalResult pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::_ComparisonVisitor<std::greater_equ"
            "al>::operator()(const VtValue &) const [Comparator = std::greater_equal]";
    char v5 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v4, "x.IsEmpty() && _y.IsEmpty()", 0);
  }
  sub_216A30CF0(a3);
}

void sub_216A30CF0(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Comparison operation not supported for None");
  if (v9 >= 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  char v14 = 0;
  int v10 = (char *)operator new(0x18uLL);
  int v11 = v10;
  uint64_t v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  uint64_t v6 = v10;
  size_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  int v10 = 0;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A30E14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

long long *sub_216A30E64(uint64_t *a1, long long *a2, uint64_t a3, long long *a4, uint64_t a5)
{
  char v5 = a2;
  if (a5 >= 1)
  {
    uint64_t v7 = a3;
    uint64_t v11 = a1[2];
    uint64_t v9 = (uint64_t)(a1 + 2);
    uint64_t v10 = v11;
    unint64_t v12 = *(void *)(v9 - 8);
    if ((uint64_t)(0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v11 - v12) >> 3)) >= a5)
    {
      uint64_t v20 = v12 - (void)a2;
      if ((uint64_t)(0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v12 - (void)a2) >> 3)) >= a5)
      {
        unint64_t v21 = (long long *)(a3 + 24 * a5);
      }
      else
      {
        unint64_t v21 = (long long *)(a3 + 8 * ((uint64_t)(v12 - (void)a2) >> 3));
        a1[1] = sub_21680F614(v9, v21, a4, *(void *)(v9 - 8));
        if (v20 < 1) {
          return v5;
        }
      }
      sub_21680F12C((uint64_t)a1, (uint64_t)v5, v12, (uint64_t)v5 + 24 * a5);
      sub_216A3104C((uint64_t)v27, (long long *)v7, v21, (uint64_t)v5);
    }
    else
    {
      uint64_t v13 = *a1;
      unint64_t v14 = a5 - 0x5555555555555555 * ((uint64_t)(v12 - *a1) >> 3);
      if (v14 > 0xAAAAAAAAAAAAAAALL) {
        sub_21677CB10();
      }
      unint64_t v15 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)a2 - v13) >> 3);
      unint64_t v16 = 0xAAAAAAAAAAAAAAABLL * ((v10 - v13) >> 3);
      uint64_t v17 = 2 * v16;
      if (2 * v16 <= v14) {
        uint64_t v17 = v14;
      }
      if (v16 >= 0x555555555555555) {
        unint64_t v18 = 0xAAAAAAAAAAAAAAALL;
      }
      else {
        unint64_t v18 = v17;
      }
      v27[4] = v9;
      if (v18) {
        long long v19 = (char *)sub_216782ED8(v9, v18);
      }
      else {
        long long v19 = 0;
      }
      unint64_t v22 = &v19[24 * v15];
      v27[0] = v19;
      v27[1] = v22;
      v27[3] = &v19[24 * v18];
      uint64_t v23 = &v22[24 * a5];
      uint64_t v24 = 24 * a5;
      do
      {
        long long v25 = *(_OWORD *)v7;
        *((void *)v22 + 2) = *(void *)(v7 + 16);
        *(_OWORD *)unint64_t v22 = v25;
        v22 += 24;
        *(void *)(v7 + 8) = 0;
        *(void *)(v7 + 16) = 0;
        *(void *)uint64_t v7 = 0;
        v7 += 24;
        v24 -= 24;
      }
      while (v24);
      v27[2] = v23;
      char v5 = (long long *)sub_21680F250((uint64_t)a1, v27, v5);
      sub_216790E64((uint64_t)v27);
    }
  }
  return v5;
}

void sub_216A3102C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  *(void *)(v10 + 8) = v11;
  _Unwind_Resume(exception_object);
}

long long *sub_216A3104C(uint64_t a1, long long *a2, long long *a3, uint64_t a4)
{
  char v5 = a2;
  if (a2 != a3)
  {
    do
    {
      if (*(char *)(a4 + 23) < 0) {
        operator delete(*(void **)a4);
      }
      long long v7 = *v5;
      *(void *)(a4 + 16) = *((void *)v5 + 2);
      *(_OWORD *)a4 = v7;
      a4 += 24;
      *((unsigned char *)v5 + 23) = 0;
      *(unsigned char *)char v5 = 0;
      char v5 = (long long *)((char *)v5 + 24);
    }
    while (v5 != a3);
    return a3;
  }
  return v5;
}

uint64_t sub_216A310C0(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  if ((v3 & 4) != 0) {
    a1 = (*(uint64_t (**)(void))((v3 & 0xFFFFFFFFFFFFFFF8) + 168))();
  }
  char v4 = *(unsigned char *)a1;

  return sub_216A31420(a2, v4);
}

uint64_t sub_216A31110(uint64_t *a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t v3 = a1[1];
  if ((v3 & 4) != 0) {
    uint64_t v4 = (*(uint64_t (**)(void))((v3 & 0xFFFFFFFFFFFFFFF8) + 168))();
  }
  else {
    uint64_t v4 = *a1;
  }
  if (*(char *)(v4 + 23) < 0)
  {
    sub_216778F24(__p, *(void **)v4, *(void *)(v4 + 8));
  }
  else
  {
    long long v5 = *(_OWORD *)v4;
    uint64_t v9 = *(void *)(v4 + 16);
    *(_OWORD *)long long __p = v5;
  }
  uint64_t v6 = sub_216A31D68(a2, (long long *)__p);
  if (SHIBYTE(v9) < 0) {
    operator delete(__p[0]);
  }
  return v6;
}

void sub_216A311A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_216A311BC(uint64_t *a1)
{
  uint64_t v1 = a1[1];
  if ((v1 & 4) != 0) {
    a1 = (uint64_t *)(*(uint64_t (**)(void))((v1 & 0xFFFFFFFFFFFFFFF8) + 168))();
  }
  uint64_t v2 = *a1;
  if ((*a1 & 7) != 0)
  {
    if ((atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0) {
      v2 &= 0xFFFFFFFFFFFFFFF8;
    }
    if ((v2 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  return 0;
}

uint64_t sub_216A31220(uint64_t *a1)
{
  uint64_t v1 = a1[1];
  if ((v1 & 4) != 0) {
    uint64_t v2 = (*(uint64_t (**)(void))((v1 & 0xFFFFFFFFFFFFFFF8) + 168))();
  }
  else {
    uint64_t v2 = *a1;
  }
  long long v3 = *(_OWORD *)(v2 + 16);
  long long v7 = *(_OWORD *)v2;
  long long v8 = v3;
  uint64_t v4 = *(void *)(v2 + 32);
  uint64_t v9 = v4;
  if (v4)
  {
    long long v5 = (atomic_ullong *)(v4 - 16);
    if (*((void *)&v8 + 1)) {
      long long v5 = (atomic_ullong *)*((void *)&v8 + 1);
    }
    atomic_fetch_add_explicit(v5, 1uLL, memory_order_relaxed);
  }
  sub_2168F83DC((uint64_t)&v7);
  return 0;
}

uint64_t sub_216A31294(uint64_t *a1)
{
  uint64_t v1 = a1[1];
  if ((v1 & 4) != 0) {
    uint64_t v2 = (*(uint64_t (**)(void))((v1 & 0xFFFFFFFFFFFFFFF8) + 168))();
  }
  else {
    uint64_t v2 = *a1;
  }
  long long v3 = *(_OWORD *)(v2 + 16);
  long long v7 = *(_OWORD *)v2;
  long long v8 = v3;
  uint64_t v4 = *(void *)(v2 + 32);
  uint64_t v9 = v4;
  if (v4)
  {
    long long v5 = (atomic_ullong *)(v4 - 16);
    if (*((void *)&v8 + 1)) {
      long long v5 = (atomic_ullong *)*((void *)&v8 + 1);
    }
    atomic_fetch_add_explicit(v5, 1uLL, memory_order_relaxed);
  }
  sub_2169B1EE4(&v7);
  return 0;
}

uint64_t sub_216A31308(uint64_t *a1)
{
  uint64_t v1 = a1[1];
  if ((v1 & 4) != 0) {
    uint64_t v2 = (*(uint64_t (**)(void))((v1 & 0xFFFFFFFFFFFFFFF8) + 168))();
  }
  else {
    uint64_t v2 = *a1;
  }
  long long v3 = *(_OWORD *)(v2 + 16);
  long long v7 = *(_OWORD *)v2;
  long long v8 = v3;
  uint64_t v4 = *(void *)(v2 + 32);
  uint64_t v9 = v4;
  if (v4)
  {
    long long v5 = (atomic_ullong *)(v4 - 16);
    if (*((void *)&v8 + 1)) {
      long long v5 = (atomic_ullong *)*((void *)&v8 + 1);
    }
    atomic_fetch_add_explicit(v5, 1uLL, memory_order_relaxed);
  }
  sub_2169B2E0C(&v7);
  return 0;
}

uint64_t sub_216A3137C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if ((v1 & 4) != 0) {
    uint64_t v2 = (long long *)(*(uint64_t (**)(void))((v1 & 0xFFFFFFFFFFFFFFF8) + 168))();
  }
  else {
    uint64_t v2 = *(long long **)a1;
  }
  sub_21689A6D8((uint64_t)v4, v2);
  pxrInternal__aapl__pxrReserved__::GfFrustum::~GfFrustum((pxrInternal__aapl__pxrReserved__::GfFrustum *)v4);
  return 0;
}

uint64_t sub_216A313CC(uint64_t *a1)
{
  uint64_t v1 = a1[1];
  if ((v1 & 4) != 0) {
    uint64_t v2 = (*(uint64_t (**)(void))((v1 & 0xFFFFFFFFFFFFFFF8) + 168))();
  }
  else {
    uint64_t v2 = *a1;
  }
  sub_21692C844(v4, v2);
  sub_2167FB780((uint64_t)v4, (void *)v4[1]);
  return 0;
}

uint64_t sub_216A31420(pxrInternal__aapl__pxrReserved__::VtValue *a1, char a2)
{
  char v5 = a2;
  if (*((void *)a1 + 1))
  {
    uint64_t result = sub_216A31600(a1);
    if (!result) {
      return result;
    }
    v4[0] = &v5;
    sub_216A31638(a1, v4);
  }
  else
  {
    sub_216A314BC((uint64_t)v4, 1uLL, &v5);
    sub_216A31534(a1, (uint64_t)v4);
    sub_2168F83DC((uint64_t)v4);
  }
  return 1;
}

void sub_216A314A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_216A314BC(uint64_t a1, unint64_t a2, unsigned char *a3)
{
  *(void *)(a1 + 32) = 0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  sub_2168F845C((void *)a1);
  long long v7 = a3;
  sub_2169AAD2C((unint64_t *)a1, a2, &v7);
  return a1;
}

void sub_216A3151C(_Unwind_Exception *a1)
{
  sub_2168F83DC(v1);
  _Unwind_Resume(a1);
}

void *sub_216A31534(void *a1, uint64_t a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  sub_2168EDEE4((uint64_t)v5, (uint64_t)a1);
  a1[1] = &off_26C7553B0;
  sub_2168F8DBC(a1, a2);
  if (v6) {
    (*(void (**)(unsigned char *))(v6 + 32))(v5);
  }
  return a1;
}

void sub_216A315C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_21675DB74(exception_object);
}

uint64_t sub_216A31600(pxrInternal__aapl__pxrReserved__::VtValue *a1)
{
  uint64_t v1 = *((void *)a1 + 1);
  if (!v1) {
    return 0;
  }
  if (*(_DWORD *)((v1 & 0xFFFFFFFFFFFFFFF8) + 16) == 47) {
    return 1;
  }
  if ((v1 & 4) != 0) {
    return pxrInternal__aapl__pxrReserved__::VtValue::_TypeIsImpl(a1, &stru_26C74E160);
  }
  else {
    return 0;
  }
}

void sub_216A31638(void *a1, unsigned char **a2)
{
  uint64_t v3 = sub_216A316E4(a1);
  long long v4 = *(_OWORD *)(v3 + 16);
  long long v6 = *(_OWORD *)v3;
  long long v7 = v4;
  *(_OWORD *)uint64_t v3 = 0u;
  *(_OWORD *)(v3 + 16) = 0u;
  uint64_t v8 = *(void *)(v3 + 32);
  *(void *)(v3 + 32) = 0;
  sub_216A31778((uint64_t)&v6, *a2);
  if ((long long *)v3 != &v6)
  {
    sub_2168F83DC(v3);
    long long v5 = v7;
    *(_OWORD *)uint64_t v3 = v6;
    *(_OWORD *)(v3 + 16) = v5;
    long long v6 = 0u;
    long long v7 = 0u;
    *(void *)(v3 + 32) = v8;
    uint64_t v8 = 0;
  }
  sub_2168F83DC((uint64_t)&v6);
}

void sub_216A316CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_216A316E4(void *a1)
{
  v4[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = a1[1];
  if ((v2 & 4) != 0)
  {
    (*(void (**)(void *__return_ptr, void *))((v2 & 0xFFFFFFFFFFFFFFF8) + 176))(v4, a1);
    sub_2168ED33C(a1, v4);
    sub_2168EE084((uint64_t)v4);
  }
  return sub_2169AAC7C((_OWORD **)a1);
}

void sub_216A31778(uint64_t a1, unsigned char *a2)
{
  if (!*(_DWORD *)(a1 + 8))
  {
    uint64_t v4 = *(void *)a1;
    if (*(void *)(a1 + 24)) {
      goto LABEL_14;
    }
    uint64_t v5 = *(void *)(a1 + 32);
    if (!v5) {
      goto LABEL_10;
    }
    unint64_t v6 = atomic_load((unint64_t *)(v5 - 16));
    if (v6 != 1) {
      goto LABEL_14;
    }
    uint64_t v5 = *(void *)(a1 + 32);
    if (v5)
    {
      if (*(void *)(a1 + 24)) {
        long long v7 = (uint64_t *)a1;
      }
      else {
        long long v7 = (uint64_t *)(v5 - 8);
      }
      uint64_t v8 = *v7;
    }
    else
    {
LABEL_10:
      uint64_t v8 = 0;
    }
    if (v4 != v8)
    {
      *(unsigned char *)(v5 + v4) = *a2;
LABEL_13:
      ++*(void *)a1;
      return;
    }
LABEL_14:
    uint64_t v9 = *(char **)(a1 + 32);
    uint64_t v10 = 1;
    do
    {
      unint64_t v11 = v10;
      v10 *= 2;
    }
    while (v11 < v4 + 1);
    unint64_t v12 = sub_2169AAECC(a1, v11);
    uint64_t v13 = v12;
    if (v4)
    {
      uint64_t v14 = v4;
      unint64_t v15 = v12;
      do
      {
        char v16 = *v9++;
        *v15++ = v16;
        --v14;
      }
      while (v14);
    }
    *((unsigned char *)v12 + v4) = *a2;
    sub_2168F83DC(a1);
    *(void *)(a1 + 32) = v13;
    goto LABEL_13;
  }
  v18[0] = "vt/array.h";
  v18[1] = "emplace_back";
  v18[2] = 433;
  v18[3] = "void pxrInternal__aapl__pxrReserved__::VtArray<BOOL>::emplace_back(Args &&...) [T = BOOL, Args = <BOOL>]";
  char v19 = 0;
  if (*(_DWORD *)(a1 + 12))
  {
    if (*(_DWORD *)(a1 + 16)) {
      int v17 = 4;
    }
    else {
      int v17 = 3;
    }
  }
  else
  {
    int v17 = 2;
  }
  pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v18, 1, (pxrInternal__aapl__pxrReserved__ *)"Array rank %u != 1", v17);
}

uint64_t sub_216A318E0(pxrInternal__aapl__pxrReserved__::VtValue *a1, uint64_t a2)
{
  uint64_t v5 = a2;
  if (*((void *)a1 + 1))
  {
    uint64_t result = sub_2169DDCD4(a1);
    if (!result) {
      return result;
    }
    v4[0] = &v5;
    sub_216A31AC0(a1, v4);
  }
  else
  {
    sub_216A3197C((uint64_t)v4, 1uLL, &v5);
    sub_216A319F4(a1, (uint64_t)v4);
    sub_2168F83DC((uint64_t)v4);
  }
  return 1;
}

void sub_216A31964(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_216A3197C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  *(void *)(a1 + 32) = 0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  sub_2168F845C((void *)a1);
  long long v7 = a3;
  sub_2169ADDD0((unint64_t *)a1, a2, &v7);
  return a1;
}

void sub_216A319DC(_Unwind_Exception *a1)
{
  sub_2168F83DC(v1);
  _Unwind_Resume(a1);
}

void *sub_216A319F4(void *a1, uint64_t a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  sub_2168EDEE4((uint64_t)v5, (uint64_t)a1);
  a1[1] = &off_26C755528;
  sub_2168F8DBC(a1, a2);
  if (v6) {
    (*(void (**)(unsigned char *))(v6 + 32))(v5);
  }
  return a1;
}

void sub_216A31A88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_21675DB74(exception_object);
}

void sub_216A31AC0(void *a1, void **a2)
{
  uint64_t v3 = sub_216A31B6C(a1);
  long long v4 = *(_OWORD *)(v3 + 16);
  long long v6 = *(_OWORD *)v3;
  long long v7 = v4;
  *(_OWORD *)uint64_t v3 = 0u;
  *(_OWORD *)(v3 + 16) = 0u;
  uint64_t v8 = *(void *)(v3 + 32);
  *(void *)(v3 + 32) = 0;
  sub_216A31C00((uint64_t)&v6, *a2);
  if ((long long *)v3 != &v6)
  {
    sub_2168F83DC(v3);
    long long v5 = v7;
    *(_OWORD *)uint64_t v3 = v6;
    *(_OWORD *)(v3 + 16) = v5;
    long long v6 = 0u;
    long long v7 = 0u;
    *(void *)(v3 + 32) = v8;
    uint64_t v8 = 0;
  }
  sub_2168F83DC((uint64_t)&v6);
}

void sub_216A31B54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_216A31B6C(void *a1)
{
  v4[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = a1[1];
  if ((v2 & 4) != 0)
  {
    (*(void (**)(void *__return_ptr, void *))((v2 & 0xFFFFFFFFFFFFFFF8) + 176))(v4, a1);
    sub_2168ED33C(a1, v4);
    sub_2168EE084((uint64_t)v4);
  }
  return sub_2169ADD1C((_OWORD **)a1);
}

void sub_216A31C00(uint64_t a1, void *a2)
{
  if (!*(_DWORD *)(a1 + 8))
  {
    uint64_t v4 = *(void *)a1;
    if (*(void *)(a1 + 24)) {
      goto LABEL_14;
    }
    uint64_t v5 = *(void *)(a1 + 32);
    if (!v5) {
      goto LABEL_10;
    }
    unint64_t v6 = atomic_load((unint64_t *)(v5 - 16));
    if (v6 != 1) {
      goto LABEL_14;
    }
    uint64_t v5 = *(void *)(a1 + 32);
    if (v5)
    {
      if (*(void *)(a1 + 24)) {
        long long v7 = (uint64_t *)a1;
      }
      else {
        long long v7 = (uint64_t *)(v5 - 8);
      }
      uint64_t v8 = *v7;
    }
    else
    {
LABEL_10:
      uint64_t v8 = 0;
    }
    if (v4 != v8)
    {
      *(void *)(v5 + 8 * v4) = *a2;
LABEL_13:
      ++*(void *)a1;
      return;
    }
LABEL_14:
    uint64_t v9 = *(uint64_t **)(a1 + 32);
    uint64_t v10 = 1;
    do
    {
      unint64_t v11 = v10;
      v10 *= 2;
    }
    while (v11 < v4 + 1);
    unint64_t v12 = sub_2169ADF98(a1, v11);
    uint64_t v13 = v12;
    if (v4)
    {
      uint64_t v14 = 8 * v4;
      unint64_t v15 = v12;
      do
      {
        uint64_t v16 = *v9++;
        *v15++ = v16;
        v14 -= 8;
      }
      while (v14);
    }
    v12[v4] = *a2;
    sub_2168F83DC(a1);
    *(void *)(a1 + 32) = v13;
    goto LABEL_13;
  }
  v18[0] = "vt/array.h";
  v18[1] = "emplace_back";
  v18[2] = 433;
  v18[3] = "void pxrInternal__aapl__pxrReserved__::VtArray<long long>::emplace_back(Args &&...) [T = long long, Args = <long long>]";
  char v19 = 0;
  if (*(_DWORD *)(a1 + 12))
  {
    if (*(_DWORD *)(a1 + 16)) {
      int v17 = 4;
    }
    else {
      int v17 = 3;
    }
  }
  else
  {
    int v17 = 2;
  }
  pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v18, 1, (pxrInternal__aapl__pxrReserved__ *)"Array rank %u != 1", v17);
}

uint64_t sub_216A31D68(pxrInternal__aapl__pxrReserved__::VtValue *a1, long long *a2)
{
  if (*((void *)a1 + 1))
  {
    uint64_t result = sub_216998044(a1);
    if (!result) {
      return result;
    }
    v5[0] = a2;
    sub_216A31F44(a1, v5);
  }
  else
  {
    sub_216A31E00((uint64_t)v5, 1uLL, a2);
    sub_216A31E78(a1, (uint64_t)v5);
    sub_2169B1EE4(v5);
  }
  return 1;
}

void sub_216A31DE8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_2169B1EE4((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_216A31E00(uint64_t a1, unint64_t a2, long long *a3)
{
  *(void *)(a1 + 32) = 0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  sub_2169B1FA0((void *)a1);
  long long v7 = a3;
  sub_2169B2028((unint64_t *)a1, a2, &v7);
  return a1;
}

void sub_216A31E60(_Unwind_Exception *a1)
{
  sub_2169B1EE4(v1);
  _Unwind_Resume(a1);
}

void *sub_216A31E78(void *a1, uint64_t a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  sub_2168EDEE4((uint64_t)v5, (uint64_t)a1);
  a1[1] = off_26C7558C0;
  sub_2168F8DBC(a1, a2);
  if (v6) {
    (*(void (**)(unsigned char *))(v6 + 32))(v5);
  }
  return a1;
}

void sub_216A31F0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_21675DB74(exception_object);
}

void sub_216A31F44(void *a1, long long **a2)
{
  uint64_t v3 = sub_216A31FF0(a1);
  long long v4 = *(_OWORD *)(v3 + 16);
  long long v6 = *(_OWORD *)v3;
  long long v7 = v4;
  *(_OWORD *)uint64_t v3 = 0u;
  *(_OWORD *)(v3 + 16) = 0u;
  uint64_t v8 = *(void *)(v3 + 32);
  *(void *)(v3 + 32) = 0;
  sub_216A32084((uint64_t)&v6, *a2);
  if ((long long *)v3 != &v6)
  {
    sub_2169B1EE4((void *)v3);
    long long v5 = v7;
    *(_OWORD *)uint64_t v3 = v6;
    *(_OWORD *)(v3 + 16) = v5;
    long long v6 = 0u;
    long long v7 = 0u;
    *(void *)(v3 + 32) = v8;
    uint64_t v8 = 0;
  }
  sub_2169B1EE4(&v6);
}

void sub_216A31FD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_216A31FF0(void *a1)
{
  v4[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = a1[1];
  if ((v2 & 4) != 0)
  {
    (*(void (**)(void *__return_ptr, void *))((v2 & 0xFFFFFFFFFFFFFFF8) + 176))(v4, a1);
    sub_2168ED33C(a1, v4);
    sub_2168EE084((uint64_t)v4);
  }
  return sub_2169B1E18((_OWORD **)a1);
}

void sub_216A32084(uint64_t a1, long long *a2)
{
  if (!*(_DWORD *)(a1 + 8))
  {
    uint64_t v4 = *(void *)a1;
    if (*(void *)(a1 + 24)) {
      goto LABEL_15;
    }
    uint64_t v5 = *(void *)(a1 + 32);
    if (!v5) {
      goto LABEL_10;
    }
    unint64_t v6 = atomic_load((unint64_t *)(v5 - 16));
    if (v6 != 1) {
      goto LABEL_15;
    }
    uint64_t v5 = *(void *)(a1 + 32);
    if (v5)
    {
      if (*(void *)(a1 + 24)) {
        long long v7 = (uint64_t *)a1;
      }
      else {
        long long v7 = (uint64_t *)(v5 - 8);
      }
      uint64_t v8 = *v7;
    }
    else
    {
LABEL_10:
      uint64_t v8 = 0;
    }
    if (v4 != v8)
    {
      long long v9 = *a2;
      uint64_t v10 = v5 + 24 * v4;
      *(void *)(v10 + 16) = *((void *)a2 + 2);
      *(_OWORD *)uint64_t v10 = v9;
      *((void *)a2 + 1) = 0;
      *((void *)a2 + 2) = 0;
      *(void *)a2 = 0;
LABEL_13:
      ++*(void *)a1;
      return;
    }
LABEL_15:
    uint64_t v11 = *(void *)(a1 + 32);
    uint64_t v12 = 1;
    do
    {
      unint64_t v13 = v12;
      v12 *= 2;
    }
    while (v13 < v4 + 1);
    uint64_t v14 = sub_2169B21D0(a1, v13);
    uint64_t v15 = 3 * v4;
    sub_2169B232C(v11, v11 + 8 * v15, (uint64_t)v14);
    uint64_t v16 = *((void *)a2 + 2);
    int v17 = &v14[v15];
    *(_OWORD *)int v17 = *a2;
    v17[2] = v16;
    *((void *)a2 + 1) = 0;
    *((void *)a2 + 2) = 0;
    *(void *)a2 = 0;
    sub_2169B1EE4((void *)a1);
    *(void *)(a1 + 32) = v14;
    goto LABEL_13;
  }
  v19[0] = "vt/array.h";
  v19[1] = "emplace_back";
  v19[2] = 433;
  v19[3] = "void pxrInternal__aapl__pxrReserved__::VtArray<std::string>::emplace_back(Args &&...) [T = std::string, Args "
           "= <std::string>]";
  char v20 = 0;
  if (*(_DWORD *)(a1 + 12))
  {
    if (*(_DWORD *)(a1 + 16)) {
      int v18 = 4;
    }
    else {
      int v18 = 3;
    }
  }
  else
  {
    int v18 = 2;
  }
  pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v19, 1, (pxrInternal__aapl__pxrReserved__ *)"Array rank %u != 1", v18);
}

void sub_216A32210(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A32264(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A32280(uint64_t *a1@<X0>, const char *a2@<X1>, char *a3@<X2>, void *a4@<X8>)
{
  *(void *)&long long v16 = *MEMORY[0x263EF8340];
  if (*((char *)a1 + 23) >= 0) {
    char v5 = a1;
  }
  else {
    char v5 = (uint64_t *)*a1;
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", a2, a3, "contains", v5);
  long long v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = &v9;
  char v13 = 0;
  long long v9 = (char *)operator new(0x18uLL);
  uint64_t v10 = v9;
  uint64_t v11 = v9 + 24;
  unint64_t v6 = sub_21695F6C0((uint64_t)&v11, &__p, &v16, v9);
  long long v7 = v9;
  uint64_t v8 = v11;
  a4[1] = 0;
  a4[2] = v7;
  a4[3] = v6;
  a4[4] = v8;
  long long v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = &v9;
  sub_216782F20((void ***)&v12);
  if (v15 < 0) {
    operator delete((void *)__p);
  }
}

void sub_216A32380(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void **a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A323B8(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A3240C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A32428(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A3247C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A32498(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A324EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A32508(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A3255C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A32578(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A325CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A325E8(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A3263C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A32658(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A326AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A326C8(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A3271C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A32738(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A3278C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A327A8(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A327FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A32818(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A3286C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A32888(pxrInternal__aapl__pxrReserved__::VtValue **a1@<X0>, char **a2@<X1>, void *a3@<X8>)
{
  if (sub_21695C360(*a1))
  {
    uint64_t v6 = *((void *)*a1 + 1);
    if ((v6 & 4) != 0) {
      uint64_t v7 = (*(uint64_t (**)(void))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))();
    }
    else {
      uint64_t v7 = *(void *)*a1;
    }
    if (*(char *)(v7 + 23) >= 0) {
      uint64_t v8 = (char *)v7;
    }
    else {
      uint64_t v8 = *(char **)v7;
    }
    *(unsigned char *)a3 = pxrInternal__aapl__pxrReserved__::TfStringContains(a2, v8);
    a3[1] = &unk_26C7501AB;
    a3[2] = 0;
    a3[3] = 0;
    a3[4] = 0;
  }
  else
  {
    sub_216779094(__p, "Invalid search value");
    sub_216A32280((uint64_t *)__p, v9, v10, a3);
    if (v12 < 0) {
      operator delete(__p[0]);
    }
  }
}

void sub_216A3294C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A32968(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A329BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A329D8(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A32A2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A32A48(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A32A9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A32AB8(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A32B0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A32B28(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A32B7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A32B98(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A32BEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A32C08(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A32C5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A32C78(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A32CCC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A32CE8(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A32D3C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A32D58(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A32DAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A32DC8(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A32E1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A32E38(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A32E8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A32EA8(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A32EFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A32F18(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A32F6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A32F88(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A32FDC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A32FF8(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A3304C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A33068(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A330BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A330D8(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A3312C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A33148(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A3319C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A331B8(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A3320C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A33228(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A3327C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A33298(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A332EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A33308(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A3335C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A33378(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A333CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A333E8(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A3343C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A33458(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A334AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A334C8(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A3351C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A33538(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A3358C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A335A8(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A335FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A33618(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A3366C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A33688(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A336DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A336F8(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A3374C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A33768(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A337BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A337D8(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A3382C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A33848(pxrInternal__aapl__pxrReserved__::VtValue **a1@<X0>, size_t *a2@<X1>, void *a3@<X8>)
{
  if (sub_216959490(*a1))
  {
    uint64_t v6 = (char *)a2[4];
    size_t v7 = *a2;
    uint64_t v8 = &v6[*a2];
    long long v9 = *a1;
    uint64_t v10 = *((void *)*a1 + 1);
    if ((v10 & 4) != 0)
    {
      long long v9 = (pxrInternal__aapl__pxrReserved__::VtValue *)(*(uint64_t (**)(void))((v10 & 0xFFFFFFFFFFFFFFF8) + 168))();
      char v12 = (char *)a2[4];
      size_t v11 = *a2;
    }
    else
    {
      size_t v11 = *a2;
      char v12 = v6;
    }
    char v13 = (char *)memchr(v6, *(unsigned __int8 *)v9, v7);
    if (v13) {
      uint64_t v14 = v13;
    }
    else {
      uint64_t v14 = v8;
    }
    *(unsigned char *)a3 = v14 != &v12[v11];
    a3[1] = &unk_26C7501AB;
    a3[2] = 0;
    a3[3] = 0;
    a3[4] = 0;
  }
  else
  {
    sub_216779094(__p, "Invalid search value");
    sub_216A32280((uint64_t *)__p, v15, v16, a3);
    if (v18 < 0) {
      operator delete(__p[0]);
    }
  }
}

void sub_216A33938(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A33954(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A339A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A339C4(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A33A18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A33A34(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A33A88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A33AA4(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A33AF8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A33B14(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A33B68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A33B84(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A33BD8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A33BF4(pxrInternal__aapl__pxrReserved__::VtValue **a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  if (sub_2169F9268(*a1))
  {
    uint64_t v6 = (void *)a2[4];
    uint64_t v7 = *a2;
    uint64_t v8 = *a1;
    uint64_t v9 = *((void *)*a1 + 1);
    if ((v9 & 4) != 0)
    {
      uint64_t v8 = (pxrInternal__aapl__pxrReserved__::VtValue *)(*(uint64_t (**)(void))((v9 & 0xFFFFFFFFFFFFFFF8) + 168))();
      if (v7)
      {
LABEL_4:
        uint64_t v10 = 8 * v7;
        size_t v11 = &v6[v7];
        while (*v6 != *(void *)v8)
        {
          ++v6;
          v10 -= 8;
          if (!v10)
          {
            uint64_t v6 = v11;
            break;
          }
        }
      }
    }
    else if (v7)
    {
      goto LABEL_4;
    }
    *(unsigned char *)a3 = v6 != (void *)(a2[4] + 8 * *a2);
    a3[1] = &unk_26C7501AB;
    a3[2] = 0;
    a3[3] = 0;
    a3[4] = 0;
    return;
  }
  sub_216779094(__p, "Invalid search value");
  sub_216A32280((uint64_t *)__p, v12, v13, a3);
  if (v15 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A33CF0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A33D0C(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A33D60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A33D7C(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A33DD0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A33DEC(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A33E40(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A33E5C(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A33EB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A33ECC(pxrInternal__aapl__pxrReserved__::VtValue **a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  if (sub_21695C360(*a1))
  {
    uint64_t v6 = a2[4];
    uint64_t v7 = v6 + 24 * *a2;
    uint64_t v8 = *((void *)*a1 + 1);
    if ((v8 & 4) != 0) {
      uint64_t v9 = (unsigned __int8 **)(*(uint64_t (**)(void))((v8 & 0xFFFFFFFFFFFFFFF8) + 168))();
    }
    else {
      uint64_t v9 = *(unsigned __int8 ***)*a1;
    }
    *(unsigned char *)a3 = sub_2169CAFD0(v6, v7, v9) != a2[4] + 24 * *a2;
    a3[1] = &unk_26C7501AB;
    a3[2] = 0;
    a3[3] = 0;
    a3[4] = 0;
  }
  else
  {
    sub_216779094(__p, "Invalid search value");
    sub_216A32280((uint64_t *)__p, v10, v11, a3);
    if (v13 < 0) {
      operator delete(__p[0]);
    }
  }
}

void sub_216A33FBC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A33FD8(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A3402C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A34048(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A3409C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A340B8(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A3410C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A34128(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A3417C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A34198(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A341EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A34208(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A3425C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A34278(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A342CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A342E8(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A3433C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A34358(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A343AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A343C8(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A3441C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A34438(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A3448C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A344A8(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A344FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A34518(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A3456C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A34588(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A345DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A345F8(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A3464C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A34668(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A346BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A346D8(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A3472C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A34748(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A3479C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A347B8(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A3480C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A34828(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A3487C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A34898(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A348EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A34908(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A3495C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A34978(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A349CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A349E8(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A34A3C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A34A58(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A34AAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A34AC8(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A34B1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A34B38(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A34B8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A34BA8(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A34BFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A34C18(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A34C6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A34C88(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A34CDC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A34CF8(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A34D4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A34D68(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A34DBC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A34DD8(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A34E2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A34E48(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A34E9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A34EB8(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A34F0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A34F28(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A34F7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A34F98(void *a1@<X8>)
{
  sub_216779094(__p, "Value to search must be a list or string");
  sub_216A32280((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A34FEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A35008(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A3505C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A35078(uint64_t *a1@<X0>, const char *a2@<X1>, char *a3@<X2>, void *a4@<X8>)
{
  *(void *)&long long v16 = *MEMORY[0x263EF8340];
  if (*((char *)a1 + 23) >= 0) {
    char v5 = a1;
  }
  else {
    char v5 = (uint64_t *)*a1;
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", a2, a3, "at", v5);
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  size_t v11 = 0;
  char v12 = &v9;
  char v13 = 0;
  uint64_t v9 = (char *)operator new(0x18uLL);
  uint64_t v10 = v9;
  size_t v11 = v9 + 24;
  uint64_t v6 = sub_21695F6C0((uint64_t)&v11, &__p, &v16, v9);
  uint64_t v7 = v9;
  uint64_t v8 = v11;
  a4[1] = 0;
  a4[2] = v7;
  a4[3] = v6;
  a4[4] = v8;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  size_t v11 = 0;
  char v12 = &v9;
  sub_216782F20((void ***)&v12);
  if (v15 < 0) {
    operator delete((void *)__p);
  }
}

void sub_216A35178(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void **a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A351B0(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A35204(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A35220(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A35274(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A35290(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A352E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A35300(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A35354(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A35370(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A353C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A353E0(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A35434(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A35450(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A354A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A354C0(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A35514(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A35530(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A35584(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A355A0(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A355F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A35610(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A35664(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A35680(uint64_t *a1@<X0>, uint64_t a2@<X1>, unsigned int **a3@<X8>)
{
  unint64_t v4 = *(unsigned __int8 *)(a2 + 23);
  if ((v4 & 0x80u) != 0) {
    unint64_t v4 = *(void *)(a2 + 8);
  }
  int64_t v5 = (v4 & (*a1 >> 63)) + *a1;
  if (v5 < 0 || v5 >= v4)
  {
    sub_216779094(&__p, "Index out of range");
    sub_216A35078((uint64_t *)&__p, v6, v7, a3);
  }
  else
  {
    std::string::basic_string(&__p, (const std::string *)a2, v5, 1uLL, (std::allocator<char> *)&v9);
    a3[1] = (unsigned int *)&off_26C750BB8;
    sub_21691B31C(a3, (uint64_t)&__p);
    a3[2] = 0;
    a3[3] = 0;
    a3[4] = 0;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_216A35734(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A35754(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A357A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A357C4(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A35818(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A35834(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A35888(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A358A4(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A358F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A35914(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A35968(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A35984(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A359D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A359F4(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A35A48(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A35A64(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A35AB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A35AD4(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A35B28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A35B44(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A35B98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A35BB4(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A35C08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A35C24(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A35C78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A35C94(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A35CE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A35D04(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A35D58(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A35D74(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A35DC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A35DE4(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A35E38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A35E54(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A35EA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A35EC4(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A35F18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A35F34(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A35F88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A35FA4(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A35FF8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A36014(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A36068(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A36084(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A360D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A360F4(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A36148(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A36164(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A361B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A361D4(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A36228(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A36244(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A36298(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A362B4(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A36308(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A36324(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A36378(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A36394(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A363E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A36404(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A36458(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A36474(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A364C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A364E4(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A36538(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A36554(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A365A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A365C4(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A36618(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A36634(uint64_t *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = (*a2 & (*a1 >> 63)) + *a1;
  if (v4 < 0 || (unint64_t)v4 >= *a2)
  {
    sub_216779094(__p, "Index out of range");
    sub_216A35078((uint64_t *)__p, v6, v7, a3);
    if (v9 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    uint64_t v5 = a2[4];
    a3[1] = &unk_26C7501AB;
    *(unsigned char *)a3 = *(unsigned char *)(v5 + v4);
    a3[3] = 0;
    a3[4] = 0;
    a3[2] = 0;
  }
}

void sub_216A366CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A366E8(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A3673C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A36758(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A367AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A367C8(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A3681C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A36838(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A3688C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A368A8(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A368FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A36918(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A3696C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A36988(uint64_t *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = (*a2 & (*a1 >> 63)) + *a1;
  if (v4 < 0 || (unint64_t)v4 >= *a2)
  {
    sub_216779094(__p, "Index out of range");
    sub_216A35078((uint64_t *)__p, v6, v7, a3);
    if (v9 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    uint64_t v5 = a2[4];
    a3[1] = &unk_26C750823;
    *a3 = *(void *)(v5 + 8 * v4);
    a3[3] = 0;
    a3[4] = 0;
    a3[2] = 0;
  }
}

void sub_216A36A20(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A36A3C(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A36A90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A36AAC(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A36B00(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A36B1C(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A36B70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A36B8C(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A36BE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A36BFC(uint64_t *a1@<X0>, void *a2@<X1>, unsigned int **a3@<X8>)
{
  uint64_t v4 = (*a2 & (*a1 >> 63)) + *a1;
  if (v4 < 0 || (unint64_t)v4 >= *a2)
  {
    sub_216779094(__p, "Index out of range");
    sub_216A35078((uint64_t *)__p, v6, v7, a3);
    if (v9 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    uint64_t v5 = a2[4] + 24 * v4;
    a3[1] = (unsigned int *)&off_26C750BB8;
    sub_21691B31C(a3, v5);
    a3[2] = 0;
    a3[3] = 0;
    a3[4] = 0;
  }
}

void sub_216A36C98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A36CB4(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A36D08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A36D24(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A36D78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A36D94(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A36DE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A36E04(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A36E58(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A36E74(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A36EC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A36EE4(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A36F38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A36F54(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A36FA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A36FC4(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A37018(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A37034(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A37088(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A370A4(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A370F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A37114(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A37168(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A37184(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A371D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A371F4(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A37248(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A37264(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A372B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A372D4(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A37328(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A37344(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A37398(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A373B4(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A37408(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A37424(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A37478(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A37494(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A374E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A37504(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A37558(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A37574(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A375C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A375E4(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A37638(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A37654(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A376A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A376C4(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A37718(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A37734(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A37788(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A377A4(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A377F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A37814(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A37868(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A37884(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A378D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A378F4(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A37948(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A37964(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A379B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A379D4(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A37A28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A37A44(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A37A98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A37AB4(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A37B08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A37B24(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A37B78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A37B94(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A37BE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A37C04(void *a1@<X8>)
{
  sub_216779094(__p, "Only supported for lists or strings");
  sub_216A35078((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A37C58(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A37C74(pxrInternal__aapl__pxrReserved__::VtValue *a1@<X1>, void *a2@<X8>)
{
  if (sub_2169F7010(a1)) {
    sub_216779094(__p, "Index out of range");
  }
  else {
    sub_216779094(__p, "Only supported for lists or strings");
  }
  sub_216A35078((uint64_t *)__p, v3, v4, a2);
  if (v6 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A37CF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A37D14(void *a1@<X8>)
{
  *(void *)&long long v17 = *MEMORY[0x263EF8340];
  sub_216779094(__p, "Unsupported type");
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "len", v4);
  uint64_t v10 = 0;
  size_t v11 = 0;
  char v12 = 0;
  char v13 = &v10;
  char v14 = 0;
  uint64_t v10 = (char *)operator new(0x18uLL);
  size_t v11 = v10;
  char v12 = v10 + 24;
  char v5 = sub_21695F6C0((uint64_t)&v12, &v15, &v17, v10);
  char v6 = v10;
  uint64_t v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  uint64_t v10 = 0;
  size_t v11 = 0;
  char v12 = 0;
  char v13 = &v10;
  sub_216782F20((void ***)&v13);
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A37E38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  sub_216782F20(&a20);
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A37E88(pxrInternal__aapl__pxrReserved__::VtValue *a1@<X1>, void *a2@<X8>)
{
  if (sub_2169F7010(a1))
  {
    *a2 = 0;
    a2[1] = &unk_26C750823;
    a2[3] = 0;
    a2[4] = 0;
    a2[2] = 0;
  }
  else
  {
    sub_216A37D14(a2);
  }
}

void sub_216A37EF4(void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    sub_216A37F48(v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

void *sub_216A37F48(void *result)
{
  uint64_t v1 = result;
  uint64_t v2 = (void *)*result;
  uint64_t v3 = (void *)result[1];
  while (v3 != v2)
  {
    uint64_t v4 = (void *)*--v3;
    uint64_t result = v4;
    *uint64_t v3 = 0;
    if (v4) {
      uint64_t result = (void *)(*(uint64_t (**)(void *))(*result + 8))(result);
    }
  }
  v1[1] = v2;
  return result;
}

void sub_216A37FB4(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = a3;
  uint64_t v8 = a2;
  sub_2168F845C(a1);
  v6[0] = (int **)&v8;
  v6[1] = (int **)&v7;
  sub_216A38014(a1, (a3 - a2) >> 2, v6);
}

void sub_216A38014(unint64_t *a1, unint64_t a2, int ***a3)
{
  unint64_t v3 = *a1;
  if (*a1 == a2) {
    return;
  }
  if (a2)
  {
    uint64_t v7 = (uint64_t *)a1[4];
    if (v7)
    {
      if (!a1[3])
      {
        unint64_t v8 = atomic_load((unint64_t *)v7 - 2);
        if (v8 == 1)
        {
          if (v3 < a2)
          {
            unint64_t v9 = a1[4];
            if (*(void *)(v9 - 8) < a2)
            {
              uint64_t v10 = sub_2169ADF98((uint64_t)a1, a2);
              uint64_t v7 = v10;
              if (v3)
              {
                for (uint64_t i = 0; i != v3; ++i)
                  v10[i] = *(void *)(v9 + i * 8);
              }
            }
            char v12 = **a3;
            char v13 = *a3[1];
            if (v12 != v13)
            {
              uint64_t v14 = v3;
              do
              {
                uint64_t v15 = *v12++;
                v7[v14++] = v15;
              }
              while (v12 != v13);
            }
          }
          char v16 = v7;
LABEL_34:
          if (v16 != (uint64_t *)a1[4])
          {
            sub_2168F83DC((uint64_t)a1);
            a1[4] = (unint64_t)v16;
          }
          *a1 = a2;
          return;
        }
        uint64_t v7 = (uint64_t *)a1[4];
      }
      if (v3 >= a2) {
        unint64_t v22 = a2;
      }
      else {
        unint64_t v22 = *a1;
      }
      uint64_t v23 = sub_2169ADF98((uint64_t)a1, a2);
      char v16 = v23;
      if (v22)
      {
        uint64_t v24 = 8 * v22;
        long long v25 = v23;
        do
        {
          uint64_t v26 = *v7++;
          *v25++ = v26;
          v24 -= 8;
        }
        while (v24);
      }
      if (v3 < a2)
      {
        uint64_t v27 = **a3;
        uint64_t v28 = *a3[1];
        if (v27 != v28)
        {
          uint64_t v29 = v3;
          do
          {
            uint64_t v30 = *v27++;
            v23[v29++] = v30;
          }
          while (v27 != v28);
        }
      }
      goto LABEL_34;
    }
    if (8 * a2 / a2 == 8)
    {
      long long v17 = sub_2169ADF98((uint64_t)a1, a2);
      char v16 = v17;
      char v18 = **a3;
      char v19 = *a3[1];
      if (v18 != v19)
      {
        uint64_t v20 = v17;
        do
        {
          uint64_t v21 = *v18++;
          *v20++ = v21;
        }
        while (v18 != v19);
      }
      goto LABEL_34;
    }
  }

  sub_2168F845C(a1);
}

uint64_t *sub_216A38200(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t a4, unsigned __int8 **a5)
{
  uint64_t v7 = a1;
  if (a1 == a3)
  {
    uint64_t v11 = sub_2169CAFD0(a2, a4, a5);
    if (!v7) {
      return 0;
    }
    goto LABEL_5;
  }
  unint64_t v8 = a3;
  uint64_t v9 = *a1 + 4080;
  uint64_t v10 = sub_2169CAFD0(a2, v9, a5);
  if (v10 != v9)
  {
    uint64_t v11 = v10;
LABEL_5:
    if (*v7 + 4080 == v11) {
      ++v7;
    }
    return v7;
  }
  char v13 = v7 + 2;
  uint64_t v14 = v7 + 1;
  while (v14 != v8)
  {
    uint64_t v15 = *v14++;
    uint64_t v16 = sub_2169CAFD0(v15, v15 + 4080, a5);
    ++v13;
    if (v16 != v15 + 4080)
    {
      if (*(v14 - 1) + 4080 != v16) {
        --v14;
      }
      return v14;
    }
  }
  if (*v8 + 4080 == sub_2169CAFD0(*v8, a4, a5)) {
    return v13;
  }
  return v8;
}

unsigned __int8 *sub_216A38350(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v7 = (void *)(a1 + 24);
  unint64_t v8 = sub_216891D24(a1 + 24, (uint64_t)a2);
  unint64_t v9 = v8;
  unint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    uint8x8_t v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    unint64_t v12 = v11.u32[0];
    if (v11.u32[0] > 1uLL)
    {
      unint64_t v3 = v8;
      if (v8 >= v10) {
        unint64_t v3 = v8 % v10;
      }
    }
    else
    {
      unint64_t v3 = (v10 - 1) & v8;
    }
    char v13 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v3);
    if (v13)
    {
      for (uint64_t i = *v13; i; uint64_t i = *(unsigned __int8 **)i)
      {
        unint64_t v15 = *((void *)i + 1);
        if (v15 == v9)
        {
          if (sub_2168513F8(a1 + 32, i + 16, a2)) {
            return i;
          }
        }
        else
        {
          if (v12 > 1)
          {
            if (v15 >= v10) {
              v15 %= v10;
            }
          }
          else
          {
            v15 &= v10 - 1;
          }
          if (v15 != v3) {
            break;
          }
        }
      }
    }
  }
  sub_21685174C(a1, v9, a3, (uint64_t)v25);
  float v16 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v17 = *(float *)(a1 + 32);
  if (!v10 || (float)(v17 * (float)v10) < v16)
  {
    BOOL v18 = 1;
    if (v10 >= 3) {
      BOOL v18 = (v10 & (v10 - 1)) != 0;
    }
    unint64_t v19 = v18 | (2 * v10);
    unint64_t v20 = vcvtps_u32_f32(v16 / v17);
    if (v19 <= v20) {
      size_t v21 = v20;
    }
    else {
      size_t v21 = v19;
    }
    sub_21678A04C(a1, v21);
    unint64_t v10 = *(void *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10) {
        unint64_t v3 = v9 % v10;
      }
      else {
        unint64_t v3 = v9;
      }
    }
    else
    {
      unint64_t v3 = (v10 - 1) & v9;
    }
  }
  unint64_t v22 = *(void **)(*(void *)a1 + 8 * v3);
  if (v22)
  {
    *(void *)v25[0] = *v22;
    *unint64_t v22 = v25[0];
  }
  else
  {
    *(void *)v25[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v25[0];
    *(void *)(*(void *)a1 + 8 * v3) = a1 + 16;
    if (*(void *)v25[0])
    {
      unint64_t v23 = *(void *)(*(void *)v25[0] + 8);
      if ((v10 & (v10 - 1)) != 0)
      {
        if (v23 >= v10) {
          v23 %= v10;
        }
      }
      else
      {
        v23 &= v10 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v23) = v25[0];
    }
  }
  uint64_t i = (unsigned __int8 *)v25[0];
  ++*v7;
  return i;
}

void sub_216A385AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void **__p, uint64_t a11)
{
  if (__p) {
    sub_2168517F0((uint64_t)&a11, __p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A385D0(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0xAA;
  unint64_t v4 = v2 - 170;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    char v6 = (char *)a1[3];
    a1[4] = v4;
    uint64_t v7 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    unint64_t v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)unint64_t v8 = v10;
      a1[2] += 8;
      return;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v33 = 1;
      }
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_21677CB28(v5, v33);
      char v35 = &v34[8 * (v33 >> 2)];
      uint64_t v37 = &v34[8 * v36];
      uint64_t v38 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        unint64_t v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v40 = 8 * (v39 >> 3);
        uint64_t v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)uint64_t v41 = v42;
          v41 += 8;
          v40 -= 8;
        }
        while (v40);
      }
      goto LABEL_30;
    }
LABEL_5:
    uint64_t v13 = v12 >> 3;
    BOOL v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    unint64_t v19 = &v9[-8 * v18];
    int64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      unint64_t v9 = (char *)a1[1];
    }
    unint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }
  uint64_t v21 = a1[2];
  unint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&long long v54 = operator new(0xFF0uLL);
      sub_216832B24(a1, &v54);
      return;
    }
    *(void *)&long long v54 = operator new(0xFF0uLL);
    sub_216832C3C((uint64_t)a1, &v54);
    uint64_t v44 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    unint64_t v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    if (v8 != (char *)a1[3]) {
      goto LABEL_33;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v46 = 1;
      }
      else {
        unint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_21677CB28((uint64_t)(a1 + 3), v46);
      char v35 = &v34[8 * (v46 >> 2)];
      uint64_t v37 = &v34[8 * v47];
      uint64_t v48 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        unint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v50 = 8 * (v49 >> 3);
        uint64_t v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)uint64_t v51 = v52;
          v51 += 8;
          v50 -= 8;
        }
        while (v50);
      }
LABEL_30:
      uint64_t v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        unint64_t v8 = (char *)a1[2];
      }
      goto LABEL_33;
    }
    goto LABEL_5;
  }
  if (v23 == *a1) {
    unint64_t v25 = 1;
  }
  else {
    unint64_t v25 = v24 >> 2;
  }
  uint64_t v56 = a1 + 3;
  *(void *)&long long v54 = sub_21677CB28((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&long long v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  uint64_t v53 = operator new(0xFF0uLL);
  sub_216832D5C(&v54, &v53);
  uint64_t v27 = (void *)a1[2];
  uint64_t v28 = -7 - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8;
    sub_216832E74((uint64_t)&v54, v27);
  }
  uint64_t v29 = (char *)*a1;
  long long v30 = v54;
  long long v31 = v55;
  *(void *)&long long v54 = *a1;
  *((void *)&v54 + 1) = v27;
  long long v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  long long v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&long long v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8);
  }
  if (v29) {
    operator delete(v29);
  }
}

void sub_216A3889C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  operator delete(v13);
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void *sub_216A388F0(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = &unk_26C757920;
  result[1] = v3;
  return result;
}

uint64_t sub_216A38938(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_26C757920;
  a2[1] = v2;
  return result;
}

uint64_t sub_216A38964(uint64_t a1)
{
  return sub_216A389BC((void *)(*(void *)(a1 + 8) + 48));
}

uint64_t sub_216A38970(uint64_t a1, uint64_t a2)
{
  if (sub_21677EC50(a2, (uint64_t)&unk_26C757980)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

void *sub_216A389B0()
{
  return &unk_26C757980;
}

uint64_t sub_216A389BC(void *a1)
{
  uint64_t v2 = a1[5] - 1;
  unint64_t v3 = *(void *)(a1[1] + 8 * ((v2 + a1[4]) / 0xAAuLL)) + 24 * ((v2 + a1[4]) % 0xAAuLL);
  if (*(char *)(v3 + 23) < 0)
  {
    operator delete(*(void **)v3);
    uint64_t v2 = a1[5] - 1;
  }
  a1[5] = v2;

  return sub_216A38A44(a1, 1);
}

uint64_t sub_216A38A44(void *a1, int a2)
{
  uint64_t v3 = a1[1];
  uint64_t v2 = a1[2];
  if (v2 == v3) {
    uint64_t v4 = 0;
  }
  else {
    uint64_t v4 = 170 * ((v2 - v3) >> 3) - 1;
  }
  unint64_t v5 = v4 - (a1[5] + a1[4]);
  if (v5 < 0xAA) {
    a2 = 1;
  }
  if (v5 < 0x154) {
    int v7 = a2;
  }
  else {
    int v7 = 0;
  }
  if ((v7 & 1) == 0)
  {
    operator delete(*(void **)(v2 - 8));
    a1[2] -= 8;
  }
  return v7 ^ 1u;
}

uint64_t sub_216A38AC8()
{
  return 0;
}

uint64_t sub_216A38AD0(uint64_t a1, const std::type_info *a2)
{
  return 0;
}

uint64_t sub_216A38AF4()
{
  return 1;
}

uint64_t sub_216A38AFC()
{
  return 1;
}

uint64_t sub_216A38B08()
{
  return 0;
}

void *sub_216A38B14(uint64_t a1, void *a2)
{
  return pxrInternal__aapl__pxrReserved__::Vt_StreamOutGeneric((uint64_t)&stru_26C757900, a1, a2);
}

void *sub_216A38B28()
{
  return &unk_26C757900;
}

uint64_t sub_216A38B34()
{
  return 0;
}

uint64_t sub_216A38B3C()
{
  return MEMORY[0x263F8C288];
}

uint64_t sub_216A38B48()
{
  return 0;
}

uint64_t sub_216A38B50()
{
  return 0;
}

BOOL sub_216A38B58(uint64_t a1, uint64_t a2)
{
  return strcmp((const char *)(0x800000021746A11FLL & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(void *)(a2 + 8) & 0x7FFFFFFFFFFFFFFFLL)) == 0;
}

uint64_t sub_216A38B94(uint64_t a1, const std::type_info *a2, char *a3)
{
  return *(void *)pxrInternal__aapl__pxrReserved__::TfType::_FindByTypeid((pxrInternal__aapl__pxrReserved__::TfType *)&stru_26C757900, a2, a3);
}

void *sub_216A38BB8()
{
  return &unk_26C757900;
}

void sub_216A38BC8(uint64_t a1@<X8>)
{
  *(void *)(a1 + 8) = (char *)&off_26C757990 + 3;
}

void pxrInternal__aapl__pxrReserved__::Sdf_ParseVariableExpression(uint64_t *a1@<X0>, std::locale *a2@<X8>)
{
  uint64_t v172 = *MEMORY[0x263EF8340];
  v160 = 0;
  v161 = 0;
  uint64_t v162 = 0;
  uint64_t v3 = *((unsigned __int8 *)a1 + 23);
  if ((v3 & 0x80u) == 0) {
    uint64_t v4 = a1;
  }
  else {
    uint64_t v4 = (uint64_t *)*a1;
  }
  if ((v3 & 0x80u) != 0) {
    uint64_t v3 = a1[1];
  }
  v155 = v4;
  *(void *)v156 = v4;
  *(_OWORD *)&v156[8] = xmmword_217411D30;
  *(void *)&v156[24] = 0;
  v157 = (char *)v4 + v3;
  sub_216779094(&v158, "");
  if (sub_216977CF0(4))
  {
    *(_OWORD *)&v167[0].__locale_ = *(_OWORD *)&v156[8];
    *(void *)std::string __p = *(void *)&v156[24];
    if (SHIBYTE(v159) < 0)
    {
      sub_216778F24(&__p[8], (void *)v158, *((unint64_t *)&v158 + 1));
    }
    else
    {
      *(_OWORD *)&__p[8] = v158;
      uint64_t v169 = v159;
    }
    if (v169 >= 0) {
      unint64_t v8 = &__p[8];
    }
    else {
      unint64_t v8 = *(unsigned char **)&__p[8];
    }
    if (v169 >= 0) {
      uint64_t v9 = HIBYTE(v169);
    }
    else {
      uint64_t v9 = *(void *)&__p[16];
    }
    uint64_t v10 = (void *)MEMORY[0x263F8C0F8];
    uint64_t v11 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v8, v9);
    LOBYTE(v163) = 58;
    sub_216779180(v11, (uint64_t)&v163, 1);
    uint64_t v12 = (void *)std::ostream::operator<<();
    LOBYTE(v163) = 58;
    sub_216779180(v12, (uint64_t)&v163, 1);
    uint64_t v13 = (void *)std::ostream::operator<<();
    LOBYTE(v163) = 40;
    sub_216779180(v13, (uint64_t)&v163, 1);
    BOOL v14 = (void *)std::ostream::operator<<();
    LOBYTE(v163) = 41;
    uint64_t v15 = sub_216779180(v14, (uint64_t)&v163, 1);
    uint64_t v16 = sub_216779180(v15, (uint64_t)"  start  ", 9);
    sub_216A3AA54(&v170);
    if ((SBYTE7(v171) & 0x80u) == 0) {
      uint64_t v17 = &v170;
    }
    else {
      uint64_t v17 = (long long *)v170;
    }
    if ((SBYTE7(v171) & 0x80u) == 0) {
      uint64_t v18 = BYTE7(v171);
    }
    else {
      uint64_t v18 = *((void *)&v170 + 1);
    }
    unint64_t v19 = sub_216779180(v16, (uint64_t)v17, v18);
    sub_216779180(v19, (uint64_t)"; current ", 10);
    if (SBYTE7(v171) < 0) {
      operator delete((void *)v170);
    }
    if (SHIBYTE(v169) < 0) {
      operator delete(*(void **)&__p[8]);
    }
    sub_216A3AB00((uint64_t)&v155);
    std::ios_base::getloc((const std::ios_base *)((char *)v10 + *(void *)(*v10 - 24)));
    int64_t v20 = std::locale::use_facet(v167, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v20->__vftable[2].~facet_0)(v20, 10);
    std::locale::~locale(v167);
    std::ostream::put();
    std::ostream::flush();
    long long v170 = *(_OWORD *)v156;
    long long v171 = *(_OWORD *)&v156[16];
    *(_OWORD *)&v167[0].__locale_ = *(_OWORD *)&v156[8];
    *(void *)std::string __p = *(void *)&v156[24];
    if (SHIBYTE(v159) < 0)
    {
      sub_216778F24(&__p[8], (void *)v158, *((unint64_t *)&v158 + 1));
    }
    else
    {
      *(_OWORD *)&__p[8] = v158;
      uint64_t v169 = v159;
    }
    if (v169 >= 0) {
      uint64_t v21 = &__p[8];
    }
    else {
      uint64_t v21 = *(unsigned char **)&__p[8];
    }
    if (v169 >= 0) {
      uint64_t v22 = HIBYTE(v169);
    }
    else {
      uint64_t v22 = *(void *)&__p[16];
    }
    uint64_t v23 = (void *)MEMORY[0x263F8C0F8];
    uint64_t v24 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v21, v22);
    LOBYTE(v163) = 58;
    sub_216779180(v24, (uint64_t)&v163, 1);
    unint64_t v25 = (void *)std::ostream::operator<<();
    LOBYTE(v163) = 58;
    sub_216779180(v25, (uint64_t)&v163, 1);
    uint64_t v26 = (void *)std::ostream::operator<<();
    LOBYTE(v163) = 40;
    sub_216779180(v26, (uint64_t)&v163, 1);
    uint64_t v27 = (void *)std::ostream::operator<<();
    LOBYTE(v163) = 41;
    uint64_t v28 = sub_216779180(v27, (uint64_t)&v163, 1);
    uint64_t v29 = sub_216779180(v28, (uint64_t)"  start  ", 9);
    sub_216A3AC78(&v163);
    if ((v165 & 0x80u) == 0) {
      long long v30 = &v163;
    }
    else {
      long long v30 = v163;
    }
    if ((v165 & 0x80u) == 0) {
      uint64_t v31 = v165;
    }
    else {
      uint64_t v31 = v164;
    }
    long long v32 = sub_216779180(v29, (uint64_t)v30, v31);
    sub_216779180(v32, (uint64_t)"; current ", 10);
    if ((char)v165 < 0) {
      operator delete(v163);
    }
    if (SHIBYTE(v169) < 0) {
      operator delete(*(void **)&__p[8]);
    }
    sub_216A3AB00((uint64_t)&v155);
    std::ios_base::getloc((const std::ios_base *)((char *)v23 + *(void *)(*v23 - 24)));
    unint64_t v33 = std::locale::use_facet(v167, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v33->__vftable[2].~facet_0)(v33, 10);
    std::locale::~locale(v167);
    std::ostream::put();
    std::ostream::flush();
    if (v157 == *(unsigned char **)v156 || **(unsigned char **)v156 != 96)
    {
      *(_OWORD *)&v167[0].__locale_ = *(_OWORD *)&v156[8];
      *(void *)std::string __p = *(void *)&v156[24];
      if (SHIBYTE(v159) < 0)
      {
        sub_216778F24(&__p[8], (void *)v158, *((unint64_t *)&v158 + 1));
      }
      else
      {
        *(_OWORD *)&__p[8] = v158;
        uint64_t v169 = v159;
      }
      if (v169 >= 0) {
        v119 = &__p[8];
      }
      else {
        v119 = *(unsigned char **)&__p[8];
      }
      if (v169 >= 0) {
        uint64_t v120 = HIBYTE(v169);
      }
      else {
        uint64_t v120 = *(void *)&__p[16];
      }
      v121 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v119, v120);
      LOBYTE(v163) = 58;
      sub_216779180(v121, (uint64_t)&v163, 1);
      v122 = (void *)std::ostream::operator<<();
      LOBYTE(v163) = 58;
      sub_216779180(v122, (uint64_t)&v163, 1);
      v123 = (void *)std::ostream::operator<<();
      LOBYTE(v163) = 40;
      sub_216779180(v123, (uint64_t)&v163, 1);
      v124 = (void *)std::ostream::operator<<();
      LOBYTE(v163) = 41;
      v125 = sub_216779180(v124, (uint64_t)&v163, 1);
      v126 = sub_216779180(v125, (uint64_t)" failure ", 9);
      sub_216A3AC78(&v163);
      if ((v165 & 0x80u) == 0) {
        v127 = &v163;
      }
      else {
        v127 = v163;
      }
      if ((v165 & 0x80u) == 0) {
        uint64_t v128 = v165;
      }
      else {
        uint64_t v128 = v164;
      }
      v129 = sub_216779180(v126, (uint64_t)v127, v128);
      std::ios_base::getloc((const std::ios_base *)((char *)v129 + *(void *)(*v129 - 24)));
      v130 = std::locale::use_facet(&v166, MEMORY[0x263F8C108]);
      ((void (*)(const std::locale::facet *, uint64_t))v130->__vftable[2].~facet_0)(v130, 10);
      std::locale::~locale(&v166);
      std::ostream::put();
      std::ostream::flush();
      if ((char)v165 < 0) {
        operator delete(v163);
      }
      if (SHIBYTE(v169) < 0) {
        operator delete(*(void **)&__p[8]);
      }
      sub_216A3AD24((uint64_t)&v155);
    }
    ++*(void *)v156;
    ++*(void *)&v156[8];
    ++*(void *)&v156[24];
    *(_OWORD *)&v167[0].__locale_ = *(_OWORD *)&v156[8];
    *(void *)std::string __p = *(void *)&v156[24];
    if (SHIBYTE(v159) < 0)
    {
      sub_216778F24(&__p[8], (void *)v158, *((unint64_t *)&v158 + 1));
    }
    else
    {
      *(_OWORD *)&__p[8] = v158;
      uint64_t v169 = v159;
    }
    if (v169 >= 0) {
      uint64_t v34 = &__p[8];
    }
    else {
      uint64_t v34 = *(unsigned char **)&__p[8];
    }
    if (v169 >= 0) {
      uint64_t v35 = HIBYTE(v169);
    }
    else {
      uint64_t v35 = *(void *)&__p[16];
    }
    uint64_t v36 = (void *)MEMORY[0x263F8C0F8];
    uint64_t v37 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v34, v35);
    LOBYTE(v163) = 58;
    sub_216779180(v37, (uint64_t)&v163, 1);
    uint64_t v38 = (void *)std::ostream::operator<<();
    LOBYTE(v163) = 58;
    sub_216779180(v38, (uint64_t)&v163, 1);
    uint64_t v39 = (void *)std::ostream::operator<<();
    LOBYTE(v163) = 40;
    sub_216779180(v39, (uint64_t)&v163, 1);
    uint64_t v40 = (void *)std::ostream::operator<<();
    LOBYTE(v163) = 41;
    uint64_t v41 = sub_216779180(v40, (uint64_t)&v163, 1);
    uint64_t v42 = sub_216779180(v41, (uint64_t)" success ", 9);
    sub_216A3AC78(&v163);
    if ((v165 & 0x80u) == 0) {
      uint64_t v43 = &v163;
    }
    else {
      uint64_t v43 = v163;
    }
    if ((v165 & 0x80u) == 0) {
      uint64_t v44 = v165;
    }
    else {
      uint64_t v44 = v164;
    }
    uint64_t v45 = sub_216779180(v42, (uint64_t)v43, v44);
    sub_216779180(v45, (uint64_t)"; next ", 7);
    if ((char)v165 < 0) {
      operator delete(v163);
    }
    if (SHIBYTE(v169) < 0) {
      operator delete(*(void **)&__p[8]);
    }
    sub_216A3AB00((uint64_t)&v155);
    std::ios_base::getloc((const std::ios_base *)((char *)v36 + *(void *)(*v36 - 24)));
    unint64_t v46 = std::locale::use_facet(v167, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v46->__vftable[2].~facet_0)(v46, 10);
    std::locale::~locale(v167);
    std::ostream::put();
    std::ostream::flush();
    *(_OWORD *)&v167[0].__locale_ = *(_OWORD *)&v156[8];
    *(void *)std::string __p = *(void *)&v156[24];
    if (SHIBYTE(v159) < 0)
    {
      sub_216778F24(&__p[8], (void *)v158, *((unint64_t *)&v158 + 1));
    }
    else
    {
      *(_OWORD *)&__p[8] = v158;
      uint64_t v169 = v159;
    }
    if (v169 >= 0) {
      uint64_t v47 = &__p[8];
    }
    else {
      uint64_t v47 = *(unsigned char **)&__p[8];
    }
    if (v169 >= 0) {
      uint64_t v48 = HIBYTE(v169);
    }
    else {
      uint64_t v48 = *(void *)&__p[16];
    }
    uint64_t v49 = (void *)MEMORY[0x263F8C0F8];
    uint64_t v50 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v47, v48);
    LOBYTE(v163) = 58;
    sub_216779180(v50, (uint64_t)&v163, 1);
    uint64_t v51 = (void *)std::ostream::operator<<();
    LOBYTE(v163) = 58;
    sub_216779180(v51, (uint64_t)&v163, 1);
    uint64_t v52 = (void *)std::ostream::operator<<();
    LOBYTE(v163) = 40;
    sub_216779180(v52, (uint64_t)&v163, 1);
    uint64_t v53 = (void *)std::ostream::operator<<();
    LOBYTE(v163) = 41;
    long long v54 = sub_216779180(v53, (uint64_t)&v163, 1);
    long long v55 = sub_216779180(v54, (uint64_t)"  start  ", 9);
    sub_216A3B02C(&v163);
    if ((v165 & 0x80u) == 0) {
      uint64_t v56 = &v163;
    }
    else {
      uint64_t v56 = v163;
    }
    if ((v165 & 0x80u) == 0) {
      uint64_t v57 = v165;
    }
    else {
      uint64_t v57 = v164;
    }
    uint64_t v58 = sub_216779180(v55, (uint64_t)v56, v57);
    sub_216779180(v58, (uint64_t)"; current ", 10);
    if ((char)v165 < 0) {
      operator delete(v163);
    }
    if (SHIBYTE(v169) < 0) {
      operator delete(*(void **)&__p[8]);
    }
    sub_216A3AB00((uint64_t)&v155);
    std::ios_base::getloc((const std::ios_base *)((char *)v49 + *(void *)(*v49 - 24)));
    uint64_t v59 = std::locale::use_facet(v167, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v59->__vftable[2].~facet_0)(v59, 10);
    std::locale::~locale(v167);
    std::ostream::put();
    std::ostream::flush();
    if ((sub_216A3B0D8((uint64_t)&v155, (char **)&v160) & 1) == 0)
    {
      sub_216A560B0((uint64_t)&v155);
      *(_OWORD *)&v167[0].__locale_ = *(_OWORD *)v156;
      *(_OWORD *)std::string __p = *(_OWORD *)&v156[16];
      sub_216A56768((uint64_t)&v155);
      if (*(unsigned char **)v156 == v157 || **(unsigned char **)v156 != 91)
      {
        sub_216A56D88((uint64_t)&v155);
        *(_OWORD *)v156 = *(_OWORD *)&v167[0].__locale_;
        *(_OWORD *)&v156[16] = *(_OWORD *)__p;
        sub_216A564D0((uint64_t)&v155);
        *(_OWORD *)&v167[0].__locale_ = *(_OWORD *)&v156[8];
        *(void *)std::string __p = *(void *)&v156[24];
        if (SHIBYTE(v159) < 0)
        {
          sub_216778F24(&__p[8], (void *)v158, *((unint64_t *)&v158 + 1));
        }
        else
        {
          *(_OWORD *)&__p[8] = v158;
          uint64_t v169 = v159;
        }
        if (v169 >= 0) {
          v143 = &__p[8];
        }
        else {
          v143 = *(unsigned char **)&__p[8];
        }
        if (v169 >= 0) {
          uint64_t v144 = HIBYTE(v169);
        }
        else {
          uint64_t v144 = *(void *)&__p[16];
        }
        v145 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v143, v144);
        LOBYTE(v163) = 58;
        sub_216779180(v145, (uint64_t)&v163, 1);
        v146 = (void *)std::ostream::operator<<();
        LOBYTE(v163) = 58;
        sub_216779180(v146, (uint64_t)&v163, 1);
        v147 = (void *)std::ostream::operator<<();
        LOBYTE(v163) = 40;
        sub_216779180(v147, (uint64_t)&v163, 1);
        v148 = (void *)std::ostream::operator<<();
        LOBYTE(v163) = 41;
        v149 = sub_216779180(v148, (uint64_t)&v163, 1);
        v150 = sub_216779180(v149, (uint64_t)" failure ", 9);
        sub_216A3B02C(&v163);
        if ((v165 & 0x80u) == 0) {
          v151 = &v163;
        }
        else {
          v151 = v163;
        }
        if ((v165 & 0x80u) == 0) {
          uint64_t v152 = v165;
        }
        else {
          uint64_t v152 = v164;
        }
        v153 = sub_216779180(v150, (uint64_t)v151, v152);
        std::ios_base::getloc((const std::ios_base *)((char *)v153 + *(void *)(*v153 - 24)));
        v154 = std::locale::use_facet(&v166, MEMORY[0x263F8C108]);
        ((void (*)(const std::locale::facet *, uint64_t))v154->__vftable[2].~facet_0)(v154, 10);
        std::locale::~locale(&v166);
        std::ostream::put();
        std::ostream::flush();
        if ((char)v165 < 0) {
          operator delete(v163);
        }
        if (SHIBYTE(v169) < 0) {
          operator delete(*(void **)&__p[8]);
        }
        sub_216A59C40((uint64_t)&v155);
      }
      ++*(void *)v156;
      ++*(void *)&v156[8];
      ++*(void *)&v156[24];
      sub_216A56978((uint64_t)&v155, (char **)&v160);
      sub_216A56B78((uint64_t)&v155);
      sub_216A571EC((long long *)&v155, (char **)&v160);
      if ((sub_216A590C4((uint64_t)&v155) & 1) == 0) {
        sub_216A59720((uint64_t)&v155);
      }
      sub_216A562C0((uint64_t)&v155);
    }
    *(_OWORD *)&v167[0].__locale_ = *(_OWORD *)&v156[8];
    *(void *)std::string __p = *(void *)&v156[24];
    if (SHIBYTE(v159) < 0)
    {
      sub_216778F24(&__p[8], (void *)v158, *((unint64_t *)&v158 + 1));
    }
    else
    {
      *(_OWORD *)&__p[8] = v158;
      uint64_t v169 = v159;
    }
    if (v169 >= 0) {
      uint64_t v60 = &__p[8];
    }
    else {
      uint64_t v60 = *(unsigned char **)&__p[8];
    }
    if (v169 >= 0) {
      uint64_t v61 = HIBYTE(v169);
    }
    else {
      uint64_t v61 = *(void *)&__p[16];
    }
    uint64_t v62 = (void *)MEMORY[0x263F8C0F8];
    std::string::size_type v63 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v60, v61);
    LOBYTE(v163) = 58;
    sub_216779180(v63, (uint64_t)&v163, 1);
    uint64_t v64 = (void *)std::ostream::operator<<();
    LOBYTE(v163) = 58;
    sub_216779180(v64, (uint64_t)&v163, 1);
    uint64_t v65 = (void *)std::ostream::operator<<();
    LOBYTE(v163) = 40;
    sub_216779180(v65, (uint64_t)&v163, 1);
    uint64_t v66 = (void *)std::ostream::operator<<();
    LOBYTE(v163) = 41;
    uint64_t v67 = sub_216779180(v66, (uint64_t)&v163, 1);
    uint64_t v68 = sub_216779180(v67, (uint64_t)" success ", 9);
    sub_216A3B02C(&v163);
    if ((v165 & 0x80u) == 0) {
      uint64_t v69 = &v163;
    }
    else {
      uint64_t v69 = v163;
    }
    if ((v165 & 0x80u) == 0) {
      uint64_t v70 = v165;
    }
    else {
      uint64_t v70 = v164;
    }
    uint64_t v71 = sub_216779180(v68, (uint64_t)v69, v70);
    sub_216779180(v71, (uint64_t)"; next ", 7);
    if ((char)v165 < 0) {
      operator delete(v163);
    }
    if (SHIBYTE(v169) < 0) {
      operator delete(*(void **)&__p[8]);
    }
    sub_216A3AB00((uint64_t)&v155);
    std::ios_base::getloc((const std::ios_base *)((char *)v62 + *(void *)(*v62 - 24)));
    uint64_t v72 = std::locale::use_facet(v167, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v72->__vftable[2].~facet_0)(v72, 10);
    std::locale::~locale(v167);
    std::ostream::put();
    std::ostream::flush();
    *(_OWORD *)&v167[0].__locale_ = *(_OWORD *)&v156[8];
    *(void *)std::string __p = *(void *)&v156[24];
    if (SHIBYTE(v159) < 0)
    {
      sub_216778F24(&__p[8], (void *)v158, *((unint64_t *)&v158 + 1));
    }
    else
    {
      *(_OWORD *)&__p[8] = v158;
      uint64_t v169 = v159;
    }
    if (v169 >= 0) {
      uint64_t v73 = &__p[8];
    }
    else {
      uint64_t v73 = *(unsigned char **)&__p[8];
    }
    if (v169 >= 0) {
      uint64_t v74 = HIBYTE(v169);
    }
    else {
      uint64_t v74 = *(void *)&__p[16];
    }
    uint64_t v75 = (void *)MEMORY[0x263F8C0F8];
    uint64_t v76 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v73, v74);
    LOBYTE(v163) = 58;
    sub_216779180(v76, (uint64_t)&v163, 1);
    uint64_t v77 = (void *)std::ostream::operator<<();
    LOBYTE(v163) = 58;
    sub_216779180(v77, (uint64_t)&v163, 1);
    uint64_t v78 = (void *)std::ostream::operator<<();
    LOBYTE(v163) = 40;
    sub_216779180(v78, (uint64_t)&v163, 1);
    uint64_t v79 = (void *)std::ostream::operator<<();
    LOBYTE(v163) = 41;
    uint64_t v80 = sub_216779180(v79, (uint64_t)&v163, 1);
    uint64_t v81 = sub_216779180(v80, (uint64_t)"  start  ", 9);
    sub_216A59C94(&v163);
    if ((v165 & 0x80u) == 0) {
      uint64_t v82 = &v163;
    }
    else {
      uint64_t v82 = v163;
    }
    if ((v165 & 0x80u) == 0) {
      uint64_t v83 = v165;
    }
    else {
      uint64_t v83 = v164;
    }
    uint64_t v84 = sub_216779180(v81, (uint64_t)v82, v83);
    sub_216779180(v84, (uint64_t)"; current ", 10);
    if ((char)v165 < 0) {
      operator delete(v163);
    }
    if (SHIBYTE(v169) < 0) {
      operator delete(*(void **)&__p[8]);
    }
    sub_216A3AB00((uint64_t)&v155);
    std::ios_base::getloc((const std::ios_base *)((char *)v75 + *(void *)(*v75 - 24)));
    uint64_t v85 = std::locale::use_facet(v167, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v85->__vftable[2].~facet_0)(v85, 10);
    std::locale::~locale(v167);
    std::ostream::put();
    std::ostream::flush();
    if (v157 == *(unsigned char **)v156 || **(unsigned char **)v156 != 96)
    {
      *(_OWORD *)&v167[0].__locale_ = *(_OWORD *)&v156[8];
      *(void *)std::string __p = *(void *)&v156[24];
      if (SHIBYTE(v159) < 0)
      {
        sub_216778F24(&__p[8], (void *)v158, *((unint64_t *)&v158 + 1));
      }
      else
      {
        *(_OWORD *)&__p[8] = v158;
        uint64_t v169 = v159;
      }
      if (v169 >= 0) {
        v131 = &__p[8];
      }
      else {
        v131 = *(unsigned char **)&__p[8];
      }
      if (v169 >= 0) {
        uint64_t v132 = HIBYTE(v169);
      }
      else {
        uint64_t v132 = *(void *)&__p[16];
      }
      v133 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v131, v132);
      LOBYTE(v163) = 58;
      sub_216779180(v133, (uint64_t)&v163, 1);
      v134 = (void *)std::ostream::operator<<();
      LOBYTE(v163) = 58;
      sub_216779180(v134, (uint64_t)&v163, 1);
      v135 = (void *)std::ostream::operator<<();
      LOBYTE(v163) = 40;
      sub_216779180(v135, (uint64_t)&v163, 1);
      v136 = (void *)std::ostream::operator<<();
      LOBYTE(v163) = 41;
      v137 = sub_216779180(v136, (uint64_t)&v163, 1);
      v138 = sub_216779180(v137, (uint64_t)" failure ", 9);
      sub_216A59C94(&v163);
      if ((v165 & 0x80u) == 0) {
        v139 = &v163;
      }
      else {
        v139 = v163;
      }
      if ((v165 & 0x80u) == 0) {
        uint64_t v140 = v165;
      }
      else {
        uint64_t v140 = v164;
      }
      v141 = sub_216779180(v138, (uint64_t)v139, v140);
      std::ios_base::getloc((const std::ios_base *)((char *)v141 + *(void *)(*v141 - 24)));
      v142 = std::locale::use_facet(&v166, MEMORY[0x263F8C108]);
      ((void (*)(const std::locale::facet *, uint64_t))v142->__vftable[2].~facet_0)(v142, 10);
      std::locale::~locale(&v166);
      std::ostream::put();
      std::ostream::flush();
      if ((char)v165 < 0) {
        operator delete(v163);
      }
      if (SHIBYTE(v169) < 0) {
        operator delete(*(void **)&__p[8]);
      }
      sub_216A59D40((uint64_t)&v155);
    }
    ++*(void *)v156;
    ++*(void *)&v156[8];
    ++*(void *)&v156[24];
    *(_OWORD *)&v167[0].__locale_ = *(_OWORD *)&v156[8];
    *(void *)std::string __p = *(void *)&v156[24];
    if (SHIBYTE(v159) < 0)
    {
      sub_216778F24(&__p[8], (void *)v158, *((unint64_t *)&v158 + 1));
    }
    else
    {
      *(_OWORD *)&__p[8] = v158;
      uint64_t v169 = v159;
    }
    if (v169 >= 0) {
      uint64_t v86 = &__p[8];
    }
    else {
      uint64_t v86 = *(unsigned char **)&__p[8];
    }
    if (v169 >= 0) {
      uint64_t v87 = HIBYTE(v169);
    }
    else {
      uint64_t v87 = *(void *)&__p[16];
    }
    uint64_t v88 = (void *)MEMORY[0x263F8C0F8];
    uint64_t v89 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v86, v87);
    LOBYTE(v163) = 58;
    sub_216779180(v89, (uint64_t)&v163, 1);
    uint64_t v90 = (void *)std::ostream::operator<<();
    LOBYTE(v163) = 58;
    sub_216779180(v90, (uint64_t)&v163, 1);
    uint64_t v91 = (void *)std::ostream::operator<<();
    LOBYTE(v163) = 40;
    sub_216779180(v91, (uint64_t)&v163, 1);
    uint64_t v92 = (void *)std::ostream::operator<<();
    LOBYTE(v163) = 41;
    uint64_t v93 = sub_216779180(v92, (uint64_t)&v163, 1);
    uint64_t v94 = sub_216779180(v93, (uint64_t)" success ", 9);
    sub_216A59C94(&v163);
    if ((v165 & 0x80u) == 0) {
      uint64_t v95 = &v163;
    }
    else {
      uint64_t v95 = v163;
    }
    if ((v165 & 0x80u) == 0) {
      uint64_t v96 = v165;
    }
    else {
      uint64_t v96 = v164;
    }
    uint64_t v97 = sub_216779180(v94, (uint64_t)v95, v96);
    sub_216779180(v97, (uint64_t)"; next ", 7);
    if ((char)v165 < 0) {
      operator delete(v163);
    }
    if (SHIBYTE(v169) < 0) {
      operator delete(*(void **)&__p[8]);
    }
    sub_216A3AB00((uint64_t)&v155);
    std::ios_base::getloc((const std::ios_base *)((char *)v88 + *(void *)(*v88 - 24)));
    uint64_t v98 = std::locale::use_facet(v167, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v98->__vftable[2].~facet_0)(v98, 10);
    std::locale::~locale(v167);
    std::ostream::put();
    std::ostream::flush();
    *(_OWORD *)&v167[0].__locale_ = *(_OWORD *)&v156[8];
    *(void *)std::string __p = *(void *)&v156[24];
    if (SHIBYTE(v159) < 0)
    {
      sub_216778F24(&__p[8], (void *)v158, *((unint64_t *)&v158 + 1));
    }
    else
    {
      *(_OWORD *)&__p[8] = v158;
      uint64_t v169 = v159;
    }
    if (v169 >= 0) {
      uint64_t v99 = &__p[8];
    }
    else {
      uint64_t v99 = *(unsigned char **)&__p[8];
    }
    if (v169 >= 0) {
      uint64_t v100 = HIBYTE(v169);
    }
    else {
      uint64_t v100 = *(void *)&__p[16];
    }
    uint64_t v101 = (void *)MEMORY[0x263F8C0F8];
    uint64_t v102 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v99, v100);
    LOBYTE(v163) = 58;
    sub_216779180(v102, (uint64_t)&v163, 1);
    uint64_t v103 = (void *)std::ostream::operator<<();
    LOBYTE(v163) = 58;
    sub_216779180(v103, (uint64_t)&v163, 1);
    uint64_t v104 = (void *)std::ostream::operator<<();
    LOBYTE(v163) = 40;
    sub_216779180(v104, (uint64_t)&v163, 1);
    uint64_t v105 = (void *)std::ostream::operator<<();
    LOBYTE(v163) = 41;
    v106 = sub_216779180(v105, (uint64_t)&v163, 1);
    v107 = sub_216779180(v106, (uint64_t)" success ", 9);
    sub_216A3AA54(&v170);
    if ((SBYTE7(v171) & 0x80u) == 0) {
      v108 = &v170;
    }
    else {
      v108 = (long long *)v170;
    }
    if ((SBYTE7(v171) & 0x80u) == 0) {
      uint64_t v109 = BYTE7(v171);
    }
    else {
      uint64_t v109 = *((void *)&v170 + 1);
    }
    v110 = sub_216779180(v107, (uint64_t)v108, v109);
    sub_216779180(v110, (uint64_t)"; next ", 7);
    if (SBYTE7(v171) < 0) {
      operator delete((void *)v170);
    }
    if (SHIBYTE(v169) < 0) {
      operator delete(*(void **)&__p[8]);
    }
    sub_216A3AB00((uint64_t)&v155);
    std::ios_base::getloc((const std::ios_base *)((char *)v101 + *(void *)(*v101 - 24)));
    v111 = std::locale::use_facet(v167, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v111->__vftable[2].~facet_0)(v111, 10);
    std::locale::~locale(v167);
    std::ostream::put();
    std::ostream::flush();
  }
  else
  {
    *(_OWORD *)&v167[0].__locale_ = *(_OWORD *)v156;
    *(_OWORD *)std::string __p = *(_OWORD *)&v156[16];
    if (v157 == *(unsigned char **)v156 || **(unsigned char **)v156 != 96) {
      sub_216A3AD24((uint64_t)&v155);
    }
    ++*(void *)v156;
    ++*(void *)&v156[8];
    ++*(void *)&v156[24];
    sub_216A59D94((uint64_t)&v155, (char **)&v160);
    unint64_t v5 = v157;
    char v6 = *(unsigned char **)v156;
    if ((v7 & 1) == 0)
    {
      if (*(unsigned char **)v156 == v157 || **(unsigned char **)v156 != 91) {
        sub_216A59C40((uint64_t)&v155);
      }
      ++*(void *)v156;
      ++*(void *)&v156[8];
      ++*(void *)&v156[24];
      sub_216A57020((char **)&v160);
      sub_216A5AD74((uint64_t)&v155, (char **)&v160);
      unint64_t v5 = v157;
      if (*(unsigned char **)v156 == v157 || **(unsigned char **)v156 != 93) {
        sub_216A59720((uint64_t)&v155);
      }
      char v6 = (unsigned char *)++*(void *)v156;
      ++*(void *)&v156[8];
      ++*(void *)&v156[24];
    }
    if (v5 == v6 || *v6 != 96) {
      sub_216A59D40((uint64_t)&v155);
    }
    *(void *)v156 = v6 + 1;
    ++*(void *)&v156[8];
    ++*(void *)&v156[24];
  }
  v167[0].__locale_ = 0;
  v167[1].__locale_ = 0;
  *(void *)std::string __p = 0;
  sub_216A3A7A0(&v160, (uint64_t)v167, &v166);
  v112 = a2 + 1;
  if (v166.__locale_)
  {
    a2->__locale_ = v166.__locale_;
    a2[2].__locale_ = 0;
    a2[3].__locale_ = 0;
    v112->__locale_ = 0;
  }
  else
  {
    a2->__locale_ = 0;
    long long v170 = *(_OWORD *)&v167[0].__locale_;
    *(void *)&long long v171 = *(void *)__p;
    v167[0].__locale_ = 0;
    v167[1].__locale_ = 0;
    *(void *)std::string __p = 0;
    a2[2].__locale_ = 0;
    a2[3].__locale_ = 0;
    v112->__locale_ = 0;
    v163 = &a2[1];
    LOBYTE(v164) = 0;
    v113 = (char *)operator new(0x18uLL);
    a2[3].__locale_ = (std::locale::__imp *)(v113 + 24);
    a2[1].__locale_ = (std::locale::__imp *)v113;
    a2[2].__locale_ = (std::locale::__imp *)v113;
    a2[2].__locale_ = (std::locale::__imp *)sub_21695F6C0((uint64_t)&a2[3], &v170, (long long *)((char *)&v171 + 8), v113);
    if (SBYTE7(v171) < 0) {
      operator delete((void *)v170);
    }
    locale = v166.__locale_;
    v166.__locale_ = 0;
    if (locale) {
      (*(void (**)(std::locale::__imp *))(*(void *)locale + 8))(locale);
    }
  }
  if ((__p[7] & 0x80000000) != 0) {
    operator delete(v167[0].__locale_);
  }
  if (SHIBYTE(v159) < 0) {
    operator delete((void *)v158);
  }
  v115 = v160;
  if (v160)
  {
    v116 = v161;
    while (v116 != v115)
    {
      uint64_t v118 = *--v116;
      uint64_t v117 = v118;
      void *v116 = 0;
      if (v118) {
        (*(void (**)(uint64_t))(*(void *)v117 + 8))(v117);
      }
    }
    operator delete(v115);
  }
}

void sub_216A3A3A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,std::locale a32,std::locale a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44)
{
  std::locale::~locale(&a32);
  if (a31 < 0) {
    operator delete(a26);
  }
  if (a44 < 0) {
    operator delete(a39);
  }
  long long v49 = *(_OWORD *)(v46 - 96);
  *uint64_t v45 = *(_OWORD *)(v46 - 112);
  v45[1] = v49;
  if (a2 == 1)
  {
    uint64_t v50 = __cxa_begin_catch(a1);
    *uint64_t v44 = 0;
    (*(void (**)(void *))(*(void *)v50 + 16))(v50);
    pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s at character %zu", v51, v52);
    sub_216A3A700((uint64_t)(v44 + 1), (long long *)(v46 - 112), 1uLL);
    if (*(char *)(v46 - 89) < 0) {
      operator delete(*(void **)(v46 - 112));
    }
    __cxa_end_catch();
    JUMPOUT(0x216A39D9CLL);
  }
  if (a22 < 0) {
    operator delete(__p);
  }
  sub_216A3A968(&a23);
  _Unwind_Resume(a1);
}

void sub_216A3A694()
{
}

void sub_216A3A69C()
{
  if (*(char *)(v1 - 89) < 0) {
    operator delete(*(void **)(v1 - 112));
  }
  uint64_t v2 = *v0;
  uint64_t *v0 = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  __cxa_end_catch();
  JUMPOUT(0x216A3A4C8);
}

void sub_216A3A6F0(void *a1, int a2)
{
  if (a2) {
    sub_21675DB74(a1);
  }
  JUMPOUT(0x216A3A56CLL);
}

uint64_t sub_216A3A700(uint64_t a1, long long *a2, unint64_t a3)
{
  *(void *)(a1 + 16) = 0;
  uint64_t v4 = a1 + 16;
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  if (a3)
  {
    sub_216782E84((void *)a1, a3);
    *(void *)(a1 + 8) = sub_21695F6C0(v4, a2, (long long *)((char *)a2 + 24 * a3), *(char **)(a1 + 8));
  }
  return a1;
}

void sub_216A3A780(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  sub_216782F20(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_216A3A7A0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = a1[1];
  if (*a1 == v6)
  {
    v15[0] = "sdf/variableExpressionParser.cpp";
    v15[1] = "CreateExpressionNode";
    v15[2] = 290;
    v15[3] = "std::unique_ptr<Impl::Node> pxrInternal__aapl__pxrReserved__::(anonymous namespace)::ParserContext::CreateE"
             "xpressionNode(std::string *)";
    char v16 = 0;
    if (!pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v15, "!_nodeStack.empty()", 0))goto LABEL_11; {
    uint64_t v6 = a1[1];
    }
  }
  if (!*(void *)(v6 - 8))
  {
    v13[0] = "sdf/variableExpressionParser.cpp";
    v13[1] = "CreateExpressionNode";
    v13[2] = 290;
    v13[3] = "std::unique_ptr<Impl::Node> pxrInternal__aapl__pxrReserved__::(anonymous namespace)::ParserContext::CreateE"
             "xpressionNode(std::string *)";
    char v14 = 0;
    if (pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v13, "_nodeStack.back()", 0))
    {
      uint64_t v6 = a1[1];
      goto LABEL_3;
    }
LABEL_11:
    uint64_t result = MEMORY[0x21D4477E0](a2, "Unknown error");
    *a3 = 0;
    return result;
  }
LABEL_3:
  uint64_t v7 = *(void *)(v6 - 8);
  *(void *)(v6 - 8) = 0;
  uint64_t v8 = a1[1];
  uint64_t v11 = *(void *)(v8 - 8);
  uint64_t v10 = (void *)(v8 - 8);
  uint64_t v9 = v11;
  void *v10 = 0;
  if (v11) {
    (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
  }
  a1[1] = v10;
  (*(void (**)(uint64_t, uint64_t))(*(void *)v7 + 16))(v7, a2);
  return (*(uint64_t (**)(uint64_t))(*(void *)v7 + 8))(v7);
}

void sub_216A3A934(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void *sub_216A3A968(void *a1)
{
  uint64_t v2 = (void *)*a1;
  if (*a1)
  {
    uint64_t v3 = (void *)a1[1];
    uint64_t v4 = (void *)*a1;
    if (v3 != v2)
    {
      do
      {
        uint64_t v6 = *--v3;
        uint64_t v5 = v6;
        *uint64_t v3 = 0;
        if (v6) {
          (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
        }
      }
      while (v3 != v2);
      uint64_t v4 = (void *)*a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

BOOL pxrInternal__aapl__pxrReserved__::Sdf_IsVariableExpression(uint64_t *a1)
{
  if (*((char *)a1 + 23) < 0)
  {
    unint64_t v2 = a1[1];
    if (v2 <= 2) {
      return 0;
    }
    a1 = (uint64_t *)*a1;
    if (*(unsigned char *)a1 != 96) {
      return 0;
    }
    return *((unsigned char *)a1 + v2 - 1) == 96;
  }
  uint64_t v1 = 0;
  unint64_t v2 = *((unsigned __int8 *)a1 + 23);
  if (v2 >= 3 && *(unsigned char *)a1 == 96) {
    return *((unsigned char *)a1 + v2 - 1) == 96;
  }
  return v1;
}

void sub_216A3AA54(void *a1@<X8>)
{
  unint64_t v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_110ExpressionE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_110ExpressionE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A3AAEC(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

void *sub_216A3AB00(uint64_t a1)
{
  uint64_t v1 = *(unsigned char **)(a1 + 8);
  if (v1 != *(unsigned char **)(a1 + 40))
  {
    uint64_t v2 = *v1;
    if (*v1 > 9u)
    {
      if (v2 == 10)
      {
        uint64_t v3 = (void *)MEMORY[0x263F8C0F8];
        uint64_t v4 = "<lf> = ";
        goto LABEL_14;
      }
      if (v2 == 13)
      {
        uint64_t v3 = (void *)MEMORY[0x263F8C0F8];
        uint64_t v4 = "<cr> = ";
        goto LABEL_14;
      }
    }
    else
    {
      if (!*v1)
      {
        uint64_t v3 = (void *)MEMORY[0x263F8C0F8];
        uint64_t v4 = "<nul> = ";
        uint64_t v7 = 8;
        goto LABEL_15;
      }
      if (v2 == 9)
      {
        uint64_t v3 = (void *)MEMORY[0x263F8C0F8];
        uint64_t v4 = "<ht> = ";
LABEL_14:
        uint64_t v7 = 7;
        goto LABEL_15;
      }
    }
    if ((char)v2 < 0)
    {
      if (!__maskrune(*v1, 0x40000uLL)) {
        goto LABEL_16;
      }
    }
    else if ((*(_DWORD *)(MEMORY[0x263EF8318] + 4 * v2 + 60) & 0x40000) == 0)
    {
      goto LABEL_16;
    }
    char v9 = 39;
    uint64_t v8 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)&v9, 1);
    char v10 = v2;
    uint64_t v3 = sub_216779180(v8, (uint64_t)&v10, 1);
    uint64_t v4 = "' = ";
    uint64_t v7 = 4;
LABEL_15:
    sub_216779180(v3, (uint64_t)v4, v7);
LABEL_16:
    sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)"(char)", 6);
    return (void *)std::ostream::operator<<();
  }
  uint64_t v5 = (void *)MEMORY[0x263F8C0F8];

  return sub_216779180(v5, (uint64_t)"<eof>", 5);
}

void sub_216A3AC78(void *a1@<X8>)
{
  uint64_t v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_115ExpressionStartE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_115ExpressionStartE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A3AD10(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

void sub_216A3AD24(uint64_t a1)
{
  sub_216A3AD78(a1, &v2);
}

void sub_216A3AD5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A3AD78(uint64_t a1, const std::string *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  exception = (std::runtime_error *)__cxa_allocate_exception(0x28uLL);
  sub_2169C56DC((uint64_t)v8, a1 + 8, (long long *)(a1 + 48));
  std::runtime_error v5 = (std::runtime_error)0;
  v6[0] = 0;
  v6[1] = &v5;
  char v7 = 0;
  v5.__vftable = (std::runtime_error_vtbl *)operator new(0x30uLL);
  v5.__imp_.__imp_ = (const char *)v5.__vftable;
  v6[0] = v5.__vftable + 2;
  v5.__imp_.__imp_ = (const char *)sub_216A3AED4((uint64_t)v6, (uint64_t)v8, (uint64_t)&v9, (uint64_t)v5.__vftable);
  std::runtime_error::runtime_error(exception, a2);
  exception->__vftable = (std::runtime_error_vtbl *)&unk_26C7565F0;
  exception[1] = v5;
  exception[2].__vftable = (std::runtime_error_vtbl *)v6[0];
  v6[0] = 0;
  std::runtime_error v5 = (std::runtime_error)0;
  __cxa_throw(exception, (struct type_info *)&unk_26C7565C8, (void (*)(void *))sub_2169C5680);
}

void sub_216A3AE74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  a12 = &a9;
  sub_2169C5E7C((void ***)&a12);
  if (a22 < 0) {
    operator delete(__p);
  }
  if (v23) {
    __cxa_free_exception(v22);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_216A3AED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v14 = a4;
  uint64_t v15 = a4;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  char v13 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = (long long *)(a2 + 24);
    do
    {
      long long v7 = *(long long *)((char *)v6 - 24);
      *(void *)(v4 + 16) = *((void *)v6 - 1);
      *(_OWORD *)uint64_t v4 = v7;
      uint64_t v8 = (unsigned char *)(v4 + 24);
      if (*((char *)v6 + 23) < 0)
      {
        sub_216778F24(v8, *(void **)v6, *((void *)v6 + 1));
        uint64_t v4 = v15;
      }
      else
      {
        long long v9 = *v6;
        *(void *)(v4 + 40) = *((void *)v6 + 2);
        *(_OWORD *)uint64_t v8 = v9;
      }
      uint64_t v10 = (uint64_t)v6 - 24;
      v4 += 48;
      uint64_t v15 = v4;
      v6 += 3;
    }
    while (v10 + 48 != a3);
  }
  char v13 = 1;
  sub_216A3AFAC((uint64_t)v12);
  return v4;
}

void sub_216A3AF98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_216A3AFAC(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_216A3AFE4(a1);
  }
  return a1;
}

void sub_216A3AFE4(uint64_t a1)
{
  uint64_t v1 = **(void **)(a1 + 16);
  uint64_t v2 = **(void **)(a1 + 8);
  while (v1 != v2)
  {
    if (*(char *)(v1 - 1) < 0) {
      operator delete(*(void **)(v1 - 24));
    }
    v1 -= 48;
  }
}

void sub_216A3B02C(void *a1@<X8>)
{
  uint64_t v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_114ExpressionBodyE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_114ExpressionBodyE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A3B0C4(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_216A3B0D8(uint64_t a1, char **a2)
{
  uint64_t v4 = a1 + 8;
  std::runtime_error v5 = (long long *)(a1 + 48);
  sub_2169C56DC((uint64_t)&v48, a1 + 8, (long long *)(a1 + 48));
  if ((v51 & 0x80u) == 0) {
    uint64_t v6 = &v49;
  }
  else {
    uint64_t v6 = v49;
  }
  if ((v51 & 0x80u) == 0) {
    uint64_t v7 = v51;
  }
  else {
    uint64_t v7 = v50;
  }
  uint64_t v8 = (void *)MEMORY[0x263F8C0F8];
  long long v9 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v6, v7);
  LOBYTE(__p) = 58;
  sub_216779180(v9, (uint64_t)&__p, 1);
  uint64_t v10 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 58;
  sub_216779180(v10, (uint64_t)&__p, 1);
  uint64_t v11 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 40;
  sub_216779180(v11, (uint64_t)&__p, 1);
  uint64_t v12 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 41;
  char v13 = sub_216779180(v12, (uint64_t)&__p, 1);
  uint64_t v14 = sub_216779180(v13, (uint64_t)"  start  ", 9);
  sub_216A3B6CC(&__p);
  if ((v47 & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = __p;
  }
  if ((v47 & 0x80u) == 0) {
    uint64_t v16 = v47;
  }
  else {
    uint64_t v16 = v46;
  }
  uint64_t v17 = sub_216779180(v14, (uint64_t)p_p, v16);
  sub_216779180(v17, (uint64_t)"; current ", 10);
  if ((char)v47 < 0) {
    operator delete(__p);
  }
  if ((char)v51 < 0) {
    operator delete(v49);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v8 + *(void *)(*v8 - 24)));
  uint64_t v18 = std::locale::use_facet(&v48, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v18->__vftable[2].~facet_0)(v18, 10);
  std::locale::~locale(&v48);
  std::ostream::put();
  std::ostream::flush();
  if ((sub_216A3B778(a1, (uint64_t)a2) & 1) != 0
    || (sub_216A3C448(a1, (uint64_t)a2) & 1) != 0
    || (sub_216A3D100(a1, (uint64_t)a2) & 1) != 0
    || (sub_216A4B680(a1, (uint64_t)a2) & 1) != 0
    || (sub_216A3DDB8(a1, (uint64_t)a2) & 1) != 0
    || (sub_216A3E348(a1, (uint64_t)a2) & 1) != 0
    || sub_216A50708(a1, a2))
  {
    sub_2169C56DC((uint64_t)&v48, v4, v5);
    if ((v51 & 0x80u) == 0) {
      unint64_t v19 = &v49;
    }
    else {
      unint64_t v19 = v49;
    }
    if ((v51 & 0x80u) == 0) {
      uint64_t v20 = v51;
    }
    else {
      uint64_t v20 = v50;
    }
    uint64_t v21 = (void *)MEMORY[0x263F8C0F8];
    uint64_t v22 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v19, v20);
    LOBYTE(__p) = 58;
    sub_216779180(v22, (uint64_t)&__p, 1);
    int v23 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 58;
    sub_216779180(v23, (uint64_t)&__p, 1);
    uint64_t v24 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 40;
    sub_216779180(v24, (uint64_t)&__p, 1);
    unint64_t v25 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 41;
    uint64_t v26 = sub_216779180(v25, (uint64_t)&__p, 1);
    uint64_t v27 = sub_216779180(v26, (uint64_t)" success ", 9);
    sub_216A3B6CC(&__p);
    if ((v47 & 0x80u) == 0) {
      uint64_t v28 = &__p;
    }
    else {
      uint64_t v28 = __p;
    }
    if ((v47 & 0x80u) == 0) {
      uint64_t v29 = v47;
    }
    else {
      uint64_t v29 = v46;
    }
    long long v30 = sub_216779180(v27, (uint64_t)v28, v29);
    sub_216779180(v30, (uint64_t)"; next ", 7);
    if ((char)v47 < 0) {
      operator delete(__p);
    }
    if ((char)v51 < 0) {
      operator delete(v49);
    }
    sub_216A3AB00(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v21 + *(void *)(*v21 - 24)));
    uint64_t v31 = std::locale::use_facet(&v48, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v31->__vftable[2].~facet_0)(v31, 10);
    std::locale::~locale(&v48);
    std::ostream::put();
    std::ostream::flush();
    return 1;
  }
  else
  {
    sub_2169C56DC((uint64_t)&v48, v4, v5);
    if ((v51 & 0x80u) == 0) {
      unint64_t v33 = &v49;
    }
    else {
      unint64_t v33 = v49;
    }
    if ((v51 & 0x80u) == 0) {
      uint64_t v34 = v51;
    }
    else {
      uint64_t v34 = v50;
    }
    uint64_t v35 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v33, v34);
    LOBYTE(__p) = 58;
    sub_216779180(v35, (uint64_t)&__p, 1);
    uint64_t v36 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 58;
    sub_216779180(v36, (uint64_t)&__p, 1);
    uint64_t v37 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 40;
    sub_216779180(v37, (uint64_t)&__p, 1);
    uint64_t v38 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 41;
    uint64_t v39 = sub_216779180(v38, (uint64_t)&__p, 1);
    uint64_t v40 = sub_216779180(v39, (uint64_t)" failure ", 9);
    sub_216A3B6CC(&__p);
    if ((v47 & 0x80u) == 0) {
      uint64_t v41 = &__p;
    }
    else {
      uint64_t v41 = __p;
    }
    if ((v47 & 0x80u) == 0) {
      uint64_t v42 = v47;
    }
    else {
      uint64_t v42 = v46;
    }
    uint64_t v43 = sub_216779180(v40, (uint64_t)v41, v42);
    std::ios_base::getloc((const std::ios_base *)((char *)v43 + *(void *)(*v43 - 24)));
    uint64_t v44 = std::locale::use_facet(&v52, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v44->__vftable[2].~facet_0)(v44, 10);
    std::locale::~locale(&v52);
    std::ostream::put();
    std::ostream::flush();
    if ((char)v47 < 0) {
      operator delete(__p);
    }
    if ((char)v51 < 0) {
      operator delete(v49);
    }
    return 0;
  }
}

void sub_216A3B658(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, std::locale a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,std::locale a24)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A3B6CC(void *a1@<X8>)
{
  uint64_t v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_116ScalarExpressionE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_116ScalarExpressionE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A3B764(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_216A3B778(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (_OWORD *)(a1 + 8);
  std::runtime_error v5 = (long long *)(a1 + 48);
  sub_2169C56DC((uint64_t)&v107, a1 + 8, (long long *)(a1 + 48));
  if ((v110 & 0x80u) == 0) {
    uint64_t v6 = &v108;
  }
  else {
    uint64_t v6 = v108;
  }
  if ((v110 & 0x80u) == 0) {
    uint64_t v7 = v110;
  }
  else {
    uint64_t v7 = v109;
  }
  uint64_t v8 = (void *)MEMORY[0x263F8C0F8];
  long long v9 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v6, v7);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v9, (uint64_t)__p, 1);
  uint64_t v10 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v10, (uint64_t)__p, 1);
  uint64_t v11 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v11, (uint64_t)__p, 1);
  uint64_t v12 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  char v13 = sub_216779180(v12, (uint64_t)__p, 1);
  uint64_t v14 = sub_216779180(v13, (uint64_t)"  start  ", 9);
  sub_216A3F4AC(__p);
  if ((SBYTE7(v101) & 0x80u) == 0) {
    uint64_t v15 = __p;
  }
  else {
    uint64_t v15 = (void **)__p[0];
  }
  if ((SBYTE7(v101) & 0x80u) == 0) {
    uint64_t v16 = BYTE7(v101);
  }
  else {
    uint64_t v16 = (uint64_t)__p[1];
  }
  uint64_t v17 = sub_216779180(v14, (uint64_t)v15, v16);
  sub_216779180(v17, (uint64_t)"; current ", 10);
  if (SBYTE7(v101) < 0) {
    operator delete(__p[0]);
  }
  if ((char)v110 < 0) {
    operator delete(v108);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v8 + *(void *)(*v8 - 24)));
  uint64_t v18 = std::locale::use_facet(&v107, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v18->__vftable[2].~facet_0)(v18, 10);
  std::locale::~locale(&v107);
  std::ostream::put();
  std::ostream::flush();
  uint64_t v19 = sub_216A3F558((void *)a1);
  if (v19)
  {
    long long v20 = v4[1];
    v99[0] = *v4;
    v99[1] = v20;
    long long v21 = v4[1];
    *(_OWORD *)std::string __p = *v4;
    long long v101 = v21;
    uint64_t v102 = v4;
    sub_2169C56DC((uint64_t)&v107, (uint64_t)v4, v5);
    if ((v110 & 0x80u) == 0) {
      uint64_t v22 = &v108;
    }
    else {
      uint64_t v22 = v108;
    }
    if ((v110 & 0x80u) == 0) {
      uint64_t v23 = v110;
    }
    else {
      uint64_t v23 = v109;
    }
    uint64_t v24 = (void *)MEMORY[0x263F8C0F8];
    unint64_t v25 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v22, v23);
    LOBYTE(v103) = 58;
    sub_216779180(v25, (uint64_t)&v103, 1);
    uint64_t v26 = (void *)std::ostream::operator<<();
    LOBYTE(v103) = 58;
    sub_216779180(v26, (uint64_t)&v103, 1);
    uint64_t v27 = (void *)std::ostream::operator<<();
    LOBYTE(v103) = 40;
    sub_216779180(v27, (uint64_t)&v103, 1);
    uint64_t v28 = (void *)std::ostream::operator<<();
    LOBYTE(v103) = 41;
    uint64_t v29 = sub_216779180(v28, (uint64_t)&v103, 1);
    long long v30 = sub_216779180(v29, (uint64_t)"  start  ", 9);
    sub_216A40260(&v103);
    if ((v105 & 0x80u) == 0) {
      uint64_t v31 = &v103;
    }
    else {
      uint64_t v31 = v103;
    }
    if ((v105 & 0x80u) == 0) {
      uint64_t v32 = v105;
    }
    else {
      uint64_t v32 = v104;
    }
    unint64_t v33 = sub_216779180(v30, (uint64_t)v31, v32);
    sub_216779180(v33, (uint64_t)"; current ", 10);
    if ((char)v105 < 0) {
      operator delete(v103);
    }
    if ((char)v110 < 0) {
      operator delete(v108);
    }
    sub_216A3AB00(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v24 + *(void *)(*v24 - 24)));
    uint64_t v34 = std::locale::use_facet(&v107, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v34->__vftable[2].~facet_0)(v34, 10);
    std::locale::~locale(&v107);
    std::ostream::put();
    std::ostream::flush();
    if (!sub_216A4030C((void *)a1))
    {
      sub_2169C56DC((uint64_t)&v107, (uint64_t)v4, v5);
      if ((v110 & 0x80u) == 0) {
        uint64_t v86 = &v108;
      }
      else {
        uint64_t v86 = v108;
      }
      if ((v110 & 0x80u) == 0) {
        uint64_t v87 = v110;
      }
      else {
        uint64_t v87 = v109;
      }
      uint64_t v88 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v86, v87);
      LOBYTE(v103) = 58;
      sub_216779180(v88, (uint64_t)&v103, 1);
      uint64_t v89 = (void *)std::ostream::operator<<();
      LOBYTE(v103) = 58;
      sub_216779180(v89, (uint64_t)&v103, 1);
      uint64_t v90 = (void *)std::ostream::operator<<();
      LOBYTE(v103) = 40;
      sub_216779180(v90, (uint64_t)&v103, 1);
      uint64_t v91 = (void *)std::ostream::operator<<();
      LOBYTE(v103) = 41;
      uint64_t v92 = sub_216779180(v91, (uint64_t)&v103, 1);
      uint64_t v93 = sub_216779180(v92, (uint64_t)" failure ", 9);
      sub_216A40260(&v103);
      if ((v105 & 0x80u) == 0) {
        uint64_t v94 = &v103;
      }
      else {
        uint64_t v94 = v103;
      }
      if ((v105 & 0x80u) == 0) {
        uint64_t v95 = v105;
      }
      else {
        uint64_t v95 = v104;
      }
      uint64_t v96 = sub_216779180(v93, (uint64_t)v94, v95);
      std::ios_base::getloc((const std::ios_base *)((char *)v96 + *(void *)(*v96 - 24)));
      uint64_t v97 = std::locale::use_facet(&v106, MEMORY[0x263F8C108]);
      ((void (*)(const std::locale::facet *, uint64_t))v97->__vftable[2].~facet_0)(v97, 10);
      std::locale::~locale(&v106);
      std::ostream::put();
      std::ostream::flush();
      if ((char)v105 < 0) {
        operator delete(v103);
      }
      if ((char)v110 < 0) {
        operator delete(v108);
      }
      long long v98 = v101;
      *uint64_t v4 = *(_OWORD *)__p;
      v4[1] = v98;
      sub_216A40764(a1);
    }
    while ((sub_216A40368((void *)a1) & 1) != 0)
      ;
    sub_2169C56DC((uint64_t)&v107, (uint64_t)v4, v5);
    if ((v110 & 0x80u) == 0) {
      uint64_t v35 = &v108;
    }
    else {
      uint64_t v35 = v108;
    }
    if ((v110 & 0x80u) == 0) {
      uint64_t v36 = v110;
    }
    else {
      uint64_t v36 = v109;
    }
    uint64_t v37 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v35, v36);
    LOBYTE(v103) = 58;
    sub_216779180(v37, (uint64_t)&v103, 1);
    uint64_t v38 = (void *)std::ostream::operator<<();
    LOBYTE(v103) = 58;
    sub_216779180(v38, (uint64_t)&v103, 1);
    uint64_t v39 = (void *)std::ostream::operator<<();
    LOBYTE(v103) = 40;
    sub_216779180(v39, (uint64_t)&v103, 1);
    uint64_t v40 = (void *)std::ostream::operator<<();
    LOBYTE(v103) = 41;
    uint64_t v41 = sub_216779180(v40, (uint64_t)&v103, 1);
    uint64_t v42 = sub_216779180(v41, (uint64_t)"  apply  ", 9);
    sub_216A40260(&v103);
    if ((v105 & 0x80u) == 0) {
      uint64_t v43 = &v103;
    }
    else {
      uint64_t v43 = v103;
    }
    if ((v105 & 0x80u) == 0) {
      uint64_t v44 = v105;
    }
    else {
      uint64_t v44 = v104;
    }
    uint64_t v45 = sub_216779180(v42, (uint64_t)v43, v44);
    std::ios_base::getloc((const std::ios_base *)((char *)v45 + *(void *)(*v45 - 24)));
    uint64_t v46 = std::locale::use_facet(&v106, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v46->__vftable[2].~facet_0)(v46, 10);
    std::locale::~locale(&v106);
    std::ostream::put();
    std::ostream::flush();
    if ((char)v105 < 0) {
      operator delete(v103);
    }
    if ((char)v110 < 0) {
      operator delete(v108);
    }
    sub_216A403C8((char **)__p, a1, a2);
    sub_2169C56DC((uint64_t)&v107, (uint64_t)v4, v5);
    if ((v110 & 0x80u) == 0) {
      unsigned __int8 v47 = &v108;
    }
    else {
      unsigned __int8 v47 = v108;
    }
    if ((v110 & 0x80u) == 0) {
      uint64_t v48 = v110;
    }
    else {
      uint64_t v48 = v109;
    }
    long long v49 = (void *)MEMORY[0x263F8C0F8];
    uint64_t v50 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v47, v48);
    LOBYTE(v103) = 58;
    sub_216779180(v50, (uint64_t)&v103, 1);
    unsigned __int8 v51 = (void *)std::ostream::operator<<();
    LOBYTE(v103) = 58;
    sub_216779180(v51, (uint64_t)&v103, 1);
    std::locale v52 = (void *)std::ostream::operator<<();
    LOBYTE(v103) = 40;
    sub_216779180(v52, (uint64_t)&v103, 1);
    uint64_t v53 = (void *)std::ostream::operator<<();
    LOBYTE(v103) = 41;
    long long v54 = sub_216779180(v53, (uint64_t)&v103, 1);
    long long v55 = sub_216779180(v54, (uint64_t)" success ", 9);
    sub_216A40260(&v103);
    if ((v105 & 0x80u) == 0) {
      uint64_t v56 = &v103;
    }
    else {
      uint64_t v56 = v103;
    }
    if ((v105 & 0x80u) == 0) {
      uint64_t v57 = v105;
    }
    else {
      uint64_t v57 = v104;
    }
    uint64_t v58 = sub_216779180(v55, (uint64_t)v56, v57);
    sub_216779180(v58, (uint64_t)"; next ", 7);
    if ((char)v105 < 0) {
      operator delete(v103);
    }
    if ((char)v110 < 0) {
      operator delete(v108);
    }
    sub_216A3AB00(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v49 + *(void *)(*v49 - 24)));
    uint64_t v59 = std::locale::use_facet(&v107, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v59->__vftable[2].~facet_0)(v59, 10);
    std::locale::~locale(&v107);
    std::ostream::put();
    std::ostream::flush();
    sub_216A3FCB4(a1);
    sub_2169C56DC((uint64_t)&v107, (uint64_t)v4, v5);
    if ((v110 & 0x80u) == 0) {
      uint64_t v60 = &v108;
    }
    else {
      uint64_t v60 = v108;
    }
    if ((v110 & 0x80u) == 0) {
      uint64_t v61 = v110;
    }
    else {
      uint64_t v61 = v109;
    }
    uint64_t v62 = (void *)MEMORY[0x263F8C0F8];
    std::string::size_type v63 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v60, v61);
    LOBYTE(__p[0]) = 58;
    sub_216779180(v63, (uint64_t)__p, 1);
    uint64_t v64 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 58;
    sub_216779180(v64, (uint64_t)__p, 1);
    uint64_t v65 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 40;
    sub_216779180(v65, (uint64_t)__p, 1);
    uint64_t v66 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 41;
    uint64_t v67 = sub_216779180(v66, (uint64_t)__p, 1);
    uint64_t v68 = sub_216779180(v67, (uint64_t)" success ", 9);
    sub_216A3F4AC(__p);
    if ((SBYTE7(v101) & 0x80u) == 0) {
      uint64_t v69 = __p;
    }
    else {
      uint64_t v69 = (void **)__p[0];
    }
    if ((SBYTE7(v101) & 0x80u) == 0) {
      uint64_t v70 = BYTE7(v101);
    }
    else {
      uint64_t v70 = (uint64_t)__p[1];
    }
    uint64_t v71 = sub_216779180(v68, (uint64_t)v69, v70);
    sub_216779180(v71, (uint64_t)"; next ", 7);
    if (SBYTE7(v101) < 0) {
      operator delete(__p[0]);
    }
    if ((char)v110 < 0) {
      operator delete(v108);
    }
    sub_216A3AB00(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v62 + *(void *)(*v62 - 24)));
    uint64_t v72 = std::locale::use_facet(&v107, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v72->__vftable[2].~facet_0)(v72, 10);
    std::locale::~locale(&v107);
    std::ostream::put();
    std::ostream::flush();
  }
  else
  {
    sub_2169C56DC((uint64_t)&v107, (uint64_t)v4, v5);
    if ((v110 & 0x80u) == 0) {
      uint64_t v73 = &v108;
    }
    else {
      uint64_t v73 = v108;
    }
    if ((v110 & 0x80u) == 0) {
      uint64_t v74 = v110;
    }
    else {
      uint64_t v74 = v109;
    }
    uint64_t v75 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v73, v74);
    LOBYTE(__p[0]) = 58;
    sub_216779180(v75, (uint64_t)__p, 1);
    uint64_t v76 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 58;
    sub_216779180(v76, (uint64_t)__p, 1);
    uint64_t v77 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 40;
    sub_216779180(v77, (uint64_t)__p, 1);
    uint64_t v78 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 41;
    uint64_t v79 = sub_216779180(v78, (uint64_t)__p, 1);
    uint64_t v80 = sub_216779180(v79, (uint64_t)" failure ", 9);
    sub_216A3F4AC(__p);
    if ((SBYTE7(v101) & 0x80u) == 0) {
      uint64_t v81 = __p;
    }
    else {
      uint64_t v81 = (void **)__p[0];
    }
    if ((SBYTE7(v101) & 0x80u) == 0) {
      uint64_t v82 = BYTE7(v101);
    }
    else {
      uint64_t v82 = (uint64_t)__p[1];
    }
    uint64_t v83 = sub_216779180(v80, (uint64_t)v81, v82);
    std::ios_base::getloc((const std::ios_base *)((char *)v83 + *(void *)(*v83 - 24)));
    uint64_t v84 = std::locale::use_facet((const std::locale *)v99, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v84->__vftable[2].~facet_0)(v84, 10);
    std::locale::~locale((std::locale *)v99);
    std::ostream::put();
    std::ostream::flush();
    if (SBYTE7(v101) < 0) {
      operator delete(__p[0]);
    }
    if ((char)v110 < 0) {
      operator delete(v108);
    }
  }
  return v19;
}

void sub_216A3C334(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, long long a9, long long a10, long long a11, long long a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,std::locale a21,std::locale a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  std::locale::~locale(&a21);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a30 < 0) {
    operator delete(a25);
  }
  *long long v30 = a11;
  v30[1] = a12;
  *long long v30 = a9;
  v30[1] = a10;
  _Unwind_Resume(a1);
}

uint64_t sub_216A3C448(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (_OWORD *)(a1 + 8);
  std::runtime_error v5 = (long long *)(a1 + 48);
  sub_2169C56DC((uint64_t)&v105, a1 + 8, (long long *)(a1 + 48));
  if ((v108 & 0x80u) == 0) {
    uint64_t v6 = &v106;
  }
  else {
    uint64_t v6 = v106;
  }
  if ((v108 & 0x80u) == 0) {
    uint64_t v7 = v108;
  }
  else {
    uint64_t v7 = v107;
  }
  uint64_t v8 = (void *)MEMORY[0x263F8C0F8];
  long long v9 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v6, v7);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v9, (uint64_t)__p, 1);
  uint64_t v10 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v10, (uint64_t)__p, 1);
  uint64_t v11 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v11, (uint64_t)__p, 1);
  uint64_t v12 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  char v13 = sub_216779180(v12, (uint64_t)__p, 1);
  uint64_t v14 = sub_216779180(v13, (uint64_t)"  start  ", 9);
  sub_216A408B8(__p);
  if ((SBYTE7(v100) & 0x80u) == 0) {
    uint64_t v15 = __p;
  }
  else {
    uint64_t v15 = (void **)__p[0];
  }
  if ((SBYTE7(v100) & 0x80u) == 0) {
    uint64_t v16 = BYTE7(v100);
  }
  else {
    uint64_t v16 = (uint64_t)__p[1];
  }
  uint64_t v17 = sub_216779180(v14, (uint64_t)v15, v16);
  sub_216779180(v17, (uint64_t)"; current ", 10);
  if (SBYTE7(v100) < 0) {
    operator delete(__p[0]);
  }
  if ((char)v108 < 0) {
    operator delete(v106);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v8 + *(void *)(*v8 - 24)));
  uint64_t v18 = std::locale::use_facet(&v105, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v18->__vftable[2].~facet_0)(v18, 10);
  std::locale::~locale(&v105);
  std::ostream::put();
  std::ostream::flush();
  long long v19 = v4[1];
  *(_OWORD *)std::string __p = *v4;
  long long v100 = v19;
  sub_2169C56DC((uint64_t)&v105, (uint64_t)v4, v5);
  if ((v108 & 0x80u) == 0) {
    long long v20 = &v106;
  }
  else {
    long long v20 = v106;
  }
  if ((v108 & 0x80u) == 0) {
    uint64_t v21 = v108;
  }
  else {
    uint64_t v21 = v107;
  }
  uint64_t v22 = (void *)MEMORY[0x263F8C0F8];
  uint64_t v23 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v20, v21);
  LOBYTE(v101.__locale_) = 58;
  sub_216779180(v23, (uint64_t)&v101, 1);
  uint64_t v24 = (void *)std::ostream::operator<<();
  LOBYTE(v101.__locale_) = 58;
  sub_216779180(v24, (uint64_t)&v101, 1);
  unint64_t v25 = (void *)std::ostream::operator<<();
  LOBYTE(v101.__locale_) = 40;
  sub_216779180(v25, (uint64_t)&v101, 1);
  uint64_t v26 = (void *)std::ostream::operator<<();
  LOBYTE(v101.__locale_) = 41;
  uint64_t v27 = sub_216779180(v26, (uint64_t)&v101, 1);
  uint64_t v28 = sub_216779180(v27, (uint64_t)"  start  ", 9);
  sub_216A40964(&v101);
  if ((v103 & 0x80u) == 0) {
    locale = &v101;
  }
  else {
    locale = v101.__locale_;
  }
  if ((v103 & 0x80u) == 0) {
    uint64_t v30 = v103;
  }
  else {
    uint64_t v30 = v102;
  }
  uint64_t v31 = sub_216779180(v28, (uint64_t)locale, v30);
  sub_216779180(v31, (uint64_t)"; current ", 10);
  if ((char)v103 < 0) {
    operator delete(v101.__locale_);
  }
  if ((char)v108 < 0) {
    operator delete(v106);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v22 + *(void *)(*v22 - 24)));
  uint64_t v32 = std::locale::use_facet(&v105, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v32->__vftable[2].~facet_0)(v32, 10);
  std::locale::~locale(&v105);
  std::ostream::put();
  std::ostream::flush();
  unint64_t v33 = *(unsigned char **)(a1 + 8);
  if (*(unsigned char **)(a1 + 40) == v33 || *v33 != 34)
  {
    sub_2169C56DC((uint64_t)&v105, (uint64_t)v4, v5);
    if ((v108 & 0x80u) == 0) {
      uint64_t v74 = &v106;
    }
    else {
      uint64_t v74 = v106;
    }
    if ((v108 & 0x80u) == 0) {
      uint64_t v75 = v108;
    }
    else {
      uint64_t v75 = v107;
    }
    uint64_t v76 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v74, v75);
    LOBYTE(v101.__locale_) = 58;
    sub_216779180(v76, (uint64_t)&v101, 1);
    uint64_t v77 = (void *)std::ostream::operator<<();
    LOBYTE(v101.__locale_) = 58;
    sub_216779180(v77, (uint64_t)&v101, 1);
    uint64_t v78 = (void *)std::ostream::operator<<();
    LOBYTE(v101.__locale_) = 40;
    sub_216779180(v78, (uint64_t)&v101, 1);
    uint64_t v79 = (void *)std::ostream::operator<<();
    LOBYTE(v101.__locale_) = 41;
    uint64_t v80 = sub_216779180(v79, (uint64_t)&v101, 1);
    uint64_t v81 = sub_216779180(v80, (uint64_t)" failure ", 9);
    sub_216A40964(&v101);
    if ((v103 & 0x80u) == 0) {
      uint64_t v82 = &v101;
    }
    else {
      uint64_t v82 = v101.__locale_;
    }
    if ((v103 & 0x80u) == 0) {
      uint64_t v83 = v103;
    }
    else {
      uint64_t v83 = v102;
    }
    uint64_t v84 = sub_216779180(v81, (uint64_t)v82, v83);
    std::ios_base::getloc((const std::ios_base *)((char *)v84 + *(void *)(*v84 - 24)));
    uint64_t v85 = std::locale::use_facet(&v104, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v85->__vftable[2].~facet_0)(v85, 10);
    std::locale::~locale(&v104);
    std::ostream::put();
    std::ostream::flush();
    if ((char)v103 < 0) {
      operator delete(v101.__locale_);
    }
    if ((char)v108 < 0) {
      operator delete(v106);
    }
    long long v86 = v100;
    *uint64_t v4 = *(_OWORD *)__p;
    v4[1] = v86;
    sub_2169C56DC((uint64_t)&v105, (uint64_t)v4, v5);
    if ((v108 & 0x80u) == 0) {
      uint64_t v87 = &v106;
    }
    else {
      uint64_t v87 = v106;
    }
    if ((v108 & 0x80u) == 0) {
      uint64_t v88 = v108;
    }
    else {
      uint64_t v88 = v107;
    }
    uint64_t v89 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v87, v88);
    LOBYTE(__p[0]) = 58;
    sub_216779180(v89, (uint64_t)__p, 1);
    uint64_t v90 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 58;
    sub_216779180(v90, (uint64_t)__p, 1);
    uint64_t v91 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 40;
    sub_216779180(v91, (uint64_t)__p, 1);
    uint64_t v92 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 41;
    uint64_t v93 = sub_216779180(v92, (uint64_t)__p, 1);
    uint64_t v94 = sub_216779180(v93, (uint64_t)" failure ", 9);
    sub_216A408B8(__p);
    if ((SBYTE7(v100) & 0x80u) == 0) {
      uint64_t v95 = __p;
    }
    else {
      uint64_t v95 = (void **)__p[0];
    }
    if ((SBYTE7(v100) & 0x80u) == 0) {
      uint64_t v96 = BYTE7(v100);
    }
    else {
      uint64_t v96 = (uint64_t)__p[1];
    }
    uint64_t v97 = sub_216779180(v94, (uint64_t)v95, v96);
    std::ios_base::getloc((const std::ios_base *)((char *)v97 + *(void *)(*v97 - 24)));
    long long v98 = std::locale::use_facet(&v101, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v98->__vftable[2].~facet_0)(v98, 10);
    std::locale::~locale(&v101);
    std::ostream::put();
    std::ostream::flush();
    if (SBYTE7(v100) < 0) {
      operator delete(__p[0]);
    }
    if ((char)v108 < 0) {
      operator delete(v106);
    }
    return 0;
  }
  else
  {
    uint64_t v34 = *(void *)(a1 + 16) + 1;
    *(void *)(a1 + 8) = v33 + 1;
    *(void *)(a1 + 16) = v34;
    ++*(void *)(a1 + 32);
    sub_2169C56DC((uint64_t)&v105, (uint64_t)v4, v5);
    if ((v108 & 0x80u) == 0) {
      uint64_t v35 = &v106;
    }
    else {
      uint64_t v35 = v106;
    }
    if ((v108 & 0x80u) == 0) {
      uint64_t v36 = v108;
    }
    else {
      uint64_t v36 = v107;
    }
    uint64_t v37 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v35, v36);
    LOBYTE(v101.__locale_) = 58;
    sub_216779180(v37, (uint64_t)&v101, 1);
    uint64_t v38 = (void *)std::ostream::operator<<();
    LOBYTE(v101.__locale_) = 58;
    sub_216779180(v38, (uint64_t)&v101, 1);
    uint64_t v39 = (void *)std::ostream::operator<<();
    LOBYTE(v101.__locale_) = 40;
    sub_216779180(v39, (uint64_t)&v101, 1);
    uint64_t v40 = (void *)std::ostream::operator<<();
    LOBYTE(v101.__locale_) = 41;
    uint64_t v41 = sub_216779180(v40, (uint64_t)&v101, 1);
    uint64_t v42 = sub_216779180(v41, (uint64_t)"  apply  ", 9);
    sub_216A40964(&v101);
    if ((v103 & 0x80u) == 0) {
      uint64_t v43 = &v101;
    }
    else {
      uint64_t v43 = v101.__locale_;
    }
    if ((v103 & 0x80u) == 0) {
      uint64_t v44 = v103;
    }
    else {
      uint64_t v44 = v102;
    }
    uint64_t v45 = sub_216779180(v42, (uint64_t)v43, v44);
    std::ios_base::getloc((const std::ios_base *)((char *)v45 + *(void *)(*v45 - 24)));
    uint64_t v46 = std::locale::use_facet(&v104, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v46->__vftable[2].~facet_0)(v46, 10);
    std::locale::~locale(&v104);
    std::ostream::put();
    std::ostream::flush();
    if ((char)v103 < 0) {
      operator delete(v101.__locale_);
    }
    if ((char)v108 < 0) {
      operator delete(v106);
    }
    sub_216A40A10(a2);
    sub_2169C56DC((uint64_t)&v105, (uint64_t)v4, v5);
    if ((v108 & 0x80u) == 0) {
      unsigned __int8 v47 = &v106;
    }
    else {
      unsigned __int8 v47 = v106;
    }
    if ((v108 & 0x80u) == 0) {
      uint64_t v48 = v108;
    }
    else {
      uint64_t v48 = v107;
    }
    long long v49 = (void *)MEMORY[0x263F8C0F8];
    uint64_t v50 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v47, v48);
    LOBYTE(v101.__locale_) = 58;
    sub_216779180(v50, (uint64_t)&v101, 1);
    unsigned __int8 v51 = (void *)std::ostream::operator<<();
    LOBYTE(v101.__locale_) = 58;
    sub_216779180(v51, (uint64_t)&v101, 1);
    std::locale v52 = (void *)std::ostream::operator<<();
    LOBYTE(v101.__locale_) = 40;
    sub_216779180(v52, (uint64_t)&v101, 1);
    uint64_t v53 = (void *)std::ostream::operator<<();
    LOBYTE(v101.__locale_) = 41;
    long long v54 = sub_216779180(v53, (uint64_t)&v101, 1);
    long long v55 = sub_216779180(v54, (uint64_t)" success ", 9);
    sub_216A40964(&v101);
    if ((v103 & 0x80u) == 0) {
      uint64_t v56 = &v101;
    }
    else {
      uint64_t v56 = v101.__locale_;
    }
    if ((v103 & 0x80u) == 0) {
      uint64_t v57 = v103;
    }
    else {
      uint64_t v57 = v102;
    }
    uint64_t v58 = sub_216779180(v55, (uint64_t)v56, v57);
    sub_216779180(v58, (uint64_t)"; next ", 7);
    if ((char)v103 < 0) {
      operator delete(v101.__locale_);
    }
    if ((char)v108 < 0) {
      operator delete(v106);
    }
    sub_216A3AB00(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v49 + *(void *)(*v49 - 24)));
    uint64_t v59 = std::locale::use_facet(&v105, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v59->__vftable[2].~facet_0)(v59, 10);
    std::locale::~locale(&v105);
    std::ostream::put();
    std::ostream::flush();
    sub_216A40C20(a1, a2);
    sub_2169C56DC((uint64_t)&v105, (uint64_t)v4, v5);
    if ((v108 & 0x80u) == 0) {
      uint64_t v60 = &v106;
    }
    else {
      uint64_t v60 = v106;
    }
    if ((v108 & 0x80u) == 0) {
      uint64_t v61 = v108;
    }
    else {
      uint64_t v61 = v107;
    }
    uint64_t v62 = (void *)MEMORY[0x263F8C0F8];
    std::string::size_type v63 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v60, v61);
    LOBYTE(__p[0]) = 58;
    sub_216779180(v63, (uint64_t)__p, 1);
    uint64_t v64 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 58;
    sub_216779180(v64, (uint64_t)__p, 1);
    uint64_t v65 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 40;
    sub_216779180(v65, (uint64_t)__p, 1);
    uint64_t v66 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 41;
    uint64_t v67 = sub_216779180(v66, (uint64_t)__p, 1);
    uint64_t v68 = sub_216779180(v67, (uint64_t)" success ", 9);
    sub_216A408B8(__p);
    if ((SBYTE7(v100) & 0x80u) == 0) {
      uint64_t v69 = __p;
    }
    else {
      uint64_t v69 = (void **)__p[0];
    }
    if ((SBYTE7(v100) & 0x80u) == 0) {
      uint64_t v70 = BYTE7(v100);
    }
    else {
      uint64_t v70 = (uint64_t)__p[1];
    }
    uint64_t v71 = sub_216779180(v68, (uint64_t)v69, v70);
    sub_216779180(v71, (uint64_t)"; next ", 7);
    if (SBYTE7(v100) < 0) {
      operator delete(__p[0]);
    }
    if ((char)v108 < 0) {
      operator delete(v106);
    }
    sub_216A3AB00(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v62 + *(void *)(*v62 - 24)));
    uint64_t v72 = std::locale::use_facet(&v105, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v72->__vftable[2].~facet_0)(v72, 10);
    std::locale::~locale(&v105);
    std::ostream::put();
    std::ostream::flush();
    return 1;
  }
}

void sub_216A3CFFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, std::locale a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,std::locale a22,std::locale a23,uint64_t a24,uint64_t a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  if (a31 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_216A3D100(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (_OWORD *)(a1 + 8);
  std::runtime_error v5 = (long long *)(a1 + 48);
  sub_2169C56DC((uint64_t)&v105, a1 + 8, (long long *)(a1 + 48));
  if ((v108 & 0x80u) == 0) {
    uint64_t v6 = &v106;
  }
  else {
    uint64_t v6 = v106;
  }
  if ((v108 & 0x80u) == 0) {
    uint64_t v7 = v108;
  }
  else {
    uint64_t v7 = v107;
  }
  uint64_t v8 = (void *)MEMORY[0x263F8C0F8];
  long long v9 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v6, v7);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v9, (uint64_t)__p, 1);
  uint64_t v10 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v10, (uint64_t)__p, 1);
  uint64_t v11 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v11, (uint64_t)__p, 1);
  uint64_t v12 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  char v13 = sub_216779180(v12, (uint64_t)__p, 1);
  uint64_t v14 = sub_216779180(v13, (uint64_t)"  start  ", 9);
  sub_216A46FC4(__p);
  if ((SBYTE7(v100) & 0x80u) == 0) {
    uint64_t v15 = __p;
  }
  else {
    uint64_t v15 = (void **)__p[0];
  }
  if ((SBYTE7(v100) & 0x80u) == 0) {
    uint64_t v16 = BYTE7(v100);
  }
  else {
    uint64_t v16 = (uint64_t)__p[1];
  }
  uint64_t v17 = sub_216779180(v14, (uint64_t)v15, v16);
  sub_216779180(v17, (uint64_t)"; current ", 10);
  if (SBYTE7(v100) < 0) {
    operator delete(__p[0]);
  }
  if ((char)v108 < 0) {
    operator delete(v106);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v8 + *(void *)(*v8 - 24)));
  uint64_t v18 = std::locale::use_facet(&v105, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v18->__vftable[2].~facet_0)(v18, 10);
  std::locale::~locale(&v105);
  std::ostream::put();
  std::ostream::flush();
  long long v19 = v4[1];
  *(_OWORD *)std::string __p = *v4;
  long long v100 = v19;
  sub_2169C56DC((uint64_t)&v105, (uint64_t)v4, v5);
  if ((v108 & 0x80u) == 0) {
    long long v20 = &v106;
  }
  else {
    long long v20 = v106;
  }
  if ((v108 & 0x80u) == 0) {
    uint64_t v21 = v108;
  }
  else {
    uint64_t v21 = v107;
  }
  uint64_t v22 = (void *)MEMORY[0x263F8C0F8];
  uint64_t v23 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v20, v21);
  LOBYTE(v101.__locale_) = 58;
  sub_216779180(v23, (uint64_t)&v101, 1);
  uint64_t v24 = (void *)std::ostream::operator<<();
  LOBYTE(v101.__locale_) = 58;
  sub_216779180(v24, (uint64_t)&v101, 1);
  unint64_t v25 = (void *)std::ostream::operator<<();
  LOBYTE(v101.__locale_) = 40;
  sub_216779180(v25, (uint64_t)&v101, 1);
  uint64_t v26 = (void *)std::ostream::operator<<();
  LOBYTE(v101.__locale_) = 41;
  uint64_t v27 = sub_216779180(v26, (uint64_t)&v101, 1);
  uint64_t v28 = sub_216779180(v27, (uint64_t)"  start  ", 9);
  sub_216A47070(&v101);
  if ((v103 & 0x80u) == 0) {
    locale = &v101;
  }
  else {
    locale = v101.__locale_;
  }
  if ((v103 & 0x80u) == 0) {
    uint64_t v30 = v103;
  }
  else {
    uint64_t v30 = v102;
  }
  uint64_t v31 = sub_216779180(v28, (uint64_t)locale, v30);
  sub_216779180(v31, (uint64_t)"; current ", 10);
  if ((char)v103 < 0) {
    operator delete(v101.__locale_);
  }
  if ((char)v108 < 0) {
    operator delete(v106);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v22 + *(void *)(*v22 - 24)));
  uint64_t v32 = std::locale::use_facet(&v105, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v32->__vftable[2].~facet_0)(v32, 10);
  std::locale::~locale(&v105);
  std::ostream::put();
  std::ostream::flush();
  unint64_t v33 = *(unsigned char **)(a1 + 8);
  if (*(unsigned char **)(a1 + 40) == v33 || *v33 != 39)
  {
    sub_2169C56DC((uint64_t)&v105, (uint64_t)v4, v5);
    if ((v108 & 0x80u) == 0) {
      uint64_t v74 = &v106;
    }
    else {
      uint64_t v74 = v106;
    }
    if ((v108 & 0x80u) == 0) {
      uint64_t v75 = v108;
    }
    else {
      uint64_t v75 = v107;
    }
    uint64_t v76 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v74, v75);
    LOBYTE(v101.__locale_) = 58;
    sub_216779180(v76, (uint64_t)&v101, 1);
    uint64_t v77 = (void *)std::ostream::operator<<();
    LOBYTE(v101.__locale_) = 58;
    sub_216779180(v77, (uint64_t)&v101, 1);
    uint64_t v78 = (void *)std::ostream::operator<<();
    LOBYTE(v101.__locale_) = 40;
    sub_216779180(v78, (uint64_t)&v101, 1);
    uint64_t v79 = (void *)std::ostream::operator<<();
    LOBYTE(v101.__locale_) = 41;
    uint64_t v80 = sub_216779180(v79, (uint64_t)&v101, 1);
    uint64_t v81 = sub_216779180(v80, (uint64_t)" failure ", 9);
    sub_216A47070(&v101);
    if ((v103 & 0x80u) == 0) {
      uint64_t v82 = &v101;
    }
    else {
      uint64_t v82 = v101.__locale_;
    }
    if ((v103 & 0x80u) == 0) {
      uint64_t v83 = v103;
    }
    else {
      uint64_t v83 = v102;
    }
    uint64_t v84 = sub_216779180(v81, (uint64_t)v82, v83);
    std::ios_base::getloc((const std::ios_base *)((char *)v84 + *(void *)(*v84 - 24)));
    uint64_t v85 = std::locale::use_facet(&v104, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v85->__vftable[2].~facet_0)(v85, 10);
    std::locale::~locale(&v104);
    std::ostream::put();
    std::ostream::flush();
    if ((char)v103 < 0) {
      operator delete(v101.__locale_);
    }
    if ((char)v108 < 0) {
      operator delete(v106);
    }
    long long v86 = v100;
    *uint64_t v4 = *(_OWORD *)__p;
    v4[1] = v86;
    sub_2169C56DC((uint64_t)&v105, (uint64_t)v4, v5);
    if ((v108 & 0x80u) == 0) {
      uint64_t v87 = &v106;
    }
    else {
      uint64_t v87 = v106;
    }
    if ((v108 & 0x80u) == 0) {
      uint64_t v88 = v108;
    }
    else {
      uint64_t v88 = v107;
    }
    uint64_t v89 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v87, v88);
    LOBYTE(__p[0]) = 58;
    sub_216779180(v89, (uint64_t)__p, 1);
    uint64_t v90 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 58;
    sub_216779180(v90, (uint64_t)__p, 1);
    uint64_t v91 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 40;
    sub_216779180(v91, (uint64_t)__p, 1);
    uint64_t v92 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 41;
    uint64_t v93 = sub_216779180(v92, (uint64_t)__p, 1);
    uint64_t v94 = sub_216779180(v93, (uint64_t)" failure ", 9);
    sub_216A46FC4(__p);
    if ((SBYTE7(v100) & 0x80u) == 0) {
      uint64_t v95 = __p;
    }
    else {
      uint64_t v95 = (void **)__p[0];
    }
    if ((SBYTE7(v100) & 0x80u) == 0) {
      uint64_t v96 = BYTE7(v100);
    }
    else {
      uint64_t v96 = (uint64_t)__p[1];
    }
    uint64_t v97 = sub_216779180(v94, (uint64_t)v95, v96);
    std::ios_base::getloc((const std::ios_base *)((char *)v97 + *(void *)(*v97 - 24)));
    long long v98 = std::locale::use_facet(&v101, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v98->__vftable[2].~facet_0)(v98, 10);
    std::locale::~locale(&v101);
    std::ostream::put();
    std::ostream::flush();
    if (SBYTE7(v100) < 0) {
      operator delete(__p[0]);
    }
    if ((char)v108 < 0) {
      operator delete(v106);
    }
    return 0;
  }
  else
  {
    uint64_t v34 = *(void *)(a1 + 16) + 1;
    *(void *)(a1 + 8) = v33 + 1;
    *(void *)(a1 + 16) = v34;
    ++*(void *)(a1 + 32);
    sub_2169C56DC((uint64_t)&v105, (uint64_t)v4, v5);
    if ((v108 & 0x80u) == 0) {
      uint64_t v35 = &v106;
    }
    else {
      uint64_t v35 = v106;
    }
    if ((v108 & 0x80u) == 0) {
      uint64_t v36 = v108;
    }
    else {
      uint64_t v36 = v107;
    }
    uint64_t v37 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v35, v36);
    LOBYTE(v101.__locale_) = 58;
    sub_216779180(v37, (uint64_t)&v101, 1);
    uint64_t v38 = (void *)std::ostream::operator<<();
    LOBYTE(v101.__locale_) = 58;
    sub_216779180(v38, (uint64_t)&v101, 1);
    uint64_t v39 = (void *)std::ostream::operator<<();
    LOBYTE(v101.__locale_) = 40;
    sub_216779180(v39, (uint64_t)&v101, 1);
    uint64_t v40 = (void *)std::ostream::operator<<();
    LOBYTE(v101.__locale_) = 41;
    uint64_t v41 = sub_216779180(v40, (uint64_t)&v101, 1);
    uint64_t v42 = sub_216779180(v41, (uint64_t)"  apply  ", 9);
    sub_216A47070(&v101);
    if ((v103 & 0x80u) == 0) {
      uint64_t v43 = &v101;
    }
    else {
      uint64_t v43 = v101.__locale_;
    }
    if ((v103 & 0x80u) == 0) {
      uint64_t v44 = v103;
    }
    else {
      uint64_t v44 = v102;
    }
    uint64_t v45 = sub_216779180(v42, (uint64_t)v43, v44);
    std::ios_base::getloc((const std::ios_base *)((char *)v45 + *(void *)(*v45 - 24)));
    uint64_t v46 = std::locale::use_facet(&v104, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v46->__vftable[2].~facet_0)(v46, 10);
    std::locale::~locale(&v104);
    std::ostream::put();
    std::ostream::flush();
    if ((char)v103 < 0) {
      operator delete(v101.__locale_);
    }
    if ((char)v108 < 0) {
      operator delete(v106);
    }
    sub_216A40A10(a2);
    sub_2169C56DC((uint64_t)&v105, (uint64_t)v4, v5);
    if ((v108 & 0x80u) == 0) {
      unsigned __int8 v47 = &v106;
    }
    else {
      unsigned __int8 v47 = v106;
    }
    if ((v108 & 0x80u) == 0) {
      uint64_t v48 = v108;
    }
    else {
      uint64_t v48 = v107;
    }
    long long v49 = (void *)MEMORY[0x263F8C0F8];
    uint64_t v50 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v47, v48);
    LOBYTE(v101.__locale_) = 58;
    sub_216779180(v50, (uint64_t)&v101, 1);
    unsigned __int8 v51 = (void *)std::ostream::operator<<();
    LOBYTE(v101.__locale_) = 58;
    sub_216779180(v51, (uint64_t)&v101, 1);
    std::locale v52 = (void *)std::ostream::operator<<();
    LOBYTE(v101.__locale_) = 40;
    sub_216779180(v52, (uint64_t)&v101, 1);
    uint64_t v53 = (void *)std::ostream::operator<<();
    LOBYTE(v101.__locale_) = 41;
    long long v54 = sub_216779180(v53, (uint64_t)&v101, 1);
    long long v55 = sub_216779180(v54, (uint64_t)" success ", 9);
    sub_216A47070(&v101);
    if ((v103 & 0x80u) == 0) {
      uint64_t v56 = &v101;
    }
    else {
      uint64_t v56 = v101.__locale_;
    }
    if ((v103 & 0x80u) == 0) {
      uint64_t v57 = v103;
    }
    else {
      uint64_t v57 = v102;
    }
    uint64_t v58 = sub_216779180(v55, (uint64_t)v56, v57);
    sub_216779180(v58, (uint64_t)"; next ", 7);
    if ((char)v103 < 0) {
      operator delete(v101.__locale_);
    }
    if ((char)v108 < 0) {
      operator delete(v106);
    }
    sub_216A3AB00(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v49 + *(void *)(*v49 - 24)));
    uint64_t v59 = std::locale::use_facet(&v105, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v59->__vftable[2].~facet_0)(v59, 10);
    std::locale::~locale(&v105);
    std::ostream::put();
    std::ostream::flush();
    sub_216A4711C(a1, a2);
    sub_2169C56DC((uint64_t)&v105, (uint64_t)v4, v5);
    if ((v108 & 0x80u) == 0) {
      uint64_t v60 = &v106;
    }
    else {
      uint64_t v60 = v106;
    }
    if ((v108 & 0x80u) == 0) {
      uint64_t v61 = v108;
    }
    else {
      uint64_t v61 = v107;
    }
    uint64_t v62 = (void *)MEMORY[0x263F8C0F8];
    std::string::size_type v63 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v60, v61);
    LOBYTE(__p[0]) = 58;
    sub_216779180(v63, (uint64_t)__p, 1);
    uint64_t v64 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 58;
    sub_216779180(v64, (uint64_t)__p, 1);
    uint64_t v65 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 40;
    sub_216779180(v65, (uint64_t)__p, 1);
    uint64_t v66 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 41;
    uint64_t v67 = sub_216779180(v66, (uint64_t)__p, 1);
    uint64_t v68 = sub_216779180(v67, (uint64_t)" success ", 9);
    sub_216A46FC4(__p);
    if ((SBYTE7(v100) & 0x80u) == 0) {
      uint64_t v69 = __p;
    }
    else {
      uint64_t v69 = (void **)__p[0];
    }
    if ((SBYTE7(v100) & 0x80u) == 0) {
      uint64_t v70 = BYTE7(v100);
    }
    else {
      uint64_t v70 = (uint64_t)__p[1];
    }
    uint64_t v71 = sub_216779180(v68, (uint64_t)v69, v70);
    sub_216779180(v71, (uint64_t)"; next ", 7);
    if (SBYTE7(v100) < 0) {
      operator delete(__p[0]);
    }
    if ((char)v108 < 0) {
      operator delete(v106);
    }
    sub_216A3AB00(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v62 + *(void *)(*v62 - 24)));
    uint64_t v72 = std::locale::use_facet(&v105, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v72->__vftable[2].~facet_0)(v72, 10);
    std::locale::~locale(&v105);
    std::ostream::put();
    std::ostream::flush();
    return 1;
  }
}

void sub_216A3DCB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, std::locale a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,std::locale a22,std::locale a23,uint64_t a24,uint64_t a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  if (a31 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_216A3DDB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 8;
  std::runtime_error v5 = (long long *)(a1 + 48);
  sub_2169C56DC((uint64_t)&v49, a1 + 8, (long long *)(a1 + 48));
  if ((v52 & 0x80u) == 0) {
    uint64_t v6 = &v50;
  }
  else {
    uint64_t v6 = v50;
  }
  if ((v52 & 0x80u) == 0) {
    uint64_t v7 = v52;
  }
  else {
    uint64_t v7 = v51;
  }
  uint64_t v8 = (void *)MEMORY[0x263F8C0F8];
  long long v9 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v6, v7);
  LOBYTE(__p) = 58;
  sub_216779180(v9, (uint64_t)&__p, 1);
  uint64_t v10 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 58;
  sub_216779180(v10, (uint64_t)&__p, 1);
  uint64_t v11 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 40;
  sub_216779180(v11, (uint64_t)&__p, 1);
  uint64_t v12 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 41;
  char v13 = sub_216779180(v12, (uint64_t)&__p, 1);
  uint64_t v14 = sub_216779180(v13, (uint64_t)"  start  ", 9);
  sub_216A4D8F4(&__p);
  if ((v48 & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = __p;
  }
  if ((v48 & 0x80u) == 0) {
    uint64_t v16 = v48;
  }
  else {
    uint64_t v16 = v47;
  }
  uint64_t v17 = sub_216779180(v14, (uint64_t)p_p, v16);
  sub_216779180(v17, (uint64_t)"; current ", 10);
  if ((char)v48 < 0) {
    operator delete(__p);
  }
  if ((char)v52 < 0) {
    operator delete(v50);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v8 + *(void *)(*v8 - 24)));
  uint64_t v18 = std::locale::use_facet(&v49, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v18->__vftable[2].~facet_0)(v18, 10);
  std::locale::~locale(&v49);
  std::ostream::put();
  std::ostream::flush();
  uint64_t v19 = sub_216A4D9A0(a1, a2);
  if (v19)
  {
    sub_2169C56DC((uint64_t)&v49, v4, v5);
    if ((v52 & 0x80u) == 0) {
      long long v20 = &v50;
    }
    else {
      long long v20 = v50;
    }
    if ((v52 & 0x80u) == 0) {
      uint64_t v21 = v52;
    }
    else {
      uint64_t v21 = v51;
    }
    uint64_t v22 = (void *)MEMORY[0x263F8C0F8];
    uint64_t v23 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v20, v21);
    LOBYTE(__p) = 58;
    sub_216779180(v23, (uint64_t)&__p, 1);
    uint64_t v24 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 58;
    sub_216779180(v24, (uint64_t)&__p, 1);
    unint64_t v25 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 40;
    sub_216779180(v25, (uint64_t)&__p, 1);
    uint64_t v26 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 41;
    uint64_t v27 = sub_216779180(v26, (uint64_t)&__p, 1);
    uint64_t v28 = sub_216779180(v27, (uint64_t)" success ", 9);
    sub_216A4D8F4(&__p);
    if ((v48 & 0x80u) == 0) {
      uint64_t v29 = &__p;
    }
    else {
      uint64_t v29 = __p;
    }
    if ((v48 & 0x80u) == 0) {
      uint64_t v30 = v48;
    }
    else {
      uint64_t v30 = v47;
    }
    uint64_t v31 = sub_216779180(v28, (uint64_t)v29, v30);
    sub_216779180(v31, (uint64_t)"; next ", 7);
    if ((char)v48 < 0) {
      operator delete(__p);
    }
    if ((char)v52 < 0) {
      operator delete(v50);
    }
    sub_216A3AB00(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v22 + *(void *)(*v22 - 24)));
    uint64_t v32 = std::locale::use_facet(&v49, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v32->__vftable[2].~facet_0)(v32, 10);
    std::locale::~locale(&v49);
    std::ostream::put();
    std::ostream::flush();
  }
  else
  {
    sub_2169C56DC((uint64_t)&v49, v4, v5);
    if ((v52 & 0x80u) == 0) {
      unint64_t v33 = &v50;
    }
    else {
      unint64_t v33 = v50;
    }
    if ((v52 & 0x80u) == 0) {
      uint64_t v34 = v52;
    }
    else {
      uint64_t v34 = v51;
    }
    uint64_t v35 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v33, v34);
    LOBYTE(__p) = 58;
    sub_216779180(v35, (uint64_t)&__p, 1);
    uint64_t v36 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 58;
    sub_216779180(v36, (uint64_t)&__p, 1);
    uint64_t v37 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 40;
    sub_216779180(v37, (uint64_t)&__p, 1);
    uint64_t v38 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 41;
    uint64_t v39 = sub_216779180(v38, (uint64_t)&__p, 1);
    uint64_t v40 = sub_216779180(v39, (uint64_t)" failure ", 9);
    sub_216A4D8F4(&__p);
    if ((v48 & 0x80u) == 0) {
      uint64_t v41 = &__p;
    }
    else {
      uint64_t v41 = __p;
    }
    if ((v48 & 0x80u) == 0) {
      uint64_t v42 = v48;
    }
    else {
      uint64_t v42 = v47;
    }
    uint64_t v43 = sub_216779180(v40, (uint64_t)v41, v42);
    std::ios_base::getloc((const std::ios_base *)((char *)v43 + *(void *)(*v43 - 24)));
    uint64_t v44 = std::locale::use_facet(&v53, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v44->__vftable[2].~facet_0)(v44, 10);
    std::locale::~locale(&v53);
    std::ostream::put();
    std::ostream::flush();
    if ((char)v48 < 0) {
      operator delete(__p);
    }
    if ((char)v52 < 0) {
      operator delete(v50);
    }
  }
  return v19;
}

void sub_216A3E2D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, std::locale a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,std::locale a24)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_216A3E348(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (_OWORD *)(a1 + 8);
  long long v139 = *(_OWORD *)(a1 + 8);
  long long v140 = *(_OWORD *)(a1 + 24);
  std::runtime_error v5 = (long long *)(a1 + 48);
  sub_2169C56DC((uint64_t)v143, a1 + 8, (long long *)(a1 + 48));
  if ((v146 & 0x80u) == 0) {
    uint64_t v6 = &v144[1];
  }
  else {
    uint64_t v6 = (void **)v144[1];
  }
  if ((v146 & 0x80u) == 0) {
    uint64_t v7 = v146;
  }
  else {
    uint64_t v7 = v145;
  }
  uint64_t v8 = (void *)MEMORY[0x263F8C0F8];
  long long v9 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v6, v7);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v9, (uint64_t)__p, 1);
  uint64_t v10 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v10, (uint64_t)__p, 1);
  uint64_t v11 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v11, (uint64_t)__p, 1);
  uint64_t v12 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  char v13 = sub_216779180(v12, (uint64_t)__p, 1);
  uint64_t v14 = sub_216779180(v13, (uint64_t)"  start  ", 9);
  sub_216A502EC(__p);
  if ((SBYTE7(v142) & 0x80u) == 0) {
    uint64_t v15 = __p;
  }
  else {
    uint64_t v15 = (void **)__p[0];
  }
  if ((SBYTE7(v142) & 0x80u) == 0) {
    uint64_t v16 = BYTE7(v142);
  }
  else {
    uint64_t v16 = (uint64_t)__p[1];
  }
  uint64_t v17 = sub_216779180(v14, (uint64_t)v15, v16);
  sub_216779180(v17, (uint64_t)"; current ", 10);
  if (SBYTE7(v142) < 0) {
    operator delete(__p[0]);
  }
  if ((char)v146 < 0) {
    operator delete(v144[1]);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v8 + *(void *)(*v8 - 24)));
  uint64_t v18 = std::locale::use_facet(v143, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v18->__vftable[2].~facet_0)(v18, 10);
  std::locale::~locale(v143);
  std::ostream::put();
  std::ostream::flush();
  sub_2169C56DC((uint64_t)v143, (uint64_t)v4, v5);
  if ((v146 & 0x80u) == 0) {
    uint64_t v19 = &v144[1];
  }
  else {
    uint64_t v19 = (void **)v144[1];
  }
  if ((v146 & 0x80u) == 0) {
    uint64_t v20 = v146;
  }
  else {
    uint64_t v20 = v145;
  }
  uint64_t v21 = (void *)MEMORY[0x263F8C0F8];
  uint64_t v22 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v19, v20);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v22, (uint64_t)__p, 1);
  uint64_t v23 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v23, (uint64_t)__p, 1);
  uint64_t v24 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v24, (uint64_t)__p, 1);
  unint64_t v25 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  uint64_t v26 = sub_216779180(v25, (uint64_t)__p, 1);
  uint64_t v27 = sub_216779180(v26, (uint64_t)"  start  ", 9);
  sub_216A50398(__p);
  if ((SBYTE7(v142) & 0x80u) == 0) {
    uint64_t v28 = __p;
  }
  else {
    uint64_t v28 = (void **)__p[0];
  }
  if ((SBYTE7(v142) & 0x80u) == 0) {
    uint64_t v29 = BYTE7(v142);
  }
  else {
    uint64_t v29 = (uint64_t)__p[1];
  }
  uint64_t v30 = sub_216779180(v27, (uint64_t)v28, v29);
  sub_216779180(v30, (uint64_t)"; current ", 10);
  if (SBYTE7(v142) < 0) {
    operator delete(__p[0]);
  }
  if ((char)v146 < 0) {
    operator delete(v144[1]);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v21 + *(void *)(*v21 - 24)));
  uint64_t v31 = std::locale::use_facet(v143, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v31->__vftable[2].~facet_0)(v31, 10);
  std::locale::~locale(v143);
  std::ostream::put();
  std::ostream::flush();
  long long v32 = v4[1];
  *(_OWORD *)std::string __p = *v4;
  long long v142 = v32;
  if (sub_216A5044C((void *)a1)
    && (long long v33 = v4[1],
        *(_OWORD *)&v143[0].__locale_ = *v4,
        *(_OWORD *)uint64_t v144 = v33,
        char v34 = sub_216A40368((void *)a1),
        long long v35 = *(_OWORD *)v144,
        *uint64_t v4 = *(_OWORD *)&v143[0].__locale_,
        v4[1] = v35,
        (v34 & 1) == 0))
  {
    sub_2169C56DC((uint64_t)v143, (uint64_t)v4, v5);
    if ((v146 & 0x80u) == 0) {
      uint64_t v90 = &v144[1];
    }
    else {
      uint64_t v90 = (void **)v144[1];
    }
    if ((v146 & 0x80u) == 0) {
      uint64_t v91 = v146;
    }
    else {
      uint64_t v91 = v145;
    }
    uint64_t v92 = (void *)MEMORY[0x263F8C0F8];
    uint64_t v93 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v90, v91);
    LOBYTE(__p[0]) = 58;
    sub_216779180(v93, (uint64_t)__p, 1);
    uint64_t v94 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 58;
    sub_216779180(v94, (uint64_t)__p, 1);
    uint64_t v95 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 40;
    sub_216779180(v95, (uint64_t)__p, 1);
    uint64_t v96 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 41;
    uint64_t v97 = sub_216779180(v96, (uint64_t)__p, 1);
    long long v98 = sub_216779180(v97, (uint64_t)" success ", 9);
    sub_216A50398(__p);
    if ((SBYTE7(v142) & 0x80u) == 0) {
      uint64_t v99 = __p;
    }
    else {
      uint64_t v99 = (void **)__p[0];
    }
    if ((SBYTE7(v142) & 0x80u) == 0) {
      uint64_t v100 = BYTE7(v142);
    }
    else {
      uint64_t v100 = (uint64_t)__p[1];
    }
    std::locale v101 = sub_216779180(v98, (uint64_t)v99, v100);
    sub_216779180(v101, (uint64_t)"; next ", 7);
    if (SBYTE7(v142) < 0) {
      operator delete(__p[0]);
    }
    if ((char)v146 < 0) {
      operator delete(v144[1]);
    }
  }
  else
  {
    long long v36 = v142;
    *uint64_t v4 = *(_OWORD *)__p;
    v4[1] = v36;
    sub_2169C56DC((uint64_t)v143, (uint64_t)v4, v5);
    if ((v146 & 0x80u) == 0) {
      uint64_t v37 = &v144[1];
    }
    else {
      uint64_t v37 = (void **)v144[1];
    }
    if ((v146 & 0x80u) == 0) {
      uint64_t v38 = v146;
    }
    else {
      uint64_t v38 = v145;
    }
    uint64_t v39 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v37, v38);
    LOBYTE(__p[0]) = 58;
    sub_216779180(v39, (uint64_t)__p, 1);
    uint64_t v40 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 58;
    sub_216779180(v40, (uint64_t)__p, 1);
    uint64_t v41 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 40;
    sub_216779180(v41, (uint64_t)__p, 1);
    uint64_t v42 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 41;
    uint64_t v43 = sub_216779180(v42, (uint64_t)__p, 1);
    uint64_t v44 = sub_216779180(v43, (uint64_t)" failure ", 9);
    sub_216A50398(__p);
    if ((SBYTE7(v142) & 0x80u) == 0) {
      uint64_t v45 = __p;
    }
    else {
      uint64_t v45 = (void **)__p[0];
    }
    if ((SBYTE7(v142) & 0x80u) == 0) {
      uint64_t v46 = BYTE7(v142);
    }
    else {
      uint64_t v46 = (uint64_t)__p[1];
    }
    uint64_t v47 = sub_216779180(v44, (uint64_t)v45, v46);
    std::ios_base::getloc((const std::ios_base *)((char *)v47 + *(void *)(*v47 - 24)));
    unsigned __int8 v48 = std::locale::use_facet(&v147, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v48->__vftable[2].~facet_0)(v48, 10);
    std::locale::~locale(&v147);
    std::ostream::put();
    std::ostream::flush();
    if (SBYTE7(v142) < 0) {
      operator delete(__p[0]);
    }
    if ((char)v146 < 0) {
      operator delete(v144[1]);
    }
    sub_2169C56DC((uint64_t)v143, (uint64_t)v4, v5);
    if ((v146 & 0x80u) == 0) {
      std::locale v49 = &v144[1];
    }
    else {
      std::locale v49 = (void **)v144[1];
    }
    if ((v146 & 0x80u) == 0) {
      uint64_t v50 = v146;
    }
    else {
      uint64_t v50 = v145;
    }
    uint64_t v51 = (void *)MEMORY[0x263F8C0F8];
    unsigned __int8 v52 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v49, v50);
    LOBYTE(__p[0]) = 58;
    sub_216779180(v52, (uint64_t)__p, 1);
    std::locale v53 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 58;
    sub_216779180(v53, (uint64_t)__p, 1);
    long long v54 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 40;
    sub_216779180(v54, (uint64_t)__p, 1);
    long long v55 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 41;
    uint64_t v56 = sub_216779180(v55, (uint64_t)__p, 1);
    uint64_t v57 = sub_216779180(v56, (uint64_t)"  start  ", 9);
    sub_216A504AC(__p);
    if ((SBYTE7(v142) & 0x80u) == 0) {
      uint64_t v58 = __p;
    }
    else {
      uint64_t v58 = (void **)__p[0];
    }
    if ((SBYTE7(v142) & 0x80u) == 0) {
      uint64_t v59 = BYTE7(v142);
    }
    else {
      uint64_t v59 = (uint64_t)__p[1];
    }
    uint64_t v60 = sub_216779180(v57, (uint64_t)v58, v59);
    sub_216779180(v60, (uint64_t)"; current ", 10);
    if (SBYTE7(v142) < 0) {
      operator delete(__p[0]);
    }
    if ((char)v146 < 0) {
      operator delete(v144[1]);
    }
    sub_216A3AB00(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v51 + *(void *)(*v51 - 24)));
    uint64_t v61 = std::locale::use_facet(v143, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v61->__vftable[2].~facet_0)(v61, 10);
    std::locale::~locale(v143);
    std::ostream::put();
    std::ostream::flush();
    if (!sub_216A50560((void *)a1)
      || (long long v62 = v4[1],
          *(_OWORD *)&v143[0].__locale_ = *v4,
          *(_OWORD *)uint64_t v144 = v62,
          char v63 = sub_216A40368((void *)a1),
          long long v64 = *(_OWORD *)v144,
          *uint64_t v4 = *(_OWORD *)&v143[0].__locale_,
          v4[1] = v64,
          (v63 & 1) != 0))
    {
      sub_2169C56DC((uint64_t)v143, (uint64_t)v4, v5);
      if ((v146 & 0x80u) == 0) {
        uint64_t v65 = &v144[1];
      }
      else {
        uint64_t v65 = (void **)v144[1];
      }
      if ((v146 & 0x80u) == 0) {
        uint64_t v66 = v146;
      }
      else {
        uint64_t v66 = v145;
      }
      uint64_t v67 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v65, v66);
      LOBYTE(__p[0]) = 58;
      sub_216779180(v67, (uint64_t)__p, 1);
      uint64_t v68 = (void *)std::ostream::operator<<();
      LOBYTE(__p[0]) = 58;
      sub_216779180(v68, (uint64_t)__p, 1);
      uint64_t v69 = (void *)std::ostream::operator<<();
      LOBYTE(__p[0]) = 40;
      sub_216779180(v69, (uint64_t)__p, 1);
      uint64_t v70 = (void *)std::ostream::operator<<();
      LOBYTE(__p[0]) = 41;
      uint64_t v71 = sub_216779180(v70, (uint64_t)__p, 1);
      uint64_t v72 = sub_216779180(v71, (uint64_t)" failure ", 9);
      sub_216A504AC(__p);
      if ((SBYTE7(v142) & 0x80u) == 0) {
        uint64_t v73 = __p;
      }
      else {
        uint64_t v73 = (void **)__p[0];
      }
      if ((SBYTE7(v142) & 0x80u) == 0) {
        uint64_t v74 = BYTE7(v142);
      }
      else {
        uint64_t v74 = (uint64_t)__p[1];
      }
      uint64_t v75 = sub_216779180(v72, (uint64_t)v73, v74);
      std::ios_base::getloc((const std::ios_base *)((char *)v75 + *(void *)(*v75 - 24)));
      uint64_t v76 = std::locale::use_facet(&v147, MEMORY[0x263F8C108]);
      ((void (*)(const std::locale::facet *, uint64_t))v76->__vftable[2].~facet_0)(v76, 10);
      std::locale::~locale(&v147);
      std::ostream::put();
      std::ostream::flush();
      if (SBYTE7(v142) < 0) {
        operator delete(__p[0]);
      }
      if ((char)v146 < 0) {
        operator delete(v144[1]);
      }
      sub_2169C56DC((uint64_t)v143, (uint64_t)v4, v5);
      if ((v146 & 0x80u) == 0) {
        uint64_t v77 = &v144[1];
      }
      else {
        uint64_t v77 = (void **)v144[1];
      }
      if ((v146 & 0x80u) == 0) {
        uint64_t v78 = v146;
      }
      else {
        uint64_t v78 = v145;
      }
      uint64_t v79 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v77, v78);
      LOBYTE(__p[0]) = 58;
      sub_216779180(v79, (uint64_t)__p, 1);
      uint64_t v80 = (void *)std::ostream::operator<<();
      LOBYTE(__p[0]) = 58;
      sub_216779180(v80, (uint64_t)__p, 1);
      uint64_t v81 = (void *)std::ostream::operator<<();
      LOBYTE(__p[0]) = 40;
      sub_216779180(v81, (uint64_t)__p, 1);
      uint64_t v82 = (void *)std::ostream::operator<<();
      LOBYTE(__p[0]) = 41;
      uint64_t v83 = sub_216779180(v82, (uint64_t)__p, 1);
      uint64_t v84 = sub_216779180(v83, (uint64_t)" failure ", 9);
      sub_216A502EC(__p);
      if ((SBYTE7(v142) & 0x80u) == 0) {
        uint64_t v85 = __p;
      }
      else {
        uint64_t v85 = (void **)__p[0];
      }
      if ((SBYTE7(v142) & 0x80u) == 0) {
        uint64_t v86 = BYTE7(v142);
      }
      else {
        uint64_t v86 = (uint64_t)__p[1];
      }
      uint64_t v87 = sub_216779180(v84, (uint64_t)v85, v86);
      std::ios_base::getloc((const std::ios_base *)((char *)v87 + *(void *)(*v87 - 24)));
      uint64_t v88 = std::locale::use_facet(&v147, MEMORY[0x263F8C108]);
      ((void (*)(const std::locale::facet *, uint64_t))v88->__vftable[2].~facet_0)(v88, 10);
      std::locale::~locale(&v147);
      std::ostream::put();
      std::ostream::flush();
      if (SBYTE7(v142) < 0) {
        operator delete(__p[0]);
      }
      if ((char)v146 < 0) {
        operator delete(v144[1]);
      }
      uint64_t result = 0;
      *uint64_t v4 = v139;
      v4[1] = v140;
      return result;
    }
    sub_2169C56DC((uint64_t)v143, (uint64_t)v4, v5);
    if ((v146 & 0x80u) == 0) {
      uint64_t v102 = &v144[1];
    }
    else {
      uint64_t v102 = (void **)v144[1];
    }
    if ((v146 & 0x80u) == 0) {
      uint64_t v103 = v146;
    }
    else {
      uint64_t v103 = v145;
    }
    uint64_t v92 = (void *)MEMORY[0x263F8C0F8];
    std::locale v104 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v102, v103);
    LOBYTE(__p[0]) = 58;
    sub_216779180(v104, (uint64_t)__p, 1);
    std::locale v105 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 58;
    sub_216779180(v105, (uint64_t)__p, 1);
    std::locale v106 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 40;
    sub_216779180(v106, (uint64_t)__p, 1);
    uint64_t v107 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 41;
    unsigned __int8 v108 = sub_216779180(v107, (uint64_t)__p, 1);
    uint64_t v109 = sub_216779180(v108, (uint64_t)" success ", 9);
    sub_216A504AC(__p);
    if ((SBYTE7(v142) & 0x80u) == 0) {
      unsigned __int8 v110 = __p;
    }
    else {
      unsigned __int8 v110 = (void **)__p[0];
    }
    if ((SBYTE7(v142) & 0x80u) == 0) {
      uint64_t v111 = BYTE7(v142);
    }
    else {
      uint64_t v111 = (uint64_t)__p[1];
    }
    v112 = sub_216779180(v109, (uint64_t)v110, v111);
    sub_216779180(v112, (uint64_t)"; next ", 7);
    if (SBYTE7(v142) < 0) {
      operator delete(__p[0]);
    }
    if ((char)v146 < 0) {
      operator delete(v144[1]);
    }
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v92 + *(void *)(*v92 - 24)));
  v113 = std::locale::use_facet(v143, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v113->__vftable[2].~facet_0)(v113, 10);
  std::locale::~locale(v143);
  std::ostream::put();
  std::ostream::flush();
  sub_2169C56DC((uint64_t)v143, (uint64_t)v4, v5);
  if ((v146 & 0x80u) == 0) {
    v114 = &v144[1];
  }
  else {
    v114 = (void **)v144[1];
  }
  if ((v146 & 0x80u) == 0) {
    uint64_t v115 = v146;
  }
  else {
    uint64_t v115 = v145;
  }
  v116 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v114, v115);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v116, (uint64_t)__p, 1);
  uint64_t v117 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v117, (uint64_t)__p, 1);
  uint64_t v118 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v118, (uint64_t)__p, 1);
  v119 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  uint64_t v120 = sub_216779180(v119, (uint64_t)__p, 1);
  v121 = sub_216779180(v120, (uint64_t)"  apply  ", 9);
  sub_216A502EC(__p);
  if ((SBYTE7(v142) & 0x80u) == 0) {
    v122 = __p;
  }
  else {
    v122 = (void **)__p[0];
  }
  if ((SBYTE7(v142) & 0x80u) == 0) {
    uint64_t v123 = BYTE7(v142);
  }
  else {
    uint64_t v123 = (uint64_t)__p[1];
  }
  v124 = sub_216779180(v121, (uint64_t)v122, v123);
  std::ios_base::getloc((const std::ios_base *)((char *)v124 + *(void *)(*v124 - 24)));
  v125 = std::locale::use_facet(&v147, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v125->__vftable[2].~facet_0)(v125, 10);
  std::locale::~locale(&v147);
  std::ostream::put();
  std::ostream::flush();
  if (SBYTE7(v142) < 0) {
    operator delete(__p[0]);
  }
  if ((char)v146 < 0) {
    operator delete(v144[1]);
  }
  sub_216A505C0(a2);
  sub_2169C56DC((uint64_t)v143, (uint64_t)v4, v5);
  if ((v146 & 0x80u) == 0) {
    v126 = &v144[1];
  }
  else {
    v126 = (void **)v144[1];
  }
  if ((v146 & 0x80u) == 0) {
    uint64_t v127 = v146;
  }
  else {
    uint64_t v127 = v145;
  }
  uint64_t v128 = (void *)MEMORY[0x263F8C0F8];
  v129 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v126, v127);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v129, (uint64_t)__p, 1);
  v130 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v130, (uint64_t)__p, 1);
  v131 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v131, (uint64_t)__p, 1);
  uint64_t v132 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  v133 = sub_216779180(v132, (uint64_t)__p, 1);
  v134 = sub_216779180(v133, (uint64_t)" success ", 9);
  sub_216A502EC(__p);
  if ((SBYTE7(v142) & 0x80u) == 0) {
    v135 = __p;
  }
  else {
    v135 = (void **)__p[0];
  }
  if ((SBYTE7(v142) & 0x80u) == 0) {
    uint64_t v136 = BYTE7(v142);
  }
  else {
    uint64_t v136 = (uint64_t)__p[1];
  }
  v137 = sub_216779180(v134, (uint64_t)v135, v136);
  sub_216779180(v137, (uint64_t)"; next ", 7);
  if (SBYTE7(v142) < 0) {
    operator delete(__p[0]);
  }
  if ((char)v146 < 0) {
    operator delete(v144[1]);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v128 + *(void *)(*v128 - 24)));
  v138 = std::locale::use_facet(v143, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v138->__vftable[2].~facet_0)(v138, 10);
  std::locale::~locale(v143);
  std::ostream::put();
  std::ostream::flush();
  return 1;
}

void sub_216A3F3B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, long long a9, long long a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, std::locale a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0) {
    operator delete(__p);
  }
  _OWORD *v26 = a9;
  v26[1] = a10;
  _Unwind_Resume(exception_object);
}

void sub_216A3F4AC(void *a1@<X8>)
{
  uint64_t v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_18VariableE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_18VariableE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A3F544(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_216A3F558(void *a1)
{
  sub_216A3F5A4((uint64_t)a1);
  uint64_t v2 = sub_216A3FC5C(a1);
  if (v2) {
    sub_216A3F7B4((uint64_t)a1);
  }
  else {
    sub_216A3F9C4((uint64_t)a1);
  }
  return v2;
}

uint64_t sub_216A3F5A4(uint64_t a1)
{
  sub_2169C56DC((uint64_t)&v18, a1 + 8, (long long *)(a1 + 48));
  if ((v20 & 0x80u) == 0) {
    uint64_t v2 = v19;
  }
  else {
    uint64_t v2 = (void **)v19[0];
  }
  if ((v20 & 0x80u) == 0) {
    uint64_t v3 = v20;
  }
  else {
    uint64_t v3 = (uint64_t)v19[1];
  }
  uint64_t v4 = (void *)MEMORY[0x263F8C0F8];
  std::runtime_error v5 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v2, v3);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v5, (uint64_t)__p, 1);
  uint64_t v6 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v6, (uint64_t)__p, 1);
  uint64_t v7 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v7, (uint64_t)__p, 1);
  uint64_t v8 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  long long v9 = sub_216779180(v8, (uint64_t)__p, 1);
  uint64_t v10 = sub_216779180(v9, (uint64_t)"  start  ", 9);
  sub_216A3FBB0(__p);
  if ((v17 & 0x80u) == 0) {
    uint64_t v11 = __p;
  }
  else {
    uint64_t v11 = (void **)__p[0];
  }
  if ((v17 & 0x80u) == 0) {
    uint64_t v12 = v17;
  }
  else {
    uint64_t v12 = (uint64_t)__p[1];
  }
  char v13 = sub_216779180(v10, (uint64_t)v11, v12);
  sub_216779180(v13, (uint64_t)"; current ", 10);
  if ((char)v17 < 0) {
    operator delete(__p[0]);
  }
  if ((char)v20 < 0) {
    operator delete(v19[0]);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v4 + *(void *)(*v4 - 24)));
  uint64_t v14 = std::locale::use_facet(&v18, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v14->__vftable[2].~facet_0)(v14, 10);
  std::locale::~locale(&v18);
  std::ostream::put();
  return std::ostream::flush();
}

void sub_216A3F76C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, std::locale a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_216A3F7B4(uint64_t a1)
{
  sub_2169C56DC((uint64_t)&v18, a1 + 8, (long long *)(a1 + 48));
  if ((v20 & 0x80u) == 0) {
    uint64_t v2 = v19;
  }
  else {
    uint64_t v2 = (void **)v19[0];
  }
  if ((v20 & 0x80u) == 0) {
    uint64_t v3 = v20;
  }
  else {
    uint64_t v3 = (uint64_t)v19[1];
  }
  uint64_t v4 = (void *)MEMORY[0x263F8C0F8];
  std::runtime_error v5 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v2, v3);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v5, (uint64_t)__p, 1);
  uint64_t v6 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v6, (uint64_t)__p, 1);
  uint64_t v7 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v7, (uint64_t)__p, 1);
  uint64_t v8 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  long long v9 = sub_216779180(v8, (uint64_t)__p, 1);
  uint64_t v10 = sub_216779180(v9, (uint64_t)" success ", 9);
  sub_216A3FBB0(__p);
  if ((v17 & 0x80u) == 0) {
    uint64_t v11 = __p;
  }
  else {
    uint64_t v11 = (void **)__p[0];
  }
  if ((v17 & 0x80u) == 0) {
    uint64_t v12 = v17;
  }
  else {
    uint64_t v12 = (uint64_t)__p[1];
  }
  char v13 = sub_216779180(v10, (uint64_t)v11, v12);
  sub_216779180(v13, (uint64_t)"; next ", 7);
  if ((char)v17 < 0) {
    operator delete(__p[0]);
  }
  if ((char)v20 < 0) {
    operator delete(v19[0]);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v4 + *(void *)(*v4 - 24)));
  uint64_t v14 = std::locale::use_facet(&v18, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v14->__vftable[2].~facet_0)(v14, 10);
  std::locale::~locale(&v18);
  std::ostream::put();
  return std::ostream::flush();
}

void sub_216A3F97C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, std::locale a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A3F9C4(uint64_t a1)
{
  sub_2169C56DC((uint64_t)&v15, a1 + 8, (long long *)(a1 + 48));
  if ((v17 & 0x80u) == 0) {
    uint64_t v1 = v16;
  }
  else {
    uint64_t v1 = (void **)v16[0];
  }
  if ((v17 & 0x80u) == 0) {
    uint64_t v2 = v17;
  }
  else {
    uint64_t v2 = (uint64_t)v16[1];
  }
  uint64_t v3 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v1, v2);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v3, (uint64_t)__p, 1);
  uint64_t v4 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v4, (uint64_t)__p, 1);
  std::runtime_error v5 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v5, (uint64_t)__p, 1);
  uint64_t v6 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  uint64_t v7 = sub_216779180(v6, (uint64_t)__p, 1);
  uint64_t v8 = sub_216779180(v7, (uint64_t)" failure ", 9);
  sub_216A3FBB0(__p);
  if ((v14 & 0x80u) == 0) {
    long long v9 = __p;
  }
  else {
    long long v9 = (void **)__p[0];
  }
  if ((v14 & 0x80u) == 0) {
    uint64_t v10 = v14;
  }
  else {
    uint64_t v10 = (uint64_t)__p[1];
  }
  uint64_t v11 = sub_216779180(v8, (uint64_t)v9, v10);
  std::ios_base::getloc((const std::ios_base *)((char *)v11 + *(void *)(*v11 - 24)));
  uint64_t v12 = std::locale::use_facet(&v18, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v12->__vftable[2].~facet_0)(v12, 10);
  std::locale::~locale(&v18);
  std::ostream::put();
  std::ostream::flush();
  if ((char)v14 < 0) {
    operator delete(__p[0]);
  }
  if ((char)v17 < 0) {
    operator delete(v16[0]);
  }
}

void sub_216A3FB68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A3FBB0(void *a1@<X8>)
{
  uint64_t v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_113VariableStartE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_113VariableStartE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A3FC48(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_216A3FC5C(void *a1)
{
  uint64_t v1 = (_WORD *)a1[1];
  if (a1[5] - (void)v1 < 2uLL || *v1 != 31524) {
    return 0;
  }
  uint64_t v3 = a1[2] + 2;
  a1[1] = v1 + 1;
  a1[2] = v3;
  a1[4] += 2;
  return 1;
}

uint64_t sub_216A3FCB4(uint64_t a1)
{
  uint64_t v2 = a1 + 8;
  uint64_t v3 = (long long *)(a1 + 48);
  sub_2169C56DC((uint64_t)&v48, a1 + 8, (long long *)(a1 + 48));
  if ((v51 & 0x80u) == 0) {
    uint64_t v4 = &v49;
  }
  else {
    uint64_t v4 = v49;
  }
  if ((v51 & 0x80u) == 0) {
    uint64_t v5 = v51;
  }
  else {
    uint64_t v5 = v50;
  }
  uint64_t v6 = (void *)MEMORY[0x263F8C0F8];
  uint64_t v7 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v4, v5);
  LOBYTE(__p) = 58;
  sub_216779180(v7, (uint64_t)&__p, 1);
  uint64_t v8 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 58;
  sub_216779180(v8, (uint64_t)&__p, 1);
  long long v9 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 40;
  sub_216779180(v9, (uint64_t)&__p, 1);
  uint64_t v10 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 41;
  uint64_t v11 = sub_216779180(v10, (uint64_t)&__p, 1);
  uint64_t v12 = sub_216779180(v11, (uint64_t)"  start  ", 9);
  sub_216A407B8(&__p);
  if ((v47 & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = __p;
  }
  if ((v47 & 0x80u) == 0) {
    uint64_t v14 = v47;
  }
  else {
    uint64_t v14 = v46;
  }
  uint64_t v15 = sub_216779180(v12, (uint64_t)p_p, v14);
  sub_216779180(v15, (uint64_t)"; current ", 10);
  if ((char)v47 < 0) {
    operator delete(__p);
  }
  if ((char)v51 < 0) {
    operator delete(v49);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v6 + *(void *)(*v6 - 24)));
  uint64_t v16 = std::locale::use_facet(&v48, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v16->__vftable[2].~facet_0)(v16, 10);
  std::locale::~locale(&v48);
  std::ostream::put();
  std::ostream::flush();
  unsigned __int8 v17 = *(unsigned char **)(a1 + 8);
  if (*(unsigned char **)(a1 + 40) == v17 || *v17 != 125)
  {
    sub_2169C56DC((uint64_t)&v48, v2, v3);
    if ((v51 & 0x80u) == 0) {
      long long v33 = &v49;
    }
    else {
      long long v33 = v49;
    }
    if ((v51 & 0x80u) == 0) {
      uint64_t v34 = v51;
    }
    else {
      uint64_t v34 = v50;
    }
    long long v35 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v33, v34);
    LOBYTE(__p) = 58;
    sub_216779180(v35, (uint64_t)&__p, 1);
    long long v36 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 58;
    sub_216779180(v36, (uint64_t)&__p, 1);
    uint64_t v37 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 40;
    sub_216779180(v37, (uint64_t)&__p, 1);
    uint64_t v38 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 41;
    uint64_t v39 = sub_216779180(v38, (uint64_t)&__p, 1);
    uint64_t v40 = sub_216779180(v39, (uint64_t)" failure ", 9);
    sub_216A407B8(&__p);
    if ((v47 & 0x80u) == 0) {
      uint64_t v41 = &__p;
    }
    else {
      uint64_t v41 = __p;
    }
    if ((v47 & 0x80u) == 0) {
      uint64_t v42 = v47;
    }
    else {
      uint64_t v42 = v46;
    }
    uint64_t v43 = sub_216779180(v40, (uint64_t)v41, v42);
    std::ios_base::getloc((const std::ios_base *)((char *)v43 + *(void *)(*v43 - 24)));
    uint64_t v44 = std::locale::use_facet(&v52, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v44->__vftable[2].~facet_0)(v44, 10);
    std::locale::~locale(&v52);
    std::ostream::put();
    std::ostream::flush();
    if ((char)v47 < 0) {
      operator delete(__p);
    }
    if ((char)v51 < 0) {
      operator delete(v49);
    }
    sub_216A40864(a1);
  }
  uint64_t v18 = *(void *)(a1 + 16) + 1;
  *(void *)(a1 + 8) = v17 + 1;
  *(void *)(a1 + 16) = v18;
  ++*(void *)(a1 + 32);
  sub_2169C56DC((uint64_t)&v48, v2, v3);
  if ((v51 & 0x80u) == 0) {
    uint64_t v19 = &v49;
  }
  else {
    uint64_t v19 = v49;
  }
  if ((v51 & 0x80u) == 0) {
    uint64_t v20 = v51;
  }
  else {
    uint64_t v20 = v50;
  }
  uint64_t v21 = (void *)MEMORY[0x263F8C0F8];
  uint64_t v22 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v19, v20);
  LOBYTE(__p) = 58;
  sub_216779180(v22, (uint64_t)&__p, 1);
  uint64_t v23 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 58;
  sub_216779180(v23, (uint64_t)&__p, 1);
  uint64_t v24 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 40;
  sub_216779180(v24, (uint64_t)&__p, 1);
  unint64_t v25 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 41;
  uint64_t v26 = sub_216779180(v25, (uint64_t)&__p, 1);
  uint64_t v27 = sub_216779180(v26, (uint64_t)" success ", 9);
  sub_216A407B8(&__p);
  if ((v47 & 0x80u) == 0) {
    uint64_t v28 = &__p;
  }
  else {
    uint64_t v28 = __p;
  }
  if ((v47 & 0x80u) == 0) {
    uint64_t v29 = v47;
  }
  else {
    uint64_t v29 = v46;
  }
  uint64_t v30 = sub_216779180(v27, (uint64_t)v28, v29);
  sub_216779180(v30, (uint64_t)"; next ", 7);
  if ((char)v47 < 0) {
    operator delete(__p);
  }
  if ((char)v51 < 0) {
    operator delete(v49);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v21 + *(void *)(*v21 - 24)));
  uint64_t v31 = std::locale::use_facet(&v48, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v31->__vftable[2].~facet_0)(v31, 10);
  std::locale::~locale(&v48);
  std::ostream::put();
  return std::ostream::flush();
}

void sub_216A401EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, std::locale a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  std::locale::~locale((std::locale *)(v23 - 56));
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  _Unwind_Resume(a1);
}

void sub_216A40260(void *a1@<X8>)
{
  uint64_t v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_112VariableNameINS0_8VariableEEE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_112VariableNameINS0_8VariableEEE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A402F8(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_216A4030C(void *a1)
{
  uint64_t v1 = (unsigned __int8 *)a1[1];
  if (v1 == (unsigned __int8 *)a1[5]) {
    return 0;
  }
  int v2 = *v1;
  if ((v2 - 97) >= 0x1A && v2 != 95 && (v2 - 65) > 0x19) {
    return 0;
  }
  uint64_t v4 = a1[2] + 1;
  a1[1] = v1 + 1;
  a1[2] = v4;
  ++a1[4];
  return 1;
}

uint64_t sub_216A40368(void *a1)
{
  uint64_t v1 = (unsigned __int8 *)a1[1];
  if (v1 == (unsigned __int8 *)a1[5]) {
    return 0;
  }
  int v2 = *v1;
  if ((v2 & 0xFFFFFFDF) - 65 >= 0x1A && v2 != 95 && (v2 - 48) > 9) {
    return 0;
  }
  uint64_t v4 = a1[2] + 1;
  a1[1] = v1 + 1;
  a1[2] = v4;
  ++a1[4];
  return 1;
}

__n128 sub_216A403C8(char **a1, uint64_t a2, uint64_t a3)
{
  sub_21682E90C(&v10, *a1, *(char **)(a2 + 8), *(void *)(a2 + 8) - (void)*a1);
  uint64_t v4 = *(void *)(a3 + 8);
  if (*(void *)a3 == v4
    || (uint64_t v5 = *(const void **)(v4 - 8)) == 0
    || (uint64_t v6 = (char *)__dynamic_cast(v5, (const struct __class_type_info *)&unk_26C757A48, (const struct __class_type_info *)&unk_26C757A58, 0)) == 0)
  {
    uint64_t v7 = operator new(0x20uLL);
    void *v7 = &unk_26C757A80;
    v7[1] = 0;
    v7[2] = 0;
    v7[3] = 0;
    uint64_t v12 = v7;
    sub_216A40520((char **)a3, (uint64_t *)&v12);
    if (v12) {
      (*(void (**)(void *))(*v12 + 8))(v12);
    }
    uint64_t v6 = *(char **)(*(void *)(a3 + 8) - 8);
  }
  uint64_t v8 = v6 + 8;
  if (v6[31] < 0) {
    operator delete(*(void **)v8);
  }
  __n128 result = v10;
  *((void *)v8 + 2) = v11;
  *(__n128 *)uint64_t v8 = result;
  return result;
}

void sub_216A404F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15)
{
  if (a15) {
    sub_2173245F4(a15);
  }
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A40520(char **a1, uint64_t *a2)
{
  uint64_t v5 = a1[1];
  unint64_t v4 = (unint64_t)a1[2];
  if ((unint64_t)v5 >= v4)
  {
    uint64_t v8 = (v5 - *a1) >> 3;
    if ((unint64_t)(v8 + 1) >> 61) {
      sub_21677CB10();
    }
    uint64_t v9 = v4 - (void)*a1;
    uint64_t v10 = v9 >> 2;
    if (v9 >> 2 <= (unint64_t)(v8 + 1)) {
      uint64_t v10 = v8 + 1;
    }
    if ((unint64_t)v9 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v11 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v10;
    }
    if (v11)
    {
      if (v11 >> 61) {
        sub_21677CA1C();
      }
      uint64_t v12 = (char *)operator new(8 * v11);
    }
    else
    {
      uint64_t v12 = 0;
    }
    char v13 = &v12[8 * v8];
    uint64_t v14 = &v12[8 * v11];
    uint64_t v15 = *a2;
    *a2 = 0;
    *(void *)char v13 = v15;
    uint64_t v7 = v13 + 8;
    uint64_t v16 = *a1;
    unsigned __int8 v17 = a1[1];
    if (v17 == *a1)
    {
      *a1 = v13;
      a1[1] = v7;
      a1[2] = v14;
    }
    else
    {
      do
      {
        uint64_t v18 = *((void *)v17 - 1);
        v17 -= 8;
        *(void *)unsigned __int8 v17 = 0;
        *((void *)v13 - 1) = v18;
        v13 -= 8;
      }
      while (v17 != v16);
      unsigned __int8 v17 = *a1;
      uint64_t v19 = a1[1];
      *a1 = v13;
      a1[1] = v7;
      a1[2] = v14;
      while (v19 != v17)
      {
        uint64_t v21 = *((void *)v19 - 1);
        v19 -= 8;
        uint64_t v20 = v21;
        *(void *)uint64_t v19 = 0;
        if (v21) {
          (*(void (**)(uint64_t))(*(void *)v20 + 8))(v20);
        }
      }
    }
    if (v17) {
      operator delete(v17);
    }
  }
  else
  {
    uint64_t v6 = *a2;
    *a2 = 0;
    *(void *)uint64_t v5 = v6;
    uint64_t v7 = v5 + 8;
  }
  a1[1] = v7;
}

uint64_t sub_216A4065C(uint64_t a1)
{
  *(void *)a1 = &unk_26C757A80;
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }
  return a1;
}

void sub_216A406AC(void **__p)
{
  *std::string __p = &unk_26C757A80;
  if (*((char *)__p + 31) < 0) {
    operator delete(__p[1]);
  }

  operator delete(__p);
}

void sub_216A4070C(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (__n128 *)(a1 + 8);
  unint64_t v4 = operator new(0x20uLL);
  pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::VariableNode::VariableNode((uint64_t)v4, v3);
  *a2 = v4;
}

void sub_216A40750(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_216A40764(uint64_t a1)
{
  sub_216779094(&v2, "Variables must be a C identifier");
  sub_216A3AD78(a1, &v2);
}

void sub_216A4079C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A407B8(void *a1@<X8>)
{
  std::string v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_111VariableEndE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_111VariableEndE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A40850(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

void sub_216A40864(uint64_t a1)
{
  sub_216779094(&v2, "Missing ending '}'");
  sub_216A3AD78(a1, &v2);
}

void sub_216A4089C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A408B8(void *a1@<X8>)
{
  std::string v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_112QuotedStringILc34EEE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_112QuotedStringILc34EEE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A40950(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

void sub_216A40964(void *a1@<X8>)
{
  std::string v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_117QuotedStringStartILc34EEE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_117QuotedStringStartILc34EEE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A409FC(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

void *sub_216A40A10(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  if (*(void *)a1 == v2
    || (uint64_t v3 = *(const void **)(v2 - 8)) == 0
    || (__n128 result = __dynamic_cast(v3, (const struct __class_type_info *)&unk_26C757A48, (const struct __class_type_info *)&unk_26C757A98, 0)) == 0)
  {
    uint64_t v5 = operator new(0x20uLL);
    *uint64_t v5 = &unk_26C757AC0;
    v5[1] = 0;
    v5[2] = 0;
    v5[3] = 0;
    uint64_t v6 = v5;
    sub_216A40520((char **)a1, (uint64_t *)&v6);
    if (v6) {
      (*(void (**)(void *))(*v6 + 8))(v6);
    }
    return *(void **)(*(void *)(a1 + 8) - 8);
  }
  return result;
}

void sub_216A40AFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10) {
    sub_21732462C(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_216A40B14(uint64_t a1)
{
  *(void *)a1 = &unk_26C757AC0;
  uint64_t v3 = (void **)(a1 + 8);
  sub_2168706D8(&v3);
  return a1;
}

void sub_216A40B6C(char *a1)
{
  *(void *)a1 = &unk_26C757AC0;
  uint64_t v2 = (void **)(a1 + 8);
  sub_2168706D8(&v2);
  operator delete(a1);
}

uint64_t sub_216A40BC8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = a1 + 8;
  unint64_t v4 = operator new(0x20uLL);
  uint64_t result = pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::StringNode::StringNode(v4, v3);
  *a2 = v4;
  return result;
}

void sub_216A40C0C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_216A40C20(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (_OWORD *)(a1 + 8);
  unint64_t v4 = (long long *)(a1 + 48);
  sub_2169C56DC((uint64_t)v195, a1 + 8, (long long *)(a1 + 48));
  if ((v198 & 0x80u) == 0) {
    uint64_t v5 = &v196[1];
  }
  else {
    uint64_t v5 = (void **)v196[1];
  }
  if ((v198 & 0x80u) == 0) {
    uint64_t v6 = v198;
  }
  else {
    uint64_t v6 = v197;
  }
  uint64_t v7 = (void *)MEMORY[0x263F8C0F8];
  uint64_t v8 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v5, v6);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v8, (uint64_t)__p, 1);
  uint64_t v9 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v9, (uint64_t)__p, 1);
  uint64_t v10 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v10, (uint64_t)__p, 1);
  unint64_t v11 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  uint64_t v12 = sub_216779180(v11, (uint64_t)__p, 1);
  char v13 = sub_216779180(v12, (uint64_t)"  start  ", 9);
  sub_216A42480(__p);
  if ((SBYTE7(v189) & 0x80u) == 0) {
    uint64_t v14 = __p;
  }
  else {
    uint64_t v14 = (void **)__p[0];
  }
  if ((SBYTE7(v189) & 0x80u) == 0) {
    uint64_t v15 = BYTE7(v189);
  }
  else {
    uint64_t v15 = (uint64_t)__p[1];
  }
  uint64_t v16 = sub_216779180(v13, (uint64_t)v14, v15);
  sub_216779180(v16, (uint64_t)"; current ", 10);
  if (SBYTE7(v189) < 0) {
    operator delete(__p[0]);
  }
  if ((char)v198 < 0) {
    operator delete(v196[1]);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v7 + *(void *)(*v7 - 24)));
  unsigned __int8 v17 = std::locale::use_facet(v195, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v17->__vftable[2].~facet_0)(v17, 10);
  std::locale::~locale(v195);
  std::ostream::put();
  uint64_t v18 = (void *)MEMORY[0x263F8C0F8];
  std::ostream::flush();
  uint64_t v19 = (std::locale::id *)MEMORY[0x263F8C108];
  while (1)
  {
    sub_2169C56DC((uint64_t)v195, (uint64_t)v3, v4);
    if ((v198 & 0x80u) == 0) {
      uint64_t v20 = &v196[1];
    }
    else {
      uint64_t v20 = (void **)v196[1];
    }
    if ((v198 & 0x80u) == 0) {
      uint64_t v21 = v198;
    }
    else {
      uint64_t v21 = v197;
    }
    uint64_t v22 = sub_216779180(v18, (uint64_t)v20, v21);
    LOBYTE(__p[0]) = 58;
    sub_216779180(v22, (uint64_t)__p, 1);
    uint64_t v23 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 58;
    sub_216779180(v23, (uint64_t)__p, 1);
    uint64_t v24 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 40;
    sub_216779180(v24, (uint64_t)__p, 1);
    unint64_t v25 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 41;
    uint64_t v26 = sub_216779180(v25, (uint64_t)__p, 1);
    uint64_t v27 = sub_216779180(v26, (uint64_t)"  start  ", 9);
    sub_216A4252C(__p);
    if ((SBYTE7(v189) & 0x80u) == 0) {
      uint64_t v28 = __p;
    }
    else {
      uint64_t v28 = (void **)__p[0];
    }
    if ((SBYTE7(v189) & 0x80u) == 0) {
      uint64_t v29 = BYTE7(v189);
    }
    else {
      uint64_t v29 = (uint64_t)__p[1];
    }
    uint64_t v30 = sub_216779180(v27, (uint64_t)v28, v29);
    sub_216779180(v30, (uint64_t)"; current ", 10);
    if (SBYTE7(v189) < 0) {
      operator delete(__p[0]);
    }
    if ((char)v198 < 0) {
      operator delete(v196[1]);
    }
    sub_216A3AB00(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v18 + *(void *)(*v18 - 24)));
    uint64_t v31 = std::locale::use_facet(v195, v19);
    ((void (*)(const std::locale::facet *, uint64_t))v31->__vftable[2].~facet_0)(v31, 10);
    std::locale::~locale(v195);
    std::ostream::put();
    std::ostream::flush();
    if ((sub_216A425D8(a1, a2) & 1) == 0) {
      break;
    }
LABEL_128:
    sub_2169C56DC((uint64_t)v195, (uint64_t)v3, v4);
    if ((v198 & 0x80u) == 0) {
      uint64_t v96 = &v196[1];
    }
    else {
      uint64_t v96 = (void **)v196[1];
    }
    if ((v198 & 0x80u) == 0) {
      uint64_t v97 = v198;
    }
    else {
      uint64_t v97 = v197;
    }
    long long v98 = sub_216779180(v18, (uint64_t)v96, v97);
    LOBYTE(__p[0]) = 58;
    sub_216779180(v98, (uint64_t)__p, 1);
    uint64_t v99 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 58;
    sub_216779180(v99, (uint64_t)__p, 1);
    uint64_t v100 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 40;
    sub_216779180(v100, (uint64_t)__p, 1);
    std::locale v101 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 41;
    uint64_t v102 = sub_216779180(v101, (uint64_t)__p, 1);
    uint64_t v103 = sub_216779180(v102, (uint64_t)" success ", 9);
    sub_216A4252C(__p);
    if ((SBYTE7(v189) & 0x80u) == 0) {
      std::locale v104 = __p;
    }
    else {
      std::locale v104 = (void **)__p[0];
    }
    if ((SBYTE7(v189) & 0x80u) == 0) {
      uint64_t v105 = BYTE7(v189);
    }
    else {
      uint64_t v105 = (uint64_t)__p[1];
    }
    std::locale v106 = sub_216779180(v103, (uint64_t)v104, v105);
    sub_216779180(v106, (uint64_t)"; next ", 7);
    if (SBYTE7(v189) < 0) {
      operator delete(__p[0]);
    }
    if ((char)v198 < 0) {
      operator delete(v196[1]);
    }
    sub_216A3AB00(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v18 + *(void *)(*v18 - 24)));
    uint64_t v107 = std::locale::use_facet(v195, v19);
    ((void (*)(const std::locale::facet *, uint64_t))v107->__vftable[2].~facet_0)(v107, 10);
    std::locale::~locale(v195);
    std::ostream::put();
    std::ostream::flush();
  }
  long long v32 = v3[1];
  *(_OWORD *)std::string __p = *v3;
  long long v189 = v32;
  v190 = v3;
  sub_2169C56DC((uint64_t)v195, (uint64_t)v3, v4);
  if ((v198 & 0x80u) == 0) {
    long long v33 = &v196[1];
  }
  else {
    long long v33 = (void **)v196[1];
  }
  if ((v198 & 0x80u) == 0) {
    uint64_t v34 = v198;
  }
  else {
    uint64_t v34 = v197;
  }
  long long v35 = sub_216779180(v18, (uint64_t)v33, v34);
  LOBYTE(v191.__locale_) = 58;
  sub_216779180(v35, (uint64_t)&v191, 1);
  long long v36 = (void *)std::ostream::operator<<();
  LOBYTE(v191.__locale_) = 58;
  sub_216779180(v36, (uint64_t)&v191, 1);
  uint64_t v37 = (void *)std::ostream::operator<<();
  LOBYTE(v191.__locale_) = 40;
  sub_216779180(v37, (uint64_t)&v191, 1);
  uint64_t v38 = (void *)std::ostream::operator<<();
  LOBYTE(v191.__locale_) = 41;
  uint64_t v39 = sub_216779180(v38, (uint64_t)&v191, 1);
  uint64_t v40 = sub_216779180(v39, (uint64_t)"  start  ", 9);
  sub_216A43728(&v191);
  if ((v193 & 0x80u) == 0) {
    locale = &v191;
  }
  else {
    locale = v191.__locale_;
  }
  if ((v193 & 0x80u) == 0) {
    uint64_t v42 = v193;
  }
  else {
    uint64_t v42 = v192;
  }
  uint64_t v43 = sub_216779180(v40, (uint64_t)locale, v42);
  sub_216779180(v43, (uint64_t)"; current ", 10);
  if ((char)v193 < 0) {
    operator delete(v191.__locale_);
  }
  if ((char)v198 < 0) {
    operator delete(v196[1]);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v18 + *(void *)(*v18 - 24)));
  uint64_t v44 = std::locale::use_facet(v195, v19);
  ((void (*)(const std::locale::facet *, uint64_t))v44->__vftable[2].~facet_0)(v44, 10);
  std::locale::~locale(v195);
  std::ostream::put();
  std::ostream::flush();
  sub_216A437D4(a1);
  if ((sub_216A43CA0(a1) & 1) == 0)
  {
    sub_216A44FE4(a1);
    if (!sub_216A454B0(a1) || !sub_216A464BC(a1))
    {
      int v47 = 0;
      goto LABEL_62;
    }
    sub_216A451F4(a1);
  }
  while (1)
  {
    do
    {
      sub_216A439E4(a1);
      sub_216A437D4(a1);
    }
    while ((sub_216A43CA0(a1) & 1) != 0);
    sub_216A44FE4(a1);
    long long v45 = v3[1];
    *(_OWORD *)&v195[0].__locale_ = *v3;
    *(_OWORD *)v196 = v45;
    if (!sub_216A454B0(a1) || !sub_216A464BC(a1)) {
      break;
    }
    sub_216A451F4(a1);
  }
  long long v46 = *(_OWORD *)v196;
  *uint64_t v3 = *(_OWORD *)&v195[0].__locale_;
  v3[1] = v46;
  int v47 = 1;
LABEL_62:
  sub_2169C56DC((uint64_t)v195, (uint64_t)v3, v4);
  if ((v198 & 0x80u) == 0) {
    std::locale v48 = &v196[1];
  }
  else {
    std::locale v48 = (void **)v196[1];
  }
  if ((v198 & 0x80u) == 0) {
    uint64_t v49 = v198;
  }
  else {
    uint64_t v49 = v197;
  }
  uint64_t v50 = sub_216779180(v18, (uint64_t)v48, v49);
  LOBYTE(v191.__locale_) = 58;
  sub_216779180(v50, (uint64_t)&v191, 1);
  unsigned __int8 v51 = (void *)std::ostream::operator<<();
  LOBYTE(v191.__locale_) = 58;
  sub_216779180(v51, (uint64_t)&v191, 1);
  std::locale v52 = (void *)std::ostream::operator<<();
  LOBYTE(v191.__locale_) = 40;
  sub_216779180(v52, (uint64_t)&v191, 1);
  std::locale v53 = (void *)std::ostream::operator<<();
  LOBYTE(v191.__locale_) = 41;
  long long v54 = sub_216779180(v53, (uint64_t)&v191, 1);
  long long v55 = sub_216779180(v54, (uint64_t)" failure ", 9);
  sub_216A45404(&v191);
  if ((v193 & 0x80u) == 0) {
    uint64_t v56 = &v191;
  }
  else {
    uint64_t v56 = v191.__locale_;
  }
  if ((v193 & 0x80u) == 0) {
    uint64_t v57 = v193;
  }
  else {
    uint64_t v57 = v192;
  }
  uint64_t v58 = sub_216779180(v55, (uint64_t)v56, v57);
  std::ios_base::getloc((const std::ios_base *)((char *)v58 + *(void *)(*v58 - 24)));
  uint64_t v59 = std::locale::use_facet(&v194, v19);
  ((void (*)(const std::locale::facet *, uint64_t))v59->__vftable[2].~facet_0)(v59, 10);
  std::locale::~locale(&v194);
  std::ostream::put();
  std::ostream::flush();
  if ((char)v193 < 0) {
    operator delete(v191.__locale_);
  }
  if ((char)v198 < 0) {
    operator delete(v196[1]);
  }
  sub_2169C56DC((uint64_t)v195, (uint64_t)v3, v4);
  if ((v198 & 0x80u) == 0) {
    uint64_t v60 = &v196[1];
  }
  else {
    uint64_t v60 = (void **)v196[1];
  }
  if ((v198 & 0x80u) == 0) {
    uint64_t v61 = v198;
  }
  else {
    uint64_t v61 = v197;
  }
  long long v62 = sub_216779180(v18, (uint64_t)v60, v61);
  LOBYTE(v191.__locale_) = 58;
  sub_216779180(v62, (uint64_t)&v191, 1);
  char v63 = (void *)std::ostream::operator<<();
  LOBYTE(v191.__locale_) = 58;
  sub_216779180(v63, (uint64_t)&v191, 1);
  long long v64 = (void *)std::ostream::operator<<();
  LOBYTE(v191.__locale_) = 40;
  sub_216779180(v64, (uint64_t)&v191, 1);
  uint64_t v65 = (void *)std::ostream::operator<<();
  LOBYTE(v191.__locale_) = 41;
  uint64_t v66 = sub_216779180(v65, (uint64_t)&v191, 1);
  uint64_t v67 = sub_216779180(v66, (uint64_t)" failure ", 9);
  sub_216A43BF4(&v191);
  if ((v193 & 0x80u) == 0) {
    uint64_t v68 = &v191;
  }
  else {
    uint64_t v68 = v191.__locale_;
  }
  if ((v193 & 0x80u) == 0) {
    uint64_t v69 = v193;
  }
  else {
    uint64_t v69 = v192;
  }
  uint64_t v70 = sub_216779180(v67, (uint64_t)v68, v69);
  std::ios_base::getloc((const std::ios_base *)((char *)v70 + *(void *)(*v70 - 24)));
  uint64_t v71 = std::locale::use_facet(&v194, v19);
  ((void (*)(const std::locale::facet *, uint64_t))v71->__vftable[2].~facet_0)(v71, 10);
  std::locale::~locale(&v194);
  std::ostream::put();
  std::ostream::flush();
  if ((char)v193 < 0) {
    operator delete(v191.__locale_);
  }
  if ((char)v198 < 0) {
    operator delete(v196[1]);
  }
  if (v47)
  {
    sub_2169C56DC((uint64_t)v195, (uint64_t)v3, v4);
    if ((v198 & 0x80u) == 0) {
      uint64_t v72 = &v196[1];
    }
    else {
      uint64_t v72 = (void **)v196[1];
    }
    if ((v198 & 0x80u) == 0) {
      uint64_t v73 = v198;
    }
    else {
      uint64_t v73 = v197;
    }
    uint64_t v74 = sub_216779180(v18, (uint64_t)v72, v73);
    LOBYTE(v191.__locale_) = 58;
    sub_216779180(v74, (uint64_t)&v191, 1);
    uint64_t v75 = (void *)std::ostream::operator<<();
    LOBYTE(v191.__locale_) = 58;
    sub_216779180(v75, (uint64_t)&v191, 1);
    uint64_t v76 = (void *)std::ostream::operator<<();
    LOBYTE(v191.__locale_) = 40;
    sub_216779180(v76, (uint64_t)&v191, 1);
    uint64_t v77 = (void *)std::ostream::operator<<();
    LOBYTE(v191.__locale_) = 41;
    uint64_t v78 = sub_216779180(v77, (uint64_t)&v191, 1);
    uint64_t v79 = sub_216779180(v78, (uint64_t)"  apply  ", 9);
    sub_216A43728(&v191);
    if ((v193 & 0x80u) == 0) {
      uint64_t v80 = &v191;
    }
    else {
      uint64_t v80 = v191.__locale_;
    }
    if ((v193 & 0x80u) == 0) {
      uint64_t v81 = v193;
    }
    else {
      uint64_t v81 = v192;
    }
    uint64_t v82 = sub_216779180(v79, (uint64_t)v80, v81);
    std::ios_base::getloc((const std::ios_base *)((char *)v82 + *(void *)(*v82 - 24)));
    uint64_t v83 = std::locale::use_facet(&v194, v19);
    ((void (*)(const std::locale::facet *, uint64_t))v83->__vftable[2].~facet_0)(v83, 10);
    std::locale::~locale(&v194);
    std::ostream::put();
    std::ostream::flush();
    if ((char)v193 < 0) {
      operator delete(v191.__locale_);
    }
    if ((char)v198 < 0) {
      operator delete(v196[1]);
    }
    sub_216A46D54((char **)__p, a1, a2);
    sub_2169C56DC((uint64_t)v195, (uint64_t)v3, v4);
    if ((v198 & 0x80u) == 0) {
      uint64_t v84 = &v196[1];
    }
    else {
      uint64_t v84 = (void **)v196[1];
    }
    if ((v198 & 0x80u) == 0) {
      uint64_t v85 = v198;
    }
    else {
      uint64_t v85 = v197;
    }
    uint64_t v86 = sub_216779180(v18, (uint64_t)v84, v85);
    LOBYTE(v191.__locale_) = 58;
    sub_216779180(v86, (uint64_t)&v191, 1);
    uint64_t v87 = (void *)std::ostream::operator<<();
    LOBYTE(v191.__locale_) = 58;
    sub_216779180(v87, (uint64_t)&v191, 1);
    uint64_t v88 = (void *)std::ostream::operator<<();
    LOBYTE(v191.__locale_) = 40;
    sub_216779180(v88, (uint64_t)&v191, 1);
    uint64_t v89 = (void *)std::ostream::operator<<();
    LOBYTE(v191.__locale_) = 41;
    uint64_t v90 = sub_216779180(v89, (uint64_t)&v191, 1);
    uint64_t v91 = sub_216779180(v90, (uint64_t)" success ", 9);
    sub_216A43728(&v191);
    if ((v193 & 0x80u) == 0) {
      uint64_t v92 = &v191;
    }
    else {
      uint64_t v92 = v191.__locale_;
    }
    if ((v193 & 0x80u) == 0) {
      uint64_t v93 = v193;
    }
    else {
      uint64_t v93 = v192;
    }
    uint64_t v94 = sub_216779180(v91, (uint64_t)v92, v93);
    sub_216779180(v94, (uint64_t)"; next ", 7);
    if ((char)v193 < 0) {
      operator delete(v191.__locale_);
    }
    if ((char)v198 < 0) {
      operator delete(v196[1]);
    }
    sub_216A3AB00(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v18 + *(void *)(*v18 - 24)));
    uint64_t v95 = std::locale::use_facet(v195, v19);
    ((void (*)(const std::locale::facet *, uint64_t))v95->__vftable[2].~facet_0)(v95, 10);
    std::locale::~locale(v195);
    std::ostream::put();
    std::ostream::flush();
    goto LABEL_128;
  }
  sub_2169C56DC((uint64_t)v195, (uint64_t)v3, v4);
  if ((v198 & 0x80u) == 0) {
    unsigned __int8 v108 = &v196[1];
  }
  else {
    unsigned __int8 v108 = (void **)v196[1];
  }
  if ((v198 & 0x80u) == 0) {
    uint64_t v109 = v198;
  }
  else {
    uint64_t v109 = v197;
  }
  unsigned __int8 v110 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v108, v109);
  LOBYTE(v191.__locale_) = 58;
  sub_216779180(v110, (uint64_t)&v191, 1);
  uint64_t v111 = (void *)std::ostream::operator<<();
  LOBYTE(v191.__locale_) = 58;
  sub_216779180(v111, (uint64_t)&v191, 1);
  v112 = (void *)std::ostream::operator<<();
  LOBYTE(v191.__locale_) = 40;
  sub_216779180(v112, (uint64_t)&v191, 1);
  v113 = (void *)std::ostream::operator<<();
  LOBYTE(v191.__locale_) = 41;
  v114 = sub_216779180(v113, (uint64_t)&v191, 1);
  uint64_t v115 = sub_216779180(v114, (uint64_t)" failure ", 9);
  sub_216A43728(&v191);
  if ((v193 & 0x80u) == 0) {
    v116 = &v191;
  }
  else {
    v116 = v191.__locale_;
  }
  if ((v193 & 0x80u) == 0) {
    uint64_t v117 = v193;
  }
  else {
    uint64_t v117 = v192;
  }
  uint64_t v118 = sub_216779180(v115, (uint64_t)v116, v117);
  std::ios_base::getloc((const std::ios_base *)((char *)v118 + *(void *)(*v118 - 24)));
  v119 = std::locale::use_facet(&v194, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v119->__vftable[2].~facet_0)(v119, 10);
  std::locale::~locale(&v194);
  std::ostream::put();
  std::ostream::flush();
  if ((char)v193 < 0) {
    operator delete(v191.__locale_);
  }
  if ((char)v198 < 0) {
    operator delete(v196[1]);
  }
  long long v120 = v189;
  *uint64_t v3 = *(_OWORD *)__p;
  v3[1] = v120;
  sub_2169C56DC((uint64_t)v195, (uint64_t)v3, v4);
  if ((v198 & 0x80u) == 0) {
    v121 = &v196[1];
  }
  else {
    v121 = (void **)v196[1];
  }
  if ((v198 & 0x80u) == 0) {
    uint64_t v122 = v198;
  }
  else {
    uint64_t v122 = v197;
  }
  uint64_t v123 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v121, v122);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v123, (uint64_t)__p, 1);
  v124 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v124, (uint64_t)__p, 1);
  v125 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v125, (uint64_t)__p, 1);
  v126 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  uint64_t v127 = sub_216779180(v126, (uint64_t)__p, 1);
  uint64_t v128 = sub_216779180(v127, (uint64_t)" failure ", 9);
  sub_216A4252C(__p);
  if ((SBYTE7(v189) & 0x80u) == 0) {
    v129 = __p;
  }
  else {
    v129 = (void **)__p[0];
  }
  if ((SBYTE7(v189) & 0x80u) == 0) {
    uint64_t v130 = BYTE7(v189);
  }
  else {
    uint64_t v130 = (uint64_t)__p[1];
  }
  v131 = sub_216779180(v128, (uint64_t)v129, v130);
  std::ios_base::getloc((const std::ios_base *)((char *)v131 + *(void *)(*v131 - 24)));
  uint64_t v132 = std::locale::use_facet(&v191, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v132->__vftable[2].~facet_0)(v132, 10);
  std::locale::~locale(&v191);
  std::ostream::put();
  std::ostream::flush();
  if (SBYTE7(v189) < 0) {
    operator delete(__p[0]);
  }
  if ((char)v198 < 0) {
    operator delete(v196[1]);
  }
  sub_2169C56DC((uint64_t)v195, (uint64_t)v3, v4);
  if ((v198 & 0x80u) == 0) {
    v133 = &v196[1];
  }
  else {
    v133 = (void **)v196[1];
  }
  if ((v198 & 0x80u) == 0) {
    uint64_t v134 = v198;
  }
  else {
    uint64_t v134 = v197;
  }
  v135 = (void *)MEMORY[0x263F8C0F8];
  uint64_t v136 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v133, v134);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v136, (uint64_t)__p, 1);
  v137 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v137, (uint64_t)__p, 1);
  v138 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v138, (uint64_t)__p, 1);
  long long v139 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  long long v140 = sub_216779180(v139, (uint64_t)__p, 1);
  v141 = sub_216779180(v140, (uint64_t)" success ", 9);
  sub_216A42480(__p);
  if ((SBYTE7(v189) & 0x80u) == 0) {
    long long v142 = __p;
  }
  else {
    long long v142 = (void **)__p[0];
  }
  if ((SBYTE7(v189) & 0x80u) == 0) {
    uint64_t v143 = BYTE7(v189);
  }
  else {
    uint64_t v143 = (uint64_t)__p[1];
  }
  uint64_t v144 = sub_216779180(v141, (uint64_t)v142, v143);
  sub_216779180(v144, (uint64_t)"; next ", 7);
  if (SBYTE7(v189) < 0) {
    operator delete(__p[0]);
  }
  if ((char)v198 < 0) {
    operator delete(v196[1]);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v135 + *(void *)(*v135 - 24)));
  uint64_t v145 = std::locale::use_facet(v195, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v145->__vftable[2].~facet_0)(v145, 10);
  std::locale::~locale(v195);
  std::ostream::put();
  std::ostream::flush();
  sub_2169C56DC((uint64_t)v195, (uint64_t)v3, v4);
  if ((v198 & 0x80u) == 0) {
    unsigned __int8 v146 = &v196[1];
  }
  else {
    unsigned __int8 v146 = (void **)v196[1];
  }
  if ((v198 & 0x80u) == 0) {
    uint64_t v147 = v198;
  }
  else {
    uint64_t v147 = v197;
  }
  v148 = (void *)MEMORY[0x263F8C0F8];
  v149 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v146, v147);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v149, (uint64_t)__p, 1);
  v150 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v150, (uint64_t)__p, 1);
  v151 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v151, (uint64_t)__p, 1);
  uint64_t v152 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  v153 = sub_216779180(v152, (uint64_t)__p, 1);
  v154 = sub_216779180(v153, (uint64_t)"  start  ", 9);
  sub_216A46EC4(__p);
  if ((SBYTE7(v189) & 0x80u) == 0) {
    v155 = __p;
  }
  else {
    v155 = (void **)__p[0];
  }
  if ((SBYTE7(v189) & 0x80u) == 0) {
    uint64_t v156 = BYTE7(v189);
  }
  else {
    uint64_t v156 = (uint64_t)__p[1];
  }
  v157 = sub_216779180(v154, (uint64_t)v155, v156);
  sub_216779180(v157, (uint64_t)"; current ", 10);
  if (SBYTE7(v189) < 0) {
    operator delete(__p[0]);
  }
  if ((char)v198 < 0) {
    operator delete(v196[1]);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v148 + *(void *)(*v148 - 24)));
  long long v158 = std::locale::use_facet(v195, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v158->__vftable[2].~facet_0)(v158, 10);
  std::locale::~locale(v195);
  std::ostream::put();
  std::ostream::flush();
  uint64_t v159 = *(unsigned char **)(a1 + 8);
  if (*(unsigned char **)(a1 + 40) == v159 || *v159 != 34)
  {
    sub_2169C56DC((uint64_t)v195, (uint64_t)v3, v4);
    if ((v198 & 0x80u) == 0) {
      v175 = &v196[1];
    }
    else {
      v175 = (void **)v196[1];
    }
    if ((v198 & 0x80u) == 0) {
      uint64_t v176 = v198;
    }
    else {
      uint64_t v176 = v197;
    }
    v177 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v175, v176);
    LOBYTE(__p[0]) = 58;
    sub_216779180(v177, (uint64_t)__p, 1);
    v178 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 58;
    sub_216779180(v178, (uint64_t)__p, 1);
    v179 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 40;
    sub_216779180(v179, (uint64_t)__p, 1);
    v180 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 41;
    v181 = sub_216779180(v180, (uint64_t)__p, 1);
    v182 = sub_216779180(v181, (uint64_t)" failure ", 9);
    sub_216A46EC4(__p);
    if ((SBYTE7(v189) & 0x80u) == 0) {
      v183 = __p;
    }
    else {
      v183 = (void **)__p[0];
    }
    if ((SBYTE7(v189) & 0x80u) == 0) {
      uint64_t v184 = BYTE7(v189);
    }
    else {
      uint64_t v184 = (uint64_t)__p[1];
    }
    v185 = sub_216779180(v182, (uint64_t)v183, v184);
    std::ios_base::getloc((const std::ios_base *)((char *)v185 + *(void *)(*v185 - 24)));
    v186 = std::locale::use_facet(&v191, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v186->__vftable[2].~facet_0)(v186, 10);
    std::locale::~locale(&v191);
    std::ostream::put();
    std::ostream::flush();
    if (SBYTE7(v189) < 0) {
      operator delete(__p[0]);
    }
    if ((char)v198 < 0) {
      operator delete(v196[1]);
    }
    sub_216A46F70(a1);
  }
  uint64_t v160 = *(void *)(a1 + 16) + 1;
  *(void *)(a1 + 8) = v159 + 1;
  *(void *)(a1 + 16) = v160;
  ++*(void *)(a1 + 32);
  sub_2169C56DC((uint64_t)v195, (uint64_t)v3, v4);
  if ((v198 & 0x80u) == 0) {
    v161 = &v196[1];
  }
  else {
    v161 = (void **)v196[1];
  }
  if ((v198 & 0x80u) == 0) {
    uint64_t v162 = v198;
  }
  else {
    uint64_t v162 = v197;
  }
  v163 = (void *)MEMORY[0x263F8C0F8];
  uint64_t v164 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v161, v162);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v164, (uint64_t)__p, 1);
  unsigned __int8 v165 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v165, (uint64_t)__p, 1);
  std::locale v166 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v166, (uint64_t)__p, 1);
  v167 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  v168 = sub_216779180(v167, (uint64_t)__p, 1);
  uint64_t v169 = sub_216779180(v168, (uint64_t)" success ", 9);
  sub_216A46EC4(__p);
  if ((SBYTE7(v189) & 0x80u) == 0) {
    long long v170 = __p;
  }
  else {
    long long v170 = (void **)__p[0];
  }
  if ((SBYTE7(v189) & 0x80u) == 0) {
    uint64_t v171 = BYTE7(v189);
  }
  else {
    uint64_t v171 = (uint64_t)__p[1];
  }
  uint64_t v172 = sub_216779180(v169, (uint64_t)v170, v171);
  sub_216779180(v172, (uint64_t)"; next ", 7);
  if (SBYTE7(v189) < 0) {
    operator delete(__p[0]);
  }
  if ((char)v198 < 0) {
    operator delete(v196[1]);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v163 + *(void *)(*v163 - 24)));
  v173 = std::locale::use_facet(v195, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v173->__vftable[2].~facet_0)(v173, 10);
  std::locale::~locale(v195);
  std::ostream::put();
  return std::ostream::flush();
}

void sub_216A422E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, long long a11, long long a12, long long __p, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,std::locale a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,std::locale a27,std::locale a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,int a33,__int16 a34,char a35,char a36)
{
  std::locale::~locale(&a21);
  if (a17 < 0) {
    operator delete((void *)__p);
  }
  if (a36 < 0) {
    operator delete(a31);
  }
  _OWORD *v36 = a11;
  v36[1] = a12;
  _Unwind_Resume(a1);
}

void sub_216A42480(void *a1@<X8>)
{
  uint64_t v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_116QuotedStringBodyILc34EEE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_116QuotedStringBodyILc34EEE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A42518(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

void sub_216A4252C(void *a1@<X8>)
{
  uint64_t v2 = __cxa_demangle((const char *)((unint64_t)"N3tao21PXR_INTERNAL_NS_pegtl3sorIJN32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_120QuotedStringVariableENS3_17QuotedStringCharsILc34EEEEEE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N3tao21PXR_INTERNAL_NS_pegtl3sorIJN32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_120QuotedStringVariableENS3_17QuotedStringCharsILc34EEEEEE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A425C4(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_216A425D8(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = (_OWORD *)(a1 + 8);
  uint64_t v5 = (long long *)(a1 + 48);
  sub_2169C56DC((uint64_t)&v107, a1 + 8, (long long *)(a1 + 48));
  if ((v110 & 0x80u) == 0) {
    uint64_t v6 = &v108;
  }
  else {
    uint64_t v6 = v108;
  }
  if ((v110 & 0x80u) == 0) {
    uint64_t v7 = v110;
  }
  else {
    uint64_t v7 = v109;
  }
  uint64_t v8 = (void *)MEMORY[0x263F8C0F8];
  uint64_t v9 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v6, v7);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v9, (uint64_t)__p, 1);
  uint64_t v10 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v10, (uint64_t)__p, 1);
  unint64_t v11 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v11, (uint64_t)__p, 1);
  uint64_t v12 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  char v13 = sub_216779180(v12, (uint64_t)__p, 1);
  uint64_t v14 = sub_216779180(v13, (uint64_t)"  start  ", 9);
  sub_216A432A8(__p);
  if ((SBYTE7(v101) & 0x80u) == 0) {
    uint64_t v15 = __p;
  }
  else {
    uint64_t v15 = (void **)__p[0];
  }
  if ((SBYTE7(v101) & 0x80u) == 0) {
    uint64_t v16 = BYTE7(v101);
  }
  else {
    uint64_t v16 = (uint64_t)__p[1];
  }
  unsigned __int8 v17 = sub_216779180(v14, (uint64_t)v15, v16);
  sub_216779180(v17, (uint64_t)"; current ", 10);
  if (SBYTE7(v101) < 0) {
    operator delete(__p[0]);
  }
  if ((char)v110 < 0) {
    operator delete(v108);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v8 + *(void *)(*v8 - 24)));
  uint64_t v18 = std::locale::use_facet(&v107, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v18->__vftable[2].~facet_0)(v18, 10);
  std::locale::~locale(&v107);
  std::ostream::put();
  std::ostream::flush();
  uint64_t v19 = sub_216A3F558((void *)a1);
  if (v19)
  {
    long long v20 = v4[1];
    v99[0] = *v4;
    v99[1] = v20;
    long long v21 = v4[1];
    *(_OWORD *)std::string __p = *v4;
    long long v101 = v21;
    uint64_t v102 = v4;
    sub_2169C56DC((uint64_t)&v107, (uint64_t)v4, v5);
    if ((v110 & 0x80u) == 0) {
      uint64_t v22 = &v108;
    }
    else {
      uint64_t v22 = v108;
    }
    if ((v110 & 0x80u) == 0) {
      uint64_t v23 = v110;
    }
    else {
      uint64_t v23 = v109;
    }
    uint64_t v24 = (void *)MEMORY[0x263F8C0F8];
    unint64_t v25 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v22, v23);
    LOBYTE(v103) = 58;
    sub_216779180(v25, (uint64_t)&v103, 1);
    uint64_t v26 = (void *)std::ostream::operator<<();
    LOBYTE(v103) = 58;
    sub_216779180(v26, (uint64_t)&v103, 1);
    uint64_t v27 = (void *)std::ostream::operator<<();
    LOBYTE(v103) = 40;
    sub_216779180(v27, (uint64_t)&v103, 1);
    uint64_t v28 = (void *)std::ostream::operator<<();
    LOBYTE(v103) = 41;
    uint64_t v29 = sub_216779180(v28, (uint64_t)&v103, 1);
    uint64_t v30 = sub_216779180(v29, (uint64_t)"  start  ", 9);
    sub_216A43354(&v103);
    if ((v105 & 0x80u) == 0) {
      uint64_t v31 = &v103;
    }
    else {
      uint64_t v31 = v103;
    }
    if ((v105 & 0x80u) == 0) {
      uint64_t v32 = v105;
    }
    else {
      uint64_t v32 = v104;
    }
    long long v33 = sub_216779180(v30, (uint64_t)v31, v32);
    sub_216779180(v33, (uint64_t)"; current ", 10);
    if ((char)v105 < 0) {
      operator delete(v103);
    }
    if ((char)v110 < 0) {
      operator delete(v108);
    }
    sub_216A3AB00(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v24 + *(void *)(*v24 - 24)));
    uint64_t v34 = std::locale::use_facet(&v107, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v34->__vftable[2].~facet_0)(v34, 10);
    std::locale::~locale(&v107);
    std::ostream::put();
    std::ostream::flush();
    if (!sub_216A4030C((void *)a1))
    {
      sub_2169C56DC((uint64_t)&v107, (uint64_t)v4, v5);
      if ((v110 & 0x80u) == 0) {
        uint64_t v86 = &v108;
      }
      else {
        uint64_t v86 = v108;
      }
      if ((v110 & 0x80u) == 0) {
        uint64_t v87 = v110;
      }
      else {
        uint64_t v87 = v109;
      }
      uint64_t v88 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v86, v87);
      LOBYTE(v103) = 58;
      sub_216779180(v88, (uint64_t)&v103, 1);
      uint64_t v89 = (void *)std::ostream::operator<<();
      LOBYTE(v103) = 58;
      sub_216779180(v89, (uint64_t)&v103, 1);
      uint64_t v90 = (void *)std::ostream::operator<<();
      LOBYTE(v103) = 40;
      sub_216779180(v90, (uint64_t)&v103, 1);
      uint64_t v91 = (void *)std::ostream::operator<<();
      LOBYTE(v103) = 41;
      uint64_t v92 = sub_216779180(v91, (uint64_t)&v103, 1);
      uint64_t v93 = sub_216779180(v92, (uint64_t)" failure ", 9);
      sub_216A43354(&v103);
      if ((v105 & 0x80u) == 0) {
        uint64_t v94 = &v103;
      }
      else {
        uint64_t v94 = v103;
      }
      if ((v105 & 0x80u) == 0) {
        uint64_t v95 = v105;
      }
      else {
        uint64_t v95 = v104;
      }
      uint64_t v96 = sub_216779180(v93, (uint64_t)v94, v95);
      std::ios_base::getloc((const std::ios_base *)((char *)v96 + *(void *)(*v96 - 24)));
      uint64_t v97 = std::locale::use_facet(&v106, MEMORY[0x263F8C108]);
      ((void (*)(const std::locale::facet *, uint64_t))v97->__vftable[2].~facet_0)(v97, 10);
      std::locale::~locale(&v106);
      std::ostream::put();
      std::ostream::flush();
      if ((char)v105 < 0) {
        operator delete(v103);
      }
      if ((char)v110 < 0) {
        operator delete(v108);
      }
      long long v98 = v101;
      *unint64_t v4 = *(_OWORD *)__p;
      v4[1] = v98;
      sub_216A436D4(a1);
    }
    while ((sub_216A40368((void *)a1) & 1) != 0)
      ;
    sub_2169C56DC((uint64_t)&v107, (uint64_t)v4, v5);
    if ((v110 & 0x80u) == 0) {
      long long v35 = &v108;
    }
    else {
      long long v35 = v108;
    }
    if ((v110 & 0x80u) == 0) {
      uint64_t v36 = v110;
    }
    else {
      uint64_t v36 = v109;
    }
    uint64_t v37 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v35, v36);
    LOBYTE(v103) = 58;
    sub_216779180(v37, (uint64_t)&v103, 1);
    uint64_t v38 = (void *)std::ostream::operator<<();
    LOBYTE(v103) = 58;
    sub_216779180(v38, (uint64_t)&v103, 1);
    uint64_t v39 = (void *)std::ostream::operator<<();
    LOBYTE(v103) = 40;
    sub_216779180(v39, (uint64_t)&v103, 1);
    uint64_t v40 = (void *)std::ostream::operator<<();
    LOBYTE(v103) = 41;
    uint64_t v41 = sub_216779180(v40, (uint64_t)&v103, 1);
    uint64_t v42 = sub_216779180(v41, (uint64_t)"  apply  ", 9);
    sub_216A43354(&v103);
    if ((v105 & 0x80u) == 0) {
      uint64_t v43 = &v103;
    }
    else {
      uint64_t v43 = v103;
    }
    if ((v105 & 0x80u) == 0) {
      uint64_t v44 = v105;
    }
    else {
      uint64_t v44 = v104;
    }
    long long v45 = sub_216779180(v42, (uint64_t)v43, v44);
    std::ios_base::getloc((const std::ios_base *)((char *)v45 + *(void *)(*v45 - 24)));
    long long v46 = std::locale::use_facet(&v106, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v46->__vftable[2].~facet_0)(v46, 10);
    std::locale::~locale(&v106);
    std::ostream::put();
    std::ostream::flush();
    if ((char)v105 < 0) {
      operator delete(v103);
    }
    if ((char)v110 < 0) {
      operator delete(v108);
    }
    sub_216A43400((char **)__p, a1, a2);
    sub_2169C56DC((uint64_t)&v107, (uint64_t)v4, v5);
    if ((v110 & 0x80u) == 0) {
      int v47 = &v108;
    }
    else {
      int v47 = v108;
    }
    if ((v110 & 0x80u) == 0) {
      uint64_t v48 = v110;
    }
    else {
      uint64_t v48 = v109;
    }
    uint64_t v49 = (void *)MEMORY[0x263F8C0F8];
    uint64_t v50 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v47, v48);
    LOBYTE(v103) = 58;
    sub_216779180(v50, (uint64_t)&v103, 1);
    unsigned __int8 v51 = (void *)std::ostream::operator<<();
    LOBYTE(v103) = 58;
    sub_216779180(v51, (uint64_t)&v103, 1);
    std::locale v52 = (void *)std::ostream::operator<<();
    LOBYTE(v103) = 40;
    sub_216779180(v52, (uint64_t)&v103, 1);
    std::locale v53 = (void *)std::ostream::operator<<();
    LOBYTE(v103) = 41;
    long long v54 = sub_216779180(v53, (uint64_t)&v103, 1);
    long long v55 = sub_216779180(v54, (uint64_t)" success ", 9);
    sub_216A43354(&v103);
    if ((v105 & 0x80u) == 0) {
      uint64_t v56 = &v103;
    }
    else {
      uint64_t v56 = v103;
    }
    if ((v105 & 0x80u) == 0) {
      uint64_t v57 = v105;
    }
    else {
      uint64_t v57 = v104;
    }
    uint64_t v58 = sub_216779180(v55, (uint64_t)v56, v57);
    sub_216779180(v58, (uint64_t)"; next ", 7);
    if ((char)v105 < 0) {
      operator delete(v103);
    }
    if ((char)v110 < 0) {
      operator delete(v108);
    }
    sub_216A3AB00(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v49 + *(void *)(*v49 - 24)));
    uint64_t v59 = std::locale::use_facet(&v107, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v59->__vftable[2].~facet_0)(v59, 10);
    std::locale::~locale(&v107);
    std::ostream::put();
    std::ostream::flush();
    sub_216A3FCB4(a1);
    sub_2169C56DC((uint64_t)&v107, (uint64_t)v4, v5);
    if ((v110 & 0x80u) == 0) {
      uint64_t v60 = &v108;
    }
    else {
      uint64_t v60 = v108;
    }
    if ((v110 & 0x80u) == 0) {
      uint64_t v61 = v110;
    }
    else {
      uint64_t v61 = v109;
    }
    long long v62 = (void *)MEMORY[0x263F8C0F8];
    char v63 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v60, v61);
    LOBYTE(__p[0]) = 58;
    sub_216779180(v63, (uint64_t)__p, 1);
    long long v64 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 58;
    sub_216779180(v64, (uint64_t)__p, 1);
    uint64_t v65 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 40;
    sub_216779180(v65, (uint64_t)__p, 1);
    uint64_t v66 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 41;
    uint64_t v67 = sub_216779180(v66, (uint64_t)__p, 1);
    uint64_t v68 = sub_216779180(v67, (uint64_t)" success ", 9);
    sub_216A432A8(__p);
    if ((SBYTE7(v101) & 0x80u) == 0) {
      uint64_t v69 = __p;
    }
    else {
      uint64_t v69 = (void **)__p[0];
    }
    if ((SBYTE7(v101) & 0x80u) == 0) {
      uint64_t v70 = BYTE7(v101);
    }
    else {
      uint64_t v70 = (uint64_t)__p[1];
    }
    uint64_t v71 = sub_216779180(v68, (uint64_t)v69, v70);
    sub_216779180(v71, (uint64_t)"; next ", 7);
    if (SBYTE7(v101) < 0) {
      operator delete(__p[0]);
    }
    if ((char)v110 < 0) {
      operator delete(v108);
    }
    sub_216A3AB00(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v62 + *(void *)(*v62 - 24)));
    uint64_t v72 = std::locale::use_facet(&v107, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v72->__vftable[2].~facet_0)(v72, 10);
    std::locale::~locale(&v107);
    std::ostream::put();
    std::ostream::flush();
  }
  else
  {
    sub_2169C56DC((uint64_t)&v107, (uint64_t)v4, v5);
    if ((v110 & 0x80u) == 0) {
      uint64_t v73 = &v108;
    }
    else {
      uint64_t v73 = v108;
    }
    if ((v110 & 0x80u) == 0) {
      uint64_t v74 = v110;
    }
    else {
      uint64_t v74 = v109;
    }
    uint64_t v75 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v73, v74);
    LOBYTE(__p[0]) = 58;
    sub_216779180(v75, (uint64_t)__p, 1);
    uint64_t v76 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 58;
    sub_216779180(v76, (uint64_t)__p, 1);
    uint64_t v77 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 40;
    sub_216779180(v77, (uint64_t)__p, 1);
    uint64_t v78 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 41;
    uint64_t v79 = sub_216779180(v78, (uint64_t)__p, 1);
    uint64_t v80 = sub_216779180(v79, (uint64_t)" failure ", 9);
    sub_216A432A8(__p);
    if ((SBYTE7(v101) & 0x80u) == 0) {
      uint64_t v81 = __p;
    }
    else {
      uint64_t v81 = (void **)__p[0];
    }
    if ((SBYTE7(v101) & 0x80u) == 0) {
      uint64_t v82 = BYTE7(v101);
    }
    else {
      uint64_t v82 = (uint64_t)__p[1];
    }
    uint64_t v83 = sub_216779180(v80, (uint64_t)v81, v82);
    std::ios_base::getloc((const std::ios_base *)((char *)v83 + *(void *)(*v83 - 24)));
    uint64_t v84 = std::locale::use_facet((const std::locale *)v99, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v84->__vftable[2].~facet_0)(v84, 10);
    std::locale::~locale((std::locale *)v99);
    std::ostream::put();
    std::ostream::flush();
    if (SBYTE7(v101) < 0) {
      operator delete(__p[0]);
    }
    if ((char)v110 < 0) {
      operator delete(v108);
    }
  }
  return v19;
}

void sub_216A43194(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, long long a9, long long a10, long long a11, long long a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,std::locale a21,std::locale a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  std::locale::~locale(&a21);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a30 < 0) {
    operator delete(a25);
  }
  *uint64_t v30 = a11;
  v30[1] = a12;
  *uint64_t v30 = a9;
  v30[1] = a10;
  _Unwind_Resume(a1);
}

void sub_216A432A8(void *a1@<X8>)
{
  uint64_t v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_120QuotedStringVariableE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_120QuotedStringVariableE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A43340(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

void sub_216A43354(void *a1@<X8>)
{
  uint64_t v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_112VariableNameINS0_20QuotedStringVariableEEE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_112VariableNameINS0_20QuotedStringVariableEEE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A433EC(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

void sub_216A43400(char **a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = *a1;
  uint64_t v5 = (uint64_t *)sub_216A40A10(a3);
  sub_21682E90C(__p, v4, *(char **)(a2 + 8), *(void *)(a2 + 8) - (void)v4);
  char v22 = 1;
  unint64_t v6 = v5[2];
  unint64_t v7 = v5[3];
  if (v6 >= v7)
  {
    uint64_t v9 = v5[1];
    uint64_t v10 = (uint64_t)(v6 - v9) >> 5;
    unint64_t v11 = v10 + 1;
    if ((unint64_t)(v10 + 1) >> 59) {
      sub_21677CB10();
    }
    uint64_t v12 = v7 - v9;
    if (v12 >> 4 > v11) {
      unint64_t v11 = v12 >> 4;
    }
    if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFE0) {
      unint64_t v13 = 0x7FFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v13 = v11;
    }
    v23[4] = v5 + 3;
    uint64_t v14 = (char *)sub_2168707F4((uint64_t)(v5 + 3), v13);
    uint64_t v15 = &v14[32 * v10];
    v23[0] = v14;
    v23[1] = v15;
    v23[3] = &v14[32 * v16];
    long long v17 = *(_OWORD *)__p;
    *((void *)v15 + 2) = v21;
    *(_OWORD *)uint64_t v15 = v17;
    __p[1] = 0;
    uint64_t v21 = 0;
    __p[0] = 0;
    v15[24] = v22;
    v23[2] = v15 + 32;
    sub_216A43574(v5 + 1, v23);
    uint64_t v18 = v5[2];
    sub_216870958((uint64_t)v23);
    int v19 = SHIBYTE(v21);
    v5[2] = v18;
    if (v19 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    long long v8 = *(_OWORD *)__p;
    *(void *)(v6 + 16) = v21;
    *(_OWORD *)unint64_t v6 = v8;
    *(unsigned char *)(v6 + 24) = v22;
    v5[2] = v6 + 32;
  }
}

void sub_216A43548(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, char a17)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_216A43574(uint64_t *a1, void *a2)
{
  uint64_t result = sub_216A435EC((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_216A435EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v15 = a6;
  *((void *)&v15 + 1) = a7;
  long long v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  if (a3 == a5)
  {
    uint64_t v10 = a6;
  }
  else
  {
    uint64_t v8 = a7;
    do
    {
      long long v9 = *(_OWORD *)(a3 - 32);
      *(void *)(v8 - 16) = *(void *)(a3 - 16);
      *(_OWORD *)(v8 - 32) = v9;
      *(void *)(a3 - 24) = 0;
      *(void *)(a3 - 16) = 0;
      *(void *)(a3 - 32) = 0;
      *(unsigned char *)(v8 - 8) = *(unsigned char *)(a3 - 8);
      v8 -= 32;
      v7 -= 32;
      a3 -= 32;
    }
    while (a3 != a5);
    *((void *)&v15 + 1) = v8;
    uint64_t v10 = v15;
  }
  char v13 = 1;
  sub_216A4369C((uint64_t)v12);
  return v10;
}

uint64_t sub_216A4369C(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_216870910(a1);
  }
  return a1;
}

void sub_216A436D4(uint64_t a1)
{
  sub_216779094(&v2, "Variables must be a C identifier");
  sub_216A3AD78(a1, &v2);
}

void sub_216A4370C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A43728(void *a1@<X8>)
{
  std::string v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_117QuotedStringCharsILc34EEE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_117QuotedStringCharsILc34EEE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A437C0(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_216A437D4(uint64_t a1)
{
  sub_2169C56DC((uint64_t)&v18, a1 + 8, (long long *)(a1 + 48));
  if ((v20 & 0x80u) == 0) {
    std::string v2 = v19;
  }
  else {
    std::string v2 = (void **)v19[0];
  }
  if ((v20 & 0x80u) == 0) {
    uint64_t v3 = v20;
  }
  else {
    uint64_t v3 = (uint64_t)v19[1];
  }
  unint64_t v4 = (void *)MEMORY[0x263F8C0F8];
  uint64_t v5 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v2, v3);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v5, (uint64_t)__p, 1);
  uint64_t v6 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v6, (uint64_t)__p, 1);
  uint64_t v7 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v7, (uint64_t)__p, 1);
  uint64_t v8 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  long long v9 = sub_216779180(v8, (uint64_t)__p, 1);
  uint64_t v10 = sub_216779180(v9, (uint64_t)"  start  ", 9);
  sub_216A43BF4(__p);
  if ((v17 & 0x80u) == 0) {
    unint64_t v11 = __p;
  }
  else {
    unint64_t v11 = (void **)__p[0];
  }
  if ((v17 & 0x80u) == 0) {
    uint64_t v12 = v17;
  }
  else {
    uint64_t v12 = (uint64_t)__p[1];
  }
  char v13 = sub_216779180(v10, (uint64_t)v11, v12);
  sub_216779180(v13, (uint64_t)"; current ", 10);
  if ((char)v17 < 0) {
    operator delete(__p[0]);
  }
  if ((char)v20 < 0) {
    operator delete(v19[0]);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v4 + *(void *)(*v4 - 24)));
  long long v14 = std::locale::use_facet(&v18, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v14->__vftable[2].~facet_0)(v14, 10);
  std::locale::~locale(&v18);
  std::ostream::put();
  return std::ostream::flush();
}

void sub_216A4399C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, std::locale a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_216A439E4(uint64_t a1)
{
  sub_2169C56DC((uint64_t)&v18, a1 + 8, (long long *)(a1 + 48));
  if ((v20 & 0x80u) == 0) {
    std::string v2 = v19;
  }
  else {
    std::string v2 = (void **)v19[0];
  }
  if ((v20 & 0x80u) == 0) {
    uint64_t v3 = v20;
  }
  else {
    uint64_t v3 = (uint64_t)v19[1];
  }
  unint64_t v4 = (void *)MEMORY[0x263F8C0F8];
  uint64_t v5 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v2, v3);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v5, (uint64_t)__p, 1);
  uint64_t v6 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v6, (uint64_t)__p, 1);
  uint64_t v7 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v7, (uint64_t)__p, 1);
  uint64_t v8 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  long long v9 = sub_216779180(v8, (uint64_t)__p, 1);
  uint64_t v10 = sub_216779180(v9, (uint64_t)" success ", 9);
  sub_216A43BF4(__p);
  if ((v17 & 0x80u) == 0) {
    unint64_t v11 = __p;
  }
  else {
    unint64_t v11 = (void **)__p[0];
  }
  if ((v17 & 0x80u) == 0) {
    uint64_t v12 = v17;
  }
  else {
    uint64_t v12 = (uint64_t)__p[1];
  }
  char v13 = sub_216779180(v10, (uint64_t)v11, v12);
  sub_216779180(v13, (uint64_t)"; next ", 7);
  if ((char)v17 < 0) {
    operator delete(__p[0]);
  }
  if ((char)v20 < 0) {
    operator delete(v19[0]);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v4 + *(void *)(*v4 - 24)));
  long long v14 = std::locale::use_facet(&v18, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v14->__vftable[2].~facet_0)(v14, 10);
  std::locale::~locale(&v18);
  std::ostream::put();
  return std::ostream::flush();
}

void sub_216A43BAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, std::locale a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A43BF4(void *a1@<X8>)
{
  std::string v2 = __cxa_demangle((const char *)((unint64_t)"N3tao21PXR_INTERNAL_NS_pegtl3sorIJNS0_3seqIJNS0_5ascii3oneIJLc92EEEEN32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_123QuotedStringEscapedCharILc34EEEEEENS2_IJNS0_6not_atIJNS1_IJNS7_13VariableStartENS4_IJLc34EEEEEEEEEENS3_3anyEEEEEEE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N3tao21PXR_INTERNAL_NS_pegtl3sorIJNS0_3seqIJNS0_5ascii3oneIJLc92EEEEN32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_123QuotedStringEscapedCharILc34EEEEEENS2_IJNS0_6not_atIJNS1_IJNS7_13VariableStartENS4_IJLc34EEEEEEEEEENS3_3anyEEEEEEE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A43C8C(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_216A43CA0(uint64_t a1)
{
  std::string v2 = (_OWORD *)(a1 + 8);
  uint64_t v3 = (long long *)(a1 + 48);
  sub_2169C56DC((uint64_t)&v89, a1 + 8, (long long *)(a1 + 48));
  if ((v92 & 0x80u) == 0) {
    unint64_t v4 = &v90;
  }
  else {
    unint64_t v4 = v90;
  }
  if ((v92 & 0x80u) == 0) {
    uint64_t v5 = v92;
  }
  else {
    uint64_t v5 = v91;
  }
  uint64_t v6 = (void *)MEMORY[0x263F8C0F8];
  uint64_t v7 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v4, v5);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v7, (uint64_t)__p, 1);
  uint64_t v8 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v8, (uint64_t)__p, 1);
  long long v9 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v9, (uint64_t)__p, 1);
  uint64_t v10 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  unint64_t v11 = sub_216779180(v10, (uint64_t)__p, 1);
  uint64_t v12 = sub_216779180(v11, (uint64_t)"  start  ", 9);
  sub_216A44788(__p);
  if ((SBYTE7(v84) & 0x80u) == 0) {
    char v13 = __p;
  }
  else {
    char v13 = (void **)__p[0];
  }
  if ((SBYTE7(v84) & 0x80u) == 0) {
    uint64_t v14 = BYTE7(v84);
  }
  else {
    uint64_t v14 = (uint64_t)__p[1];
  }
  long long v15 = sub_216779180(v12, (uint64_t)v13, v14);
  sub_216779180(v15, (uint64_t)"; current ", 10);
  if (SBYTE7(v84) < 0) {
    operator delete(__p[0]);
  }
  if ((char)v92 < 0) {
    operator delete(v90);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v6 + *(void *)(*v6 - 24)));
  uint64_t v16 = std::locale::use_facet(&v89, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v16->__vftable[2].~facet_0)(v16, 10);
  std::locale::~locale(&v89);
  std::ostream::put();
  std::ostream::flush();
  long long v17 = v2[1];
  *(_OWORD *)std::string __p = *v2;
  long long v84 = v17;
  if (sub_216A44834(a1))
  {
    sub_2169C56DC((uint64_t)&v89, (uint64_t)v2, v3);
    if ((v92 & 0x80u) == 0) {
      std::locale v18 = &v90;
    }
    else {
      std::locale v18 = v90;
    }
    if ((v92 & 0x80u) == 0) {
      uint64_t v19 = v92;
    }
    else {
      uint64_t v19 = v91;
    }
    unsigned __int8 v20 = (void *)MEMORY[0x263F8C0F8];
    uint64_t v21 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v18, v19);
    LOBYTE(v85.__locale_) = 58;
    sub_216779180(v21, (uint64_t)&v85, 1);
    char v22 = (void *)std::ostream::operator<<();
    LOBYTE(v85.__locale_) = 58;
    sub_216779180(v22, (uint64_t)&v85, 1);
    uint64_t v23 = (void *)std::ostream::operator<<();
    LOBYTE(v85.__locale_) = 40;
    sub_216779180(v23, (uint64_t)&v85, 1);
    uint64_t v24 = (void *)std::ostream::operator<<();
    LOBYTE(v85.__locale_) = 41;
    unint64_t v25 = sub_216779180(v24, (uint64_t)&v85, 1);
    uint64_t v26 = sub_216779180(v25, (uint64_t)"  start  ", 9);
    sub_216A44E98(&v85);
    if ((v87 & 0x80u) == 0) {
      locale = &v85;
    }
    else {
      locale = v85.__locale_;
    }
    if ((v87 & 0x80u) == 0) {
      uint64_t v28 = v87;
    }
    else {
      uint64_t v28 = v86;
    }
    uint64_t v29 = sub_216779180(v26, (uint64_t)locale, v28);
    sub_216779180(v29, (uint64_t)"; current ", 10);
    if ((char)v87 < 0) {
      operator delete(v85.__locale_);
    }
    if ((char)v92 < 0) {
      operator delete(v90);
    }
    sub_216A3AB00(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v20 + *(void *)(*v20 - 24)));
    uint64_t v30 = std::locale::use_facet(&v89, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v30->__vftable[2].~facet_0)(v30, 10);
    std::locale::~locale(&v89);
    std::ostream::put();
    std::ostream::flush();
    if (sub_216A44F44((void *)a1))
    {
      sub_2169C56DC((uint64_t)&v89, (uint64_t)v2, v3);
      if ((v92 & 0x80u) == 0) {
        uint64_t v31 = &v90;
      }
      else {
        uint64_t v31 = v90;
      }
      if ((v92 & 0x80u) == 0) {
        uint64_t v32 = v92;
      }
      else {
        uint64_t v32 = v91;
      }
      long long v33 = (void *)MEMORY[0x263F8C0F8];
      uint64_t v34 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v31, v32);
      LOBYTE(v85.__locale_) = 58;
      sub_216779180(v34, (uint64_t)&v85, 1);
      long long v35 = (void *)std::ostream::operator<<();
      LOBYTE(v85.__locale_) = 58;
      sub_216779180(v35, (uint64_t)&v85, 1);
      uint64_t v36 = (void *)std::ostream::operator<<();
      LOBYTE(v85.__locale_) = 40;
      sub_216779180(v36, (uint64_t)&v85, 1);
      uint64_t v37 = (void *)std::ostream::operator<<();
      LOBYTE(v85.__locale_) = 41;
      uint64_t v38 = sub_216779180(v37, (uint64_t)&v85, 1);
      uint64_t v39 = sub_216779180(v38, (uint64_t)" success ", 9);
      sub_216A44E98(&v85);
      if ((v87 & 0x80u) == 0) {
        uint64_t v40 = &v85;
      }
      else {
        uint64_t v40 = v85.__locale_;
      }
      if ((v87 & 0x80u) == 0) {
        uint64_t v41 = v87;
      }
      else {
        uint64_t v41 = v86;
      }
      uint64_t v42 = sub_216779180(v39, (uint64_t)v40, v41);
      sub_216779180(v42, (uint64_t)"; next ", 7);
      if ((char)v87 < 0) {
        operator delete(v85.__locale_);
      }
      if ((char)v92 < 0) {
        operator delete(v90);
      }
      sub_216A3AB00(a1);
      std::ios_base::getloc((const std::ios_base *)((char *)v33 + *(void *)(*v33 - 24)));
      uint64_t v43 = std::locale::use_facet(&v89, MEMORY[0x263F8C108]);
      ((void (*)(const std::locale::facet *, uint64_t))v43->__vftable[2].~facet_0)(v43, 10);
      std::locale::~locale(&v89);
      std::ostream::put();
      std::ostream::flush();
      sub_2169C56DC((uint64_t)&v89, (uint64_t)v2, v3);
      if ((v92 & 0x80u) == 0) {
        uint64_t v44 = &v90;
      }
      else {
        uint64_t v44 = v90;
      }
      if ((v92 & 0x80u) == 0) {
        uint64_t v45 = v92;
      }
      else {
        uint64_t v45 = v91;
      }
      long long v46 = (void *)MEMORY[0x263F8C0F8];
      int v47 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v44, v45);
      LOBYTE(__p[0]) = 58;
      sub_216779180(v47, (uint64_t)__p, 1);
      uint64_t v48 = (void *)std::ostream::operator<<();
      LOBYTE(__p[0]) = 58;
      sub_216779180(v48, (uint64_t)__p, 1);
      uint64_t v49 = (void *)std::ostream::operator<<();
      LOBYTE(__p[0]) = 40;
      sub_216779180(v49, (uint64_t)__p, 1);
      uint64_t v50 = (void *)std::ostream::operator<<();
      LOBYTE(__p[0]) = 41;
      unsigned __int8 v51 = sub_216779180(v50, (uint64_t)__p, 1);
      std::locale v52 = sub_216779180(v51, (uint64_t)" success ", 9);
      sub_216A44788(__p);
      if ((SBYTE7(v84) & 0x80u) == 0) {
        std::locale v53 = __p;
      }
      else {
        std::locale v53 = (void **)__p[0];
      }
      if ((SBYTE7(v84) & 0x80u) == 0) {
        uint64_t v54 = BYTE7(v84);
      }
      else {
        uint64_t v54 = (uint64_t)__p[1];
      }
      long long v55 = sub_216779180(v52, (uint64_t)v53, v54);
      sub_216779180(v55, (uint64_t)"; next ", 7);
      if (SBYTE7(v84) < 0) {
        operator delete(__p[0]);
      }
      if ((char)v92 < 0) {
        operator delete(v90);
      }
      sub_216A3AB00(a1);
      std::ios_base::getloc((const std::ios_base *)((char *)v46 + *(void *)(*v46 - 24)));
      uint64_t v56 = std::locale::use_facet(&v89, MEMORY[0x263F8C108]);
      ((void (*)(const std::locale::facet *, uint64_t))v56->__vftable[2].~facet_0)(v56, 10);
      std::locale::~locale(&v89);
      std::ostream::put();
      std::ostream::flush();
      return 1;
    }
    sub_2169C56DC((uint64_t)&v89, (uint64_t)v2, v3);
    if ((v92 & 0x80u) == 0) {
      uint64_t v58 = &v90;
    }
    else {
      uint64_t v58 = v90;
    }
    if ((v92 & 0x80u) == 0) {
      uint64_t v59 = v92;
    }
    else {
      uint64_t v59 = v91;
    }
    uint64_t v60 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v58, v59);
    LOBYTE(v85.__locale_) = 58;
    sub_216779180(v60, (uint64_t)&v85, 1);
    uint64_t v61 = (void *)std::ostream::operator<<();
    LOBYTE(v85.__locale_) = 58;
    sub_216779180(v61, (uint64_t)&v85, 1);
    long long v62 = (void *)std::ostream::operator<<();
    LOBYTE(v85.__locale_) = 40;
    sub_216779180(v62, (uint64_t)&v85, 1);
    char v63 = (void *)std::ostream::operator<<();
    LOBYTE(v85.__locale_) = 41;
    long long v64 = sub_216779180(v63, (uint64_t)&v85, 1);
    uint64_t v65 = sub_216779180(v64, (uint64_t)" failure ", 9);
    sub_216A44E98(&v85);
    if ((v87 & 0x80u) == 0) {
      uint64_t v66 = &v85;
    }
    else {
      uint64_t v66 = v85.__locale_;
    }
    if ((v87 & 0x80u) == 0) {
      uint64_t v67 = v87;
    }
    else {
      uint64_t v67 = v86;
    }
    uint64_t v68 = sub_216779180(v65, (uint64_t)v66, v67);
    std::ios_base::getloc((const std::ios_base *)((char *)v68 + *(void *)(*v68 - 24)));
    uint64_t v69 = std::locale::use_facet(&v88, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v69->__vftable[2].~facet_0)(v69, 10);
    std::locale::~locale(&v88);
    std::ostream::put();
    std::ostream::flush();
    if ((char)v87 < 0) {
      operator delete(v85.__locale_);
    }
    if ((char)v92 < 0) {
      operator delete(v90);
    }
  }
  long long v70 = v84;
  *std::string v2 = *(_OWORD *)__p;
  v2[1] = v70;
  sub_2169C56DC((uint64_t)&v89, (uint64_t)v2, v3);
  if ((v92 & 0x80u) == 0) {
    uint64_t v71 = &v90;
  }
  else {
    uint64_t v71 = v90;
  }
  if ((v92 & 0x80u) == 0) {
    uint64_t v72 = v92;
  }
  else {
    uint64_t v72 = v91;
  }
  uint64_t v73 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v71, v72);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v73, (uint64_t)__p, 1);
  uint64_t v74 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v74, (uint64_t)__p, 1);
  uint64_t v75 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v75, (uint64_t)__p, 1);
  uint64_t v76 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  uint64_t v77 = sub_216779180(v76, (uint64_t)__p, 1);
  uint64_t v78 = sub_216779180(v77, (uint64_t)" failure ", 9);
  sub_216A44788(__p);
  if ((SBYTE7(v84) & 0x80u) == 0) {
    uint64_t v79 = __p;
  }
  else {
    uint64_t v79 = (void **)__p[0];
  }
  if ((SBYTE7(v84) & 0x80u) == 0) {
    uint64_t v80 = BYTE7(v84);
  }
  else {
    uint64_t v80 = (uint64_t)__p[1];
  }
  uint64_t v81 = sub_216779180(v78, (uint64_t)v79, v80);
  std::ios_base::getloc((const std::ios_base *)((char *)v81 + *(void *)(*v81 - 24)));
  uint64_t v82 = std::locale::use_facet(&v85, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v82->__vftable[2].~facet_0)(v82, 10);
  std::locale::~locale(&v85);
  std::ostream::put();
  std::ostream::flush();
  if (SBYTE7(v84) < 0) {
    operator delete(__p[0]);
  }
  if ((char)v92 < 0) {
    operator delete(v90);
  }
  return 0;
}

void sub_216A44694(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, long long a9, long long a10, std::locale a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, std::locale a17, std::locale a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0) {
    operator delete(__p);
  }
  _OWORD *v26 = a9;
  v26[1] = a10;
  _Unwind_Resume(exception_object);
}

void sub_216A44788(void *a1@<X8>)
{
  std::string v2 = __cxa_demangle((const char *)((unint64_t)"N3tao21PXR_INTERNAL_NS_pegtl3seqIJNS0_5ascii3oneIJLc92EEEEN32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_123QuotedStringEscapedCharILc34EEEEEE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N3tao21PXR_INTERNAL_NS_pegtl3seqIJNS0_5ascii3oneIJLc92EEEEN32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_123QuotedStringEscapedCharILc34EEEEEE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A44820(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_216A44834(uint64_t a1)
{
  uint64_t v2 = a1 + 8;
  uint64_t v3 = (long long *)(a1 + 48);
  sub_2169C56DC((uint64_t)&v48, a1 + 8, (long long *)(a1 + 48));
  if ((v51 & 0x80u) == 0) {
    unint64_t v4 = &v49;
  }
  else {
    unint64_t v4 = v49;
  }
  if ((v51 & 0x80u) == 0) {
    uint64_t v5 = v51;
  }
  else {
    uint64_t v5 = v50;
  }
  uint64_t v6 = (void *)MEMORY[0x263F8C0F8];
  uint64_t v7 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v4, v5);
  LOBYTE(__p) = 58;
  sub_216779180(v7, (uint64_t)&__p, 1);
  uint64_t v8 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 58;
  sub_216779180(v8, (uint64_t)&__p, 1);
  long long v9 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 40;
  sub_216779180(v9, (uint64_t)&__p, 1);
  uint64_t v10 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 41;
  unint64_t v11 = sub_216779180(v10, (uint64_t)&__p, 1);
  uint64_t v12 = sub_216779180(v11, (uint64_t)"  start  ", 9);
  sub_216A44DE4(&__p);
  if ((v47 & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = __p;
  }
  if ((v47 & 0x80u) == 0) {
    uint64_t v14 = v47;
  }
  else {
    uint64_t v14 = v46;
  }
  long long v15 = sub_216779180(v12, (uint64_t)p_p, v14);
  sub_216779180(v15, (uint64_t)"; current ", 10);
  if ((char)v47 < 0) {
    operator delete(__p);
  }
  if ((char)v51 < 0) {
    operator delete(v49);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v6 + *(void *)(*v6 - 24)));
  uint64_t v16 = std::locale::use_facet(&v48, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v16->__vftable[2].~facet_0)(v16, 10);
  std::locale::~locale(&v48);
  std::ostream::put();
  std::ostream::flush();
  long long v17 = *(unsigned char **)(a1 + 8);
  if (v17 == *(unsigned char **)(a1 + 40) || *v17 != 92)
  {
    sub_2169C56DC((uint64_t)&v48, v2, v3);
    if ((v51 & 0x80u) == 0) {
      long long v33 = &v49;
    }
    else {
      long long v33 = v49;
    }
    if ((v51 & 0x80u) == 0) {
      uint64_t v34 = v51;
    }
    else {
      uint64_t v34 = v50;
    }
    long long v35 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v33, v34);
    LOBYTE(__p) = 58;
    sub_216779180(v35, (uint64_t)&__p, 1);
    uint64_t v36 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 58;
    sub_216779180(v36, (uint64_t)&__p, 1);
    uint64_t v37 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 40;
    sub_216779180(v37, (uint64_t)&__p, 1);
    uint64_t v38 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 41;
    uint64_t v39 = sub_216779180(v38, (uint64_t)&__p, 1);
    uint64_t v40 = sub_216779180(v39, (uint64_t)" failure ", 9);
    sub_216A44DE4(&__p);
    if ((v47 & 0x80u) == 0) {
      uint64_t v41 = &__p;
    }
    else {
      uint64_t v41 = __p;
    }
    if ((v47 & 0x80u) == 0) {
      uint64_t v42 = v47;
    }
    else {
      uint64_t v42 = v46;
    }
    uint64_t v43 = sub_216779180(v40, (uint64_t)v41, v42);
    std::ios_base::getloc((const std::ios_base *)((char *)v43 + *(void *)(*v43 - 24)));
    uint64_t v44 = std::locale::use_facet(&v52, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v44->__vftable[2].~facet_0)(v44, 10);
    std::locale::~locale(&v52);
    std::ostream::put();
    std::ostream::flush();
    if ((char)v47 < 0) {
      operator delete(__p);
    }
    if ((char)v51 < 0) {
      operator delete(v49);
    }
    return 0;
  }
  else
  {
    uint64_t v18 = *(void *)(a1 + 16) + 1;
    *(void *)(a1 + 8) = v17 + 1;
    *(void *)(a1 + 16) = v18;
    ++*(void *)(a1 + 32);
    sub_2169C56DC((uint64_t)&v48, v2, v3);
    if ((v51 & 0x80u) == 0) {
      uint64_t v19 = &v49;
    }
    else {
      uint64_t v19 = v49;
    }
    if ((v51 & 0x80u) == 0) {
      uint64_t v20 = v51;
    }
    else {
      uint64_t v20 = v50;
    }
    uint64_t v21 = (void *)MEMORY[0x263F8C0F8];
    char v22 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v19, v20);
    LOBYTE(__p) = 58;
    sub_216779180(v22, (uint64_t)&__p, 1);
    uint64_t v23 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 58;
    sub_216779180(v23, (uint64_t)&__p, 1);
    uint64_t v24 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 40;
    sub_216779180(v24, (uint64_t)&__p, 1);
    unint64_t v25 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 41;
    uint64_t v26 = sub_216779180(v25, (uint64_t)&__p, 1);
    uint64_t v27 = sub_216779180(v26, (uint64_t)" success ", 9);
    sub_216A44DE4(&__p);
    if ((v47 & 0x80u) == 0) {
      uint64_t v28 = &__p;
    }
    else {
      uint64_t v28 = __p;
    }
    if ((v47 & 0x80u) == 0) {
      uint64_t v29 = v47;
    }
    else {
      uint64_t v29 = v46;
    }
    uint64_t v30 = sub_216779180(v27, (uint64_t)v28, v29);
    sub_216779180(v30, (uint64_t)"; next ", 7);
    if ((char)v47 < 0) {
      operator delete(__p);
    }
    if ((char)v51 < 0) {
      operator delete(v49);
    }
    sub_216A3AB00(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v21 + *(void *)(*v21 - 24)));
    uint64_t v31 = std::locale::use_facet(&v48, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v31->__vftable[2].~facet_0)(v31, 10);
    std::locale::~locale(&v48);
    std::ostream::put();
    std::ostream::flush();
    return 1;
  }
}

void sub_216A44D70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, std::locale a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A44DE4(void *a1@<X8>)
{
  uint64_t v2 = __cxa_demangle((const char *)(0x800000021746A9D4 & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)(0x800000021746A9D4 & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A44E84(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

void sub_216A44E98(void *a1@<X8>)
{
  uint64_t v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_123QuotedStringEscapedCharILc34EEE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_123QuotedStringEscapedCharILc34EEE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A44F30(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_216A44F44(void *a1)
{
  uint64_t v1 = (char *)a1[1];
  if (v1 == (char *)a1[5]) {
    return 0;
  }
  int v3 = *v1;
  int __s = 576463968;
  unint64_t v4 = (uint64_t *)memchr(&__s, v3, 4uLL);
  uint64_t v5 = (char *)(v4 ? v4 : &v9);
  if (v5 - (char *)&__s == 4) {
    return 0;
  }
  uint64_t v7 = a1[2] + 1;
  a1[1] = v1 + 1;
  a1[2] = v7;
  ++a1[4];
  return 1;
}

uint64_t sub_216A44FE4(uint64_t a1)
{
  sub_2169C56DC((uint64_t)&v18, a1 + 8, (long long *)(a1 + 48));
  if ((v20 & 0x80u) == 0) {
    uint64_t v2 = v19;
  }
  else {
    uint64_t v2 = (void **)v19[0];
  }
  if ((v20 & 0x80u) == 0) {
    uint64_t v3 = v20;
  }
  else {
    uint64_t v3 = (uint64_t)v19[1];
  }
  unint64_t v4 = (void *)MEMORY[0x263F8C0F8];
  uint64_t v5 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v2, v3);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v5, (uint64_t)__p, 1);
  uint64_t v6 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v6, (uint64_t)__p, 1);
  uint64_t v7 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v7, (uint64_t)__p, 1);
  uint64_t v8 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  uint64_t v9 = sub_216779180(v8, (uint64_t)__p, 1);
  uint64_t v10 = sub_216779180(v9, (uint64_t)"  start  ", 9);
  sub_216A45404(__p);
  if ((v17 & 0x80u) == 0) {
    unint64_t v11 = __p;
  }
  else {
    unint64_t v11 = (void **)__p[0];
  }
  if ((v17 & 0x80u) == 0) {
    uint64_t v12 = v17;
  }
  else {
    uint64_t v12 = (uint64_t)__p[1];
  }
  char v13 = sub_216779180(v10, (uint64_t)v11, v12);
  sub_216779180(v13, (uint64_t)"; current ", 10);
  if ((char)v17 < 0) {
    operator delete(__p[0]);
  }
  if ((char)v20 < 0) {
    operator delete(v19[0]);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v4 + *(void *)(*v4 - 24)));
  uint64_t v14 = std::locale::use_facet(&v18, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v14->__vftable[2].~facet_0)(v14, 10);
  std::locale::~locale(&v18);
  std::ostream::put();
  return std::ostream::flush();
}

void sub_216A451AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, std::locale a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_216A451F4(uint64_t a1)
{
  sub_2169C56DC((uint64_t)&v18, a1 + 8, (long long *)(a1 + 48));
  if ((v20 & 0x80u) == 0) {
    uint64_t v2 = v19;
  }
  else {
    uint64_t v2 = (void **)v19[0];
  }
  if ((v20 & 0x80u) == 0) {
    uint64_t v3 = v20;
  }
  else {
    uint64_t v3 = (uint64_t)v19[1];
  }
  unint64_t v4 = (void *)MEMORY[0x263F8C0F8];
  uint64_t v5 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v2, v3);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v5, (uint64_t)__p, 1);
  uint64_t v6 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v6, (uint64_t)__p, 1);
  uint64_t v7 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v7, (uint64_t)__p, 1);
  uint64_t v8 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  uint64_t v9 = sub_216779180(v8, (uint64_t)__p, 1);
  uint64_t v10 = sub_216779180(v9, (uint64_t)" success ", 9);
  sub_216A45404(__p);
  if ((v17 & 0x80u) == 0) {
    unint64_t v11 = __p;
  }
  else {
    unint64_t v11 = (void **)__p[0];
  }
  if ((v17 & 0x80u) == 0) {
    uint64_t v12 = v17;
  }
  else {
    uint64_t v12 = (uint64_t)__p[1];
  }
  char v13 = sub_216779180(v10, (uint64_t)v11, v12);
  sub_216779180(v13, (uint64_t)"; next ", 7);
  if ((char)v17 < 0) {
    operator delete(__p[0]);
  }
  if ((char)v20 < 0) {
    operator delete(v19[0]);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v4 + *(void *)(*v4 - 24)));
  uint64_t v14 = std::locale::use_facet(&v18, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v14->__vftable[2].~facet_0)(v14, 10);
  std::locale::~locale(&v18);
  std::ostream::put();
  return std::ostream::flush();
}

void sub_216A453BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, std::locale a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A45404(void *a1@<X8>)
{
  uint64_t v2 = __cxa_demangle((const char *)((unint64_t)"N3tao21PXR_INTERNAL_NS_pegtl3seqIJNS0_6not_atIJNS0_3sorIJN32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_113VariableStartENS0_5ascii3oneIJLc34EEEEEEEEEENS7_3anyEEEE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N3tao21PXR_INTERNAL_NS_pegtl3seqIJNS0_6not_atIJNS0_3sorIJN32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_113VariableStartENS0_5ascii3oneIJLc34EEEEEEEEEENS7_3anyEEEE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A4549C(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_216A454B0(uint64_t a1)
{
  uint64_t v2 = (_OWORD *)(a1 + 8);
  uint64_t v3 = (long long *)(a1 + 48);
  sub_2169C56DC((uint64_t)&v130, a1 + 8, (long long *)(a1 + 48));
  if ((v133 & 0x80u) == 0) {
    unint64_t v4 = &v131;
  }
  else {
    unint64_t v4 = v131;
  }
  if ((v133 & 0x80u) == 0) {
    uint64_t v5 = v133;
  }
  else {
    uint64_t v5 = v132;
  }
  uint64_t v6 = (void *)MEMORY[0x263F8C0F8];
  uint64_t v7 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v4, v5);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v7, (uint64_t)__p, 1);
  uint64_t v8 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v8, (uint64_t)__p, 1);
  uint64_t v9 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v9, (uint64_t)__p, 1);
  uint64_t v10 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  unint64_t v11 = sub_216779180(v10, (uint64_t)__p, 1);
  uint64_t v12 = sub_216779180(v11, (uint64_t)"  start  ", 9);
  sub_216A46A3C(__p);
  if ((SBYTE7(v125) & 0x80u) == 0) {
    char v13 = __p;
  }
  else {
    char v13 = (void **)__p[0];
  }
  if ((SBYTE7(v125) & 0x80u) == 0) {
    uint64_t v14 = BYTE7(v125);
  }
  else {
    uint64_t v14 = (uint64_t)__p[1];
  }
  long long v15 = sub_216779180(v12, (uint64_t)v13, v14);
  sub_216779180(v15, (uint64_t)"; current ", 10);
  if (SBYTE7(v125) < 0) {
    operator delete(__p[0]);
  }
  if ((char)v133 < 0) {
    operator delete(v131);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v6 + *(void *)(*v6 - 24)));
  uint64_t v16 = std::locale::use_facet(&v130, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v16->__vftable[2].~facet_0)(v16, 10);
  std::locale::~locale(&v130);
  std::ostream::put();
  std::ostream::flush();
  long long v17 = v2[1];
  *(_OWORD *)std::string __p = *v2;
  long long v125 = v17;
  sub_2169C56DC((uint64_t)&v130, (uint64_t)v2, v3);
  if ((v133 & 0x80u) == 0) {
    std::locale v18 = &v131;
  }
  else {
    std::locale v18 = v131;
  }
  if ((v133 & 0x80u) == 0) {
    uint64_t v19 = v133;
  }
  else {
    uint64_t v19 = v132;
  }
  unsigned __int8 v20 = (void *)MEMORY[0x263F8C0F8];
  uint64_t v21 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v18, v19);
  LOBYTE(v126.__locale_) = 58;
  sub_216779180(v21, (uint64_t)&v126, 1);
  char v22 = (void *)std::ostream::operator<<();
  LOBYTE(v126.__locale_) = 58;
  sub_216779180(v22, (uint64_t)&v126, 1);
  uint64_t v23 = (void *)std::ostream::operator<<();
  LOBYTE(v126.__locale_) = 40;
  sub_216779180(v23, (uint64_t)&v126, 1);
  uint64_t v24 = (void *)std::ostream::operator<<();
  LOBYTE(v126.__locale_) = 41;
  unint64_t v25 = sub_216779180(v24, (uint64_t)&v126, 1);
  uint64_t v26 = sub_216779180(v25, (uint64_t)"  start  ", 9);
  sub_216A46AE8(&v126);
  if ((v128 & 0x80u) == 0) {
    locale = &v126;
  }
  else {
    locale = v126.__locale_;
  }
  if ((v128 & 0x80u) == 0) {
    uint64_t v28 = v128;
  }
  else {
    uint64_t v28 = v127;
  }
  uint64_t v29 = sub_216779180(v26, (uint64_t)locale, v28);
  sub_216779180(v29, (uint64_t)"; current ", 10);
  if ((char)v128 < 0) {
    operator delete(v126.__locale_);
  }
  if ((char)v133 < 0) {
    operator delete(v131);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v20 + *(void *)(*v20 - 24)));
  uint64_t v30 = std::locale::use_facet(&v130, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v30->__vftable[2].~facet_0)(v30, 10);
  std::locale::~locale(&v130);
  std::ostream::put();
  std::ostream::flush();
  if (sub_216A3F558((void *)a1)) {
    goto LABEL_69;
  }
  sub_2169C56DC((uint64_t)&v130, (uint64_t)v2, v3);
  if ((v133 & 0x80u) == 0) {
    uint64_t v31 = &v131;
  }
  else {
    uint64_t v31 = v131;
  }
  if ((v133 & 0x80u) == 0) {
    uint64_t v32 = v133;
  }
  else {
    uint64_t v32 = v132;
  }
  long long v33 = (void *)MEMORY[0x263F8C0F8];
  uint64_t v34 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v31, v32);
  LOBYTE(v126.__locale_) = 58;
  sub_216779180(v34, (uint64_t)&v126, 1);
  long long v35 = (void *)std::ostream::operator<<();
  LOBYTE(v126.__locale_) = 58;
  sub_216779180(v35, (uint64_t)&v126, 1);
  uint64_t v36 = (void *)std::ostream::operator<<();
  LOBYTE(v126.__locale_) = 40;
  sub_216779180(v36, (uint64_t)&v126, 1);
  uint64_t v37 = (void *)std::ostream::operator<<();
  LOBYTE(v126.__locale_) = 41;
  uint64_t v38 = sub_216779180(v37, (uint64_t)&v126, 1);
  uint64_t v39 = sub_216779180(v38, (uint64_t)"  start  ", 9);
  sub_216A46B94(&v126);
  if ((v128 & 0x80u) == 0) {
    uint64_t v40 = &v126;
  }
  else {
    uint64_t v40 = v126.__locale_;
  }
  if ((v128 & 0x80u) == 0) {
    uint64_t v41 = v128;
  }
  else {
    uint64_t v41 = v127;
  }
  uint64_t v42 = sub_216779180(v39, (uint64_t)v40, v41);
  sub_216779180(v42, (uint64_t)"; current ", 10);
  if ((char)v128 < 0) {
    operator delete(v126.__locale_);
  }
  if ((char)v133 < 0) {
    operator delete(v131);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v33 + *(void *)(*v33 - 24)));
  uint64_t v43 = std::locale::use_facet(&v130, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v43->__vftable[2].~facet_0)(v43, 10);
  std::locale::~locale(&v130);
  std::ostream::put();
  std::ostream::flush();
  uint64_t v44 = *(unsigned char **)(a1 + 8);
  if (v44 != *(unsigned char **)(a1 + 40) && *v44 == 34)
  {
    uint64_t v45 = *(void *)(a1 + 16) + 1;
    *(void *)(a1 + 8) = v44 + 1;
    *(void *)(a1 + 16) = v45;
    ++*(void *)(a1 + 32);
    sub_2169C56DC((uint64_t)&v130, (uint64_t)v2, v3);
    if ((v133 & 0x80u) == 0) {
      uint64_t v46 = &v131;
    }
    else {
      uint64_t v46 = v131;
    }
    if ((v133 & 0x80u) == 0) {
      uint64_t v47 = v133;
    }
    else {
      uint64_t v47 = v132;
    }
    std::locale v48 = (void *)MEMORY[0x263F8C0F8];
    uint64_t v49 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v46, v47);
    LOBYTE(v126.__locale_) = 58;
    sub_216779180(v49, (uint64_t)&v126, 1);
    uint64_t v50 = (void *)std::ostream::operator<<();
    LOBYTE(v126.__locale_) = 58;
    sub_216779180(v50, (uint64_t)&v126, 1);
    unsigned __int8 v51 = (void *)std::ostream::operator<<();
    LOBYTE(v126.__locale_) = 40;
    sub_216779180(v51, (uint64_t)&v126, 1);
    std::locale v52 = (void *)std::ostream::operator<<();
    LOBYTE(v126.__locale_) = 41;
    std::locale v53 = sub_216779180(v52, (uint64_t)&v126, 1);
    uint64_t v54 = sub_216779180(v53, (uint64_t)" success ", 9);
    sub_216A46B94(&v126);
    if ((v128 & 0x80u) == 0) {
      long long v55 = &v126;
    }
    else {
      long long v55 = v126.__locale_;
    }
    if ((v128 & 0x80u) == 0) {
      uint64_t v56 = v128;
    }
    else {
      uint64_t v56 = v127;
    }
    uint64_t v57 = sub_216779180(v54, (uint64_t)v55, v56);
    sub_216779180(v57, (uint64_t)"; next ", 7);
    if ((char)v128 < 0) {
      operator delete(v126.__locale_);
    }
    if ((char)v133 < 0) {
      operator delete(v131);
    }
    sub_216A3AB00(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v48 + *(void *)(*v48 - 24)));
    uint64_t v58 = std::locale::use_facet(&v130, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v58->__vftable[2].~facet_0)(v58, 10);
    std::locale::~locale(&v130);
    std::ostream::put();
    std::ostream::flush();
LABEL_69:
    sub_2169C56DC((uint64_t)&v130, (uint64_t)v2, v3);
    if ((v133 & 0x80u) == 0) {
      uint64_t v59 = &v131;
    }
    else {
      uint64_t v59 = v131;
    }
    if ((v133 & 0x80u) == 0) {
      uint64_t v60 = v133;
    }
    else {
      uint64_t v60 = v132;
    }
    uint64_t v61 = (void *)MEMORY[0x263F8C0F8];
    long long v62 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v59, v60);
    LOBYTE(v126.__locale_) = 58;
    sub_216779180(v62, (uint64_t)&v126, 1);
    char v63 = (void *)std::ostream::operator<<();
    LOBYTE(v126.__locale_) = 58;
    sub_216779180(v63, (uint64_t)&v126, 1);
    long long v64 = (void *)std::ostream::operator<<();
    LOBYTE(v126.__locale_) = 40;
    sub_216779180(v64, (uint64_t)&v126, 1);
    uint64_t v65 = (void *)std::ostream::operator<<();
    LOBYTE(v126.__locale_) = 41;
    uint64_t v66 = sub_216779180(v65, (uint64_t)&v126, 1);
    uint64_t v67 = sub_216779180(v66, (uint64_t)" success ", 9);
    sub_216A46AE8(&v126);
    if ((v128 & 0x80u) == 0) {
      uint64_t v68 = &v126;
    }
    else {
      uint64_t v68 = v126.__locale_;
    }
    if ((v128 & 0x80u) == 0) {
      uint64_t v69 = v128;
    }
    else {
      uint64_t v69 = v127;
    }
    long long v70 = sub_216779180(v67, (uint64_t)v68, v69);
    sub_216779180(v70, (uint64_t)"; next ", 7);
    if ((char)v128 < 0) {
      operator delete(v126.__locale_);
    }
    if ((char)v133 < 0) {
      operator delete(v131);
    }
    sub_216A3AB00(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v61 + *(void *)(*v61 - 24)));
    uint64_t v71 = std::locale::use_facet(&v130, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v71->__vftable[2].~facet_0)(v71, 10);
    std::locale::~locale(&v130);
    std::ostream::put();
    std::ostream::flush();
    long long v72 = v125;
    *uint64_t v2 = *(_OWORD *)__p;
    v2[1] = v72;
    sub_2169C56DC((uint64_t)&v130, (uint64_t)v2, v3);
    if ((v133 & 0x80u) == 0) {
      uint64_t v73 = &v131;
    }
    else {
      uint64_t v73 = v131;
    }
    if ((v133 & 0x80u) == 0) {
      uint64_t v74 = v133;
    }
    else {
      uint64_t v74 = v132;
    }
    uint64_t v75 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v73, v74);
    LOBYTE(__p[0]) = 58;
    sub_216779180(v75, (uint64_t)__p, 1);
    uint64_t v76 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 58;
    sub_216779180(v76, (uint64_t)__p, 1);
    uint64_t v77 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 40;
    sub_216779180(v77, (uint64_t)__p, 1);
    uint64_t v78 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 41;
    uint64_t v79 = sub_216779180(v78, (uint64_t)__p, 1);
    uint64_t v80 = sub_216779180(v79, (uint64_t)" failure ", 9);
    sub_216A46A3C(__p);
    if ((SBYTE7(v125) & 0x80u) == 0) {
      uint64_t v81 = __p;
    }
    else {
      uint64_t v81 = (void **)__p[0];
    }
    if ((SBYTE7(v125) & 0x80u) == 0) {
      uint64_t v82 = BYTE7(v125);
    }
    else {
      uint64_t v82 = (uint64_t)__p[1];
    }
    uint64_t v83 = sub_216779180(v80, (uint64_t)v81, v82);
    std::ios_base::getloc((const std::ios_base *)((char *)v83 + *(void *)(*v83 - 24)));
    long long v84 = std::locale::use_facet(&v126, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v84->__vftable[2].~facet_0)(v84, 10);
    std::locale::~locale(&v126);
    std::ostream::put();
    std::ostream::flush();
    if (SBYTE7(v125) < 0) {
      operator delete(__p[0]);
    }
    if ((char)v133 < 0) {
      operator delete(v131);
    }
    return 0;
  }
  sub_2169C56DC((uint64_t)&v130, (uint64_t)v2, v3);
  if ((v133 & 0x80u) == 0) {
    uint64_t v86 = &v131;
  }
  else {
    uint64_t v86 = v131;
  }
  if ((v133 & 0x80u) == 0) {
    uint64_t v87 = v133;
  }
  else {
    uint64_t v87 = v132;
  }
  std::locale v88 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v86, v87);
  LOBYTE(v126.__locale_) = 58;
  sub_216779180(v88, (uint64_t)&v126, 1);
  std::locale v89 = (void *)std::ostream::operator<<();
  LOBYTE(v126.__locale_) = 58;
  sub_216779180(v89, (uint64_t)&v126, 1);
  uint64_t v90 = (void *)std::ostream::operator<<();
  LOBYTE(v126.__locale_) = 40;
  sub_216779180(v90, (uint64_t)&v126, 1);
  uint64_t v91 = (void *)std::ostream::operator<<();
  LOBYTE(v126.__locale_) = 41;
  unsigned __int8 v92 = sub_216779180(v91, (uint64_t)&v126, 1);
  uint64_t v93 = sub_216779180(v92, (uint64_t)" failure ", 9);
  sub_216A46B94(&v126);
  if ((v128 & 0x80u) == 0) {
    uint64_t v94 = &v126;
  }
  else {
    uint64_t v94 = v126.__locale_;
  }
  if ((v128 & 0x80u) == 0) {
    uint64_t v95 = v128;
  }
  else {
    uint64_t v95 = v127;
  }
  uint64_t v96 = sub_216779180(v93, (uint64_t)v94, v95);
  std::ios_base::getloc((const std::ios_base *)((char *)v96 + *(void *)(*v96 - 24)));
  uint64_t v97 = std::locale::use_facet(&v129, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v97->__vftable[2].~facet_0)(v97, 10);
  std::locale::~locale(&v129);
  std::ostream::put();
  std::ostream::flush();
  if ((char)v128 < 0) {
    operator delete(v126.__locale_);
  }
  if ((char)v133 < 0) {
    operator delete(v131);
  }
  sub_2169C56DC((uint64_t)&v130, (uint64_t)v2, v3);
  if ((v133 & 0x80u) == 0) {
    long long v98 = &v131;
  }
  else {
    long long v98 = v131;
  }
  if ((v133 & 0x80u) == 0) {
    uint64_t v99 = v133;
  }
  else {
    uint64_t v99 = v132;
  }
  uint64_t v100 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v98, v99);
  LOBYTE(v126.__locale_) = 58;
  sub_216779180(v100, (uint64_t)&v126, 1);
  long long v101 = (void *)std::ostream::operator<<();
  LOBYTE(v126.__locale_) = 58;
  sub_216779180(v101, (uint64_t)&v126, 1);
  uint64_t v102 = (void *)std::ostream::operator<<();
  LOBYTE(v126.__locale_) = 40;
  sub_216779180(v102, (uint64_t)&v126, 1);
  uint64_t v103 = (void *)std::ostream::operator<<();
  LOBYTE(v126.__locale_) = 41;
  uint64_t v104 = sub_216779180(v103, (uint64_t)&v126, 1);
  unsigned __int8 v105 = sub_216779180(v104, (uint64_t)" failure ", 9);
  sub_216A46AE8(&v126);
  if ((v128 & 0x80u) == 0) {
    std::locale v106 = &v126;
  }
  else {
    std::locale v106 = v126.__locale_;
  }
  if ((v128 & 0x80u) == 0) {
    uint64_t v107 = v128;
  }
  else {
    uint64_t v107 = v127;
  }
  unsigned __int8 v108 = sub_216779180(v105, (uint64_t)v106, v107);
  std::ios_base::getloc((const std::ios_base *)((char *)v108 + *(void *)(*v108 - 24)));
  uint64_t v109 = std::locale::use_facet(&v129, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v109->__vftable[2].~facet_0)(v109, 10);
  std::locale::~locale(&v129);
  std::ostream::put();
  std::ostream::flush();
  if ((char)v128 < 0) {
    operator delete(v126.__locale_);
  }
  if ((char)v133 < 0) {
    operator delete(v131);
  }
  long long v110 = v125;
  *uint64_t v2 = *(_OWORD *)__p;
  v2[1] = v110;
  sub_2169C56DC((uint64_t)&v130, (uint64_t)v2, v3);
  if ((v133 & 0x80u) == 0) {
    uint64_t v111 = &v131;
  }
  else {
    uint64_t v111 = v131;
  }
  if ((v133 & 0x80u) == 0) {
    uint64_t v112 = v133;
  }
  else {
    uint64_t v112 = v132;
  }
  v113 = (void *)MEMORY[0x263F8C0F8];
  v114 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v111, v112);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v114, (uint64_t)__p, 1);
  uint64_t v115 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v115, (uint64_t)__p, 1);
  v116 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v116, (uint64_t)__p, 1);
  uint64_t v117 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  uint64_t v118 = sub_216779180(v117, (uint64_t)__p, 1);
  v119 = sub_216779180(v118, (uint64_t)" success ", 9);
  sub_216A46A3C(__p);
  if ((SBYTE7(v125) & 0x80u) == 0) {
    long long v120 = __p;
  }
  else {
    long long v120 = (void **)__p[0];
  }
  if ((SBYTE7(v125) & 0x80u) == 0) {
    uint64_t v121 = BYTE7(v125);
  }
  else {
    uint64_t v121 = (uint64_t)__p[1];
  }
  uint64_t v122 = sub_216779180(v119, (uint64_t)v120, v121);
  sub_216779180(v122, (uint64_t)"; next ", 7);
  if (SBYTE7(v125) < 0) {
    operator delete(__p[0]);
  }
  if ((char)v133 < 0) {
    operator delete(v131);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v113 + *(void *)(*v113 - 24)));
  uint64_t v123 = std::locale::use_facet(&v130, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v123->__vftable[2].~facet_0)(v123, 10);
  std::locale::~locale(&v130);
  std::ostream::put();
  std::ostream::flush();
  return 1;
}

void sub_216A46398(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, long long a9, long long a10, std::locale a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, std::locale a17, std::locale a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0) {
    operator delete(__p);
  }
  _OWORD *v26 = a9;
  v26[1] = a10;
  _Unwind_Resume(exception_object);
}

BOOL sub_216A464BC(uint64_t a1)
{
  uint64_t v2 = a1 + 8;
  uint64_t v3 = (long long *)(a1 + 48);
  sub_2169C56DC((uint64_t)&v47, a1 + 8, (long long *)(a1 + 48));
  if ((v50 & 0x80u) == 0) {
    unint64_t v4 = &v48;
  }
  else {
    unint64_t v4 = v48;
  }
  if ((v50 & 0x80u) == 0) {
    uint64_t v5 = v50;
  }
  else {
    uint64_t v5 = v49;
  }
  uint64_t v6 = (void *)MEMORY[0x263F8C0F8];
  uint64_t v7 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v4, v5);
  LOBYTE(__p) = 58;
  sub_216779180(v7, (uint64_t)&__p, 1);
  uint64_t v8 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 58;
  sub_216779180(v8, (uint64_t)&__p, 1);
  uint64_t v9 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 40;
  sub_216779180(v9, (uint64_t)&__p, 1);
  uint64_t v10 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 41;
  unint64_t v11 = sub_216779180(v10, (uint64_t)&__p, 1);
  uint64_t v12 = sub_216779180(v11, (uint64_t)"  start  ", 9);
  sub_216A46C48(&__p);
  if ((v46 & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = __p;
  }
  if ((v46 & 0x80u) == 0) {
    uint64_t v14 = v46;
  }
  else {
    uint64_t v14 = v45;
  }
  long long v15 = sub_216779180(v12, (uint64_t)p_p, v14);
  sub_216779180(v15, (uint64_t)"; current ", 10);
  if ((char)v46 < 0) {
    operator delete(__p);
  }
  if ((char)v50 < 0) {
    operator delete(v48);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v6 + *(void *)(*v6 - 24)));
  uint64_t v16 = std::locale::use_facet(&v47, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v16->__vftable[2].~facet_0)(v16, 10);
  std::locale::~locale(&v47);
  std::ostream::put();
  std::ostream::flush();
  BOOL v17 = sub_216A46CFC((void *)a1);
  if (v17)
  {
    sub_2169C56DC((uint64_t)&v47, v2, v3);
    if ((v50 & 0x80u) == 0) {
      std::locale v18 = &v48;
    }
    else {
      std::locale v18 = v48;
    }
    if ((v50 & 0x80u) == 0) {
      uint64_t v19 = v50;
    }
    else {
      uint64_t v19 = v49;
    }
    unsigned __int8 v20 = (void *)MEMORY[0x263F8C0F8];
    uint64_t v21 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v18, v19);
    LOBYTE(__p) = 58;
    sub_216779180(v21, (uint64_t)&__p, 1);
    char v22 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 58;
    sub_216779180(v22, (uint64_t)&__p, 1);
    uint64_t v23 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 40;
    sub_216779180(v23, (uint64_t)&__p, 1);
    uint64_t v24 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 41;
    unint64_t v25 = sub_216779180(v24, (uint64_t)&__p, 1);
    uint64_t v26 = sub_216779180(v25, (uint64_t)" success ", 9);
    sub_216A46C48(&__p);
    if ((v46 & 0x80u) == 0) {
      uint64_t v27 = &__p;
    }
    else {
      uint64_t v27 = __p;
    }
    if ((v46 & 0x80u) == 0) {
      uint64_t v28 = v46;
    }
    else {
      uint64_t v28 = v45;
    }
    uint64_t v29 = sub_216779180(v26, (uint64_t)v27, v28);
    sub_216779180(v29, (uint64_t)"; next ", 7);
    if ((char)v46 < 0) {
      operator delete(__p);
    }
    if ((char)v50 < 0) {
      operator delete(v48);
    }
    sub_216A3AB00(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v20 + *(void *)(*v20 - 24)));
    uint64_t v30 = std::locale::use_facet(&v47, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v30->__vftable[2].~facet_0)(v30, 10);
    std::locale::~locale(&v47);
    std::ostream::put();
    std::ostream::flush();
  }
  else
  {
    sub_2169C56DC((uint64_t)&v47, v2, v3);
    if ((v50 & 0x80u) == 0) {
      uint64_t v31 = &v48;
    }
    else {
      uint64_t v31 = v48;
    }
    if ((v50 & 0x80u) == 0) {
      uint64_t v32 = v50;
    }
    else {
      uint64_t v32 = v49;
    }
    long long v33 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v31, v32);
    LOBYTE(__p) = 58;
    sub_216779180(v33, (uint64_t)&__p, 1);
    uint64_t v34 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 58;
    sub_216779180(v34, (uint64_t)&__p, 1);
    long long v35 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 40;
    sub_216779180(v35, (uint64_t)&__p, 1);
    uint64_t v36 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 41;
    uint64_t v37 = sub_216779180(v36, (uint64_t)&__p, 1);
    uint64_t v38 = sub_216779180(v37, (uint64_t)" failure ", 9);
    sub_216A46C48(&__p);
    if ((v46 & 0x80u) == 0) {
      uint64_t v39 = &__p;
    }
    else {
      uint64_t v39 = __p;
    }
    if ((v46 & 0x80u) == 0) {
      uint64_t v40 = v46;
    }
    else {
      uint64_t v40 = v45;
    }
    uint64_t v41 = sub_216779180(v38, (uint64_t)v39, v40);
    std::ios_base::getloc((const std::ios_base *)((char *)v41 + *(void *)(*v41 - 24)));
    uint64_t v42 = std::locale::use_facet(&v51, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v42->__vftable[2].~facet_0)(v42, 10);
    std::locale::~locale(&v51);
    std::ostream::put();
    std::ostream::flush();
    if ((char)v46 < 0) {
      operator delete(__p);
    }
    if ((char)v50 < 0) {
      operator delete(v48);
    }
  }
  return v17;
}

void sub_216A469C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, std::locale a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A46A3C(void *a1@<X8>)
{
  uint64_t v2 = __cxa_demangle((const char *)((unint64_t)"N3tao21PXR_INTERNAL_NS_pegtl6not_atIJNS0_3sorIJN32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_113VariableStartENS0_5ascii3oneIJLc34EEEEEEEEEE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N3tao21PXR_INTERNAL_NS_pegtl6not_atIJNS0_3sorIJN32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_113VariableStartENS0_5ascii3oneIJLc34EEEEEEEEEE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A46AD4(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

void sub_216A46AE8(void *a1@<X8>)
{
  uint64_t v2 = __cxa_demangle((const char *)((unint64_t)"N3tao21PXR_INTERNAL_NS_pegtl3sorIJN32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_113VariableStartENS0_5ascii3oneIJLc34EEEEEEE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N3tao21PXR_INTERNAL_NS_pegtl3sorIJN32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_113VariableStartENS0_5ascii3oneIJLc34EEEEEEE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A46B80(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

void sub_216A46B94(void *a1@<X8>)
{
  uint64_t v2 = __cxa_demangle((const char *)(0x800000021746AC0BLL & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)(0x800000021746AC0BLL & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A46C34(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

void sub_216A46C48(void *a1@<X8>)
{
  uint64_t v2 = __cxa_demangle((const char *)(0x800000021746AC3CLL & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)(0x800000021746AC3CLL & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A46CE8(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

BOOL sub_216A46CFC(void *a1)
{
  uint64_t v1 = (unsigned char *)a1[1];
  uint64_t v2 = (unsigned char *)a1[5];
  if (v1 != v2)
  {
    if (*v1 == 10)
    {
      uint64_t v3 = 0;
      ++a1[3];
    }
    else
    {
      uint64_t v3 = a1[4] + 1;
    }
    a1[4] = v3;
    uint64_t v4 = a1[2] + 1;
    a1[1] = v1 + 1;
    a1[2] = v4;
  }
  return v1 != v2;
}

void sub_216A46D54(char **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = (uint64_t *)sub_216A40A10(a3);
  sub_21682E90C(__p, v4, *(char **)(a2 + 8), *(void *)(a2 + 8) - (void)v4);
  char v22 = 0;
  unint64_t v6 = v5[2];
  unint64_t v7 = v5[3];
  if (v6 >= v7)
  {
    uint64_t v9 = v5[1];
    uint64_t v10 = (uint64_t)(v6 - v9) >> 5;
    unint64_t v11 = v10 + 1;
    if ((unint64_t)(v10 + 1) >> 59) {
      sub_21677CB10();
    }
    uint64_t v12 = v7 - v9;
    if (v12 >> 4 > v11) {
      unint64_t v11 = v12 >> 4;
    }
    if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFE0) {
      unint64_t v13 = 0x7FFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v13 = v11;
    }
    v23[4] = v5 + 3;
    uint64_t v14 = (char *)sub_2168707F4((uint64_t)(v5 + 3), v13);
    long long v15 = &v14[32 * v10];
    v23[0] = v14;
    v23[1] = v15;
    v23[3] = &v14[32 * v16];
    long long v17 = *(_OWORD *)__p;
    *((void *)v15 + 2) = v21;
    *(_OWORD *)long long v15 = v17;
    __p[1] = 0;
    uint64_t v21 = 0;
    __p[0] = 0;
    v15[24] = v22;
    v23[2] = v15 + 32;
    sub_216A43574(v5 + 1, v23);
    uint64_t v18 = v5[2];
    sub_216870958((uint64_t)v23);
    int v19 = SHIBYTE(v21);
    v5[2] = v18;
    if (v19 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    long long v8 = *(_OWORD *)__p;
    *(void *)(v6 + 16) = v21;
    *(_OWORD *)unint64_t v6 = v8;
    *(unsigned char *)(v6 + 24) = v22;
    v5[2] = v6 + 32;
  }
}

void sub_216A46E98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, char a17)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A46EC4(void *a1@<X8>)
{
  uint64_t v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_115QuotedStringEndILc34EEE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_115QuotedStringEndILc34EEE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A46F5C(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

void sub_216A46F70(uint64_t a1)
{
  sub_216779094(&v2, "Missing ending '\"'");
  sub_216A3AD78(a1, &v2);
}

void sub_216A46FA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A46FC4(void *a1@<X8>)
{
  std::string v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_112QuotedStringILc39EEE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_112QuotedStringILc39EEE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A4705C(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

void sub_216A47070(void *a1@<X8>)
{
  std::string v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_117QuotedStringStartILc39EEE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_117QuotedStringStartILc39EEE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A47108(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_216A4711C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (_OWORD *)(a1 + 8);
  uint64_t v4 = (long long *)(a1 + 48);
  sub_2169C56DC((uint64_t)v195, a1 + 8, (long long *)(a1 + 48));
  if ((v198 & 0x80u) == 0) {
    uint64_t v5 = &v196[1];
  }
  else {
    uint64_t v5 = (void **)v196[1];
  }
  if ((v198 & 0x80u) == 0) {
    uint64_t v6 = v198;
  }
  else {
    uint64_t v6 = v197;
  }
  unint64_t v7 = (void *)MEMORY[0x263F8C0F8];
  long long v8 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v5, v6);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v8, (uint64_t)__p, 1);
  uint64_t v9 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v9, (uint64_t)__p, 1);
  uint64_t v10 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v10, (uint64_t)__p, 1);
  unint64_t v11 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  uint64_t v12 = sub_216779180(v11, (uint64_t)__p, 1);
  unint64_t v13 = sub_216779180(v12, (uint64_t)"  start  ", 9);
  sub_216A4897C(__p);
  if ((SBYTE7(v189) & 0x80u) == 0) {
    uint64_t v14 = __p;
  }
  else {
    uint64_t v14 = (void **)__p[0];
  }
  if ((SBYTE7(v189) & 0x80u) == 0) {
    uint64_t v15 = BYTE7(v189);
  }
  else {
    uint64_t v15 = (uint64_t)__p[1];
  }
  uint64_t v16 = sub_216779180(v13, (uint64_t)v14, v15);
  sub_216779180(v16, (uint64_t)"; current ", 10);
  if (SBYTE7(v189) < 0) {
    operator delete(__p[0]);
  }
  if ((char)v198 < 0) {
    operator delete(v196[1]);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v7 + *(void *)(*v7 - 24)));
  long long v17 = std::locale::use_facet(v195, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v17->__vftable[2].~facet_0)(v17, 10);
  std::locale::~locale(v195);
  std::ostream::put();
  uint64_t v18 = (void *)MEMORY[0x263F8C0F8];
  std::ostream::flush();
  int v19 = (std::locale::id *)MEMORY[0x263F8C108];
  while (1)
  {
    sub_2169C56DC((uint64_t)v195, (uint64_t)v3, v4);
    if ((v198 & 0x80u) == 0) {
      unsigned __int8 v20 = &v196[1];
    }
    else {
      unsigned __int8 v20 = (void **)v196[1];
    }
    if ((v198 & 0x80u) == 0) {
      uint64_t v21 = v198;
    }
    else {
      uint64_t v21 = v197;
    }
    char v22 = sub_216779180(v18, (uint64_t)v20, v21);
    LOBYTE(__p[0]) = 58;
    sub_216779180(v22, (uint64_t)__p, 1);
    uint64_t v23 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 58;
    sub_216779180(v23, (uint64_t)__p, 1);
    uint64_t v24 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 40;
    sub_216779180(v24, (uint64_t)__p, 1);
    unint64_t v25 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 41;
    uint64_t v26 = sub_216779180(v25, (uint64_t)__p, 1);
    uint64_t v27 = sub_216779180(v26, (uint64_t)"  start  ", 9);
    sub_216A48A28(__p);
    if ((SBYTE7(v189) & 0x80u) == 0) {
      uint64_t v28 = __p;
    }
    else {
      uint64_t v28 = (void **)__p[0];
    }
    if ((SBYTE7(v189) & 0x80u) == 0) {
      uint64_t v29 = BYTE7(v189);
    }
    else {
      uint64_t v29 = (uint64_t)__p[1];
    }
    uint64_t v30 = sub_216779180(v27, (uint64_t)v28, v29);
    sub_216779180(v30, (uint64_t)"; current ", 10);
    if (SBYTE7(v189) < 0) {
      operator delete(__p[0]);
    }
    if ((char)v198 < 0) {
      operator delete(v196[1]);
    }
    sub_216A3AB00(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v18 + *(void *)(*v18 - 24)));
    uint64_t v31 = std::locale::use_facet(v195, v19);
    ((void (*)(const std::locale::facet *, uint64_t))v31->__vftable[2].~facet_0)(v31, 10);
    std::locale::~locale(v195);
    std::ostream::put();
    std::ostream::flush();
    if ((sub_216A425D8(a1, a2) & 1) == 0) {
      break;
    }
LABEL_128:
    sub_2169C56DC((uint64_t)v195, (uint64_t)v3, v4);
    if ((v198 & 0x80u) == 0) {
      uint64_t v96 = &v196[1];
    }
    else {
      uint64_t v96 = (void **)v196[1];
    }
    if ((v198 & 0x80u) == 0) {
      uint64_t v97 = v198;
    }
    else {
      uint64_t v97 = v197;
    }
    long long v98 = sub_216779180(v18, (uint64_t)v96, v97);
    LOBYTE(__p[0]) = 58;
    sub_216779180(v98, (uint64_t)__p, 1);
    uint64_t v99 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 58;
    sub_216779180(v99, (uint64_t)__p, 1);
    uint64_t v100 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 40;
    sub_216779180(v100, (uint64_t)__p, 1);
    long long v101 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 41;
    uint64_t v102 = sub_216779180(v101, (uint64_t)__p, 1);
    uint64_t v103 = sub_216779180(v102, (uint64_t)" success ", 9);
    sub_216A48A28(__p);
    if ((SBYTE7(v189) & 0x80u) == 0) {
      uint64_t v104 = __p;
    }
    else {
      uint64_t v104 = (void **)__p[0];
    }
    if ((SBYTE7(v189) & 0x80u) == 0) {
      uint64_t v105 = BYTE7(v189);
    }
    else {
      uint64_t v105 = (uint64_t)__p[1];
    }
    std::locale v106 = sub_216779180(v103, (uint64_t)v104, v105);
    sub_216779180(v106, (uint64_t)"; next ", 7);
    if (SBYTE7(v189) < 0) {
      operator delete(__p[0]);
    }
    if ((char)v198 < 0) {
      operator delete(v196[1]);
    }
    sub_216A3AB00(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v18 + *(void *)(*v18 - 24)));
    uint64_t v107 = std::locale::use_facet(v195, v19);
    ((void (*)(const std::locale::facet *, uint64_t))v107->__vftable[2].~facet_0)(v107, 10);
    std::locale::~locale(v195);
    std::ostream::put();
    std::ostream::flush();
  }
  long long v32 = v3[1];
  *(_OWORD *)std::string __p = *v3;
  long long v189 = v32;
  v190 = v3;
  sub_2169C56DC((uint64_t)v195, (uint64_t)v3, v4);
  if ((v198 & 0x80u) == 0) {
    long long v33 = &v196[1];
  }
  else {
    long long v33 = (void **)v196[1];
  }
  if ((v198 & 0x80u) == 0) {
    uint64_t v34 = v198;
  }
  else {
    uint64_t v34 = v197;
  }
  long long v35 = sub_216779180(v18, (uint64_t)v33, v34);
  LOBYTE(v191.__locale_) = 58;
  sub_216779180(v35, (uint64_t)&v191, 1);
  uint64_t v36 = (void *)std::ostream::operator<<();
  LOBYTE(v191.__locale_) = 58;
  sub_216779180(v36, (uint64_t)&v191, 1);
  uint64_t v37 = (void *)std::ostream::operator<<();
  LOBYTE(v191.__locale_) = 40;
  sub_216779180(v37, (uint64_t)&v191, 1);
  uint64_t v38 = (void *)std::ostream::operator<<();
  LOBYTE(v191.__locale_) = 41;
  uint64_t v39 = sub_216779180(v38, (uint64_t)&v191, 1);
  uint64_t v40 = sub_216779180(v39, (uint64_t)"  start  ", 9);
  sub_216A48AD4(&v191);
  if ((v193 & 0x80u) == 0) {
    locale = &v191;
  }
  else {
    locale = v191.__locale_;
  }
  if ((v193 & 0x80u) == 0) {
    uint64_t v42 = v193;
  }
  else {
    uint64_t v42 = v192;
  }
  uint64_t v43 = sub_216779180(v40, (uint64_t)locale, v42);
  sub_216779180(v43, (uint64_t)"; current ", 10);
  if ((char)v193 < 0) {
    operator delete(v191.__locale_);
  }
  if ((char)v198 < 0) {
    operator delete(v196[1]);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v18 + *(void *)(*v18 - 24)));
  uint64_t v44 = std::locale::use_facet(v195, v19);
  ((void (*)(const std::locale::facet *, uint64_t))v44->__vftable[2].~facet_0)(v44, 10);
  std::locale::~locale(v195);
  std::ostream::put();
  std::ostream::flush();
  sub_216A48B80(a1);
  if ((sub_216A4904C(a1) & 1) == 0)
  {
    sub_216A49D2C(a1);
    if (!sub_216A4A1F8(a1) || !sub_216A464BC(a1))
    {
      int v47 = 0;
      goto LABEL_62;
    }
    sub_216A49F3C(a1);
  }
  while (1)
  {
    do
    {
      sub_216A48D90(a1);
      sub_216A48B80(a1);
    }
    while ((sub_216A4904C(a1) & 1) != 0);
    sub_216A49D2C(a1);
    long long v45 = v3[1];
    *(_OWORD *)&v195[0].__locale_ = *v3;
    *(_OWORD *)v196 = v45;
    if (!sub_216A4A1F8(a1) || !sub_216A464BC(a1)) {
      break;
    }
    sub_216A49F3C(a1);
  }
  long long v46 = *(_OWORD *)v196;
  *uint64_t v3 = *(_OWORD *)&v195[0].__locale_;
  v3[1] = v46;
  int v47 = 1;
LABEL_62:
  sub_2169C56DC((uint64_t)v195, (uint64_t)v3, v4);
  if ((v198 & 0x80u) == 0) {
    std::locale v48 = &v196[1];
  }
  else {
    std::locale v48 = (void **)v196[1];
  }
  if ((v198 & 0x80u) == 0) {
    uint64_t v49 = v198;
  }
  else {
    uint64_t v49 = v197;
  }
  unsigned __int8 v50 = sub_216779180(v18, (uint64_t)v48, v49);
  LOBYTE(v191.__locale_) = 58;
  sub_216779180(v50, (uint64_t)&v191, 1);
  std::locale v51 = (void *)std::ostream::operator<<();
  LOBYTE(v191.__locale_) = 58;
  sub_216779180(v51, (uint64_t)&v191, 1);
  std::locale v52 = (void *)std::ostream::operator<<();
  LOBYTE(v191.__locale_) = 40;
  sub_216779180(v52, (uint64_t)&v191, 1);
  std::locale v53 = (void *)std::ostream::operator<<();
  LOBYTE(v191.__locale_) = 41;
  uint64_t v54 = sub_216779180(v53, (uint64_t)&v191, 1);
  long long v55 = sub_216779180(v54, (uint64_t)" failure ", 9);
  sub_216A4A14C(&v191);
  if ((v193 & 0x80u) == 0) {
    uint64_t v56 = &v191;
  }
  else {
    uint64_t v56 = v191.__locale_;
  }
  if ((v193 & 0x80u) == 0) {
    uint64_t v57 = v193;
  }
  else {
    uint64_t v57 = v192;
  }
  uint64_t v58 = sub_216779180(v55, (uint64_t)v56, v57);
  std::ios_base::getloc((const std::ios_base *)((char *)v58 + *(void *)(*v58 - 24)));
  uint64_t v59 = std::locale::use_facet(&v194, v19);
  ((void (*)(const std::locale::facet *, uint64_t))v59->__vftable[2].~facet_0)(v59, 10);
  std::locale::~locale(&v194);
  std::ostream::put();
  std::ostream::flush();
  if ((char)v193 < 0) {
    operator delete(v191.__locale_);
  }
  if ((char)v198 < 0) {
    operator delete(v196[1]);
  }
  sub_2169C56DC((uint64_t)v195, (uint64_t)v3, v4);
  if ((v198 & 0x80u) == 0) {
    uint64_t v60 = &v196[1];
  }
  else {
    uint64_t v60 = (void **)v196[1];
  }
  if ((v198 & 0x80u) == 0) {
    uint64_t v61 = v198;
  }
  else {
    uint64_t v61 = v197;
  }
  long long v62 = sub_216779180(v18, (uint64_t)v60, v61);
  LOBYTE(v191.__locale_) = 58;
  sub_216779180(v62, (uint64_t)&v191, 1);
  char v63 = (void *)std::ostream::operator<<();
  LOBYTE(v191.__locale_) = 58;
  sub_216779180(v63, (uint64_t)&v191, 1);
  long long v64 = (void *)std::ostream::operator<<();
  LOBYTE(v191.__locale_) = 40;
  sub_216779180(v64, (uint64_t)&v191, 1);
  uint64_t v65 = (void *)std::ostream::operator<<();
  LOBYTE(v191.__locale_) = 41;
  uint64_t v66 = sub_216779180(v65, (uint64_t)&v191, 1);
  uint64_t v67 = sub_216779180(v66, (uint64_t)" failure ", 9);
  sub_216A48FA0(&v191);
  if ((v193 & 0x80u) == 0) {
    uint64_t v68 = &v191;
  }
  else {
    uint64_t v68 = v191.__locale_;
  }
  if ((v193 & 0x80u) == 0) {
    uint64_t v69 = v193;
  }
  else {
    uint64_t v69 = v192;
  }
  long long v70 = sub_216779180(v67, (uint64_t)v68, v69);
  std::ios_base::getloc((const std::ios_base *)((char *)v70 + *(void *)(*v70 - 24)));
  uint64_t v71 = std::locale::use_facet(&v194, v19);
  ((void (*)(const std::locale::facet *, uint64_t))v71->__vftable[2].~facet_0)(v71, 10);
  std::locale::~locale(&v194);
  std::ostream::put();
  std::ostream::flush();
  if ((char)v193 < 0) {
    operator delete(v191.__locale_);
  }
  if ((char)v198 < 0) {
    operator delete(v196[1]);
  }
  if (v47)
  {
    sub_2169C56DC((uint64_t)v195, (uint64_t)v3, v4);
    if ((v198 & 0x80u) == 0) {
      long long v72 = &v196[1];
    }
    else {
      long long v72 = (void **)v196[1];
    }
    if ((v198 & 0x80u) == 0) {
      uint64_t v73 = v198;
    }
    else {
      uint64_t v73 = v197;
    }
    uint64_t v74 = sub_216779180(v18, (uint64_t)v72, v73);
    LOBYTE(v191.__locale_) = 58;
    sub_216779180(v74, (uint64_t)&v191, 1);
    uint64_t v75 = (void *)std::ostream::operator<<();
    LOBYTE(v191.__locale_) = 58;
    sub_216779180(v75, (uint64_t)&v191, 1);
    uint64_t v76 = (void *)std::ostream::operator<<();
    LOBYTE(v191.__locale_) = 40;
    sub_216779180(v76, (uint64_t)&v191, 1);
    uint64_t v77 = (void *)std::ostream::operator<<();
    LOBYTE(v191.__locale_) = 41;
    uint64_t v78 = sub_216779180(v77, (uint64_t)&v191, 1);
    uint64_t v79 = sub_216779180(v78, (uint64_t)"  apply  ", 9);
    sub_216A48AD4(&v191);
    if ((v193 & 0x80u) == 0) {
      uint64_t v80 = &v191;
    }
    else {
      uint64_t v80 = v191.__locale_;
    }
    if ((v193 & 0x80u) == 0) {
      uint64_t v81 = v193;
    }
    else {
      uint64_t v81 = v192;
    }
    uint64_t v82 = sub_216779180(v79, (uint64_t)v80, v81);
    std::ios_base::getloc((const std::ios_base *)((char *)v82 + *(void *)(*v82 - 24)));
    uint64_t v83 = std::locale::use_facet(&v194, v19);
    ((void (*)(const std::locale::facet *, uint64_t))v83->__vftable[2].~facet_0)(v83, 10);
    std::locale::~locale(&v194);
    std::ostream::put();
    std::ostream::flush();
    if ((char)v193 < 0) {
      operator delete(v191.__locale_);
    }
    if ((char)v198 < 0) {
      operator delete(v196[1]);
    }
    sub_216A4B410((char **)__p, a1, a2);
    sub_2169C56DC((uint64_t)v195, (uint64_t)v3, v4);
    if ((v198 & 0x80u) == 0) {
      long long v84 = &v196[1];
    }
    else {
      long long v84 = (void **)v196[1];
    }
    if ((v198 & 0x80u) == 0) {
      uint64_t v85 = v198;
    }
    else {
      uint64_t v85 = v197;
    }
    uint64_t v86 = sub_216779180(v18, (uint64_t)v84, v85);
    LOBYTE(v191.__locale_) = 58;
    sub_216779180(v86, (uint64_t)&v191, 1);
    uint64_t v87 = (void *)std::ostream::operator<<();
    LOBYTE(v191.__locale_) = 58;
    sub_216779180(v87, (uint64_t)&v191, 1);
    std::locale v88 = (void *)std::ostream::operator<<();
    LOBYTE(v191.__locale_) = 40;
    sub_216779180(v88, (uint64_t)&v191, 1);
    std::locale v89 = (void *)std::ostream::operator<<();
    LOBYTE(v191.__locale_) = 41;
    uint64_t v90 = sub_216779180(v89, (uint64_t)&v191, 1);
    uint64_t v91 = sub_216779180(v90, (uint64_t)" success ", 9);
    sub_216A48AD4(&v191);
    if ((v193 & 0x80u) == 0) {
      unsigned __int8 v92 = &v191;
    }
    else {
      unsigned __int8 v92 = v191.__locale_;
    }
    if ((v193 & 0x80u) == 0) {
      uint64_t v93 = v193;
    }
    else {
      uint64_t v93 = v192;
    }
    uint64_t v94 = sub_216779180(v91, (uint64_t)v92, v93);
    sub_216779180(v94, (uint64_t)"; next ", 7);
    if ((char)v193 < 0) {
      operator delete(v191.__locale_);
    }
    if ((char)v198 < 0) {
      operator delete(v196[1]);
    }
    sub_216A3AB00(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v18 + *(void *)(*v18 - 24)));
    uint64_t v95 = std::locale::use_facet(v195, v19);
    ((void (*)(const std::locale::facet *, uint64_t))v95->__vftable[2].~facet_0)(v95, 10);
    std::locale::~locale(v195);
    std::ostream::put();
    std::ostream::flush();
    goto LABEL_128;
  }
  sub_2169C56DC((uint64_t)v195, (uint64_t)v3, v4);
  if ((v198 & 0x80u) == 0) {
    unsigned __int8 v108 = &v196[1];
  }
  else {
    unsigned __int8 v108 = (void **)v196[1];
  }
  if ((v198 & 0x80u) == 0) {
    uint64_t v109 = v198;
  }
  else {
    uint64_t v109 = v197;
  }
  long long v110 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v108, v109);
  LOBYTE(v191.__locale_) = 58;
  sub_216779180(v110, (uint64_t)&v191, 1);
  uint64_t v111 = (void *)std::ostream::operator<<();
  LOBYTE(v191.__locale_) = 58;
  sub_216779180(v111, (uint64_t)&v191, 1);
  uint64_t v112 = (void *)std::ostream::operator<<();
  LOBYTE(v191.__locale_) = 40;
  sub_216779180(v112, (uint64_t)&v191, 1);
  v113 = (void *)std::ostream::operator<<();
  LOBYTE(v191.__locale_) = 41;
  v114 = sub_216779180(v113, (uint64_t)&v191, 1);
  uint64_t v115 = sub_216779180(v114, (uint64_t)" failure ", 9);
  sub_216A48AD4(&v191);
  if ((v193 & 0x80u) == 0) {
    v116 = &v191;
  }
  else {
    v116 = v191.__locale_;
  }
  if ((v193 & 0x80u) == 0) {
    uint64_t v117 = v193;
  }
  else {
    uint64_t v117 = v192;
  }
  uint64_t v118 = sub_216779180(v115, (uint64_t)v116, v117);
  std::ios_base::getloc((const std::ios_base *)((char *)v118 + *(void *)(*v118 - 24)));
  v119 = std::locale::use_facet(&v194, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v119->__vftable[2].~facet_0)(v119, 10);
  std::locale::~locale(&v194);
  std::ostream::put();
  std::ostream::flush();
  if ((char)v193 < 0) {
    operator delete(v191.__locale_);
  }
  if ((char)v198 < 0) {
    operator delete(v196[1]);
  }
  long long v120 = v189;
  *uint64_t v3 = *(_OWORD *)__p;
  v3[1] = v120;
  sub_2169C56DC((uint64_t)v195, (uint64_t)v3, v4);
  if ((v198 & 0x80u) == 0) {
    uint64_t v121 = &v196[1];
  }
  else {
    uint64_t v121 = (void **)v196[1];
  }
  if ((v198 & 0x80u) == 0) {
    uint64_t v122 = v198;
  }
  else {
    uint64_t v122 = v197;
  }
  uint64_t v123 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v121, v122);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v123, (uint64_t)__p, 1);
  v124 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v124, (uint64_t)__p, 1);
  long long v125 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v125, (uint64_t)__p, 1);
  std::locale v126 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  uint64_t v127 = sub_216779180(v126, (uint64_t)__p, 1);
  unsigned __int8 v128 = sub_216779180(v127, (uint64_t)" failure ", 9);
  sub_216A48A28(__p);
  if ((SBYTE7(v189) & 0x80u) == 0) {
    std::locale v129 = __p;
  }
  else {
    std::locale v129 = (void **)__p[0];
  }
  if ((SBYTE7(v189) & 0x80u) == 0) {
    uint64_t v130 = BYTE7(v189);
  }
  else {
    uint64_t v130 = (uint64_t)__p[1];
  }
  v131 = sub_216779180(v128, (uint64_t)v129, v130);
  std::ios_base::getloc((const std::ios_base *)((char *)v131 + *(void *)(*v131 - 24)));
  uint64_t v132 = std::locale::use_facet(&v191, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v132->__vftable[2].~facet_0)(v132, 10);
  std::locale::~locale(&v191);
  std::ostream::put();
  std::ostream::flush();
  if (SBYTE7(v189) < 0) {
    operator delete(__p[0]);
  }
  if ((char)v198 < 0) {
    operator delete(v196[1]);
  }
  sub_2169C56DC((uint64_t)v195, (uint64_t)v3, v4);
  if ((v198 & 0x80u) == 0) {
    unsigned __int8 v133 = &v196[1];
  }
  else {
    unsigned __int8 v133 = (void **)v196[1];
  }
  if ((v198 & 0x80u) == 0) {
    uint64_t v134 = v198;
  }
  else {
    uint64_t v134 = v197;
  }
  v135 = (void *)MEMORY[0x263F8C0F8];
  uint64_t v136 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v133, v134);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v136, (uint64_t)__p, 1);
  v137 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v137, (uint64_t)__p, 1);
  v138 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v138, (uint64_t)__p, 1);
  long long v139 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  long long v140 = sub_216779180(v139, (uint64_t)__p, 1);
  v141 = sub_216779180(v140, (uint64_t)" success ", 9);
  sub_216A4897C(__p);
  if ((SBYTE7(v189) & 0x80u) == 0) {
    long long v142 = __p;
  }
  else {
    long long v142 = (void **)__p[0];
  }
  if ((SBYTE7(v189) & 0x80u) == 0) {
    uint64_t v143 = BYTE7(v189);
  }
  else {
    uint64_t v143 = (uint64_t)__p[1];
  }
  uint64_t v144 = sub_216779180(v141, (uint64_t)v142, v143);
  sub_216779180(v144, (uint64_t)"; next ", 7);
  if (SBYTE7(v189) < 0) {
    operator delete(__p[0]);
  }
  if ((char)v198 < 0) {
    operator delete(v196[1]);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v135 + *(void *)(*v135 - 24)));
  uint64_t v145 = std::locale::use_facet(v195, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v145->__vftable[2].~facet_0)(v145, 10);
  std::locale::~locale(v195);
  std::ostream::put();
  std::ostream::flush();
  sub_2169C56DC((uint64_t)v195, (uint64_t)v3, v4);
  if ((v198 & 0x80u) == 0) {
    unsigned __int8 v146 = &v196[1];
  }
  else {
    unsigned __int8 v146 = (void **)v196[1];
  }
  if ((v198 & 0x80u) == 0) {
    uint64_t v147 = v198;
  }
  else {
    uint64_t v147 = v197;
  }
  v148 = (void *)MEMORY[0x263F8C0F8];
  v149 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v146, v147);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v149, (uint64_t)__p, 1);
  v150 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v150, (uint64_t)__p, 1);
  v151 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v151, (uint64_t)__p, 1);
  uint64_t v152 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  v153 = sub_216779180(v152, (uint64_t)__p, 1);
  v154 = sub_216779180(v153, (uint64_t)"  start  ", 9);
  sub_216A4B580(__p);
  if ((SBYTE7(v189) & 0x80u) == 0) {
    v155 = __p;
  }
  else {
    v155 = (void **)__p[0];
  }
  if ((SBYTE7(v189) & 0x80u) == 0) {
    uint64_t v156 = BYTE7(v189);
  }
  else {
    uint64_t v156 = (uint64_t)__p[1];
  }
  v157 = sub_216779180(v154, (uint64_t)v155, v156);
  sub_216779180(v157, (uint64_t)"; current ", 10);
  if (SBYTE7(v189) < 0) {
    operator delete(__p[0]);
  }
  if ((char)v198 < 0) {
    operator delete(v196[1]);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v148 + *(void *)(*v148 - 24)));
  long long v158 = std::locale::use_facet(v195, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v158->__vftable[2].~facet_0)(v158, 10);
  std::locale::~locale(v195);
  std::ostream::put();
  std::ostream::flush();
  uint64_t v159 = *(unsigned char **)(a1 + 8);
  if (*(unsigned char **)(a1 + 40) == v159 || *v159 != 39)
  {
    sub_2169C56DC((uint64_t)v195, (uint64_t)v3, v4);
    if ((v198 & 0x80u) == 0) {
      v175 = &v196[1];
    }
    else {
      v175 = (void **)v196[1];
    }
    if ((v198 & 0x80u) == 0) {
      uint64_t v176 = v198;
    }
    else {
      uint64_t v176 = v197;
    }
    v177 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v175, v176);
    LOBYTE(__p[0]) = 58;
    sub_216779180(v177, (uint64_t)__p, 1);
    v178 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 58;
    sub_216779180(v178, (uint64_t)__p, 1);
    v179 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 40;
    sub_216779180(v179, (uint64_t)__p, 1);
    v180 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 41;
    v181 = sub_216779180(v180, (uint64_t)__p, 1);
    v182 = sub_216779180(v181, (uint64_t)" failure ", 9);
    sub_216A4B580(__p);
    if ((SBYTE7(v189) & 0x80u) == 0) {
      v183 = __p;
    }
    else {
      v183 = (void **)__p[0];
    }
    if ((SBYTE7(v189) & 0x80u) == 0) {
      uint64_t v184 = BYTE7(v189);
    }
    else {
      uint64_t v184 = (uint64_t)__p[1];
    }
    v185 = sub_216779180(v182, (uint64_t)v183, v184);
    std::ios_base::getloc((const std::ios_base *)((char *)v185 + *(void *)(*v185 - 24)));
    v186 = std::locale::use_facet(&v191, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v186->__vftable[2].~facet_0)(v186, 10);
    std::locale::~locale(&v191);
    std::ostream::put();
    std::ostream::flush();
    if (SBYTE7(v189) < 0) {
      operator delete(__p[0]);
    }
    if ((char)v198 < 0) {
      operator delete(v196[1]);
    }
    sub_216A4B62C(a1);
  }
  uint64_t v160 = *(void *)(a1 + 16) + 1;
  *(void *)(a1 + 8) = v159 + 1;
  *(void *)(a1 + 16) = v160;
  ++*(void *)(a1 + 32);
  sub_2169C56DC((uint64_t)v195, (uint64_t)v3, v4);
  if ((v198 & 0x80u) == 0) {
    v161 = &v196[1];
  }
  else {
    v161 = (void **)v196[1];
  }
  if ((v198 & 0x80u) == 0) {
    uint64_t v162 = v198;
  }
  else {
    uint64_t v162 = v197;
  }
  v163 = (void *)MEMORY[0x263F8C0F8];
  uint64_t v164 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v161, v162);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v164, (uint64_t)__p, 1);
  unsigned __int8 v165 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v165, (uint64_t)__p, 1);
  std::locale v166 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v166, (uint64_t)__p, 1);
  v167 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  v168 = sub_216779180(v167, (uint64_t)__p, 1);
  uint64_t v169 = sub_216779180(v168, (uint64_t)" success ", 9);
  sub_216A4B580(__p);
  if ((SBYTE7(v189) & 0x80u) == 0) {
    long long v170 = __p;
  }
  else {
    long long v170 = (void **)__p[0];
  }
  if ((SBYTE7(v189) & 0x80u) == 0) {
    uint64_t v171 = BYTE7(v189);
  }
  else {
    uint64_t v171 = (uint64_t)__p[1];
  }
  uint64_t v172 = sub_216779180(v169, (uint64_t)v170, v171);
  sub_216779180(v172, (uint64_t)"; next ", 7);
  if (SBYTE7(v189) < 0) {
    operator delete(__p[0]);
  }
  if ((char)v198 < 0) {
    operator delete(v196[1]);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v163 + *(void *)(*v163 - 24)));
  v173 = std::locale::use_facet(v195, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v173->__vftable[2].~facet_0)(v173, 10);
  std::locale::~locale(v195);
  std::ostream::put();
  return std::ostream::flush();
}

void sub_216A487DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, long long a11, long long a12, long long __p, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,std::locale a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,std::locale a27,std::locale a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,int a33,__int16 a34,char a35,char a36)
{
  std::locale::~locale(&a21);
  if (a17 < 0) {
    operator delete((void *)__p);
  }
  if (a36 < 0) {
    operator delete(a31);
  }
  _OWORD *v36 = a11;
  v36[1] = a12;
  _Unwind_Resume(a1);
}

void sub_216A4897C(void *a1@<X8>)
{
  std::string v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_116QuotedStringBodyILc39EEE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_116QuotedStringBodyILc39EEE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A48A14(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

void sub_216A48A28(void *a1@<X8>)
{
  std::string v2 = __cxa_demangle((const char *)((unint64_t)"N3tao21PXR_INTERNAL_NS_pegtl3sorIJN32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_120QuotedStringVariableENS3_17QuotedStringCharsILc39EEEEEE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N3tao21PXR_INTERNAL_NS_pegtl3sorIJN32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_120QuotedStringVariableENS3_17QuotedStringCharsILc39EEEEEE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A48AC0(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

void sub_216A48AD4(void *a1@<X8>)
{
  std::string v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_117QuotedStringCharsILc39EEE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_117QuotedStringCharsILc39EEE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A48B6C(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_216A48B80(uint64_t a1)
{
  sub_2169C56DC((uint64_t)&v18, a1 + 8, (long long *)(a1 + 48));
  if ((v20 & 0x80u) == 0) {
    std::string v2 = v19;
  }
  else {
    std::string v2 = (void **)v19[0];
  }
  if ((v20 & 0x80u) == 0) {
    uint64_t v3 = v20;
  }
  else {
    uint64_t v3 = (uint64_t)v19[1];
  }
  uint64_t v4 = (void *)MEMORY[0x263F8C0F8];
  uint64_t v5 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v2, v3);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v5, (uint64_t)__p, 1);
  uint64_t v6 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v6, (uint64_t)__p, 1);
  unint64_t v7 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v7, (uint64_t)__p, 1);
  long long v8 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  uint64_t v9 = sub_216779180(v8, (uint64_t)__p, 1);
  uint64_t v10 = sub_216779180(v9, (uint64_t)"  start  ", 9);
  sub_216A48FA0(__p);
  if ((v17 & 0x80u) == 0) {
    unint64_t v11 = __p;
  }
  else {
    unint64_t v11 = (void **)__p[0];
  }
  if ((v17 & 0x80u) == 0) {
    uint64_t v12 = v17;
  }
  else {
    uint64_t v12 = (uint64_t)__p[1];
  }
  unint64_t v13 = sub_216779180(v10, (uint64_t)v11, v12);
  sub_216779180(v13, (uint64_t)"; current ", 10);
  if ((char)v17 < 0) {
    operator delete(__p[0]);
  }
  if ((char)v20 < 0) {
    operator delete(v19[0]);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v4 + *(void *)(*v4 - 24)));
  uint64_t v14 = std::locale::use_facet(&v18, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v14->__vftable[2].~facet_0)(v14, 10);
  std::locale::~locale(&v18);
  std::ostream::put();
  return std::ostream::flush();
}

void sub_216A48D48(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, std::locale a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_216A48D90(uint64_t a1)
{
  sub_2169C56DC((uint64_t)&v18, a1 + 8, (long long *)(a1 + 48));
  if ((v20 & 0x80u) == 0) {
    std::string v2 = v19;
  }
  else {
    std::string v2 = (void **)v19[0];
  }
  if ((v20 & 0x80u) == 0) {
    uint64_t v3 = v20;
  }
  else {
    uint64_t v3 = (uint64_t)v19[1];
  }
  uint64_t v4 = (void *)MEMORY[0x263F8C0F8];
  uint64_t v5 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v2, v3);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v5, (uint64_t)__p, 1);
  uint64_t v6 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v6, (uint64_t)__p, 1);
  unint64_t v7 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v7, (uint64_t)__p, 1);
  long long v8 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  uint64_t v9 = sub_216779180(v8, (uint64_t)__p, 1);
  uint64_t v10 = sub_216779180(v9, (uint64_t)" success ", 9);
  sub_216A48FA0(__p);
  if ((v17 & 0x80u) == 0) {
    unint64_t v11 = __p;
  }
  else {
    unint64_t v11 = (void **)__p[0];
  }
  if ((v17 & 0x80u) == 0) {
    uint64_t v12 = v17;
  }
  else {
    uint64_t v12 = (uint64_t)__p[1];
  }
  unint64_t v13 = sub_216779180(v10, (uint64_t)v11, v12);
  sub_216779180(v13, (uint64_t)"; next ", 7);
  if ((char)v17 < 0) {
    operator delete(__p[0]);
  }
  if ((char)v20 < 0) {
    operator delete(v19[0]);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v4 + *(void *)(*v4 - 24)));
  uint64_t v14 = std::locale::use_facet(&v18, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v14->__vftable[2].~facet_0)(v14, 10);
  std::locale::~locale(&v18);
  std::ostream::put();
  return std::ostream::flush();
}

void sub_216A48F58(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, std::locale a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A48FA0(void *a1@<X8>)
{
  std::string v2 = __cxa_demangle((const char *)((unint64_t)"N3tao21PXR_INTERNAL_NS_pegtl3sorIJNS0_3seqIJNS0_5ascii3oneIJLc92EEEEN32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_123QuotedStringEscapedCharILc39EEEEEENS2_IJNS0_6not_atIJNS1_IJNS7_13VariableStartENS4_IJLc39EEEEEEEEEENS3_3anyEEEEEEE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N3tao21PXR_INTERNAL_NS_pegtl3sorIJNS0_3seqIJNS0_5ascii3oneIJLc92EEEEN32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_123QuotedStringEscapedCharILc39EEEEEENS2_IJNS0_6not_atIJNS1_IJNS7_13VariableStartENS4_IJLc39EEEEEEEEEENS3_3anyEEEEEEE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A49038(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_216A4904C(uint64_t a1)
{
  std::string v2 = (_OWORD *)(a1 + 8);
  uint64_t v3 = (long long *)(a1 + 48);
  sub_2169C56DC((uint64_t)&v89, a1 + 8, (long long *)(a1 + 48));
  if ((v92 & 0x80u) == 0) {
    uint64_t v4 = &v90;
  }
  else {
    uint64_t v4 = v90;
  }
  if ((v92 & 0x80u) == 0) {
    uint64_t v5 = v92;
  }
  else {
    uint64_t v5 = v91;
  }
  uint64_t v6 = (void *)MEMORY[0x263F8C0F8];
  unint64_t v7 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v4, v5);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v7, (uint64_t)__p, 1);
  long long v8 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v8, (uint64_t)__p, 1);
  uint64_t v9 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v9, (uint64_t)__p, 1);
  uint64_t v10 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  unint64_t v11 = sub_216779180(v10, (uint64_t)__p, 1);
  uint64_t v12 = sub_216779180(v11, (uint64_t)"  start  ", 9);
  sub_216A49B34(__p);
  if ((SBYTE7(v84) & 0x80u) == 0) {
    unint64_t v13 = __p;
  }
  else {
    unint64_t v13 = (void **)__p[0];
  }
  if ((SBYTE7(v84) & 0x80u) == 0) {
    uint64_t v14 = BYTE7(v84);
  }
  else {
    uint64_t v14 = (uint64_t)__p[1];
  }
  uint64_t v15 = sub_216779180(v12, (uint64_t)v13, v14);
  sub_216779180(v15, (uint64_t)"; current ", 10);
  if (SBYTE7(v84) < 0) {
    operator delete(__p[0]);
  }
  if ((char)v92 < 0) {
    operator delete(v90);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v6 + *(void *)(*v6 - 24)));
  uint64_t v16 = std::locale::use_facet(&v89, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v16->__vftable[2].~facet_0)(v16, 10);
  std::locale::~locale(&v89);
  std::ostream::put();
  std::ostream::flush();
  long long v17 = v2[1];
  *(_OWORD *)std::string __p = *v2;
  long long v84 = v17;
  if (sub_216A44834(a1))
  {
    sub_2169C56DC((uint64_t)&v89, (uint64_t)v2, v3);
    if ((v92 & 0x80u) == 0) {
      std::locale v18 = &v90;
    }
    else {
      std::locale v18 = v90;
    }
    if ((v92 & 0x80u) == 0) {
      uint64_t v19 = v92;
    }
    else {
      uint64_t v19 = v91;
    }
    unsigned __int8 v20 = (void *)MEMORY[0x263F8C0F8];
    uint64_t v21 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v18, v19);
    LOBYTE(v85.__locale_) = 58;
    sub_216779180(v21, (uint64_t)&v85, 1);
    char v22 = (void *)std::ostream::operator<<();
    LOBYTE(v85.__locale_) = 58;
    sub_216779180(v22, (uint64_t)&v85, 1);
    uint64_t v23 = (void *)std::ostream::operator<<();
    LOBYTE(v85.__locale_) = 40;
    sub_216779180(v23, (uint64_t)&v85, 1);
    uint64_t v24 = (void *)std::ostream::operator<<();
    LOBYTE(v85.__locale_) = 41;
    unint64_t v25 = sub_216779180(v24, (uint64_t)&v85, 1);
    uint64_t v26 = sub_216779180(v25, (uint64_t)"  start  ", 9);
    sub_216A49BE0(&v85);
    if ((v87 & 0x80u) == 0) {
      locale = &v85;
    }
    else {
      locale = v85.__locale_;
    }
    if ((v87 & 0x80u) == 0) {
      uint64_t v28 = v87;
    }
    else {
      uint64_t v28 = v86;
    }
    uint64_t v29 = sub_216779180(v26, (uint64_t)locale, v28);
    sub_216779180(v29, (uint64_t)"; current ", 10);
    if ((char)v87 < 0) {
      operator delete(v85.__locale_);
    }
    if ((char)v92 < 0) {
      operator delete(v90);
    }
    sub_216A3AB00(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v20 + *(void *)(*v20 - 24)));
    uint64_t v30 = std::locale::use_facet(&v89, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v30->__vftable[2].~facet_0)(v30, 10);
    std::locale::~locale(&v89);
    std::ostream::put();
    std::ostream::flush();
    if (sub_216A49C8C((void *)a1))
    {
      sub_2169C56DC((uint64_t)&v89, (uint64_t)v2, v3);
      if ((v92 & 0x80u) == 0) {
        uint64_t v31 = &v90;
      }
      else {
        uint64_t v31 = v90;
      }
      if ((v92 & 0x80u) == 0) {
        uint64_t v32 = v92;
      }
      else {
        uint64_t v32 = v91;
      }
      long long v33 = (void *)MEMORY[0x263F8C0F8];
      uint64_t v34 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v31, v32);
      LOBYTE(v85.__locale_) = 58;
      sub_216779180(v34, (uint64_t)&v85, 1);
      long long v35 = (void *)std::ostream::operator<<();
      LOBYTE(v85.__locale_) = 58;
      sub_216779180(v35, (uint64_t)&v85, 1);
      uint64_t v36 = (void *)std::ostream::operator<<();
      LOBYTE(v85.__locale_) = 40;
      sub_216779180(v36, (uint64_t)&v85, 1);
      uint64_t v37 = (void *)std::ostream::operator<<();
      LOBYTE(v85.__locale_) = 41;
      uint64_t v38 = sub_216779180(v37, (uint64_t)&v85, 1);
      uint64_t v39 = sub_216779180(v38, (uint64_t)" success ", 9);
      sub_216A49BE0(&v85);
      if ((v87 & 0x80u) == 0) {
        uint64_t v40 = &v85;
      }
      else {
        uint64_t v40 = v85.__locale_;
      }
      if ((v87 & 0x80u) == 0) {
        uint64_t v41 = v87;
      }
      else {
        uint64_t v41 = v86;
      }
      uint64_t v42 = sub_216779180(v39, (uint64_t)v40, v41);
      sub_216779180(v42, (uint64_t)"; next ", 7);
      if ((char)v87 < 0) {
        operator delete(v85.__locale_);
      }
      if ((char)v92 < 0) {
        operator delete(v90);
      }
      sub_216A3AB00(a1);
      std::ios_base::getloc((const std::ios_base *)((char *)v33 + *(void *)(*v33 - 24)));
      uint64_t v43 = std::locale::use_facet(&v89, MEMORY[0x263F8C108]);
      ((void (*)(const std::locale::facet *, uint64_t))v43->__vftable[2].~facet_0)(v43, 10);
      std::locale::~locale(&v89);
      std::ostream::put();
      std::ostream::flush();
      sub_2169C56DC((uint64_t)&v89, (uint64_t)v2, v3);
      if ((v92 & 0x80u) == 0) {
        uint64_t v44 = &v90;
      }
      else {
        uint64_t v44 = v90;
      }
      if ((v92 & 0x80u) == 0) {
        uint64_t v45 = v92;
      }
      else {
        uint64_t v45 = v91;
      }
      long long v46 = (void *)MEMORY[0x263F8C0F8];
      int v47 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v44, v45);
      LOBYTE(__p[0]) = 58;
      sub_216779180(v47, (uint64_t)__p, 1);
      std::locale v48 = (void *)std::ostream::operator<<();
      LOBYTE(__p[0]) = 58;
      sub_216779180(v48, (uint64_t)__p, 1);
      uint64_t v49 = (void *)std::ostream::operator<<();
      LOBYTE(__p[0]) = 40;
      sub_216779180(v49, (uint64_t)__p, 1);
      unsigned __int8 v50 = (void *)std::ostream::operator<<();
      LOBYTE(__p[0]) = 41;
      std::locale v51 = sub_216779180(v50, (uint64_t)__p, 1);
      std::locale v52 = sub_216779180(v51, (uint64_t)" success ", 9);
      sub_216A49B34(__p);
      if ((SBYTE7(v84) & 0x80u) == 0) {
        std::locale v53 = __p;
      }
      else {
        std::locale v53 = (void **)__p[0];
      }
      if ((SBYTE7(v84) & 0x80u) == 0) {
        uint64_t v54 = BYTE7(v84);
      }
      else {
        uint64_t v54 = (uint64_t)__p[1];
      }
      long long v55 = sub_216779180(v52, (uint64_t)v53, v54);
      sub_216779180(v55, (uint64_t)"; next ", 7);
      if (SBYTE7(v84) < 0) {
        operator delete(__p[0]);
      }
      if ((char)v92 < 0) {
        operator delete(v90);
      }
      sub_216A3AB00(a1);
      std::ios_base::getloc((const std::ios_base *)((char *)v46 + *(void *)(*v46 - 24)));
      uint64_t v56 = std::locale::use_facet(&v89, MEMORY[0x263F8C108]);
      ((void (*)(const std::locale::facet *, uint64_t))v56->__vftable[2].~facet_0)(v56, 10);
      std::locale::~locale(&v89);
      std::ostream::put();
      std::ostream::flush();
      return 1;
    }
    sub_2169C56DC((uint64_t)&v89, (uint64_t)v2, v3);
    if ((v92 & 0x80u) == 0) {
      uint64_t v58 = &v90;
    }
    else {
      uint64_t v58 = v90;
    }
    if ((v92 & 0x80u) == 0) {
      uint64_t v59 = v92;
    }
    else {
      uint64_t v59 = v91;
    }
    uint64_t v60 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v58, v59);
    LOBYTE(v85.__locale_) = 58;
    sub_216779180(v60, (uint64_t)&v85, 1);
    uint64_t v61 = (void *)std::ostream::operator<<();
    LOBYTE(v85.__locale_) = 58;
    sub_216779180(v61, (uint64_t)&v85, 1);
    long long v62 = (void *)std::ostream::operator<<();
    LOBYTE(v85.__locale_) = 40;
    sub_216779180(v62, (uint64_t)&v85, 1);
    char v63 = (void *)std::ostream::operator<<();
    LOBYTE(v85.__locale_) = 41;
    long long v64 = sub_216779180(v63, (uint64_t)&v85, 1);
    uint64_t v65 = sub_216779180(v64, (uint64_t)" failure ", 9);
    sub_216A49BE0(&v85);
    if ((v87 & 0x80u) == 0) {
      uint64_t v66 = &v85;
    }
    else {
      uint64_t v66 = v85.__locale_;
    }
    if ((v87 & 0x80u) == 0) {
      uint64_t v67 = v87;
    }
    else {
      uint64_t v67 = v86;
    }
    uint64_t v68 = sub_216779180(v65, (uint64_t)v66, v67);
    std::ios_base::getloc((const std::ios_base *)((char *)v68 + *(void *)(*v68 - 24)));
    uint64_t v69 = std::locale::use_facet(&v88, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v69->__vftable[2].~facet_0)(v69, 10);
    std::locale::~locale(&v88);
    std::ostream::put();
    std::ostream::flush();
    if ((char)v87 < 0) {
      operator delete(v85.__locale_);
    }
    if ((char)v92 < 0) {
      operator delete(v90);
    }
  }
  long long v70 = v84;
  *std::string v2 = *(_OWORD *)__p;
  v2[1] = v70;
  sub_2169C56DC((uint64_t)&v89, (uint64_t)v2, v3);
  if ((v92 & 0x80u) == 0) {
    uint64_t v71 = &v90;
  }
  else {
    uint64_t v71 = v90;
  }
  if ((v92 & 0x80u) == 0) {
    uint64_t v72 = v92;
  }
  else {
    uint64_t v72 = v91;
  }
  uint64_t v73 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v71, v72);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v73, (uint64_t)__p, 1);
  uint64_t v74 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v74, (uint64_t)__p, 1);
  uint64_t v75 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v75, (uint64_t)__p, 1);
  uint64_t v76 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  uint64_t v77 = sub_216779180(v76, (uint64_t)__p, 1);
  uint64_t v78 = sub_216779180(v77, (uint64_t)" failure ", 9);
  sub_216A49B34(__p);
  if ((SBYTE7(v84) & 0x80u) == 0) {
    uint64_t v79 = __p;
  }
  else {
    uint64_t v79 = (void **)__p[0];
  }
  if ((SBYTE7(v84) & 0x80u) == 0) {
    uint64_t v80 = BYTE7(v84);
  }
  else {
    uint64_t v80 = (uint64_t)__p[1];
  }
  uint64_t v81 = sub_216779180(v78, (uint64_t)v79, v80);
  std::ios_base::getloc((const std::ios_base *)((char *)v81 + *(void *)(*v81 - 24)));
  uint64_t v82 = std::locale::use_facet(&v85, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v82->__vftable[2].~facet_0)(v82, 10);
  std::locale::~locale(&v85);
  std::ostream::put();
  std::ostream::flush();
  if (SBYTE7(v84) < 0) {
    operator delete(__p[0]);
  }
  if ((char)v92 < 0) {
    operator delete(v90);
  }
  return 0;
}

void sub_216A49A40(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, long long a9, long long a10, std::locale a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, std::locale a17, std::locale a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0) {
    operator delete(__p);
  }
  _OWORD *v26 = a9;
  v26[1] = a10;
  _Unwind_Resume(exception_object);
}

void sub_216A49B34(void *a1@<X8>)
{
  std::string v2 = __cxa_demangle((const char *)((unint64_t)"N3tao21PXR_INTERNAL_NS_pegtl3seqIJNS0_5ascii3oneIJLc92EEEEN32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_123QuotedStringEscapedCharILc39EEEEEE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N3tao21PXR_INTERNAL_NS_pegtl3seqIJNS0_5ascii3oneIJLc92EEEEN32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_123QuotedStringEscapedCharILc39EEEEEE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A49BCC(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

void sub_216A49BE0(void *a1@<X8>)
{
  std::string v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_123QuotedStringEscapedCharILc39EEE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_123QuotedStringEscapedCharILc39EEE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A49C78(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_216A49C8C(void *a1)
{
  uint64_t v1 = (char *)a1[1];
  if (v1 == (char *)a1[5]) {
    return 0;
  }
  int v3 = *v1;
  int __s = 660350048;
  uint64_t v4 = (uint64_t *)memchr(&__s, v3, 4uLL);
  uint64_t v5 = (char *)(v4 ? v4 : &v9);
  if (v5 - (char *)&__s == 4) {
    return 0;
  }
  uint64_t v7 = a1[2] + 1;
  a1[1] = v1 + 1;
  a1[2] = v7;
  ++a1[4];
  return 1;
}

uint64_t sub_216A49D2C(uint64_t a1)
{
  sub_2169C56DC((uint64_t)&v18, a1 + 8, (long long *)(a1 + 48));
  if ((v20 & 0x80u) == 0) {
    std::string v2 = v19;
  }
  else {
    std::string v2 = (void **)v19[0];
  }
  if ((v20 & 0x80u) == 0) {
    uint64_t v3 = v20;
  }
  else {
    uint64_t v3 = (uint64_t)v19[1];
  }
  uint64_t v4 = (void *)MEMORY[0x263F8C0F8];
  uint64_t v5 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v2, v3);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v5, (uint64_t)__p, 1);
  uint64_t v6 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v6, (uint64_t)__p, 1);
  uint64_t v7 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v7, (uint64_t)__p, 1);
  long long v8 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  uint64_t v9 = sub_216779180(v8, (uint64_t)__p, 1);
  uint64_t v10 = sub_216779180(v9, (uint64_t)"  start  ", 9);
  sub_216A4A14C(__p);
  if ((v17 & 0x80u) == 0) {
    unint64_t v11 = __p;
  }
  else {
    unint64_t v11 = (void **)__p[0];
  }
  if ((v17 & 0x80u) == 0) {
    uint64_t v12 = v17;
  }
  else {
    uint64_t v12 = (uint64_t)__p[1];
  }
  unint64_t v13 = sub_216779180(v10, (uint64_t)v11, v12);
  sub_216779180(v13, (uint64_t)"; current ", 10);
  if ((char)v17 < 0) {
    operator delete(__p[0]);
  }
  if ((char)v20 < 0) {
    operator delete(v19[0]);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v4 + *(void *)(*v4 - 24)));
  uint64_t v14 = std::locale::use_facet(&v18, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v14->__vftable[2].~facet_0)(v14, 10);
  std::locale::~locale(&v18);
  std::ostream::put();
  return std::ostream::flush();
}

void sub_216A49EF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, std::locale a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_216A49F3C(uint64_t a1)
{
  sub_2169C56DC((uint64_t)&v18, a1 + 8, (long long *)(a1 + 48));
  if ((v20 & 0x80u) == 0) {
    std::string v2 = v19;
  }
  else {
    std::string v2 = (void **)v19[0];
  }
  if ((v20 & 0x80u) == 0) {
    uint64_t v3 = v20;
  }
  else {
    uint64_t v3 = (uint64_t)v19[1];
  }
  uint64_t v4 = (void *)MEMORY[0x263F8C0F8];
  uint64_t v5 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v2, v3);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v5, (uint64_t)__p, 1);
  uint64_t v6 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v6, (uint64_t)__p, 1);
  uint64_t v7 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v7, (uint64_t)__p, 1);
  long long v8 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  uint64_t v9 = sub_216779180(v8, (uint64_t)__p, 1);
  uint64_t v10 = sub_216779180(v9, (uint64_t)" success ", 9);
  sub_216A4A14C(__p);
  if ((v17 & 0x80u) == 0) {
    unint64_t v11 = __p;
  }
  else {
    unint64_t v11 = (void **)__p[0];
  }
  if ((v17 & 0x80u) == 0) {
    uint64_t v12 = v17;
  }
  else {
    uint64_t v12 = (uint64_t)__p[1];
  }
  unint64_t v13 = sub_216779180(v10, (uint64_t)v11, v12);
  sub_216779180(v13, (uint64_t)"; next ", 7);
  if ((char)v17 < 0) {
    operator delete(__p[0]);
  }
  if ((char)v20 < 0) {
    operator delete(v19[0]);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v4 + *(void *)(*v4 - 24)));
  uint64_t v14 = std::locale::use_facet(&v18, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v14->__vftable[2].~facet_0)(v14, 10);
  std::locale::~locale(&v18);
  std::ostream::put();
  return std::ostream::flush();
}

void sub_216A4A104(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, std::locale a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A4A14C(void *a1@<X8>)
{
  std::string v2 = __cxa_demangle((const char *)((unint64_t)"N3tao21PXR_INTERNAL_NS_pegtl3seqIJNS0_6not_atIJNS0_3sorIJN32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_113VariableStartENS0_5ascii3oneIJLc39EEEEEEEEEENS7_3anyEEEE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N3tao21PXR_INTERNAL_NS_pegtl3seqIJNS0_6not_atIJNS0_3sorIJN32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_113VariableStartENS0_5ascii3oneIJLc39EEEEEEEEEENS7_3anyEEEE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A4A1E4(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_216A4A1F8(uint64_t a1)
{
  std::string v2 = (_OWORD *)(a1 + 8);
  uint64_t v3 = (long long *)(a1 + 48);
  sub_2169C56DC((uint64_t)&v130, a1 + 8, (long long *)(a1 + 48));
  if ((v133 & 0x80u) == 0) {
    uint64_t v4 = &v131;
  }
  else {
    uint64_t v4 = v131;
  }
  if ((v133 & 0x80u) == 0) {
    uint64_t v5 = v133;
  }
  else {
    uint64_t v5 = v132;
  }
  uint64_t v6 = (void *)MEMORY[0x263F8C0F8];
  uint64_t v7 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v4, v5);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v7, (uint64_t)__p, 1);
  long long v8 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v8, (uint64_t)__p, 1);
  uint64_t v9 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v9, (uint64_t)__p, 1);
  uint64_t v10 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  unint64_t v11 = sub_216779180(v10, (uint64_t)__p, 1);
  uint64_t v12 = sub_216779180(v11, (uint64_t)"  start  ", 9);
  sub_216A4B204(__p);
  if ((SBYTE7(v125) & 0x80u) == 0) {
    unint64_t v13 = __p;
  }
  else {
    unint64_t v13 = (void **)__p[0];
  }
  if ((SBYTE7(v125) & 0x80u) == 0) {
    uint64_t v14 = BYTE7(v125);
  }
  else {
    uint64_t v14 = (uint64_t)__p[1];
  }
  uint64_t v15 = sub_216779180(v12, (uint64_t)v13, v14);
  sub_216779180(v15, (uint64_t)"; current ", 10);
  if (SBYTE7(v125) < 0) {
    operator delete(__p[0]);
  }
  if ((char)v133 < 0) {
    operator delete(v131);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v6 + *(void *)(*v6 - 24)));
  uint64_t v16 = std::locale::use_facet(&v130, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v16->__vftable[2].~facet_0)(v16, 10);
  std::locale::~locale(&v130);
  std::ostream::put();
  std::ostream::flush();
  long long v17 = v2[1];
  *(_OWORD *)std::string __p = *v2;
  long long v125 = v17;
  sub_2169C56DC((uint64_t)&v130, (uint64_t)v2, v3);
  if ((v133 & 0x80u) == 0) {
    std::locale v18 = &v131;
  }
  else {
    std::locale v18 = v131;
  }
  if ((v133 & 0x80u) == 0) {
    uint64_t v19 = v133;
  }
  else {
    uint64_t v19 = v132;
  }
  unsigned __int8 v20 = (void *)MEMORY[0x263F8C0F8];
  uint64_t v21 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v18, v19);
  LOBYTE(v126.__locale_) = 58;
  sub_216779180(v21, (uint64_t)&v126, 1);
  char v22 = (void *)std::ostream::operator<<();
  LOBYTE(v126.__locale_) = 58;
  sub_216779180(v22, (uint64_t)&v126, 1);
  uint64_t v23 = (void *)std::ostream::operator<<();
  LOBYTE(v126.__locale_) = 40;
  sub_216779180(v23, (uint64_t)&v126, 1);
  uint64_t v24 = (void *)std::ostream::operator<<();
  LOBYTE(v126.__locale_) = 41;
  unint64_t v25 = sub_216779180(v24, (uint64_t)&v126, 1);
  uint64_t v26 = sub_216779180(v25, (uint64_t)"  start  ", 9);
  sub_216A4B2B0(&v126);
  if ((v128 & 0x80u) == 0) {
    locale = &v126;
  }
  else {
    locale = v126.__locale_;
  }
  if ((v128 & 0x80u) == 0) {
    uint64_t v28 = v128;
  }
  else {
    uint64_t v28 = v127;
  }
  uint64_t v29 = sub_216779180(v26, (uint64_t)locale, v28);
  sub_216779180(v29, (uint64_t)"; current ", 10);
  if ((char)v128 < 0) {
    operator delete(v126.__locale_);
  }
  if ((char)v133 < 0) {
    operator delete(v131);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v20 + *(void *)(*v20 - 24)));
  uint64_t v30 = std::locale::use_facet(&v130, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v30->__vftable[2].~facet_0)(v30, 10);
  std::locale::~locale(&v130);
  std::ostream::put();
  std::ostream::flush();
  if (sub_216A3F558((void *)a1)) {
    goto LABEL_69;
  }
  sub_2169C56DC((uint64_t)&v130, (uint64_t)v2, v3);
  if ((v133 & 0x80u) == 0) {
    uint64_t v31 = &v131;
  }
  else {
    uint64_t v31 = v131;
  }
  if ((v133 & 0x80u) == 0) {
    uint64_t v32 = v133;
  }
  else {
    uint64_t v32 = v132;
  }
  long long v33 = (void *)MEMORY[0x263F8C0F8];
  uint64_t v34 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v31, v32);
  LOBYTE(v126.__locale_) = 58;
  sub_216779180(v34, (uint64_t)&v126, 1);
  long long v35 = (void *)std::ostream::operator<<();
  LOBYTE(v126.__locale_) = 58;
  sub_216779180(v35, (uint64_t)&v126, 1);
  uint64_t v36 = (void *)std::ostream::operator<<();
  LOBYTE(v126.__locale_) = 40;
  sub_216779180(v36, (uint64_t)&v126, 1);
  uint64_t v37 = (void *)std::ostream::operator<<();
  LOBYTE(v126.__locale_) = 41;
  uint64_t v38 = sub_216779180(v37, (uint64_t)&v126, 1);
  uint64_t v39 = sub_216779180(v38, (uint64_t)"  start  ", 9);
  sub_216A4B35C(&v126);
  if ((v128 & 0x80u) == 0) {
    uint64_t v40 = &v126;
  }
  else {
    uint64_t v40 = v126.__locale_;
  }
  if ((v128 & 0x80u) == 0) {
    uint64_t v41 = v128;
  }
  else {
    uint64_t v41 = v127;
  }
  uint64_t v42 = sub_216779180(v39, (uint64_t)v40, v41);
  sub_216779180(v42, (uint64_t)"; current ", 10);
  if ((char)v128 < 0) {
    operator delete(v126.__locale_);
  }
  if ((char)v133 < 0) {
    operator delete(v131);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v33 + *(void *)(*v33 - 24)));
  uint64_t v43 = std::locale::use_facet(&v130, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v43->__vftable[2].~facet_0)(v43, 10);
  std::locale::~locale(&v130);
  std::ostream::put();
  std::ostream::flush();
  uint64_t v44 = *(unsigned char **)(a1 + 8);
  if (v44 != *(unsigned char **)(a1 + 40) && *v44 == 39)
  {
    uint64_t v45 = *(void *)(a1 + 16) + 1;
    *(void *)(a1 + 8) = v44 + 1;
    *(void *)(a1 + 16) = v45;
    ++*(void *)(a1 + 32);
    sub_2169C56DC((uint64_t)&v130, (uint64_t)v2, v3);
    if ((v133 & 0x80u) == 0) {
      long long v46 = &v131;
    }
    else {
      long long v46 = v131;
    }
    if ((v133 & 0x80u) == 0) {
      uint64_t v47 = v133;
    }
    else {
      uint64_t v47 = v132;
    }
    std::locale v48 = (void *)MEMORY[0x263F8C0F8];
    uint64_t v49 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v46, v47);
    LOBYTE(v126.__locale_) = 58;
    sub_216779180(v49, (uint64_t)&v126, 1);
    unsigned __int8 v50 = (void *)std::ostream::operator<<();
    LOBYTE(v126.__locale_) = 58;
    sub_216779180(v50, (uint64_t)&v126, 1);
    std::locale v51 = (void *)std::ostream::operator<<();
    LOBYTE(v126.__locale_) = 40;
    sub_216779180(v51, (uint64_t)&v126, 1);
    std::locale v52 = (void *)std::ostream::operator<<();
    LOBYTE(v126.__locale_) = 41;
    std::locale v53 = sub_216779180(v52, (uint64_t)&v126, 1);
    uint64_t v54 = sub_216779180(v53, (uint64_t)" success ", 9);
    sub_216A4B35C(&v126);
    if ((v128 & 0x80u) == 0) {
      long long v55 = &v126;
    }
    else {
      long long v55 = v126.__locale_;
    }
    if ((v128 & 0x80u) == 0) {
      uint64_t v56 = v128;
    }
    else {
      uint64_t v56 = v127;
    }
    uint64_t v57 = sub_216779180(v54, (uint64_t)v55, v56);
    sub_216779180(v57, (uint64_t)"; next ", 7);
    if ((char)v128 < 0) {
      operator delete(v126.__locale_);
    }
    if ((char)v133 < 0) {
      operator delete(v131);
    }
    sub_216A3AB00(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v48 + *(void *)(*v48 - 24)));
    uint64_t v58 = std::locale::use_facet(&v130, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v58->__vftable[2].~facet_0)(v58, 10);
    std::locale::~locale(&v130);
    std::ostream::put();
    std::ostream::flush();
LABEL_69:
    sub_2169C56DC((uint64_t)&v130, (uint64_t)v2, v3);
    if ((v133 & 0x80u) == 0) {
      uint64_t v59 = &v131;
    }
    else {
      uint64_t v59 = v131;
    }
    if ((v133 & 0x80u) == 0) {
      uint64_t v60 = v133;
    }
    else {
      uint64_t v60 = v132;
    }
    uint64_t v61 = (void *)MEMORY[0x263F8C0F8];
    long long v62 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v59, v60);
    LOBYTE(v126.__locale_) = 58;
    sub_216779180(v62, (uint64_t)&v126, 1);
    char v63 = (void *)std::ostream::operator<<();
    LOBYTE(v126.__locale_) = 58;
    sub_216779180(v63, (uint64_t)&v126, 1);
    long long v64 = (void *)std::ostream::operator<<();
    LOBYTE(v126.__locale_) = 40;
    sub_216779180(v64, (uint64_t)&v126, 1);
    uint64_t v65 = (void *)std::ostream::operator<<();
    LOBYTE(v126.__locale_) = 41;
    uint64_t v66 = sub_216779180(v65, (uint64_t)&v126, 1);
    uint64_t v67 = sub_216779180(v66, (uint64_t)" success ", 9);
    sub_216A4B2B0(&v126);
    if ((v128 & 0x80u) == 0) {
      uint64_t v68 = &v126;
    }
    else {
      uint64_t v68 = v126.__locale_;
    }
    if ((v128 & 0x80u) == 0) {
      uint64_t v69 = v128;
    }
    else {
      uint64_t v69 = v127;
    }
    long long v70 = sub_216779180(v67, (uint64_t)v68, v69);
    sub_216779180(v70, (uint64_t)"; next ", 7);
    if ((char)v128 < 0) {
      operator delete(v126.__locale_);
    }
    if ((char)v133 < 0) {
      operator delete(v131);
    }
    sub_216A3AB00(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v61 + *(void *)(*v61 - 24)));
    uint64_t v71 = std::locale::use_facet(&v130, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v71->__vftable[2].~facet_0)(v71, 10);
    std::locale::~locale(&v130);
    std::ostream::put();
    std::ostream::flush();
    long long v72 = v125;
    *std::string v2 = *(_OWORD *)__p;
    v2[1] = v72;
    sub_2169C56DC((uint64_t)&v130, (uint64_t)v2, v3);
    if ((v133 & 0x80u) == 0) {
      uint64_t v73 = &v131;
    }
    else {
      uint64_t v73 = v131;
    }
    if ((v133 & 0x80u) == 0) {
      uint64_t v74 = v133;
    }
    else {
      uint64_t v74 = v132;
    }
    uint64_t v75 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v73, v74);
    LOBYTE(__p[0]) = 58;
    sub_216779180(v75, (uint64_t)__p, 1);
    uint64_t v76 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 58;
    sub_216779180(v76, (uint64_t)__p, 1);
    uint64_t v77 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 40;
    sub_216779180(v77, (uint64_t)__p, 1);
    uint64_t v78 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 41;
    uint64_t v79 = sub_216779180(v78, (uint64_t)__p, 1);
    uint64_t v80 = sub_216779180(v79, (uint64_t)" failure ", 9);
    sub_216A4B204(__p);
    if ((SBYTE7(v125) & 0x80u) == 0) {
      uint64_t v81 = __p;
    }
    else {
      uint64_t v81 = (void **)__p[0];
    }
    if ((SBYTE7(v125) & 0x80u) == 0) {
      uint64_t v82 = BYTE7(v125);
    }
    else {
      uint64_t v82 = (uint64_t)__p[1];
    }
    uint64_t v83 = sub_216779180(v80, (uint64_t)v81, v82);
    std::ios_base::getloc((const std::ios_base *)((char *)v83 + *(void *)(*v83 - 24)));
    long long v84 = std::locale::use_facet(&v126, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v84->__vftable[2].~facet_0)(v84, 10);
    std::locale::~locale(&v126);
    std::ostream::put();
    std::ostream::flush();
    if (SBYTE7(v125) < 0) {
      operator delete(__p[0]);
    }
    if ((char)v133 < 0) {
      operator delete(v131);
    }
    return 0;
  }
  sub_2169C56DC((uint64_t)&v130, (uint64_t)v2, v3);
  if ((v133 & 0x80u) == 0) {
    uint64_t v86 = &v131;
  }
  else {
    uint64_t v86 = v131;
  }
  if ((v133 & 0x80u) == 0) {
    uint64_t v87 = v133;
  }
  else {
    uint64_t v87 = v132;
  }
  std::locale v88 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v86, v87);
  LOBYTE(v126.__locale_) = 58;
  sub_216779180(v88, (uint64_t)&v126, 1);
  std::locale v89 = (void *)std::ostream::operator<<();
  LOBYTE(v126.__locale_) = 58;
  sub_216779180(v89, (uint64_t)&v126, 1);
  uint64_t v90 = (void *)std::ostream::operator<<();
  LOBYTE(v126.__locale_) = 40;
  sub_216779180(v90, (uint64_t)&v126, 1);
  uint64_t v91 = (void *)std::ostream::operator<<();
  LOBYTE(v126.__locale_) = 41;
  unsigned __int8 v92 = sub_216779180(v91, (uint64_t)&v126, 1);
  uint64_t v93 = sub_216779180(v92, (uint64_t)" failure ", 9);
  sub_216A4B35C(&v126);
  if ((v128 & 0x80u) == 0) {
    uint64_t v94 = &v126;
  }
  else {
    uint64_t v94 = v126.__locale_;
  }
  if ((v128 & 0x80u) == 0) {
    uint64_t v95 = v128;
  }
  else {
    uint64_t v95 = v127;
  }
  uint64_t v96 = sub_216779180(v93, (uint64_t)v94, v95);
  std::ios_base::getloc((const std::ios_base *)((char *)v96 + *(void *)(*v96 - 24)));
  uint64_t v97 = std::locale::use_facet(&v129, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v97->__vftable[2].~facet_0)(v97, 10);
  std::locale::~locale(&v129);
  std::ostream::put();
  std::ostream::flush();
  if ((char)v128 < 0) {
    operator delete(v126.__locale_);
  }
  if ((char)v133 < 0) {
    operator delete(v131);
  }
  sub_2169C56DC((uint64_t)&v130, (uint64_t)v2, v3);
  if ((v133 & 0x80u) == 0) {
    long long v98 = &v131;
  }
  else {
    long long v98 = v131;
  }
  if ((v133 & 0x80u) == 0) {
    uint64_t v99 = v133;
  }
  else {
    uint64_t v99 = v132;
  }
  uint64_t v100 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v98, v99);
  LOBYTE(v126.__locale_) = 58;
  sub_216779180(v100, (uint64_t)&v126, 1);
  long long v101 = (void *)std::ostream::operator<<();
  LOBYTE(v126.__locale_) = 58;
  sub_216779180(v101, (uint64_t)&v126, 1);
  uint64_t v102 = (void *)std::ostream::operator<<();
  LOBYTE(v126.__locale_) = 40;
  sub_216779180(v102, (uint64_t)&v126, 1);
  uint64_t v103 = (void *)std::ostream::operator<<();
  LOBYTE(v126.__locale_) = 41;
  uint64_t v104 = sub_216779180(v103, (uint64_t)&v126, 1);
  uint64_t v105 = sub_216779180(v104, (uint64_t)" failure ", 9);
  sub_216A4B2B0(&v126);
  if ((v128 & 0x80u) == 0) {
    std::locale v106 = &v126;
  }
  else {
    std::locale v106 = v126.__locale_;
  }
  if ((v128 & 0x80u) == 0) {
    uint64_t v107 = v128;
  }
  else {
    uint64_t v107 = v127;
  }
  unsigned __int8 v108 = sub_216779180(v105, (uint64_t)v106, v107);
  std::ios_base::getloc((const std::ios_base *)((char *)v108 + *(void *)(*v108 - 24)));
  uint64_t v109 = std::locale::use_facet(&v129, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v109->__vftable[2].~facet_0)(v109, 10);
  std::locale::~locale(&v129);
  std::ostream::put();
  std::ostream::flush();
  if ((char)v128 < 0) {
    operator delete(v126.__locale_);
  }
  if ((char)v133 < 0) {
    operator delete(v131);
  }
  long long v110 = v125;
  *std::string v2 = *(_OWORD *)__p;
  v2[1] = v110;
  sub_2169C56DC((uint64_t)&v130, (uint64_t)v2, v3);
  if ((v133 & 0x80u) == 0) {
    uint64_t v111 = &v131;
  }
  else {
    uint64_t v111 = v131;
  }
  if ((v133 & 0x80u) == 0) {
    uint64_t v112 = v133;
  }
  else {
    uint64_t v112 = v132;
  }
  v113 = (void *)MEMORY[0x263F8C0F8];
  v114 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v111, v112);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v114, (uint64_t)__p, 1);
  uint64_t v115 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v115, (uint64_t)__p, 1);
  v116 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v116, (uint64_t)__p, 1);
  uint64_t v117 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  uint64_t v118 = sub_216779180(v117, (uint64_t)__p, 1);
  v119 = sub_216779180(v118, (uint64_t)" success ", 9);
  sub_216A4B204(__p);
  if ((SBYTE7(v125) & 0x80u) == 0) {
    long long v120 = __p;
  }
  else {
    long long v120 = (void **)__p[0];
  }
  if ((SBYTE7(v125) & 0x80u) == 0) {
    uint64_t v121 = BYTE7(v125);
  }
  else {
    uint64_t v121 = (uint64_t)__p[1];
  }
  uint64_t v122 = sub_216779180(v119, (uint64_t)v120, v121);
  sub_216779180(v122, (uint64_t)"; next ", 7);
  if (SBYTE7(v125) < 0) {
    operator delete(__p[0]);
  }
  if ((char)v133 < 0) {
    operator delete(v131);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v113 + *(void *)(*v113 - 24)));
  uint64_t v123 = std::locale::use_facet(&v130, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v123->__vftable[2].~facet_0)(v123, 10);
  std::locale::~locale(&v130);
  std::ostream::put();
  std::ostream::flush();
  return 1;
}

void sub_216A4B0E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, long long a9, long long a10, std::locale a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, std::locale a17, std::locale a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0) {
    operator delete(__p);
  }
  _OWORD *v26 = a9;
  v26[1] = a10;
  _Unwind_Resume(exception_object);
}

void sub_216A4B204(void *a1@<X8>)
{
  std::string v2 = __cxa_demangle((const char *)((unint64_t)"N3tao21PXR_INTERNAL_NS_pegtl6not_atIJNS0_3sorIJN32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_113VariableStartENS0_5ascii3oneIJLc39EEEEEEEEEE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N3tao21PXR_INTERNAL_NS_pegtl6not_atIJNS0_3sorIJN32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_113VariableStartENS0_5ascii3oneIJLc39EEEEEEEEEE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A4B29C(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

void sub_216A4B2B0(void *a1@<X8>)
{
  std::string v2 = __cxa_demangle((const char *)((unint64_t)"N3tao21PXR_INTERNAL_NS_pegtl3sorIJN32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_113VariableStartENS0_5ascii3oneIJLc39EEEEEEE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N3tao21PXR_INTERNAL_NS_pegtl3sorIJN32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_113VariableStartENS0_5ascii3oneIJLc39EEEEEEE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A4B348(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

void sub_216A4B35C(void *a1@<X8>)
{
  std::string v2 = __cxa_demangle((const char *)(0x800000021746B1EALL & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)(0x800000021746B1EALL & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A4B3FC(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

void sub_216A4B410(char **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = (uint64_t *)sub_216A40A10(a3);
  sub_21682E90C(__p, v4, *(char **)(a2 + 8), *(void *)(a2 + 8) - (void)v4);
  char v22 = 0;
  unint64_t v6 = v5[2];
  unint64_t v7 = v5[3];
  if (v6 >= v7)
  {
    uint64_t v9 = v5[1];
    uint64_t v10 = (uint64_t)(v6 - v9) >> 5;
    unint64_t v11 = v10 + 1;
    if ((unint64_t)(v10 + 1) >> 59) {
      sub_21677CB10();
    }
    uint64_t v12 = v7 - v9;
    if (v12 >> 4 > v11) {
      unint64_t v11 = v12 >> 4;
    }
    if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFE0) {
      unint64_t v13 = 0x7FFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v13 = v11;
    }
    v23[4] = v5 + 3;
    uint64_t v14 = (char *)sub_2168707F4((uint64_t)(v5 + 3), v13);
    uint64_t v15 = &v14[32 * v10];
    v23[0] = v14;
    v23[1] = v15;
    v23[3] = &v14[32 * v16];
    long long v17 = *(_OWORD *)__p;
    *((void *)v15 + 2) = v21;
    *(_OWORD *)uint64_t v15 = v17;
    __p[1] = 0;
    uint64_t v21 = 0;
    __p[0] = 0;
    v15[24] = v22;
    v23[2] = v15 + 32;
    sub_216A43574(v5 + 1, v23);
    uint64_t v18 = v5[2];
    sub_216870958((uint64_t)v23);
    int v19 = SHIBYTE(v21);
    v5[2] = v18;
    if (v19 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    long long v8 = *(_OWORD *)__p;
    *(void *)(v6 + 16) = v21;
    *(_OWORD *)unint64_t v6 = v8;
    *(unsigned char *)(v6 + 24) = v22;
    v5[2] = v6 + 32;
  }
}

void sub_216A4B554(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, char a17)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A4B580(void *a1@<X8>)
{
  std::string v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_115QuotedStringEndILc39EEE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_115QuotedStringEndILc39EEE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A4B618(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

void sub_216A4B62C(uint64_t a1)
{
  sub_216779094(&v2, "Missing ending \"'\"");
  sub_216A3AD78(a1, &v2);
}

void sub_216A4B664(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_216A4B680(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 8;
  long long v5 = *(_OWORD *)(a1 + 24);
  long long v179 = *(_OWORD *)(a1 + 8);
  long long v180 = v5;
  v181 = (_OWORD *)(a1 + 8);
  unint64_t v6 = (long long *)(a1 + 48);
  sub_2169C56DC((uint64_t)&v185, a1 + 8, (long long *)(a1 + 48));
  if ((v188 & 0x80u) == 0) {
    unint64_t v7 = &v186;
  }
  else {
    unint64_t v7 = v186;
  }
  if ((v188 & 0x80u) == 0) {
    uint64_t v8 = v188;
  }
  else {
    uint64_t v8 = v187;
  }
  uint64_t v9 = (void *)MEMORY[0x263F8C0F8];
  uint64_t v10 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v7, v8);
  LOBYTE(__p) = 58;
  sub_216779180(v10, (uint64_t)&__p, 1);
  unint64_t v11 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 58;
  sub_216779180(v11, (uint64_t)&__p, 1);
  uint64_t v12 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 40;
  sub_216779180(v12, (uint64_t)&__p, 1);
  unint64_t v13 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 41;
  uint64_t v14 = sub_216779180(v13, (uint64_t)&__p, 1);
  uint64_t v15 = sub_216779180(v14, (uint64_t)"  start  ", 9);
  sub_216A4CDA8(&__p);
  if ((v184 & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = __p;
  }
  if ((v184 & 0x80u) == 0) {
    uint64_t v17 = v184;
  }
  else {
    uint64_t v17 = v183;
  }
  uint64_t v18 = sub_216779180(v15, (uint64_t)p_p, v17);
  sub_216779180(v18, (uint64_t)"; current ", 10);
  if ((char)v184 < 0) {
    operator delete(__p);
  }
  if ((char)v188 < 0) {
    operator delete(v186);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v9 + *(void *)(*v9 - 24)));
  int v19 = std::locale::use_facet(&v185, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v19->__vftable[2].~facet_0)(v19, 10);
  std::locale::~locale(&v185);
  std::ostream::put();
  std::ostream::flush();
  sub_2169C56DC((uint64_t)&v185, v4, v6);
  if ((v188 & 0x80u) == 0) {
    unsigned __int8 v20 = &v186;
  }
  else {
    unsigned __int8 v20 = v186;
  }
  if ((v188 & 0x80u) == 0) {
    uint64_t v21 = v188;
  }
  else {
    uint64_t v21 = v187;
  }
  char v22 = (void *)MEMORY[0x263F8C0F8];
  uint64_t v23 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v20, v21);
  LOBYTE(__p) = 58;
  sub_216779180(v23, (uint64_t)&__p, 1);
  uint64_t v24 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 58;
  sub_216779180(v24, (uint64_t)&__p, 1);
  unint64_t v25 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 40;
  sub_216779180(v25, (uint64_t)&__p, 1);
  uint64_t v26 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 41;
  uint64_t v27 = sub_216779180(v26, (uint64_t)&__p, 1);
  uint64_t v28 = sub_216779180(v27, (uint64_t)"  start  ", 9);
  sub_216A4CE54(&__p);
  if ((v184 & 0x80u) == 0) {
    uint64_t v29 = &__p;
  }
  else {
    uint64_t v29 = __p;
  }
  if ((v184 & 0x80u) == 0) {
    uint64_t v30 = v184;
  }
  else {
    uint64_t v30 = v183;
  }
  uint64_t v31 = sub_216779180(v28, (uint64_t)v29, v30);
  sub_216779180(v31, (uint64_t)"; current ", 10);
  if ((char)v184 < 0) {
    operator delete(__p);
  }
  if ((char)v188 < 0) {
    operator delete(v186);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v22 + *(void *)(*v22 - 24)));
  uint64_t v32 = std::locale::use_facet(&v185, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v32->__vftable[2].~facet_0)(v32, 10);
  std::locale::~locale(&v185);
  std::ostream::put();
  std::ostream::flush();
  sub_2169C56DC((uint64_t)&v185, v4, v6);
  if ((v188 & 0x80u) == 0) {
    long long v33 = &v186;
  }
  else {
    long long v33 = v186;
  }
  if ((v188 & 0x80u) == 0) {
    uint64_t v34 = v188;
  }
  else {
    uint64_t v34 = v187;
  }
  long long v35 = (void *)MEMORY[0x263F8C0F8];
  uint64_t v36 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v33, v34);
  LOBYTE(__p) = 58;
  sub_216779180(v36, (uint64_t)&__p, 1);
  uint64_t v37 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 58;
  sub_216779180(v37, (uint64_t)&__p, 1);
  uint64_t v38 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 40;
  sub_216779180(v38, (uint64_t)&__p, 1);
  uint64_t v39 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 41;
  uint64_t v40 = sub_216779180(v39, (uint64_t)&__p, 1);
  uint64_t v41 = sub_216779180(v40, (uint64_t)"  start  ", 9);
  sub_216A4CF08(&__p);
  if ((v184 & 0x80u) == 0) {
    uint64_t v42 = &__p;
  }
  else {
    uint64_t v42 = __p;
  }
  if ((v184 & 0x80u) == 0) {
    uint64_t v43 = v184;
  }
  else {
    uint64_t v43 = v183;
  }
  uint64_t v44 = sub_216779180(v41, (uint64_t)v42, v43);
  sub_216779180(v44, (uint64_t)"; current ", 10);
  if ((char)v184 < 0) {
    operator delete(__p);
  }
  if ((char)v188 < 0) {
    operator delete(v186);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v35 + *(void *)(*v35 - 24)));
  uint64_t v45 = std::locale::use_facet(&v185, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v45->__vftable[2].~facet_0)(v45, 10);
  std::locale::~locale(&v185);
  std::ostream::put();
  std::ostream::flush();
  long long v46 = *(unsigned char **)(a1 + 8);
  if (v46 == *(unsigned char **)(a1 + 40) || *v46 != 45)
  {
    sub_2169C56DC((uint64_t)&v185, v4, v6);
    if ((v188 & 0x80u) == 0) {
      uint64_t v61 = &v186;
    }
    else {
      uint64_t v61 = v186;
    }
    if ((v188 & 0x80u) == 0) {
      uint64_t v62 = v188;
    }
    else {
      uint64_t v62 = v187;
    }
    char v63 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v61, v62);
    LOBYTE(__p) = 58;
    sub_216779180(v63, (uint64_t)&__p, 1);
    long long v64 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 58;
    sub_216779180(v64, (uint64_t)&__p, 1);
    uint64_t v65 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 40;
    sub_216779180(v65, (uint64_t)&__p, 1);
    uint64_t v66 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 41;
    uint64_t v67 = sub_216779180(v66, (uint64_t)&__p, 1);
    uint64_t v68 = sub_216779180(v67, (uint64_t)" failure ", 9);
    sub_216A4CF08(&__p);
    if ((v184 & 0x80u) == 0) {
      uint64_t v69 = &__p;
    }
    else {
      uint64_t v69 = __p;
    }
    if ((v184 & 0x80u) == 0) {
      uint64_t v70 = v184;
    }
    else {
      uint64_t v70 = v183;
    }
    uint64_t v71 = sub_216779180(v68, (uint64_t)v69, v70);
    std::ios_base::getloc((const std::ios_base *)((char *)v71 + *(void *)(*v71 - 24)));
    long long v72 = std::locale::use_facet(&v189, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v72->__vftable[2].~facet_0)(v72, 10);
    std::locale::~locale(&v189);
    std::ostream::put();
    std::ostream::flush();
    if ((char)v184 < 0) {
      operator delete(__p);
    }
    if ((char)v188 < 0) {
      operator delete(v186);
    }
  }
  else
  {
    uint64_t v47 = *(void *)(a1 + 16) + 1;
    *(void *)(a1 + 8) = v46 + 1;
    *(void *)(a1 + 16) = v47;
    ++*(void *)(a1 + 32);
    sub_2169C56DC((uint64_t)&v185, v4, v6);
    if ((v188 & 0x80u) == 0) {
      std::locale v48 = &v186;
    }
    else {
      std::locale v48 = v186;
    }
    if ((v188 & 0x80u) == 0) {
      uint64_t v49 = v188;
    }
    else {
      uint64_t v49 = v187;
    }
    unsigned __int8 v50 = (void *)MEMORY[0x263F8C0F8];
    std::locale v51 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v48, v49);
    LOBYTE(__p) = 58;
    sub_216779180(v51, (uint64_t)&__p, 1);
    std::locale v52 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 58;
    sub_216779180(v52, (uint64_t)&__p, 1);
    std::locale v53 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 40;
    sub_216779180(v53, (uint64_t)&__p, 1);
    uint64_t v54 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 41;
    long long v55 = sub_216779180(v54, (uint64_t)&__p, 1);
    uint64_t v56 = sub_216779180(v55, (uint64_t)" success ", 9);
    sub_216A4CF08(&__p);
    if ((v184 & 0x80u) == 0) {
      uint64_t v57 = &__p;
    }
    else {
      uint64_t v57 = __p;
    }
    if ((v184 & 0x80u) == 0) {
      uint64_t v58 = v184;
    }
    else {
      uint64_t v58 = v183;
    }
    uint64_t v59 = sub_216779180(v56, (uint64_t)v57, v58);
    sub_216779180(v59, (uint64_t)"; next ", 7);
    if ((char)v184 < 0) {
      operator delete(__p);
    }
    if ((char)v188 < 0) {
      operator delete(v186);
    }
    sub_216A3AB00(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v50 + *(void *)(*v50 - 24)));
    uint64_t v60 = std::locale::use_facet(&v185, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v60->__vftable[2].~facet_0)(v60, 10);
    std::locale::~locale(&v185);
    std::ostream::put();
    std::ostream::flush();
  }
  sub_2169C56DC((uint64_t)&v185, v4, v6);
  if ((v188 & 0x80u) == 0) {
    uint64_t v73 = &v186;
  }
  else {
    uint64_t v73 = v186;
  }
  if ((v188 & 0x80u) == 0) {
    uint64_t v74 = v188;
  }
  else {
    uint64_t v74 = v187;
  }
  uint64_t v75 = (void *)MEMORY[0x263F8C0F8];
  uint64_t v76 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v73, v74);
  LOBYTE(__p) = 58;
  sub_216779180(v76, (uint64_t)&__p, 1);
  uint64_t v77 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 58;
  sub_216779180(v77, (uint64_t)&__p, 1);
  uint64_t v78 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 40;
  sub_216779180(v78, (uint64_t)&__p, 1);
  uint64_t v79 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 41;
  uint64_t v80 = sub_216779180(v79, (uint64_t)&__p, 1);
  uint64_t v81 = sub_216779180(v80, (uint64_t)" success ", 9);
  sub_216A4CE54(&__p);
  if ((v184 & 0x80u) == 0) {
    uint64_t v82 = &__p;
  }
  else {
    uint64_t v82 = __p;
  }
  if ((v184 & 0x80u) == 0) {
    uint64_t v83 = v184;
  }
  else {
    uint64_t v83 = v183;
  }
  long long v84 = sub_216779180(v81, (uint64_t)v82, v83);
  sub_216779180(v84, (uint64_t)"; next ", 7);
  if ((char)v184 < 0) {
    operator delete(__p);
  }
  if ((char)v188 < 0) {
    operator delete(v186);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v75 + *(void *)(*v75 - 24)));
  std::locale v85 = std::locale::use_facet(&v185, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v85->__vftable[2].~facet_0)(v85, 10);
  std::locale::~locale(&v185);
  std::ostream::put();
  std::ostream::flush();
  sub_2169C56DC((uint64_t)&v185, v4, v6);
  if ((v188 & 0x80u) == 0) {
    uint64_t v86 = &v186;
  }
  else {
    uint64_t v86 = v186;
  }
  if ((v188 & 0x80u) == 0) {
    uint64_t v87 = v188;
  }
  else {
    uint64_t v87 = v187;
  }
  std::locale v88 = (void *)MEMORY[0x263F8C0F8];
  std::locale v89 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v86, v87);
  LOBYTE(__p) = 58;
  sub_216779180(v89, (uint64_t)&__p, 1);
  uint64_t v90 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 58;
  sub_216779180(v90, (uint64_t)&__p, 1);
  uint64_t v91 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 40;
  sub_216779180(v91, (uint64_t)&__p, 1);
  unsigned __int8 v92 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 41;
  uint64_t v93 = sub_216779180(v92, (uint64_t)&__p, 1);
  uint64_t v94 = sub_216779180(v93, (uint64_t)"  start  ", 9);
  sub_216A4CFBC(&__p);
  if ((v184 & 0x80u) == 0) {
    uint64_t v95 = &__p;
  }
  else {
    uint64_t v95 = __p;
  }
  if ((v184 & 0x80u) == 0) {
    uint64_t v96 = v184;
  }
  else {
    uint64_t v96 = v183;
  }
  uint64_t v97 = sub_216779180(v94, (uint64_t)v95, v96);
  sub_216779180(v97, (uint64_t)"; current ", 10);
  if ((char)v184 < 0) {
    operator delete(__p);
  }
  if ((char)v188 < 0) {
    operator delete(v186);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v88 + *(void *)(*v88 - 24)));
  long long v98 = std::locale::use_facet(&v185, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v98->__vftable[2].~facet_0)(v98, 10);
  std::locale::~locale(&v185);
  std::ostream::put();
  std::ostream::flush();
  sub_216A4D070(a1);
  uint64_t v99 = *(unsigned __int8 **)(a1 + 8);
  if (v99 == *(unsigned __int8 **)(a1 + 40) || *v99 - 48 > 9)
  {
    uint64_t v101 = 0;
  }
  else
  {
    do
    {
      uint64_t v100 = *(void *)(a1 + 16) + 1;
      *(void *)(a1 + 8) = v99 + 1;
      *(void *)(a1 + 16) = v100;
      ++*(void *)(a1 + 32);
      sub_216A4D280(a1);
      sub_216A4D070(a1);
      uint64_t v99 = *(unsigned __int8 **)(a1 + 8);
    }
    while (v99 != *(unsigned __int8 **)(a1 + 40) && *v99 - 48 <= 9);
    uint64_t v101 = 1;
  }
  sub_2169C56DC((uint64_t)&v185, v4, v6);
  if ((v188 & 0x80u) == 0) {
    uint64_t v102 = &v186;
  }
  else {
    uint64_t v102 = v186;
  }
  if ((v188 & 0x80u) == 0) {
    uint64_t v103 = v188;
  }
  else {
    uint64_t v103 = v187;
  }
  uint64_t v104 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v102, v103);
  LOBYTE(__p) = 58;
  sub_216779180(v104, (uint64_t)&__p, 1);
  uint64_t v105 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 58;
  sub_216779180(v105, (uint64_t)&__p, 1);
  std::locale v106 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 40;
  sub_216779180(v106, (uint64_t)&__p, 1);
  uint64_t v107 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 41;
  unsigned __int8 v108 = sub_216779180(v107, (uint64_t)&__p, 1);
  uint64_t v109 = sub_216779180(v108, (uint64_t)" failure ", 9);
  sub_216A4D490(&__p);
  if ((v184 & 0x80u) == 0) {
    long long v110 = &__p;
  }
  else {
    long long v110 = __p;
  }
  if ((v184 & 0x80u) == 0) {
    uint64_t v111 = v184;
  }
  else {
    uint64_t v111 = v183;
  }
  uint64_t v112 = sub_216779180(v109, (uint64_t)v110, v111);
  std::ios_base::getloc((const std::ios_base *)((char *)v112 + *(void *)(*v112 - 24)));
  v113 = std::locale::use_facet(&v189, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v113->__vftable[2].~facet_0)(v113, 10);
  std::locale::~locale(&v189);
  std::ostream::put();
  std::ostream::flush();
  if ((char)v184 < 0) {
    operator delete(__p);
  }
  if ((char)v188 < 0)
  {
    operator delete(v186);
    if (v101) {
      goto LABEL_139;
    }
  }
  else if (v101)
  {
LABEL_139:
    sub_2169C56DC((uint64_t)&v185, v4, v6);
    if ((v188 & 0x80u) == 0) {
      v114 = &v186;
    }
    else {
      v114 = v186;
    }
    if ((v188 & 0x80u) == 0) {
      uint64_t v115 = v188;
    }
    else {
      uint64_t v115 = v187;
    }
    v116 = (void *)MEMORY[0x263F8C0F8];
    uint64_t v117 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v114, v115);
    LOBYTE(__p) = 58;
    sub_216779180(v117, (uint64_t)&__p, 1);
    uint64_t v118 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 58;
    sub_216779180(v118, (uint64_t)&__p, 1);
    v119 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 40;
    sub_216779180(v119, (uint64_t)&__p, 1);
    long long v120 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 41;
    uint64_t v121 = sub_216779180(v120, (uint64_t)&__p, 1);
    uint64_t v122 = sub_216779180(v121, (uint64_t)" success ", 9);
    sub_216A4CFBC(&__p);
    if ((v184 & 0x80u) == 0) {
      uint64_t v123 = &__p;
    }
    else {
      uint64_t v123 = __p;
    }
    if ((v184 & 0x80u) == 0) {
      uint64_t v124 = v184;
    }
    else {
      uint64_t v124 = v183;
    }
    long long v125 = sub_216779180(v122, (uint64_t)v123, v124);
    sub_216779180(v125, (uint64_t)"; next ", 7);
    if ((char)v184 < 0) {
      operator delete(__p);
    }
    if ((char)v188 < 0) {
      operator delete(v186);
    }
    sub_216A3AB00(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v116 + *(void *)(*v116 - 24)));
    std::locale v126 = std::locale::use_facet(&v185, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v126->__vftable[2].~facet_0)(v126, 10);
    std::locale::~locale(&v185);
    std::ostream::put();
    std::ostream::flush();
    sub_2169C56DC((uint64_t)&v185, v4, v6);
    if ((v188 & 0x80u) == 0) {
      uint64_t v127 = &v186;
    }
    else {
      uint64_t v127 = v186;
    }
    if ((v188 & 0x80u) == 0) {
      uint64_t v128 = v188;
    }
    else {
      uint64_t v128 = v187;
    }
    std::locale v129 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v127, v128);
    LOBYTE(__p) = 58;
    sub_216779180(v129, (uint64_t)&__p, 1);
    std::locale v130 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 58;
    sub_216779180(v130, (uint64_t)&__p, 1);
    v131 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 40;
    sub_216779180(v131, (uint64_t)&__p, 1);
    uint64_t v132 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 41;
    unsigned __int8 v133 = sub_216779180(v132, (uint64_t)&__p, 1);
    uint64_t v134 = sub_216779180(v133, (uint64_t)"  apply  ", 9);
    sub_216A4CDA8(&__p);
    if ((v184 & 0x80u) == 0) {
      v135 = &__p;
    }
    else {
      v135 = __p;
    }
    if ((v184 & 0x80u) == 0) {
      uint64_t v136 = v184;
    }
    else {
      uint64_t v136 = v183;
    }
    v137 = sub_216779180(v134, (uint64_t)v135, v136);
    std::ios_base::getloc((const std::ios_base *)((char *)v137 + *(void *)(*v137 - 24)));
    v138 = std::locale::use_facet(&v189, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v138->__vftable[2].~facet_0)(v138, 10);
    std::locale::~locale(&v189);
    std::ostream::put();
    std::ostream::flush();
    if ((char)v184 < 0) {
      operator delete(__p);
    }
    if ((char)v188 < 0) {
      operator delete(v186);
    }
    sub_216A4D544(&v179, a1, a2);
    sub_2169C56DC((uint64_t)&v185, v4, v6);
    if ((v188 & 0x80u) == 0) {
      long long v139 = &v186;
    }
    else {
      long long v139 = v186;
    }
    if ((v188 & 0x80u) == 0) {
      uint64_t v140 = v188;
    }
    else {
      uint64_t v140 = v187;
    }
    v141 = (void *)MEMORY[0x263F8C0F8];
    long long v142 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v139, v140);
    LOBYTE(__p) = 58;
    sub_216779180(v142, (uint64_t)&__p, 1);
    uint64_t v143 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 58;
    sub_216779180(v143, (uint64_t)&__p, 1);
    uint64_t v144 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 40;
    sub_216779180(v144, (uint64_t)&__p, 1);
    uint64_t v145 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 41;
    unsigned __int8 v146 = sub_216779180(v145, (uint64_t)&__p, 1);
    uint64_t v147 = sub_216779180(v146, (uint64_t)" success ", 9);
    sub_216A4CDA8(&__p);
    if ((v184 & 0x80u) == 0) {
      v148 = &__p;
    }
    else {
      v148 = __p;
    }
    if ((v184 & 0x80u) == 0) {
      uint64_t v149 = v184;
    }
    else {
      uint64_t v149 = v183;
    }
    v150 = sub_216779180(v147, (uint64_t)v148, v149);
    sub_216779180(v150, (uint64_t)"; next ", 7);
    if ((char)v184 < 0) {
      operator delete(__p);
    }
    if ((char)v188 < 0) {
      operator delete(v186);
    }
    sub_216A3AB00(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v141 + *(void *)(*v141 - 24)));
    v151 = std::locale::use_facet(&v185, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v151->__vftable[2].~facet_0)(v151, 10);
    std::locale::~locale(&v185);
    std::ostream::put();
    std::ostream::flush();
    return v101;
  }
  sub_2169C56DC((uint64_t)&v185, v4, v6);
  if ((v188 & 0x80u) == 0) {
    uint64_t v152 = &v186;
  }
  else {
    uint64_t v152 = v186;
  }
  if ((v188 & 0x80u) == 0) {
    uint64_t v153 = v188;
  }
  else {
    uint64_t v153 = v187;
  }
  v154 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v152, v153);
  LOBYTE(__p) = 58;
  sub_216779180(v154, (uint64_t)&__p, 1);
  v155 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 58;
  sub_216779180(v155, (uint64_t)&__p, 1);
  uint64_t v156 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 40;
  sub_216779180(v156, (uint64_t)&__p, 1);
  v157 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 41;
  long long v158 = sub_216779180(v157, (uint64_t)&__p, 1);
  uint64_t v159 = sub_216779180(v158, (uint64_t)" failure ", 9);
  sub_216A4CFBC(&__p);
  if ((v184 & 0x80u) == 0) {
    uint64_t v160 = &__p;
  }
  else {
    uint64_t v160 = __p;
  }
  if ((v184 & 0x80u) == 0) {
    uint64_t v161 = v184;
  }
  else {
    uint64_t v161 = v183;
  }
  uint64_t v162 = sub_216779180(v159, (uint64_t)v160, v161);
  std::ios_base::getloc((const std::ios_base *)((char *)v162 + *(void *)(*v162 - 24)));
  v163 = std::locale::use_facet(&v189, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v163->__vftable[2].~facet_0)(v163, 10);
  std::locale::~locale(&v189);
  std::ostream::put();
  std::ostream::flush();
  if ((char)v184 < 0) {
    operator delete(__p);
  }
  if ((char)v188 < 0) {
    operator delete(v186);
  }
  sub_2169C56DC((uint64_t)&v185, v4, v6);
  if ((v188 & 0x80u) == 0) {
    uint64_t v164 = &v186;
  }
  else {
    uint64_t v164 = v186;
  }
  if ((v188 & 0x80u) == 0) {
    uint64_t v165 = v188;
  }
  else {
    uint64_t v165 = v187;
  }
  std::locale v166 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v164, v165);
  LOBYTE(__p) = 58;
  sub_216779180(v166, (uint64_t)&__p, 1);
  v167 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 58;
  sub_216779180(v167, (uint64_t)&__p, 1);
  v168 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 40;
  sub_216779180(v168, (uint64_t)&__p, 1);
  uint64_t v169 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 41;
  long long v170 = sub_216779180(v169, (uint64_t)&__p, 1);
  uint64_t v171 = sub_216779180(v170, (uint64_t)" failure ", 9);
  sub_216A4CDA8(&__p);
  if ((v184 & 0x80u) == 0) {
    uint64_t v172 = &__p;
  }
  else {
    uint64_t v172 = __p;
  }
  if ((v184 & 0x80u) == 0) {
    uint64_t v173 = v184;
  }
  else {
    uint64_t v173 = v183;
  }
  v174 = sub_216779180(v171, (uint64_t)v172, v173);
  std::ios_base::getloc((const std::ios_base *)((char *)v174 + *(void *)(*v174 - 24)));
  v175 = std::locale::use_facet(&v189, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v175->__vftable[2].~facet_0)(v175, 10);
  std::locale::~locale(&v189);
  std::ostream::put();
  std::ostream::flush();
  if ((char)v184 < 0) {
    operator delete(__p);
  }
  if ((char)v188 < 0) {
    operator delete(v186);
  }
  uint64_t v176 = v181;
  if (v181)
  {
    long long v177 = v180;
    _OWORD *v181 = v179;
    v176[1] = v177;
  }
  return v101;
}

void sub_216A4CC78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, long long a9, long long a10, _OWORD *a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, std::locale a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  if (a11)
  {
    *a11 = a9;
    a11[1] = a10;
  }
  _Unwind_Resume(exception_object);
}

void sub_216A4CDA8(void *a1@<X8>)
{
  std::string v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_17IntegerE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_17IntegerE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A4CE40(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

void sub_216A4CE54(void *a1@<X8>)
{
  std::string v2 = __cxa_demangle((const char *)(0x800000021746B2A1 & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)(0x800000021746B2A1 & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A4CEF4(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

void sub_216A4CF08(void *a1@<X8>)
{
  std::string v2 = __cxa_demangle((const char *)(0x800000021746B2DFLL & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)(0x800000021746B2DFLL & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A4CFA8(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

void sub_216A4CFBC(void *a1@<X8>)
{
  std::string v2 = __cxa_demangle((const char *)(0x800000021746B310 & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)(0x800000021746B310 & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A4D05C(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_216A4D070(uint64_t a1)
{
  sub_2169C56DC((uint64_t)&v18, a1 + 8, (long long *)(a1 + 48));
  if ((v20 & 0x80u) == 0) {
    std::string v2 = v19;
  }
  else {
    std::string v2 = (void **)v19[0];
  }
  if ((v20 & 0x80u) == 0) {
    uint64_t v3 = v20;
  }
  else {
    uint64_t v3 = (uint64_t)v19[1];
  }
  uint64_t v4 = (void *)MEMORY[0x263F8C0F8];
  long long v5 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v2, v3);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v5, (uint64_t)__p, 1);
  unint64_t v6 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v6, (uint64_t)__p, 1);
  unint64_t v7 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v7, (uint64_t)__p, 1);
  uint64_t v8 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  uint64_t v9 = sub_216779180(v8, (uint64_t)__p, 1);
  uint64_t v10 = sub_216779180(v9, (uint64_t)"  start  ", 9);
  sub_216A4D490(__p);
  if ((v17 & 0x80u) == 0) {
    unint64_t v11 = __p;
  }
  else {
    unint64_t v11 = (void **)__p[0];
  }
  if ((v17 & 0x80u) == 0) {
    uint64_t v12 = v17;
  }
  else {
    uint64_t v12 = (uint64_t)__p[1];
  }
  unint64_t v13 = sub_216779180(v10, (uint64_t)v11, v12);
  sub_216779180(v13, (uint64_t)"; current ", 10);
  if ((char)v17 < 0) {
    operator delete(__p[0]);
  }
  if ((char)v20 < 0) {
    operator delete(v19[0]);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v4 + *(void *)(*v4 - 24)));
  uint64_t v14 = std::locale::use_facet(&v18, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v14->__vftable[2].~facet_0)(v14, 10);
  std::locale::~locale(&v18);
  std::ostream::put();
  return std::ostream::flush();
}

void sub_216A4D238(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, std::locale a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_216A4D280(uint64_t a1)
{
  sub_2169C56DC((uint64_t)&v18, a1 + 8, (long long *)(a1 + 48));
  if ((v20 & 0x80u) == 0) {
    std::string v2 = v19;
  }
  else {
    std::string v2 = (void **)v19[0];
  }
  if ((v20 & 0x80u) == 0) {
    uint64_t v3 = v20;
  }
  else {
    uint64_t v3 = (uint64_t)v19[1];
  }
  uint64_t v4 = (void *)MEMORY[0x263F8C0F8];
  long long v5 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v2, v3);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v5, (uint64_t)__p, 1);
  unint64_t v6 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v6, (uint64_t)__p, 1);
  unint64_t v7 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v7, (uint64_t)__p, 1);
  uint64_t v8 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  uint64_t v9 = sub_216779180(v8, (uint64_t)__p, 1);
  uint64_t v10 = sub_216779180(v9, (uint64_t)" success ", 9);
  sub_216A4D490(__p);
  if ((v17 & 0x80u) == 0) {
    unint64_t v11 = __p;
  }
  else {
    unint64_t v11 = (void **)__p[0];
  }
  if ((v17 & 0x80u) == 0) {
    uint64_t v12 = v17;
  }
  else {
    uint64_t v12 = (uint64_t)__p[1];
  }
  unint64_t v13 = sub_216779180(v10, (uint64_t)v11, v12);
  sub_216779180(v13, (uint64_t)"; next ", 7);
  if ((char)v17 < 0) {
    operator delete(__p[0]);
  }
  if ((char)v20 < 0) {
    operator delete(v19[0]);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v4 + *(void *)(*v4 - 24)));
  uint64_t v14 = std::locale::use_facet(&v18, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v14->__vftable[2].~facet_0)(v14, 10);
  std::locale::~locale(&v18);
  std::ostream::put();
  return std::ostream::flush();
}

void sub_216A4D448(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, std::locale a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A4D490(void *a1@<X8>)
{
  std::string v2 = __cxa_demangle((const char *)(0x800000021746B348 & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)(0x800000021746B348 & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A4D530(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

void *sub_216A4D544(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  long long v5 = a1[1];
  v15[0] = *a1;
  v15[1] = v5;
  uint64_t v16 = a2;
  char v20 = 0;
  sub_21682E90C(&v19, *(char **)&v15[0], *(char **)(a2 + 8), *(void *)(a2 + 8) - *(void *)&v15[0]);
  uint64_t v7 = pxrInternal__aapl__pxrReserved__::TfStringToInt64((char *)&v19, &v20, v6);
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v19.__r_.__value_.__l.__data_);
  }
  if (v20)
  {
    sub_21682E90C(v17, *(char **)&v15[0], *(char **)(a2 + 8), *(void *)(a2 + 8) - *(void *)&v15[0]);
    if (v18 >= 0) {
      uint64_t v14 = v17;
    }
    else {
      uint64_t v14 = (void *)v17[0];
    }
    pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Integer %s out of range.", v12, v13, v14);
    sub_216A4D734((uint64_t)v15, &v19);
  }
  uint64_t v8 = *(void *)(a3 + 8);
  if (*(void *)a3 == v8
    || (uint64_t v9 = *(const void **)(v8 - 8)) == 0
    || (uint64_t result = __dynamic_cast(v9, (const struct __class_type_info *)&unk_26C757A48, (const struct __class_type_info *)&unk_26C757AD8, 0)) == 0)
  {
    unint64_t v11 = operator new(0x10uLL);
    void *v11 = &unk_26C757B00;
    v11[1] = 0;
    v19.__r_.__value_.__r.__words[0] = (std::string::size_type)v11;
    sub_216A40520((char **)a3, (uint64_t *)&v19);
    if (v19.__r_.__value_.__r.__words[0]) {
      (*(void (**)(std::string::size_type))(*(void *)v19.__r_.__value_.__l.__data_ + 8))(v19.__r_.__value_.__r.__words[0]);
    }
    uint64_t result = *(void **)(*(void *)(a3 + 8) - 8);
  }
  result[1] = v7;
  return result;
}

void sub_216A4D6D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (*(char *)(v21 - 41) < 0) {
    operator delete(*(void **)(v21 - 64));
  }
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A4D734(uint64_t a1, const std::string *a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  exception = (std::runtime_error *)__cxa_allocate_exception(0x28uLL);
  sub_2169C56DC((uint64_t)v8, a1, (long long *)(*(void *)(a1 + 32) + 48));
  std::runtime_error v5 = (std::runtime_error)0;
  v6[0] = 0;
  v6[1] = &v5;
  char v7 = 0;
  v5.__vftable = (std::runtime_error_vtbl *)operator new(0x30uLL);
  v5.__imp_.__imp_ = (const char *)v5.__vftable;
  v6[0] = v5.__vftable + 2;
  v5.__imp_.__imp_ = (const char *)sub_216A3AED4((uint64_t)v6, (uint64_t)v8, (uint64_t)&v9, (uint64_t)v5.__vftable);
  std::runtime_error::runtime_error(exception, a2);
  exception->__vftable = (std::runtime_error_vtbl *)&unk_26C7565F0;
  exception[1] = v5;
  exception[2].__vftable = (std::runtime_error_vtbl *)v6[0];
  v6[0] = 0;
  std::runtime_error v5 = (std::runtime_error)0;
  __cxa_throw(exception, (struct type_info *)&unk_26C7565C8, (void (*)(void *))sub_2169C5680);
}

void sub_216A4D834(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  a12 = &a9;
  sub_2169C5E7C((void ***)&a12);
  if (a22 < 0) {
    operator delete(__p);
  }
  if (v23) {
    __cxa_free_exception(v22);
  }
  _Unwind_Resume(a1);
}

void sub_216A4D89C()
{
}

void sub_216A4D8E0(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_216A4D8F4(void *a1@<X8>)
{
  std::string v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_17BooleanE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_17BooleanE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A4D98C(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_216A4D9A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (_OWORD *)(a1 + 8);
  long long v269 = *(_OWORD *)(a1 + 8);
  long long v271 = *(_OWORD *)(a1 + 24);
  std::runtime_error v5 = (long long *)(a1 + 48);
  sub_2169C56DC((uint64_t)v275, a1 + 8, (long long *)(a1 + 48));
  if ((v278 & 0x80u) == 0) {
    unint64_t v6 = &v276[1];
  }
  else {
    unint64_t v6 = (void **)v276[1];
  }
  if ((v278 & 0x80u) == 0) {
    uint64_t v7 = v278;
  }
  else {
    uint64_t v7 = v277;
  }
  uint64_t v8 = (void *)MEMORY[0x263F8C0F8];
  uint64_t v9 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v6, v7);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v9, (uint64_t)__p, 1);
  uint64_t v10 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v10, (uint64_t)__p, 1);
  unint64_t v11 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v11, (uint64_t)__p, 1);
  uint64_t v12 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  unint64_t v13 = sub_216779180(v12, (uint64_t)__p, 1);
  uint64_t v14 = sub_216779180(v13, (uint64_t)"  start  ", 9);
  sub_216A4FBCC(__p);
  if ((SBYTE7(v274) & 0x80u) == 0) {
    uint64_t v15 = __p;
  }
  else {
    uint64_t v15 = (void **)__p[0];
  }
  if ((SBYTE7(v274) & 0x80u) == 0) {
    uint64_t v16 = BYTE7(v274);
  }
  else {
    uint64_t v16 = (uint64_t)__p[1];
  }
  unsigned __int8 v17 = sub_216779180(v14, (uint64_t)v15, v16);
  sub_216779180(v17, (uint64_t)"; current ", 10);
  if (SBYTE7(v274) < 0) {
    operator delete(__p[0]);
  }
  if ((char)v278 < 0) {
    operator delete(v276[1]);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v8 + *(void *)(*v8 - 24)));
  char v18 = std::locale::use_facet(v275, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v18->__vftable[2].~facet_0)(v18, 10);
  std::locale::~locale(v275);
  std::ostream::put();
  std::ostream::flush();
  sub_2169C56DC((uint64_t)v275, (uint64_t)v4, v5);
  if ((v278 & 0x80u) == 0) {
    std::string v19 = &v276[1];
  }
  else {
    std::string v19 = (void **)v276[1];
  }
  if ((v278 & 0x80u) == 0) {
    uint64_t v20 = v278;
  }
  else {
    uint64_t v20 = v277;
  }
  uint64_t v21 = (void *)MEMORY[0x263F8C0F8];
  char v22 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v19, v20);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v22, (uint64_t)__p, 1);
  int v23 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v23, (uint64_t)__p, 1);
  uint64_t v24 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v24, (uint64_t)__p, 1);
  unint64_t v25 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  uint64_t v26 = sub_216779180(v25, (uint64_t)__p, 1);
  uint64_t v27 = sub_216779180(v26, (uint64_t)"  start  ", 9);
  sub_216A4FC78(__p);
  if ((SBYTE7(v274) & 0x80u) == 0) {
    uint64_t v28 = __p;
  }
  else {
    uint64_t v28 = (void **)__p[0];
  }
  if ((SBYTE7(v274) & 0x80u) == 0) {
    uint64_t v29 = BYTE7(v274);
  }
  else {
    uint64_t v29 = (uint64_t)__p[1];
  }
  uint64_t v30 = sub_216779180(v27, (uint64_t)v28, v29);
  sub_216779180(v30, (uint64_t)"; current ", 10);
  if (SBYTE7(v274) < 0) {
    operator delete(__p[0]);
  }
  if ((char)v278 < 0) {
    operator delete(v276[1]);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v21 + *(void *)(*v21 - 24)));
  uint64_t v31 = std::locale::use_facet(v275, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v31->__vftable[2].~facet_0)(v31, 10);
  std::locale::~locale(v275);
  std::ostream::put();
  std::ostream::flush();
  long long v32 = v4[1];
  *(_OWORD *)std::string __p = *v4;
  long long v274 = v32;
  if (sub_216A4FD2C((void *)a1))
  {
    long long v33 = v4[1];
    *(_OWORD *)&v275[0].__locale_ = *v4;
    *(_OWORD *)v276 = v33;
    char v34 = sub_216A40368((void *)a1);
    long long v35 = *(_OWORD *)v276;
    *uint64_t v4 = *(_OWORD *)&v275[0].__locale_;
    v4[1] = v35;
    if ((v34 & 1) == 0)
    {
      sub_2169C56DC((uint64_t)v275, (uint64_t)v4, v5);
      if ((v278 & 0x80u) == 0) {
        uint64_t v173 = &v276[1];
      }
      else {
        uint64_t v173 = (void **)v276[1];
      }
      if ((v278 & 0x80u) == 0) {
        uint64_t v174 = v278;
      }
      else {
        uint64_t v174 = v277;
      }
      v175 = (void *)MEMORY[0x263F8C0F8];
      uint64_t v176 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v173, v174);
      LOBYTE(__p[0]) = 58;
      sub_216779180(v176, (uint64_t)__p, 1);
      long long v177 = (void *)std::ostream::operator<<();
      LOBYTE(__p[0]) = 58;
      sub_216779180(v177, (uint64_t)__p, 1);
      v178 = (void *)std::ostream::operator<<();
      LOBYTE(__p[0]) = 40;
      sub_216779180(v178, (uint64_t)__p, 1);
      long long v179 = (void *)std::ostream::operator<<();
      LOBYTE(__p[0]) = 41;
      long long v180 = sub_216779180(v179, (uint64_t)__p, 1);
      v181 = sub_216779180(v180, (uint64_t)" success ", 9);
      sub_216A4FC78(__p);
      if ((SBYTE7(v274) & 0x80u) == 0) {
        v182 = __p;
      }
      else {
        v182 = (void **)__p[0];
      }
      if ((SBYTE7(v274) & 0x80u) == 0) {
        uint64_t v183 = BYTE7(v274);
      }
      else {
        uint64_t v183 = (uint64_t)__p[1];
      }
      unsigned __int8 v184 = sub_216779180(v181, (uint64_t)v182, v183);
      sub_216779180(v184, (uint64_t)"; next ", 7);
      if (SBYTE7(v274) < 0) {
        operator delete(__p[0]);
      }
      if ((char)v278 < 0) {
        operator delete(v276[1]);
      }
      goto LABEL_235;
    }
  }
  long long v36 = v274;
  *uint64_t v4 = *(_OWORD *)__p;
  v4[1] = v36;
  sub_2169C56DC((uint64_t)v275, (uint64_t)v4, v5);
  if ((v278 & 0x80u) == 0) {
    uint64_t v37 = &v276[1];
  }
  else {
    uint64_t v37 = (void **)v276[1];
  }
  if ((v278 & 0x80u) == 0) {
    uint64_t v38 = v278;
  }
  else {
    uint64_t v38 = v277;
  }
  uint64_t v39 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v37, v38);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v39, (uint64_t)__p, 1);
  uint64_t v40 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v40, (uint64_t)__p, 1);
  uint64_t v41 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v41, (uint64_t)__p, 1);
  uint64_t v42 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  uint64_t v43 = sub_216779180(v42, (uint64_t)__p, 1);
  uint64_t v44 = sub_216779180(v43, (uint64_t)" failure ", 9);
  sub_216A4FC78(__p);
  if ((SBYTE7(v274) & 0x80u) == 0) {
    uint64_t v45 = __p;
  }
  else {
    uint64_t v45 = (void **)__p[0];
  }
  if ((SBYTE7(v274) & 0x80u) == 0) {
    uint64_t v46 = BYTE7(v274);
  }
  else {
    uint64_t v46 = (uint64_t)__p[1];
  }
  uint64_t v47 = sub_216779180(v44, (uint64_t)v45, v46);
  std::ios_base::getloc((const std::ios_base *)((char *)v47 + *(void *)(*v47 - 24)));
  std::locale v48 = std::locale::use_facet(&v279, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v48->__vftable[2].~facet_0)(v48, 10);
  std::locale::~locale(&v279);
  std::ostream::put();
  std::ostream::flush();
  if (SBYTE7(v274) < 0) {
    operator delete(__p[0]);
  }
  if ((char)v278 < 0) {
    operator delete(v276[1]);
  }
  sub_2169C56DC((uint64_t)v275, (uint64_t)v4, v5);
  if ((v278 & 0x80u) == 0) {
    uint64_t v49 = &v276[1];
  }
  else {
    uint64_t v49 = (void **)v276[1];
  }
  if ((v278 & 0x80u) == 0) {
    uint64_t v50 = v278;
  }
  else {
    uint64_t v50 = v277;
  }
  std::locale v51 = (void *)MEMORY[0x263F8C0F8];
  std::locale v52 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v49, v50);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v52, (uint64_t)__p, 1);
  std::locale v53 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v53, (uint64_t)__p, 1);
  uint64_t v54 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v54, (uint64_t)__p, 1);
  long long v55 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  uint64_t v56 = sub_216779180(v55, (uint64_t)__p, 1);
  uint64_t v57 = sub_216779180(v56, (uint64_t)"  start  ", 9);
  sub_216A4FD8C(__p);
  if ((SBYTE7(v274) & 0x80u) == 0) {
    uint64_t v58 = __p;
  }
  else {
    uint64_t v58 = (void **)__p[0];
  }
  if ((SBYTE7(v274) & 0x80u) == 0) {
    uint64_t v59 = BYTE7(v274);
  }
  else {
    uint64_t v59 = (uint64_t)__p[1];
  }
  uint64_t v60 = sub_216779180(v57, (uint64_t)v58, v59);
  sub_216779180(v60, (uint64_t)"; current ", 10);
  if (SBYTE7(v274) < 0) {
    operator delete(__p[0]);
  }
  if ((char)v278 < 0) {
    operator delete(v276[1]);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v51 + *(void *)(*v51 - 24)));
  uint64_t v61 = std::locale::use_facet(v275, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v61->__vftable[2].~facet_0)(v61, 10);
  std::locale::~locale(v275);
  std::ostream::put();
  std::ostream::flush();
  if (sub_216A4FE40((void *)a1))
  {
    long long v62 = v4[1];
    *(_OWORD *)&v275[0].__locale_ = *v4;
    *(_OWORD *)v276 = v62;
    char v63 = sub_216A40368((void *)a1);
    long long v64 = *(_OWORD *)v276;
    *uint64_t v4 = *(_OWORD *)&v275[0].__locale_;
    v4[1] = v64;
    if ((v63 & 1) == 0)
    {
      sub_2169C56DC((uint64_t)v275, (uint64_t)v4, v5);
      if ((v278 & 0x80u) == 0) {
        std::locale v185 = &v276[1];
      }
      else {
        std::locale v185 = (void **)v276[1];
      }
      if ((v278 & 0x80u) == 0) {
        uint64_t v186 = v278;
      }
      else {
        uint64_t v186 = v277;
      }
      v175 = (void *)MEMORY[0x263F8C0F8];
      uint64_t v187 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v185, v186);
      LOBYTE(__p[0]) = 58;
      sub_216779180(v187, (uint64_t)__p, 1);
      unsigned __int8 v188 = (void *)std::ostream::operator<<();
      LOBYTE(__p[0]) = 58;
      sub_216779180(v188, (uint64_t)__p, 1);
      std::locale v189 = (void *)std::ostream::operator<<();
      LOBYTE(__p[0]) = 40;
      sub_216779180(v189, (uint64_t)__p, 1);
      v190 = (void *)std::ostream::operator<<();
      LOBYTE(__p[0]) = 41;
      std::locale v191 = sub_216779180(v190, (uint64_t)__p, 1);
      uint64_t v192 = sub_216779180(v191, (uint64_t)" success ", 9);
      sub_216A4FD8C(__p);
      if ((SBYTE7(v274) & 0x80u) == 0) {
        unsigned __int8 v193 = __p;
      }
      else {
        unsigned __int8 v193 = (void **)__p[0];
      }
      if ((SBYTE7(v274) & 0x80u) == 0) {
        uint64_t v194 = BYTE7(v274);
      }
      else {
        uint64_t v194 = (uint64_t)__p[1];
      }
      v195 = sub_216779180(v192, (uint64_t)v193, v194);
      sub_216779180(v195, (uint64_t)"; next ", 7);
      if (SBYTE7(v274) < 0) {
        operator delete(__p[0]);
      }
      if ((char)v278 < 0) {
        operator delete(v276[1]);
      }
LABEL_235:
      sub_216A3AB00(a1);
      std::ios_base::getloc((const std::ios_base *)((char *)v175 + *(void *)(*v175 - 24)));
      v196 = std::locale::use_facet(v275, MEMORY[0x263F8C108]);
      ((void (*)(const std::locale::facet *, uint64_t))v196->__vftable[2].~facet_0)(v196, 10);
      std::locale::~locale(v275);
      std::ostream::put();
      std::ostream::flush();
      sub_2169C56DC((uint64_t)v275, (uint64_t)v4, v5);
      if ((v278 & 0x80u) == 0) {
        uint64_t v197 = &v276[1];
      }
      else {
        uint64_t v197 = (void **)v276[1];
      }
      if ((v278 & 0x80u) == 0) {
        uint64_t v198 = v278;
      }
      else {
        uint64_t v198 = v277;
      }
      v199 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v197, v198);
      LOBYTE(__p[0]) = 58;
      sub_216779180(v199, (uint64_t)__p, 1);
      v200 = (void *)std::ostream::operator<<();
      LOBYTE(__p[0]) = 58;
      sub_216779180(v200, (uint64_t)__p, 1);
      v201 = (void *)std::ostream::operator<<();
      LOBYTE(__p[0]) = 40;
      sub_216779180(v201, (uint64_t)__p, 1);
      v202 = (void *)std::ostream::operator<<();
      LOBYTE(__p[0]) = 41;
      v203 = sub_216779180(v202, (uint64_t)__p, 1);
      v204 = sub_216779180(v203, (uint64_t)"  apply  ", 9);
      sub_216A4FBCC(__p);
      if ((SBYTE7(v274) & 0x80u) == 0) {
        v205 = __p;
      }
      else {
        v205 = (void **)__p[0];
      }
      if ((SBYTE7(v274) & 0x80u) == 0) {
        uint64_t v206 = BYTE7(v274);
      }
      else {
        uint64_t v206 = (uint64_t)__p[1];
      }
      v207 = sub_216779180(v204, (uint64_t)v205, v206);
      std::ios_base::getloc((const std::ios_base *)((char *)v207 + *(void *)(*v207 - 24)));
      v208 = std::locale::use_facet(&v279, MEMORY[0x263F8C108]);
      ((void (*)(const std::locale::facet *, uint64_t))v208->__vftable[2].~facet_0)(v208, 10);
      std::locale::~locale(&v279);
      std::ostream::put();
      std::ostream::flush();
      if (SBYTE7(v274) < 0) {
        operator delete(__p[0]);
      }
      if ((char)v278 < 0) {
        operator delete(v276[1]);
      }
      *((unsigned char *)sub_216A4FEA0(a2) + 8) = 1;
      sub_2169C56DC((uint64_t)v275, (uint64_t)v4, v5);
      if ((v278 & 0x80u) == 0) {
        v209 = &v276[1];
      }
      else {
        v209 = (void **)v276[1];
      }
      if ((v278 & 0x80u) == 0) {
        uint64_t v210 = v278;
      }
      else {
        uint64_t v210 = v277;
      }
      v211 = (void *)MEMORY[0x263F8C0F8];
      v212 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v209, v210);
      LOBYTE(__p[0]) = 58;
      sub_216779180(v212, (uint64_t)__p, 1);
      v213 = (void *)std::ostream::operator<<();
      LOBYTE(__p[0]) = 58;
      sub_216779180(v213, (uint64_t)__p, 1);
      v214 = (void *)std::ostream::operator<<();
      LOBYTE(__p[0]) = 40;
      sub_216779180(v214, (uint64_t)__p, 1);
      v215 = (void *)std::ostream::operator<<();
      LOBYTE(__p[0]) = 41;
      v216 = sub_216779180(v215, (uint64_t)__p, 1);
      v217 = sub_216779180(v216, (uint64_t)" success ", 9);
      sub_216A4FBCC(__p);
      if ((SBYTE7(v274) & 0x80u) == 0) {
        v218 = __p;
      }
      else {
        v218 = (void **)__p[0];
      }
      if ((SBYTE7(v274) & 0x80u) == 0) {
        uint64_t v219 = BYTE7(v274);
      }
      else {
        uint64_t v219 = (uint64_t)__p[1];
      }
      v220 = sub_216779180(v217, (uint64_t)v218, v219);
      sub_216779180(v220, (uint64_t)"; next ", 7);
      if (SBYTE7(v274) < 0) {
        operator delete(__p[0]);
      }
      if ((char)v278 < 0) {
        operator delete(v276[1]);
      }
      goto LABEL_333;
    }
  }
  sub_2169C56DC((uint64_t)v275, (uint64_t)v4, v5);
  if ((v278 & 0x80u) == 0) {
    uint64_t v65 = &v276[1];
  }
  else {
    uint64_t v65 = (void **)v276[1];
  }
  if ((v278 & 0x80u) == 0) {
    uint64_t v66 = v278;
  }
  else {
    uint64_t v66 = v277;
  }
  uint64_t v67 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v65, v66);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v67, (uint64_t)__p, 1);
  uint64_t v68 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v68, (uint64_t)__p, 1);
  uint64_t v69 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v69, (uint64_t)__p, 1);
  uint64_t v70 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  uint64_t v71 = sub_216779180(v70, (uint64_t)__p, 1);
  long long v72 = sub_216779180(v71, (uint64_t)" failure ", 9);
  sub_216A4FD8C(__p);
  if ((SBYTE7(v274) & 0x80u) == 0) {
    uint64_t v73 = __p;
  }
  else {
    uint64_t v73 = (void **)__p[0];
  }
  if ((SBYTE7(v274) & 0x80u) == 0) {
    uint64_t v74 = BYTE7(v274);
  }
  else {
    uint64_t v74 = (uint64_t)__p[1];
  }
  uint64_t v75 = sub_216779180(v72, (uint64_t)v73, v74);
  std::ios_base::getloc((const std::ios_base *)((char *)v75 + *(void *)(*v75 - 24)));
  uint64_t v76 = std::locale::use_facet(&v279, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v76->__vftable[2].~facet_0)(v76, 10);
  std::locale::~locale(&v279);
  std::ostream::put();
  std::ostream::flush();
  if (SBYTE7(v274) < 0) {
    operator delete(__p[0]);
  }
  if ((char)v278 < 0) {
    operator delete(v276[1]);
  }
  sub_2169C56DC((uint64_t)v275, (uint64_t)v4, v5);
  if ((v278 & 0x80u) == 0) {
    uint64_t v77 = &v276[1];
  }
  else {
    uint64_t v77 = (void **)v276[1];
  }
  if ((v278 & 0x80u) == 0) {
    uint64_t v78 = v278;
  }
  else {
    uint64_t v78 = v277;
  }
  uint64_t v79 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v77, v78);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v79, (uint64_t)__p, 1);
  uint64_t v80 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v80, (uint64_t)__p, 1);
  uint64_t v81 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v81, (uint64_t)__p, 1);
  uint64_t v82 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  uint64_t v83 = sub_216779180(v82, (uint64_t)__p, 1);
  long long v84 = sub_216779180(v83, (uint64_t)" failure ", 9);
  sub_216A4FBCC(__p);
  if ((SBYTE7(v274) & 0x80u) == 0) {
    std::locale v85 = __p;
  }
  else {
    std::locale v85 = (void **)__p[0];
  }
  if ((SBYTE7(v274) & 0x80u) == 0) {
    uint64_t v86 = BYTE7(v274);
  }
  else {
    uint64_t v86 = (uint64_t)__p[1];
  }
  uint64_t v87 = sub_216779180(v84, (uint64_t)v85, v86);
  std::ios_base::getloc((const std::ios_base *)((char *)v87 + *(void *)(*v87 - 24)));
  std::locale v88 = std::locale::use_facet(&v279, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v88->__vftable[2].~facet_0)(v88, 10);
  std::locale::~locale(&v279);
  std::ostream::put();
  std::ostream::flush();
  if (SBYTE7(v274) < 0) {
    operator delete(__p[0]);
  }
  if ((char)v278 < 0) {
    operator delete(v276[1]);
  }
  *uint64_t v4 = v269;
  v4[1] = v271;
  long long v270 = *v4;
  long long v272 = v4[1];
  sub_2169C56DC((uint64_t)v275, (uint64_t)v4, v5);
  if ((v278 & 0x80u) == 0) {
    std::locale v89 = &v276[1];
  }
  else {
    std::locale v89 = (void **)v276[1];
  }
  if ((v278 & 0x80u) == 0) {
    uint64_t v90 = v278;
  }
  else {
    uint64_t v90 = v277;
  }
  uint64_t v91 = (void *)MEMORY[0x263F8C0F8];
  unsigned __int8 v92 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v89, v90);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v92, (uint64_t)__p, 1);
  uint64_t v93 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v93, (uint64_t)__p, 1);
  uint64_t v94 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v94, (uint64_t)__p, 1);
  uint64_t v95 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  uint64_t v96 = sub_216779180(v95, (uint64_t)__p, 1);
  uint64_t v97 = sub_216779180(v96, (uint64_t)"  start  ", 9);
  sub_216A50000(__p);
  if ((SBYTE7(v274) & 0x80u) == 0) {
    long long v98 = __p;
  }
  else {
    long long v98 = (void **)__p[0];
  }
  if ((SBYTE7(v274) & 0x80u) == 0) {
    uint64_t v99 = BYTE7(v274);
  }
  else {
    uint64_t v99 = (uint64_t)__p[1];
  }
  uint64_t v100 = sub_216779180(v97, (uint64_t)v98, v99);
  sub_216779180(v100, (uint64_t)"; current ", 10);
  if (SBYTE7(v274) < 0) {
    operator delete(__p[0]);
  }
  if ((char)v278 < 0) {
    operator delete(v276[1]);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v91 + *(void *)(*v91 - 24)));
  uint64_t v101 = std::locale::use_facet(v275, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v101->__vftable[2].~facet_0)(v101, 10);
  std::locale::~locale(v275);
  std::ostream::put();
  std::ostream::flush();
  sub_2169C56DC((uint64_t)v275, (uint64_t)v4, v5);
  if ((v278 & 0x80u) == 0) {
    uint64_t v102 = &v276[1];
  }
  else {
    uint64_t v102 = (void **)v276[1];
  }
  if ((v278 & 0x80u) == 0) {
    uint64_t v103 = v278;
  }
  else {
    uint64_t v103 = v277;
  }
  uint64_t v104 = (void *)MEMORY[0x263F8C0F8];
  uint64_t v105 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v102, v103);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v105, (uint64_t)__p, 1);
  std::locale v106 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v106, (uint64_t)__p, 1);
  uint64_t v107 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v107, (uint64_t)__p, 1);
  unsigned __int8 v108 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  uint64_t v109 = sub_216779180(v108, (uint64_t)__p, 1);
  long long v110 = sub_216779180(v109, (uint64_t)"  start  ", 9);
  sub_216A500AC(__p);
  if ((SBYTE7(v274) & 0x80u) == 0) {
    uint64_t v111 = __p;
  }
  else {
    uint64_t v111 = (void **)__p[0];
  }
  if ((SBYTE7(v274) & 0x80u) == 0) {
    uint64_t v112 = BYTE7(v274);
  }
  else {
    uint64_t v112 = (uint64_t)__p[1];
  }
  v113 = sub_216779180(v110, (uint64_t)v111, v112);
  sub_216779180(v113, (uint64_t)"; current ", 10);
  if (SBYTE7(v274) < 0) {
    operator delete(__p[0]);
  }
  if ((char)v278 < 0) {
    operator delete(v276[1]);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v104 + *(void *)(*v104 - 24)));
  v114 = std::locale::use_facet(v275, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v114->__vftable[2].~facet_0)(v114, 10);
  std::locale::~locale(v275);
  std::ostream::put();
  std::ostream::flush();
  long long v115 = v4[1];
  *(_OWORD *)std::string __p = *v4;
  long long v274 = v115;
  if (sub_216A50160((void *)a1))
  {
    long long v116 = v4[1];
    *(_OWORD *)&v275[0].__locale_ = *v4;
    *(_OWORD *)v276 = v116;
    char v117 = sub_216A40368((void *)a1);
    long long v118 = *(_OWORD *)v276;
    *uint64_t v4 = *(_OWORD *)&v275[0].__locale_;
    v4[1] = v118;
    if ((v117 & 1) == 0)
    {
      sub_2169C56DC((uint64_t)v275, (uint64_t)v4, v5);
      if ((v278 & 0x80u) == 0) {
        v221 = &v276[1];
      }
      else {
        v221 = (void **)v276[1];
      }
      if ((v278 & 0x80u) == 0) {
        uint64_t v222 = v278;
      }
      else {
        uint64_t v222 = v277;
      }
      v223 = (void *)MEMORY[0x263F8C0F8];
      v224 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v221, v222);
      LOBYTE(__p[0]) = 58;
      sub_216779180(v224, (uint64_t)__p, 1);
      v225 = (void *)std::ostream::operator<<();
      LOBYTE(__p[0]) = 58;
      sub_216779180(v225, (uint64_t)__p, 1);
      v226 = (void *)std::ostream::operator<<();
      LOBYTE(__p[0]) = 40;
      sub_216779180(v226, (uint64_t)__p, 1);
      v227 = (void *)std::ostream::operator<<();
      LOBYTE(__p[0]) = 41;
      v228 = sub_216779180(v227, (uint64_t)__p, 1);
      v229 = sub_216779180(v228, (uint64_t)" success ", 9);
      sub_216A500AC(__p);
      if ((SBYTE7(v274) & 0x80u) == 0) {
        v230 = __p;
      }
      else {
        v230 = (void **)__p[0];
      }
      if ((SBYTE7(v274) & 0x80u) == 0) {
        uint64_t v231 = BYTE7(v274);
      }
      else {
        uint64_t v231 = (uint64_t)__p[1];
      }
      v232 = sub_216779180(v229, (uint64_t)v230, v231);
      sub_216779180(v232, (uint64_t)"; next ", 7);
      if (SBYTE7(v274) < 0) {
        operator delete(__p[0]);
      }
      if ((char)v278 < 0) {
        operator delete(v276[1]);
      }
      goto LABEL_301;
    }
  }
  long long v119 = v274;
  *uint64_t v4 = *(_OWORD *)__p;
  v4[1] = v119;
  sub_2169C56DC((uint64_t)v275, (uint64_t)v4, v5);
  if ((v278 & 0x80u) == 0) {
    long long v120 = &v276[1];
  }
  else {
    long long v120 = (void **)v276[1];
  }
  if ((v278 & 0x80u) == 0) {
    uint64_t v121 = v278;
  }
  else {
    uint64_t v121 = v277;
  }
  uint64_t v122 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v120, v121);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v122, (uint64_t)__p, 1);
  uint64_t v123 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v123, (uint64_t)__p, 1);
  uint64_t v124 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v124, (uint64_t)__p, 1);
  long long v125 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  std::locale v126 = sub_216779180(v125, (uint64_t)__p, 1);
  uint64_t v127 = sub_216779180(v126, (uint64_t)" failure ", 9);
  sub_216A500AC(__p);
  if ((SBYTE7(v274) & 0x80u) == 0) {
    uint64_t v128 = __p;
  }
  else {
    uint64_t v128 = (void **)__p[0];
  }
  if ((SBYTE7(v274) & 0x80u) == 0) {
    uint64_t v129 = BYTE7(v274);
  }
  else {
    uint64_t v129 = (uint64_t)__p[1];
  }
  std::locale v130 = sub_216779180(v127, (uint64_t)v128, v129);
  std::ios_base::getloc((const std::ios_base *)((char *)v130 + *(void *)(*v130 - 24)));
  v131 = std::locale::use_facet(&v279, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v131->__vftable[2].~facet_0)(v131, 10);
  std::locale::~locale(&v279);
  std::ostream::put();
  std::ostream::flush();
  if (SBYTE7(v274) < 0) {
    operator delete(__p[0]);
  }
  if ((char)v278 < 0) {
    operator delete(v276[1]);
  }
  sub_2169C56DC((uint64_t)v275, (uint64_t)v4, v5);
  if ((v278 & 0x80u) == 0) {
    uint64_t v132 = &v276[1];
  }
  else {
    uint64_t v132 = (void **)v276[1];
  }
  if ((v278 & 0x80u) == 0) {
    uint64_t v133 = v278;
  }
  else {
    uint64_t v133 = v277;
  }
  uint64_t v134 = (void *)MEMORY[0x263F8C0F8];
  v135 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v132, v133);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v135, (uint64_t)__p, 1);
  uint64_t v136 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v136, (uint64_t)__p, 1);
  v137 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v137, (uint64_t)__p, 1);
  v138 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  long long v139 = sub_216779180(v138, (uint64_t)__p, 1);
  uint64_t v140 = sub_216779180(v139, (uint64_t)"  start  ", 9);
  sub_216A501CC(__p);
  if ((SBYTE7(v274) & 0x80u) == 0) {
    v141 = __p;
  }
  else {
    v141 = (void **)__p[0];
  }
  if ((SBYTE7(v274) & 0x80u) == 0) {
    uint64_t v142 = BYTE7(v274);
  }
  else {
    uint64_t v142 = (uint64_t)__p[1];
  }
  uint64_t v143 = sub_216779180(v140, (uint64_t)v141, v142);
  sub_216779180(v143, (uint64_t)"; current ", 10);
  if (SBYTE7(v274) < 0) {
    operator delete(__p[0]);
  }
  if ((char)v278 < 0) {
    operator delete(v276[1]);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v134 + *(void *)(*v134 - 24)));
  uint64_t v144 = std::locale::use_facet(v275, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v144->__vftable[2].~facet_0)(v144, 10);
  std::locale::~locale(v275);
  std::ostream::put();
  std::ostream::flush();
  if (sub_216A50280((void *)a1))
  {
    long long v145 = v4[1];
    *(_OWORD *)&v275[0].__locale_ = *v4;
    *(_OWORD *)v276 = v145;
    char v146 = sub_216A40368((void *)a1);
    long long v147 = *(_OWORD *)v276;
    *uint64_t v4 = *(_OWORD *)&v275[0].__locale_;
    v4[1] = v147;
    if ((v146 & 1) == 0)
    {
      sub_2169C56DC((uint64_t)v275, (uint64_t)v4, v5);
      if ((v278 & 0x80u) == 0) {
        v233 = &v276[1];
      }
      else {
        v233 = (void **)v276[1];
      }
      if ((v278 & 0x80u) == 0) {
        uint64_t v234 = v278;
      }
      else {
        uint64_t v234 = v277;
      }
      v223 = (void *)MEMORY[0x263F8C0F8];
      v235 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v233, v234);
      LOBYTE(__p[0]) = 58;
      sub_216779180(v235, (uint64_t)__p, 1);
      v236 = (void *)std::ostream::operator<<();
      LOBYTE(__p[0]) = 58;
      sub_216779180(v236, (uint64_t)__p, 1);
      v237 = (void *)std::ostream::operator<<();
      LOBYTE(__p[0]) = 40;
      sub_216779180(v237, (uint64_t)__p, 1);
      v238 = (void *)std::ostream::operator<<();
      LOBYTE(__p[0]) = 41;
      v239 = sub_216779180(v238, (uint64_t)__p, 1);
      v240 = sub_216779180(v239, (uint64_t)" success ", 9);
      sub_216A501CC(__p);
      if ((SBYTE7(v274) & 0x80u) == 0) {
        v241 = __p;
      }
      else {
        v241 = (void **)__p[0];
      }
      if ((SBYTE7(v274) & 0x80u) == 0) {
        uint64_t v242 = BYTE7(v274);
      }
      else {
        uint64_t v242 = (uint64_t)__p[1];
      }
      v243 = sub_216779180(v240, (uint64_t)v241, v242);
      sub_216779180(v243, (uint64_t)"; next ", 7);
      if (SBYTE7(v274) < 0) {
        operator delete(__p[0]);
      }
      if ((char)v278 < 0) {
        operator delete(v276[1]);
      }
LABEL_301:
      sub_216A3AB00(a1);
      std::ios_base::getloc((const std::ios_base *)((char *)v223 + *(void *)(*v223 - 24)));
      v244 = std::locale::use_facet(v275, MEMORY[0x263F8C108]);
      ((void (*)(const std::locale::facet *, uint64_t))v244->__vftable[2].~facet_0)(v244, 10);
      std::locale::~locale(v275);
      std::ostream::put();
      std::ostream::flush();
      sub_2169C56DC((uint64_t)v275, (uint64_t)v4, v5);
      if ((v278 & 0x80u) == 0) {
        v245 = &v276[1];
      }
      else {
        v245 = (void **)v276[1];
      }
      if ((v278 & 0x80u) == 0) {
        uint64_t v246 = v278;
      }
      else {
        uint64_t v246 = v277;
      }
      v247 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v245, v246);
      LOBYTE(__p[0]) = 58;
      sub_216779180(v247, (uint64_t)__p, 1);
      v248 = (void *)std::ostream::operator<<();
      LOBYTE(__p[0]) = 58;
      sub_216779180(v248, (uint64_t)__p, 1);
      v249 = (void *)std::ostream::operator<<();
      LOBYTE(__p[0]) = 40;
      sub_216779180(v249, (uint64_t)__p, 1);
      v250 = (void *)std::ostream::operator<<();
      LOBYTE(__p[0]) = 41;
      v251 = sub_216779180(v250, (uint64_t)__p, 1);
      v252 = sub_216779180(v251, (uint64_t)"  apply  ", 9);
      sub_216A50000(__p);
      if ((SBYTE7(v274) & 0x80u) == 0) {
        v253 = __p;
      }
      else {
        v253 = (void **)__p[0];
      }
      if ((SBYTE7(v274) & 0x80u) == 0) {
        uint64_t v254 = BYTE7(v274);
      }
      else {
        uint64_t v254 = (uint64_t)__p[1];
      }
      v255 = sub_216779180(v252, (uint64_t)v253, v254);
      std::ios_base::getloc((const std::ios_base *)((char *)v255 + *(void *)(*v255 - 24)));
      v256 = std::locale::use_facet(&v279, MEMORY[0x263F8C108]);
      ((void (*)(const std::locale::facet *, uint64_t))v256->__vftable[2].~facet_0)(v256, 10);
      std::locale::~locale(&v279);
      std::ostream::put();
      std::ostream::flush();
      if (SBYTE7(v274) < 0) {
        operator delete(__p[0]);
      }
      if ((char)v278 < 0) {
        operator delete(v276[1]);
      }
      *((unsigned char *)sub_216A4FEA0(a2) + 8) = 0;
      sub_2169C56DC((uint64_t)v275, (uint64_t)v4, v5);
      if ((v278 & 0x80u) == 0) {
        v257 = &v276[1];
      }
      else {
        v257 = (void **)v276[1];
      }
      if ((v278 & 0x80u) == 0) {
        uint64_t v258 = v278;
      }
      else {
        uint64_t v258 = v277;
      }
      v211 = (void *)MEMORY[0x263F8C0F8];
      v259 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v257, v258);
      LOBYTE(__p[0]) = 58;
      sub_216779180(v259, (uint64_t)__p, 1);
      v260 = (void *)std::ostream::operator<<();
      LOBYTE(__p[0]) = 58;
      sub_216779180(v260, (uint64_t)__p, 1);
      v261 = (void *)std::ostream::operator<<();
      LOBYTE(__p[0]) = 40;
      sub_216779180(v261, (uint64_t)__p, 1);
      v262 = (void *)std::ostream::operator<<();
      LOBYTE(__p[0]) = 41;
      v263 = sub_216779180(v262, (uint64_t)__p, 1);
      v264 = sub_216779180(v263, (uint64_t)" success ", 9);
      sub_216A50000(__p);
      if ((SBYTE7(v274) & 0x80u) == 0) {
        v265 = __p;
      }
      else {
        v265 = (void **)__p[0];
      }
      if ((SBYTE7(v274) & 0x80u) == 0) {
        uint64_t v266 = BYTE7(v274);
      }
      else {
        uint64_t v266 = (uint64_t)__p[1];
      }
      v267 = sub_216779180(v264, (uint64_t)v265, v266);
      sub_216779180(v267, (uint64_t)"; next ", 7);
      if (SBYTE7(v274) < 0) {
        operator delete(__p[0]);
      }
      if ((char)v278 < 0) {
        operator delete(v276[1]);
      }
LABEL_333:
      sub_216A3AB00(a1);
      std::ios_base::getloc((const std::ios_base *)((char *)v211 + *(void *)(*v211 - 24)));
      v268 = std::locale::use_facet(v275, MEMORY[0x263F8C108]);
      ((void (*)(const std::locale::facet *, uint64_t))v268->__vftable[2].~facet_0)(v268, 10);
      std::locale::~locale(v275);
      std::ostream::put();
      std::ostream::flush();
      return 1;
    }
  }
  sub_2169C56DC((uint64_t)v275, (uint64_t)v4, v5);
  if ((v278 & 0x80u) == 0) {
    v148 = &v276[1];
  }
  else {
    v148 = (void **)v276[1];
  }
  if ((v278 & 0x80u) == 0) {
    uint64_t v149 = v278;
  }
  else {
    uint64_t v149 = v277;
  }
  v150 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v148, v149);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v150, (uint64_t)__p, 1);
  v151 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v151, (uint64_t)__p, 1);
  uint64_t v152 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v152, (uint64_t)__p, 1);
  uint64_t v153 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  v154 = sub_216779180(v153, (uint64_t)__p, 1);
  v155 = sub_216779180(v154, (uint64_t)" failure ", 9);
  sub_216A501CC(__p);
  if ((SBYTE7(v274) & 0x80u) == 0) {
    uint64_t v156 = __p;
  }
  else {
    uint64_t v156 = (void **)__p[0];
  }
  if ((SBYTE7(v274) & 0x80u) == 0) {
    uint64_t v157 = BYTE7(v274);
  }
  else {
    uint64_t v157 = (uint64_t)__p[1];
  }
  long long v158 = sub_216779180(v155, (uint64_t)v156, v157);
  std::ios_base::getloc((const std::ios_base *)((char *)v158 + *(void *)(*v158 - 24)));
  uint64_t v159 = std::locale::use_facet(&v279, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v159->__vftable[2].~facet_0)(v159, 10);
  std::locale::~locale(&v279);
  std::ostream::put();
  std::ostream::flush();
  if (SBYTE7(v274) < 0) {
    operator delete(__p[0]);
  }
  if ((char)v278 < 0) {
    operator delete(v276[1]);
  }
  sub_2169C56DC((uint64_t)v275, (uint64_t)v4, v5);
  if ((v278 & 0x80u) == 0) {
    uint64_t v160 = &v276[1];
  }
  else {
    uint64_t v160 = (void **)v276[1];
  }
  if ((v278 & 0x80u) == 0) {
    uint64_t v161 = v278;
  }
  else {
    uint64_t v161 = v277;
  }
  uint64_t v162 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v160, v161);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v162, (uint64_t)__p, 1);
  v163 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v163, (uint64_t)__p, 1);
  uint64_t v164 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v164, (uint64_t)__p, 1);
  uint64_t v165 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  std::locale v166 = sub_216779180(v165, (uint64_t)__p, 1);
  v167 = sub_216779180(v166, (uint64_t)" failure ", 9);
  sub_216A50000(__p);
  if ((SBYTE7(v274) & 0x80u) == 0) {
    v168 = __p;
  }
  else {
    v168 = (void **)__p[0];
  }
  if ((SBYTE7(v274) & 0x80u) == 0) {
    uint64_t v169 = BYTE7(v274);
  }
  else {
    uint64_t v169 = (uint64_t)__p[1];
  }
  long long v170 = sub_216779180(v167, (uint64_t)v168, v169);
  std::ios_base::getloc((const std::ios_base *)((char *)v170 + *(void *)(*v170 - 24)));
  uint64_t v171 = std::locale::use_facet(&v279, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v171->__vftable[2].~facet_0)(v171, 10);
  std::locale::~locale(&v279);
  std::ostream::put();
  std::ostream::flush();
  if (SBYTE7(v274) < 0) {
    operator delete(__p[0]);
  }
  if ((char)v278 < 0) {
    operator delete(v276[1]);
  }
  uint64_t result = 0;
  *uint64_t v4 = v270;
  v4[1] = v272;
  return result;
}

void sub_216A4FA34(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, long long a9, long long a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, std::locale a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0) {
    operator delete(__p);
  }
  _OWORD *v26 = a9;
  v26[1] = a10;
  _Unwind_Resume(exception_object);
}

void sub_216A4FBCC(void *a1@<X8>)
{
  std::string v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_111BooleanTrueE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_111BooleanTrueE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A4FC64(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

void sub_216A4FC78(void *a1@<X8>)
{
  std::string v2 = __cxa_demangle((const char *)(0x800000021746B438 & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)(0x800000021746B438 & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A4FD18(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_216A4FD2C(void *a1)
{
  uint64_t v1 = (_DWORD *)a1[1];
  if (a1[5] - (void)v1 < 4uLL || *v1 != 1702195796) {
    return 0;
  }
  uint64_t v3 = a1[2] + 4;
  a1[1] = v1 + 1;
  a1[2] = v3;
  a1[4] += 4;
  return 1;
}

void sub_216A4FD8C(void *a1@<X8>)
{
  std::string v2 = __cxa_demangle((const char *)(0x800000021746B47FLL & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)(0x800000021746B47FLL & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A4FE2C(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_216A4FE40(void *a1)
{
  uint64_t v1 = (_DWORD *)a1[1];
  if (a1[5] - (void)v1 < 4uLL || *v1 != 1702195828) {
    return 0;
  }
  uint64_t v3 = a1[2] + 4;
  a1[1] = v1 + 1;
  a1[2] = v3;
  a1[4] += 4;
  return 1;
}

void *sub_216A4FEA0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  if (*(void *)a1 == v2
    || (uint64_t v3 = *(const void **)(v2 - 8)) == 0
    || (uint64_t result = __dynamic_cast(v3, (const struct __class_type_info *)&unk_26C757A48, (const struct __class_type_info *)&unk_26C757B18, 0)) == 0)
  {
    std::runtime_error v5 = operator new(0x10uLL);
    *std::runtime_error v5 = &unk_26C757B40;
    v5[1] = 0;
    unint64_t v6 = v5;
    sub_216A40520((char **)a1, (uint64_t *)&v6);
    if (v6) {
      (*(void (**)(void *))(*v6 + 8))(v6);
    }
    return *(void **)(*(void *)(a1 + 8) - 8);
  }
  return result;
}

void sub_216A4FF88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10) {
    sub_21732462C(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A4FFA8()
{
}

void sub_216A4FFEC(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_216A50000(void *a1@<X8>)
{
  uint64_t v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_112BooleanFalseE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_112BooleanFalseE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A50098(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

void sub_216A500AC(void *a1@<X8>)
{
  uint64_t v2 = __cxa_demangle((const char *)(0x800000021746B553 & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)(0x800000021746B553 & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A5014C(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_216A50160(void *a1)
{
  uint64_t v1 = a1[1];
  if ((unint64_t)(a1[5] - v1) < 5) {
    return 0;
  }
  if (*(_DWORD *)v1 != 1936482630 || *(unsigned char *)(v1 + 4) != 101) {
    return 0;
  }
  uint64_t v4 = a1[2] + 5;
  a1[1] = v1 + 5;
  a1[2] = v4;
  a1[4] += 5;
  return 1;
}

void sub_216A501CC(void *a1@<X8>)
{
  uint64_t v2 = __cxa_demangle((const char *)(0x800000021746B59FLL & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)(0x800000021746B59FLL & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A5026C(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_216A50280(void *a1)
{
  uint64_t v1 = a1[1];
  if ((unint64_t)(a1[5] - v1) < 5) {
    return 0;
  }
  if (*(_DWORD *)v1 != 1936482662 || *(unsigned char *)(v1 + 4) != 101) {
    return 0;
  }
  uint64_t v4 = a1[2] + 5;
  a1[1] = v1 + 5;
  a1[2] = v4;
  a1[4] += 5;
  return 1;
}

void sub_216A502EC(void *a1@<X8>)
{
  uint64_t v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_14NoneE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_14NoneE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A50384(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

void sub_216A50398(void *a1@<X8>)
{
  uint64_t v2 = __cxa_demangle((const char *)(0x800000021746B624 & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)(0x800000021746B624 & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A50438(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_216A5044C(void *a1)
{
  uint64_t v1 = (_DWORD *)a1[1];
  if (a1[5] - (void)v1 < 4uLL || *v1 != 1701736270) {
    return 0;
  }
  uint64_t v3 = a1[2] + 4;
  a1[1] = v1 + 1;
  a1[2] = v3;
  a1[4] += 4;
  return 1;
}

void sub_216A504AC(void *a1@<X8>)
{
  uint64_t v2 = __cxa_demangle((const char *)(0x800000021746B66BLL & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)(0x800000021746B66BLL & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A5054C(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_216A50560(void *a1)
{
  uint64_t v1 = (_DWORD *)a1[1];
  if (a1[5] - (void)v1 < 4uLL || *v1 != 1701736302) {
    return 0;
  }
  uint64_t v3 = a1[2] + 4;
  a1[1] = v1 + 1;
  a1[2] = v3;
  a1[4] += 4;
  return 1;
}

void *sub_216A505C0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  if (*(void *)a1 == v2
    || (uint64_t v3 = *(const void **)(v2 - 8)) == 0
    || (uint64_t result = __dynamic_cast(v3, (const struct __class_type_info *)&unk_26C757A48, (const struct __class_type_info *)&unk_26C757B58, 0)) == 0)
  {
    std::runtime_error v5 = operator new(8uLL);
    *std::runtime_error v5 = &unk_26C757B80;
    unint64_t v6 = v5;
    sub_216A40520((char **)a1, (uint64_t *)&v6);
    uint64_t result = v6;
    if (v6) {
      return (void *)(*(uint64_t (**)(void *))(*v6 + 8))(v6);
    }
  }
  return result;
}

void sub_216A506A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10) {
    sub_21732462C(a10);
  }
  _Unwind_Resume(exception_object);
}

void *sub_216A506C0@<X0>(void *a1@<X8>)
{
  uint64_t v2 = operator new(8uLL);
  uint64_t result = pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::NoneNode::NoneNode(v2);
  *a1 = v2;
  return result;
}

void sub_216A506F4(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_216A50708(uint64_t a1, char **a2)
{
  sub_216A507D4(a1);
  sub_216A50E8C(a1);
  long long v5 = *(_OWORD *)(a1 + 8);
  long long v6 = *(_OWORD *)(a1 + 24);
  if sub_216A51544(a1, a2) && (sub_216A51CB0(a1))
  {
    sub_216A5109C(a1);
    sub_216A53EC0(a1, a2);
    sub_216A54800(a1);
    sub_216A509E4(a1);
    return 1;
  }
  else
  {
    *(_OWORD *)(a1 + 8) = v5;
    *(_OWORD *)(a1 + 24) = v6;
    sub_216A512AC(a1);
    sub_216A50BF4(a1);
    return 0;
  }
}

void sub_216A507C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10)
{
  _OWORD *v10 = a9;
  v10[1] = a10;
  _Unwind_Resume(a1);
}

uint64_t sub_216A507D4(uint64_t a1)
{
  sub_2169C56DC((uint64_t)&v18, a1 + 8, (long long *)(a1 + 48));
  if ((v20 & 0x80u) == 0) {
    uint64_t v2 = v19;
  }
  else {
    uint64_t v2 = (void **)v19[0];
  }
  if ((v20 & 0x80u) == 0) {
    uint64_t v3 = v20;
  }
  else {
    uint64_t v3 = (uint64_t)v19[1];
  }
  uint64_t v4 = (void *)MEMORY[0x263F8C0F8];
  long long v5 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v2, v3);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v5, (uint64_t)__p, 1);
  long long v6 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v6, (uint64_t)__p, 1);
  uint64_t v7 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v7, (uint64_t)__p, 1);
  uint64_t v8 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  uint64_t v9 = sub_216779180(v8, (uint64_t)__p, 1);
  uint64_t v10 = sub_216779180(v9, (uint64_t)"  start  ", 9);
  sub_216A50DE0(__p);
  if ((v17 & 0x80u) == 0) {
    unint64_t v11 = __p;
  }
  else {
    unint64_t v11 = (void **)__p[0];
  }
  if ((v17 & 0x80u) == 0) {
    uint64_t v12 = v17;
  }
  else {
    uint64_t v12 = (uint64_t)__p[1];
  }
  unint64_t v13 = sub_216779180(v10, (uint64_t)v11, v12);
  sub_216779180(v13, (uint64_t)"; current ", 10);
  if ((char)v17 < 0) {
    operator delete(__p[0]);
  }
  if ((char)v20 < 0) {
    operator delete(v19[0]);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v4 + *(void *)(*v4 - 24)));
  uint64_t v14 = std::locale::use_facet(&v18, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v14->__vftable[2].~facet_0)(v14, 10);
  std::locale::~locale(&v18);
  std::ostream::put();
  return std::ostream::flush();
}

void sub_216A5099C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, std::locale a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_216A509E4(uint64_t a1)
{
  sub_2169C56DC((uint64_t)&v18, a1 + 8, (long long *)(a1 + 48));
  if ((v20 & 0x80u) == 0) {
    uint64_t v2 = v19;
  }
  else {
    uint64_t v2 = (void **)v19[0];
  }
  if ((v20 & 0x80u) == 0) {
    uint64_t v3 = v20;
  }
  else {
    uint64_t v3 = (uint64_t)v19[1];
  }
  uint64_t v4 = (void *)MEMORY[0x263F8C0F8];
  long long v5 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v2, v3);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v5, (uint64_t)__p, 1);
  long long v6 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v6, (uint64_t)__p, 1);
  uint64_t v7 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v7, (uint64_t)__p, 1);
  uint64_t v8 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  uint64_t v9 = sub_216779180(v8, (uint64_t)__p, 1);
  uint64_t v10 = sub_216779180(v9, (uint64_t)" success ", 9);
  sub_216A50DE0(__p);
  if ((v17 & 0x80u) == 0) {
    unint64_t v11 = __p;
  }
  else {
    unint64_t v11 = (void **)__p[0];
  }
  if ((v17 & 0x80u) == 0) {
    uint64_t v12 = v17;
  }
  else {
    uint64_t v12 = (uint64_t)__p[1];
  }
  unint64_t v13 = sub_216779180(v10, (uint64_t)v11, v12);
  sub_216779180(v13, (uint64_t)"; next ", 7);
  if ((char)v17 < 0) {
    operator delete(__p[0]);
  }
  if ((char)v20 < 0) {
    operator delete(v19[0]);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v4 + *(void *)(*v4 - 24)));
  uint64_t v14 = std::locale::use_facet(&v18, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v14->__vftable[2].~facet_0)(v14, 10);
  std::locale::~locale(&v18);
  std::ostream::put();
  return std::ostream::flush();
}

void sub_216A50BAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, std::locale a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A50BF4(uint64_t a1)
{
  sub_2169C56DC((uint64_t)&v15, a1 + 8, (long long *)(a1 + 48));
  if ((v17 & 0x80u) == 0) {
    uint64_t v1 = v16;
  }
  else {
    uint64_t v1 = (void **)v16[0];
  }
  if ((v17 & 0x80u) == 0) {
    uint64_t v2 = v17;
  }
  else {
    uint64_t v2 = (uint64_t)v16[1];
  }
  uint64_t v3 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v1, v2);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v3, (uint64_t)__p, 1);
  uint64_t v4 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v4, (uint64_t)__p, 1);
  long long v5 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v5, (uint64_t)__p, 1);
  long long v6 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  uint64_t v7 = sub_216779180(v6, (uint64_t)__p, 1);
  uint64_t v8 = sub_216779180(v7, (uint64_t)" failure ", 9);
  sub_216A50DE0(__p);
  if ((v14 & 0x80u) == 0) {
    uint64_t v9 = __p;
  }
  else {
    uint64_t v9 = (void **)__p[0];
  }
  if ((v14 & 0x80u) == 0) {
    uint64_t v10 = v14;
  }
  else {
    uint64_t v10 = (uint64_t)__p[1];
  }
  unint64_t v11 = sub_216779180(v8, (uint64_t)v9, v10);
  std::ios_base::getloc((const std::ios_base *)((char *)v11 + *(void *)(*v11 - 24)));
  uint64_t v12 = std::locale::use_facet(&v18, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v12->__vftable[2].~facet_0)(v12, 10);
  std::locale::~locale(&v18);
  std::ostream::put();
  std::ostream::flush();
  if ((char)v14 < 0) {
    operator delete(__p[0]);
  }
  if ((char)v17 < 0) {
    operator delete(v16[0]);
  }
}

void sub_216A50D98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A50DE0(void *a1@<X8>)
{
  uint64_t v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_18FunctionE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_18FunctionE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A50E78(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_216A50E8C(uint64_t a1)
{
  sub_2169C56DC((uint64_t)&v18, a1 + 8, (long long *)(a1 + 48));
  if ((v20 & 0x80u) == 0) {
    uint64_t v2 = v19;
  }
  else {
    uint64_t v2 = (void **)v19[0];
  }
  if ((v20 & 0x80u) == 0) {
    uint64_t v3 = v20;
  }
  else {
    uint64_t v3 = (uint64_t)v19[1];
  }
  uint64_t v4 = (void *)MEMORY[0x263F8C0F8];
  long long v5 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v2, v3);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v5, (uint64_t)__p, 1);
  long long v6 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v6, (uint64_t)__p, 1);
  uint64_t v7 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v7, (uint64_t)__p, 1);
  uint64_t v8 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  uint64_t v9 = sub_216779180(v8, (uint64_t)__p, 1);
  uint64_t v10 = sub_216779180(v9, (uint64_t)"  start  ", 9);
  sub_216A51498(__p);
  if ((v17 & 0x80u) == 0) {
    unint64_t v11 = __p;
  }
  else {
    unint64_t v11 = (void **)__p[0];
  }
  if ((v17 & 0x80u) == 0) {
    uint64_t v12 = v17;
  }
  else {
    uint64_t v12 = (uint64_t)__p[1];
  }
  unint64_t v13 = sub_216779180(v10, (uint64_t)v11, v12);
  sub_216779180(v13, (uint64_t)"; current ", 10);
  if ((char)v17 < 0) {
    operator delete(__p[0]);
  }
  if ((char)v20 < 0) {
    operator delete(v19[0]);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v4 + *(void *)(*v4 - 24)));
  unsigned __int8 v14 = std::locale::use_facet(&v18, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v14->__vftable[2].~facet_0)(v14, 10);
  std::locale::~locale(&v18);
  std::ostream::put();
  return std::ostream::flush();
}

void sub_216A51054(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, std::locale a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_216A5109C(uint64_t a1)
{
  sub_2169C56DC((uint64_t)&v18, a1 + 8, (long long *)(a1 + 48));
  if ((v20 & 0x80u) == 0) {
    uint64_t v2 = v19;
  }
  else {
    uint64_t v2 = (void **)v19[0];
  }
  if ((v20 & 0x80u) == 0) {
    uint64_t v3 = v20;
  }
  else {
    uint64_t v3 = (uint64_t)v19[1];
  }
  uint64_t v4 = (void *)MEMORY[0x263F8C0F8];
  long long v5 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v2, v3);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v5, (uint64_t)__p, 1);
  long long v6 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v6, (uint64_t)__p, 1);
  uint64_t v7 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v7, (uint64_t)__p, 1);
  uint64_t v8 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  uint64_t v9 = sub_216779180(v8, (uint64_t)__p, 1);
  uint64_t v10 = sub_216779180(v9, (uint64_t)" success ", 9);
  sub_216A51498(__p);
  if ((v17 & 0x80u) == 0) {
    unint64_t v11 = __p;
  }
  else {
    unint64_t v11 = (void **)__p[0];
  }
  if ((v17 & 0x80u) == 0) {
    uint64_t v12 = v17;
  }
  else {
    uint64_t v12 = (uint64_t)__p[1];
  }
  unint64_t v13 = sub_216779180(v10, (uint64_t)v11, v12);
  sub_216779180(v13, (uint64_t)"; next ", 7);
  if ((char)v17 < 0) {
    operator delete(__p[0]);
  }
  if ((char)v20 < 0) {
    operator delete(v19[0]);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v4 + *(void *)(*v4 - 24)));
  unsigned __int8 v14 = std::locale::use_facet(&v18, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v14->__vftable[2].~facet_0)(v14, 10);
  std::locale::~locale(&v18);
  std::ostream::put();
  return std::ostream::flush();
}

void sub_216A51264(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, std::locale a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A512AC(uint64_t a1)
{
  sub_2169C56DC((uint64_t)&v15, a1 + 8, (long long *)(a1 + 48));
  if ((v17 & 0x80u) == 0) {
    uint64_t v1 = v16;
  }
  else {
    uint64_t v1 = (void **)v16[0];
  }
  if ((v17 & 0x80u) == 0) {
    uint64_t v2 = v17;
  }
  else {
    uint64_t v2 = (uint64_t)v16[1];
  }
  uint64_t v3 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v1, v2);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v3, (uint64_t)__p, 1);
  uint64_t v4 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v4, (uint64_t)__p, 1);
  long long v5 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v5, (uint64_t)__p, 1);
  long long v6 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  uint64_t v7 = sub_216779180(v6, (uint64_t)__p, 1);
  uint64_t v8 = sub_216779180(v7, (uint64_t)" failure ", 9);
  sub_216A51498(__p);
  if ((v14 & 0x80u) == 0) {
    uint64_t v9 = __p;
  }
  else {
    uint64_t v9 = (void **)__p[0];
  }
  if ((v14 & 0x80u) == 0) {
    uint64_t v10 = v14;
  }
  else {
    uint64_t v10 = (uint64_t)__p[1];
  }
  unint64_t v11 = sub_216779180(v8, (uint64_t)v9, v10);
  std::ios_base::getloc((const std::ios_base *)((char *)v11 + *(void *)(*v11 - 24)));
  uint64_t v12 = std::locale::use_facet(&v18, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v12->__vftable[2].~facet_0)(v12, 10);
  std::locale::~locale(&v18);
  std::ostream::put();
  std::ostream::flush();
  if ((char)v14 < 0) {
    operator delete(__p[0]);
  }
  if ((char)v17 < 0) {
    operator delete(v16[0]);
  }
}

void sub_216A51450(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A51498(void *a1@<X8>)
{
  uint64_t v2 = __cxa_demangle((const char *)((unint64_t)"N3tao21PXR_INTERNAL_NS_pegtl3seqIJN32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_112FunctionNameENS3_21FunctionArgumentStartEEEE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N3tao21PXR_INTERNAL_NS_pegtl3seqIJN32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_112FunctionNameENS3_21FunctionArgumentStartEEEE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A51530(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_216A51544(uint64_t a1, char **a2)
{
  uint64_t v4 = (_OWORD *)(a1 + 8);
  long long v5 = *(_OWORD *)(a1 + 24);
  long long v60 = *(_OWORD *)(a1 + 8);
  long long v61 = v5;
  uint64_t v62 = a1 + 8;
  long long v6 = (long long *)(a1 + 48);
  sub_2169C56DC((uint64_t)&v66, a1 + 8, (long long *)(a1 + 48));
  if ((v69 & 0x80u) == 0) {
    uint64_t v7 = &v67;
  }
  else {
    uint64_t v7 = v67;
  }
  if ((v69 & 0x80u) == 0) {
    uint64_t v8 = v69;
  }
  else {
    uint64_t v8 = v68;
  }
  uint64_t v9 = (void *)MEMORY[0x263F8C0F8];
  uint64_t v10 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v7, v8);
  LOBYTE(__p) = 58;
  sub_216779180(v10, (uint64_t)&__p, 1);
  unint64_t v11 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 58;
  sub_216779180(v11, (uint64_t)&__p, 1);
  uint64_t v12 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 40;
  sub_216779180(v12, (uint64_t)&__p, 1);
  unint64_t v13 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 41;
  unsigned __int8 v14 = sub_216779180(v13, (uint64_t)&__p, 1);
  uint64_t v15 = sub_216779180(v14, (uint64_t)"  start  ", 9);
  sub_216A52770(&__p);
  if ((v65 & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = __p;
  }
  if ((v65 & 0x80u) == 0) {
    uint64_t v17 = v65;
  }
  else {
    uint64_t v17 = v64;
  }
  std::locale v18 = sub_216779180(v15, (uint64_t)p_p, v17);
  sub_216779180(v18, (uint64_t)"; current ", 10);
  if ((char)v65 < 0) {
    operator delete(__p);
  }
  if ((char)v69 < 0) {
    operator delete(v67);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v9 + *(void *)(*v9 - 24)));
  std::string v19 = std::locale::use_facet(&v66, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v19->__vftable[2].~facet_0)(v19, 10);
  std::locale::~locale(&v66);
  std::ostream::put();
  std::ostream::flush();
  uint64_t v20 = sub_216A4030C((void *)a1);
  if (v20)
  {
    while ((sub_216A40368((void *)a1) & 1) != 0)
      ;
    sub_2169C56DC((uint64_t)&v66, (uint64_t)v4, v6);
    if ((v69 & 0x80u) == 0) {
      uint64_t v21 = &v67;
    }
    else {
      uint64_t v21 = v67;
    }
    if ((v69 & 0x80u) == 0) {
      uint64_t v22 = v69;
    }
    else {
      uint64_t v22 = v68;
    }
    int v23 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v21, v22);
    LOBYTE(__p) = 58;
    sub_216779180(v23, (uint64_t)&__p, 1);
    uint64_t v24 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 58;
    sub_216779180(v24, (uint64_t)&__p, 1);
    unint64_t v25 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 40;
    sub_216779180(v25, (uint64_t)&__p, 1);
    uint64_t v26 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 41;
    uint64_t v27 = sub_216779180(v26, (uint64_t)&__p, 1);
    uint64_t v28 = sub_216779180(v27, (uint64_t)"  apply  ", 9);
    sub_216A52770(&__p);
    if ((v65 & 0x80u) == 0) {
      uint64_t v29 = &__p;
    }
    else {
      uint64_t v29 = __p;
    }
    if ((v65 & 0x80u) == 0) {
      uint64_t v30 = v65;
    }
    else {
      uint64_t v30 = v64;
    }
    uint64_t v31 = sub_216779180(v28, (uint64_t)v29, v30);
    std::ios_base::getloc((const std::ios_base *)((char *)v31 + *(void *)(*v31 - 24)));
    long long v32 = std::locale::use_facet(&v70, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v32->__vftable[2].~facet_0)(v32, 10);
    std::locale::~locale(&v70);
    std::ostream::put();
    std::ostream::flush();
    if ((char)v65 < 0) {
      operator delete(__p);
    }
    if ((char)v69 < 0) {
      operator delete(v67);
    }
    sub_216A5281C((char **)&v60, a1, a2);
    sub_2169C56DC((uint64_t)&v66, (uint64_t)v4, v6);
    if ((v69 & 0x80u) == 0) {
      long long v33 = &v67;
    }
    else {
      long long v33 = v67;
    }
    if ((v69 & 0x80u) == 0) {
      uint64_t v34 = v69;
    }
    else {
      uint64_t v34 = v68;
    }
    long long v35 = (void *)MEMORY[0x263F8C0F8];
    long long v36 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v33, v34);
    LOBYTE(__p) = 58;
    sub_216779180(v36, (uint64_t)&__p, 1);
    uint64_t v37 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 58;
    sub_216779180(v37, (uint64_t)&__p, 1);
    uint64_t v38 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 40;
    sub_216779180(v38, (uint64_t)&__p, 1);
    uint64_t v39 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 41;
    uint64_t v40 = sub_216779180(v39, (uint64_t)&__p, 1);
    uint64_t v41 = sub_216779180(v40, (uint64_t)" success ", 9);
    sub_216A52770(&__p);
    if ((v65 & 0x80u) == 0) {
      uint64_t v42 = &__p;
    }
    else {
      uint64_t v42 = __p;
    }
    if ((v65 & 0x80u) == 0) {
      uint64_t v43 = v65;
    }
    else {
      uint64_t v43 = v64;
    }
    uint64_t v44 = sub_216779180(v41, (uint64_t)v42, v43);
    sub_216779180(v44, (uint64_t)"; next ", 7);
    if ((char)v65 < 0) {
      operator delete(__p);
    }
    if ((char)v69 < 0) {
      operator delete(v67);
    }
    sub_216A3AB00(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v35 + *(void *)(*v35 - 24)));
    uint64_t v45 = std::locale::use_facet(&v66, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v45->__vftable[2].~facet_0)(v45, 10);
    std::locale::~locale(&v66);
    std::ostream::put();
    std::ostream::flush();
  }
  else
  {
    sub_2169C56DC((uint64_t)&v66, (uint64_t)v4, v6);
    if ((v69 & 0x80u) == 0) {
      uint64_t v46 = &v67;
    }
    else {
      uint64_t v46 = v67;
    }
    if ((v69 & 0x80u) == 0) {
      uint64_t v47 = v69;
    }
    else {
      uint64_t v47 = v68;
    }
    std::locale v48 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v46, v47);
    LOBYTE(__p) = 58;
    sub_216779180(v48, (uint64_t)&__p, 1);
    uint64_t v49 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 58;
    sub_216779180(v49, (uint64_t)&__p, 1);
    uint64_t v50 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 40;
    sub_216779180(v50, (uint64_t)&__p, 1);
    std::locale v51 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 41;
    std::locale v52 = sub_216779180(v51, (uint64_t)&__p, 1);
    std::locale v53 = sub_216779180(v52, (uint64_t)" failure ", 9);
    sub_216A52770(&__p);
    if ((v65 & 0x80u) == 0) {
      uint64_t v54 = &__p;
    }
    else {
      uint64_t v54 = __p;
    }
    if ((v65 & 0x80u) == 0) {
      uint64_t v55 = v65;
    }
    else {
      uint64_t v55 = v64;
    }
    uint64_t v56 = sub_216779180(v53, (uint64_t)v54, v55);
    std::ios_base::getloc((const std::ios_base *)((char *)v56 + *(void *)(*v56 - 24)));
    uint64_t v57 = std::locale::use_facet(&v70, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v57->__vftable[2].~facet_0)(v57, 10);
    std::locale::~locale(&v70);
    std::ostream::put();
    std::ostream::flush();
    if ((char)v65 < 0) {
      operator delete(__p);
    }
    if ((char)v69 < 0) {
      operator delete(v67);
    }
    long long v58 = v61;
    *uint64_t v4 = v60;
    v4[1] = v58;
  }
  return v20;
}

void sub_216A51C1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, long long a9, long long a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, std::locale a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  *uint64_t v27 = a9;
  v27[1] = a10;
  _Unwind_Resume(exception_object);
}

uint64_t sub_216A51CB0(uint64_t a1)
{
  uint64_t v2 = a1 + 8;
  uint64_t v3 = (long long *)(a1 + 48);
  sub_2169C56DC((uint64_t)&v86, a1 + 8, (long long *)(a1 + 48));
  if ((v89 & 0x80u) == 0) {
    uint64_t v4 = &v87;
  }
  else {
    uint64_t v4 = v87;
  }
  if ((v89 & 0x80u) == 0) {
    uint64_t v5 = v89;
  }
  else {
    uint64_t v5 = v88;
  }
  long long v6 = (void *)MEMORY[0x263F8C0F8];
  uint64_t v7 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v4, v5);
  LOBYTE(__p) = 58;
  sub_216779180(v7, (uint64_t)&__p, 1);
  uint64_t v8 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 58;
  sub_216779180(v8, (uint64_t)&__p, 1);
  uint64_t v9 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 40;
  sub_216779180(v9, (uint64_t)&__p, 1);
  uint64_t v10 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 41;
  unint64_t v11 = sub_216779180(v10, (uint64_t)&__p, 1);
  uint64_t v12 = sub_216779180(v11, (uint64_t)"  start  ", 9);
  sub_216A536FC(&__p);
  if ((v85 & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = __p;
  }
  if ((v85 & 0x80u) == 0) {
    uint64_t v14 = v85;
  }
  else {
    uint64_t v14 = v84;
  }
  uint64_t v15 = sub_216779180(v12, (uint64_t)p_p, v14);
  sub_216779180(v15, (uint64_t)"; current ", 10);
  if ((char)v85 < 0) {
    operator delete(__p);
  }
  if ((char)v89 < 0) {
    operator delete(v87);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v6 + *(void *)(*v6 - 24)));
  uint64_t v16 = std::locale::use_facet(&v86, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v16->__vftable[2].~facet_0)(v16, 10);
  std::locale::~locale(&v86);
  std::ostream::put();
  std::ostream::flush();
  while ((sub_216A537A8(a1) & 1) != 0)
    ;
  sub_2169C56DC((uint64_t)&v86, v2, v3);
  if ((v89 & 0x80u) == 0) {
    uint64_t v17 = &v87;
  }
  else {
    uint64_t v17 = v87;
  }
  if ((v89 & 0x80u) == 0) {
    uint64_t v18 = v89;
  }
  else {
    uint64_t v18 = v88;
  }
  std::string v19 = (void *)MEMORY[0x263F8C0F8];
  uint64_t v20 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v17, v18);
  LOBYTE(__p) = 58;
  sub_216779180(v20, (uint64_t)&__p, 1);
  uint64_t v21 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 58;
  sub_216779180(v21, (uint64_t)&__p, 1);
  uint64_t v22 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 40;
  sub_216779180(v22, (uint64_t)&__p, 1);
  int v23 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 41;
  uint64_t v24 = sub_216779180(v23, (uint64_t)&__p, 1);
  unint64_t v25 = sub_216779180(v24, (uint64_t)"  start  ", 9);
  sub_216A53E0C(&__p);
  if ((v85 & 0x80u) == 0) {
    uint64_t v26 = &__p;
  }
  else {
    uint64_t v26 = __p;
  }
  if ((v85 & 0x80u) == 0) {
    uint64_t v27 = v85;
  }
  else {
    uint64_t v27 = v84;
  }
  uint64_t v28 = sub_216779180(v25, (uint64_t)v26, v27);
  sub_216779180(v28, (uint64_t)"; current ", 10);
  if ((char)v85 < 0) {
    operator delete(__p);
  }
  if ((char)v89 < 0) {
    operator delete(v87);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v19 + *(void *)(*v19 - 24)));
  uint64_t v29 = std::locale::use_facet(&v86, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v29->__vftable[2].~facet_0)(v29, 10);
  std::locale::~locale(&v86);
  std::ostream::put();
  std::ostream::flush();
  uint64_t v30 = *(unsigned char **)(a1 + 8);
  if (v30 == *(unsigned char **)(a1 + 40) || *v30 != 40)
  {
    sub_2169C56DC((uint64_t)&v86, v2, v3);
    if ((v89 & 0x80u) == 0) {
      uint64_t v59 = &v87;
    }
    else {
      uint64_t v59 = v87;
    }
    if ((v89 & 0x80u) == 0) {
      uint64_t v60 = v89;
    }
    else {
      uint64_t v60 = v88;
    }
    long long v61 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v59, v60);
    LOBYTE(__p) = 58;
    sub_216779180(v61, (uint64_t)&__p, 1);
    uint64_t v62 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 58;
    sub_216779180(v62, (uint64_t)&__p, 1);
    char v63 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 40;
    sub_216779180(v63, (uint64_t)&__p, 1);
    uint64_t v64 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 41;
    unsigned __int8 v65 = sub_216779180(v64, (uint64_t)&__p, 1);
    std::locale v66 = sub_216779180(v65, (uint64_t)" failure ", 9);
    sub_216A53E0C(&__p);
    if ((v85 & 0x80u) == 0) {
      uint64_t v67 = &__p;
    }
    else {
      uint64_t v67 = __p;
    }
    if ((v85 & 0x80u) == 0) {
      uint64_t v68 = v85;
    }
    else {
      uint64_t v68 = v84;
    }
    unsigned __int8 v69 = sub_216779180(v66, (uint64_t)v67, v68);
    std::ios_base::getloc((const std::ios_base *)((char *)v69 + *(void *)(*v69 - 24)));
    std::locale v70 = std::locale::use_facet(&v90, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v70->__vftable[2].~facet_0)(v70, 10);
    std::locale::~locale(&v90);
    std::ostream::put();
    std::ostream::flush();
    if ((char)v85 < 0) {
      operator delete(__p);
    }
    if ((char)v89 < 0) {
      operator delete(v87);
    }
    sub_2169C56DC((uint64_t)&v86, v2, v3);
    if ((v89 & 0x80u) == 0) {
      uint64_t v71 = &v87;
    }
    else {
      uint64_t v71 = v87;
    }
    if ((v89 & 0x80u) == 0) {
      uint64_t v72 = v89;
    }
    else {
      uint64_t v72 = v88;
    }
    uint64_t v73 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v71, v72);
    LOBYTE(__p) = 58;
    sub_216779180(v73, (uint64_t)&__p, 1);
    uint64_t v74 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 58;
    sub_216779180(v74, (uint64_t)&__p, 1);
    uint64_t v75 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 40;
    sub_216779180(v75, (uint64_t)&__p, 1);
    uint64_t v76 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 41;
    uint64_t v77 = sub_216779180(v76, (uint64_t)&__p, 1);
    uint64_t v78 = sub_216779180(v77, (uint64_t)" failure ", 9);
    sub_216A536FC(&__p);
    if ((v85 & 0x80u) == 0) {
      uint64_t v79 = &__p;
    }
    else {
      uint64_t v79 = __p;
    }
    if ((v85 & 0x80u) == 0) {
      uint64_t v80 = v85;
    }
    else {
      uint64_t v80 = v84;
    }
    uint64_t v81 = sub_216779180(v78, (uint64_t)v79, v80);
    std::ios_base::getloc((const std::ios_base *)((char *)v81 + *(void *)(*v81 - 24)));
    uint64_t v82 = std::locale::use_facet(&v90, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v82->__vftable[2].~facet_0)(v82, 10);
    std::locale::~locale(&v90);
    std::ostream::put();
    std::ostream::flush();
    if ((char)v85 < 0) {
      operator delete(__p);
    }
    if ((char)v89 < 0) {
      operator delete(v87);
    }
    return 0;
  }
  else
  {
    uint64_t v31 = *(void *)(a1 + 16) + 1;
    *(void *)(a1 + 8) = v30 + 1;
    *(void *)(a1 + 16) = v31;
    ++*(void *)(a1 + 32);
    sub_2169C56DC((uint64_t)&v86, v2, v3);
    if ((v89 & 0x80u) == 0) {
      long long v32 = &v87;
    }
    else {
      long long v32 = v87;
    }
    if ((v89 & 0x80u) == 0) {
      uint64_t v33 = v89;
    }
    else {
      uint64_t v33 = v88;
    }
    uint64_t v34 = (void *)MEMORY[0x263F8C0F8];
    long long v35 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v32, v33);
    LOBYTE(__p) = 58;
    sub_216779180(v35, (uint64_t)&__p, 1);
    long long v36 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 58;
    sub_216779180(v36, (uint64_t)&__p, 1);
    uint64_t v37 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 40;
    sub_216779180(v37, (uint64_t)&__p, 1);
    uint64_t v38 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 41;
    uint64_t v39 = sub_216779180(v38, (uint64_t)&__p, 1);
    uint64_t v40 = sub_216779180(v39, (uint64_t)" success ", 9);
    sub_216A53E0C(&__p);
    if ((v85 & 0x80u) == 0) {
      uint64_t v41 = &__p;
    }
    else {
      uint64_t v41 = __p;
    }
    if ((v85 & 0x80u) == 0) {
      uint64_t v42 = v85;
    }
    else {
      uint64_t v42 = v84;
    }
    uint64_t v43 = sub_216779180(v40, (uint64_t)v41, v42);
    sub_216779180(v43, (uint64_t)"; next ", 7);
    if ((char)v85 < 0) {
      operator delete(__p);
    }
    if ((char)v89 < 0) {
      operator delete(v87);
    }
    sub_216A3AB00(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v34 + *(void *)(*v34 - 24)));
    uint64_t v44 = std::locale::use_facet(&v86, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v44->__vftable[2].~facet_0)(v44, 10);
    std::locale::~locale(&v86);
    std::ostream::put();
    std::ostream::flush();
    while ((sub_216A537A8(a1) & 1) != 0)
      ;
    sub_2169C56DC((uint64_t)&v86, v2, v3);
    if ((v89 & 0x80u) == 0) {
      uint64_t v45 = &v87;
    }
    else {
      uint64_t v45 = v87;
    }
    if ((v89 & 0x80u) == 0) {
      uint64_t v46 = v89;
    }
    else {
      uint64_t v46 = v88;
    }
    uint64_t v47 = (void *)MEMORY[0x263F8C0F8];
    std::locale v48 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v45, v46);
    LOBYTE(__p) = 58;
    sub_216779180(v48, (uint64_t)&__p, 1);
    uint64_t v49 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 58;
    sub_216779180(v49, (uint64_t)&__p, 1);
    uint64_t v50 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 40;
    sub_216779180(v50, (uint64_t)&__p, 1);
    std::locale v51 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 41;
    std::locale v52 = sub_216779180(v51, (uint64_t)&__p, 1);
    std::locale v53 = sub_216779180(v52, (uint64_t)" success ", 9);
    sub_216A536FC(&__p);
    if ((v85 & 0x80u) == 0) {
      uint64_t v54 = &__p;
    }
    else {
      uint64_t v54 = __p;
    }
    if ((v85 & 0x80u) == 0) {
      uint64_t v55 = v85;
    }
    else {
      uint64_t v55 = v84;
    }
    uint64_t v56 = sub_216779180(v53, (uint64_t)v54, v55);
    sub_216779180(v56, (uint64_t)"; next ", 7);
    if ((char)v85 < 0) {
      operator delete(__p);
    }
    if ((char)v89 < 0) {
      operator delete(v87);
    }
    sub_216A3AB00(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v47 + *(void *)(*v47 - 24)));
    uint64_t v57 = std::locale::use_facet(&v86, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v57->__vftable[2].~facet_0)(v57, 10);
    std::locale::~locale(&v86);
    std::ostream::put();
    std::ostream::flush();
    return 1;
  }
}

void sub_216A526CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, std::locale a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A52770(void *a1@<X8>)
{
  uint64_t v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_112FunctionNameE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_112FunctionNameE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A52808(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

void sub_216A5281C(char **a1, uint64_t a2, char **a3)
{
  sub_21682E90C(__p, *a1, *(char **)(a2 + 8), *(void *)(a2 + 8) - (void)*a1);
  uint64_t v4 = operator new(0x38uLL);
  *uint64_t v4 = &unk_26C757BA8;
  uint64_t v5 = v4 + 1;
  if (SHIBYTE(v7) < 0)
  {
    sub_216778F24(v5, __p[0], (unint64_t)__p[1]);
  }
  else
  {
    *(_OWORD *)uint64_t v5 = *(_OWORD *)__p;
    void v4[3] = v7;
  }
  void v4[4] = 0;
  v4[5] = 0;
  v4[6] = 0;
  uint64_t v8 = v4;
  sub_216A40520(a3, (uint64_t *)&v8);
  if (v8) {
    (*(void (**)(void *))(*v8 + 8))(v8);
  }
  if (SHIBYTE(v7) < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A528FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15)
{
  operator delete(v15);
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_216A5293C(uint64_t a1)
{
  *(void *)a1 = &unk_26C757BA8;
  uint64_t v3 = (void **)(a1 + 32);
  sub_216A37EF4(&v3);
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }
  return a1;
}

void sub_216A529A4(void **a1)
{
  *a1 = &unk_26C757BA8;
  uint64_t v2 = a1 + 4;
  sub_216A37EF4(&v2);
  if (*((char *)a1 + 31) < 0) {
    operator delete(a1[1]);
  }
  operator delete(a1);
}

void sub_216A52A10(__n128 *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  long long v6 = (const void **)&a1->n128_u64[1];
  FunctionName = pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::IfNode::GetFunctionName((pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::IfNode *)a1);
  size_t v8 = strlen(FunctionName);
  size_t v9 = v8;
  if (a1[1].n128_i8[15] < 0)
  {
    if (v8 == a1[1].n128_u64[0])
    {
      if (v8 == -1) {
        goto LABEL_256;
      }
      uint64_t v10 = *v6;
      goto LABEL_8;
    }
LABEL_9:
    int v11 = 0;
    goto LABEL_10;
  }
  if (v8 != a1[1].n128_u8[15]) {
    goto LABEL_9;
  }
  uint64_t v10 = v6;
  if (v9 == -1) {
LABEL_256:
  }
    sub_216855AD4();
LABEL_8:
  size_t v8 = memcmp(v10, FunctionName, v9);
  if (v8) {
    goto LABEL_9;
  }
  long long v32 = (uint64_t *)a1[2].n128_u64[0];
  if (a1[2].n128_u64[1] - (void)v32 == 16)
  {
    uint64_t v33 = operator new(0x18uLL);
    pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::If2Node::If2Node(v33, v32, v32 + 1);
    goto LABEL_221;
  }
  *a3 = 0;
  if (*(char *)(a2 + 23) < 0)
  {
    if (*(void *)(a2 + 8)) {
      return;
    }
  }
  else if (*(unsigned char *)(a2 + 23))
  {
    return;
  }
  int v11 = 1;
LABEL_10:
  uint64_t v12 = pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::IfNode::GetFunctionName((pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::IfNode *)v8);
  size_t v13 = strlen(v12);
  size_t v14 = v13;
  if (a1[1].n128_i8[15] < 0)
  {
    if (v13 != a1[1].n128_u64[0]) {
      goto LABEL_18;
    }
    if (v13 == -1) {
      goto LABEL_257;
    }
    uint64_t v15 = *v6;
  }
  else
  {
    if (v13 != a1[1].n128_u8[15]) {
      goto LABEL_18;
    }
    uint64_t v15 = v6;
    if (v14 == -1) {
LABEL_257:
    }
      sub_216855AD4();
  }
  if (!memcmp(v15, v12, v14))
  {
    uint64_t v38 = (uint64_t *)a1[2].n128_u64[0];
    if (a1[2].n128_u64[1] - (void)v38 == 24)
    {
      uint64_t v33 = operator new(0x20uLL);
      pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::If3Node::If3Node(v33, v38, v38 + 1, v38 + 2);
      goto LABEL_221;
    }
    *a3 = 0;
    if (*(char *)(a2 + 23) < 0)
    {
      if (*(void *)(a2 + 8)) {
        return;
      }
    }
    else if (*(unsigned char *)(a2 + 23))
    {
      return;
    }
    int v11 = 1;
  }
LABEL_18:
  uint64_t v16 = pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ComparisonNode<std::equal_to>::GetFunctionName();
  size_t v17 = strlen(v16);
  size_t v18 = v17;
  if (a1[1].n128_i8[15] < 0)
  {
    if (v17 != a1[1].n128_u64[0]) {
      goto LABEL_26;
    }
    if (v17 == -1) {
      goto LABEL_258;
    }
    std::string v19 = *v6;
  }
  else
  {
    if (v17 != a1[1].n128_u8[15]) {
      goto LABEL_26;
    }
    std::string v19 = v6;
    if (v18 == -1) {
LABEL_258:
    }
      sub_216855AD4();
  }
  if (!memcmp(v19, v16, v18))
  {
    if (a1[2].n128_u64[1] - a1[2].n128_u64[0] == 16)
    {
      operator new(0x18uLL);
      pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ComparisonNode<std::equal_to>::ComparisonNode();
    }
    *a3 = 0;
    if (*(char *)(a2 + 23) < 0)
    {
      if (*(void *)(a2 + 8)) {
        return;
      }
    }
    else if (*(unsigned char *)(a2 + 23))
    {
      return;
    }
    int v11 = 1;
  }
LABEL_26:
  uint64_t v20 = pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ComparisonNode<std::not_equal_to>::GetFunctionName();
  size_t v21 = strlen(v20);
  size_t v22 = v21;
  if (a1[1].n128_i8[15] < 0)
  {
    if (v21 != a1[1].n128_u64[0]) {
      goto LABEL_34;
    }
    if (v21 == -1) {
      goto LABEL_259;
    }
    int v23 = *v6;
  }
  else
  {
    if (v21 != a1[1].n128_u8[15]) {
      goto LABEL_34;
    }
    int v23 = v6;
    if (v22 == -1) {
LABEL_259:
    }
      sub_216855AD4();
  }
  if (!memcmp(v23, v20, v22))
  {
    if (a1[2].n128_u64[1] - a1[2].n128_u64[0] == 16)
    {
      operator new(0x18uLL);
      pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ComparisonNode<std::not_equal_to>::ComparisonNode();
    }
    *a3 = 0;
    if (*(char *)(a2 + 23) < 0)
    {
      if (*(void *)(a2 + 8)) {
        return;
      }
    }
    else if (*(unsigned char *)(a2 + 23))
    {
      return;
    }
    int v11 = 1;
  }
LABEL_34:
  uint64_t v24 = pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ComparisonNode<std::less>::GetFunctionName();
  size_t v25 = strlen(v24);
  size_t v26 = v25;
  if (a1[1].n128_i8[15] < 0)
  {
    if (v25 != a1[1].n128_u64[0]) {
      goto LABEL_42;
    }
    if (v25 == -1) {
      goto LABEL_260;
    }
    uint64_t v27 = *v6;
  }
  else
  {
    if (v25 != a1[1].n128_u8[15]) {
      goto LABEL_42;
    }
    uint64_t v27 = v6;
    if (v26 == -1) {
LABEL_260:
    }
      sub_216855AD4();
  }
  if (!memcmp(v27, v24, v26))
  {
    if (a1[2].n128_u64[1] - a1[2].n128_u64[0] == 16)
    {
      operator new(0x18uLL);
      pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ComparisonNode<std::less>::ComparisonNode();
    }
    *a3 = 0;
    if (*(char *)(a2 + 23) < 0)
    {
      if (*(void *)(a2 + 8)) {
        return;
      }
    }
    else if (*(unsigned char *)(a2 + 23))
    {
      return;
    }
    int v11 = 1;
  }
LABEL_42:
  uint64_t v28 = pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ComparisonNode<std::less_equal>::GetFunctionName();
  size_t v29 = strlen(v28);
  size_t v30 = v29;
  if (a1[1].n128_i8[15] < 0)
  {
    if (v29 != a1[1].n128_u64[0]) {
      goto LABEL_52;
    }
    if (v29 == -1) {
      goto LABEL_261;
    }
    uint64_t v31 = *v6;
  }
  else
  {
    if (v29 != a1[1].n128_u8[15]) {
      goto LABEL_52;
    }
    uint64_t v31 = v6;
    if (v30 == -1) {
LABEL_261:
    }
      sub_216855AD4();
  }
  if (!memcmp(v31, v28, v30))
  {
    if (a1[2].n128_u64[1] - a1[2].n128_u64[0] == 16)
    {
      operator new(0x18uLL);
      pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ComparisonNode<std::less_equal>::ComparisonNode();
    }
    *a3 = 0;
    if (*(char *)(a2 + 23) < 0)
    {
      if (*(void *)(a2 + 8)) {
        return;
      }
    }
    else if (*(unsigned char *)(a2 + 23))
    {
      return;
    }
    int v11 = 1;
  }
LABEL_52:
  uint64_t v34 = pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ComparisonNode<std::greater>::GetFunctionName();
  size_t v35 = strlen(v34);
  size_t v36 = v35;
  if (a1[1].n128_i8[15] < 0)
  {
    if (v35 != a1[1].n128_u64[0]) {
      goto LABEL_62;
    }
    if (v35 == -1) {
      goto LABEL_262;
    }
    uint64_t v37 = *v6;
  }
  else
  {
    if (v35 != a1[1].n128_u8[15]) {
      goto LABEL_62;
    }
    uint64_t v37 = v6;
    if (v36 == -1) {
LABEL_262:
    }
      sub_216855AD4();
  }
  if (!memcmp(v37, v34, v36))
  {
    if (a1[2].n128_u64[1] - a1[2].n128_u64[0] == 16)
    {
      operator new(0x18uLL);
      pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ComparisonNode<std::greater>::ComparisonNode();
    }
    *a3 = 0;
    if (*(char *)(a2 + 23) < 0) {
      uint64_t v84 = *(void *)(a2 + 8);
    }
    else {
      uint64_t v84 = *(unsigned __int8 *)(a2 + 23);
    }
    if (v84) {
      return;
    }
    int v11 = 1;
  }
LABEL_62:
  uint64_t v39 = pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ComparisonNode<std::greater_equal>::GetFunctionName();
  size_t v40 = strlen(v39);
  size_t v41 = v40;
  if (a1[1].n128_i8[15] < 0)
  {
    if (v40 != a1[1].n128_u64[0]) {
      goto LABEL_72;
    }
    if (v40 == -1) {
      goto LABEL_263;
    }
    uint64_t v42 = *v6;
  }
  else
  {
    if (v40 != a1[1].n128_u8[15]) {
      goto LABEL_72;
    }
    uint64_t v42 = v6;
    if (v41 == -1) {
LABEL_263:
    }
      sub_216855AD4();
  }
  if (!memcmp(v42, v39, v41))
  {
    if (a1[2].n128_u64[1] - a1[2].n128_u64[0] == 16)
    {
      operator new(0x18uLL);
      pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ComparisonNode<std::greater_equal>::ComparisonNode();
    }
    *a3 = 0;
    if (*(char *)(a2 + 23) < 0) {
      uint64_t v86 = *(void *)(a2 + 8);
    }
    else {
      uint64_t v86 = *(unsigned __int8 *)(a2 + 23);
    }
    if (v86) {
      return;
    }
    int v11 = 1;
  }
LABEL_72:
  uint64_t v43 = pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::LogicalNode<std::logical_and>::GetFunctionName();
  size_t v44 = strlen(v43);
  size_t v45 = v44;
  uint64_t v46 = a1[1].n128_u8[15];
  if (a1[1].n128_i8[15] < 0)
  {
    if (v44 != a1[1].n128_u64[0]) {
      goto LABEL_82;
    }
    if (v44 == -1) {
      goto LABEL_264;
    }
    uint64_t v47 = *v6;
  }
  else
  {
    if (v44 != v46) {
      goto LABEL_82;
    }
    uint64_t v47 = v6;
    if (v45 == -1) {
LABEL_264:
    }
      sub_216855AD4();
  }
  if (!memcmp(v47, v43, v45))
  {
    if (a1[2].n128_u64[1] - a1[2].n128_u64[0] > 0xF)
    {
      operator new(0x20uLL);
      pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::LogicalNode<std::logical_and>::LogicalNode();
    }
    uint64_t v73 = v6;
    if ((v46 & 0x80) != 0) {
      uint64_t v73 = (void *)*v6;
    }
    pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Function '%s' requires at least %zu arguments.", v48, v49, v73, 2);
    if (*(char *)(a2 + 23) < 0) {
      operator delete(*(void **)a2);
    }
    *(_OWORD *)a2 = v96;
    *(void *)(a2 + 16) = v97;
    *a3 = 0;
    if (*(char *)(a2 + 23) < 0) {
      uint64_t v74 = *(void *)(a2 + 8);
    }
    else {
      uint64_t v74 = *(unsigned __int8 *)(a2 + 23);
    }
    if (v74) {
      return;
    }
    int v11 = 1;
  }
LABEL_82:
  uint64_t v50 = pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::LogicalNode<std::logical_or>::GetFunctionName();
  size_t v51 = strlen(v50);
  size_t v52 = v51;
  uint64_t v53 = a1[1].n128_u8[15];
  if (a1[1].n128_i8[15] < 0)
  {
    if (v51 != a1[1].n128_u64[0]) {
      goto LABEL_95;
    }
    if (v51 == -1) {
      goto LABEL_265;
    }
    uint64_t v54 = *v6;
  }
  else
  {
    if (v51 != v53) {
      goto LABEL_95;
    }
    uint64_t v54 = v6;
    if (v52 == -1) {
LABEL_265:
    }
      sub_216855AD4();
  }
  size_t v51 = memcmp(v54, v50, v52);
  if (!v51)
  {
    if (a1[2].n128_u64[1] - a1[2].n128_u64[0] > 0xF)
    {
      operator new(0x20uLL);
      pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::LogicalNode<std::logical_or>::LogicalNode();
    }
    uint64_t v81 = v6;
    if ((v53 & 0x80) != 0) {
      uint64_t v81 = (void *)*v6;
    }
    pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Function '%s' requires at least %zu arguments.", v55, v56, v81, 2);
    if (*(char *)(a2 + 23) < 0) {
      operator delete(*(void **)a2);
    }
    *(_OWORD *)a2 = v96;
    *(void *)(a2 + 16) = v97;
    *a3 = 0;
    if (*(char *)(a2 + 23) < 0) {
      uint64_t v82 = *(void *)(a2 + 8);
    }
    else {
      uint64_t v82 = *(unsigned __int8 *)(a2 + 23);
    }
    if (v82) {
      return;
    }
    int v11 = 1;
  }
LABEL_95:
  uint64_t v57 = pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::LogicalNotNode::GetFunctionName((pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::LogicalNotNode *)v51);
  size_t v58 = strlen(v57);
  size_t v59 = v58;
  if (a1[1].n128_i8[15] < 0)
  {
    if (v58 != a1[1].n128_u64[0]) {
      goto LABEL_108;
    }
    if (v58 == -1) {
      goto LABEL_266;
    }
    uint64_t v60 = *v6;
  }
  else
  {
    if (v58 != a1[1].n128_u8[15]) {
      goto LABEL_108;
    }
    uint64_t v60 = v6;
    if (v59 == -1) {
LABEL_266:
    }
      sub_216855AD4();
  }
  size_t v58 = memcmp(v60, v57, v59);
  if (!v58)
  {
    uint64_t v83 = (uint64_t *)a1[2].n128_u64[0];
    if (a1[2].n128_u64[1] - (void)v83 == 8)
    {
      uint64_t v33 = operator new(0x10uLL);
      pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::LogicalNotNode::LogicalNotNode(v33, v83);
      goto LABEL_221;
    }
    *a3 = 0;
    if (*(char *)(a2 + 23) < 0) {
      uint64_t v89 = *(void *)(a2 + 8);
    }
    else {
      uint64_t v89 = *(unsigned __int8 *)(a2 + 23);
    }
    if (v89) {
      return;
    }
    int v11 = 1;
  }
LABEL_108:
  long long v61 = pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ContainsNode::GetFunctionName((pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ContainsNode *)v58);
  size_t v62 = strlen(v61);
  size_t v63 = v62;
  if (a1[1].n128_i8[15] < 0)
  {
    if (v62 != a1[1].n128_u64[0]) {
      goto LABEL_121;
    }
    if (v62 == -1) {
      goto LABEL_267;
    }
    uint64_t v64 = *v6;
  }
  else
  {
    if (v62 != a1[1].n128_u8[15]) {
      goto LABEL_121;
    }
    uint64_t v64 = v6;
    if (v63 == -1) {
LABEL_267:
    }
      sub_216855AD4();
  }
  size_t v62 = memcmp(v64, v61, v63);
  if (!v62)
  {
    unsigned __int8 v85 = (uint64_t *)a1[2].n128_u64[0];
    if (a1[2].n128_u64[1] - (void)v85 == 16)
    {
      uint64_t v33 = operator new(0x18uLL);
      pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ContainsNode::ContainsNode(v33, v85, v85 + 1);
      goto LABEL_221;
    }
    *a3 = 0;
    if (*(char *)(a2 + 23) < 0) {
      uint64_t v90 = *(void *)(a2 + 8);
    }
    else {
      uint64_t v90 = *(unsigned __int8 *)(a2 + 23);
    }
    if (v90) {
      return;
    }
    int v11 = 1;
  }
LABEL_121:
  unsigned __int8 v65 = pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::AtNode::GetFunctionName((pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::AtNode *)v62);
  size_t v66 = strlen(v65);
  size_t v67 = v66;
  if (a1[1].n128_i8[15] < 0)
  {
    if (v66 != a1[1].n128_u64[0]) {
      goto LABEL_134;
    }
    if (v66 == -1) {
      goto LABEL_268;
    }
    uint64_t v68 = *v6;
  }
  else
  {
    if (v66 != a1[1].n128_u8[15]) {
      goto LABEL_134;
    }
    uint64_t v68 = v6;
    if (v67 == -1) {
LABEL_268:
    }
      sub_216855AD4();
  }
  size_t v66 = memcmp(v68, v65, v67);
  if (!v66)
  {
    uint64_t v87 = (uint64_t *)a1[2].n128_u64[0];
    if (a1[2].n128_u64[1] - (void)v87 == 16)
    {
      uint64_t v33 = operator new(0x18uLL);
      pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::AtNode::AtNode(v33, v87, v87 + 1);
      goto LABEL_221;
    }
    *a3 = 0;
    if (*(char *)(a2 + 23) < 0) {
      uint64_t v91 = *(void *)(a2 + 8);
    }
    else {
      uint64_t v91 = *(unsigned __int8 *)(a2 + 23);
    }
    if (v91) {
      return;
    }
    int v11 = 1;
  }
LABEL_134:
  unsigned __int8 v69 = pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::LenNode::GetFunctionName((pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::LenNode *)v66);
  size_t v70 = strlen(v69);
  size_t v71 = v70;
  if (a1[1].n128_i8[15] < 0)
  {
    if (v70 == a1[1].n128_u64[0])
    {
      if (v70 == -1) {
        goto LABEL_269;
      }
      uint64_t v72 = *v6;
LABEL_151:
      size_t v70 = memcmp(v72, v69, v71);
      if (v70) {
        goto LABEL_152;
      }
      uint64_t v88 = (uint64_t *)a1[2].n128_u64[0];
      if (a1[2].n128_u64[1] - (void)v88 != 8)
      {
        *a3 = 0;
        if (*(char *)(a2 + 23) < 0) {
          uint64_t v92 = *(void *)(a2 + 8);
        }
        else {
          uint64_t v92 = *(unsigned __int8 *)(a2 + 23);
        }
        if (v92) {
          return;
        }
        int v11 = 1;
        goto LABEL_152;
      }
      uint64_t v33 = operator new(0x10uLL);
      pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::LenNode::LenNode(v33, v88);
LABEL_221:
      *a3 = v33;
      return;
    }
  }
  else if (v70 == a1[1].n128_u8[15])
  {
    uint64_t v72 = v6;
    if (v71 == -1) {
LABEL_269:
    }
      sub_216855AD4();
    goto LABEL_151;
  }
LABEL_152:
  uint64_t v75 = pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::DefinedNode::GetFunctionName((pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::DefinedNode *)v70);
  size_t v76 = strlen(v75);
  uint64_t v78 = (char *)v76;
  int v79 = a1[1].n128_i8[15];
  if (v79 < 0)
  {
    if (v76 != a1[1].n128_u64[0])
    {
      if (v11)
      {
LABEL_198:
        long long v6 = (const void **)*v6;
        goto LABEL_199;
      }
LABEL_216:
      long long v6 = (const void **)*v6;
      goto LABEL_217;
    }
    if (v76 == -1) {
      goto LABEL_270;
    }
    uint64_t v80 = *v6;
  }
  else
  {
    if (v76 != a1[1].n128_u8[15])
    {
      if (v11) {
        goto LABEL_199;
      }
      goto LABEL_217;
    }
    uint64_t v80 = v6;
    if (v78 == (char *)-1) {
LABEL_270:
    }
      sub_216855AD4();
  }
  if (memcmp(v80, v75, (size_t)v78))
  {
    if (v11)
    {
      if ((v79 & 0x80) != 0) {
        goto LABEL_198;
      }
LABEL_199:
      pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Function '%s' does not take %zu arguments.", v77, v78, v6, (uint64_t)(a1[2].n128_u64[1] - a1[2].n128_u64[0]) >> 3);
LABEL_218:
      if (*(char *)(a2 + 23) < 0) {
        operator delete(*(void **)a2);
      }
      uint64_t v33 = 0;
      *(_OWORD *)a2 = v96;
      *(void *)(a2 + 16) = v97;
      goto LABEL_221;
    }
    if (v79 < 0) {
      goto LABEL_216;
    }
LABEL_217:
    pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Unknown function %s", v77, v78, v6, v95);
    goto LABEL_218;
  }
  if (a1[2].n128_u64[1] != a1[2].n128_u64[0])
  {
    uint64_t v33 = operator new(0x20uLL);
    pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::DefinedNode::DefinedNode(v33, a1 + 2);
    goto LABEL_221;
  }
  uint64_t v93 = v6;
  if (v79 < 0) {
    uint64_t v93 = (void *)*v6;
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Function '%s' requires at least %zu arguments.", v77, v78, v93, 1);
  if (*(char *)(a2 + 23) < 0) {
    operator delete(*(void **)a2);
  }
  *(_OWORD *)a2 = v96;
  *(void *)(a2 + 16) = v97;
  *a3 = 0;
  if (*(char *)(a2 + 23) < 0) {
    uint64_t v94 = *(void *)(a2 + 8);
  }
  else {
    uint64_t v94 = *(unsigned __int8 *)(a2 + 23);
  }
  if (!v94)
  {
    if ((a1[1].n128_u8[15] & 0x80) == 0) {
      goto LABEL_199;
    }
    goto LABEL_198;
  }
}

void sub_216A53674(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_216A536FC(void *a1@<X8>)
{
  uint64_t v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_121FunctionArgumentStartE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_121FunctionArgumentStartE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A53794(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_216A537A8(uint64_t a1)
{
  uint64_t v2 = a1 + 8;
  uint64_t v3 = (long long *)(a1 + 48);
  sub_2169C56DC((uint64_t)&v48, a1 + 8, (long long *)(a1 + 48));
  if ((v51 & 0x80u) == 0) {
    uint64_t v4 = &v49;
  }
  else {
    uint64_t v4 = v49;
  }
  if ((v51 & 0x80u) == 0) {
    uint64_t v5 = v51;
  }
  else {
    uint64_t v5 = v50;
  }
  long long v6 = (void *)MEMORY[0x263F8C0F8];
  uint64_t v7 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v4, v5);
  LOBYTE(__p) = 58;
  sub_216779180(v7, (uint64_t)&__p, 1);
  size_t v8 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 58;
  sub_216779180(v8, (uint64_t)&__p, 1);
  size_t v9 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 40;
  sub_216779180(v9, (uint64_t)&__p, 1);
  uint64_t v10 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 41;
  int v11 = sub_216779180(v10, (uint64_t)&__p, 1);
  uint64_t v12 = sub_216779180(v11, (uint64_t)"  start  ", 9);
  sub_216A53D58(&__p);
  if ((v47 & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = __p;
  }
  if ((v47 & 0x80u) == 0) {
    uint64_t v14 = v47;
  }
  else {
    uint64_t v14 = v46;
  }
  uint64_t v15 = sub_216779180(v12, (uint64_t)p_p, v14);
  sub_216779180(v15, (uint64_t)"; current ", 10);
  if ((char)v47 < 0) {
    operator delete(__p);
  }
  if ((char)v51 < 0) {
    operator delete(v49);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v6 + *(void *)(*v6 - 24)));
  uint64_t v16 = std::locale::use_facet(&v48, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v16->__vftable[2].~facet_0)(v16, 10);
  std::locale::~locale(&v48);
  std::ostream::put();
  std::ostream::flush();
  size_t v17 = *(unsigned char **)(a1 + 8);
  if (v17 == *(unsigned char **)(a1 + 40) || *v17 != 32)
  {
    sub_2169C56DC((uint64_t)&v48, v2, v3);
    if ((v51 & 0x80u) == 0) {
      uint64_t v33 = &v49;
    }
    else {
      uint64_t v33 = v49;
    }
    if ((v51 & 0x80u) == 0) {
      uint64_t v34 = v51;
    }
    else {
      uint64_t v34 = v50;
    }
    size_t v35 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v33, v34);
    LOBYTE(__p) = 58;
    sub_216779180(v35, (uint64_t)&__p, 1);
    size_t v36 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 58;
    sub_216779180(v36, (uint64_t)&__p, 1);
    uint64_t v37 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 40;
    sub_216779180(v37, (uint64_t)&__p, 1);
    uint64_t v38 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 41;
    uint64_t v39 = sub_216779180(v38, (uint64_t)&__p, 1);
    size_t v40 = sub_216779180(v39, (uint64_t)" failure ", 9);
    sub_216A53D58(&__p);
    if ((v47 & 0x80u) == 0) {
      size_t v41 = &__p;
    }
    else {
      size_t v41 = __p;
    }
    if ((v47 & 0x80u) == 0) {
      uint64_t v42 = v47;
    }
    else {
      uint64_t v42 = v46;
    }
    uint64_t v43 = sub_216779180(v40, (uint64_t)v41, v42);
    std::ios_base::getloc((const std::ios_base *)((char *)v43 + *(void *)(*v43 - 24)));
    size_t v44 = std::locale::use_facet(&v52, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v44->__vftable[2].~facet_0)(v44, 10);
    std::locale::~locale(&v52);
    std::ostream::put();
    std::ostream::flush();
    if ((char)v47 < 0) {
      operator delete(__p);
    }
    if ((char)v51 < 0) {
      operator delete(v49);
    }
    return 0;
  }
  else
  {
    uint64_t v18 = *(void *)(a1 + 16) + 1;
    *(void *)(a1 + 8) = v17 + 1;
    *(void *)(a1 + 16) = v18;
    ++*(void *)(a1 + 32);
    sub_2169C56DC((uint64_t)&v48, v2, v3);
    if ((v51 & 0x80u) == 0) {
      std::string v19 = &v49;
    }
    else {
      std::string v19 = v49;
    }
    if ((v51 & 0x80u) == 0) {
      uint64_t v20 = v51;
    }
    else {
      uint64_t v20 = v50;
    }
    size_t v21 = (void *)MEMORY[0x263F8C0F8];
    size_t v22 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v19, v20);
    LOBYTE(__p) = 58;
    sub_216779180(v22, (uint64_t)&__p, 1);
    int v23 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 58;
    sub_216779180(v23, (uint64_t)&__p, 1);
    uint64_t v24 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 40;
    sub_216779180(v24, (uint64_t)&__p, 1);
    size_t v25 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 41;
    size_t v26 = sub_216779180(v25, (uint64_t)&__p, 1);
    uint64_t v27 = sub_216779180(v26, (uint64_t)" success ", 9);
    sub_216A53D58(&__p);
    if ((v47 & 0x80u) == 0) {
      uint64_t v28 = &__p;
    }
    else {
      uint64_t v28 = __p;
    }
    if ((v47 & 0x80u) == 0) {
      uint64_t v29 = v47;
    }
    else {
      uint64_t v29 = v46;
    }
    size_t v30 = sub_216779180(v27, (uint64_t)v28, v29);
    sub_216779180(v30, (uint64_t)"; next ", 7);
    if ((char)v47 < 0) {
      operator delete(__p);
    }
    if ((char)v51 < 0) {
      operator delete(v49);
    }
    sub_216A3AB00(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v21 + *(void *)(*v21 - 24)));
    uint64_t v31 = std::locale::use_facet(&v48, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v31->__vftable[2].~facet_0)(v31, 10);
    std::locale::~locale(&v48);
    std::ostream::put();
    std::ostream::flush();
    return 1;
  }
}

void sub_216A53CE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, std::locale a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A53D58(void *a1@<X8>)
{
  uint64_t v2 = __cxa_demangle((const char *)(0x800000021746B888 & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)(0x800000021746B888 & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A53DF8(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

void sub_216A53E0C(void *a1@<X8>)
{
  uint64_t v2 = __cxa_demangle((const char *)(0x800000021746B8B9 & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)(0x800000021746B8B9 & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A53EAC(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_216A53EC0(uint64_t a1, char **a2)
{
  uint64_t v4 = (_OWORD *)(a1 + 8);
  uint64_t v5 = (long long *)(a1 + 48);
  sub_2169C56DC((uint64_t)v79, a1 + 8, (long long *)(a1 + 48));
  if ((v82 & 0x80u) == 0) {
    long long v6 = &v80[1];
  }
  else {
    long long v6 = (void **)v80[1];
  }
  if ((v82 & 0x80u) == 0) {
    uint64_t v7 = v82;
  }
  else {
    uint64_t v7 = v81;
  }
  size_t v8 = (void *)MEMORY[0x263F8C0F8];
  size_t v9 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v6, v7);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v9, (uint64_t)__p, 1);
  uint64_t v10 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v10, (uint64_t)__p, 1);
  int v11 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v11, (uint64_t)__p, 1);
  uint64_t v12 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  size_t v13 = sub_216779180(v12, (uint64_t)__p, 1);
  uint64_t v14 = sub_216779180(v13, (uint64_t)"  start  ", 9);
  sub_216A552B4(__p);
  if ((SBYTE7(v78) & 0x80u) == 0) {
    uint64_t v15 = __p;
  }
  else {
    uint64_t v15 = (void **)__p[0];
  }
  if ((SBYTE7(v78) & 0x80u) == 0) {
    uint64_t v16 = BYTE7(v78);
  }
  else {
    uint64_t v16 = (uint64_t)__p[1];
  }
  size_t v17 = sub_216779180(v14, (uint64_t)v15, v16);
  sub_216779180(v17, (uint64_t)"; current ", 10);
  if (SBYTE7(v78) < 0) {
    operator delete(__p[0]);
  }
  if ((char)v82 < 0) {
    operator delete(v80[1]);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v8 + *(void *)(*v8 - 24)));
  uint64_t v18 = std::locale::use_facet(v79, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v18->__vftable[2].~facet_0)(v18, 10);
  std::locale::~locale(v79);
  std::ostream::put();
  std::ostream::flush();
  sub_2169C56DC((uint64_t)v79, (uint64_t)v4, v5);
  if ((v82 & 0x80u) == 0) {
    std::string v19 = &v80[1];
  }
  else {
    std::string v19 = (void **)v80[1];
  }
  if ((v82 & 0x80u) == 0) {
    uint64_t v20 = v82;
  }
  else {
    uint64_t v20 = v81;
  }
  size_t v21 = sub_216779180(v8, (uint64_t)v19, v20);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v21, (uint64_t)__p, 1);
  size_t v22 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v22, (uint64_t)__p, 1);
  int v23 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v23, (uint64_t)__p, 1);
  uint64_t v24 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  size_t v25 = sub_216779180(v24, (uint64_t)__p, 1);
  size_t v26 = sub_216779180(v25, (uint64_t)"  start  ", 9);
  sub_216A5573C(__p);
  if ((SBYTE7(v78) & 0x80u) == 0) {
    uint64_t v27 = __p;
  }
  else {
    uint64_t v27 = (void **)__p[0];
  }
  if ((SBYTE7(v78) & 0x80u) == 0) {
    uint64_t v28 = BYTE7(v78);
  }
  else {
    uint64_t v28 = (uint64_t)__p[1];
  }
  uint64_t v29 = sub_216779180(v26, (uint64_t)v27, v28);
  sub_216779180(v29, (uint64_t)"; current ", 10);
  if (SBYTE7(v78) < 0) {
    operator delete(__p[0]);
  }
  if ((char)v82 < 0) {
    operator delete(v80[1]);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v8 + *(void *)(*v8 - 24)));
  size_t v30 = std::locale::use_facet(v79, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v30->__vftable[2].~facet_0)(v30, 10);
  std::locale::~locale(v79);
  std::ostream::put();
  std::ostream::flush();
  long long v31 = v4[1];
  *(_OWORD *)std::string __p = *v4;
  long long v78 = v31;
  sub_216A557E8(a1, a2);
  if (v32)
  {
    do
    {
      long long v33 = v4[1];
      *(_OWORD *)&v79[0].__locale_ = *v4;
      *(_OWORD *)uint64_t v80 = v33;
      if (!sub_216A58A40(a1)) {
        break;
      }
      sub_216A557E8(a1, a2);
    }
    while (v34);
    long long v35 = *(_OWORD *)v80;
    *uint64_t v4 = *(_OWORD *)&v79[0].__locale_;
    v4[1] = v35;
    sub_2169C56DC((uint64_t)v79, (uint64_t)v4, v5);
    if ((v82 & 0x80u) == 0) {
      size_t v36 = &v80[1];
    }
    else {
      size_t v36 = (void **)v80[1];
    }
    if ((v82 & 0x80u) == 0) {
      uint64_t v37 = v82;
    }
    else {
      uint64_t v37 = v81;
    }
    uint64_t v38 = (void *)MEMORY[0x263F8C0F8];
    uint64_t v39 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v36, v37);
    LOBYTE(__p[0]) = 58;
    sub_216779180(v39, (uint64_t)__p, 1);
    size_t v40 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 58;
    sub_216779180(v40, (uint64_t)__p, 1);
    size_t v41 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 40;
    sub_216779180(v41, (uint64_t)__p, 1);
    uint64_t v42 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 41;
    uint64_t v43 = sub_216779180(v42, (uint64_t)__p, 1);
    size_t v44 = sub_216779180(v43, (uint64_t)" success ", 9);
    sub_216A5573C(__p);
    if ((SBYTE7(v78) & 0x80u) == 0) {
      size_t v45 = __p;
    }
    else {
      size_t v45 = (void **)__p[0];
    }
    if ((SBYTE7(v78) & 0x80u) == 0) {
      uint64_t v46 = BYTE7(v78);
    }
    else {
      uint64_t v46 = (uint64_t)__p[1];
    }
    unsigned __int8 v47 = sub_216779180(v44, (uint64_t)v45, v46);
    sub_216779180(v47, (uint64_t)"; next ", 7);
    if (SBYTE7(v78) < 0) {
      operator delete(__p[0]);
    }
    if ((char)v82 < 0) {
      operator delete(v80[1]);
    }
    sub_216A3AB00(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v38 + *(void *)(*v38 - 24)));
    std::locale v48 = std::locale::use_facet(v79, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v48->__vftable[2].~facet_0)(v48, 10);
    std::locale::~locale(v79);
    std::ostream::put();
    std::ostream::flush();
  }
  else
  {
    long long v49 = v78;
    *uint64_t v4 = *(_OWORD *)__p;
    v4[1] = v49;
    sub_2169C56DC((uint64_t)v79, (uint64_t)v4, v5);
    if ((v82 & 0x80u) == 0) {
      uint64_t v50 = &v80[1];
    }
    else {
      uint64_t v50 = (void **)v80[1];
    }
    if ((v82 & 0x80u) == 0) {
      uint64_t v51 = v82;
    }
    else {
      uint64_t v51 = v81;
    }
    std::locale v52 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v50, v51);
    LOBYTE(__p[0]) = 58;
    sub_216779180(v52, (uint64_t)__p, 1);
    uint64_t v53 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 58;
    sub_216779180(v53, (uint64_t)__p, 1);
    uint64_t v54 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 40;
    sub_216779180(v54, (uint64_t)__p, 1);
    uint64_t v55 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 41;
    uint64_t v56 = sub_216779180(v55, (uint64_t)__p, 1);
    uint64_t v57 = sub_216779180(v56, (uint64_t)" failure ", 9);
    sub_216A5573C(__p);
    if ((SBYTE7(v78) & 0x80u) == 0) {
      size_t v58 = __p;
    }
    else {
      size_t v58 = (void **)__p[0];
    }
    if ((SBYTE7(v78) & 0x80u) == 0) {
      uint64_t v59 = BYTE7(v78);
    }
    else {
      uint64_t v59 = (uint64_t)__p[1];
    }
    uint64_t v60 = sub_216779180(v57, (uint64_t)v58, v59);
    std::ios_base::getloc((const std::ios_base *)((char *)v60 + *(void *)(*v60 - 24)));
    long long v61 = std::locale::use_facet(&v76, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v61->__vftable[2].~facet_0)(v61, 10);
    std::locale::~locale(&v76);
    std::ostream::put();
    std::ostream::flush();
    if (SBYTE7(v78) < 0) {
      operator delete(__p[0]);
    }
    if ((char)v82 < 0) {
      operator delete(v80[1]);
    }
    sub_216A55360(a1);
  }
  sub_2169C56DC((uint64_t)v79, (uint64_t)v4, v5);
  if ((v82 & 0x80u) == 0) {
    size_t v62 = &v80[1];
  }
  else {
    size_t v62 = (void **)v80[1];
  }
  if ((v82 & 0x80u) == 0) {
    uint64_t v63 = v82;
  }
  else {
    uint64_t v63 = v81;
  }
  uint64_t v64 = (void *)MEMORY[0x263F8C0F8];
  unsigned __int8 v65 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v62, v63);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v65, (uint64_t)__p, 1);
  size_t v66 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v66, (uint64_t)__p, 1);
  size_t v67 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v67, (uint64_t)__p, 1);
  uint64_t v68 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  unsigned __int8 v69 = sub_216779180(v68, (uint64_t)__p, 1);
  size_t v70 = sub_216779180(v69, (uint64_t)" success ", 9);
  sub_216A552B4(__p);
  if ((SBYTE7(v78) & 0x80u) == 0) {
    size_t v71 = __p;
  }
  else {
    size_t v71 = (void **)__p[0];
  }
  if ((SBYTE7(v78) & 0x80u) == 0) {
    uint64_t v72 = BYTE7(v78);
  }
  else {
    uint64_t v72 = (uint64_t)__p[1];
  }
  uint64_t v73 = sub_216779180(v70, (uint64_t)v71, v72);
  sub_216779180(v73, (uint64_t)"; next ", 7);
  if (SBYTE7(v78) < 0) {
    operator delete(__p[0]);
  }
  if ((char)v82 < 0) {
    operator delete(v80[1]);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v64 + *(void *)(*v64 - 24)));
  uint64_t v74 = std::locale::use_facet(v79, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v74->__vftable[2].~facet_0)(v74, 10);
  std::locale::~locale(v79);
  std::ostream::put();
  return std::ostream::flush();
}

void sub_216A5474C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::locale a10, long long a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, std::locale a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a25 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_216A54800(uint64_t a1)
{
  uint64_t v2 = a1 + 8;
  uint64_t v3 = (long long *)(a1 + 48);
  sub_2169C56DC((uint64_t)&v86, a1 + 8, (long long *)(a1 + 48));
  if ((v89 & 0x80u) == 0) {
    uint64_t v4 = &v87;
  }
  else {
    uint64_t v4 = v87;
  }
  if ((v89 & 0x80u) == 0) {
    uint64_t v5 = v89;
  }
  else {
    uint64_t v5 = v88;
  }
  long long v6 = (void *)MEMORY[0x263F8C0F8];
  uint64_t v7 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v4, v5);
  LOBYTE(__p) = 58;
  sub_216779180(v7, (uint64_t)&__p, 1);
  size_t v8 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 58;
  sub_216779180(v8, (uint64_t)&__p, 1);
  size_t v9 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 40;
  sub_216779180(v9, (uint64_t)&__p, 1);
  uint64_t v10 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 41;
  int v11 = sub_216779180(v10, (uint64_t)&__p, 1);
  uint64_t v12 = sub_216779180(v11, (uint64_t)"  start  ", 9);
  sub_216A59A8C(&__p);
  if ((v85 & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = __p;
  }
  if ((v85 & 0x80u) == 0) {
    uint64_t v14 = v85;
  }
  else {
    uint64_t v14 = v84;
  }
  uint64_t v15 = sub_216779180(v12, (uint64_t)p_p, v14);
  sub_216779180(v15, (uint64_t)"; current ", 10);
  if ((char)v85 < 0) {
    operator delete(__p);
  }
  if ((char)v89 < 0) {
    operator delete(v87);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v6 + *(void *)(*v6 - 24)));
  uint64_t v16 = std::locale::use_facet(&v86, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v16->__vftable[2].~facet_0)(v16, 10);
  std::locale::~locale(&v86);
  std::ostream::put();
  std::ostream::flush();
  while ((sub_216A537A8(a1) & 1) != 0)
    ;
  sub_2169C56DC((uint64_t)&v86, v2, v3);
  if ((v89 & 0x80u) == 0) {
    size_t v17 = &v87;
  }
  else {
    size_t v17 = v87;
  }
  if ((v89 & 0x80u) == 0) {
    uint64_t v18 = v89;
  }
  else {
    uint64_t v18 = v88;
  }
  std::string v19 = (void *)MEMORY[0x263F8C0F8];
  uint64_t v20 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v17, v18);
  LOBYTE(__p) = 58;
  sub_216779180(v20, (uint64_t)&__p, 1);
  size_t v21 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 58;
  sub_216779180(v21, (uint64_t)&__p, 1);
  size_t v22 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 40;
  sub_216779180(v22, (uint64_t)&__p, 1);
  int v23 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 41;
  uint64_t v24 = sub_216779180(v23, (uint64_t)&__p, 1);
  size_t v25 = sub_216779180(v24, (uint64_t)"  start  ", 9);
  sub_216A59B38(&__p);
  if ((v85 & 0x80u) == 0) {
    size_t v26 = &__p;
  }
  else {
    size_t v26 = __p;
  }
  if ((v85 & 0x80u) == 0) {
    uint64_t v27 = v85;
  }
  else {
    uint64_t v27 = v84;
  }
  uint64_t v28 = sub_216779180(v25, (uint64_t)v26, v27);
  sub_216779180(v28, (uint64_t)"; current ", 10);
  if ((char)v85 < 0) {
    operator delete(__p);
  }
  if ((char)v89 < 0) {
    operator delete(v87);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v19 + *(void *)(*v19 - 24)));
  uint64_t v29 = std::locale::use_facet(&v86, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v29->__vftable[2].~facet_0)(v29, 10);
  std::locale::~locale(&v86);
  std::ostream::put();
  std::ostream::flush();
  size_t v30 = *(unsigned char **)(a1 + 8);
  if (v30 == *(unsigned char **)(a1 + 40) || *v30 != 41)
  {
    sub_2169C56DC((uint64_t)&v86, v2, v3);
    if ((v89 & 0x80u) == 0) {
      uint64_t v59 = &v87;
    }
    else {
      uint64_t v59 = v87;
    }
    if ((v89 & 0x80u) == 0) {
      uint64_t v60 = v89;
    }
    else {
      uint64_t v60 = v88;
    }
    long long v61 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v59, v60);
    LOBYTE(__p) = 58;
    sub_216779180(v61, (uint64_t)&__p, 1);
    size_t v62 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 58;
    sub_216779180(v62, (uint64_t)&__p, 1);
    uint64_t v63 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 40;
    sub_216779180(v63, (uint64_t)&__p, 1);
    uint64_t v64 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 41;
    unsigned __int8 v65 = sub_216779180(v64, (uint64_t)&__p, 1);
    size_t v66 = sub_216779180(v65, (uint64_t)" failure ", 9);
    sub_216A59B38(&__p);
    if ((v85 & 0x80u) == 0) {
      size_t v67 = &__p;
    }
    else {
      size_t v67 = __p;
    }
    if ((v85 & 0x80u) == 0) {
      uint64_t v68 = v85;
    }
    else {
      uint64_t v68 = v84;
    }
    unsigned __int8 v69 = sub_216779180(v66, (uint64_t)v67, v68);
    std::ios_base::getloc((const std::ios_base *)((char *)v69 + *(void *)(*v69 - 24)));
    size_t v70 = std::locale::use_facet(&v90, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v70->__vftable[2].~facet_0)(v70, 10);
    std::locale::~locale(&v90);
    std::ostream::put();
    std::ostream::flush();
    if ((char)v85 < 0) {
      operator delete(__p);
    }
    if ((char)v89 < 0) {
      operator delete(v87);
    }
    sub_2169C56DC((uint64_t)&v86, v2, v3);
    if ((v89 & 0x80u) == 0) {
      size_t v71 = &v87;
    }
    else {
      size_t v71 = v87;
    }
    if ((v89 & 0x80u) == 0) {
      uint64_t v72 = v89;
    }
    else {
      uint64_t v72 = v88;
    }
    uint64_t v73 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v71, v72);
    LOBYTE(__p) = 58;
    sub_216779180(v73, (uint64_t)&__p, 1);
    uint64_t v74 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 58;
    sub_216779180(v74, (uint64_t)&__p, 1);
    uint64_t v75 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 40;
    sub_216779180(v75, (uint64_t)&__p, 1);
    std::locale v76 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 41;
    uint64_t v77 = sub_216779180(v76, (uint64_t)&__p, 1);
    long long v78 = sub_216779180(v77, (uint64_t)" failure ", 9);
    sub_216A59A8C(&__p);
    if ((v85 & 0x80u) == 0) {
      int v79 = &__p;
    }
    else {
      int v79 = __p;
    }
    if ((v85 & 0x80u) == 0) {
      uint64_t v80 = v85;
    }
    else {
      uint64_t v80 = v84;
    }
    uint64_t v81 = sub_216779180(v78, (uint64_t)v79, v80);
    std::ios_base::getloc((const std::ios_base *)((char *)v81 + *(void *)(*v81 - 24)));
    unsigned __int8 v82 = std::locale::use_facet(&v90, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v82->__vftable[2].~facet_0)(v82, 10);
    std::locale::~locale(&v90);
    std::ostream::put();
    std::ostream::flush();
    if ((char)v85 < 0) {
      operator delete(__p);
    }
    if ((char)v89 < 0) {
      operator delete(v87);
    }
    sub_216A59BEC(a1);
  }
  uint64_t v31 = *(void *)(a1 + 16) + 1;
  *(void *)(a1 + 8) = v30 + 1;
  *(void *)(a1 + 16) = v31;
  ++*(void *)(a1 + 32);
  sub_2169C56DC((uint64_t)&v86, v2, v3);
  if ((v89 & 0x80u) == 0) {
    int v32 = &v87;
  }
  else {
    int v32 = v87;
  }
  if ((v89 & 0x80u) == 0) {
    uint64_t v33 = v89;
  }
  else {
    uint64_t v33 = v88;
  }
  int v34 = (void *)MEMORY[0x263F8C0F8];
  long long v35 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v32, v33);
  LOBYTE(__p) = 58;
  sub_216779180(v35, (uint64_t)&__p, 1);
  size_t v36 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 58;
  sub_216779180(v36, (uint64_t)&__p, 1);
  uint64_t v37 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 40;
  sub_216779180(v37, (uint64_t)&__p, 1);
  uint64_t v38 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 41;
  uint64_t v39 = sub_216779180(v38, (uint64_t)&__p, 1);
  size_t v40 = sub_216779180(v39, (uint64_t)" success ", 9);
  sub_216A59B38(&__p);
  if ((v85 & 0x80u) == 0) {
    size_t v41 = &__p;
  }
  else {
    size_t v41 = __p;
  }
  if ((v85 & 0x80u) == 0) {
    uint64_t v42 = v85;
  }
  else {
    uint64_t v42 = v84;
  }
  uint64_t v43 = sub_216779180(v40, (uint64_t)v41, v42);
  sub_216779180(v43, (uint64_t)"; next ", 7);
  if ((char)v85 < 0) {
    operator delete(__p);
  }
  if ((char)v89 < 0) {
    operator delete(v87);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v34 + *(void *)(*v34 - 24)));
  size_t v44 = std::locale::use_facet(&v86, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v44->__vftable[2].~facet_0)(v44, 10);
  std::locale::~locale(&v86);
  std::ostream::put();
  std::ostream::flush();
  while ((sub_216A537A8(a1) & 1) != 0)
    ;
  sub_2169C56DC((uint64_t)&v86, v2, v3);
  if ((v89 & 0x80u) == 0) {
    size_t v45 = &v87;
  }
  else {
    size_t v45 = v87;
  }
  if ((v89 & 0x80u) == 0) {
    uint64_t v46 = v89;
  }
  else {
    uint64_t v46 = v88;
  }
  unsigned __int8 v47 = (void *)MEMORY[0x263F8C0F8];
  std::locale v48 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v45, v46);
  LOBYTE(__p) = 58;
  sub_216779180(v48, (uint64_t)&__p, 1);
  long long v49 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 58;
  sub_216779180(v49, (uint64_t)&__p, 1);
  uint64_t v50 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 40;
  sub_216779180(v50, (uint64_t)&__p, 1);
  uint64_t v51 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 41;
  std::locale v52 = sub_216779180(v51, (uint64_t)&__p, 1);
  uint64_t v53 = sub_216779180(v52, (uint64_t)" success ", 9);
  sub_216A59A8C(&__p);
  if ((v85 & 0x80u) == 0) {
    uint64_t v54 = &__p;
  }
  else {
    uint64_t v54 = __p;
  }
  if ((v85 & 0x80u) == 0) {
    uint64_t v55 = v85;
  }
  else {
    uint64_t v55 = v84;
  }
  uint64_t v56 = sub_216779180(v53, (uint64_t)v54, v55);
  sub_216779180(v56, (uint64_t)"; next ", 7);
  if ((char)v85 < 0) {
    operator delete(__p);
  }
  if ((char)v89 < 0) {
    operator delete(v87);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v47 + *(void *)(*v47 - 24)));
  uint64_t v57 = std::locale::use_facet(&v86, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v57->__vftable[2].~facet_0)(v57, 10);
  std::locale::~locale(&v86);
  std::ostream::put();
  return std::ostream::flush();
}

void sub_216A55210(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, std::locale a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  std::locale::~locale((std::locale *)(v23 - 56));
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  _Unwind_Resume(a1);
}

void sub_216A552B4(void *a1@<X8>)
{
  uint64_t v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_117FunctionArgumentsE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_117FunctionArgumentsE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A5534C(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_216A55360(uint64_t a1)
{
  uint64_t v2 = a1 + 8;
  uint64_t v3 = (long long *)(a1 + 48);
  sub_2169C56DC((uint64_t)&v34, a1 + 8, (long long *)(a1 + 48));
  if ((v37 & 0x80u) == 0) {
    uint64_t v4 = &v35;
  }
  else {
    uint64_t v4 = v35;
  }
  if ((v37 & 0x80u) == 0) {
    uint64_t v5 = v37;
  }
  else {
    uint64_t v5 = v36;
  }
  long long v6 = (void *)MEMORY[0x263F8C0F8];
  uint64_t v7 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v4, v5);
  LOBYTE(__p) = 58;
  sub_216779180(v7, (uint64_t)&__p, 1);
  size_t v8 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 58;
  sub_216779180(v8, (uint64_t)&__p, 1);
  size_t v9 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 40;
  sub_216779180(v9, (uint64_t)&__p, 1);
  uint64_t v10 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 41;
  int v11 = sub_216779180(v10, (uint64_t)&__p, 1);
  uint64_t v12 = sub_216779180(v11, (uint64_t)"  start  ", 9);
  sub_216A599D8(&__p);
  if ((v33 & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = __p;
  }
  if ((v33 & 0x80u) == 0) {
    uint64_t v14 = v33;
  }
  else {
    uint64_t v14 = v32;
  }
  uint64_t v15 = sub_216779180(v12, (uint64_t)p_p, v14);
  sub_216779180(v15, (uint64_t)"; current ", 10);
  if ((char)v33 < 0) {
    operator delete(__p);
  }
  if ((char)v37 < 0) {
    operator delete(v35);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v6 + *(void *)(*v6 - 24)));
  uint64_t v16 = std::locale::use_facet(&v34, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v16->__vftable[2].~facet_0)(v16, 10);
  std::locale::~locale(&v34);
  std::ostream::put();
  std::ostream::flush();
  while ((sub_216A537A8(a1) & 1) != 0)
    ;
  sub_2169C56DC((uint64_t)&v34, v2, v3);
  if ((v37 & 0x80u) == 0) {
    size_t v17 = &v35;
  }
  else {
    size_t v17 = v35;
  }
  if ((v37 & 0x80u) == 0) {
    uint64_t v18 = v37;
  }
  else {
    uint64_t v18 = v36;
  }
  std::string v19 = (void *)MEMORY[0x263F8C0F8];
  uint64_t v20 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v17, v18);
  LOBYTE(__p) = 58;
  sub_216779180(v20, (uint64_t)&__p, 1);
  size_t v21 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 58;
  sub_216779180(v21, (uint64_t)&__p, 1);
  size_t v22 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 40;
  sub_216779180(v22, (uint64_t)&__p, 1);
  uint64_t v23 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 41;
  uint64_t v24 = sub_216779180(v23, (uint64_t)&__p, 1);
  size_t v25 = sub_216779180(v24, (uint64_t)" success ", 9);
  sub_216A599D8(&__p);
  if ((v33 & 0x80u) == 0) {
    size_t v26 = &__p;
  }
  else {
    size_t v26 = __p;
  }
  if ((v33 & 0x80u) == 0) {
    uint64_t v27 = v33;
  }
  else {
    uint64_t v27 = v32;
  }
  uint64_t v28 = sub_216779180(v25, (uint64_t)v26, v27);
  sub_216779180(v28, (uint64_t)"; next ", 7);
  if ((char)v33 < 0) {
    operator delete(__p);
  }
  if ((char)v37 < 0) {
    operator delete(v35);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v19 + *(void *)(*v19 - 24)));
  uint64_t v29 = std::locale::use_facet(&v34, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v29->__vftable[2].~facet_0)(v29, 10);
  std::locale::~locale(&v34);
  std::ostream::put();
  return std::ostream::flush();
}

void sub_216A556E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, std::locale a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A5573C(void *a1@<X8>)
{
  uint64_t v2 = __cxa_demangle((const char *)((unint64_t)"N3tao21PXR_INTERNAL_NS_pegtl4listIN32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_123FunctionArgumentWrapperINS3_14ExpressionBodyEEENS0_5ascii3oneIJLc44EEEENS8_IJLc32EEEEEE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N3tao21PXR_INTERNAL_NS_pegtl4listIN32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_123FunctionArgumentWrapperINS3_14ExpressionBodyEEENS0_5ascii3oneIJLc44EEEENS8_IJLc32EEEEEE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A557D4(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

double sub_216A557E8(uint64_t a1, char **a2)
{
  uint64_t v4 = (_OWORD *)(a1 + 8);
  long long v5 = *(_OWORD *)(a1 + 24);
  long long v63 = *(_OWORD *)(a1 + 8);
  long long v64 = v5;
  uint64_t v65 = a1 + 8;
  long long v6 = (long long *)(a1 + 48);
  sub_2169C56DC((uint64_t)v69, a1 + 8, (long long *)(a1 + 48));
  if ((v72 & 0x80u) == 0) {
    uint64_t v7 = &v70[1];
  }
  else {
    uint64_t v7 = (void **)v70[1];
  }
  if ((v72 & 0x80u) == 0) {
    uint64_t v8 = v72;
  }
  else {
    uint64_t v8 = v71;
  }
  size_t v9 = (void *)MEMORY[0x263F8C0F8];
  uint64_t v10 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v7, v8);
  LOBYTE(__p) = 58;
  sub_216779180(v10, (uint64_t)&__p, 1);
  int v11 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 58;
  sub_216779180(v11, (uint64_t)&__p, 1);
  uint64_t v12 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 40;
  sub_216779180(v12, (uint64_t)&__p, 1);
  size_t v13 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 41;
  uint64_t v14 = sub_216779180(v13, (uint64_t)&__p, 1);
  uint64_t v15 = sub_216779180(v14, (uint64_t)"  start  ", 9);
  sub_216A56004(&__p);
  if ((v68 & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = __p;
  }
  if ((v68 & 0x80u) == 0) {
    uint64_t v17 = v68;
  }
  else {
    uint64_t v17 = v67;
  }
  uint64_t v18 = sub_216779180(v15, (uint64_t)p_p, v17);
  sub_216779180(v18, (uint64_t)"; current ", 10);
  if ((char)v68 < 0) {
    operator delete(__p);
  }
  if ((char)v72 < 0) {
    operator delete(v70[1]);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v9 + *(void *)(*v9 - 24)));
  std::string v19 = std::locale::use_facet(v69, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v19->__vftable[2].~facet_0)(v19, 10);
  std::locale::~locale(v69);
  std::ostream::put();
  std::ostream::flush();
  if (sub_216A3B0D8(a1, a2)) {
    goto LABEL_22;
  }
  sub_216A560B0(a1);
  long long v20 = v4[1];
  *(_OWORD *)&v69[0].__locale_ = *v4;
  *(_OWORD *)size_t v70 = v20;
  sub_216A56768(a1);
  size_t v21 = *(unsigned char **)(a1 + 8);
  if (v21 != *(unsigned char **)(a1 + 40) && *v21 == 91)
  {
    uint64_t v22 = *(void *)(a1 + 16) + 1;
    *(void *)(a1 + 8) = v21 + 1;
    *(void *)(a1 + 16) = v22;
    ++*(void *)(a1 + 32);
    sub_216A56978(a1, a2);
    sub_216A56B78(a1);
    sub_216A571EC((long long *)a1, a2);
    if ((sub_216A590C4(a1) & 1) == 0) {
      sub_216A59720(a1);
    }
    sub_216A562C0(a1);
LABEL_22:
    sub_2169C56DC((uint64_t)v69, (uint64_t)v4, v6);
    if ((v72 & 0x80u) == 0) {
      uint64_t v23 = &v70[1];
    }
    else {
      uint64_t v23 = (void **)v70[1];
    }
    if ((v72 & 0x80u) == 0) {
      uint64_t v24 = v72;
    }
    else {
      uint64_t v24 = v71;
    }
    size_t v25 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v23, v24);
    LOBYTE(__p) = 58;
    sub_216779180(v25, (uint64_t)&__p, 1);
    size_t v26 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 58;
    sub_216779180(v26, (uint64_t)&__p, 1);
    uint64_t v27 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 40;
    sub_216779180(v27, (uint64_t)&__p, 1);
    uint64_t v28 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 41;
    uint64_t v29 = sub_216779180(v28, (uint64_t)&__p, 1);
    size_t v30 = sub_216779180(v29, (uint64_t)"  apply  ", 9);
    sub_216A56004(&__p);
    if ((v68 & 0x80u) == 0) {
      uint64_t v31 = &__p;
    }
    else {
      uint64_t v31 = __p;
    }
    if ((v68 & 0x80u) == 0) {
      uint64_t v32 = v68;
    }
    else {
      uint64_t v32 = v67;
    }
    unsigned __int8 v33 = sub_216779180(v30, (uint64_t)v31, v32);
    std::ios_base::getloc((const std::ios_base *)((char *)v33 + *(void *)(*v33 - 24)));
    std::locale v34 = std::locale::use_facet(&v73, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v34->__vftable[2].~facet_0)(v34, 10);
    std::locale::~locale(&v73);
    std::ostream::put();
    std::ostream::flush();
    if ((char)v68 < 0) {
      operator delete(__p);
    }
    if ((char)v72 < 0) {
      operator delete(v70[1]);
    }
    sub_216A59774(&v63, a1, a2);
    sub_2169C56DC((uint64_t)v69, (uint64_t)v4, v6);
    if ((v72 & 0x80u) == 0) {
      long long v35 = &v70[1];
    }
    else {
      long long v35 = (void **)v70[1];
    }
    if ((v72 & 0x80u) == 0) {
      uint64_t v36 = v72;
    }
    else {
      uint64_t v36 = v71;
    }
    unsigned __int8 v37 = (void *)MEMORY[0x263F8C0F8];
    uint64_t v38 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v35, v36);
    LOBYTE(__p) = 58;
    sub_216779180(v38, (uint64_t)&__p, 1);
    uint64_t v39 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 58;
    sub_216779180(v39, (uint64_t)&__p, 1);
    size_t v40 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 40;
    sub_216779180(v40, (uint64_t)&__p, 1);
    size_t v41 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 41;
    uint64_t v42 = sub_216779180(v41, (uint64_t)&__p, 1);
    uint64_t v43 = sub_216779180(v42, (uint64_t)" success ", 9);
    sub_216A56004(&__p);
    if ((v68 & 0x80u) == 0) {
      size_t v44 = &__p;
    }
    else {
      size_t v44 = __p;
    }
    if ((v68 & 0x80u) == 0) {
      uint64_t v45 = v68;
    }
    else {
      uint64_t v45 = v67;
    }
    uint64_t v46 = sub_216779180(v43, (uint64_t)v44, v45);
    sub_216779180(v46, (uint64_t)"; next ", 7);
    if ((char)v68 < 0) {
      operator delete(__p);
    }
    if ((char)v72 < 0) {
      operator delete(v70[1]);
    }
    sub_216A3AB00(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v37 + *(void *)(*v37 - 24)));
    unsigned __int8 v47 = std::locale::use_facet(v69, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v47->__vftable[2].~facet_0)(v47, 10);
    std::locale::~locale(v69);
    std::ostream::put();
    std::ostream::flush();
    return result;
  }
  sub_216A56D88(a1);
  long long v49 = *(_OWORD *)v70;
  *uint64_t v4 = *(_OWORD *)&v69[0].__locale_;
  v4[1] = v49;
  sub_216A564D0(a1);
  sub_2169C56DC((uint64_t)v69, (uint64_t)v4, v6);
  if ((v72 & 0x80u) == 0) {
    uint64_t v50 = &v70[1];
  }
  else {
    uint64_t v50 = (void **)v70[1];
  }
  if ((v72 & 0x80u) == 0) {
    uint64_t v51 = v72;
  }
  else {
    uint64_t v51 = v71;
  }
  std::locale v52 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v50, v51);
  LOBYTE(__p) = 58;
  sub_216779180(v52, (uint64_t)&__p, 1);
  uint64_t v53 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 58;
  sub_216779180(v53, (uint64_t)&__p, 1);
  uint64_t v54 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 40;
  sub_216779180(v54, (uint64_t)&__p, 1);
  uint64_t v55 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 41;
  uint64_t v56 = sub_216779180(v55, (uint64_t)&__p, 1);
  uint64_t v57 = sub_216779180(v56, (uint64_t)" failure ", 9);
  sub_216A56004(&__p);
  if ((v68 & 0x80u) == 0) {
    size_t v58 = &__p;
  }
  else {
    size_t v58 = __p;
  }
  if ((v68 & 0x80u) == 0) {
    uint64_t v59 = v68;
  }
  else {
    uint64_t v59 = v67;
  }
  uint64_t v60 = sub_216779180(v57, (uint64_t)v58, v59);
  std::ios_base::getloc((const std::ios_base *)((char *)v60 + *(void *)(*v60 - 24)));
  long long v61 = std::locale::use_facet(&v73, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v61->__vftable[2].~facet_0)(v61, 10);
  std::locale::~locale(&v73);
  std::ostream::put();
  std::ostream::flush();
  if ((char)v68 < 0) {
    operator delete(__p);
  }
  if ((char)v72 < 0) {
    operator delete(v70[1]);
  }
  double result = *(double *)&v63;
  long long v62 = v64;
  *uint64_t v4 = v63;
  v4[1] = v62;
  return result;
}

void sub_216A55F60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, long long a9, long long a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, std::locale a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0) {
    operator delete(__p);
  }
  _OWORD *v26 = a9;
  v26[1] = a10;
  _Unwind_Resume(exception_object);
}

void sub_216A56004(void *a1@<X8>)
{
  uint64_t v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_123FunctionArgumentWrapperINS0_14ExpressionBodyEEE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_123FunctionArgumentWrapperINS0_14ExpressionBodyEEE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A5609C(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_216A560B0(uint64_t a1)
{
  sub_2169C56DC((uint64_t)&v18, a1 + 8, (long long *)(a1 + 48));
  if ((v20 & 0x80u) == 0) {
    uint64_t v2 = v19;
  }
  else {
    uint64_t v2 = (void **)v19[0];
  }
  if ((v20 & 0x80u) == 0) {
    uint64_t v3 = v20;
  }
  else {
    uint64_t v3 = (uint64_t)v19[1];
  }
  uint64_t v4 = (void *)MEMORY[0x263F8C0F8];
  long long v5 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v2, v3);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v5, (uint64_t)__p, 1);
  long long v6 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v6, (uint64_t)__p, 1);
  uint64_t v7 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v7, (uint64_t)__p, 1);
  uint64_t v8 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  size_t v9 = sub_216779180(v8, (uint64_t)__p, 1);
  uint64_t v10 = sub_216779180(v9, (uint64_t)"  start  ", 9);
  sub_216A566BC(__p);
  if ((v17 & 0x80u) == 0) {
    int v11 = __p;
  }
  else {
    int v11 = (void **)__p[0];
  }
  if ((v17 & 0x80u) == 0) {
    uint64_t v12 = v17;
  }
  else {
    uint64_t v12 = (uint64_t)__p[1];
  }
  size_t v13 = sub_216779180(v10, (uint64_t)v11, v12);
  sub_216779180(v13, (uint64_t)"; current ", 10);
  if ((char)v17 < 0) {
    operator delete(__p[0]);
  }
  if ((char)v20 < 0) {
    operator delete(v19[0]);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v4 + *(void *)(*v4 - 24)));
  uint64_t v14 = std::locale::use_facet(&v18, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v14->__vftable[2].~facet_0)(v14, 10);
  std::locale::~locale(&v18);
  std::ostream::put();
  return std::ostream::flush();
}

void sub_216A56278(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, std::locale a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_216A562C0(uint64_t a1)
{
  sub_2169C56DC((uint64_t)&v18, a1 + 8, (long long *)(a1 + 48));
  if ((v20 & 0x80u) == 0) {
    uint64_t v2 = v19;
  }
  else {
    uint64_t v2 = (void **)v19[0];
  }
  if ((v20 & 0x80u) == 0) {
    uint64_t v3 = v20;
  }
  else {
    uint64_t v3 = (uint64_t)v19[1];
  }
  uint64_t v4 = (void *)MEMORY[0x263F8C0F8];
  long long v5 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v2, v3);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v5, (uint64_t)__p, 1);
  long long v6 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v6, (uint64_t)__p, 1);
  uint64_t v7 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v7, (uint64_t)__p, 1);
  uint64_t v8 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  size_t v9 = sub_216779180(v8, (uint64_t)__p, 1);
  uint64_t v10 = sub_216779180(v9, (uint64_t)" success ", 9);
  sub_216A566BC(__p);
  if ((v17 & 0x80u) == 0) {
    int v11 = __p;
  }
  else {
    int v11 = (void **)__p[0];
  }
  if ((v17 & 0x80u) == 0) {
    uint64_t v12 = v17;
  }
  else {
    uint64_t v12 = (uint64_t)__p[1];
  }
  size_t v13 = sub_216779180(v10, (uint64_t)v11, v12);
  sub_216779180(v13, (uint64_t)"; next ", 7);
  if ((char)v17 < 0) {
    operator delete(__p[0]);
  }
  if ((char)v20 < 0) {
    operator delete(v19[0]);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v4 + *(void *)(*v4 - 24)));
  uint64_t v14 = std::locale::use_facet(&v18, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v14->__vftable[2].~facet_0)(v14, 10);
  std::locale::~locale(&v18);
  std::ostream::put();
  return std::ostream::flush();
}

void sub_216A56488(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, std::locale a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A564D0(uint64_t a1)
{
  sub_2169C56DC((uint64_t)&v15, a1 + 8, (long long *)(a1 + 48));
  if ((v17 & 0x80u) == 0) {
    uint64_t v1 = v16;
  }
  else {
    uint64_t v1 = (void **)v16[0];
  }
  if ((v17 & 0x80u) == 0) {
    uint64_t v2 = v17;
  }
  else {
    uint64_t v2 = (uint64_t)v16[1];
  }
  uint64_t v3 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v1, v2);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v3, (uint64_t)__p, 1);
  uint64_t v4 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v4, (uint64_t)__p, 1);
  long long v5 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v5, (uint64_t)__p, 1);
  long long v6 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  uint64_t v7 = sub_216779180(v6, (uint64_t)__p, 1);
  uint64_t v8 = sub_216779180(v7, (uint64_t)" failure ", 9);
  sub_216A566BC(__p);
  if ((v14 & 0x80u) == 0) {
    size_t v9 = __p;
  }
  else {
    size_t v9 = (void **)__p[0];
  }
  if ((v14 & 0x80u) == 0) {
    uint64_t v10 = v14;
  }
  else {
    uint64_t v10 = (uint64_t)__p[1];
  }
  int v11 = sub_216779180(v8, (uint64_t)v9, v10);
  std::ios_base::getloc((const std::ios_base *)((char *)v11 + *(void *)(*v11 - 24)));
  uint64_t v12 = std::locale::use_facet(&v18, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v12->__vftable[2].~facet_0)(v12, 10);
  std::locale::~locale(&v18);
  std::ostream::put();
  std::ostream::flush();
  if ((char)v14 < 0) {
    operator delete(__p[0]);
  }
  if ((char)v17 < 0) {
    operator delete(v16[0]);
  }
}

void sub_216A56674(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A566BC(void *a1@<X8>)
{
  uint64_t v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_114ListExpressionE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_114ListExpressionE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A56754(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_216A56768(uint64_t a1)
{
  sub_2169C56DC((uint64_t)&v18, a1 + 8, (long long *)(a1 + 48));
  if ((v20 & 0x80u) == 0) {
    uint64_t v2 = v19;
  }
  else {
    uint64_t v2 = (void **)v19[0];
  }
  if ((v20 & 0x80u) == 0) {
    uint64_t v3 = v20;
  }
  else {
    uint64_t v3 = (uint64_t)v19[1];
  }
  uint64_t v4 = (void *)MEMORY[0x263F8C0F8];
  long long v5 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v2, v3);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v5, (uint64_t)__p, 1);
  long long v6 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v6, (uint64_t)__p, 1);
  uint64_t v7 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v7, (uint64_t)__p, 1);
  uint64_t v8 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  size_t v9 = sub_216779180(v8, (uint64_t)__p, 1);
  uint64_t v10 = sub_216779180(v9, (uint64_t)"  start  ", 9);
  sub_216A56F74(__p);
  if ((v17 & 0x80u) == 0) {
    int v11 = __p;
  }
  else {
    int v11 = (void **)__p[0];
  }
  if ((v17 & 0x80u) == 0) {
    uint64_t v12 = v17;
  }
  else {
    uint64_t v12 = (uint64_t)__p[1];
  }
  size_t v13 = sub_216779180(v10, (uint64_t)v11, v12);
  sub_216779180(v13, (uint64_t)"; current ", 10);
  if ((char)v17 < 0) {
    operator delete(__p[0]);
  }
  if ((char)v20 < 0) {
    operator delete(v19[0]);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v4 + *(void *)(*v4 - 24)));
  unsigned __int8 v14 = std::locale::use_facet(&v18, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v14->__vftable[2].~facet_0)(v14, 10);
  std::locale::~locale(&v18);
  std::ostream::put();
  return std::ostream::flush();
}

void sub_216A56930(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, std::locale a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_216A56978(uint64_t a1, char **a2)
{
  sub_2169C56DC((uint64_t)&v18, a1 + 8, (long long *)(a1 + 48));
  if ((v20 & 0x80u) == 0) {
    uint64_t v3 = v19;
  }
  else {
    uint64_t v3 = (void **)v19[0];
  }
  if ((v20 & 0x80u) == 0) {
    uint64_t v4 = v20;
  }
  else {
    uint64_t v4 = (uint64_t)v19[1];
  }
  long long v5 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v3, v4);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v5, (uint64_t)__p, 1);
  long long v6 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v6, (uint64_t)__p, 1);
  uint64_t v7 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v7, (uint64_t)__p, 1);
  uint64_t v8 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  size_t v9 = sub_216779180(v8, (uint64_t)__p, 1);
  uint64_t v10 = sub_216779180(v9, (uint64_t)"  apply  ", 9);
  sub_216A56F74(__p);
  if ((v17 & 0x80u) == 0) {
    int v11 = __p;
  }
  else {
    int v11 = (void **)__p[0];
  }
  if ((v17 & 0x80u) == 0) {
    uint64_t v12 = v17;
  }
  else {
    uint64_t v12 = (uint64_t)__p[1];
  }
  size_t v13 = sub_216779180(v10, (uint64_t)v11, v12);
  std::ios_base::getloc((const std::ios_base *)((char *)v13 + *(void *)(*v13 - 24)));
  unsigned __int8 v14 = std::locale::use_facet(&v21, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v14->__vftable[2].~facet_0)(v14, 10);
  std::locale::~locale(&v21);
  std::ostream::put();
  std::ostream::flush();
  if ((char)v17 < 0) {
    operator delete(__p[0]);
  }
  if ((char)v20 < 0) {
    operator delete(v19[0]);
  }
  return sub_216A57020(a2);
}

void sub_216A56B30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_216A56B78(uint64_t a1)
{
  sub_2169C56DC((uint64_t)&v18, a1 + 8, (long long *)(a1 + 48));
  if ((v20 & 0x80u) == 0) {
    uint64_t v2 = v19;
  }
  else {
    uint64_t v2 = (void **)v19[0];
  }
  if ((v20 & 0x80u) == 0) {
    uint64_t v3 = v20;
  }
  else {
    uint64_t v3 = (uint64_t)v19[1];
  }
  uint64_t v4 = (void *)MEMORY[0x263F8C0F8];
  long long v5 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v2, v3);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v5, (uint64_t)__p, 1);
  long long v6 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v6, (uint64_t)__p, 1);
  uint64_t v7 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v7, (uint64_t)__p, 1);
  uint64_t v8 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  size_t v9 = sub_216779180(v8, (uint64_t)__p, 1);
  uint64_t v10 = sub_216779180(v9, (uint64_t)" success ", 9);
  sub_216A56F74(__p);
  if ((v17 & 0x80u) == 0) {
    int v11 = __p;
  }
  else {
    int v11 = (void **)__p[0];
  }
  if ((v17 & 0x80u) == 0) {
    uint64_t v12 = v17;
  }
  else {
    uint64_t v12 = (uint64_t)__p[1];
  }
  size_t v13 = sub_216779180(v10, (uint64_t)v11, v12);
  sub_216779180(v13, (uint64_t)"; next ", 7);
  if ((char)v17 < 0) {
    operator delete(__p[0]);
  }
  if ((char)v20 < 0) {
    operator delete(v19[0]);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v4 + *(void *)(*v4 - 24)));
  unsigned __int8 v14 = std::locale::use_facet(&v18, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v14->__vftable[2].~facet_0)(v14, 10);
  std::locale::~locale(&v18);
  std::ostream::put();
  return std::ostream::flush();
}

void sub_216A56D40(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, std::locale a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A56D88(uint64_t a1)
{
  sub_2169C56DC((uint64_t)&v15, a1 + 8, (long long *)(a1 + 48));
  if ((v17 & 0x80u) == 0) {
    uint64_t v1 = v16;
  }
  else {
    uint64_t v1 = (void **)v16[0];
  }
  if ((v17 & 0x80u) == 0) {
    uint64_t v2 = v17;
  }
  else {
    uint64_t v2 = (uint64_t)v16[1];
  }
  uint64_t v3 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v1, v2);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v3, (uint64_t)__p, 1);
  uint64_t v4 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v4, (uint64_t)__p, 1);
  long long v5 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v5, (uint64_t)__p, 1);
  long long v6 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  uint64_t v7 = sub_216779180(v6, (uint64_t)__p, 1);
  uint64_t v8 = sub_216779180(v7, (uint64_t)" failure ", 9);
  sub_216A56F74(__p);
  if ((v14 & 0x80u) == 0) {
    size_t v9 = __p;
  }
  else {
    size_t v9 = (void **)__p[0];
  }
  if ((v14 & 0x80u) == 0) {
    uint64_t v10 = v14;
  }
  else {
    uint64_t v10 = (uint64_t)__p[1];
  }
  int v11 = sub_216779180(v8, (uint64_t)v9, v10);
  std::ios_base::getloc((const std::ios_base *)((char *)v11 + *(void *)(*v11 - 24)));
  uint64_t v12 = std::locale::use_facet(&v18, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v12->__vftable[2].~facet_0)(v12, 10);
  std::locale::~locale(&v18);
  std::ostream::put();
  std::ostream::flush();
  if ((char)v14 < 0) {
    operator delete(__p[0]);
  }
  if ((char)v17 < 0) {
    operator delete(v16[0]);
  }
}

void sub_216A56F2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A56F74(void *a1@<X8>)
{
  uint64_t v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_19ListStartE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_19ListStartE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A5700C(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_216A57020(char **a1)
{
  uint64_t v2 = operator new(0x20uLL);
  *uint64_t v2 = &unk_26C757BE8;
  v2[1] = 0;
  v2[2] = 0;
  v2[3] = 0;
  long long v5 = v2;
  sub_216A40520(a1, (uint64_t *)&v5);
  uint64_t result = (uint64_t)v5;
  if (v5)
  {
    uint64_t v4 = *(uint64_t (**)(void))(*v5 + 8);
    return v4();
  }
  return result;
}

void sub_216A570C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10) {
    sub_21732462C(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_216A570E0(uint64_t a1)
{
  *(void *)a1 = &unk_26C757BE8;
  uint64_t v3 = (void **)(a1 + 8);
  sub_216A37EF4(&v3);
  return a1;
}

void sub_216A57138(char *a1)
{
  *(void *)a1 = &unk_26C757BE8;
  uint64_t v2 = (void **)(a1 + 8);
  sub_216A37EF4(&v2);
  operator delete(a1);
}

void sub_216A57194(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (__n128 *)(a1 + 8);
  uint64_t v4 = operator new(0x20uLL);
  pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ListNode::ListNode(v4, v3);
  *a2 = v4;
}

void sub_216A571D8(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_216A571EC(long long *a1, char **a2)
{
  uint64_t v4 = (long long *)((char *)a1 + 8);
  long long v5 = a1 + 3;
  sub_2169C56DC((uint64_t)v79, (uint64_t)a1 + 8, a1 + 3);
  if ((v82 & 0x80u) == 0) {
    long long v6 = &v80[1];
  }
  else {
    long long v6 = (void **)v80[1];
  }
  if ((v82 & 0x80u) == 0) {
    uint64_t v7 = v82;
  }
  else {
    uint64_t v7 = v81;
  }
  uint64_t v8 = (void *)MEMORY[0x263F8C0F8];
  size_t v9 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v6, v7);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v9, (uint64_t)__p, 1);
  uint64_t v10 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v10, (uint64_t)__p, 1);
  int v11 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v11, (uint64_t)__p, 1);
  uint64_t v12 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  size_t v13 = sub_216779180(v12, (uint64_t)__p, 1);
  unsigned __int8 v14 = sub_216779180(v13, (uint64_t)"  start  ", 9);
  sub_216A57B2C(__p);
  if ((SBYTE7(v78) & 0x80u) == 0) {
    uint64_t v15 = __p;
  }
  else {
    uint64_t v15 = (void **)__p[0];
  }
  if ((SBYTE7(v78) & 0x80u) == 0) {
    uint64_t v16 = BYTE7(v78);
  }
  else {
    uint64_t v16 = (uint64_t)__p[1];
  }
  unsigned __int8 v17 = sub_216779180(v14, (uint64_t)v15, v16);
  sub_216779180(v17, (uint64_t)"; current ", 10);
  if (SBYTE7(v78) < 0) {
    operator delete(__p[0]);
  }
  if ((char)v82 < 0) {
    operator delete(v80[1]);
  }
  sub_216A3AB00((uint64_t)a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v8 + *(void *)(*v8 - 24)));
  std::locale v18 = std::locale::use_facet(v79, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v18->__vftable[2].~facet_0)(v18, 10);
  std::locale::~locale(v79);
  std::ostream::put();
  std::ostream::flush();
  sub_2169C56DC((uint64_t)v79, (uint64_t)v4, v5);
  if ((v82 & 0x80u) == 0) {
    std::string v19 = &v80[1];
  }
  else {
    std::string v19 = (void **)v80[1];
  }
  if ((v82 & 0x80u) == 0) {
    uint64_t v20 = v82;
  }
  else {
    uint64_t v20 = v81;
  }
  std::locale v21 = sub_216779180(v8, (uint64_t)v19, v20);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v21, (uint64_t)__p, 1);
  uint64_t v22 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v22, (uint64_t)__p, 1);
  uint64_t v23 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v23, (uint64_t)__p, 1);
  uint64_t v24 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  size_t v25 = sub_216779180(v24, (uint64_t)__p, 1);
  size_t v26 = sub_216779180(v25, (uint64_t)"  start  ", 9);
  sub_216A57BD8(__p);
  if ((SBYTE7(v78) & 0x80u) == 0) {
    uint64_t v27 = __p;
  }
  else {
    uint64_t v27 = (void **)__p[0];
  }
  if ((SBYTE7(v78) & 0x80u) == 0) {
    uint64_t v28 = BYTE7(v78);
  }
  else {
    uint64_t v28 = (uint64_t)__p[1];
  }
  uint64_t v29 = sub_216779180(v26, (uint64_t)v27, v28);
  sub_216779180(v29, (uint64_t)"; current ", 10);
  if (SBYTE7(v78) < 0) {
    operator delete(__p[0]);
  }
  if ((char)v82 < 0) {
    operator delete(v80[1]);
  }
  sub_216A3AB00((uint64_t)a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v8 + *(void *)(*v8 - 24)));
  size_t v30 = std::locale::use_facet(v79, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v30->__vftable[2].~facet_0)(v30, 10);
  std::locale::~locale(v79);
  std::ostream::put();
  std::ostream::flush();
  long long v31 = v4[1];
  *(_OWORD *)std::string __p = *v4;
  long long v78 = v31;
  sub_216A57C84(a1, a2);
  if (v32)
  {
    do
    {
      long long v33 = v4[1];
      *(_OWORD *)&v79[0].__locale_ = *v4;
      *(_OWORD *)uint64_t v80 = v33;
      if (!sub_216A58A40((uint64_t)a1)) {
        break;
      }
      sub_216A57C84(a1, a2);
    }
    while (v34);
    long long v35 = *(_OWORD *)v80;
    *uint64_t v4 = *(_OWORD *)&v79[0].__locale_;
    v4[1] = v35;
    sub_2169C56DC((uint64_t)v79, (uint64_t)v4, v5);
    if ((v82 & 0x80u) == 0) {
      uint64_t v36 = &v80[1];
    }
    else {
      uint64_t v36 = (void **)v80[1];
    }
    if ((v82 & 0x80u) == 0) {
      uint64_t v37 = v82;
    }
    else {
      uint64_t v37 = v81;
    }
    uint64_t v38 = (void *)MEMORY[0x263F8C0F8];
    uint64_t v39 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v36, v37);
    LOBYTE(__p[0]) = 58;
    sub_216779180(v39, (uint64_t)__p, 1);
    size_t v40 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 58;
    sub_216779180(v40, (uint64_t)__p, 1);
    size_t v41 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 40;
    sub_216779180(v41, (uint64_t)__p, 1);
    uint64_t v42 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 41;
    uint64_t v43 = sub_216779180(v42, (uint64_t)__p, 1);
    size_t v44 = sub_216779180(v43, (uint64_t)" success ", 9);
    sub_216A57BD8(__p);
    if ((SBYTE7(v78) & 0x80u) == 0) {
      uint64_t v45 = __p;
    }
    else {
      uint64_t v45 = (void **)__p[0];
    }
    if ((SBYTE7(v78) & 0x80u) == 0) {
      uint64_t v46 = BYTE7(v78);
    }
    else {
      uint64_t v46 = (uint64_t)__p[1];
    }
    unsigned __int8 v47 = sub_216779180(v44, (uint64_t)v45, v46);
    sub_216779180(v47, (uint64_t)"; next ", 7);
    if (SBYTE7(v78) < 0) {
      operator delete(__p[0]);
    }
    if ((char)v82 < 0) {
      operator delete(v80[1]);
    }
    sub_216A3AB00((uint64_t)a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v38 + *(void *)(*v38 - 24)));
    std::locale v48 = std::locale::use_facet(v79, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v48->__vftable[2].~facet_0)(v48, 10);
    std::locale::~locale(v79);
    std::ostream::put();
    std::ostream::flush();
  }
  else
  {
    long long v49 = v78;
    *uint64_t v4 = *(_OWORD *)__p;
    v4[1] = v49;
    sub_2169C56DC((uint64_t)v79, (uint64_t)v4, v5);
    if ((v82 & 0x80u) == 0) {
      uint64_t v50 = &v80[1];
    }
    else {
      uint64_t v50 = (void **)v80[1];
    }
    if ((v82 & 0x80u) == 0) {
      uint64_t v51 = v82;
    }
    else {
      uint64_t v51 = v81;
    }
    std::locale v52 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v50, v51);
    LOBYTE(__p[0]) = 58;
    sub_216779180(v52, (uint64_t)__p, 1);
    uint64_t v53 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 58;
    sub_216779180(v53, (uint64_t)__p, 1);
    uint64_t v54 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 40;
    sub_216779180(v54, (uint64_t)__p, 1);
    uint64_t v55 = (void *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 41;
    uint64_t v56 = sub_216779180(v55, (uint64_t)__p, 1);
    uint64_t v57 = sub_216779180(v56, (uint64_t)" failure ", 9);
    sub_216A57BD8(__p);
    if ((SBYTE7(v78) & 0x80u) == 0) {
      size_t v58 = __p;
    }
    else {
      size_t v58 = (void **)__p[0];
    }
    if ((SBYTE7(v78) & 0x80u) == 0) {
      uint64_t v59 = BYTE7(v78);
    }
    else {
      uint64_t v59 = (uint64_t)__p[1];
    }
    uint64_t v60 = sub_216779180(v57, (uint64_t)v58, v59);
    std::ios_base::getloc((const std::ios_base *)((char *)v60 + *(void *)(*v60 - 24)));
    long long v61 = std::locale::use_facet(&v76, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v61->__vftable[2].~facet_0)(v61, 10);
    std::locale::~locale(&v76);
    std::ostream::put();
    std::ostream::flush();
    if (SBYTE7(v78) < 0) {
      operator delete(__p[0]);
    }
    if ((char)v82 < 0) {
      operator delete(v80[1]);
    }
    sub_216A55360((uint64_t)a1);
  }
  sub_2169C56DC((uint64_t)v79, (uint64_t)v4, v5);
  if ((v82 & 0x80u) == 0) {
    long long v62 = &v80[1];
  }
  else {
    long long v62 = (void **)v80[1];
  }
  if ((v82 & 0x80u) == 0) {
    uint64_t v63 = v82;
  }
  else {
    uint64_t v63 = v81;
  }
  long long v64 = (void *)MEMORY[0x263F8C0F8];
  uint64_t v65 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v62, v63);
  LOBYTE(__p[0]) = 58;
  sub_216779180(v65, (uint64_t)__p, 1);
  size_t v66 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_216779180(v66, (uint64_t)__p, 1);
  uint64_t v67 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_216779180(v67, (uint64_t)__p, 1);
  unsigned __int8 v68 = (void *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  unsigned __int8 v69 = sub_216779180(v68, (uint64_t)__p, 1);
  size_t v70 = sub_216779180(v69, (uint64_t)" success ", 9);
  sub_216A57B2C(__p);
  if ((SBYTE7(v78) & 0x80u) == 0) {
    uint64_t v71 = __p;
  }
  else {
    uint64_t v71 = (void **)__p[0];
  }
  if ((SBYTE7(v78) & 0x80u) == 0) {
    uint64_t v72 = BYTE7(v78);
  }
  else {
    uint64_t v72 = (uint64_t)__p[1];
  }
  std::locale v73 = sub_216779180(v70, (uint64_t)v71, v72);
  sub_216779180(v73, (uint64_t)"; next ", 7);
  if (SBYTE7(v78) < 0) {
    operator delete(__p[0]);
  }
  if ((char)v82 < 0) {
    operator delete(v80[1]);
  }
  sub_216A3AB00((uint64_t)a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v64 + *(void *)(*v64 - 24)));
  uint64_t v74 = std::locale::use_facet(v79, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v74->__vftable[2].~facet_0)(v74, 10);
  std::locale::~locale(v79);
  std::ostream::put();
  return std::ostream::flush();
}

void sub_216A57A78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::locale a10, long long a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, std::locale a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a25 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A57B2C(void *a1@<X8>)
{
  uint64_t v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_112ListElementsE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_112ListElementsE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A57BC4(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

void sub_216A57BD8(void *a1@<X8>)
{
  uint64_t v2 = __cxa_demangle((const char *)((unint64_t)"N3tao21PXR_INTERNAL_NS_pegtl4listIN32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_111ListElementENS0_5ascii3oneIJLc44EEEENS6_IJLc32EEEEEE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N3tao21PXR_INTERNAL_NS_pegtl4listIN32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_111ListElementENS0_5ascii3oneIJLc44EEEENS6_IJLc32EEEEEE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A57C70(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

double sub_216A57C84(long long *a1, char **a2)
{
  uint64_t v4 = (long long *)((char *)a1 + 8);
  long long v5 = *(long long *)((char *)a1 + 24);
  long long v59 = *(long long *)((char *)a1 + 8);
  long long v60 = v5;
  long long v61 = (char *)a1 + 8;
  long long v6 = a1 + 3;
  sub_2169C56DC((uint64_t)&v65, (uint64_t)a1 + 8, a1 + 3);
  if ((v68 & 0x80u) == 0) {
    uint64_t v7 = &v66;
  }
  else {
    uint64_t v7 = v66;
  }
  if ((v68 & 0x80u) == 0) {
    uint64_t v8 = v68;
  }
  else {
    uint64_t v8 = v67;
  }
  size_t v9 = (void *)MEMORY[0x263F8C0F8];
  uint64_t v10 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v7, v8);
  LOBYTE(__p) = 58;
  sub_216779180(v10, (uint64_t)&__p, 1);
  int v11 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 58;
  sub_216779180(v11, (uint64_t)&__p, 1);
  uint64_t v12 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 40;
  sub_216779180(v12, (uint64_t)&__p, 1);
  size_t v13 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 41;
  unsigned __int8 v14 = sub_216779180(v13, (uint64_t)&__p, 1);
  uint64_t v15 = sub_216779180(v14, (uint64_t)"  start  ", 9);
  sub_216A58448(&__p);
  if ((v64 & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = __p;
  }
  if ((v64 & 0x80u) == 0) {
    uint64_t v17 = v64;
  }
  else {
    uint64_t v17 = v63;
  }
  std::locale v18 = sub_216779180(v15, (uint64_t)p_p, v17);
  sub_216779180(v18, (uint64_t)"; current ", 10);
  if ((char)v64 < 0) {
    operator delete(__p);
  }
  if ((char)v68 < 0) {
    operator delete(v66);
  }
  sub_216A3AB00((uint64_t)a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v9 + *(void *)(*v9 - 24)));
  std::string v19 = std::locale::use_facet(&v65, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v19->__vftable[2].~facet_0)(v19, 10);
  std::locale::~locale(&v65);
  std::ostream::put();
  std::ostream::flush();
  if ((sub_216A3B778((uint64_t)a1, (uint64_t)a2) & 1) != 0
    || (sub_216A3C448((uint64_t)a1, (uint64_t)a2) & 1) != 0
    || (sub_216A3D100((uint64_t)a1, (uint64_t)a2) & 1) != 0
    || (sub_216A4B680((uint64_t)a1, (uint64_t)a2) & 1) != 0
    || (sub_216A3DDB8((uint64_t)a1, (uint64_t)a2) & 1) != 0
    || (sub_216A3E348((uint64_t)a1, (uint64_t)a2) & 1) != 0
    || sub_216A584F4((uint64_t)a1, a2))
  {
    sub_2169C56DC((uint64_t)&v65, (uint64_t)v4, v6);
    if ((v68 & 0x80u) == 0) {
      uint64_t v20 = &v66;
    }
    else {
      uint64_t v20 = v66;
    }
    if ((v68 & 0x80u) == 0) {
      uint64_t v21 = v68;
    }
    else {
      uint64_t v21 = v67;
    }
    uint64_t v22 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v20, v21);
    LOBYTE(__p) = 58;
    sub_216779180(v22, (uint64_t)&__p, 1);
    uint64_t v23 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 58;
    sub_216779180(v23, (uint64_t)&__p, 1);
    uint64_t v24 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 40;
    sub_216779180(v24, (uint64_t)&__p, 1);
    size_t v25 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 41;
    size_t v26 = sub_216779180(v25, (uint64_t)&__p, 1);
    uint64_t v27 = sub_216779180(v26, (uint64_t)"  apply  ", 9);
    sub_216A58448(&__p);
    if ((v64 & 0x80u) == 0) {
      uint64_t v28 = &__p;
    }
    else {
      uint64_t v28 = __p;
    }
    if ((v64 & 0x80u) == 0) {
      uint64_t v29 = v64;
    }
    else {
      uint64_t v29 = v63;
    }
    size_t v30 = sub_216779180(v27, (uint64_t)v28, v29);
    std::ios_base::getloc((const std::ios_base *)((char *)v30 + *(void *)(*v30 - 24)));
    long long v31 = std::locale::use_facet(&v69, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v31->__vftable[2].~facet_0)(v31, 10);
    std::locale::~locale(&v69);
    std::ostream::put();
    std::ostream::flush();
    if ((char)v64 < 0) {
      operator delete(__p);
    }
    if ((char)v68 < 0) {
      operator delete(v66);
    }
    sub_216A58580(&v59, (uint64_t)a1, a2);
    sub_2169C56DC((uint64_t)&v65, (uint64_t)v4, v6);
    if ((v68 & 0x80u) == 0) {
      int v32 = &v66;
    }
    else {
      int v32 = v66;
    }
    if ((v68 & 0x80u) == 0) {
      uint64_t v33 = v68;
    }
    else {
      uint64_t v33 = v67;
    }
    int v34 = (void *)MEMORY[0x263F8C0F8];
    long long v35 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v32, v33);
    LOBYTE(__p) = 58;
    sub_216779180(v35, (uint64_t)&__p, 1);
    uint64_t v36 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 58;
    sub_216779180(v36, (uint64_t)&__p, 1);
    uint64_t v37 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 40;
    sub_216779180(v37, (uint64_t)&__p, 1);
    uint64_t v38 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 41;
    uint64_t v39 = sub_216779180(v38, (uint64_t)&__p, 1);
    size_t v40 = sub_216779180(v39, (uint64_t)" success ", 9);
    sub_216A58448(&__p);
    if ((v64 & 0x80u) == 0) {
      size_t v41 = &__p;
    }
    else {
      size_t v41 = __p;
    }
    if ((v64 & 0x80u) == 0) {
      uint64_t v42 = v64;
    }
    else {
      uint64_t v42 = v63;
    }
    uint64_t v43 = sub_216779180(v40, (uint64_t)v41, v42);
    sub_216779180(v43, (uint64_t)"; next ", 7);
    if ((char)v64 < 0) {
      operator delete(__p);
    }
    if ((char)v68 < 0) {
      operator delete(v66);
    }
    sub_216A3AB00((uint64_t)a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v34 + *(void *)(*v34 - 24)));
    size_t v44 = std::locale::use_facet(&v65, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v44->__vftable[2].~facet_0)(v44, 10);
    std::locale::~locale(&v65);
    std::ostream::put();
    std::ostream::flush();
  }
  else
  {
    sub_2169C56DC((uint64_t)&v65, (uint64_t)v4, v6);
    if ((v68 & 0x80u) == 0) {
      uint64_t v46 = &v66;
    }
    else {
      uint64_t v46 = v66;
    }
    if ((v68 & 0x80u) == 0) {
      uint64_t v47 = v68;
    }
    else {
      uint64_t v47 = v67;
    }
    std::locale v48 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v46, v47);
    LOBYTE(__p) = 58;
    sub_216779180(v48, (uint64_t)&__p, 1);
    long long v49 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 58;
    sub_216779180(v49, (uint64_t)&__p, 1);
    uint64_t v50 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 40;
    sub_216779180(v50, (uint64_t)&__p, 1);
    uint64_t v51 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 41;
    std::locale v52 = sub_216779180(v51, (uint64_t)&__p, 1);
    uint64_t v53 = sub_216779180(v52, (uint64_t)" failure ", 9);
    sub_216A58448(&__p);
    if ((v64 & 0x80u) == 0) {
      uint64_t v54 = &__p;
    }
    else {
      uint64_t v54 = __p;
    }
    if ((v64 & 0x80u) == 0) {
      uint64_t v55 = v64;
    }
    else {
      uint64_t v55 = v63;
    }
    uint64_t v56 = sub_216779180(v53, (uint64_t)v54, v55);
    std::ios_base::getloc((const std::ios_base *)((char *)v56 + *(void *)(*v56 - 24)));
    uint64_t v57 = std::locale::use_facet(&v69, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v57->__vftable[2].~facet_0)(v57, 10);
    std::locale::~locale(&v69);
    std::ostream::put();
    std::ostream::flush();
    if ((char)v64 < 0) {
      operator delete(__p);
    }
    if ((char)v68 < 0) {
      operator delete(v66);
    }
    double result = *(double *)&v59;
    long long v58 = v60;
    *uint64_t v4 = v59;
    v4[1] = v58;
  }
  return result;
}

void sub_216A583B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, long long a9, long long a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, std::locale a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  *uint64_t v27 = a9;
  v27[1] = a10;
  _Unwind_Resume(exception_object);
}

void sub_216A58448(void *a1@<X8>)
{
  uint64_t v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_111ListElementE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_111ListElementE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A584E0(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_216A584F4(uint64_t a1, char **a2)
{
  if (sub_216A51544(a1, a2) && sub_216A51CB0(a1))
  {
    sub_216A5109C(a1);
    sub_216A53EC0(a1, a2);
    sub_216A54800(a1);
    sub_216A509E4(a1);
    return 1;
  }
  else
  {
    sub_216A512AC(a1);
    sub_216A50BF4(a1);
    return 0;
  }
}

void sub_216A58580(_OWORD *a1, uint64_t a2, void *a3)
{
  long long v4 = a1[1];
  v24[0] = *a1;
  v24[1] = v4;
  uint64_t v25 = a2;
  memset(&__p, 0, sizeof(__p));
  sub_216A3A7A0(a3, (uint64_t)&__p, &v26);
  uint64_t v5 = v26;
  if (!v26) {
    sub_216A4D734((uint64_t)v24, &__p);
  }
  uint64_t v6 = a3[1];
  if (*a3 == v6
    || (uint64_t v7 = *(const void **)(v6 - 8)) == 0
    || (uint64_t v8 = __dynamic_cast(v7, (const struct __class_type_info *)&unk_26C757A48, (const struct __class_type_info *)&unk_26C757C00, 0)) == 0)
  {
    sub_216779094(&v28, "Unknown error");
    sub_216A4D734((uint64_t)v24, &v28);
  }
  size_t v9 = v8;
  unint64_t v12 = v8[3];
  uint64_t v10 = (uint64_t)(v8 + 3);
  unint64_t v11 = v12;
  size_t v13 = *(void **)(v10 - 8);
  if ((unint64_t)v13 >= v12)
  {
    uint64_t v15 = (uint64_t *)(v10 - 16);
    uint64_t v16 = *(void *)(v10 - 16);
    uint64_t v17 = ((uint64_t)v13 - v16) >> 3;
    if ((unint64_t)(v17 + 1) >> 61) {
      sub_21677CB10();
    }
    uint64_t v18 = v11 - v16;
    uint64_t v19 = v18 >> 2;
    if (v18 >> 2 <= (unint64_t)(v17 + 1)) {
      uint64_t v19 = v17 + 1;
    }
    if ((unint64_t)v18 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v20 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v20 = v19;
    }
    uint64_t v30 = v10;
    if (v20)
    {
      uint64_t v21 = (char *)sub_21677CB28(v10, v20);
      uint64_t v5 = v26;
    }
    else
    {
      uint64_t v21 = 0;
    }
    uint64_t v22 = &v21[8 * v17];
    v28.__r_.__value_.__r.__words[0] = (std::string::size_type)v21;
    v28.__r_.__value_.__l.__size_ = (std::string::size_type)v22;
    uint64_t v29 = &v21[8 * v20];
    uint64_t v26 = 0;
    *(void *)uint64_t v22 = v5;
    v28.__r_.__value_.__r.__words[2] = (std::string::size_type)(v22 + 8);
    sub_216A587E4(v15, &v28);
    unsigned __int8 v14 = (void *)v9[2];
    sub_216A58994((void **)&v28.__r_.__value_.__l.__data_);
  }
  else
  {
    uint64_t v26 = 0;
    void *v13 = v5;
    unsigned __int8 v14 = v13 + 1;
    uint64_t v9[2] = v14;
  }
  uint64_t v9[2] = v14;
  uint64_t v23 = v26;
  uint64_t v26 = 0;
  if (v23) {
    (*(void (**)(uint64_t))(*(void *)v23 + 8))(v23);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_216A58760(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14) {
    (*(void (**)(uint64_t))(*(void *)a14 + 8))(a14);
  }
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_216A587E4(uint64_t *a1, void *a2)
{
  uint64_t result = sub_216A5885C((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_216A5885C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  if (a3 == a5)
  {
    uint64_t v11 = a6;
  }
  else
  {
    uint64_t v8 = (void *)(a7 - 8);
    size_t v9 = (void *)(a7 - 8);
    do
    {
      uint64_t v10 = *--a3;
      *a3 = 0;
      *v9-- = v10;
      *((void *)&v16 + 1) = v8;
      v7 -= 8;
      uint64_t v8 = v9;
    }
    while (a3 != a5);
    uint64_t v11 = v16;
  }
  char v14 = 1;
  sub_216A588F4((uint64_t)v13);
  return v11;
}

uint64_t sub_216A588F4(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_216A5892C((void *)a1);
  }
  return a1;
}

void *sub_216A5892C(void *result)
{
  uint64_t v1 = *(void ***)(result[2] + 8);
  uint64_t v2 = *(void ***)(result[1] + 8);
  while (v1 != v2)
  {
    uint64_t result = *v1;
    *uint64_t v1 = 0;
    if (result) {
      uint64_t result = (void *)(*(uint64_t (**)(void *))(*result + 8))(result);
    }
    ++v1;
  }
  return result;
}

void **sub_216A58994(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void *sub_216A589CC(void *result, uint64_t a2)
{
  uint64_t v2 = result[2];
  if (v2 != a2)
  {
    long long v4 = result;
    do
    {
      v4[2] = v2 - 8;
      uint64_t result = *(void **)(v2 - 8);
      *(void *)(v2 - 8) = 0;
      if (result) {
        uint64_t result = (void *)(*(uint64_t (**)(void *))(*result + 8))(result);
      }
      uint64_t v2 = v4[2];
    }
    while (v2 != a2);
  }
  return result;
}

uint64_t sub_216A58A40(uint64_t a1)
{
  while ((sub_216A537A8(a1) & 1) != 0)
    ;
  sub_2169C56DC((uint64_t)&v46, a1 + 8, (long long *)(a1 + 48));
  if ((v49 & 0x80u) == 0) {
    uint64_t v2 = &v47;
  }
  else {
    uint64_t v2 = v47;
  }
  if ((v49 & 0x80u) == 0) {
    uint64_t v3 = v49;
  }
  else {
    uint64_t v3 = v48;
  }
  long long v4 = (void *)MEMORY[0x263F8C0F8];
  uint64_t v5 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v2, v3);
  LOBYTE(__p) = 58;
  sub_216779180(v5, (uint64_t)&__p, 1);
  uint64_t v6 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 58;
  sub_216779180(v6, (uint64_t)&__p, 1);
  uint64_t v7 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 40;
  sub_216779180(v7, (uint64_t)&__p, 1);
  uint64_t v8 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 41;
  size_t v9 = sub_216779180(v8, (uint64_t)&__p, 1);
  uint64_t v10 = sub_216779180(v9, (uint64_t)"  start  ", 9);
  sub_216A59010(&__p);
  if ((v45 & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = __p;
  }
  if ((v45 & 0x80u) == 0) {
    uint64_t v12 = v45;
  }
  else {
    uint64_t v12 = v44;
  }
  size_t v13 = sub_216779180(v10, (uint64_t)p_p, v12);
  sub_216779180(v13, (uint64_t)"; current ", 10);
  if ((char)v45 < 0) {
    operator delete(__p);
  }
  if ((char)v49 < 0) {
    operator delete(v47);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v4 + *(void *)(*v4 - 24)));
  char v14 = std::locale::use_facet(&v46, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v14->__vftable[2].~facet_0)(v14, 10);
  std::locale::~locale(&v46);
  std::ostream::put();
  std::ostream::flush();
  long long v15 = *(unsigned char **)(a1 + 8);
  if (v15 == *(unsigned char **)(a1 + 40) || *v15 != 44)
  {
    sub_2169C56DC((uint64_t)&v46, a1 + 8, (long long *)(a1 + 48));
    if ((v49 & 0x80u) == 0) {
      long long v31 = &v47;
    }
    else {
      long long v31 = v47;
    }
    if ((v49 & 0x80u) == 0) {
      uint64_t v32 = v49;
    }
    else {
      uint64_t v32 = v48;
    }
    uint64_t v33 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v31, v32);
    LOBYTE(__p) = 58;
    sub_216779180(v33, (uint64_t)&__p, 1);
    int v34 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 58;
    sub_216779180(v34, (uint64_t)&__p, 1);
    long long v35 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 40;
    sub_216779180(v35, (uint64_t)&__p, 1);
    uint64_t v36 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 41;
    uint64_t v37 = sub_216779180(v36, (uint64_t)&__p, 1);
    uint64_t v38 = sub_216779180(v37, (uint64_t)" failure ", 9);
    sub_216A59010(&__p);
    if ((v45 & 0x80u) == 0) {
      uint64_t v39 = &__p;
    }
    else {
      uint64_t v39 = __p;
    }
    if ((v45 & 0x80u) == 0) {
      uint64_t v40 = v45;
    }
    else {
      uint64_t v40 = v44;
    }
    size_t v41 = sub_216779180(v38, (uint64_t)v39, v40);
    std::ios_base::getloc((const std::ios_base *)((char *)v41 + *(void *)(*v41 - 24)));
    uint64_t v42 = std::locale::use_facet(&v50, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v42->__vftable[2].~facet_0)(v42, 10);
    std::locale::~locale(&v50);
    std::ostream::put();
    std::ostream::flush();
    if ((char)v45 < 0) {
      operator delete(__p);
    }
    if ((char)v49 < 0) {
      operator delete(v47);
    }
    return 0;
  }
  else
  {
    uint64_t v16 = *(void *)(a1 + 16) + 1;
    *(void *)(a1 + 8) = v15 + 1;
    *(void *)(a1 + 16) = v16;
    ++*(void *)(a1 + 32);
    sub_2169C56DC((uint64_t)&v46, a1 + 8, (long long *)(a1 + 48));
    if ((v49 & 0x80u) == 0) {
      uint64_t v17 = &v47;
    }
    else {
      uint64_t v17 = v47;
    }
    if ((v49 & 0x80u) == 0) {
      uint64_t v18 = v49;
    }
    else {
      uint64_t v18 = v48;
    }
    uint64_t v19 = (void *)MEMORY[0x263F8C0F8];
    unint64_t v20 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v17, v18);
    LOBYTE(__p) = 58;
    sub_216779180(v20, (uint64_t)&__p, 1);
    uint64_t v21 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 58;
    sub_216779180(v21, (uint64_t)&__p, 1);
    uint64_t v22 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 40;
    sub_216779180(v22, (uint64_t)&__p, 1);
    uint64_t v23 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 41;
    uint64_t v24 = sub_216779180(v23, (uint64_t)&__p, 1);
    uint64_t v25 = sub_216779180(v24, (uint64_t)" success ", 9);
    sub_216A59010(&__p);
    if ((v45 & 0x80u) == 0) {
      uint64_t v26 = &__p;
    }
    else {
      uint64_t v26 = __p;
    }
    if ((v45 & 0x80u) == 0) {
      uint64_t v27 = v45;
    }
    else {
      uint64_t v27 = v44;
    }
    std::string v28 = sub_216779180(v25, (uint64_t)v26, v27);
    sub_216779180(v28, (uint64_t)"; next ", 7);
    if ((char)v45 < 0) {
      operator delete(__p);
    }
    if ((char)v49 < 0) {
      operator delete(v47);
    }
    sub_216A3AB00(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v19 + *(void *)(*v19 - 24)));
    uint64_t v29 = std::locale::use_facet(&v46, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v29->__vftable[2].~facet_0)(v29, 10);
    std::locale::~locale(&v46);
    std::ostream::put();
    std::ostream::flush();
    while ((sub_216A537A8(a1) & 1) != 0)
      ;
    return 1;
  }
}

void sub_216A58F9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, std::locale a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A59010(void *a1@<X8>)
{
  uint64_t v2 = __cxa_demangle((const char *)(0x800000021746BC0FLL & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)(0x800000021746BC0FLL & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A590B0(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_216A590C4(uint64_t a1)
{
  uint64_t v2 = a1 + 8;
  uint64_t v3 = (long long *)(a1 + 48);
  sub_2169C56DC((uint64_t)&v48, a1 + 8, (long long *)(a1 + 48));
  if ((v51 & 0x80u) == 0) {
    long long v4 = &v49;
  }
  else {
    long long v4 = v49;
  }
  if ((v51 & 0x80u) == 0) {
    uint64_t v5 = v51;
  }
  else {
    uint64_t v5 = v50;
  }
  uint64_t v6 = (void *)MEMORY[0x263F8C0F8];
  uint64_t v7 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v4, v5);
  LOBYTE(__p) = 58;
  sub_216779180(v7, (uint64_t)&__p, 1);
  uint64_t v8 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 58;
  sub_216779180(v8, (uint64_t)&__p, 1);
  size_t v9 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 40;
  sub_216779180(v9, (uint64_t)&__p, 1);
  uint64_t v10 = (void *)std::ostream::operator<<();
  LOBYTE(__p) = 41;
  uint64_t v11 = sub_216779180(v10, (uint64_t)&__p, 1);
  uint64_t v12 = sub_216779180(v11, (uint64_t)"  start  ", 9);
  sub_216A59674(&__p);
  if ((v47 & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = __p;
  }
  if ((v47 & 0x80u) == 0) {
    uint64_t v14 = v47;
  }
  else {
    uint64_t v14 = v46;
  }
  long long v15 = sub_216779180(v12, (uint64_t)p_p, v14);
  sub_216779180(v15, (uint64_t)"; current ", 10);
  if ((char)v47 < 0) {
    operator delete(__p);
  }
  if ((char)v51 < 0) {
    operator delete(v49);
  }
  sub_216A3AB00(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v6 + *(void *)(*v6 - 24)));
  uint64_t v16 = std::locale::use_facet(&v48, MEMORY[0x263F8C108]);
  ((void (*)(const std::locale::facet *, uint64_t))v16->__vftable[2].~facet_0)(v16, 10);
  std::locale::~locale(&v48);
  std::ostream::put();
  std::ostream::flush();
  uint64_t v17 = *(unsigned char **)(a1 + 8);
  if (v17 == *(unsigned char **)(a1 + 40) || *v17 != 93)
  {
    sub_2169C56DC((uint64_t)&v48, v2, v3);
    if ((v51 & 0x80u) == 0) {
      uint64_t v33 = &v49;
    }
    else {
      uint64_t v33 = v49;
    }
    if ((v51 & 0x80u) == 0) {
      uint64_t v34 = v51;
    }
    else {
      uint64_t v34 = v50;
    }
    long long v35 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v33, v34);
    LOBYTE(__p) = 58;
    sub_216779180(v35, (uint64_t)&__p, 1);
    uint64_t v36 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 58;
    sub_216779180(v36, (uint64_t)&__p, 1);
    uint64_t v37 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 40;
    sub_216779180(v37, (uint64_t)&__p, 1);
    uint64_t v38 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 41;
    uint64_t v39 = sub_216779180(v38, (uint64_t)&__p, 1);
    uint64_t v40 = sub_216779180(v39, (uint64_t)" failure ", 9);
    sub_216A59674(&__p);
    if ((v47 & 0x80u) == 0) {
      size_t v41 = &__p;
    }
    else {
      size_t v41 = __p;
    }
    if ((v47 & 0x80u) == 0) {
      uint64_t v42 = v47;
    }
    else {
      uint64_t v42 = v46;
    }
    uint64_t v43 = sub_216779180(v40, (uint64_t)v41, v42);
    std::ios_base::getloc((const std::ios_base *)((char *)v43 + *(void *)(*v43 - 24)));
    uint64_t v44 = std::locale::use_facet(&v52, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v44->__vftable[2].~facet_0)(v44, 10);
    std::locale::~locale(&v52);
    std::ostream::put();
    std::ostream::flush();
    if ((char)v47 < 0) {
      operator delete(__p);
    }
    if ((char)v51 < 0) {
      operator delete(v49);
    }
    return 0;
  }
  else
  {
    uint64_t v18 = *(void *)(a1 + 16) + 1;
    *(void *)(a1 + 8) = v17 + 1;
    *(void *)(a1 + 16) = v18;
    ++*(void *)(a1 + 32);
    sub_2169C56DC((uint64_t)&v48, v2, v3);
    if ((v51 & 0x80u) == 0) {
      uint64_t v19 = &v49;
    }
    else {
      uint64_t v19 = v49;
    }
    if ((v51 & 0x80u) == 0) {
      uint64_t v20 = v51;
    }
    else {
      uint64_t v20 = v50;
    }
    uint64_t v21 = (void *)MEMORY[0x263F8C0F8];
    uint64_t v22 = sub_216779180(MEMORY[0x263F8C0F8], (uint64_t)v19, v20);
    LOBYTE(__p) = 58;
    sub_216779180(v22, (uint64_t)&__p, 1);
    uint64_t v23 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 58;
    sub_216779180(v23, (uint64_t)&__p, 1);
    uint64_t v24 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 40;
    sub_216779180(v24, (uint64_t)&__p, 1);
    uint64_t v25 = (void *)std::ostream::operator<<();
    LOBYTE(__p) = 41;
    uint64_t v26 = sub_216779180(v25, (uint64_t)&__p, 1);
    uint64_t v27 = sub_216779180(v26, (uint64_t)" success ", 9);
    sub_216A59674(&__p);
    if ((v47 & 0x80u) == 0) {
      std::string v28 = &__p;
    }
    else {
      std::string v28 = __p;
    }
    if ((v47 & 0x80u) == 0) {
      uint64_t v29 = v47;
    }
    else {
      uint64_t v29 = v46;
    }
    uint64_t v30 = sub_216779180(v27, (uint64_t)v28, v29);
    sub_216779180(v30, (uint64_t)"; next ", 7);
    if ((char)v47 < 0) {
      operator delete(__p);
    }
    if ((char)v51 < 0) {
      operator delete(v49);
    }
    sub_216A3AB00(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v21 + *(void *)(*v21 - 24)));
    long long v31 = std::locale::use_facet(&v48, MEMORY[0x263F8C108]);
    ((void (*)(const std::locale::facet *, uint64_t))v31->__vftable[2].~facet_0)(v31, 10);
    std::locale::~locale(&v48);
    std::ostream::put();
    std::ostream::flush();
    return 1;
  }
}

void sub_216A59600(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, std::locale a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A59674(void *a1@<X8>)
{
  uint64_t v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_17ListEndE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_17ListEndE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A5970C(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

void sub_216A59720(uint64_t a1)
{
  sub_216779094(&v2, "Missing ending ']'");
  sub_216A3AD78(a1, &v2);
}

void sub_216A59758(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A59774(_OWORD *a1, uint64_t a2, void *a3)
{
  long long v4 = a1[1];
  v24[0] = *a1;
  v24[1] = v4;
  uint64_t v25 = a2;
  memset(&__p, 0, sizeof(__p));
  sub_216A3A7A0(a3, (uint64_t)&__p, &v26);
  uint64_t v5 = v26;
  if (!v26) {
    sub_216A4D734((uint64_t)v24, &__p);
  }
  uint64_t v6 = a3[1];
  if (*a3 == v6
    || (uint64_t v7 = *(const void **)(v6 - 8)) == 0
    || (uint64_t v8 = __dynamic_cast(v7, (const struct __class_type_info *)&unk_26C757A48, (const struct __class_type_info *)&unk_26C757BC0, 0)) == 0)
  {
    sub_216779094(&v28, "Unknown error");
    sub_216A4D734((uint64_t)v24, &v28);
  }
  size_t v9 = v8;
  unint64_t v12 = v8[6];
  uint64_t v10 = (uint64_t)(v8 + 6);
  unint64_t v11 = v12;
  size_t v13 = *(void **)(v10 - 8);
  if ((unint64_t)v13 >= v12)
  {
    long long v15 = (uint64_t *)(v10 - 16);
    uint64_t v16 = *(void *)(v10 - 16);
    uint64_t v17 = ((uint64_t)v13 - v16) >> 3;
    if ((unint64_t)(v17 + 1) >> 61) {
      sub_21677CB10();
    }
    uint64_t v18 = v11 - v16;
    uint64_t v19 = v18 >> 2;
    if (v18 >> 2 <= (unint64_t)(v17 + 1)) {
      uint64_t v19 = v17 + 1;
    }
    if ((unint64_t)v18 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v20 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v20 = v19;
    }
    uint64_t v30 = v10;
    if (v20)
    {
      uint64_t v21 = (char *)sub_21677CB28(v10, v20);
      uint64_t v5 = v26;
    }
    else
    {
      uint64_t v21 = 0;
    }
    uint64_t v22 = &v21[8 * v17];
    v28.__r_.__value_.__r.__words[0] = (std::string::size_type)v21;
    v28.__r_.__value_.__l.__size_ = (std::string::size_type)v22;
    uint64_t v29 = &v21[8 * v20];
    uint64_t v26 = 0;
    *(void *)uint64_t v22 = v5;
    v28.__r_.__value_.__r.__words[2] = (std::string::size_type)(v22 + 8);
    sub_216A587E4(v15, &v28);
    uint64_t v14 = (void *)v9[5];
    sub_216A58994((void **)&v28.__r_.__value_.__l.__data_);
  }
  else
  {
    uint64_t v26 = 0;
    void *v13 = v5;
    uint64_t v14 = v13 + 1;
    v9[5] = v14;
  }
  v9[5] = v14;
  uint64_t v23 = v26;
  uint64_t v26 = 0;
  if (v23) {
    (*(void (**)(uint64_t))(*(void *)v23 + 8))(v23);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_216A59954(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14) {
    (*(void (**)(uint64_t))(*(void *)a14 + 8))(a14);
  }
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_216A599D8(void *a1@<X8>)
{
  std::string v2 = __cxa_demangle((const char *)(0x800000021746BC7BLL & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)(0x800000021746BC7BLL & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A59A78(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

void sub_216A59A8C(void *a1@<X8>)
{
  std::string v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_119FunctionArgumentEndE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_119FunctionArgumentEndE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A59B24(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

void sub_216A59B38(void *a1@<X8>)
{
  std::string v2 = __cxa_demangle((const char *)(0x800000021746BD02 & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)(0x800000021746BD02 & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A59BD8(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

void sub_216A59BEC(uint64_t a1)
{
  sub_216779094(&v2, "Missing ending ')'");
  sub_216A3AD78(a1, &v2);
}

void sub_216A59C24(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A59C40(uint64_t a1)
{
  sub_216779094(&v2, "Unexpected expression");
  sub_216A3AD78(a1, &v2);
}

void sub_216A59C78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216A59C94(void *a1@<X8>)
{
  std::string v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_113ExpressionEndE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_216779094(a1, v2);
    free(v3);
  }
  else
  {
    sub_216779094(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_113ExpressionEndE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_216A59D2C(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

void sub_216A59D40(uint64_t a1)
{
  sub_216A3AD78(a1, &v2);
}

void sub_216A59D78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_216A59D94(uint64_t a1, char **a2)
{
  if ((sub_216A59E38(a1, (uint64_t)a2) & 1) == 0
    && (sub_216A59EF8(a1, (uint64_t)a2) & 1) == 0
    && (sub_216A5A084(a1, (uint64_t)a2) & 1) == 0)
  {
    double result = sub_216A5A210(a1, (uint64_t)a2);
    if ((v5 & 1) == 0 && (sub_216A5A31C(a1, (uint64_t)a2) & 1) == 0 && (sub_216A5A478(a1, (uint64_t)a2) & 1) == 0)
    {
      *(void *)&double result = sub_216A5A854(a1, a2).n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_216A59E38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_216A3FC5C((void *)a1);
  if (v4)
  {
    long long v5 = *(_OWORD *)(a1 + 24);
    long long v8 = *(_OWORD *)(a1 + 8);
    long long v9 = v5;
    uint64_t v10 = a1 + 8;
    if (!sub_216A4030C((void *)a1))
    {
      long long v7 = v9;
      *(_OWORD *)(a1 + 8) = v8;
      *(_OWORD *)(a1 + 24) = v7;
      sub_216A40764(a1);
    }
    while ((sub_216A40368((void *)a1) & 1) != 0)
      ;
    sub_216A403C8((char **)&v8, a1, a2);
    sub_216A5A544((void *)a1);
  }
  return v4;
}

void sub_216A59EE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10, long long a11, long long a12)
{
  _OWORD *v12 = a11;
  v12[1] = a12;
  _OWORD *v12 = a9;
  v12[1] = a10;
  _Unwind_Resume(a1);
}

uint64_t sub_216A59EF8(uint64_t a1, uint64_t a2)
{
  std::string v2 = (_OWORD *)(a1 + 8);
  long long v3 = *(_OWORD *)(a1 + 24);
  long long v16 = *(_OWORD *)(a1 + 8);
  long long v17 = v3;
  if (*(void *)(a1 + 40) == (void)v16 || *(unsigned char *)v16 != 34) {
    return 0;
  }
  uint64_t v6 = *(void *)(a1 + 16) + 1;
  *(void *)(a1 + 8) = v16 + 1;
  *(void *)(a1 + 16) = v6;
  ++*(void *)(a1 + 32);
  sub_216A40A10(a2);
  while (1)
  {
    while ((sub_216A5A594(a1, a2) & 1) != 0)
      ;
    long long v7 = v2[1];
    long long v16 = *v2;
    long long v17 = v7;
    uint64_t v18 = v2;
    sub_216A5A654(a1);
    if ((v8 & 1) == 0 && (!sub_216A5A6D8(a1) || !sub_216A46CFC((void *)a1))) {
      break;
    }
    do
    {
      do
        sub_216A5A654(a1);
      while ((v9 & 1) != 0);
      long long v10 = v2[1];
      long long v19 = *v2;
      long long v20 = v10;
    }
    while (sub_216A5A6D8(a1) && sub_216A46CFC((void *)a1));
    long long v11 = v20;
    *std::string v2 = v19;
    v2[1] = v11;
    sub_216A46D54((char **)&v16, a1, a2);
  }
  long long v13 = v17;
  *std::string v2 = v16;
  v2[1] = v13;
  uint64_t v14 = *(unsigned char **)(a1 + 8);
  if (*(unsigned char **)(a1 + 40) == v14 || *v14 != 34) {
    sub_216A46F70(a1);
  }
  uint64_t v15 = *(void *)(a1 + 16) + 1;
  *(void *)(a1 + 8) = v14 + 1;
  *(void *)(a1 + 16) = v15;
  ++*(void *)(a1 + 32);
  return 1;
}

void sub_216A5A060(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, long long a13, long long a14)
{
  _OWORD *v14 = a13;
  v14[1] = a14;
  _Unwind_Resume(a1);
}

uint64_t sub_216A5A084(uint64_t a1, uint64_t a2)
{
  std::string v2 = (_OWORD *)(a1 + 8);
  long long v3 = *(_OWORD *)(a1 + 24);
  long long v16 = *(_OWORD *)(a1 + 8);
  long long v17 = v3;
  if (*(void *)(a1 + 40) == (void)v16 || *(unsigned char *)v16 != 39) {
    return 0;
  }
  uint64_t v6 = *(void *)(a1 + 16) + 1;
  *(void *)(a1 + 8) = v16 + 1;
  *(void *)(a1 + 16) = v6;
  ++*(void *)(a1 + 32);
  sub_216A40A10(a2);
  while (1)
  {
    while ((sub_216A5A594(a1, a2) & 1) != 0)
      ;
    long long v7 = v2[1];
    long long v16 = *v2;
    long long v17 = v7;
    uint64_t v18 = v2;
    sub_216A5A754(a1);
    if ((v8 & 1) == 0 && (!sub_216A5A7D8(a1) || !sub_216A46CFC((void *)a1))) {
      break;
    }
    do
    {
      do
        sub_216A5A754(a1);
      while ((v9 & 1) != 0);
      long long v10 = v2[1];
      long long v19 = *v2;
      long long v20 = v10;
    }
    while (sub_216A5A7D8(a1) && sub_216A46CFC((void *)a1));
    long long v11 = v20;
    *std::string v2 = v19;
    v2[1] = v11;
    sub_216A4B410((char **)&v16, a1, a2);
  }
  long long v13 = v17;
  *std::string v2 = v16;
  v2[1] = v13;
  uint64_t v14 = *(unsigned char **)(a1 + 8);
  if (*(unsigned char **)(a1 + 40) == v14 || *v14 != 39) {
    sub_216A4B62C(a1);
  }
  uint64_t v15 = *(void *)(a1 + 16) + 1;
  *(void *)(a1 + 8) = v14 + 1;
  *(void *)(a1 + 16) = v15;
  ++*(void *)(a1 + 32);
  return 1;
}

void sub_216A5A1EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, long long a13, long long a14)
{
  _OWORD *v14 = a13;
  v14[1] = a14;
  _Unwind_Resume(a1);
}

double sub_216A5A210(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a1 + 24);
  long long v13 = *(_OWORD *)(a1 + 8);
  std::string v2 = (unsigned __int8 *)v13;
  long long v14 = v3;
  uint64_t v15 = a1 + 8;
  uint64_t v4 = *(unsigned __int8 **)(a1 + 40);
  if ((unsigned __int8 *)v13 != v4 && *(unsigned char *)v13 == 45)
  {
    std::string v2 = (unsigned __int8 *)(v13 + 1);
    uint64_t v5 = *(void *)(a1 + 16) + 1;
    *(void *)(a1 + 8) = v13 + 1;
    *(void *)(a1 + 16) = v5;
    ++*(void *)(a1 + 32);
  }
  if (v2 == v4 || *v2 - 48 > 9)
  {
    double result = *(double *)&v13;
    long long v12 = v14;
    *(_OWORD *)(a1 + 8) = v13;
    *(_OWORD *)(a1 + 24) = v12;
  }
  else
  {
    uint64_t v6 = v2 + 1;
    uint64_t v7 = *(void *)(a1 + 16);
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = v7 + 1;
    uint64_t v8 = *(void *)(a1 + 32);
    *(void *)(a1 + 32) = v8 + 1;
    if (v6 != v4)
    {
      uint64_t v9 = v8 + 2;
      uint64_t v10 = v7 + 2;
      do
      {
        if (*v6 - 48 > 9) {
          break;
        }
        *(void *)(a1 + 8) = ++v6;
        *(void *)(a1 + 16) = v10;
        *(void *)(a1 + 32) = v9++;
        ++v10;
      }
      while (v6 != v4);
    }
    sub_216A4D544(&v13, a1, a2);
  }
  return result;
}

void sub_216A5A310(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10)
{
  _OWORD *v10 = a9;
  v10[1] = a10;
  _Unwind_Resume(a1);
}

uint64_t sub_216A5A31C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (long long *)(a1 + 8);
  long long v11 = *(_OWORD *)(a1 + 8);
  long long v13 = *(_OWORD *)(a1 + 24);
  if (sub_216A4FD2C((void *)a1))
  {
    long long v16 = *v4;
    long long v20 = v4[1];
    char v5 = sub_216A40368((void *)a1);
    *uint64_t v4 = v16;
    v4[1] = v20;
    if ((v5 & 1) == 0) {
      goto LABEL_10;
    }
  }
  *uint64_t v4 = v11;
  v4[1] = v13;
  if (sub_216A4FE40((void *)a1)
    && (long long v17 = *v4, v21 = v4[1], v6 = sub_216A40368((void *)a1), *v4 = v17, v4[1] = v21, (v6 & 1) == 0))
  {
LABEL_10:
    uint64_t v10 = sub_216A4FEA0(a2);
    uint64_t result = 1;
    v10[8] = 1;
  }
  else
  {
    *uint64_t v4 = v11;
    v4[1] = v13;
    long long v12 = *v4;
    long long v14 = v4[1];
    long long v15 = *v4;
    if (sub_216A50160((void *)a1))
    {
      long long v18 = *v4;
      long long v22 = v4[1];
      char v7 = sub_216A40368((void *)a1);
      *uint64_t v4 = v18;
      v4[1] = v22;
      if ((v7 & 1) == 0) {
        goto LABEL_11;
      }
    }
    *uint64_t v4 = v15;
    v4[1] = v14;
    if (sub_216A50280((void *)a1)
      && (v19 = *v4, v23 = v4[1], char v8 = sub_216A40368((void *)a1), *v4 = v19, v4[1] = v23, (v8 & 1) == 0))
    {
LABEL_11:
      *((unsigned char *)sub_216A4FEA0(a2) + 8) = 0;
      return 1;
    }
    else
    {
      uint64_t result = 0;
      *uint64_t v4 = v12;
      v4[1] = v14;
    }
  }
  return result;
}

void sub_216A5A468(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10)
{
  _OWORD *v10 = a9;
  v10[1] = a10;
  _Unwind_Resume(a1);
}

uint64_t sub_216A5A478(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (long long *)(a1 + 8);
  long long v8 = *(_OWORD *)(a1 + 8);
  long long v9 = *(_OWORD *)(a1 + 24);
  if (sub_216A5044C((void *)a1))
  {
    long long v10 = *v4;
    long long v12 = v4[1];
    char v5 = sub_216A40368((void *)a1);
    *uint64_t v4 = v10;
    v4[1] = v12;
    if ((v5 & 1) == 0) {
      goto LABEL_6;
    }
  }
  *uint64_t v4 = v8;
  v4[1] = v9;
  if (sub_216A50560((void *)a1)
    && (v11 = *v4, v13 = v4[1], v6 = sub_216A40368((void *)a1), *uint64_t v4 = v11, v4[1] = v13, (v6 & 1) == 0))
  {
LABEL_6:
    sub_216A505C0(a2);
    return 1;
  }
  else
  {
    uint64_t result = 0;
    *uint64_t v4 = v8;
    v4[1] = v9;
  }
  return result;
}

void sub_216A5A538(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10)
{
  _OWORD *v10 = a9;
  v10[1] = a10;
  _Unwind_Resume(a1);
}

void *sub_216A5A544(void *result)
{
  uint64_t v1 = (unsigned char *)result[1];
  if ((unsigned char *)result[5] == v1 || *v1 != 125) {
    sub_216A40864((uint64_t)result);
  }
  uint64_t v2 = result[2] + 1;
  result[1] = v1 + 1;
  result[2] = v2;
  ++result[4];
  return result;
}

uint64_t sub_216A5A594(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_216A3FC5C((void *)a1);
  if (v4)
  {
    long long v5 = *(_OWORD *)(a1 + 24);
    long long v8 = *(_OWORD *)(a1 + 8);
    long long v9 = v5;
    uint64_t v10 = a1 + 8;
    if (!sub_216A4030C((void *)a1))
    {
      long long v7 = v9;
      *(_OWORD *)(a1 + 8) = v8;
      *(_OWORD *)(a1 + 24) = v7;
      sub_216A436D4(a1);
    }
    while ((sub_216A40368((void *)a1) & 1) != 0)
      ;
    sub_216A43400((char **)&v8, a1, a2);
    sub_216A5A544((void *)a1);
  }
  return v4;
}

void sub_216A5A63C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10, long long a11, long long a12)
{
  _OWORD *v12 = a11;
  v12[1] = a12;
  _OWORD *v12 = a9;
  v12[1] = a10;
  _Unwind_Resume(a1);
}

__n128 sub_216A5A654(uint64_t a1)
{
  uint64_t v1 = (__n128 *)(a1 + 8);
  __n128 v4 = *(__n128 *)(a1 + 8);
  __n128 v5 = *(__n128 *)(a1 + 24);
  if (v4.n128_u64[0] == *(void *)(a1 + 40)
    || *(unsigned char *)v4.n128_u64[0] != 92
    || (uint64_t v2 = *(void *)(a1 + 16) + 1,
        *(void *)(a1 + 8) = v4.n128_u64[0] + 1,
        *(void *)(a1 + 16) = v2,
        ++*(void *)(a1 + 32),
        !sub_216A44F44((void *)a1)))
  {
    __n128 result = v4;
    *uint64_t v1 = v4;
    v1[1] = v5;
  }
  return result;
}

BOOL sub_216A5A6D8(uint64_t a1)
{
  uint64_t v2 = (_OWORD *)(a1 + 8);
  long long v5 = *(_OWORD *)(a1 + 8);
  long long v6 = *(_OWORD *)(a1 + 24);
  if (sub_216A3FC5C((void *)a1))
  {
    BOOL result = 0;
LABEL_5:
    *uint64_t v2 = v5;
    v2[1] = v6;
    return result;
  }
  __n128 v4 = *(unsigned __int8 **)(a1 + 8);
  if (v4 != *(unsigned __int8 **)(a1 + 40))
  {
    BOOL result = *v4 != 34;
    goto LABEL_5;
  }
  *uint64_t v2 = v5;
  v2[1] = v6;
  return 1;
}

__n128 sub_216A5A754(uint64_t a1)
{
  uint64_t v1 = (__n128 *)(a1 + 8);
  __n128 v4 = *(__n128 *)(a1 + 8);
  __n128 v5 = *(__n128 *)(a1 + 24);
  if (v4.n128_u64[0] == *(void *)(a1 + 40)
    || *(unsigned char *)v4.n128_u64[0] != 92
    || (uint64_t v2 = *(void *)(a1 + 16) + 1,
        *(void *)(a1 + 8) = v4.n128_u64[0] + 1,
        *(void *)(a1 + 16) = v2,
        ++*(void *)(a1 + 32),
        !sub_216A49C8C((void *)a1)))
  {
    __n128 result = v4;
    *uint64_t v1 = v4;
    v1[1] = v5;
  }
  return result;
}

BOOL sub_216A5A7D8(uint64_t a1)
{
  uint64_t v2 = (_OWORD *)(a1 + 8);
  long long v5 = *(_OWORD *)(a1 + 8);
  long long v6 = *(_OWORD *)(a1 + 24);
  if (sub_216A3FC5C((void *)a1))
  {
    BOOL result = 0;
LABEL_5:
    *uint64_t v2 = v5;
    v2[1] = v6;
    return result;
  }
  __n128 v4 = *(unsigned __int8 **)(a1 + 8);
  if (v4 != *(unsigned __int8 **)(a1 + 40))
  {
    BOOL result = *v4 != 39;
    goto LABEL_5;
  }
  *uint64_t v2 = v5;
  v2[1] = v6;
  return 1;
}

__n128 sub_216A5A854(uint64_t a1, char **a2)
{
  __n128 v4 = (__n128 *)(a1 + 8);
  __n128 v6 = *(__n128 *)(a1 + 8);
  __n128 v7 = *(__n128 *)(a1 + 24);
  if sub_216A5A8EC(a1, a2) && (sub_216A5A978((void *)a1))
  {
    sub_216A5AB58(a1, a2);
    sub_216A5AA68((void *)a1);
  }
  else
  {
    __n128 result = v6;
    *__n128 v4 = v6;
    v4[1] = v7;
  }
  return result;
}

void sub_216A5A8DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10)
{
  _OWORD *v10 = a9;
  v10[1] = a10;
  _Unwind_Resume(a1);
}

uint64_t sub_216A5A8EC(uint64_t a1, char **a2)
{
  __n128 v4 = (_OWORD *)(a1 + 8);
  long long v5 = *(_OWORD *)(a1 + 24);
  long long v9 = *(_OWORD *)(a1 + 8);
  long long v10 = v5;
  uint64_t v11 = a1 + 8;
  uint64_t v6 = sub_216A4030C((void *)a1);
  if (v6)
  {
    while ((sub_216A40368((void *)a1) & 1) != 0)
      ;
    sub_216A5281C((char **)&v9, a1, a2);
  }
  else
  {
    long long v7 = v10;
    *__n128 v4 = v9;
    v4[1] = v7;
  }
  return v6;
}

void sub_216A5A96C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10)
{
  _OWORD *v10 = a9;
  v10[1] = a10;
  _Unwind_Resume(a1);
}

uint64_t sub_216A5A978(void *a1)
{
  uint64_t v1 = a1[5];
  uint64_t v2 = a1[1];
  if (v2 == v1) {
    return 0;
  }
  uint64_t v3 = 0;
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[4];
  while (1)
  {
    int v6 = *(unsigned __int8 *)(v2 + v3);
    if (v6 != 32) {
      break;
    }
    a1[1] = v2 + v3 + 1;
    a1[2] = v4 + v3 + 1;
    a1[4] = v5 + v3++ + 1;
    if (v2 + v3 == v1) {
      return 0;
    }
  }
  uint64_t v7 = 0;
  if (v2 + v3 != v1 && v6 == 40)
  {
    uint64_t v9 = v2 + v3 + 1;
    uint64_t v10 = v4 + v3;
    a1[1] = v9;
    a1[2] = v10 + 1;
    uint64_t v11 = v5 + v3;
    a1[4] = v11 + 1;
    if (v9 != v1)
    {
      uint64_t v12 = 0;
      do
      {
        if (*(unsigned char *)(v2 + v12 + v3 + 1) != 32) {
          break;
        }
        uint64_t v13 = v2 + v3 + v12 + 2;
        a1[1] = v13;
        a1[2] = v10 + v12 + 2;
        a1[4] = v11 + v12++ + 2;
      }
      while (v13 != v1);
    }
    return 1;
  }
  return v7;
}

void *sub_216A5AA68(void *result)
{
  uint64_t v1 = result[5];
  uint64_t v2 = result[1];
  if (v2 == v1) {
    goto LABEL_5;
  }
  uint64_t v3 = 0;
  uint64_t v4 = result[2];
  uint64_t v5 = result[4];
  while (1)
  {
    int v6 = *(unsigned __int8 *)(v2 + v3);
    if (v6 != 32) {
      break;
    }
    result[1] = v2 + v3 + 1;
    result[2] = v4 + v3 + 1;
    result[4] = v5 + v3++ + 1;
    if (v2 + v3 == v1) {
      goto LABEL_5;
    }
  }
  if (v2 + v3 == v1 || v6 != 41) {
LABEL_5:
  }
    sub_216A59BEC((uint64_t)result);
  uint64_t v7 = v2 + v3 + 1;
  uint64_t v8 = v4 + v3;
  result[1] = v7;
  result[2] = v8 + 1;
  uint64_t v9 = v5 + v3;
  result[4] = v9 + 1;
  if (v7 != v1)
  {
    uint64_t v10 = 0;
    do
    {
      if (*(unsigned char *)(v2 + v10 + v3 + 1) != 32) {
        break;
      }
      uint64_t v11 = v2 + v3 + v10 + 2;
      result[1] = v11;
      result[2] = v8 + v10 + 2;
      result[4] = v9 + v10++ + 2;
    }
    while (v11 != v1);
  }
  return result;
}

void sub_216A5AB58(uint64_t a1, char **a2)
{
  uint64_t v4 = (long long *)(a1 + 8);
  long long v11 = *(_OWORD *)(a1 + 8);
  long long v12 = *(_OWORD *)(a1 + 24);
  sub_216A5AC50(a1, a2);
  if (v5)
  {
    long long v13 = *v4;
    long long v14 = v4[1];
    if (sub_216A5AF98((void *)a1))
    {
      do
      {
        sub_216A5AC50(a1, a2);
        if (!v6) {
          break;
        }
        long long v13 = *v4;
        long long v14 = v4[1];
      }
      while ((sub_216A5AF98((void *)a1) & 1) != 0);
    }
    *uint64_t v4 = v13;
    v4[1] = v14;
  }
  else
  {
    *uint64_t v4 = v11;
    v4[1] = v12;
    uint64_t v7 = *(unsigned char **)(a1 + 40);
    uint64_t v8 = *(unsigned char **)(a1 + 8);
    if (v8 != v7)
    {
      uint64_t v9 = *(void *)(a1 + 32) + 1;
      uint64_t v10 = *(void *)(a1 + 16) + 1;
      do
      {
        if (*v8 != 32) {
          break;
        }
        *(void *)(a1 + 8) = ++v8;
        *(void *)(a1 + 16) = v10;
        *(void *)(a1 + 32) = v9++;
        ++v10;
      }
      while (v8 != v7);
    }
  }
}

void sub_216A5AC38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10)
{
  _OWORD *v10 = a9;
  v10[1] = a10;
  _Unwind_Resume(a1);
}

double sub_216A5AC50(uint64_t a1, char **a2)
{
  uint64_t v4 = (long long *)(a1 + 8);
  long long v5 = *(_OWORD *)(a1 + 24);
  long long v13 = *(_OWORD *)(a1 + 8);
  long long v14 = v5;
  uint64_t v15 = a1 + 8;
  if (sub_216A59D94())
  {
LABEL_7:
    sub_216A59774(&v13, a1, a2);
    return result;
  }
  long long v6 = v4[1];
  long long v16 = *v4;
  long long v17 = v6;
  uint64_t v7 = *(unsigned char **)(a1 + 8);
  if (v7 != *(unsigned char **)(a1 + 40) && *v7 == 91)
  {
    uint64_t v8 = *(void *)(a1 + 16) + 1;
    *(void *)(a1 + 8) = v7 + 1;
    *(void *)(a1 + 16) = v8;
    ++*(void *)(a1 + 32);
    sub_216A57020(a2);
    sub_216A5AD74(a1, a2);
    uint64_t v9 = *(unsigned char **)(a1 + 8);
    if (v9 == *(unsigned char **)(a1 + 40) || *v9 != 93) {
      sub_216A59720(a1);
    }
    uint64_t v10 = *(void *)(a1 + 16) + 1;
    *(void *)(a1 + 8) = v9 + 1;
    *(void *)(a1 + 16) = v10;
    ++*(void *)(a1 + 32);
    goto LABEL_7;
  }
  double result = *(double *)&v13;
  long long v12 = v14;
  *uint64_t v4 = v13;
  v4[1] = v12;
  return result;
}

void sub_216A5AD5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10, uint64_t a11, uint64_t a12, long long a13, long long a14)
{
  _OWORD *v14 = a13;
  v14[1] = a14;
  _OWORD *v14 = a9;
  v14[1] = a10;
  _Unwind_Resume(a1);
}

void sub_216A5AD74(uint64_t a1, char **a2)
{
  uint64_t v4 = (long long *)(a1 + 8);
  long long v11 = *(_OWORD *)(a1 + 8);
  long long v12 = *(_OWORD *)(a1 + 24);
  sub_216A5AE6C(a1, a2);
  if (v5)
  {
    long long v13 = *v4;
    long long v14 = v4[1];
    if (sub_216A5AF98((void *)a1))
    {
      do
      {
        sub_216A5AE6C(a1, a2);
        if (!v6) {
          break;
        }
        long long v13 = *v4;
        long long v14 = v4[1];
      }
      while ((sub_216A5AF98((void *)a1) & 1) != 0);
    }
    *uint64_t v4 = v13;
    v4[1] = v14;
  }
  else
  {
    *uint64_t v4 = v11;
    v4[1] = v12;
    uint64_t v7 = *(unsigned char **)(a1 + 40);
    uint64_t v8 = *(unsigned char **)(a1 + 8);
    if (v8 != v7)
    {
      uint64_t v9 = *(void *)(a1 + 32) + 1;
      uint64_t v10 = *(void *)(a1 + 16) + 1;
      do
      {
        if (*v8 != 32) {
          break;
        }
        *(void *)(a1 + 8) = ++v8;
        *(void *)(a1 + 16) = v10;
        *(void *)(a1 + 32) = v9++;
        ++v10;
      }
      while (v8 != v7);
    }
  }
}

void sub_216A5AE54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10)
{
  _OWORD *v10 = a9;
  v10[1] = a10;
  _Unwind_Resume(a1);
}

double sub_216A5AE6C(uint64_t a1, char **a2)
{
  uint64_t v4 = (_OWORD *)(a1 + 8);
  long long v5 = *(_OWORD *)(a1 + 24);
  long long v9 = *(_OWORD *)(a1 + 8);
  long long v10 = v5;
  uint64_t v11 = a1 + 8;
  if ((sub_216A59E38(a1, (uint64_t)a2) & 1) != 0
    || (sub_216A59EF8(a1, (uint64_t)a2) & 1) != 0
    || (sub_216A5A084(a1, (uint64_t)a2) & 1) != 0
    || (sub_216A5A210(a1, (uint64_t)a2), (v6 & 1) != 0)
    || (sub_216A5A31C(a1, (uint64_t)a2) & 1) != 0
    || (sub_216A5A478(a1, (uint64_t)a2) & 1) != 0
    || sub_216A5AF48((void *)a1, a2))
  {
    sub_216A58580(&v9, a1, a2);
  }
  else
  {
    double result = *(double *)&v9;
    long long v8 = v10;
    *uint64_t v4 = v9;
    v4[1] = v8;
  }
  return result;
}

void sub_216A5AF3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10)
{
  _OWORD *v10 = a9;
  v10[1] = a10;
  _Unwind_Resume(a1);
}

uint64_t sub_216A5AF48(void *a1, char **a2)
{
  uint64_t result = sub_216A5A8EC((uint64_t)a1, a2);
  if (result)
  {
    uint64_t result = sub_216A5A978(a1);
    if (result)
    {
      sub_216A5AB58(a1, a2);
      sub_216A5AA68(a1);
      return 1;
    }
  }
  return result;
}

uint64_t sub_216A5AF98(void *a1)
{
  uint64_t v1 = a1[5];
  uint64_t v2 = a1[1];
  if (v2 == v1) {
    return 0;
  }
  uint64_t v3 = 0;
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[4];
  while (1)
  {
    int v6 = *(unsigned __int8 *)(v2 + v3);
    if (v6 != 32) {
      break;
    }
    a1[1] = v2 + v3 + 1;
    a1[2] = v4 + v3 + 1;
    a1[4] = v5 + v3++ + 1;
    if (v2 + v3 == v1) {
      return 0;
    }
  }
  uint64_t v7 = 0;
  if (v2 + v3 != v1 && v6 == 44)
  {
    uint64_t v9 = v2 + v3 + 1;
    uint64_t v10 = v4 + v3;
    a1[1] = v9;
    a1[2] = v10 + 1;
    uint64_t v11 = v5 + v3;
    a1[4] = v11 + 1;
    if (v9 != v1)
    {
      uint64_t v12 = 0;
      do
      {
        if (*(unsigned char *)(v2 + v12 + v3 + 1) != 32) {
          break;
        }
        uint64_t v13 = v2 + v3 + v12 + 2;
        a1[1] = v13;
        a1[2] = v10 + v12 + 2;
        a1[4] = v11 + v12++ + 2;
      }
      while (v13 != v1);
    }
    return 1;
  }
  return v7;
}

void pxrInternal__aapl__pxrReserved__::SdfDataTokens_StaticTokenType::~SdfDataTokens_StaticTokenType(pxrInternal__aapl__pxrReserved__::SdfDataTokens_StaticTokenType *this)
{
  uint64_t v2 = (void **)((char *)this + 8);
  sub_216889A04(&v2);
  if ((*(void *)this & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(*(void *)this & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
}

{
  void **v2;

  uint64_t v2 = (void **)((char *)this + 8);
  sub_216889A04(&v2);
  if ((*(void *)this & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(*(void *)this & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
}

pxrInternal__aapl__pxrReserved__::SdfDataTokens_StaticTokenType *pxrInternal__aapl__pxrReserved__::SdfDataTokens_StaticTokenType::SdfDataTokens_StaticTokenType(pxrInternal__aapl__pxrReserved__::SdfDataTokens_StaticTokenType *this)
{
  uint64_t v2 = (uint64_t *)pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this, "timeSamples", 0);
  uint64_t v3 = *v2;
  if ((*v2 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v3 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v3 &= 0xFFFFFFFFFFFFFFF8;
  }
  v2[1] = 0;
  v2[2] = 0;
  v2[3] = 0;
  uint64_t v4 = operator new(8uLL);
  *((void *)this + 1) = v4;
  *((void *)this + 2) = v4;
  *uint64_t v4 = v3;
  uint64_t v5 = v4 + 1;
  *((void *)this + 3) = v4 + 1;
  if ((v3 & 7) != 0)
  {
    if ((atomic_fetch_add_explicit((atomic_uint *volatile)(v3 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0) {
      *v4 &= 0xFFFFFFFFFFFFFFF8;
    }
    *((void *)this + 2) = v5;
    atomic_fetch_add_explicit((atomic_uint *volatile)(v3 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  else
  {
    *((void *)this + 2) = v5;
  }
  return this;
}

void sub_216A5B1F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  uint64_t v11 = v10;
  sub_216889A04(&a9);
  if ((v11 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v11 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  sub_2173242CC(v9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::SdfAbstractData::~SdfAbstractData(pxrInternal__aapl__pxrReserved__::SdfAbstractData *this, const void *a2)
{
  sub_216859A88((uint64_t *)this + 2, a2);

  pxrInternal__aapl__pxrReserved__::TfRefBase::~TfRefBase(this);
}

uint64_t pxrInternal__aapl__pxrReserved__::SdfAbstractData::IsEmpty(pxrInternal__aapl__pxrReserved__::SdfAbstractData *this)
{
  uint64_t v3 = (void (**)(void **, pxrInternal__aapl__pxrReserved__::SdfAbstractData *))&unk_26C757DF0;
  unsigned __int8 v4 = 1;
  (*(void (**)(pxrInternal__aapl__pxrReserved__::SdfAbstractData *, void **))(*(void *)this + 312))(this, (void **)&v3);
  v3[3]((void **)&v3, this);
  return v4;
}

uint64_t pxrInternal__aapl__pxrReserved__::SdfAbstractData::VisitSpecs(pxrInternal__aapl__pxrReserved__::SdfAbstractData *this, pxrInternal__aapl__pxrReserved__::SdfAbstractDataSpecVisitor *a2)
{
  if (a2
    || (v5[0] = "sdf/abstractData.cpp",
        v5[1] = "VisitSpecs",
        v5[2] = 256,
        v5[3] = "void pxrInternal__aapl__pxrReserved__::SdfAbstractData::VisitSpecs(SdfAbstractDataSpecVisitor *) const",
        char v6 = 0,
        uint64_t result = pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v5, "visitor", 0),
        (result & 1) != 0))
  {
    (*(void (**)(pxrInternal__aapl__pxrReserved__::SdfAbstractData *, pxrInternal__aapl__pxrReserved__::SdfAbstractDataSpecVisitor *))(*(void *)this + 312))(this, a2);
    return (*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::SdfAbstractDataSpecVisitor *, pxrInternal__aapl__pxrReserved__::SdfAbstractData *))(*(void *)a2 + 24))(a2, this);
  }
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::SdfAbstractData::IsDetached(pxrInternal__aapl__pxrReserved__::SdfAbstractData *this)
{
  return (*(unsigned int (**)(pxrInternal__aapl__pxrReserved__::SdfAbstractData *))(*(void *)this + 24))(this) ^ 1;
}

uint64_t pxrInternal__aapl__pxrReserved__::SdfAbstractData::CopyFrom(uint64_t a1, uint64_t *a2)
{
  v4[0] = &unk_26C757E38;
  v4[1] = a1;
  uint64_t v2 = sub_216A5B4F4(a2);
  (*(void (**)(void))(*(void *)v2 + 312))();
  return (*(uint64_t (**)(void *, uint64_t))(v4[0] + 24))(v4, v2);
}

uint64_t sub_216A5B4F4(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t v2 = a1 + 1;
  if (!v3
    || ((v4 = *(unsigned __int8 *)(sub_216850B68(v2) + 14), uint64_t result = *a1, v4) ? (v6 = result == 0) : (v6 = 1), v6))
  {
    uint64_t v7 = j__strrchr("/Library/Caches/com.apple.xbs/Sources/USDLib/USD/pxr/base/tf/weakPtrFacade.h", 47);
    v8[0] = sub_21684E5D4((unint64_t)"/Library/Caches/com.apple.xbs/Sources/USDLib/USD/pxr/base/tf/weakPtrFacade.h", (uint64_t)v7, 0x2Fu);
    v8[1] = "operator->";
    v8[2] = 216;
    v8[3] = "DataType *pxrInternal__aapl__pxrReserved__::TfWeakPtrFacade<pxrInternal__aapl__pxrReserved__::TfWeakPtr, con"
            "st pxrInternal__aapl__pxrReserved__::SdfAbstractData>::operator->() const [PtrTemplate = pxrInternal__aapl__"
            "pxrReserved__::TfWeakPtr, uint64_t Type = const pxrInternal__aapl__pxrReserved__::SdfAbstractData]";
    char v9 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostNullSmartPtrDereferenceFatalError((uint64_t)v8, (pxrInternal__aapl__pxrReserved__ *)(0x800000021746BF4DLL & 0x7FFFFFFFFFFFFFFFLL));
  }
  return result;
}

BOOL pxrInternal__aapl__pxrReserved__::SdfAbstractData::Equals(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  long long v14 = (void (**)(void **, void))&unk_26C757E80;
  char v15 = 1;
  uint64_t v16 = v4;
  (*(void (**)(uint64_t, void **))(*(void *)a1 + 312))(a1, (void **)&v14);
  v14[3]((void **)&v14, a1);
  if (!v15) {
    return 0;
  }
  uint64_t v11 = (void (**)(void **, uint64_t))&unk_26C757E80;
  char v12 = 1;
  uint64_t v13 = a1;
  uint64_t v5 = sub_216A5B7B0(a2);
  (*(void (**)(void))(*(void *)v5 + 312))();
  v11[3]((void **)&v11, v5);
  if (!v12) {
    return 0;
  }
  uint64_t v6 = *a2;
  long long v8 = (void (**)(void **, void))&unk_26C757EC8;
  char v9 = 1;
  uint64_t v10 = v6;
  (*(void (**)(uint64_t, void **))(*(void *)a1 + 312))(a1, (void **)&v8);
  v8[3]((void **)&v8, a1);
  return v9 != 0;
}

uint64_t sub_216A5B7B0(uint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v2 = j__strrchr("/Library/Caches/com.apple.xbs/Sources/USDLib/USD/pxr/base/tf/refPtr.h", 47);
    v3[0] = sub_21684E5D4((unint64_t)"/Library/Caches/com.apple.xbs/Sources/USDLib/USD/pxr/base/tf/refPtr.h", (uint64_t)v2, 0x2Fu);
    v3[1] = "operator->";
    v3[2] = 953;
    v3[3] = "T *pxrInternal__aapl__pxrReserved__::TfRefPtr<pxrInternal__aapl__pxrReserved__::SdfAbstractData>::operator->"
            "() const [U = pxrInternal__aapl__pxrReserved__::SdfAbstractData]";
    char v4 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostNullSmartPtrDereferenceFatalError((uint64_t)v3, (pxrInternal__aapl__pxrReserved__ *)(0x80000002174743B8 & 0x7FFFFFFFFFFFFFFFLL));
  }
  return result;
}

void pxrInternal__aapl__pxrReserved__::SdfAbstractData::WriteToStream(uint64_t a1, void *a2)
{
  v38[2] = *MEMORY[0x263EF8340];
  v36[0] = 0;
  v36[1] = 0;
  uint64_t v34 = (void (**)(void **, void))&unk_26C757F10;
  long long v35 = v36;
  (*(void (**)(uint64_t, void **))(*(void *)a1 + 312))(a1, (void **)&v34);
  v34[3]((void **)&v34, a1);
  char v4 = v35;
  if (v35 != v36)
  {
    do
    {
      unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1 + 96))(a1, (uint64_t)v4 + 28);
      uint64_t v6 = pxrInternal__aapl__pxrReserved__::operator<<(a2, (pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v4 + 28));
      uint64_t v7 = sub_216779180(v6, (uint64_t)" ", 1);
      pxrInternal__aapl__pxrReserved__::TfEnum::GetDisplayName((uint64_t)&unk_26C755200, v5, (uint64_t)&__p);
      if ((v33 & 0x80u) == 0) {
        p_p = &__p;
      }
      else {
        p_p = __p;
      }
      if ((v33 & 0x80u) == 0) {
        uint64_t v9 = v33;
      }
      else {
        uint64_t v9 = (uint64_t)v32;
      }
      uint64_t v10 = sub_216779180(v7, (uint64_t)p_p, v9);
      LOBYTE(v29) = 10;
      sub_216779180(v10, (uint64_t)&v29, 1);
      if ((char)v33 < 0) {
        operator delete(__p);
      }
      (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(*(void *)a1 + 176))(&__p, a1, (uint64_t)v4 + 28);
      sub_216A5CFEC((uint64_t)&v29, (uint64_t *)__p, v32);
      uint64_t v11 = v29;
      if (v29 != (void **)v30)
      {
        do
        {
          (*(void (**)(void *__return_ptr, uint64_t, uint64_t, void **))(*(void *)a1 + 136))(v38, a1, (uint64_t)v4 + 28, v11 + 4);
          char v12 = sub_216779180(a2, (uint64_t)"    ", 4);
          uint64_t v13 = pxrInternal__aapl__pxrReserved__::operator<<(v12, v11 + 4);
          long long v14 = sub_216779180(v13, (uint64_t)" ", 1);
          pxrInternal__aapl__pxrReserved__::VtValue::GetTypeName((pxrInternal__aapl__pxrReserved__::VtValue *)v38, v15, v16, (uint64_t)v27);
          if ((v28 & 0x80u) == 0) {
            long long v17 = v27;
          }
          else {
            long long v17 = (void **)v27[0];
          }
          if ((v28 & 0x80u) == 0) {
            uint64_t v18 = v28;
          }
          else {
            uint64_t v18 = (uint64_t)v27[1];
          }
          long long v19 = sub_216779180(v14, (uint64_t)v17, v18);
          long long v20 = sub_216779180(v19, (uint64_t)" ", 1);
          long long v21 = (void *)pxrInternal__aapl__pxrReserved__::operator<<((uint64_t)v20, (uint64_t)v38);
          char v37 = 10;
          sub_216779180(v21, (uint64_t)&v37, 1);
          if ((char)v28 < 0) {
            operator delete(v27[0]);
          }
          sub_2168EE084((uint64_t)v38);
          long long v22 = (void **)v11[1];
          if (v22)
          {
            do
            {
              long long v23 = v22;
              long long v22 = (void **)*v22;
            }
            while (v22);
          }
          else
          {
            do
            {
              long long v23 = (void **)v11[2];
              BOOL v24 = *v23 == v11;
              uint64_t v11 = v23;
            }
            while (!v24);
          }
          uint64_t v11 = v23;
        }
        while (v23 != (void **)v30);
      }
      sub_2168CB05C((uint64_t)&v29, v30[0]);
      uint64_t v29 = &__p;
      sub_216889A04(&v29);
      uint64_t v25 = (void *)v4[1];
      if (v25)
      {
        do
        {
          uint64_t v26 = (void **)v25;
          uint64_t v25 = (void *)*v25;
        }
        while (v25);
      }
      else
      {
        do
        {
          uint64_t v26 = (void **)v4[2];
          BOOL v24 = *v26 == v4;
          char v4 = v26;
        }
        while (!v24);
      }
      char v4 = v26;
    }
    while (v26 != v36);
  }
  uint64_t v34 = (void (**)(void **, void))&unk_26C757F10;
  sub_216981EE8((uint64_t)&v35, v36[0]);
}

void sub_216A5BBD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,uint64_t a29,void *a30)
{
}

uint64_t sub_216A5BC70(uint64_t a1)
{
  *(void *)a1 = &unk_26C757F10;
  sub_216981EE8(a1 + 8, *(void **)(a1 + 16));
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::SdfAbstractData::HasSpecAndField(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _DWORD *a5)
{
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 96))(a1);
  *a5 = result;
  if (result)
  {
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 104);
    return v11(a1, a2, a3, a4);
  }
  return result;
}

{
  uint64_t result;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t vars8;

  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 96))(a1);
  *a5 = result;
  if (result)
  {
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 112);
    return v11(a1, a2, a3, a4);
  }
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::SdfAbstractData::GetTypeid(uint64_t a1)
{
  v3[2] = *MEMORY[0x263EF8340];
  (*(void (**)(void *__return_ptr))(*(void *)a1 + 136))(v3);
  uint64_t Typeid = pxrInternal__aapl__pxrReserved__::VtValue::GetTypeid((pxrInternal__aapl__pxrReserved__::VtValue *)v3);
  sub_2168EE084((uint64_t)v3);
  return Typeid;
}

void sub_216A5BEC8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_2168EE084((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::SdfAbstractData::HasDictKey(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (***a5)(void, unsigned char *))
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  uint64_t v11 = 0;
  if (a5) {
    uint64_t v6 = v10;
  }
  else {
    uint64_t v6 = 0;
  }
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unsigned char *))(*(void *)a1 + 192))(a1, a2, a3, a4, v6);
  char v8 = v7 ^ 1;
  if (!a5) {
    char v8 = 1;
  }
  if ((v8 & 1) == 0) {
    uint64_t v7 = (**a5)(a5, v10);
  }
  sub_2168EE084((uint64_t)v10);
  return v7;
}

void sub_216A5BFBC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_2168EE084((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::SdfAbstractData::HasDictKey(pxrInternal__aapl__pxrReserved__::SdfAbstractData *this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, const pxrInternal__aapl__pxrReserved__::TfToken *a4, pxrInternal__aapl__pxrReserved__::VtValue *a5)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  uint64_t v14 = 0;
  if ((*(unsigned int (**)(pxrInternal__aapl__pxrReserved__::SdfAbstractData *, const pxrInternal__aapl__pxrReserved__::SdfPath *, const pxrInternal__aapl__pxrReserved__::TfToken *, int *))(*(void *)this + 112))(this, a2, a3, v13)&& (v7 = (pxrInternal__aapl__pxrReserved__::TfToken *)sub_2168EC434((pxrInternal__aapl__pxrReserved__::VtValue *)v13), v7)&& ((v14 & 4) != 0? (v7 = (pxrInternal__aapl__pxrReserved__::TfToken *)(*(uint64_t (**)(int *))((v14 & 0xFFFFFFFFFFFFFFF8)+ 168))(v13), char v8 = (uint64_t *)v7): (char v8 = *(uint64_t **)v13), (*(void *)a4 & 0xFFFFFFFFFFFFFFF8) == 0? (EmptyString = (std::string *)pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(v7)): (EmptyString = (std::string *)((*(void *)a4 & 0xFFFFFFFFFFFFFFF8) + 16)), (ValueAtPath = (void *)pxrInternal__aapl__pxrReserved__::VtDictionary::GetValueAtPath(v8, EmptyString, ":")) != 0))
  {
    if (a5) {
      sub_2168EC6DC(a5, ValueAtPath);
    }
    uint64_t v11 = 1;
  }
  else
  {
    uint64_t v11 = 0;
  }
  sub_2168EE084((uint64_t)v13);
  return v11;
}

void sub_216A5C0E8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_2168EE084((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::SdfAbstractData::GetDictValueByKey@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(void *)(a5 + 8) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 192))(a1, a2, a3, a4, a5);
}

void sub_216A5C14C(_Unwind_Exception *a1)
{
  sub_2168EE084(v1);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::SdfAbstractData::SetDictValueByKey(pxrInternal__aapl__pxrReserved__::SdfAbstractData *this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, const pxrInternal__aapl__pxrReserved__::TfToken *a4, const pxrInternal__aapl__pxrReserved__::VtValue *a5)
{
  _OWORD v15[2] = *MEMORY[0x263EF8340];
  if (*((void *)a5 + 1))
  {
    (*(void (**)(void *__return_ptr, pxrInternal__aapl__pxrReserved__::SdfAbstractData *, const pxrInternal__aapl__pxrReserved__::SdfPath *, const pxrInternal__aapl__pxrReserved__::TfToken *))(*(void *)this + 136))(v15, this, a2, a3);
    uint64_t v14 = 0;
    uint64_t v10 = sub_2168EC844((pxrInternal__aapl__pxrReserved__::VtValue *)v15, (const void ****)&v14);
    if ((*(void *)a4 & 0xFFFFFFFFFFFFFFF8) != 0) {
      EmptyString = (std::string *)((*(void *)a4 & 0xFFFFFFFFFFFFFFF8) + 16);
    }
    else {
      EmptyString = (std::string *)pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString((pxrInternal__aapl__pxrReserved__::TfToken *)v10);
    }
    pxrInternal__aapl__pxrReserved__::VtDictionary::SetValueAtPath((pxrInternal__aapl__pxrReserved__::VtDictionary *)&v14, EmptyString, a5, ":");
    sub_2168EC844((pxrInternal__aapl__pxrReserved__::VtValue *)v15, (const void ****)&v14);
    (*(void (**)(pxrInternal__aapl__pxrReserved__::SdfAbstractData *, const pxrInternal__aapl__pxrReserved__::SdfPath *, const pxrInternal__aapl__pxrReserved__::TfToken *, void *))(*(void *)this + 152))(this, a2, a3, v15);
    sub_2168EBBB8(&v14, 0);
    return sub_2168EE084((uint64_t)v15);
  }
  else
  {
    uint64_t v12 = *(uint64_t (**)(void))(*(void *)this + 224);
    return v12();
  }
}

void sub_216A5C314(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
}

uint64_t pxrInternal__aapl__pxrReserved__::SdfAbstractData::SetDictValueByKey(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (***a5)(void, unsigned char *))
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  uint64_t v11 = 0;
  (**a5)(a5, v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, unsigned char *))(*(void *)a1 + 208))(a1, a2, a3, a4, v10);
  return sub_2168EE084((uint64_t)v10);
}

void sub_216A5C414(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_2168EE084((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::SdfAbstractData::EraseDictValueByKey(pxrInternal__aapl__pxrReserved__::SdfAbstractData *this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, const pxrInternal__aapl__pxrReserved__::TfToken *a4)
{
  v12[2] = *MEMORY[0x263EF8340];
  (*(void (**)(void *__return_ptr))(*(void *)this + 136))(v12);
  if (sub_2168EC434((pxrInternal__aapl__pxrReserved__::VtValue *)v12))
  {
    uint64_t v11 = 0;
    char v8 = sub_2168EC844((pxrInternal__aapl__pxrReserved__::VtValue *)v12, (const void ****)&v11);
    if ((*(void *)a4 & 0xFFFFFFFFFFFFFFF8) != 0) {
      EmptyString = (std::string *)((*(void *)a4 & 0xFFFFFFFFFFFFFFF8) + 16);
    }
    else {
      EmptyString = (std::string *)pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString((pxrInternal__aapl__pxrReserved__::TfToken *)v8);
    }
    pxrInternal__aapl__pxrReserved__::VtDictionary::EraseValueAtPath((uint64_t *)&v11, EmptyString, ":");
    if (pxrInternal__aapl__pxrReserved__::VtDictionary::empty((pxrInternal__aapl__pxrReserved__::VtDictionary *)&v11))
    {
      (*(void (**)(pxrInternal__aapl__pxrReserved__::SdfAbstractData *, const pxrInternal__aapl__pxrReserved__::SdfPath *, const pxrInternal__aapl__pxrReserved__::TfToken *))(*(void *)this + 168))(this, a2, a3);
    }
    else
    {
      sub_2168EC844((pxrInternal__aapl__pxrReserved__::VtValue *)v12, (const void ****)&v11);
      (*(void (**)(pxrInternal__aapl__pxrReserved__::SdfAbstractData *, const pxrInternal__aapl__pxrReserved__::SdfPath *, const pxrInternal__aapl__pxrReserved__::TfToken *, void *))(*(void *)this + 152))(this, a2, a3, v12);
    }
    sub_2168EBBB8(&v11, 0);
  }
  return sub_2168EE084((uint64_t)v12);
}

void sub_216A5C594(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_2168EE084((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::SdfAbstractData::ListDictKeys@<X0>(pxrInternal__aapl__pxrReserved__::SdfAbstractData *this@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = *MEMORY[0x263EF8340];
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  (*(void (**)(pxrInternal__aapl__pxrReserved__::VtDictionary **__return_ptr))(*(void *)this + 200))(&v39);
  if (sub_2168EC434((pxrInternal__aapl__pxrReserved__::VtValue *)&v39))
  {
    if ((v40 & 4) != 0) {
      uint64_t v6 = (pxrInternal__aapl__pxrReserved__::VtDictionary *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtDictionary **))((v40 & 0xFFFFFFFFFFFFFFF8) + 168))(&v39);
    }
    else {
      uint64_t v6 = v39;
    }
    unint64_t v7 = pxrInternal__aapl__pxrReserved__::VtDictionary::size(v6);
    sub_216973388((char **)a2, v7);
    uint64_t v31 = pxrInternal__aapl__pxrReserved__::VtDictionary::begin(v6);
    uint64_t v32 = v8;
    uint64_t v33 = pxrInternal__aapl__pxrReserved__::VtDictionary::end(v6);
    uint64_t v34 = v9;
    while (v32 != v34 || v32 && v31 != v33)
    {
      sub_2168ED218(&v31, v9, v10);
      pxrInternal__aapl__pxrReserved__::TfToken::TfToken(&v30);
      uint64_t v14 = *(void **)(a2 + 8);
      unint64_t v13 = *(void *)(a2 + 16);
      if ((unint64_t)v14 >= v13)
      {
        uint64_t v17 = ((uint64_t)v14 - *(void *)a2) >> 3;
        if ((unint64_t)(v17 + 1) >> 61) {
          sub_21677CB10();
        }
        uint64_t v18 = v13 - *(void *)a2;
        uint64_t v19 = v18 >> 2;
        if (v18 >> 2 <= (unint64_t)(v17 + 1)) {
          uint64_t v19 = v17 + 1;
        }
        if ((unint64_t)v18 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v20 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v20 = v19;
        }
        uint64_t v38 = a2 + 16;
        if (v20) {
          long long v21 = (char *)sub_21677CB28(a2 + 16, v20);
        }
        else {
          long long v21 = 0;
        }
        long long v22 = &v21[8 * v17];
        long long v23 = &v21[8 * v20];
        char v37 = v23;
        *(void *)long long v22 = v30;
        uint64_t v16 = v22 + 8;
        uint64_t v30 = 0;
        v36.i64[1] = (uint64_t)(v22 + 8);
        uint64_t v25 = *(char **)a2;
        BOOL v24 = *(char **)(a2 + 8);
        if (v24 == *(char **)a2)
        {
          int64x2_t v27 = vdupq_n_s64((unint64_t)v24);
        }
        else
        {
          do
          {
            uint64_t v26 = *((void *)v24 - 1);
            v24 -= 8;
            *((void *)v22 - 1) = v26;
            v22 -= 8;
            *(void *)BOOL v24 = 0;
          }
          while (v24 != v25);
          int64x2_t v27 = *(int64x2_t *)a2;
          uint64_t v16 = (void *)v36.i64[1];
          long long v23 = v37;
        }
        *(void *)a2 = v22;
        *(void *)(a2 + 8) = v16;
        int64x2_t v36 = v27;
        unsigned __int8 v28 = *(char **)(a2 + 16);
        *(void *)(a2 + 16) = v23;
        char v37 = v28;
        uint64_t v35 = v27.i64[0];
        sub_2168BE9D8((uint64_t)&v35);
        uint64_t v15 = v30;
      }
      else
      {
        uint64_t v15 = 0;
        void *v14 = v30;
        uint64_t v16 = v14 + 1;
        uint64_t v30 = 0;
      }
      *(void *)(a2 + 8) = v16;
      if ((v15 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v15 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      sub_2168ED448(&v31, v11, v12);
    }
  }
  return sub_2168EE084((uint64_t)&v39);
}

void sub_216A5C810(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_2168EE084(v3 - 72);
  sub_216889A04((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t sub_216A5C87C(uint64_t a1)
{
  *(unsigned char *)(a1 + 8) = 0;
  return 0;
}

uint64_t sub_216A5C890(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v18[2] = *MEMORY[0x263EF8340];
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(*(void *)a2 + 176))(&v17, a2, a3);
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 96))(a2, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v6 + 64))(v6, a3, v7);
  for (long long i = v17; (void)i != *((void *)&i + 1); sub_21699A5F0(&i))
  {
    uint64_t v10 = *(void *)(a1 + 8);
    uint64_t v11 = sub_21699A570((uint64_t *)&i, v8, v9);
    uint64_t v14 = sub_21699A570((uint64_t *)&i, v12, v13);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t, uint64_t))(*(void *)a2 + 136))(v18, a2, a3, v14);
    (*(void (**)(uint64_t, uint64_t, uint64_t, void *))(*(void *)v10 + 152))(v10, a3, v11, v18);
    sub_2168EE084((uint64_t)v18);
  }
  *(void *)&long long i = &v17;
  sub_216889A04((void ***)&i);
  return 1;
}

void sub_216A5CA48(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, char a14)
{
}

uint64_t sub_216A5CA8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 16) + 72))(*(void *)(a1 + 16), a3);
  if (result) {
    return *(unsigned char *)(a1 + 8) != 0;
  }
  *(unsigned char *)(a1 + 8) = 0;
  return result;
}

BOOL sub_216A5CAF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL result = sub_216A5CB30(a2, *(void *)(a1 + 16), a3);
  *(unsigned char *)(a1 + 8) = result;
  return result;
}

BOOL sub_216A5CB30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v31[2] = *MEMORY[0x263EF8340];
  (*(void (**)(long long *__return_ptr))(*(void *)a1 + 176))(&v29);
  (*(void (**)(void ***__return_ptr, uint64_t, uint64_t))(*(void *)a2 + 176))(v28, a2, a3);
  sub_216A5CFEC((uint64_t)&v26, (uint64_t *)v29, *((uint64_t **)&v29 + 1));
  sub_216A5CFEC((uint64_t)v25, (uint64_t *)v28[0], (uint64_t *)v28[1]);
  int v6 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1 + 96))(a1, a3);
  if (v6 != (*(unsigned int (**)(uint64_t, uint64_t))(*(void *)a2 + 96))(a2, a3)
    || v27[1] != (void *)v25[2])
  {
LABEL_21:
    BOOL v16 = 0;
    goto LABEL_22;
  }
  uint64_t v9 = (void **)v26;
  if (v26 != v27)
  {
    uint64_t v10 = (void *)v25[0];
    while (((unint64_t)v9[4] & 0xFFFFFFFFFFFFFFF8) == (v10[4] & 0xFFFFFFFFFFFFFFF8))
    {
      uint64_t v11 = (void **)v9[1];
      uint64_t v12 = (void ***)v9;
      if (v11)
      {
        do
        {
          uint64_t v9 = v11;
          uint64_t v11 = (void **)*v11;
        }
        while (v11);
      }
      else
      {
        do
        {
          uint64_t v9 = v12[2];
          BOOL v13 = *v9 == v12;
          uint64_t v12 = (void ***)v9;
        }
        while (!v13);
      }
      uint64_t v14 = (void *)v10[1];
      if (v14)
      {
        do
        {
          uint64_t v15 = v14;
          uint64_t v14 = (void *)*v14;
        }
        while (v14);
      }
      else
      {
        do
        {
          uint64_t v15 = (void *)v10[2];
          BOOL v13 = *v15 == (void)v10;
          uint64_t v10 = v15;
        }
        while (!v13);
      }
      uint64_t v10 = v15;
      if (v9 == (void **)v27) {
        goto LABEL_17;
      }
    }
    goto LABEL_21;
  }
LABEL_17:
  *(_OWORD *)BOOL v24 = v29;
  while (1)
  {
    BOOL v16 = v24[0] == v24[1];
    if (v24[0] == v24[1]) {
      break;
    }
    uint64_t v17 = sub_21699A570(v24, v7, v8);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 136))(v31, a1, a3, v17);
    uint64_t v20 = sub_21699A570(v24, v18, v19);
    (*(void (**)(std::type_info *__return_ptr, uint64_t, uint64_t, uint64_t))(*(void *)a2 + 136))(&v30, a2, a3, v20);
    char v22 = pxrInternal__aapl__pxrReserved__::SdfUnregisteredValue::operator==((pxrInternal__aapl__pxrReserved__::VtValue *)v31, &v30, v21);
    sub_2168EE084((uint64_t)&v30);
    sub_2168EE084((uint64_t)v31);
    if ((v22 & 1) == 0) {
      break;
    }
    sub_21699A5F0(v24);
  }
LABEL_22:
  sub_2168CB05C((uint64_t)v25, (void *)v25[1]);
  sub_2168CB05C((uint64_t)&v26, v27[0]);
  uint64_t v26 = v28;
  sub_216889A04((void ***)&v26);
  v28[0] = (void **)&v29;
  sub_216889A04(v28);
  return v16;
}

void sub_216A5CE24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void ***a15, void *a16, uint64_t a17, void **a18, uint64_t a19, uint64_t a20,char a21)
{
  a15 = &a18;
  sub_216889A04((void ***)&a15);
  a18 = (void **)&a21;
  sub_216889A04(&a18);
  _Unwind_Resume(a1);
}

void sub_216A5CEB0(void **a1)
{
  *a1 = &unk_26C757F10;
  sub_216981EE8((uint64_t)(a1 + 1), a1[2]);

  operator delete(a1);
}

uint64_t sub_216A5CF08(uint64_t a1, uint64_t a2, pxrInternal__aapl__pxrReserved__::SdfPath *a3)
{
  return 1;
}

uint64_t *sub_216A5CF30(uint64_t **a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2, _DWORD *a3)
{
  unsigned int v5 = (void **)sub_216981754((uint64_t)a1, &v11, a2);
  int v6 = (uint64_t *)*v5;
  if (!*v5)
  {
    uint64_t v7 = (uint64_t **)v5;
    int v6 = (uint64_t *)operator new(0x28uLL);
    v9[1] = a1 + 1;
    sub_216981010((_DWORD *)v6 + 7, a3);
    sub_21698105C((_DWORD *)v6 + 8, a3 + 1);
    char v10 = 1;
    sub_21677B358(a1, v11, v7, v6);
    v9[0] = 0;
    sub_216981880((uint64_t)v9, 0);
  }
  return v6;
}

uint64_t sub_216A5CFEC(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  *(void *)(a1 + 8) = 0;
  char v4 = (void *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a1 + 8;
  if (a2 != a3)
  {
    int v6 = a2;
    do
    {
      sub_216A5D070((uint64_t **)a1, v4, v6, v6);
      ++v6;
    }
    while (v6 != a3);
  }
  return a1;
}

void sub_216A5D058(_Unwind_Exception *a1)
{
  sub_2168CB05C(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_216A5D070(uint64_t **a1, void *a2, uint64_t *a3, uint64_t *a4)
{
  int v6 = (uint64_t **)sub_216A5D0F4(a1, a2, &v10, &v9, a3);
  BOOL result = *v6;
  if (!*v6)
  {
    sub_21697C3A4((uint64_t)a1, a4, (uint64_t)&v8);
    sub_21677B358(a1, v10, v6, v8);
    return v8;
  }
  return result;
}

uint64_t *sub_216A5D0F4(void *a1, void *a2, void *a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t v9 = a1 + 1;
  if (a1 + 1 != a2 && !sub_2168BE1F8((uint64_t)(a1 + 2), a5, a2 + 4))
  {
    if (!sub_2168BE1F8((uint64_t)(a1 + 2), a2 + 4, a5))
    {
      *a3 = a2;
      *a4 = (uint64_t)a2;
      return a4;
    }
    a4 = a2 + 1;
    uint64_t v13 = a2[1];
    if (v13)
    {
      uint64_t v14 = (void *)a2[1];
      do
      {
        uint64_t v15 = v14;
        uint64_t v14 = (void *)*v14;
      }
      while (v14);
    }
    else
    {
      uint64_t v18 = a2;
      do
      {
        uint64_t v15 = (void *)v18[2];
        BOOL v17 = *v15 == (void)v18;
        uint64_t v18 = v15;
      }
      while (!v17);
    }
    if (v15 != v9)
    {
      if (!sub_2168BE1F8((uint64_t)(a1 + 2), a5, v15 + 4)) {
        goto LABEL_28;
      }
      uint64_t v13 = *a4;
    }
    if (v13)
    {
      *a3 = v15;
      return v15;
    }
    else
    {
      *a3 = a2;
    }
    return a4;
  }
  if ((void *)*a1 == a2)
  {
    uint64_t v12 = a2;
LABEL_16:
    if (*a2)
    {
      *a3 = v12;
      return v12 + 1;
    }
    else
    {
      *a3 = a2;
      return a2;
    }
  }
  uint64_t v11 = (void *)*a2;
  if (*a2)
  {
    do
    {
      uint64_t v12 = v11;
      uint64_t v11 = (void *)v11[1];
    }
    while (v11);
  }
  else
  {
    BOOL v16 = a2;
    do
    {
      uint64_t v12 = (void *)v16[2];
      BOOL v17 = *v12 == (void)v16;
      BOOL v16 = v12;
    }
    while (v17);
  }
  if (sub_2168BE1F8((uint64_t)(a1 + 2), v12 + 4, a5)) {
    goto LABEL_16;
  }
LABEL_28:

  return sub_2168BE158((uint64_t)a1, a3, a5);
}

uint64_t *pxrInternal__aapl__pxrReserved__::SdfAllowed::GetWhyNot(uint64_t *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B8ECC0, memory_order_acquire) & 1) == 0)
  {
    uint64_t v2 = this;
    int v1 = __cxa_guard_acquire(&qword_267B8ECC0);
    this = v2;
    if (v1)
    {
      qword_267B8ECA8 = 0;
      unk_267B8ECB0 = 0;
      qword_267B8ECB8 = 0;
      __cxa_atexit(MEMORY[0x263F8C0B8], &qword_267B8ECA8, &dword_216758000);
      __cxa_guard_release(&qword_267B8ECC0);
      this = v2;
    }
  }
  if (!*((unsigned char *)this + 24)) {
    return &qword_267B8ECA8;
  }
  return this;
}

uint64_t *sub_216A5D350()
{
  sub_216A5D8A4();

  return sub_216A5D9A8();
}

void sub_216A5D378()
{
}

double pxrInternal__aapl__pxrReserved__::SdfAssetPath::SdfAssetPath(pxrInternal__aapl__pxrReserved__::SdfAssetPath *this)
{
  double result = 0.0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *(_OWORD *)this = 0u;
  return result;
}

{
  double result;

  double result = 0.0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *(_OWORD *)this = 0u;
  return result;
}

char *pxrInternal__aapl__pxrReserved__::SdfAssetPath::SdfAssetPath(char *__dst, uint64_t a2, char *a3)
{
  if (*(char *)(a2 + 23) < 0)
  {
    sub_216778F24(__dst, *(void **)a2, *(void *)(a2 + 8));
  }
  else
  {
    long long v5 = *(_OWORD *)a2;
    *((void *)__dst + 2) = *(void *)(a2 + 16);
    *(_OWORD *)__dst = v5;
  }
  *((void *)__dst + 3) = 0;
  *((void *)__dst + 4) = 0;
  int v6 = (void **)(__dst + 24);
  *((void *)__dst + 5) = 0;
  if (*(char *)(a2 + 23) >= 0) {
    uint64_t v7 = (unsigned __int8 *)a2;
  }
  else {
    uint64_t v7 = *(unsigned __int8 **)a2;
  }
  if ((sub_216A5D48C(v7, a2, a3) & 1) == 0)
  {
    if (__dst[23] < 0) {
      operator delete(*(void **)__dst);
    }
    *(void *)__dst = 0;
    *((void *)__dst + 1) = 0;
    *((void *)__dst + 2) = 0;
    if (__dst[47] < 0) {
      operator delete(*v6);
    }
    uint64_t *v6 = 0;
    *((void *)__dst + 4) = 0;
    *((void *)__dst + 5) = 0;
  }
  return __dst;
}

void sub_216A5D468(_Unwind_Exception *a1)
{
  if (*(char *)(v1 + 47) < 0) {
    operator delete(*v2);
  }
  sub_217324594(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_216A5D48C(unsigned __int8 *a1, uint64_t a2, char *a3)
{
  uint64_t v15 = 0;
  BOOL v16 = a1;
  v14[0] = 0;
  v14[1] = 0;
  int v3 = sub_216A5DB48(&v16, (uint64_t)v14, a3);
  int v5 = 1;
  if (v3 < 1)
  {
LABEL_6:
    if (v3 != -1)
    {
      uint64_t v6 = 1;
      goto LABEL_13;
    }
    uint64_t v9 = "sdf/assetPath.cpp";
    uint64_t v10 = "_ValidateAssetPathString";
    uint64_t v11 = 132;
    uint64_t v12 = "BOOL pxrInternal__aapl__pxrReserved__::_ValidateAssetPathString(const char *)";
    char v13 = 0;
    uint64_t v7 = (const char *)v14;
    if (v15 < 0) {
      uint64_t v7 = (const char *)v14[0];
    }
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v9, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid asset path string -- character %d: %s\n", v5, v7);
  }
  else
  {
    while (v3 >= 0x20 && v3 != 127 && (v3 & 0xFFFFFFE0) != 0x80)
    {
      int v3 = sub_216A5DB48(&v16, (uint64_t)v14, v4);
      ++v5;
      if (v3 <= 0) {
        goto LABEL_6;
      }
    }
    uint64_t v9 = "sdf/assetPath.cpp";
    uint64_t v10 = "_ValidateAssetPathString";
    uint64_t v11 = 125;
    uint64_t v12 = "BOOL pxrInternal__aapl__pxrReserved__::_ValidateAssetPathString(const char *)";
    char v13 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v9, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid asset path string -- character %d is control character 0x%x", v5, v3);
  }
  uint64_t v6 = 0;
LABEL_13:
  if (SHIBYTE(v15) < 0) {
    operator delete(v14[0]);
  }
  return v6;
}

void sub_216A5D5C4(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 - 25) < 0) {
    operator delete(*(void **)(v1 - 48));
  }
  _Unwind_Resume(exception_object);
}

char *pxrInternal__aapl__pxrReserved__::SdfAssetPath::SdfAssetPath(char *__dst, uint64_t a2, long long *a3)
{
  if (*(char *)(a2 + 23) < 0)
  {
    sub_216778F24(__dst, *(void **)a2, *(void *)(a2 + 8));
  }
  else
  {
    long long v6 = *(_OWORD *)a2;
    *((void *)__dst + 2) = *(void *)(a2 + 16);
    *(_OWORD *)__dst = v6;
  }
  uint64_t v7 = (void **)(__dst + 24);
  if (*((char *)a3 + 23) < 0)
  {
    sub_216778F24(__dst + 24, *(void **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v8 = *a3;
    *((void *)__dst + 5) = *((void *)a3 + 2);
    *(_OWORD *)uint64_t v7 = v8;
  }
  if (*(char *)(a2 + 23) >= 0) {
    uint64_t v9 = (unsigned __int8 *)a2;
  }
  else {
    uint64_t v9 = *(unsigned __int8 **)a2;
  }
  if (!sub_216A5D48C(v9, a2, (char *)a3)
    || (*((char *)a3 + 23) >= 0 ? (uint64_t v12 = (unsigned __int8 *)a3) : (uint64_t v12 = *(unsigned __int8 **)a3),
        (sub_216A5D48C(v12, v10, v11) & 1) == 0))
  {
    if (__dst[23] < 0) {
      operator delete(*(void **)__dst);
    }
    *(void *)__dst = 0;
    *((void *)__dst + 1) = 0;
    *((void *)__dst + 2) = 0;
    if (__dst[47] < 0) {
      operator delete(*v7);
    }
    const char *v7 = 0;
    *((void *)__dst + 4) = 0;
    *((void *)__dst + 5) = 0;
  }
  return __dst;
}

void sub_216A5D6D8(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::SdfAssetPath::operator<(const void **a1, const void **a2)
{
  int v4 = *((char *)a2 + 23);
  int v5 = *((char *)a1 + 23);
  if (v5 >= 0) {
    size_t v6 = *((unsigned __int8 *)a1 + 23);
  }
  else {
    size_t v6 = (size_t)a1[1];
  }
  if (v5 >= 0) {
    uint64_t v7 = a1;
  }
  else {
    uint64_t v7 = *a1;
  }
  if (v4 >= 0) {
    size_t v8 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    size_t v8 = (size_t)a2[1];
  }
  if (v4 >= 0) {
    uint64_t v9 = a2;
  }
  else {
    uint64_t v9 = *a2;
  }
  if (v8 >= v6) {
    size_t v10 = v6;
  }
  else {
    size_t v10 = v8;
  }
  int v11 = memcmp(v7, v9, v10);
  BOOL v12 = v6 < v8;
  if (v11) {
    BOOL v12 = v11 < 0;
  }
  if (v12) {
    return 1;
  }
  int v14 = memcmp(v9, v7, v10);
  BOOL v15 = v8 < v6;
  if (v14) {
    BOOL v15 = v14 < 0;
  }
  if (v15) {
    return 0;
  }
  uint64_t v18 = (const void **)a2[3];
  BOOL v17 = a2 + 3;
  BOOL v16 = v18;
  int v19 = *((char *)v17 + 23);
  char v22 = (const void **)a1[3];
  long long v21 = a1 + 3;
  uint64_t v20 = v22;
  int v23 = *((char *)v21 + 23);
  if (v23 >= 0) {
    size_t v24 = *((unsigned __int8 *)v21 + 23);
  }
  else {
    size_t v24 = (size_t)v21[1];
  }
  if (v23 >= 0) {
    uint64_t v25 = v21;
  }
  else {
    uint64_t v25 = v20;
  }
  if (v19 >= 0) {
    size_t v26 = *((unsigned __int8 *)v17 + 23);
  }
  else {
    size_t v26 = (size_t)v17[1];
  }
  if (v19 >= 0) {
    int64x2_t v27 = v17;
  }
  else {
    int64x2_t v27 = v16;
  }
  if (v26 >= v24) {
    size_t v28 = v24;
  }
  else {
    size_t v28 = v26;
  }
  int v29 = memcmp(v25, v27, v28);
  if (v29) {
    return v29 < 0;
  }
  else {
    return v24 < v26;
  }
}

uint64_t *sub_216A5D8A4()
{
  sub_216851EE4((uint64_t)&v8, "Tf", "TfType::Define");
  int v5 = 0;
  size_t v6 = 0;
  uint64_t v7 = 0;
  pxrInternal__aapl__pxrReserved__::TfType::GetCanonicalTypeName((pxrInternal__aapl__pxrReserved__::TfType *)&stru_26C755240, (uint64_t)__p);
  v0 = pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p, (char **)&v5, 0);
  pxrInternal__aapl__pxrReserved__::TfType::_DefineCppType((pxrInternal__aapl__pxrReserved__::TfType *)v0, &stru_26C755240, (char *)0x30, 0, 0);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  if (v5)
  {
    size_t v6 = v5;
    operator delete(v5);
  }
  while (v9--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v8);
  return v0;
}

void sub_216A5D964(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a15) {
    operator delete(a15);
  }
  sub_21684E6B8(v16 - 32);
  _Unwind_Resume(a1);
}

uint64_t *sub_216A5D9A8()
{
  sub_216851EE4((uint64_t)&v8, "Tf", "TfType::Define");
  int v5 = 0;
  size_t v6 = 0;
  uint64_t v7 = 0;
  pxrInternal__aapl__pxrReserved__::TfType::GetCanonicalTypeName((pxrInternal__aapl__pxrReserved__::TfType *)&stru_26C755250, (uint64_t)__p);
  v0 = pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p, (char **)&v5, 0);
  pxrInternal__aapl__pxrReserved__::TfType::_DefineCppType((pxrInternal__aapl__pxrReserved__::TfType *)v0, &stru_26C755250, (char *)0x28, 0, 0);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  if (v5)
  {
    size_t v6 = v5;
    operator delete(v5);
  }
  while (v9--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v8);
  return v0;
}

void sub_216A5DA68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a15) {
    operator delete(a15);
  }
  sub_21684E6B8(v16 - 32);
  _Unwind_Resume(a1);
}

void sub_216A5DAAC(uint64_t *a1@<X0>, char *a2@<X2>, void *a3@<X8>)
{
  uint64_t v4 = a1[1];
  if ((v4 & 4) != 0) {
    uint64_t v5 = (*(uint64_t (**)(void))((v4 & 0xFFFFFFFFFFFFFFF8) + 168))();
  }
  else {
    uint64_t v5 = *a1;
  }
  pxrInternal__aapl__pxrReserved__::SdfAssetPath::SdfAssetPath((char *)v6, v5, a2);
  a3[1] = &off_26C755A30;
  sub_2169B3DA8(a3, (long long *)v6);
  if (v9 < 0) {
    operator delete(__p);
  }
  if (v7 < 0) {
    operator delete(v6[0]);
  }
}

void sub_216A5DB34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_216A5DB48(unsigned __int8 **a1, uint64_t a2, char *a3)
{
  int v3 = (char *)*a1;
  if (((char)**a1 & 0x80000000) == 0)
  {
    *a1 = (unsigned __int8 *)(v3 + 1);
    return *v3;
  }
  uint64_t v4 = **a1;
  if ((v4 & 0xE0) == 0xC0)
  {
    unsigned int v6 = 2;
    int v7 = -225;
    goto LABEL_9;
  }
  if ((v4 & 0xF0) == 0xE0)
  {
    unsigned int v6 = 3;
    int v7 = -241;
    goto LABEL_9;
  }
  if ((v4 & 0xF8) == 0xF0)
  {
    unsigned int v6 = 4;
    int v7 = -249;
LABEL_9:
    uint64_t v8 = 0;
    LODWORD(v4) = v7 & v4;
    char v9 = v3 + 1;
    while (1)
    {
      char v11 = *v9++;
      char v10 = v11;
      if ((v11 & 0xC0) != 0x80) {
        break;
      }
      uint64_t v4 = v10 & 0x3Fu | (v4 << 6);
      v8 += 0x100000000;
      if (((unint64_t)v6 << 32) - 0x100000000 == v8)
      {
        *a1 = (unsigned __int8 *)&v3[v6];
        return v4;
      }
    }
    pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%d-byte UTF-8 code point lacks %s continuation byte", (const char *)a2, a3, v6, *(char **)((char *)off_264294490 + (v8 >> 29)));
    goto LABEL_15;
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"invalid UTF-8 code point byte 0x%hhx", (const char *)a2, a3, v4);
LABEL_15:
  if (*(char *)(a2 + 23) < 0) {
    operator delete(*(void **)a2);
  }
  *(_OWORD *)a2 = v13;
  *(void *)(a2 + 16) = v14;
  return 0xFFFFFFFFLL;
}

void sub_216A5DC80()
{
}

void pxrInternal__aapl__pxrReserved__::SdfAttributeSpec::New(pxrInternal__aapl__pxrReserved__::Sdf_Identity **a1@<X0>, uint64_t a2@<X1>, pxrInternal__aapl__pxrReserved__::SdfValueTypeName *a3@<X2>, int a4@<W3>, char a5@<W4>, void *a6@<X8>)
{
  int v38 = a4;
  char v37 = a5;
  *a6 = 0;
  if (pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant(a1))
  {
    unint64_t v32 = (unint64_t)"sdf/attributeSpec.cpp";
    uint64_t v33 = "New";
    uint64_t v34 = 61;
    uint64_t v35 = "static SdfAttributeSpecHandle pxrInternal__aapl__pxrReserved__::SdfAttributeSpec::New(const SdfPrimSpecHandle "
          "&, const std::string &, const SdfValueTypeName &, SdfVariability, BOOL)";
    char v36 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v32, 1, (pxrInternal__aapl__pxrReserved__ *)"Cannot create an SdfAttributeSpec with a null owner");
    return;
  }
  pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)a1, &v32);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(&v28);
  pxrInternal__aapl__pxrReserved__::SdfPath::AppendProperty((pxrInternal__aapl__pxrReserved__::SdfPath *)&v32, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v28, &v30);
  if ((v28 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v28 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v32 + 1);
  sub_21697C414(&v32);
  if (pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator BOOL(&v30))
  {
    if (!pxrInternal__aapl__pxrReserved__::SdfValueTypeName::_IsEmpty(a3))
    {
      pxrInternal__aapl__pxrReserved__::SdfSpec::GetLayer((uint64_t **)a1, &v28);
      if (!*(unsigned char *)(sub_2169791E0(&v28) + 515)) {
        goto LABEL_18;
      }
      char v10 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(&v28);
      uint64_t Schema = pxrInternal__aapl__pxrReserved__::SdfLayer::GetSchema(v10);
      AsToken = (pxrInternal__aapl__pxrReserved__::TfToken *)pxrInternal__aapl__pxrReserved__::SdfValueTypeName::GetAsToken((uint64_t)a3, (atomic_uint **)&v32);
      if ((v32 & 0xFFFFFFFFFFFFFFF8) == 0) {
        pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(AsToken);
      }
      uint64_t Type = pxrInternal__aapl__pxrReserved__::SdfSchemaBase::FindType(Schema);
      if ((v32 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v32 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if (!pxrInternal__aapl__pxrReserved__::SdfValueTypeName::_IsEmpty((pxrInternal__aapl__pxrReserved__::SdfValueTypeName *)&Type))
      {
LABEL_18:
        pxrInternal__aapl__pxrReserved__::SdfChangeBlock::SdfChangeBlock((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)&Type);
        pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_AttributeChildPolicy>::CreateSpec();
      }
      unint64_t v32 = (unint64_t)"sdf/attributeSpec.cpp";
      uint64_t v33 = "New";
      uint64_t v34 = 102;
      uint64_t v35 = "static SdfAttributeSpecHandle pxrInternal__aapl__pxrReserved__::SdfAttributeSpec::New(const SdfPrimSpecHandl"
            "e &, const std::string &, const SdfValueTypeName &, SdfVariability, BOOL)";
      char v36 = 0;
      Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v30);
      pxrInternal__aapl__pxrReserved__::SdfValueTypeName::GetAsToken((uint64_t)a3, (atomic_uint **)&v26);
      unint64_t v14 = v26 & 0xFFFFFFFFFFFFFFF8;
      if ((v26 & 0xFFFFFFFFFFFFFFF8) != 0)
      {
        BOOL v15 = (const char *)(v14 + 16);
        if (*(char *)(v14 + 39) < 0) {
          BOOL v15 = *(const char **)v15;
        }
      }
      else
      {
        BOOL v15 = "";
      }
      pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v32, 1, (pxrInternal__aapl__pxrReserved__ *)"Cannot create attribute spec <%s> with type '%s' not supported by schema", Text, v15);
      if ((v26 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v26 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v16 = v29;
      if (v29)
      {
        if (atomic_fetch_add_explicit((atomic_uint *volatile)(v29 + 8), 0xFFFFFFFF, memory_order_release) == 1) {
          (*(void (**)(uint64_t))(*(void *)v16 + 8))(v16);
        }
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v31);
      goto LABEL_26;
    }
    unint64_t v32 = (unint64_t)"sdf/attributeSpec.cpp";
    uint64_t v33 = "New";
    uint64_t v34 = 90;
    uint64_t v35 = "static SdfAttributeSpecHandle pxrInternal__aapl__pxrReserved__::SdfAttributeSpec::New(const SdfPrimSpecHandle "
          "&, const std::string &, const SdfValueTypeName &, SdfVariability, BOOL)";
    char v36 = 0;
    char v9 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v30);
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v32, 1, (pxrInternal__aapl__pxrReserved__ *)"Cannot create attribute spec <%s> with invalid type", v9);
  }
  else
  {
    if (MEMORY[0x21D444980](a2))
    {
      Path = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)a1, &v32);
      uint64_t v18 = (uint64_t *)pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath(Path);
      unint64_t v19 = v32;
      uint64_t v20 = *v18;
      sub_21697B754(&v32);
      if (v19 == v20)
      {
        unint64_t v32 = (unint64_t)"sdf/attributeSpec.cpp";
        uint64_t v33 = "New";
        uint64_t v34 = 78;
        uint64_t v35 = "static SdfAttributeSpecHandle pxrInternal__aapl__pxrReserved__::SdfAttributeSpec::New(const SdfPrimSpecHan"
              "dle &, const std::string &, const SdfValueTypeName &, SdfVariability, BOOL)";
        char v36 = 0;
        if (*(char *)(a2 + 23) >= 0) {
          long long v21 = (const char *)a2;
        }
        else {
          long long v21 = *(const char **)a2;
        }
        pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v32, 1, (pxrInternal__aapl__pxrReserved__ *)"Cannot create attribute spec '%s' on the pseudo-root '/'", v21);
        goto LABEL_8;
      }
      unint64_t v32 = (unint64_t)"sdf/attributeSpec.cpp";
      uint64_t v33 = "New";
      uint64_t v34 = 83;
      uint64_t v35 = "static SdfAttributeSpecHandle pxrInternal__aapl__pxrReserved__::SdfAttributeSpec::New(const SdfPrimSpecHandl"
            "e &, const std::string &, const SdfValueTypeName &, SdfVariability, BOOL)";
      char v36 = 0;
      if (*(char *)(a2 + 23) >= 0) {
        size_t v24 = (const char *)a2;
      }
      else {
        size_t v24 = *(const char **)a2;
      }
      pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)a1, &v28);
      uint64_t v25 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v28);
      pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v32, 1, (pxrInternal__aapl__pxrReserved__ *)"Cannot create attribute spec '%s' on <%s>", v24, v25);
    }
    else
    {
      unint64_t v32 = (unint64_t)"sdf/attributeSpec.cpp";
      uint64_t v33 = "New";
      uint64_t v34 = 73;
      uint64_t v35 = "static SdfAttributeSpecHandle pxrInternal__aapl__pxrReserved__::SdfAttributeSpec::New(const SdfPrimSpecHandl"
            "e &, const std::string &, const SdfValueTypeName &, SdfVariability, BOOL)";
      char v36 = 0;
      pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)a1, &v28);
      char v22 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v28);
      if (*(char *)(a2 + 23) >= 0) {
        int v23 = (const char *)a2;
      }
      else {
        int v23 = *(const char **)a2;
      }
      pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v32, 1, (pxrInternal__aapl__pxrReserved__ *)"Cannot create attribute spec on <%s> with invalid name '%s'", v22, v23);
    }
    sub_21697B754(&v28);
  }
LABEL_8:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v31);
LABEL_26:
  sub_21697C414(&v30);
}

void sub_216A5E25C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va1, a5);
  va_start(va, a5);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  sub_21697BEF0((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)va);
  uint64_t v7 = v11;
  if (v11)
  {
    if (atomic_fetch_add_explicit((atomic_uint *volatile)(v11 + 8), 0xFFFFFFFF, memory_order_release) == 1) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
  }
  sub_21697B754(va1);
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v5);
  _Unwind_Resume(a1);
}

BOOL sub_216A5E3D8(pxrInternal__aapl__pxrReserved__::Sdf_Identity **a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, unsigned char *a3)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  unsigned int v6 = &unk_26C7501AB;
  v5[0] = *a3;
  BOOL v3 = pxrInternal__aapl__pxrReserved__::SdfSpec::SetField(a1, a2, (const pxrInternal__aapl__pxrReserved__::VtValue *)v5);
  sub_2168EE084((uint64_t)v5);
  return v3;
}

void sub_216A5E458(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_2168EE084((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL sub_216A5E46C(pxrInternal__aapl__pxrReserved__::Sdf_Identity **a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3)
{
  v7[2] = *MEMORY[0x263EF8340];
  uint64_t v3 = *a3;
  v7[0] = v3;
  v7[1] = (char *)&off_26C750C70 + 1;
  if ((v3 & 7) != 0)
  {
    uint64_t v4 = (atomic_uint *)(v3 & 0xFFFFFFFFFFFFFFF8);
    if ((atomic_fetch_add_explicit(v4, 2u, memory_order_relaxed) & 1) == 0) {
      v7[0] = v4;
    }
  }
  BOOL v5 = pxrInternal__aapl__pxrReserved__::SdfSpec::SetField(a1, a2, (const pxrInternal__aapl__pxrReserved__::VtValue *)v7);
  sub_2168EE084((uint64_t)v7);
  return v5;
}

void sub_216A5E504(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_2168EE084((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL sub_216A5E518(pxrInternal__aapl__pxrReserved__::Sdf_Identity **a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, int *a3)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  unsigned int v6 = (char *)&off_26C756E60 + 3;
  int v5 = *a3;
  BOOL v3 = pxrInternal__aapl__pxrReserved__::SdfSpec::SetField(a1, a2, (const pxrInternal__aapl__pxrReserved__::VtValue *)&v5);
  sub_2168EE084((uint64_t)&v5);
  return v3;
}

void sub_216A5E598(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_2168EE084((uint64_t)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::SdfAttributeSpec::GetConnectionPathList(atomic_uint **this@<X0>, void *a2@<X8>)
{
  sub_216A5E64C(this, &v4);
  int v5 = v4;
  if (v4) {
    atomic_fetch_add(v4, 1u);
  }
  BOOL v3 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v3) {
    BOOL v3 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  }
  pxrInternal__aapl__pxrReserved__::SdfGetPathEditorProxy(&v5, (uint64_t *)v3 + 7, a2);
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec((pxrInternal__aapl__pxrReserved__::SdfSpec *)&v5);
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec((pxrInternal__aapl__pxrReserved__::SdfSpec *)&v4);
}

void sub_216A5E630(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
}

void sub_216A5E64C(atomic_uint **a1@<X0>, atomic_uint **a2@<X8>)
{
  if (!a1)
  {
    uint64_t v4 = 0;
    goto LABEL_6;
  }
  uint64_t v2 = *a1;
  uint64_t v4 = v2;
  if (!v2)
  {
LABEL_6:
    *a2 = 0;
    goto LABEL_7;
  }
  atomic_fetch_add(v2, 1u);
  BOOL v3 = v4;
  *a2 = v4;
  if (v3) {
    atomic_fetch_add(v3, 1u);
  }
LABEL_7:
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec((pxrInternal__aapl__pxrReserved__::SdfSpec *)&v4);
}

uint64_t pxrInternal__aapl__pxrReserved__::SdfAttributeSpec::HasConnectionPaths(atomic_uint **this)
{
  pxrInternal__aapl__pxrReserved__::SdfAttributeSpec::GetConnectionPathList(this, &v3);
  if (sub_2169918D8((uint64_t)&v3)) {
    uint64_t v1 = sub_216991F78(v3);
  }
  else {
    uint64_t v1 = 1;
  }
  if (v4) {
    sub_216784EC4(v4);
  }
  return v1;
}

void sub_216A5E700(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_216784EC4(a10);
  }
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::SdfAttributeSpec::ClearConnectionPaths(atomic_uint **this)
{
  pxrInternal__aapl__pxrReserved__::SdfAttributeSpec::GetConnectionPathList(this, &v1);
  if (sub_216A5F518((uint64_t)&v1)) {
    (*(void (**)(uint64_t))(*(void *)v1 + 48))(v1);
  }
  if (v2) {
    sub_216784EC4(v2);
  }
}

void sub_216A5E784(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_216784EC4(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::SdfAttributeSpec::GetAllowedTokens@<X0>(pxrInternal__aapl__pxrReserved__::Sdf_Identity **this@<X0>, uint64_t a2@<X8>)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  uint64_t v4 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v4) {
    uint64_t v4 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  }
  pxrInternal__aapl__pxrReserved__::SdfSpec::GetField(this, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v4 + 8), (pxrInternal__aapl__pxrReserved__::VtValue *)v13);
  if (v14 && (sub_21699807C((pxrInternal__aapl__pxrReserved__::VtValue *)v13) & 1) != 0)
  {
    uint64_t v5 = sub_216A5E8D4((pxrInternal__aapl__pxrReserved__::VtValue *)v13);
  }
  else
  {
    uint64_t Schema = (pxrInternal__aapl__pxrReserved__::SdfSchemaBase *)pxrInternal__aapl__pxrReserved__::SdfSpec::GetSchema(this);
    uint64_t v7 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    if (!v7) {
      uint64_t v7 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    Fallback = (pxrInternal__aapl__pxrReserved__::VtValue *)pxrInternal__aapl__pxrReserved__::SdfSchemaBase::GetFallback(Schema, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v7 + 8));
    uint64_t v5 = sub_216A5E8D4(Fallback);
  }
  long long v9 = *(_OWORD *)(v5 + 16);
  *(_OWORD *)a2 = *(_OWORD *)v5;
  *(_OWORD *)(a2 + 16) = v9;
  uint64_t v10 = *(void *)(v5 + 32);
  *(void *)(a2 + 32) = v10;
  if (v10)
  {
    uint64_t v11 = (atomic_ullong *)(v10 - 16);
    if (*(void *)(a2 + 24)) {
      uint64_t v11 = *(atomic_ullong **)(a2 + 24);
    }
    atomic_fetch_add_explicit(v11, 1uLL, memory_order_relaxed);
  }
  return sub_2168EE084((uint64_t)v13);
}

void sub_216A5E8B4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_2168EE084((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_216A5E8D4(pxrInternal__aapl__pxrReserved__::VtValue *a1)
{
  if (sub_21699807C(a1))
  {
    uint64_t v2 = *((void *)a1 + 1);
    if ((v2 & 4) != 0)
    {
      uint64_t v4 = *(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v2 & 0xFFFFFFFFFFFFFFF8) + 168);
      return v4(a1);
    }
    else
    {
      return *(void *)a1;
    }
  }
  else
  {
    return pxrInternal__aapl__pxrReserved__::VtValue::_FailGet((uint64_t)a1, (void (*)(void **__return_ptr))sub_216A5F590, (uint64_t)&stru_26C74E298);
  }
}

BOOL pxrInternal__aapl__pxrReserved__::SdfAttributeSpec::SetAllowedTokens(pxrInternal__aapl__pxrReserved__::Sdf_Identity **a1, uint64_t a2)
{
  uint64_t v4 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v4) {
    uint64_t v4 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  }

  return sub_216A5F62C(a1, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v4 + 8), a2);
}

pxrInternal__aapl__pxrReserved__::Sdf_Identity *pxrInternal__aapl__pxrReserved__::SdfAttributeSpec::HasAllowedTokens(pxrInternal__aapl__pxrReserved__::Sdf_Identity **this)
{
  uint64_t v2 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v2) {
    uint64_t v2 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  }

  return pxrInternal__aapl__pxrReserved__::SdfSpec::HasField(this, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v2 + 8));
}

BOOL pxrInternal__aapl__pxrReserved__::SdfAttributeSpec::ClearAllowedTokens(pxrInternal__aapl__pxrReserved__::Sdf_Identity **this)
{
  uint64_t v2 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v2) {
    uint64_t v2 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  }

  return pxrInternal__aapl__pxrReserved__::SdfSpec::ClearField(this, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v2 + 8));
}

uint64_t pxrInternal__aapl__pxrReserved__::SdfAttributeSpec::GetColorSpace@<X0>(pxrInternal__aapl__pxrReserved__::Sdf_Identity **this@<X0>, atomic_uint **a2@<X8>)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v4 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v4) {
    uint64_t v4 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  }
  pxrInternal__aapl__pxrReserved__::SdfSpec::GetField(this, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v4 + 40), (pxrInternal__aapl__pxrReserved__::VtValue *)v12);
  if (v13 && (sub_21695DC44((pxrInternal__aapl__pxrReserved__::VtValue *)v12) & 1) != 0)
  {
    uint64_t v5 = (atomic_uint **)sub_21695C470((pxrInternal__aapl__pxrReserved__::VtValue *)v12);
  }
  else
  {
    uint64_t Schema = (pxrInternal__aapl__pxrReserved__::SdfSchemaBase *)pxrInternal__aapl__pxrReserved__::SdfSpec::GetSchema(this);
    uint64_t v7 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    if (!v7) {
      uint64_t v7 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    Fallback = (pxrInternal__aapl__pxrReserved__::VtValue *)pxrInternal__aapl__pxrReserved__::SdfSchemaBase::GetFallback(Schema, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v7 + 40));
    uint64_t v5 = (atomic_uint **)sub_21695C470(Fallback);
  }
  long long v9 = *v5;
  *a2 = *v5;
  if ((v9 & 7) != 0)
  {
    uint64_t v10 = (atomic_uint *)((unint64_t)v9 & 0xFFFFFFFFFFFFFFF8);
    if ((atomic_fetch_add_explicit(v10, 2u, memory_order_relaxed) & 1) == 0) {
      *a2 = v10;
    }
  }
  return sub_2168EE084((uint64_t)v12);
}

void sub_216A5EB88(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_2168EE084((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL pxrInternal__aapl__pxrReserved__::SdfAttributeSpec::SetColorSpace(pxrInternal__aapl__pxrReserved__::Sdf_Identity **this, const pxrInternal__aapl__pxrReserved__::TfToken *a2)
{
  uint64_t v4 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v4) {
    uint64_t v4 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  }

  return sub_216A5E46C(this, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v4 + 40), (uint64_t *)a2);
}

pxrInternal__aapl__pxrReserved__::Sdf_Identity *pxrInternal__aapl__pxrReserved__::SdfAttributeSpec::HasColorSpace(pxrInternal__aapl__pxrReserved__::Sdf_Identity **this)
{
  uint64_t v2 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v2) {
    uint64_t v2 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  }

  return pxrInternal__aapl__pxrReserved__::SdfSpec::HasField(this, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v2 + 40));
}

BOOL pxrInternal__aapl__pxrReserved__::SdfAttributeSpec::ClearColorSpace(pxrInternal__aapl__pxrReserved__::Sdf_Identity **this)
{
  uint64_t v2 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v2) {
    uint64_t v2 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  }

  return pxrInternal__aapl__pxrReserved__::SdfSpec::ClearField(this, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v2 + 40));
}

uint64_t pxrInternal__aapl__pxrReserved__::SdfAttributeSpec::GetDisplayUnit(pxrInternal__aapl__pxrReserved__::Sdf_Identity **this)
{
  uint64_t v4 = MEMORY[0x263F8C258];
  LODWORD(v5) = 0;
  uint64_t v2 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v2) {
    uint64_t v2 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  }
  v6[1] = (uint64_t (**)(void, uint64_t))&v4;
  void v6[2] = (uint64_t (**)(void, uint64_t))&stru_26C74BC40;
  __int16 v7 = 0;
  v6[0] = (uint64_t (**)(void, uint64_t))&unk_26C757F98;
  if (pxrInternal__aapl__pxrReserved__::SdfSpec::_HasField(this, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v2 + 128), v6))return v4; {
  v6[0] = (uint64_t (**)(void, uint64_t))pxrInternal__aapl__pxrReserved__::SdfPropertySpec::GetTypeName(this);
  }
  return *(void *)pxrInternal__aapl__pxrReserved__::SdfValueTypeName::GetDefaultUnit((pxrInternal__aapl__pxrReserved__::SdfValueTypeName *)v6);
}

atomic_uint **pxrInternal__aapl__pxrReserved__::SdfAttributeSpec::GetRoleName@<X0>(pxrInternal__aapl__pxrReserved__::Sdf_Identity **this@<X0>, atomic_uint **a2@<X8>)
{
  uint64_t TypeName = pxrInternal__aapl__pxrReserved__::SdfPropertySpec::GetTypeName(this);
  double result = (atomic_uint **)pxrInternal__aapl__pxrReserved__::SdfValueTypeName::GetRole((pxrInternal__aapl__pxrReserved__::SdfValueTypeName *)&TypeName);
  uint64_t v4 = *result;
  *a2 = *result;
  if ((v4 & 7) != 0)
  {
    uint64_t v5 = (atomic_uint *)((unint64_t)v4 & 0xFFFFFFFFFFFFFFF8);
    if ((atomic_fetch_add_explicit(v5, 2u, memory_order_relaxed) & 1) == 0) {
      *a2 = v5;
    }
  }
  return result;
}

BOOL pxrInternal__aapl__pxrReserved__::SdfAttributeSpec::SetDisplayUnit(pxrInternal__aapl__pxrReserved__::Sdf_Identity **this, const pxrInternal__aapl__pxrReserved__::TfEnum *a2)
{
  uint64_t v4 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v4) {
    uint64_t v4 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  }

  return sub_216A5F9F0(this, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v4 + 128), a2);
}

pxrInternal__aapl__pxrReserved__::Sdf_Identity *pxrInternal__aapl__pxrReserved__::SdfAttributeSpec::HasDisplayUnit(pxrInternal__aapl__pxrReserved__::Sdf_Identity **this)
{
  uint64_t v2 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v2) {
    uint64_t v2 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  }

  return pxrInternal__aapl__pxrReserved__::SdfSpec::HasField(this, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v2 + 128));
}

BOOL pxrInternal__aapl__pxrReserved__::SdfAttributeSpec::ClearDisplayUnit(pxrInternal__aapl__pxrReserved__::Sdf_Identity **this)
{
  uint64_t v2 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v2) {
    uint64_t v2 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  }

  return pxrInternal__aapl__pxrReserved__::SdfSpec::ClearField(this, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v2 + 128));
}

uint64_t pxrInternal__aapl__pxrReserved__::SdfJustCreatePrimAttributeInLayer(uint64_t a1, pxrInternal__aapl__pxrReserved__::SdfPath *this, uint64_t a3, int a4, char a5)
{
  int v16 = a4;
  char v15 = a5;
  if (pxrInternal__aapl__pxrReserved__::SdfPath::IsPrimPropertyPath(this))
  {
    if (*(void *)(a1 + 8))
    {
      if (*(unsigned char *)(sub_216850B68((uint64_t *)(a1 + 8)) + 14)) {
        __int16 v7 = *(pxrInternal__aapl__pxrReserved__ **)a1;
      }
      else {
        __int16 v7 = 0;
      }
    }
    else
    {
      __int16 v7 = 0;
    }
    pxrInternal__aapl__pxrReserved__::SdfChangeBlock::SdfChangeBlock((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)v12);
    pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath(this, v13);
    char PrimInLayer = pxrInternal__aapl__pxrReserved__::Sdf_UncheckedCreatePrimInLayer(v7, (pxrInternal__aapl__pxrReserved__::SdfLayer *)v13, v8);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v13 + 1);
    sub_21697C414(v13);
    if (PrimInLayer) {
      pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_AttributeChildPolicy>::CreateSpec();
    }
    sub_21697BEF0((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)v12);
  }
  else
  {
    v13[0] = "sdf/attributeSpec.cpp";
    v13[1] = "SdfJustCreatePrimAttributeInLayer";
    int v13[2] = 212;
    void v13[3] = "BOOL pxrInternal__aapl__pxrReserved__::SdfJustCreatePrimAttributeInLayer(const SdfLayerHandle &, const SdfP"
             "ath &, const SdfValueTypeName &, SdfVariability, BOOL)";
    char v14 = 0;
    Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText(this);
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v13, 1, (pxrInternal__aapl__pxrReserved__ *)"Cannot create prim attribute at path '%s' because it is not a prim property path", Text);
  }
  return 0;
}

void sub_216A5F148(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13)
{
  if ((a13 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(a13 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  sub_21697BEF0((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)&a12);
  _Unwind_Resume(a1);
}

uint64_t sub_216A5F19C(pxrInternal__aapl__pxrReserved__::SdfLayer *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, unsigned char *a4)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  unsigned int v6 = &unk_26C7501AB;
  v5[0] = *a4;
  pxrInternal__aapl__pxrReserved__::SdfLayer::SetField(a1, a2, a3, (const pxrInternal__aapl__pxrReserved__::VtValue *)v5);
  return sub_2168EE084((uint64_t)v5);
}

void sub_216A5F214(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_2168EE084((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_216A5F228(pxrInternal__aapl__pxrReserved__::SdfLayer *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4)
{
  v7[2] = *MEMORY[0x263EF8340];
  uint64_t v4 = *a4;
  v7[0] = v4;
  v7[1] = (char *)&off_26C750C70 + 1;
  if ((v4 & 7) != 0)
  {
    uint64_t v5 = (atomic_uint *)(v4 & 0xFFFFFFFFFFFFFFF8);
    if ((atomic_fetch_add_explicit(v5, 2u, memory_order_relaxed) & 1) == 0) {
      v7[0] = v5;
    }
  }
  pxrInternal__aapl__pxrReserved__::SdfLayer::SetField(a1, a2, a3, (const pxrInternal__aapl__pxrReserved__::VtValue *)v7);
  return sub_2168EE084((uint64_t)v7);
}

void sub_216A5F2B8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_2168EE084((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_216A5F2CC(pxrInternal__aapl__pxrReserved__::SdfLayer *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, int *a4)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  unsigned int v6 = (char *)&off_26C756E60 + 3;
  int v5 = *a4;
  pxrInternal__aapl__pxrReserved__::SdfLayer::SetField(a1, a2, a3, (const pxrInternal__aapl__pxrReserved__::VtValue *)&v5);
  return sub_2168EE084((uint64_t)&v5);
}

void sub_216A5F344(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_2168EE084((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_216A5F358()
{
  sub_216851EE4((uint64_t)&v6, "Tf", "TfType::Define");
  sub_216A5F484((unint64_t **)v5);
  pxrInternal__aapl__pxrReserved__::TfType::GetCanonicalTypeName((pxrInternal__aapl__pxrReserved__::TfType *)&stru_26C757F70, (uint64_t)__p);
  v0 = pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p, (char **)v5, 0);
  pxrInternal__aapl__pxrReserved__::TfType::_DefineCppType((pxrInternal__aapl__pxrReserved__::TfType *)v0, &stru_26C757F70, (char *)8, 0, 0);
  pxrInternal__aapl__pxrReserved__::TfType::_AddCppCastFunc((pxrInternal__aapl__pxrReserved__::TfType *)v0, &stru_26C757F58, (void *(*)(void *, BOOL))nullsub_228);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  if (v5[0])
  {
    v5[1] = v5[0];
    operator delete(v5[0]);
  }
  while (v7--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v6);
  return v0;
}

void sub_216A5F438(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a15) {
    operator delete(a15);
  }
  sub_21684E6B8(v16 - 32);
  _Unwind_Resume(a1);
}

void sub_216A5F484(unint64_t **a1@<X8>)
{
  pxrInternal__aapl__pxrReserved__::TfType::GetCanonicalTypeName((pxrInternal__aapl__pxrReserved__::TfType *)&unk_26C757F58, (uint64_t)__p);
  unint64_t v2 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p);
  a1[1] = 0;
  a1[2] = 0;
  *a1 = 0;
  uint64_t v3 = (unint64_t *)operator new(8uLL);
  *a1 = v3;
  *v3++ = v2;
  a1[1] = v3;
  a1[2] = v3;
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A5F4F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_216A5F518(uint64_t a1)
{
  if (!*(void *)a1) {
    return 0;
  }
  if (pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)(*(void *)a1 + 8)))
  {
    v2[0] = "sdf/listEditorProxy.h";
    v2[1] = "_Validate";
    v2[2] = 410;
    v2[3] = "BOOL pxrInternal__aapl__pxrReserved__::SdfListEditorProxy<pxrInternal__aapl__pxrReserved__::SdfPathKeyPolicy"
            ">::_Validate() [_TypePolicy = pxrInternal__aapl__pxrReserved__::SdfPathKeyPolicy]";
    char v3 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v2, 1, (pxrInternal__aapl__pxrReserved__ *)"Accessing expired list editor");
    return 0;
  }
  return 1;
}

double sub_216A5F590@<D0>(void *a1@<X8>)
{
  unint64_t v2 = operator new(0x28uLL);
  double result = 0.0;
  *unint64_t v2 = 0u;
  v2[1] = 0u;
  *((void *)v2 + 4) = 0;
  *a1 = v2;
  a1[1] = sub_216A5F5E0;
  a1[2] = &stru_26C74E298;
  return result;
}

void sub_216A5F5E0(void *a1)
{
  if (a1)
  {
    sub_2169B2E0C(a1);
    operator delete(a1);
  }
}

BOOL sub_216A5F62C(pxrInternal__aapl__pxrReserved__::Sdf_Identity **a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3)
{
  v7[2] = *MEMORY[0x263EF8340];
  v7[1] = off_26C755978;
  sub_2168F8DBC(v7, a3);
  BOOL v5 = pxrInternal__aapl__pxrReserved__::SdfSpec::SetField(a1, a2, (const pxrInternal__aapl__pxrReserved__::VtValue *)v7);
  sub_2168EE084((uint64_t)v7);
  return v5;
}

void sub_216A5F6BC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_2168EE084((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_216A5F6D8(uint64_t a1, uint64_t *a2)
{
  if (sub_216A5F7D0((pxrInternal__aapl__pxrReserved__::VtValue *)a2))
  {
    uint64_t v4 = a2[1];
    if ((v4 & 4) != 0) {
      uint64_t v5 = (*(uint64_t (**)(uint64_t *))((v4 & 0xFFFFFFFFFFFFFFF8) + 168))(a2);
    }
    else {
      uint64_t v5 = *a2;
    }
    uint64_t v6 = *(void *)(a1 + 8);
    uint64_t v7 = *(void *)v5;
    *(_DWORD *)(v6 + 8) = *(_DWORD *)(v5 + 8);
    *(void *)uint64_t v6 = v7;
    return 1;
  }
  else
  {
    uint64_t result = sub_216A5F85C((pxrInternal__aapl__pxrReserved__::VtValue *)a2);
    if (result)
    {
      uint64_t result = 1;
      *(unsigned char *)(a1 + 24) = 1;
    }
    else
    {
      *(unsigned char *)(a1 + 25) = 1;
    }
  }
  return result;
}

uint64_t sub_216A5F764(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  if (sub_216A5F7D0(a2))
  {
    uint64_t v4 = sub_216A5F8E8((uint64_t)a2);
    uint64_t v5 = *(void *)(a1 + 8);
    *(void *)uint64_t v5 = v4;
    *(_DWORD *)(v5 + 8) = v6;
    return 1;
  }
  else
  {
    uint64_t result = sub_216A5F85C(a2);
    if (result)
    {
      uint64_t result = 1;
      *(unsigned char *)(a1 + 24) = 1;
    }
    else
    {
      *(unsigned char *)(a1 + 25) = 1;
    }
  }
  return result;
}

uint64_t sub_216A5F7D0(pxrInternal__aapl__pxrReserved__::VtValue *a1)
{
  uint64_t v1 = *((void *)a1 + 1);
  if (!v1) {
    return 0;
  }
  if (!strcmp((const char *)(*(void *)(*(void *)(v1 & 0xFFFFFFFFFFFFFFF8) + 8) & 0x7FFFFFFFFFFFFFFFLL), (const char *)(0x80000002174790FELL & 0x7FFFFFFFFFFFFFFFLL)))return 1; {
  if ((v1 & 4) == 0)
  }
    return 0;

  return pxrInternal__aapl__pxrReserved__::VtValue::_TypeIsImpl(a1, &stru_26C74BC40);
}

uint64_t sub_216A5F85C(pxrInternal__aapl__pxrReserved__::VtValue *a1)
{
  uint64_t v1 = *((void *)a1 + 1);
  if (!v1) {
    return 0;
  }
  if (!strcmp((const char *)(*(void *)(*(void *)(v1 & 0xFFFFFFFFFFFFFFF8) + 8) & 0x7FFFFFFFFFFFFFFFLL), (const char *)(0x80000002174C2EA0 & 0x7FFFFFFFFFFFFFFFLL)))return 1; {
  if ((v1 & 4) == 0)
  }
    return 0;

  return pxrInternal__aapl__pxrReserved__::VtValue::_TypeIsImpl(a1, &stru_26C757FD0);
}

uint64_t sub_216A5F8E8(uint64_t a1)
{
  unint64_t v2 = sub_216A5F95C((atomic_uint **)a1);
  uint64_t v3 = *(void *)v2;
  *(void *)unint64_t v2 = MEMORY[0x263F8C258];
  v2[2] = 0;
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4) {
    BOOL v5 = (*(void *)(a1 + 8) & 3) == 3;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5) {
    (*(void (**)(uint64_t))((v4 & 0xFFFFFFFFFFFFFFF8) + 32))(a1);
  }
  *(void *)(a1 + 8) = 0;
  return v3;
}

atomic_uint *sub_216A5F95C(atomic_uint **a1)
{
  void v4[2] = *MEMORY[0x263EF8340];
  unint64_t v2 = a1[1];
  if ((v2 & 4) != 0)
  {
    (*(void (**)(void *__return_ptr, atomic_uint **))(((unint64_t)v2 & 0xFFFFFFFFFFFFFFF8) + 176))(v4, a1);
    sub_2168ED33C(a1, v4);
    sub_2168EE084((uint64_t)v4);
  }
  return sub_2168F3DDC(a1);
}

BOOL sub_216A5F9F0(pxrInternal__aapl__pxrReserved__::Sdf_Identity **a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, _OWORD *a3)
{
  void v9[2] = *MEMORY[0x263EF8340];
  v9[1] = &off_26C757FE0;
  int v6 = (unsigned int *)operator new(0x18uLL);
  *(_OWORD *)int v6 = *a3;
  atomic_store(0, v6 + 4);
  v9[0] = v6;
  atomic_fetch_add_explicit((atomic_uint *volatile)v6 + 4, 1u, memory_order_relaxed);
  BOOL v7 = pxrInternal__aapl__pxrReserved__::SdfSpec::SetField(a1, a2, (const pxrInternal__aapl__pxrReserved__::VtValue *)v9);
  sub_2168EE084((uint64_t)v9);
  return v7;
}

void sub_216A5FAA4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_2168EE084((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_216A5FAB8(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = *result;
  *a2 = *result;
  if (v2) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 + 16), 1u, memory_order_relaxed);
  }
  return result;
}

void sub_216A5FAD4(atomic_uint **a1)
{
  uint64_t v1 = *a1;
  if (v1)
  {
    if (atomic_fetch_add_explicit(v1 + 4, 0xFFFFFFFF, memory_order_release) == 1)
    {
      __dmb(9u);
      operator delete(v1);
    }
  }
}

void *sub_216A5FAFC(void *result, void *a2)
{
  *a2 = *result;
  *uint64_t result = 0;
  return result;
}

uint64_t sub_216A5FB0C()
{
  return 1;
}

unint64_t sub_216A5FB14(int **a1)
{
  uint64_t v1 = *a1;
  uint64_t v3 = 0;
  char v4 = 0;
  sub_21685F6A4((pxrInternal__aapl__pxrReserved__::Tf_HashState *)&v3, v1);
  return bswap64(0x9E3779B97F4A7C55 * v3);
}

BOOL sub_216A5FB60(_DWORD **a1, _DWORD **a2)
{
  return sub_21685F720(*a1, *a2);
}

BOOL sub_216A5FB6C(_DWORD **a1, _DWORD *a2)
{
  return sub_21685F720(*a1, a2);
}

uint64_t sub_216A5FB78()
{
  return 0;
}

void *sub_216A5FB84(uint64_t **a1, void *a2)
{
  return pxrInternal__aapl__pxrReserved__::operator<<(a2, *a1);
}

void *sub_216A5FB94()
{
  return &unk_26C74BC40;
}

uint64_t sub_216A5FBA0()
{
  return 0;
}

uint64_t sub_216A5FBA8()
{
  return MEMORY[0x263F8C288];
}

uint64_t sub_216A5FBB4()
{
  return 0;
}

uint64_t sub_216A5FBBC()
{
  return 0;
}

BOOL sub_216A5FBC4(uint64_t a1, uint64_t a2)
{
  return strcmp((const char *)(0x80000002174790FELL & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(void *)(a2 + 8) & 0x7FFFFFFFFFFFFFFFLL)) == 0;
}

uint64_t sub_216A5FC00(uint64_t a1, const std::type_info *a2, char *a3)
{
  return *(void *)pxrInternal__aapl__pxrReserved__::TfType::_FindByTypeid((pxrInternal__aapl__pxrReserved__::TfType *)&stru_26C74BC40, a2, a3);
}

void *sub_216A5FC24()
{
  return &unk_26C74BC40;
}

uint64_t sub_216A5FC30(uint64_t a1)
{
  return *(void *)a1;
}

unsigned int *sub_216A5FC38@<X0>(_OWORD **a1@<X0>, unsigned int **a2@<X8>)
{
  uint64_t v3 = *a1;
  a2[1] = (unsigned int *)&off_26C757FE0;
  uint64_t result = (unsigned int *)operator new(0x18uLL);
  *(_OWORD *)uint64_t result = *v3;
  atomic_store(0, result + 4);
  *a2 = result;
  atomic_fetch_add_explicit((atomic_uint *volatile)result + 4, 1u, memory_order_relaxed);
  return result;
}

pxrInternal__aapl__pxrReserved__::SdfChangeBlock *pxrInternal__aapl__pxrReserved__::SdfChangeBlock::SdfChangeBlock(pxrInternal__aapl__pxrReserved__::SdfChangeBlock *this)
{
  uint64_t v2 = (atomic_ullong *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::Sdf_ChangeManager>::_instance);
  if (!v2) {
    pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::Sdf_ChangeManager>::_CreateInstance();
  }
  *(void *)this = pxrInternal__aapl__pxrReserved__::Sdf_ChangeManager::_OpenChangeBlock(v2, (uint64_t)this);
  return this;
}

void pxrInternal__aapl__pxrReserved__::SdfChangeBlock::_CloseChangeBlock(pxrInternal__aapl__pxrReserved__::SdfChangeBlock *this, char *a2)
{
  uint64_t v3 = (pxrInternal__aapl__pxrReserved__::Sdf_ChangeManager *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::Sdf_ChangeManager>::_instance);
  if (!v3) {
    pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::Sdf_ChangeManager>::_CreateInstance();
  }

  pxrInternal__aapl__pxrReserved__::Sdf_ChangeManager::_CloseChangeBlock(v3, this, a2);
}

unint64_t pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfChangeList>::GetInstance()
{
  unint64_t result = atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfChangeList>::_instance);
  if (!result) {
    pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfChangeList>::_CreateInstance();
  }
  return result;
}

unint64_t pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfChangeList>::_CreateInstance(unint64_t *a1)
{
  pxrInternal__aapl__pxrReserved__::ArchGetDemangled((pxrInternal__aapl__pxrReserved__ *)(0x800000021746C09BLL & 0x7FFFFFFFFFFFFFFFLL), (uint64_t)&v12);
  uint64_t v2 = std::string::insert(&v12, 0, "Create Singleton ");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  uint64_t v16 = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)std::string __p = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  sub_216851098((uint64_t)&v13, "Tf", "TfSingleton::_CreateInstance", (char *)__p);
  if (SHIBYTE(v16) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v12.__r_.__value_.__l.__data_);
  }
  if (atomic_exchange(pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfChangeList>::_CreateInstance(std::atomic<pxrInternal__aapl__pxrReserved__::SdfChangeList*> &)::isInitializing, 1u))
  {
    while (!atomic_load(a1))
      sched_yield();
  }
  else
  {
    if (!atomic_load(a1))
    {
      long long v9 = operator new(0xD8uLL);
      v9[25] = 0x100000000;
      v9[26] = 0;
      unint64_t v11 = atomic_load(a1);
      if (v11)
      {
        if (v9 != (void *)v11)
        {
          __p[0] = "tf/instantiateSingleton.h";
          __p[1] = "_CreateInstance";
          uint64_t v16 = 84;
          BOOL v17 = "static T *pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfChangeList>"
                "::_CreateInstance(std::atomic<T *> &) [T = pxrInternal__aapl__pxrReserved__::SdfChangeList]";
          char v18 = 0;
          int v19 = 4;
          pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper::IssueFatalError((pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper *)__p, (pxrInternal__aapl__pxrReserved__ *)"race detected setting singleton instance", v10);
        }
      }
      else if (atomic_exchange((atomic_ullong *volatile)a1, (unint64_t)v9))
      {
        __p[0] = "tf/instantiateSingleton.h";
        __p[1] = "_CreateInstance";
        uint64_t v16 = 88;
        BOOL v17 = "static T *pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfChangeList>::"
              "_CreateInstance(std::atomic<T *> &) [T = pxrInternal__aapl__pxrReserved__::SdfChangeList]";
        char v18 = 0;
        int v19 = 4;
        pxrInternal__aapl__pxrReserved__::Tf_DiagnosticLiteHelper::IssueFatalError((pxrInternal__aapl__pxrReserved__::Tf_DiagnosticLiteHelper *)__p, (pxrInternal__aapl__pxrReserved__ *)"Failed axiom: ' %s '", v10, "instance.exchange(newInst) == nullptr");
      }
    }
    atomic_store(0, (unsigned __int8 *)pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfChangeList>::_CreateInstance(std::atomic<pxrInternal__aapl__pxrReserved__::SdfChangeList*> &)::isInitializing);
  }
  unint64_t v5 = atomic_load(a1);
  while (v14--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v13);
  return v5;
}

void sub_216A5FF18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
}

BOOL pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfChangeList>::CurrentlyExists()
{
  unint64_t v0 = atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfChangeList>::_instance);
  return v0 != 0;
}

unint64_t pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfChangeList>::SetInstanceConstructed(unint64_t result, uint64_t a2, char *a3)
{
  if (atomic_exchange((atomic_ullong *volatile)&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfChangeList>::_instance, result))
  {
    v3[0] = "tf/instantiateSingleton.h";
    v3[1] = "SetInstanceConstructed";
    v3[2] = 56;
    void v3[3] = "static void pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfChangeList>::"
            "SetInstanceConstructed(T &) [T = pxrInternal__aapl__pxrReserved__::SdfChangeList]";
    char v4 = 0;
    int v5 = 4;
    pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper::IssueFatalError((pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper *)v3, (pxrInternal__aapl__pxrReserved__ *)"this function may not be called after GetInstance() or another SetInstanceConstructed() has completed", a3);
  }
  return result;
}

void pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfChangeList>::DeleteInstance()
{
  for (unint64_t i = atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfChangeList>::_instance);
        i;
        unint64_t i = v1)
  {
    unint64_t v1 = i;
    atomic_compare_exchange_strong((atomic_ullong *volatile)&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfChangeList>::_instance, &v1, 0);
    if (v1 == i)
    {
      sub_21697C6F8((uint64_t *)(i + 208), 0);
      uint64_t v2 = sub_21697C7F8((void **)i);
      operator delete(v2);
      return;
    }
    sched_yield();
  }
}

void sub_216A6007C()
{
  sub_216779094(v3, "SdfChangeList::SubLayerAdded");
  std::string __p = 0;
  uint64_t v1 = 0;
  uint64_t v2 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((uint64_t)&unk_26C758098, 0, (uint64_t)v3, (uint64_t)&__p);
  if (SHIBYTE(v2) < 0) {
    operator delete(__p);
  }
  if (v4 < 0) {
    operator delete(v3[0]);
  }
  sub_216779094(v3, "SdfChangeList::SubLayerRemoved");
  std::string __p = 0;
  uint64_t v1 = 0;
  uint64_t v2 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((uint64_t)&unk_26C758098, 1, (uint64_t)v3, (uint64_t)&__p);
  if (SHIBYTE(v2) < 0) {
    operator delete(__p);
  }
  if (v4 < 0) {
    operator delete(v3[0]);
  }
  sub_216779094(v3, "SdfChangeList::SubLayerOffset");
  std::string __p = 0;
  uint64_t v1 = 0;
  uint64_t v2 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((uint64_t)&unk_26C758098, 2, (uint64_t)v3, (uint64_t)&__p);
  if (SHIBYTE(v2) < 0) {
    operator delete(__p);
  }
  if (v4 < 0) {
    operator delete(v3[0]);
  }
}

void sub_216A60190(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

void *pxrInternal__aapl__pxrReserved__::operator<<(void *a1, uint64_t a2, char *a3)
{
  uint64_t v4 = *(void *)a2;
  unsigned int v5 = *(_DWORD *)(a2 + 200);
  if (*(_DWORD *)(a2 + 204) < 2u) {
    uint64_t v4 = a2;
  }
  uint64_t v75 = v4;
  uint64_t v76 = v4 + 200 * v5;
  if (v5)
  {
    do
    {
      int v6 = (pxrInternal__aapl__pxrReserved__::SdfPath *)*sub_216A608EC(&v75, a2, a3);
      uint64_t v9 = *sub_216A608EC(&v75, v7, v8);
      uint64_t v10 = sub_216779180(a1, (uint64_t)"  <", 3);
      unint64_t v11 = pxrInternal__aapl__pxrReserved__::operator<<(v10, v6);
      sub_216779180(v11, (uint64_t)">\n", 2);
      uint64_t v12 = v9 + 8;
      unsigned int v13 = *(_DWORD *)(v9 + 128);
      if (*(_DWORD *)(v9 + 132) >= 4u) {
        uint64_t v12 = *(void *)(v9 + 8);
      }
      uint64_t v73 = v12;
      uint64_t v74 = v12 + 40 * v13;
      if (v13)
      {
        do
        {
          int v14 = sub_216779180(a1, (uint64_t)"   infoKey: ", 12);
          BOOL v17 = sub_216A60968(&v73, v15, v16);
          char v18 = pxrInternal__aapl__pxrReserved__::operator<<(v14, (void *)*v17);
          sub_216779180(v18, (uint64_t)"\n", 1);
          int v19 = sub_216779180(a1, (uint64_t)"     oldValue: ", 15);
          char v22 = sub_216A60968(&v73, v20, v21);
          sub_216928738(*v22 + 8);
          if ((v72 & 0x80u) == 0) {
            p_p = &__p;
          }
          else {
            p_p = __p;
          }
          if ((v72 & 0x80u) == 0) {
            uint64_t v24 = v72;
          }
          else {
            uint64_t v24 = v71;
          }
          uint64_t v25 = sub_216779180(v19, (uint64_t)p_p, v24);
          sub_216779180(v25, (uint64_t)"\n", 1);
          if ((char)v72 < 0) {
            operator delete(__p);
          }
          unint64_t v26 = sub_216779180(a1, (uint64_t)"     newValue: ", 15);
          uint64_t v29 = sub_216A60968(&v73, v27, v28);
          sub_216928738(*v29 + 24);
          if ((v72 & 0x80u) == 0) {
            int v30 = &__p;
          }
          else {
            int v30 = __p;
          }
          if ((v72 & 0x80u) == 0) {
            uint64_t v31 = v72;
          }
          else {
            uint64_t v31 = v71;
          }
          unint64_t v32 = sub_216779180(v26, (uint64_t)v30, v31);
          sub_216779180(v32, (uint64_t)"\n", 1);
          if ((char)v72 < 0) {
            operator delete(__p);
          }
          sub_216A609E4(&v73);
        }
        while (v73 != v74);
      }
      uint64_t v33 = *(void *)(v9 + 136);
      uint64_t v34 = *(void *)(v9 + 144);
      uint64_t v73 = v33;
      uint64_t v74 = v34;
      while (v33 != v34)
      {
        uint64_t v35 = sub_216779180(a1, (uint64_t)"    sublayer ", 13);
        int v38 = (uint64_t **)sub_216A60A64(&v73, v36, v37);
        int v39 = *((char *)*v38 + 23);
        if (v39 >= 0) {
          uint64_t v40 = (uint64_t)*v38;
        }
        else {
          uint64_t v40 = **v38;
        }
        if (v39 >= 0) {
          uint64_t v41 = *((unsigned __int8 *)*v38 + 23);
        }
        else {
          uint64_t v41 = (*v38)[1];
        }
        uint64_t v42 = sub_216779180(v35, v40, v41);
        uint64_t v43 = sub_216779180(v42, (uint64_t)" ", 1);
        uint64_t v46 = sub_216A60A64(&v73, v44, v45);
        pxrInternal__aapl__pxrReserved__::TfEnum::GetName((uint64_t)&unk_26C758098, *(unsigned int *)(*v46 + 24), (uint64_t)&__p);
        if ((v72 & 0x80u) == 0) {
          unsigned __int8 v47 = &__p;
        }
        else {
          unsigned __int8 v47 = __p;
        }
        if ((v72 & 0x80u) == 0) {
          uint64_t v48 = v72;
        }
        else {
          uint64_t v48 = v71;
        }
        unsigned __int8 v49 = sub_216779180(v43, (uint64_t)v47, v48);
        sub_216779180(v49, (uint64_t)"\n", 1);
        if ((char)v72 < 0) {
          operator delete(__p);
        }
        sub_216A60AE0(&v73);
        uint64_t v33 = v73;
        uint64_t v34 = v74;
      }
      if (pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(v9 + 160)))
      {
        uint64_t v50 = sub_216779180(a1, (uint64_t)"   oldPath: <", 13);
        unsigned __int8 v51 = pxrInternal__aapl__pxrReserved__::operator<<(v50, (pxrInternal__aapl__pxrReserved__::SdfPath *)(v9 + 160));
        sub_216779180(v51, (uint64_t)">\n", 2);
      }
      int v52 = *(unsigned __int16 *)(v9 + 192);
      int v53 = v52 | (*(unsigned __int8 *)(v9 + 194) << 16);
      if ((v52 & 0x40) != 0)
      {
        sub_216779180(a1, (uint64_t)"   didRename\n", 13);
        int v54 = *(unsigned __int16 *)(v9 + 192);
        int v53 = v54 | (*(unsigned __int8 *)(v9 + 194) << 16);
        if ((v54 & 1) == 0)
        {
LABEL_45:
          if ((v53 & 2) == 0) {
            goto LABEL_46;
          }
          goto LABEL_71;
        }
      }
      else if ((v52 & 1) == 0)
      {
        goto LABEL_45;
      }
      sub_216779180(a1, (uint64_t)"   didChangeIdentifier\n", 23);
      int v55 = *(unsigned __int16 *)(v9 + 192);
      int v53 = v55 | (*(unsigned __int8 *)(v9 + 194) << 16);
      if ((v55 & 2) == 0)
      {
LABEL_46:
        if ((v53 & 4) == 0) {
          goto LABEL_47;
        }
        goto LABEL_72;
      }
LABEL_71:
      sub_216779180(a1, (uint64_t)"   didChangeResolvedPath\n", 25);
      int v56 = *(unsigned __int16 *)(v9 + 192);
      int v53 = v56 | (*(unsigned __int8 *)(v9 + 194) << 16);
      if ((v56 & 4) == 0)
      {
LABEL_47:
        if ((v53 & 8) == 0) {
          goto LABEL_48;
        }
        goto LABEL_73;
      }
LABEL_72:
      sub_216779180(a1, (uint64_t)"   didReplaceContent\n", 21);
      int v57 = *(unsigned __int16 *)(v9 + 192);
      int v53 = v57 | (*(unsigned __int8 *)(v9 + 194) << 16);
      if ((v57 & 8) == 0)
      {
LABEL_48:
        if ((v53 & 0x10) == 0) {
          goto LABEL_49;
        }
        goto LABEL_74;
      }
LABEL_73:
      sub_216779180(a1, (uint64_t)"   didReloadContent\n", 20);
      int v58 = *(unsigned __int16 *)(v9 + 192);
      int v53 = v58 | (*(unsigned __int8 *)(v9 + 194) << 16);
      if ((v58 & 0x10) == 0)
      {
LABEL_49:
        if ((v53 & 0x20) == 0) {
          goto LABEL_50;
        }
        goto LABEL_75;
      }
LABEL_74:
      sub_216779180(a1, (uint64_t)"   didReorderChildren\n", 22);
      int v59 = *(unsigned __int16 *)(v9 + 192);
      int v53 = v59 | (*(unsigned __int8 *)(v9 + 194) << 16);
      if ((v59 & 0x20) == 0)
      {
LABEL_50:
        if ((v53 & 0x80) == 0) {
          goto LABEL_51;
        }
        goto LABEL_76;
      }
LABEL_75:
      sub_216779180(a1, (uint64_t)"   didReorderProperties\n", 24);
      int v60 = *(unsigned __int16 *)(v9 + 192);
      int v53 = v60 | (*(unsigned __int8 *)(v9 + 194) << 16);
      if ((v60 & 0x80) == 0)
      {
LABEL_51:
        if ((v53 & 0x100) == 0) {
          goto LABEL_52;
        }
        goto LABEL_77;
      }
LABEL_76:
      sub_216779180(a1, (uint64_t)"   didChangePrimVariantSets\n", 28);
      int v61 = *(unsigned __int16 *)(v9 + 192);
      int v53 = v61 | (*(unsigned __int8 *)(v9 + 194) << 16);
      if ((v61 & 0x100) == 0)
      {
LABEL_52:
        if ((v53 & 0x200) == 0) {
          goto LABEL_53;
        }
        goto LABEL_78;
      }
LABEL_77:
      sub_216779180(a1, (uint64_t)"   didChangePrimInheritPaths\n", 29);
      int v62 = *(unsigned __int16 *)(v9 + 192);
      int v53 = v62 | (*(unsigned __int8 *)(v9 + 194) << 16);
      if ((v62 & 0x200) == 0)
      {
LABEL_53:
        if ((v53 & 0x400) == 0) {
          goto LABEL_54;
        }
        goto LABEL_79;
      }
LABEL_78:
      sub_216779180(a1, (uint64_t)"   didChangePrimSpecializes\n", 28);
      int v63 = *(unsigned __int16 *)(v9 + 192);
      int v53 = v63 | (*(unsigned __int8 *)(v9 + 194) << 16);
      if ((v63 & 0x400) == 0)
      {
LABEL_54:
        if ((v53 & 0x800) == 0) {
          goto LABEL_55;
        }
        goto LABEL_80;
      }
LABEL_79:
      sub_216779180(a1, (uint64_t)"   didChangePrimReferences\n", 27);
      int v64 = *(unsigned __int16 *)(v9 + 192);
      int v53 = v64 | (*(unsigned __int8 *)(v9 + 194) << 16);
      if ((v64 & 0x800) == 0)
      {
LABEL_55:
        if ((v53 & 0x1000) == 0) {
          goto LABEL_56;
        }
        goto LABEL_81;
      }
LABEL_80:
      sub_216779180(a1, (uint64_t)"   didChangeAttributeTimeSamples\n", 33);
      int v65 = *(unsigned __int16 *)(v9 + 192);
      int v53 = v65 | (*(unsigned __int8 *)(v9 + 194) << 16);
      if ((v65 & 0x1000) == 0)
      {
LABEL_56:
        if ((v53 & 0x2000) == 0) {
          goto LABEL_57;
        }
        goto LABEL_82;
      }
LABEL_81:
      sub_216779180(a1, (uint64_t)"   didChangeAttributeConnection\n", 32);
      int v66 = *(unsigned __int16 *)(v9 + 192);
      int v53 = v66 | (*(unsigned __int8 *)(v9 + 194) << 16);
      if ((v66 & 0x2000) == 0)
      {
LABEL_57:
        if ((v53 & 0x4000) == 0) {
          goto LABEL_58;
        }
        goto LABEL_83;
      }
LABEL_82:
      sub_216779180(a1, (uint64_t)"   didChangeRelationshipTargets\n", 32);
      int v67 = *(unsigned __int16 *)(v9 + 192);
      int v53 = v67 | (*(unsigned __int8 *)(v9 + 194) << 16);
      if ((v67 & 0x4000) == 0)
      {
LABEL_58:
        if ((v53 & 0x8000) == 0) {
          goto LABEL_59;
        }
        goto LABEL_84;
      }
LABEL_83:
      sub_216779180(a1, (uint64_t)"   didAddTarget\n", 16);
      int v68 = *(unsigned __int16 *)(v9 + 192);
      int v53 = v68 | (*(unsigned __int8 *)(v9 + 194) << 16);
      if ((v68 & 0x8000) == 0)
      {
LABEL_59:
        if ((v53 & 0x10000) == 0) {
          goto LABEL_60;
        }
        goto LABEL_85;
      }
LABEL_84:
      sub_216779180(a1, (uint64_t)"   didRemoveTarget\n", 19);
      int v53 = *(unsigned __int16 *)(v9 + 192) | (*(unsigned __int8 *)(v9 + 194) << 16);
      if ((v53 & 0x10000) == 0)
      {
LABEL_60:
        if ((v53 & 0x20000) == 0) {
          goto LABEL_61;
        }
        goto LABEL_86;
      }
LABEL_85:
      sub_216779180(a1, (uint64_t)"   didAddInertPrim\n", 19);
      int v53 = *(unsigned __int16 *)(v9 + 192) | (*(unsigned __int8 *)(v9 + 194) << 16);
      if ((v53 & 0x20000) == 0)
      {
LABEL_61:
        if ((v53 & 0x40000) == 0) {
          goto LABEL_62;
        }
        goto LABEL_87;
      }
LABEL_86:
      sub_216779180(a1, (uint64_t)"   didAddNonInertPrim\n", 22);
      int v53 = *(unsigned __int16 *)(v9 + 192) | (*(unsigned __int8 *)(v9 + 194) << 16);
      if ((v53 & 0x40000) == 0)
      {
LABEL_62:
        if ((v53 & 0x80000) == 0) {
          goto LABEL_63;
        }
        goto LABEL_88;
      }
LABEL_87:
      sub_216779180(a1, (uint64_t)"   didRemoveInertPrim\n", 22);
      int v53 = *(unsigned __int16 *)(v9 + 192) | (*(unsigned __int8 *)(v9 + 194) << 16);
      if ((v53 & 0x80000) == 0)
      {
LABEL_63:
        if ((v53 & 0x100000) == 0) {
          goto LABEL_64;
        }
        goto LABEL_89;
      }
LABEL_88:
      sub_216779180(a1, (uint64_t)"   didRemoveNonInertPrim\n", 25);
      int v53 = *(unsigned __int16 *)(v9 + 192) | (*(unsigned __int8 *)(v9 + 194) << 16);
      if ((v53 & 0x100000) == 0)
      {
LABEL_64:
        if ((v53 & 0x200000) == 0) {
          goto LABEL_65;
        }
        goto LABEL_90;
      }
LABEL_89:
      sub_216779180(a1, (uint64_t)"   didAddPropertyWithOnlyRequiredFields\n", 40);
      int v53 = *(unsigned __int16 *)(v9 + 192) | (*(unsigned __int8 *)(v9 + 194) << 16);
      if ((v53 & 0x200000) == 0)
      {
LABEL_65:
        if ((v53 & 0x400000) == 0) {
          goto LABEL_66;
        }
        goto LABEL_91;
      }
LABEL_90:
      sub_216779180(a1, (uint64_t)"   didAddProperty\n", 18);
      int v53 = *(unsigned __int16 *)(v9 + 192) | (*(unsigned __int8 *)(v9 + 194) << 16);
      if ((v53 & 0x400000) == 0)
      {
LABEL_66:
        if ((v53 & 0x800000) != 0) {
          goto LABEL_92;
        }
        goto LABEL_67;
      }
LABEL_91:
      sub_216779180(a1, (uint64_t)"   didRemovePropertyWithOnlyRequiredFields\n", 43);
      if (((*(unsigned __int16 *)(v9 + 192) | (*(unsigned __int8 *)(v9 + 194) << 16)) & 0x800000) != 0) {
LABEL_92:
      }
        sub_216779180(a1, (uint64_t)"   didRemoveProperty\n", 21);
LABEL_67:
      sub_216A60B60(&v75);
    }
    while (v75 != v76);
  }
  return a1;
}

void sub_216A608C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_216A608EC(void *result, uint64_t a2, char *a3)
{
  if (*result == result[1])
  {
    v3[0] = "tf/iterator.h";
    v3[1] = "operator->";
    v3[2] = 287;
    void v3[3] = "Iterator &pxrInternal__aapl__pxrReserved__::TfIterator<const pxrInternal__aapl__pxrReserved__::TfSmallVector"
            "<std::pair<pxrInternal__aapl__pxrReserved__::SdfPath, pxrInternal__aapl__pxrReserved__::SdfChangeList::Entry"
            ">, 1>>::operator->() [T = const pxrInternal__aapl__pxrReserved__::TfSmallVector<std::pair<pxrInternal__aapl_"
            "_pxrReserved__::SdfPath, pxrInternal__aapl__pxrReserved__::SdfChangeList::Entry>, 1>, Reverse = false]";
    char v4 = 0;
    int v5 = 4;
    pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper::IssueFatalError((pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper *)v3, (pxrInternal__aapl__pxrReserved__ *)"iterator exhausted", a3);
  }
  return result;
}

void *sub_216A60968(void *result, uint64_t a2, char *a3)
{
  if (*result == result[1])
  {
    v3[0] = "tf/iterator.h";
    v3[1] = "operator->";
    v3[2] = 287;
    void v3[3] = "Iterator &pxrInternal__aapl__pxrReserved__::TfIterator<const pxrInternal__aapl__pxrReserved__::TfSmallVector"
            "<std::pair<pxrInternal__aapl__pxrReserved__::TfToken, std::pair<pxrInternal__aapl__pxrReserved__::VtValue, p"
            "xrInternal__aapl__pxrReserved__::VtValue>>, 3>>::operator->() [T = const pxrInternal__aapl__pxrReserved__::T"
            "fSmallVector<std::pair<pxrInternal__aapl__pxrReserved__::TfToken, std::pair<pxrInternal__aapl__pxrReserved__"
            "::VtValue, pxrInternal__aapl__pxrReserved__::VtValue>>, 3>, Reverse = false]";
    char v4 = 0;
    int v5 = 4;
    pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper::IssueFatalError((pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper *)v3, (pxrInternal__aapl__pxrReserved__ *)"iterator exhausted", a3);
  }
  return result;
}

void *sub_216A609E4(void *a1)
{
  if (*a1 == a1[1])
  {
    v3[0] = "tf/iterator.h";
    v3[1] = "operator++";
    v3[2] = 250;
    void v3[3] = "TfIterator<T, Reverse> &pxrInternal__aapl__pxrReserved__::TfIterator<const pxrInternal__aapl__pxrReserved__:"
            ":TfSmallVector<std::pair<pxrInternal__aapl__pxrReserved__::TfToken, std::pair<pxrInternal__aapl__pxrReserved"
            "__::VtValue, pxrInternal__aapl__pxrReserved__::VtValue>>, 3>>::operator++() [T = const pxrInternal__aapl__px"
            "rReserved__::TfSmallVector<std::pair<pxrInternal__aapl__pxrReserved__::TfToken, std::pair<pxrInternal__aapl_"
            "_pxrReserved__::VtValue, pxrInternal__aapl__pxrReserved__::VtValue>>, 3>, Reverse = false]";
    char v4 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v3, 1, (pxrInternal__aapl__pxrReserved__ *)"iterator exhausted");
  }
  else
  {
    *a1 += 40;
  }
  return a1;
}

void *sub_216A60A64(void *result, uint64_t a2, char *a3)
{
  if (*result == result[1])
  {
    v3[0] = "tf/iterator.h";
    v3[1] = "operator->";
    v3[2] = 287;
    void v3[3] = "Iterator &pxrInternal__aapl__pxrReserved__::TfIterator<const std::vector<std::pair<std::string, pxrInternal_"
            "_aapl__pxrReserved__::SdfChangeList::SubLayerChangeType>>>::operator->() [T = const std::vector<std::pair<st"
            "d::string, pxrInternal__aapl__pxrReserved__::SdfChangeList::SubLayerChangeType>>, Reverse = false]";
    char v4 = 0;
    int v5 = 4;
    pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper::IssueFatalError((pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper *)v3, (pxrInternal__aapl__pxrReserved__ *)"iterator exhausted", a3);
  }
  return result;
}

void *sub_216A60AE0(void *a1)
{
  if (*a1 == a1[1])
  {
    v3[0] = "tf/iterator.h";
    v3[1] = "operator++";
    v3[2] = 250;
    void v3[3] = "TfIterator<T, Reverse> &pxrInternal__aapl__pxrReserved__::TfIterator<const std::vector<std::pair<std::string"
            ", pxrInternal__aapl__pxrReserved__::SdfChangeList::SubLayerChangeType>>>::operator++() [T = const std::vecto"
            "r<std::pair<std::string, pxrInternal__aapl__pxrReserved__::SdfChangeList::SubLayerChangeType>>, Reverse = false]";
    char v4 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v3, 1, (pxrInternal__aapl__pxrReserved__ *)"iterator exhausted");
  }
  else
  {
    *a1 += 32;
  }
  return a1;
}

void *sub_216A60B60(void *a1)
{
  if (*a1 == a1[1])
  {
    v3[0] = "tf/iterator.h";
    v3[1] = "operator++";
    v3[2] = 250;
    void v3[3] = "TfIterator<T, Reverse> &pxrInternal__aapl__pxrReserved__::TfIterator<const pxrInternal__aapl__pxrReserved__:"
            ":TfSmallVector<std::pair<pxrInternal__aapl__pxrReserved__::SdfPath, pxrInternal__aapl__pxrReserved__::SdfCha"
            "ngeList::Entry>, 1>>::operator++() [T = const pxrInternal__aapl__pxrReserved__::TfSmallVector<std::pair<pxrI"
            "nternal__aapl__pxrReserved__::SdfPath, pxrInternal__aapl__pxrReserved__::SdfChangeList::Entry>, 1>, Reverse = false]";
    char v4 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v3, 1, (pxrInternal__aapl__pxrReserved__ *)"iterator exhausted");
  }
  else
  {
    *a1 += 200;
  }
  return a1;
}

pxrInternal__aapl__pxrReserved__::SdfChangeList *pxrInternal__aapl__pxrReserved__::SdfChangeList::SdfChangeList(pxrInternal__aapl__pxrReserved__::SdfChangeList *this, const pxrInternal__aapl__pxrReserved__::SdfChangeList *a2)
{
  sub_216A62258(this, (uint64_t)a2);
  uint64_t v4 = *((void *)a2 + 26);
  if (v4)
  {
    int v5 = operator new(0x28uLL);
    sub_216A628DC((uint64_t)v5, v4);
  }
  else
  {
    int v5 = 0;
  }
  *((void *)this + 26) = v5;
  return this;
}

void sub_216A60C3C(_Unwind_Exception *a1)
{
  operator delete(v2);
  sub_21697C7F8(v1);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::SdfChangeList::operator=(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    uint64_t v3 = a2;
    unsigned int v4 = *(_DWORD *)(a2 + 200);
    if (*(_DWORD *)(a2 + 204) >= 2u) {
      a2 = *(void *)a2;
    }
    sub_216A62C90((_DWORD *)a1, a2, a2 + 200 * v4);
    uint64_t v5 = *(void *)(v3 + 208);
    if (v5)
    {
      int v6 = operator new(0x28uLL);
      sub_216A628DC((uint64_t)v6, v5);
    }
    else
    {
      int v6 = 0;
    }
    sub_21697C6F8((uint64_t *)(a1 + 208), (uint64_t)v6);
  }
  return a1;
}

void sub_216A60CEC(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *pxrInternal__aapl__pxrReserved__::SdfChangeList::GetEntry(pxrInternal__aapl__pxrReserved__::SdfChangeList *this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  if (!pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator BOOL(a2))
  {
    v9[0] = "sdf/changeList.cpp";
    v9[1] = "GetEntry";
    void v9[2] = 158;
    void v9[3] = "const SdfChangeList::Entry &pxrInternal__aapl__pxrReserved__::SdfChangeList::GetEntry(const SdfPath &) const";
    char v10 = 0;
    int v11 = 4;
    pxrInternal__aapl__pxrReserved__::Tf_DiagnosticLiteHelper::IssueFatalError((pxrInternal__aapl__pxrReserved__::Tf_DiagnosticLiteHelper *)v9, (pxrInternal__aapl__pxrReserved__ *)"Failed axiom: ' %s '", v4, "!path.IsEmpty()");
  }
  uint64_t Entry = pxrInternal__aapl__pxrReserved__::SdfChangeList::FindEntry((uint64_t *)this, (unsigned int *)a2);
  int v6 = this;
  if (*((_DWORD *)this + 51) >= 2u) {
    int v6 = *(pxrInternal__aapl__pxrReserved__::SdfChangeList **)this;
  }
  if ((pxrInternal__aapl__pxrReserved__::SdfChangeList *)Entry != (pxrInternal__aapl__pxrReserved__::SdfChangeList *)((char *)v6 + 200 * *((unsigned int *)this + 50))) {
    return (void *)(Entry + 8);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B8ED88, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267B8ED88))
  {
    return &unk_267B8ECC8;
  }
  sub_216A60F64((uint64_t)&unk_267B8ECC8);
  uint64_t v7 = &unk_267B8ECC8;
  __cxa_atexit((void (*)(void *))sub_21697C8FC, &unk_267B8ECC8, &dword_216758000);
  __cxa_guard_release(&qword_267B8ED88);
  return v7;
}

void sub_216A60E30(_Unwind_Exception *a1)
{
}

uint64_t pxrInternal__aapl__pxrReserved__::SdfChangeList::FindEntry(uint64_t *a1, unsigned int *a2)
{
  uint64_t v2 = a1;
  unsigned int v3 = *((_DWORD *)a1 + 51);
  if (v3 > 1)
  {
    int v6 = (uint64_t *)*a1;
    unsigned int v4 = *((_DWORD *)a1 + 50);
    uint64_t v5 = *a1 + 200 * v4;
    if (!v4) {
      return v5;
    }
  }
  else
  {
    unsigned int v4 = *((_DWORD *)a1 + 50);
    uint64_t v5 = (uint64_t)&a1[25 * v4];
    int v6 = a1;
    if (!v4) {
      return v5;
    }
  }
  if (v6[25 * v4 - 25] == *(void *)a2)
  {
    v5 -= 200;
    return v5;
  }
  uint64_t v7 = (void *)a1[26];
  if (!v7)
  {
    uint64_t v9 = v2;
    if (v3 >= 2) {
      uint64_t v9 = (uint64_t *)*v2;
    }
    uint64_t v10 = 25 * v4;
    while (v10 * 8)
    {
      uint64_t v11 = v9[v10 - 25];
      v10 -= 25;
      if (v11 == *(void *)a2)
      {
        uint64_t v9 = (uint64_t *)((char *)v9 + v10 * 8 + 200);
        break;
      }
    }
    if (v3 > 1)
    {
      if (v9 == (uint64_t *)*v2)
      {
        uint64_t v2 = v9;
        return (uint64_t)&v2[25 * v4];
      }
    }
    else if (v9 == v2)
    {
      return (uint64_t)&v2[25 * v4];
    }
    return (uint64_t)(v9 - 25);
  }
  uint64_t v8 = sub_216A62F60(v7, a2);
  if (v8)
  {
    if (*((_DWORD *)v2 + 51) >= 2u) {
      uint64_t v2 = (uint64_t *)*v2;
    }
    return (uint64_t)&v2[25 * v8[3]];
  }
  return v5;
}

uint64_t sub_216A60F64(uint64_t a1)
{
  *(void *)(a1 + 120) = 0x300000000;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 128) = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a1 + 152));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a1 + 156));
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = 0;
  *(_DWORD *)(a1 + 183) = 0;
  *(void *)(a1 + 176) = 0;
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::SdfChangeList::_GetEntry(pxrInternal__aapl__pxrReserved__::SdfChangeList *this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  uint64_t Entry = pxrInternal__aapl__pxrReserved__::SdfChangeList::FindEntry((uint64_t *)this, (unsigned int *)a2);
  uint64_t v5 = this;
  if (*((_DWORD *)this + 51) >= 2u) {
    uint64_t v5 = *(pxrInternal__aapl__pxrReserved__::SdfChangeList **)this;
  }
  if ((pxrInternal__aapl__pxrReserved__::SdfChangeList *)Entry != (pxrInternal__aapl__pxrReserved__::SdfChangeList *)((char *)v5 + 200 * *((unsigned int *)this + 50))) {
    return Entry + 8;
  }

  return pxrInternal__aapl__pxrReserved__::SdfChangeList::_AddNewEntry(this, a2);
}

uint64_t pxrInternal__aapl__pxrReserved__::SdfChangeList::_MakeNonConstIterator(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t pxrInternal__aapl__pxrReserved__::SdfChangeList::_AddNewEntry(pxrInternal__aapl__pxrReserved__::SdfChangeList *this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  uint64_t v10 = a2;
  sub_216A61618(this, (uint64_t)&unk_2174BFD90, &v10);
  uint64_t v4 = *((void *)this + 26);
  if (v4)
  {
    unsigned int v9 = *((_DWORD *)this + 50) - 1;
    uint64_t v5 = sub_216A630DC(v4, (unsigned int *)a2, a2, &v9);
    if (!v6) {
      v5[3] = v9;
    }
  }
  else if (*((_DWORD *)this + 50) >= 0x40u)
  {
    pxrInternal__aapl__pxrReserved__::SdfChangeList::_RebuildAccel(this);
  }
  uint64_t v7 = this;
  if (*((_DWORD *)this + 51) >= 2u) {
    uint64_t v7 = *(pxrInternal__aapl__pxrReserved__::SdfChangeList **)this;
  }
  return (uint64_t)v7 + 200 * *((unsigned int *)this + 50) - 192;
}

unsigned char *pxrInternal__aapl__pxrReserved__::SdfChangeList::_MoveEntry(pxrInternal__aapl__pxrReserved__::SdfChangeList *this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3)
{
  v23[2] = *MEMORY[0x263EF8340];
  if (*(void *)a2 == *(void *)a3)
  {
    return (unsigned char *)pxrInternal__aapl__pxrReserved__::SdfChangeList::_GetEntry(this, a3);
  }
  else
  {
    uint64_t v17 = 0x300000000;
    uint64_t v19 = 0;
    long long v18 = 0uLL;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v20);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v21);
    long long __p = 0uLL;
    memset(v23, 0, 11);
    uint64_t Entry = pxrInternal__aapl__pxrReserved__::SdfChangeList::FindEntry((uint64_t *)this, (unsigned int *)a2);
    uint64_t v8 = Entry;
    unsigned int v9 = this;
    if (*((_DWORD *)this + 51) >= 2u) {
      unsigned int v9 = *(pxrInternal__aapl__pxrReserved__::SdfChangeList **)this;
    }
    if ((pxrInternal__aapl__pxrReserved__::SdfChangeList *)Entry != (pxrInternal__aapl__pxrReserved__::SdfChangeList *)((char *)v9 + 200 * *((unsigned int *)this + 50)))
    {
      sub_21697D4C4((uint64_t)v16, Entry + 8);
      if (((BYTE2(v23[1]) << 16) & 0x33333333) == 0
        || pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator BOOL(&v20))
      {
        sub_216A614E8((uint64_t *)this, v8, v8 + 200);
        pxrInternal__aapl__pxrReserved__::SdfChangeList::_RebuildAccel(this);
      }
    }
    uint64_t v10 = (unsigned char *)pxrInternal__aapl__pxrReserved__::SdfChangeList::_GetEntry(this, a3);
    uint64_t v11 = v10;
    if (v10 != v16) {
      sub_21697D8F0((uint64_t)v10, (uint64_t)v16);
    }
    sub_21697DE58((uint64_t *)v11 + 16);
    *((_OWORD *)v11 + 8) = v18;
    *((void *)v11 + 18) = v19;
    long long v18 = 0uLL;
    uint64_t v19 = 0;
    sub_21697DE94((int *)v11 + 38, &v20);
    sub_21697DEEC((int *)v11 + 39, &v21);
    uint64_t v12 = (void **)(v11 + 160);
    if ((char)v11[183] < 0) {
      operator delete(*v12);
    }
    long long v13 = __p;
    *((void *)v11 + 22) = v23[0];
    *(_OWORD *)uint64_t v12 = v13;
    HIBYTE(v23[0]) = 0;
    LOBYTE(__p) = 0;
    __int16 v14 = v23[1];
    v11[186] = BYTE2(v23[1]);
    *((_WORD *)v11 + 92) = v14 | 0x40;
    if (!pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v11 + 38))
    {
      sub_2169C487C((int *)v11 + 38, a2);
      sub_2169C48D4((int *)v11 + 39, (_DWORD *)a2 + 1);
    }
    if (SHIBYTE(v23[0]) < 0) {
      operator delete((void *)__p);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v21);
    sub_21697C414(&v20);
    uint64_t v15 = (void **)&v18;
    sub_2168706D8(&v15);
    sub_21697C960((uint64_t)v16);
    return v11;
  }
}

void sub_216A6139C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  if (a2) {
    sub_21675DB74(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::SdfChangeList::_RebuildAccel(pxrInternal__aapl__pxrReserved__::SdfChangeList *this)
{
  size_t v1 = *((unsigned int *)this + 50);
  uint64_t v2 = (uint64_t *)((char *)this + 208);
  if (v1 < 0x40)
  {
    uint64_t v12 = (uint64_t *)((char *)this + 208);
    sub_21697C6F8(v12, 0);
  }
  else
  {
    uint64_t v4 = operator new(0x28uLL);
    *uint64_t v4 = 0u;
    v4[1] = 0u;
    *((_DWORD *)v4 + 8) = 1065353216;
    sub_21678A04C((uint64_t)v4, v1);
    sub_21697C6F8(v2, (uint64_t)v4);
    uint64_t v5 = (unsigned int *)this;
    if (*((_DWORD *)this + 51) >= 2u) {
      uint64_t v5 = *(unsigned int **)this;
    }
    unsigned int v6 = *((_DWORD *)this + 50);
    if (v6)
    {
      uint64_t v7 = 0;
      uint64_t v8 = 200 * v6;
      do
      {
        uint64_t v9 = *v2;
        uint64_t v13 = v7;
        uint64_t v10 = sub_216A633C4(v9, v5, v5, &v13);
        if (!v11) {
          v10[3] = v13;
        }
        v5 += 50;
        ++v7;
        v8 -= 200;
      }
      while (v8);
    }
  }
}

void sub_216A614D0(_Unwind_Exception *a1)
{
  unsigned int v3 = (void *)sub_21697C738(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

uint64_t sub_216A614E8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 != a3)
  {
    unint64_t v5 = 0x8F5C28F5C28F5C29 * ((a3 - a2) >> 3);
    unsigned int v6 = a1;
    if (*((_DWORD *)a1 + 51) >= 2u) {
      unsigned int v6 = (uint64_t *)*a1;
    }
    uint64_t v7 = (uint64_t)&v6[25 * *((unsigned int *)a1 + 50)];
    sub_216A62E38(a3, v7, a2);
    if (v5)
    {
      uint64_t v8 = 0;
      do
      {
        uint64_t v9 = v7 - 200 * v5;
        if (*(char *)(v9 + 191) < 0) {
          operator delete(*(void **)(v9 + 168));
        }
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(v9 + 164));
        uint64_t v10 = v7 - 200 * v5;
        sub_21697C414((_DWORD *)(v10 + 160));
        uint64_t v12 = (void **)(v10 + 136);
        sub_2168706D8(&v12);
        sub_21697C960(v9 + 8);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(v10 + 4));
        sub_21697C414((_DWORD *)v10);
        v8 -= 200;
        v7 += 200;
      }
      while (-200 * v5 != v8);
    }
    *((_DWORD *)a1 + 50) -= v5;
  }
  return a2;
}

uint64_t sub_216A61618(_DWORD *a1, uint64_t a2, _DWORD **a3)
{
  unsigned int v5 = a1[50];
  unsigned int v6 = a1[51];
  if (v5 == v6)
  {
    sub_216A62D18(a1, v5 + (v5 >> 1) + 1);
    unsigned int v6 = a1[51];
  }
  uint64_t v7 = a1;
  if (v6 >= 2) {
    uint64_t v7 = *(_DWORD **)a1;
  }
  return sub_216A6303C((uint64_t)&v7[50 * a1[50]++], *a3);
}

void pxrInternal__aapl__pxrReserved__::SdfChangeList::_EraseEntry(pxrInternal__aapl__pxrReserved__::SdfChangeList *this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  if (*((_DWORD *)this + 50))
  {
    uint64_t Entry = pxrInternal__aapl__pxrReserved__::SdfChangeList::FindEntry((uint64_t *)this, (unsigned int *)a2);
    uint64_t v4 = this;
    if (*((_DWORD *)this + 51) >= 2u) {
      uint64_t v4 = *(pxrInternal__aapl__pxrReserved__::SdfChangeList **)this;
    }
    if ((pxrInternal__aapl__pxrReserved__::SdfChangeList *)Entry != (pxrInternal__aapl__pxrReserved__::SdfChangeList *)((char *)v4 + 200 * *((unsigned int *)this + 50)))
    {
      sub_216A614E8((uint64_t *)this, Entry, Entry + 200);
      pxrInternal__aapl__pxrReserved__::SdfChangeList::_RebuildAccel(this);
    }
  }
}

_WORD *pxrInternal__aapl__pxrReserved__::SdfChangeList::DidReplaceLayerContent(pxrInternal__aapl__pxrReserved__::SdfChangeList *this)
{
  uint64_t v2 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath(this);
  uint64_t Entry = pxrInternal__aapl__pxrReserved__::SdfChangeList::_GetEntry(this, v2);
  __int16 v5 = *(_WORD *)(Entry + 184);
  unint64_t result = (_WORD *)(Entry + 184);
  *unint64_t result = v5 | 4;
  return result;
}

_WORD *pxrInternal__aapl__pxrReserved__::SdfChangeList::DidReloadLayerContent(pxrInternal__aapl__pxrReserved__::SdfChangeList *this)
{
  uint64_t v2 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath(this);
  uint64_t Entry = pxrInternal__aapl__pxrReserved__::SdfChangeList::_GetEntry(this, v2);
  __int16 v5 = *(_WORD *)(Entry + 184);
  unint64_t result = (_WORD *)(Entry + 184);
  *unint64_t result = v5 | 8;
  return result;
}

std::string *pxrInternal__aapl__pxrReserved__::SdfChangeList::DidChangeLayerIdentifier(pxrInternal__aapl__pxrReserved__::SdfPath *a1, const std::string *a2)
{
  uint64_t v4 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath(a1);
  unint64_t result = (std::string *)pxrInternal__aapl__pxrReserved__::SdfChangeList::_GetEntry(a1, v4);
  int v6 = LOWORD(result[7].__r_.__value_.__r.__words[2]);
  int v7 = v6 | (result[7].__r_.__value_.__s.__data_[18] << 16);
  if ((v6 & 1) == 0)
  {
    result[7].__r_.__value_.__s.__data_[18] = BYTE2(v7);
    LOWORD(result[7].__r_.__value_.__r.__words[2]) = v7 | 1;
    uint64_t v8 = (std::string *)((char *)result + 160);
    return std::string::operator=(v8, a2);
  }
  return result;
}

_WORD *pxrInternal__aapl__pxrReserved__::SdfChangeList::DidChangeLayerResolvedPath(pxrInternal__aapl__pxrReserved__::SdfChangeList *this)
{
  uint64_t v2 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath(this);
  uint64_t Entry = pxrInternal__aapl__pxrReserved__::SdfChangeList::_GetEntry(this, v2);
  __int16 v5 = *(_WORD *)(Entry + 184);
  unint64_t result = (_WORD *)(Entry + 184);
  *unint64_t result = v5 | 2;
  return result;
}

void pxrInternal__aapl__pxrReserved__::SdfChangeList::DidChangeSublayerPaths(pxrInternal__aapl__pxrReserved__::SdfPath *a1, uint64_t a2, int a3)
{
  int v6 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath(a1);
  uint64_t Entry = (uint64_t *)pxrInternal__aapl__pxrReserved__::SdfChangeList::_GetEntry(a1, v6);
  if (*(char *)(a2 + 23) < 0)
  {
    sub_216778F24(__p, *(void **)a2, *(void *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)long long __p = *(_OWORD *)a2;
    uint64_t v23 = *(void *)(a2 + 16);
  }
  int v24 = a3;
  unint64_t v8 = Entry[18];
  unint64_t v9 = Entry[17];
  if (v9 >= v8)
  {
    uint64_t v11 = Entry[16];
    uint64_t v12 = (uint64_t)(v9 - v11) >> 5;
    unint64_t v13 = v12 + 1;
    if ((unint64_t)(v12 + 1) >> 59) {
      sub_21677CB10();
    }
    uint64_t v14 = v8 - v11;
    if (v14 >> 4 > v13) {
      unint64_t v13 = v14 >> 4;
    }
    if ((unint64_t)v14 >= 0x7FFFFFFFFFFFFFE0) {
      unint64_t v15 = 0x7FFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v15 = v13;
    }
    v25[4] = Entry + 18;
    uint64_t v16 = (char *)sub_2168707F4((uint64_t)(Entry + 18), v15);
    uint64_t v17 = &v16[32 * v12];
    v25[0] = v16;
    v25[1] = v17;
    void v25[3] = &v16[32 * v18];
    long long v19 = *(_OWORD *)__p;
    *((void *)v17 + 2) = v23;
    *(_OWORD *)uint64_t v17 = v19;
    __p[1] = 0;
    uint64_t v23 = 0;
    __p[0] = 0;
    *((_DWORD *)v17 + 6) = v24;
    v25[2] = v17 + 32;
    sub_216A636AC(Entry + 16, v25);
    uint64_t v20 = Entry[17];
    sub_216870958((uint64_t)v25);
    int v21 = SHIBYTE(v23);
    Entry[17] = v20;
    if (v21 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    long long v10 = *(_OWORD *)__p;
    *(void *)(v9 + 16) = v23;
    *(_OWORD *)unint64_t v9 = v10;
    *(_DWORD *)(v9 + 24) = v24;
    Entry[17] = v9 + 32;
  }
}

void sub_216A619A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, char a17)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void *pxrInternal__aapl__pxrReserved__::SdfChangeList::DidChangeInfo(pxrInternal__aapl__pxrReserved__::SdfChangeList *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, uint64_t *a3, void *a4, void *a5)
{
  v16[2] = *MEMORY[0x263EF8340];
  uint64_t Entry = pxrInternal__aapl__pxrReserved__::SdfChangeList::_GetEntry(a1, a2);
  uint64_t v9 = Entry;
  long long v10 = *(void **)Entry;
  uint64_t v11 = *(unsigned int *)(Entry + 120);
  if (*(_DWORD *)(Entry + 124) < 4u) {
    long long v10 = (void *)Entry;
  }
  if (v11)
  {
    uint64_t v12 = 40 * v11;
    unint64_t v13 = v10;
    while ((*v13 & 0xFFFFFFFFFFFFFFF8) != (*a3 & 0xFFFFFFFFFFFFFFF8))
    {
      v13 += 5;
      v12 -= 40;
      if (!v12) {
        goto LABEL_13;
      }
    }
  }
  else
  {
    unint64_t v13 = v10;
  }
  if (v13 == &v10[5 * v11])
  {
LABEL_13:
    sub_216A6220C(v15, a4, a5);
    sub_216A61B30(v9, a3, v15);
    sub_2168EE084((uint64_t)v16);
    return (void *)sub_2168EE084((uint64_t)v15);
  }
  else
  {
    return sub_2168EC6DC(v13 + 3, a5);
  }
}

void sub_216A61B0C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_2168EE084(v2 + 16);
  sub_2168EE084((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_216A61B30(uint64_t a1, uint64_t *a2, void *a3)
{
  unsigned int v6 = *(_DWORD *)(a1 + 120);
  unsigned int v7 = *(_DWORD *)(a1 + 124);
  if (v6 == v7)
  {
    sub_216A6380C(a1, v6 + (v6 >> 1) + 1);
    unsigned int v7 = *(_DWORD *)(a1 + 124);
  }
  uint64_t v8 = a1;
  if (v7 >= 4) {
    uint64_t v8 = *(void *)a1;
  }
  unint64_t result = sub_216A63894((uint64_t *)(v8 + 40 * *(unsigned int *)(a1 + 120)), a2, a3);
  ++*(_DWORD *)(a1 + 120);
  return result;
}

unsigned char *pxrInternal__aapl__pxrReserved__::SdfChangeList::DidChangePrimName(pxrInternal__aapl__pxrReserved__::SdfChangeList *this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3)
{
  if (((*(unsigned __int8 *)(pxrInternal__aapl__pxrReserved__::SdfChangeList::_GetEntry(this, a3) + 186) << 16) & 0xC0000) != 0) {
    pxrInternal__aapl__pxrReserved__::SdfChangeList::_AddNewEntry(this, a3);
  }

  return pxrInternal__aapl__pxrReserved__::SdfChangeList::_MoveEntry(this, a2, a3);
}

_WORD *pxrInternal__aapl__pxrReserved__::SdfChangeList::DidChangePrimVariantSets(pxrInternal__aapl__pxrReserved__::SdfChangeList *this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  uint64_t Entry = pxrInternal__aapl__pxrReserved__::SdfChangeList::_GetEntry(this, a2);
  __int16 v4 = *(_WORD *)(Entry + 184);
  unint64_t result = (_WORD *)(Entry + 184);
  *unint64_t result = v4 | 0x80;
  return result;
}

_WORD *pxrInternal__aapl__pxrReserved__::SdfChangeList::DidChangePrimInheritPaths(pxrInternal__aapl__pxrReserved__::SdfChangeList *this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  uint64_t Entry = pxrInternal__aapl__pxrReserved__::SdfChangeList::_GetEntry(this, a2);
  __int16 v4 = *(_WORD *)(Entry + 184);
  unint64_t result = (_WORD *)(Entry + 184);
  *unint64_t result = v4 | 0x100;
  return result;
}

_WORD *pxrInternal__aapl__pxrReserved__::SdfChangeList::DidChangePrimSpecializes(pxrInternal__aapl__pxrReserved__::SdfChangeList *this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  uint64_t Entry = pxrInternal__aapl__pxrReserved__::SdfChangeList::_GetEntry(this, a2);
  __int16 v4 = *(_WORD *)(Entry + 184);
  unint64_t result = (_WORD *)(Entry + 184);
  *unint64_t result = v4 | 0x200;
  return result;
}

_WORD *pxrInternal__aapl__pxrReserved__::SdfChangeList::DidChangePrimReferences(pxrInternal__aapl__pxrReserved__::SdfChangeList *this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  uint64_t Entry = pxrInternal__aapl__pxrReserved__::SdfChangeList::_GetEntry(this, a2);
  __int16 v4 = *(_WORD *)(Entry + 184);
  unint64_t result = (_WORD *)(Entry + 184);
  *unint64_t result = v4 | 0x400;
  return result;
}

_WORD *pxrInternal__aapl__pxrReserved__::SdfChangeList::DidReorderPrims(pxrInternal__aapl__pxrReserved__::SdfChangeList *this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  uint64_t Entry = pxrInternal__aapl__pxrReserved__::SdfChangeList::_GetEntry(this, a2);
  __int16 v4 = *(_WORD *)(Entry + 184);
  unint64_t result = (_WORD *)(Entry + 184);
  *unint64_t result = v4 | 0x10;
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::SdfChangeList::DidAddPrim(pxrInternal__aapl__pxrReserved__::SdfChangeList *this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, int a3)
{
  uint64_t Entry = pxrInternal__aapl__pxrReserved__::SdfChangeList::_GetEntry(this, a2);
  if (((*(unsigned __int8 *)(Entry + 186) << 16) & 0xC0000) != 0) {
    uint64_t Entry = pxrInternal__aapl__pxrReserved__::SdfChangeList::_AddNewEntry(this, a2);
  }
  int v9 = *(unsigned __int16 *)(Entry + 184);
  uint64_t result = Entry + 184;
  __int16 v8 = v9;
  int v10 = v9 | (*(unsigned __int8 *)(result + 2) << 16);
  if (a3) {
    int v11 = 0x10000;
  }
  else {
    int v11 = 0x20000;
  }
  *(unsigned char *)(result + 2) = (v10 | v11) >> 16;
  *(_WORD *)uint64_t result = v8;
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::SdfChangeList::DidRemovePrim(pxrInternal__aapl__pxrReserved__::SdfChangeList *this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, int a3)
{
  uint64_t Entry = pxrInternal__aapl__pxrReserved__::SdfChangeList::_GetEntry(this, a2);
  if ((*(unsigned char *)(Entry + 186) & 3) << 16) {
    uint64_t Entry = pxrInternal__aapl__pxrReserved__::SdfChangeList::_AddNewEntry(this, a2);
  }
  int v9 = *(unsigned __int16 *)(Entry + 184);
  uint64_t result = Entry + 184;
  __int16 v8 = v9;
  int v10 = v9 | (*(unsigned __int8 *)(result + 2) << 16);
  if (a3) {
    int v11 = 0x40000;
  }
  else {
    int v11 = 0x80000;
  }
  *(unsigned char *)(result + 2) = (v10 | v11) >> 16;
  *(_WORD *)uint64_t result = v8;
  return result;
}

int *pxrInternal__aapl__pxrReserved__::SdfChangeList::DidMovePrim(pxrInternal__aapl__pxrReserved__::SdfChangeList *this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3)
{
  pxrInternal__aapl__pxrReserved__::SdfChangeList::DidRemovePrim(this, a2, 0);
  pxrInternal__aapl__pxrReserved__::SdfChangeList::DidAddPrim(this, a3, 0);
  uint64_t Entry = pxrInternal__aapl__pxrReserved__::SdfChangeList::_GetEntry(this, a3);
  sub_2169C487C((int *)(Entry + 152), a2);

  return sub_2169C48D4((int *)(Entry + 156), (_DWORD *)a2 + 1);
}

unsigned char *pxrInternal__aapl__pxrReserved__::SdfChangeList::DidChangePropertyName(pxrInternal__aapl__pxrReserved__::SdfChangeList *this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3)
{
  uint64_t Entry = pxrInternal__aapl__pxrReserved__::SdfChangeList::_GetEntry(this, a3);
  if ((*(unsigned __int16 *)(Entry + 184) | (*(unsigned __int8 *)(Entry + 186) << 16)) >= 0x400000u) {
    pxrInternal__aapl__pxrReserved__::SdfChangeList::_AddNewEntry(this, a3);
  }

  return pxrInternal__aapl__pxrReserved__::SdfChangeList::_MoveEntry(this, a2, a3);
}

_WORD *pxrInternal__aapl__pxrReserved__::SdfChangeList::DidReorderProperties(pxrInternal__aapl__pxrReserved__::SdfChangeList *this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  uint64_t Entry = pxrInternal__aapl__pxrReserved__::SdfChangeList::_GetEntry(this, a2);
  __int16 v4 = *(_WORD *)(Entry + 184);
  uint64_t result = (_WORD *)(Entry + 184);
  *uint64_t result = v4 | 0x20;
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::SdfChangeList::DidAddProperty(pxrInternal__aapl__pxrReserved__::SdfChangeList *this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, int a3)
{
  uint64_t Entry = pxrInternal__aapl__pxrReserved__::SdfChangeList::_GetEntry(this, a2);
  if ((*(unsigned __int16 *)(Entry + 184) | (*(unsigned __int8 *)(Entry + 186) << 16)) >= 0x400000u) {
    uint64_t Entry = pxrInternal__aapl__pxrReserved__::SdfChangeList::_AddNewEntry(this, a2);
  }
  int v9 = *(unsigned __int16 *)(Entry + 184);
  uint64_t result = Entry + 184;
  __int16 v8 = v9;
  int v10 = v9 | (*(unsigned __int8 *)(result + 2) << 16);
  if (a3) {
    int v11 = 0x100000;
  }
  else {
    int v11 = 0x200000;
  }
  *(unsigned char *)(result + 2) = (v10 | v11) >> 16;
  *(_WORD *)uint64_t result = v8;
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::SdfChangeList::DidRemoveProperty(pxrInternal__aapl__pxrReserved__::SdfChangeList *this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, int a3)
{
  uint64_t Entry = pxrInternal__aapl__pxrReserved__::SdfChangeList::_GetEntry(this, a2);
  if (((*(unsigned __int8 *)(Entry + 186) << 16) & 0x300000) != 0) {
    uint64_t Entry = pxrInternal__aapl__pxrReserved__::SdfChangeList::_AddNewEntry(this, a2);
  }
  int v9 = *(unsigned __int16 *)(Entry + 184);
  uint64_t result = Entry + 184;
  __int16 v8 = v9;
  int v10 = v9 | (*(unsigned __int8 *)(result + 2) << 16);
  if (a3) {
    int v11 = 0x400000;
  }
  else {
    int v11 = -8388608;
  }
  *(unsigned char *)(result + 2) = (v10 | v11) >> 16;
  *(_WORD *)uint64_t result = v8;
  return result;
}

_WORD *pxrInternal__aapl__pxrReserved__::SdfChangeList::DidChangeAttributeTimeSamples(pxrInternal__aapl__pxrReserved__::SdfChangeList *this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  uint64_t Entry = pxrInternal__aapl__pxrReserved__::SdfChangeList::_GetEntry(this, a2);
  __int16 v4 = *(_WORD *)(Entry + 184);
  uint64_t result = (_WORD *)(Entry + 184);
  *uint64_t result = v4 | 0x800;
  return result;
}

_WORD *pxrInternal__aapl__pxrReserved__::SdfChangeList::DidChangeAttributeConnection(pxrInternal__aapl__pxrReserved__::SdfChangeList *this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  uint64_t Entry = pxrInternal__aapl__pxrReserved__::SdfChangeList::_GetEntry(this, a2);
  __int16 v4 = *(_WORD *)(Entry + 184);
  uint64_t result = (_WORD *)(Entry + 184);
  *uint64_t result = v4 | 0x1000;
  return result;
}

_WORD *pxrInternal__aapl__pxrReserved__::SdfChangeList::DidChangeRelationshipTargets(pxrInternal__aapl__pxrReserved__::SdfChangeList *this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  uint64_t Entry = pxrInternal__aapl__pxrReserved__::SdfChangeList::_GetEntry(this, a2);
  __int16 v4 = *(_WORD *)(Entry + 184);
  uint64_t result = (_WORD *)(Entry + 184);
  *uint64_t result = v4 | 0x2000;
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::SdfChangeList::DidAddTarget(pxrInternal__aapl__pxrReserved__::SdfChangeList *this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  uint64_t result = pxrInternal__aapl__pxrReserved__::SdfChangeList::_GetEntry(this, a2);
  int v5 = *(unsigned __int16 *)(result + 184);
  int v6 = v5 | (*(unsigned __int8 *)(result + 186) << 16);
  if ((v5 & 0x8000) != 0)
  {
    uint64_t result = pxrInternal__aapl__pxrReserved__::SdfChangeList::_AddNewEntry(this, a2);
    int v6 = *(unsigned __int16 *)(result + 184) | (*(unsigned __int8 *)(result + 186) << 16);
  }
  *(unsigned char *)(result + 186) = BYTE2(v6);
  *(_WORD *)(result + 184) = v6 | 0x4000;
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::SdfChangeList::DidRemoveTarget(pxrInternal__aapl__pxrReserved__::SdfChangeList *this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  uint64_t result = pxrInternal__aapl__pxrReserved__::SdfChangeList::_GetEntry(this, a2);
  int v5 = *(unsigned __int16 *)(result + 184);
  int v6 = v5 | (*(unsigned __int8 *)(result + 186) << 16);
  if ((v5 & 0x4000) != 0)
  {
    uint64_t result = pxrInternal__aapl__pxrReserved__::SdfChangeList::_AddNewEntry(this, a2);
    int v6 = *(unsigned __int16 *)(result + 184) | (*(unsigned __int8 *)(result + 186) << 16);
  }
  *(unsigned char *)(result + 186) = BYTE2(v6);
  *(_WORD *)(result + 184) = v6 | 0x8000;
  return result;
}

uint64_t *sub_216A62108()
{
  sub_216851EE4((uint64_t)&v8, "Tf", "TfType::Define");
  int v5 = 0;
  int v6 = 0;
  uint64_t v7 = 0;
  pxrInternal__aapl__pxrReserved__::TfType::GetCanonicalTypeName((pxrInternal__aapl__pxrReserved__::TfType *)&stru_26C758098, (uint64_t)__p);
  unint64_t v0 = pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p, (char **)&v5, 0);
  pxrInternal__aapl__pxrReserved__::TfType::_DefineCppType((pxrInternal__aapl__pxrReserved__::TfType *)v0, &stru_26C758098, (char *)4, 1, 1);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  if (v5)
  {
    int v6 = v5;
    operator delete(v5);
  }
  while (v9--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v8);
  return v0;
}

void sub_216A621C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a15) {
    operator delete(a15);
  }
  sub_21684E6B8(v16 - 32);
  _Unwind_Resume(a1);
}

void *sub_216A6220C(void *a1, void *a2, void *a3)
{
  int v5 = sub_2168EDFA8(a1, a2);
  sub_2168EE4C4(v5 + 2, a3);
  return a1;
}

void sub_216A62244(_Unwind_Exception *a1)
{
  sub_2168EE084(v1);
  _Unwind_Resume(a1);
}

_DWORD *sub_216A62258(_DWORD *a1, uint64_t a2)
{
  a1[51] = 1;
  unsigned int v4 = *(_DWORD *)(a2 + 200);
  int v5 = a1;
  if (v4 >= 2)
  {
    int v5 = malloc(200 * v4);
    *(void *)a1 = v5;
    a1[51] = v4;
  }
  a1[50] = v4;
  if (*(_DWORD *)(a2 + 204) >= 2u) {
    uint64_t v6 = *(void *)a2;
  }
  else {
    uint64_t v6 = a2;
  }
  sub_216A622D8(v6, v6 + 200 * *(unsigned int *)(a2 + 200), (uint64_t)v5);
  return a1;
}

uint64_t sub_216A622D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = 0;
    do
    {
      sub_216A62370((_DWORD *)(a3 + v6), (_DWORD *)(a1 + v6));
      v6 += 200;
    }
    while (a1 + v6 != a2);
    a3 += v6;
  }
  return a3;
}

void sub_216A62338(void *a1)
{
  __cxa_begin_catch(a1);
  for (; v2; v2 -= 200)
  {
    sub_216A62860(v1);
    v1 += 200;
  }
  __cxa_rethrow();
}

void sub_216A6235C(_Unwind_Exception *a1)
{
}

_DWORD *sub_216A62370(_DWORD *a1, _DWORD *a2)
{
  unsigned int v4 = sub_216981010(a1, a2);
  sub_21698105C(v4 + 1, a2 + 1);
  sub_216A623C8((uint64_t)(a1 + 2), (uint64_t)(a2 + 2));
  return a1;
}

void sub_216A623B4(_Unwind_Exception *a1)
{
  sub_21697B754(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_216A623C8(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = sub_216A624AC((_DWORD *)a1, a2);
  v4[16] = 0;
  v4[17] = 0;
  v4[18] = 0;
  sub_216A626D4(v4 + 16, *(long long **)(a2 + 128), *(long long **)(a2 + 136), (uint64_t)(*(void *)(a2 + 136) - *(void *)(a2 + 128)) >> 5);
  sub_216981010((_DWORD *)(a1 + 152), (_DWORD *)(a2 + 152));
  sub_21698105C((_DWORD *)(a1 + 156), (_DWORD *)(a2 + 156));
  int v5 = (unsigned char *)(a1 + 160);
  if (*(char *)(a2 + 183) < 0)
  {
    sub_216778F24(v5, *(void **)(a2 + 160), *(void *)(a2 + 168));
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 160);
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(_OWORD *)int v5 = v6;
  }
  __int16 v7 = *(_WORD *)(a2 + 184);
  *(unsigned char *)(a1 + 186) = *(unsigned char *)(a2 + 186);
  *(_WORD *)(a1 + 184) = v7;
  return a1;
}

void sub_216A6247C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754(v3);
  sub_2168706D8((void ***)va);
  sub_21697C960(v2);
  _Unwind_Resume(a1);
}

_DWORD *sub_216A624AC(_DWORD *a1, uint64_t a2)
{
  a1[31] = 3;
  uint64_t v4 = *(unsigned int *)(a2 + 120);
  int v5 = a1;
  if (v4 >= 4)
  {
    int v5 = malloc(40 * v4);
    *(void *)a1 = v5;
    a1[31] = v4;
  }
  a1[30] = v4;
  if (*(_DWORD *)(a2 + 124) >= 4u) {
    uint64_t v6 = *(void *)a2;
  }
  else {
    uint64_t v6 = a2;
  }
  sub_216A6252C(v6, v6 + 40 * *(unsigned int *)(a2 + 120), (uint64_t)v5);
  return a1;
}

uint64_t sub_216A6252C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = 0;
    do
    {
      sub_216A625C4((uint64_t *)(a3 + v6), (uint64_t *)(a1 + v6));
      v6 += 40;
    }
    while (a1 + v6 != a2);
    a3 += v6;
  }
  return a3;
}

void sub_216A6258C(void *a1)
{
  __cxa_begin_catch(a1);
  for (; v2; v2 -= 40)
  {
    sub_216A62688(v1);
    v1 += 5;
  }
  __cxa_rethrow();
}

void sub_216A625B0(_Unwind_Exception *a1)
{
}

uint64_t *sub_216A625C4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *a1 = *a2;
  if ((v3 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v3 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    *a1 &= 0xFFFFFFFFFFFFFFF8;
  }
  sub_216A6263C(a1 + 1, a2 + 1);
  return a1;
}

void *sub_216A6263C(void *a1, void *a2)
{
  uint64_t v4 = sub_2168EE4C4(a1, a2);
  sub_2168EE4C4(v4 + 2, a2 + 2);
  return a1;
}

void sub_216A62674(_Unwind_Exception *a1)
{
  sub_2168EE084(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_216A62688(void *a1)
{
  uint64_t v2 = (uint64_t)(a1 + 1);
  sub_2168EE084((uint64_t)(a1 + 3));
  uint64_t result = sub_2168EE084(v2);
  if ((*a1 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(*a1 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  return result;
}

void *sub_216A626D4(void *result, long long *a2, long long *a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    sub_2168C5234(result, a4);
    uint64_t result = sub_216A6275C((uint64_t)(v6 + 2), a2, a3, (void *)v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_216A6273C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  sub_2168706D8(&a9);
  _Unwind_Resume(a1);
}

void *sub_216A6275C(uint64_t a1, long long *a2, long long *a3, void *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v12 = __dst;
  unint64_t v13 = __dst;
  v10[0] = a1;
  v10[1] = &v12;
  v10[2] = &v13;
  char v11 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      if (*((char *)v6 + 23) < 0)
      {
        sub_216778F24(v4, *(void **)v6, *((void *)v6 + 1));
        uint64_t v8 = v13;
      }
      else
      {
        long long v7 = *v6;
        void v4[2] = *((void *)v6 + 2);
        *(_OWORD *)uint64_t v4 = v7;
        uint64_t v8 = v4;
      }
      *((_DWORD *)v4 + 6) = *((_DWORD *)v6 + 6);
      v6 += 2;
      uint64_t v4 = v8 + 4;
      unint64_t v13 = v8 + 4;
    }
    while (v6 != a3);
  }
  char v11 = 1;
  sub_216A62828((uint64_t)v10);
  return v4;
}

void sub_216A62814(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_216A62828(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_2169B7964(a1);
  }
  return a1;
}

_DWORD *sub_216A62860(uint64_t a1)
{
  if (*(char *)(a1 + 191) < 0) {
    operator delete(*(void **)(a1 + 168));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 164));
  sub_21697C414((_DWORD *)(a1 + 160));
  uint64_t v3 = (void **)(a1 + 136);
  sub_2168706D8(&v3);
  sub_21697C960(a1 + 8);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 4));
  return sub_21697C414((_DWORD *)a1);
}

uint64_t sub_216A628DC(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  sub_21678A04C(a1, *(void *)(a2 + 8));
  for (unint64_t i = *(unsigned int **)(a2 + 16); i; unint64_t i = *(unsigned int **)i)
    sub_216A62954(a1, i + 4, (uint64_t)(i + 4));
  return a1;
}

void sub_216A6293C(_Unwind_Exception *a1)
{
  sub_21697C738(v1);
  _Unwind_Resume(a1);
}

void *sub_216A62954(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  unint64_t v5 = bswap64(0x9E3779B97F4A7C55* (a2[1]+ ((a2[1] + (unint64_t)*a2 + (a2[1] + (unint64_t)*a2) * (a2[1] + (unint64_t)*a2)) >> 1)));
  unint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    uint8x8_t v7 = (uint8x8_t)vcnt_s8((int8x8_t)v6);
    v7.i16[0] = vaddlv_u8(v7);
    if (v7.u32[0] > 1uLL)
    {
      unint64_t v3 = v5;
      if (v5 >= v6) {
        unint64_t v3 = v5 % v6;
      }
    }
    else
    {
      unint64_t v3 = v5 & (v6 - 1);
    }
    uint64_t v8 = *(void **)(*(void *)a1 + 8 * v3);
    if (v8)
    {
      uint64_t v9 = (void *)*v8;
      if (*v8)
      {
        do
        {
          unint64_t v10 = v9[1];
          if (v10 == v5)
          {
            if (v9[2] == *(void *)a2) {
              return v9;
            }
          }
          else
          {
            if (v7.u32[0] > 1uLL)
            {
              if (v10 >= v6) {
                v10 %= v6;
              }
            }
            else
            {
              v10 &= v6 - 1;
            }
            if (v10 != v3) {
              break;
            }
          }
          uint64_t v9 = (void *)*v9;
        }
        while (v9);
      }
    }
  }
  sub_216A62BC4(a1, v5, a3, (uint64_t)v20);
  float v11 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v12 = *(float *)(a1 + 32);
  if (!v6 || (float)(v12 * (float)v6) < v11)
  {
    BOOL v13 = 1;
    if (v6 >= 3) {
      BOOL v13 = (v6 & (v6 - 1)) != 0;
    }
    unint64_t v14 = v13 | (2 * v6);
    unint64_t v15 = vcvtps_u32_f32(v11 / v12);
    if (v14 <= v15) {
      size_t v16 = v15;
    }
    else {
      size_t v16 = v14;
    }
    sub_21678A04C(a1, v16);
    unint64_t v6 = *(void *)(a1 + 8);
    if ((v6 & (v6 - 1)) != 0)
    {
      if (v5 >= v6) {
        unint64_t v3 = v5 % v6;
      }
      else {
        unint64_t v3 = v5;
      }
    }
    else
    {
      unint64_t v3 = (v6 - 1) & v5;
    }
  }
  uint64_t v17 = *(void **)(*(void *)a1 + 8 * v3);
  if (v17)
  {
    *(void *)v20[0] = *v17;
    *uint64_t v17 = v20[0];
  }
  else
  {
    *(void *)v20[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v20[0];
    *(void *)(*(void *)a1 + 8 * v3) = a1 + 16;
    if (*(void *)v20[0])
    {
      unint64_t v18 = *(void *)(*(void *)v20[0] + 8);
      if ((v6 & (v6 - 1)) != 0)
      {
        if (v18 >= v6) {
          v18 %= v6;
        }
      }
      else
      {
        v18 &= v6 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v18) = v20[0];
    }
  }
  uint64_t v9 = (void *)v20[0];
  v20[0] = 0;
  ++*(void *)(a1 + 24);
  sub_216A62C38((uint64_t)v20, 0);
  return v9;
}

void sub_216A62BAC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216A62C38((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

_DWORD *sub_216A62BC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 16;
  uint64_t v8 = operator new(0x20uLL);
  *(void *)a4 = v8;
  *(void *)(a4 + 8) = v7;
  *uint64_t v8 = 0;
  v8[1] = a2;
  sub_216981010((_DWORD *)v8 + 4, (_DWORD *)a3);
  uint64_t result = sub_21698105C((_DWORD *)v8 + 5, (_DWORD *)(a3 + 4));
  v8[3] = *(void *)(a3 + 8);
  *(unsigned char *)(a4 + 16) = 1;
  return result;
}

void sub_216A62C38(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(_DWORD **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_21697C7B8(v2 + 4);
    }
    operator delete(v2);
  }
}

uint64_t sub_216A62C90(_DWORD *a1, uint64_t a2, uint64_t a3)
{
  sub_21697C838(a1);
  a1[50] = 0;
  unsigned int v6 = -1030792151 * ((unint64_t)(a3 - a2) >> 3);
  unsigned int v7 = a1[51];
  if (v7 < v6)
  {
    sub_216A62D18(a1, -1030792151 * ((unint64_t)(a3 - a2) >> 3));
    unsigned int v7 = a1[51];
  }
  uint64_t v8 = (uint64_t)a1;
  if (v7 >= 2) {
    uint64_t v8 = *(void *)a1;
  }
  uint64_t result = sub_216A622D8(a2, a3, v8);
  a1[50] = v6;
  return result;
}

void sub_216A62D18(_DWORD *a1, unsigned int a2)
{
  uint64_t v4 = malloc(200 * a2);
  uint64_t v5 = (uint64_t)a1;
  if (a1[51] >= 2u) {
    uint64_t v5 = *(void *)a1;
  }
  sub_216A62DA0(v5, v5 + 200 * a1[50], (uint64_t)v4);
  sub_21697C838(a1);
  if (a1[51] >= 2u) {
    free(*(void **)a1);
  }
  *(void *)a1 = v4;
  a1[51] = a2;
}

uint64_t sub_216A62DA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = 0;
    do
    {
      sub_21697DF48(a3 + v6, a1 + v6);
      v6 += 200;
    }
    while (a1 + v6 != a2);
    a3 += v6;
  }
  return a3;
}

void sub_216A62E00(void *a1)
{
  __cxa_begin_catch(a1);
  for (; v2; v2 -= 200)
  {
    sub_216A62860(v1);
    v1 += 200;
  }
  __cxa_rethrow();
}

void sub_216A62E24(_Unwind_Exception *a1)
{
}

uint64_t sub_216A62E38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1;
  if (a1 != a2)
  {
    do
    {
      sub_216A62E98(a3, v4);
      v4 += 200;
      a3 += 200;
    }
    while (v4 != a2);
    return a2;
  }
  return v4;
}

uint64_t sub_216A62E98(uint64_t a1, uint64_t a2)
{
  sub_21697DE94((int *)a1, (int *)a2);
  sub_21697DEEC((int *)(a1 + 4), (int *)(a2 + 4));
  if (a1 != a2) {
    sub_21697D8F0(a1 + 8, a2 + 8);
  }
  sub_21697DE58((uint64_t *)(a1 + 136));
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a2 + 136) = 0;
  *(void *)(a2 + 144) = 0;
  *(void *)(a2 + 152) = 0;
  sub_21697DE94((int *)(a1 + 160), (int *)(a2 + 160));
  sub_21697DEEC((int *)(a1 + 164), (int *)(a2 + 164));
  uint64_t v4 = (void **)(a1 + 168);
  if (*(char *)(a1 + 191) < 0) {
    operator delete(*v4);
  }
  long long v5 = *(_OWORD *)(a2 + 168);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(_OWORD *)uint64_t v4 = v5;
  *(unsigned char *)(a2 + 191) = 0;
  *(unsigned char *)(a2 + 168) = 0;
  __int16 v6 = *(_WORD *)(a2 + 192);
  *(unsigned char *)(a1 + 194) = *(unsigned char *)(a2 + 194);
  *(_WORD *)(a1 + 192) = v6;
  return a1;
}

void *sub_216A62F60(void *a1, unsigned int *a2)
{
  int8x8_t v2 = (int8x8_t)a1[1];
  if (!*(void *)&v2) {
    return 0;
  }
  unint64_t v3 = bswap64(0x9E3779B97F4A7C55* (a2[1]+ ((a2[1] + (unint64_t)*a2 + (a2[1] + (unint64_t)*a2) * (a2[1] + (unint64_t)*a2)) >> 1)));
  uint8x8_t v4 = (uint8x8_t)vcnt_s8(v2);
  v4.i16[0] = vaddlv_u8(v4);
  if (v4.u32[0] > 1uLL)
  {
    unint64_t v5 = v3;
    if (v3 >= *(void *)&v2) {
      unint64_t v5 = v3 % *(void *)&v2;
    }
  }
  else
  {
    unint64_t v5 = v3 & (*(void *)&v2 - 1);
  }
  __int16 v6 = *(void **)(*a1 + 8 * v5);
  if (!v6) {
    return 0;
  }
  uint64_t result = (void *)*v6;
  if (*v6)
  {
    do
    {
      unint64_t v8 = result[1];
      if (v8 == v3)
      {
        if (result[2] == *(void *)a2) {
          return result;
        }
      }
      else
      {
        if (v4.u32[0] > 1uLL)
        {
          if (v8 >= *(void *)&v2) {
            v8 %= *(void *)&v2;
          }
        }
        else
        {
          v8 &= *(void *)&v2 - 1;
        }
        if (v8 != v5) {
          return 0;
        }
      }
      uint64_t result = (void *)*result;
    }
    while (result);
  }
  return result;
}

uint64_t sub_216A6303C(uint64_t a1, _DWORD *a2)
{
  uint8x8_t v4 = sub_216981010((_DWORD *)a1, a2);
  sub_21698105C(v4 + 1, a2 + 1);
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_DWORD *)(a1 + 132) = 3;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a1 + 160));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a1 + 164));
  *(void *)(a1 + 168) = 0;
  *(void *)(a1 + 176) = 0;
  *(_DWORD *)(a1 + 191) = 0;
  *(void *)(a1 + 184) = 0;
  return a1;
}

void *sub_216A630DC(uint64_t a1, unsigned int *a2, _DWORD *a3, unsigned int *a4)
{
  unint64_t v6 = bswap64(0x9E3779B97F4A7C55* (a2[1]+ ((a2[1] + (unint64_t)*a2 + (a2[1] + (unint64_t)*a2) * (a2[1] + (unint64_t)*a2)) >> 1)));
  unint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    uint8x8_t v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      unint64_t v4 = v6;
      if (v6 >= v7) {
        unint64_t v4 = v6 % v7;
      }
    }
    else
    {
      unint64_t v4 = v6 & (v7 - 1);
    }
    uint64_t v9 = *(void **)(*(void *)a1 + 8 * v4);
    if (v9)
    {
      unint64_t v10 = (void *)*v9;
      if (*v9)
      {
        do
        {
          unint64_t v11 = v10[1];
          if (v11 == v6)
          {
            if (v10[2] == *(void *)a2) {
              return v10;
            }
          }
          else
          {
            if (v8.u32[0] > 1uLL)
            {
              if (v11 >= v7) {
                v11 %= v7;
              }
            }
            else
            {
              v11 &= v7 - 1;
            }
            if (v11 != v4) {
              break;
            }
          }
          unint64_t v10 = (void *)*v10;
        }
        while (v10);
      }
    }
  }
  sub_216A6334C(a1, v6, a3, a4, (uint64_t)v21);
  float v12 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v13 = *(float *)(a1 + 32);
  if (!v7 || (float)(v13 * (float)v7) < v12)
  {
    BOOL v14 = 1;
    if (v7 >= 3) {
      BOOL v14 = (v7 & (v7 - 1)) != 0;
    }
    unint64_t v15 = v14 | (2 * v7);
    unint64_t v16 = vcvtps_u32_f32(v12 / v13);
    if (v15 <= v16) {
      size_t v17 = v16;
    }
    else {
      size_t v17 = v15;
    }
    sub_21678A04C(a1, v17);
    unint64_t v7 = *(void *)(a1 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v6 >= v7) {
        unint64_t v4 = v6 % v7;
      }
      else {
        unint64_t v4 = v6;
      }
    }
    else
    {
      unint64_t v4 = (v7 - 1) & v6;
    }
  }
  unint64_t v18 = *(void **)(*(void *)a1 + 8 * v4);
  if (v18)
  {
    *(void *)v21[0] = *v18;
    *unint64_t v18 = v21[0];
  }
  else
  {
    *(void *)v21[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v21[0];
    *(void *)(*(void *)a1 + 8 * v4) = a1 + 16;
    if (*(void *)v21[0])
    {
      unint64_t v19 = *(void *)(*(void *)v21[0] + 8);
      if ((v7 & (v7 - 1)) != 0)
      {
        if (v19 >= v7) {
          v19 %= v7;
        }
      }
      else
      {
        v19 &= v7 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v19) = v21[0];
    }
  }
  unint64_t v10 = (void *)v21[0];
  v21[0] = 0;
  ++*(void *)(a1 + 24);
  sub_216A62C38((uint64_t)v21, 0);
  return v10;
}

void sub_216A63334(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216A62C38((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

_DWORD *sub_216A6334C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X2>, unsigned int *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9 = a1 + 16;
  unint64_t v10 = operator new(0x20uLL);
  *(void *)a5 = v10;
  *(void *)(a5 + 8) = v9;
  void *v10 = 0;
  v10[1] = a2;
  sub_216981010((_DWORD *)v10 + 4, a3);
  uint64_t result = sub_21698105C((_DWORD *)v10 + 5, a3 + 1);
  void v10[3] = *a4;
  *(unsigned char *)(a5 + 16) = 1;
  return result;
}

void *sub_216A633C4(uint64_t a1, unsigned int *a2, _DWORD *a3, void *a4)
{
  unint64_t v6 = bswap64(0x9E3779B97F4A7C55* (a2[1]+ ((a2[1] + (unint64_t)*a2 + (a2[1] + (unint64_t)*a2) * (a2[1] + (unint64_t)*a2)) >> 1)));
  unint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    uint8x8_t v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      unint64_t v4 = v6;
      if (v6 >= v7) {
        unint64_t v4 = v6 % v7;
      }
    }
    else
    {
      unint64_t v4 = v6 & (v7 - 1);
    }
    uint64_t v9 = *(void **)(*(void *)a1 + 8 * v4);
    if (v9)
    {
      unint64_t v10 = (void *)*v9;
      if (*v9)
      {
        do
        {
          unint64_t v11 = v10[1];
          if (v11 == v6)
          {
            if (v10[2] == *(void *)a2) {
              return v10;
            }
          }
          else
          {
            if (v8.u32[0] > 1uLL)
            {
              if (v11 >= v7) {
                v11 %= v7;
              }
            }
            else
            {
              v11 &= v7 - 1;
            }
            if (v11 != v4) {
              break;
            }
          }
          unint64_t v10 = (void *)*v10;
        }
        while (v10);
      }
    }
  }
  sub_216A63634(a1, v6, a3, a4, (uint64_t)v21);
  float v12 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v13 = *(float *)(a1 + 32);
  if (!v7 || (float)(v13 * (float)v7) < v12)
  {
    BOOL v14 = 1;
    if (v7 >= 3) {
      BOOL v14 = (v7 & (v7 - 1)) != 0;
    }
    unint64_t v15 = v14 | (2 * v7);
    unint64_t v16 = vcvtps_u32_f32(v12 / v13);
    if (v15 <= v16) {
      size_t v17 = v16;
    }
    else {
      size_t v17 = v15;
    }
    sub_21678A04C(a1, v17);
    unint64_t v7 = *(void *)(a1 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v6 >= v7) {
        unint64_t v4 = v6 % v7;
      }
      else {
        unint64_t v4 = v6;
      }
    }
    else
    {
      unint64_t v4 = (v7 - 1) & v6;
    }
  }
  unint64_t v18 = *(void **)(*(void *)a1 + 8 * v4);
  if (v18)
  {
    *(void *)v21[0] = *v18;
    *unint64_t v18 = v21[0];
  }
  else
  {
    *(void *)v21[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v21[0];
    *(void *)(*(void *)a1 + 8 * v4) = a1 + 16;
    if (*(void *)v21[0])
    {
      unint64_t v19 = *(void *)(*(void *)v21[0] + 8);
      if ((v7 & (v7 - 1)) != 0)
      {
        if (v19 >= v7) {
          v19 %= v7;
        }
      }
      else
      {
        v19 &= v7 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v19) = v21[0];
    }
  }
  unint64_t v10 = (void *)v21[0];
  v21[0] = 0;
  ++*(void *)(a1 + 24);
  sub_216A62C38((uint64_t)v21, 0);
  return v10;
}

void sub_216A6361C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216A62C38((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

_DWORD *sub_216A63634@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9 = a1 + 16;
  unint64_t v10 = operator new(0x20uLL);
  *(void *)a5 = v10;
  *(void *)(a5 + 8) = v9;
  void *v10 = 0;
  v10[1] = a2;
  sub_216981010((_DWORD *)v10 + 4, a3);
  uint64_t result = sub_21698105C((_DWORD *)v10 + 5, a3 + 1);
  void v10[3] = *a4;
  *(unsigned char *)(a5 + 16) = 1;
  return result;
}

uint64_t sub_216A636AC(uint64_t *a1, void *a2)
{
  uint64_t result = sub_216A63724((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_216A63724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v15 = a6;
  *((void *)&v15 + 1) = a7;
  long long v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  if (a3 == a5)
  {
    uint64_t v10 = a6;
  }
  else
  {
    uint64_t v8 = a7;
    do
    {
      long long v9 = *(_OWORD *)(a3 - 32);
      *(void *)(v8 - 16) = *(void *)(a3 - 16);
      *(_OWORD *)(v8 - 32) = v9;
      *(void *)(a3 - 24) = 0;
      *(void *)(a3 - 16) = 0;
      *(void *)(a3 - 32) = 0;
      *(_DWORD *)(v8 - 8) = *(_DWORD *)(a3 - 8);
      v8 -= 32;
      v7 -= 32;
      a3 -= 32;
    }
    while (a3 != a5);
    *((void *)&v15 + 1) = v8;
    uint64_t v10 = v15;
  }
  char v13 = 1;
  sub_216A637D4((uint64_t)v12);
  return v10;
}

uint64_t sub_216A637D4(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_216870910(a1);
  }
  return a1;
}

void sub_216A6380C(uint64_t a1, unsigned int a2)
{
  unint64_t v4 = malloc(40 * a2);
  uint64_t v5 = (void *)a1;
  if (*(_DWORD *)(a1 + 124) >= 4u) {
    uint64_t v5 = *(void **)a1;
  }
  sub_21697D7F4(v5, &v5[5 * *(unsigned int *)(a1 + 120)], v4);
  sub_21697C9A0(a1);
  if (*(_DWORD *)(a1 + 124) >= 4u) {
    free(*(void **)a1);
  }
  *(void *)a1 = v4;
  *(_DWORD *)(a1 + 124) = a2;
}

uint64_t *sub_216A63894(uint64_t *a1, uint64_t *a2, void *a3)
{
  uint64_t v5 = *a2;
  *a1 = *a2;
  if ((v5 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v5 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    *a1 &= 0xFFFFFFFFFFFFFFF8;
  }
  sub_2168EDFA8(a1 + 1, a3);
  sub_2168EDFA8(a1 + 3, a3 + 2);
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_AttributeChildPolicy>::Sdf_Children(uint64_t a1)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a1 + 16));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a1 + 20));
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 64) = 0;
  return a1;
}

{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a1 + 16));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a1 + 20));
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 64) = 0;
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_AttributeChildPolicy>::Sdf_Children(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  if (v4) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v4 + 8), 1u, memory_order_relaxed);
  }
  sub_216981010((_DWORD *)(a1 + 16), (_DWORD *)(a2 + 16));
  sub_21698105C((_DWORD *)(a1 + 20), (_DWORD *)(a2 + 20));
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 24) = v5;
  if ((v5 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v5 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    *(void *)(a1 + 24) &= 0xFFFFFFFFFFFFFFF8;
  }
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 64) = 0;
  *(void *)(a1 + 56) = 0;
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_AttributeChildPolicy>::Sdf_Children(uint64_t a1, void *a2, _DWORD *a3, uint64_t *a4)
{
  uint64_t v7 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v7;
  if (v7) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v7 + 8), 1u, memory_order_relaxed);
  }
  sub_216981010((_DWORD *)(a1 + 16), a3);
  sub_21698105C((_DWORD *)(a1 + 20), a3 + 1);
  uint64_t v8 = *a4;
  *(void *)(a1 + 24) = *a4;
  if ((v8 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    *(void *)(a1 + 24) &= 0xFFFFFFFFFFFFFFF8;
  }
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 64) = 0;
  *(void *)(a1 + 56) = 0;
  return a1;
}

BOOL pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_AttributeChildPolicy>::IsValid(uint64_t a1)
{
  int8x8_t v2 = sub_21697CF14((void *)a1);
  return v3 & 1 | (unint64_t)v2
      && pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 16));
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_AttributeChildPolicy>::GetSize()
{
}

{
  while (1)
    ;
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_AttributeChildPolicy>::_UpdateChildNames(uint64_t a1)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  if (!*(unsigned char *)(a1 + 64))
  {
    *(unsigned char *)(a1 + 64) = 1;
    int8x8_t v2 = sub_21697CF14((void *)a1);
    if (v3 & 1 | (unint64_t)v2)
    {
      uint64_t v4 = sub_2169791E0((uint64_t *)a1);
      memset(v11, 0, sizeof(v11));
      uint64_t v5 = sub_216A5B7B0((uint64_t *)(v4 + 112));
      (*(void (**)(void ***__return_ptr))(*(void *)v5 + 136))(&v14);
      if (sub_21697BFBC((pxrInternal__aapl__pxrReserved__::VtValue *)&v14))
      {
        if ((v15 & 4) != 0) {
          uint64_t v6 = (uint64_t **)(*(uint64_t (**)(void ***))((v15 & 0xFFFFFFFFFFFFFFF8) + 168))(&v14);
        }
        else {
          uint64_t v6 = (uint64_t **)v14;
        }
      }
      else
      {
        uint64_t v6 = (uint64_t **)v11;
      }
      long long v12 = 0uLL;
      uint64_t v13 = 0;
      sub_21698FA28(&v12, *v6, v6[1], v6[1] - *v6);
      sub_2168EE084((uint64_t)&v14);
      sub_216A698A4((void **)(a1 + 40));
      *(_OWORD *)(a1 + 40) = v12;
      *(void *)(a1 + 56) = v13;
      uint64_t v13 = 0;
      long long v12 = 0uLL;
      long long v14 = (void **)&v12;
      sub_216889A04(&v14);
      long long v14 = (void **)v11;
      sub_216889A04(&v14);
    }
    else
    {
      uint64_t v7 = *(void *)(a1 + 40);
      for (uint64_t i = *(void *)(a1 + 48); i != v7; i -= 8)
      {
        uint64_t v10 = *(void *)(i - 8);
        uint64_t v9 = v10;
        if ((v10 & 7) != 0) {
          atomic_fetch_add_explicit((atomic_uint *volatile)(v9 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
        }
      }
      *(void *)(a1 + 48) = v7;
    }
  }
}

void sub_216A63CC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  sub_2168EE084(v10 - 40);
  *(void *)(v10 - 48) = &a10;
  sub_216889A04((void ***)(v10 - 48));
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_AttributeChildPolicy>::GetChild()
{
}

{
  while (1)
    ;
}

void sub_216A63E1C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v3 = va_arg(va1, void);
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec((pxrInternal__aapl__pxrReserved__::SdfSpec *)va);
  sub_21697B754((int *)va1);
  _Unwind_Resume(a1);
}

void sub_216A63E40(pxrInternal__aapl__pxrReserved__::SdfPath *a1@<X0>, const pxrInternal__aapl__pxrReserved__::TfToken *a2@<X1>, int *a3@<X8>)
{
  if (pxrInternal__aapl__pxrReserved__::SdfPath::IsTargetPath(a1))
  {
    pxrInternal__aapl__pxrReserved__::SdfPath::AppendRelationalAttribute(a1, a2, a3);
  }
  else
  {
    pxrInternal__aapl__pxrReserved__::SdfPath::AppendProperty(a1, a2, a3);
  }
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_AttributeChildPolicy>::Find()
{
}

{
  while (1)
    ;
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_AttributeChildPolicy>::FindKey()
{
}

void sub_216A64120(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
}

pxrInternal__aapl__pxrReserved__::Sdf_Identity **sub_216A64148(pxrInternal__aapl__pxrReserved__::Sdf_Identity **a1)
{
  if (pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant(a1))
  {
    v7[0] = "sdf/declareHandles.h";
    v7[1] = "operator->";
    v7[2] = 96;
    void v7[3] = "SpecType *pxrInternal__aapl__pxrReserved__::SdfHandle<pxrInternal__aapl__pxrReserved__::SdfAttributeSpec>::o"
            "perator->() const [T = pxrInternal__aapl__pxrReserved__::SdfAttributeSpec]";
    char v8 = 0;
    int v9 = 4;
    pxrInternal__aapl__pxrReserved__::ArchGetDemangled((pxrInternal__aapl__pxrReserved__ *)(0x800000021746BF94 & 0x7FFFFFFFFFFFFFFFLL), (uint64_t)v5);
    if (v6 >= 0) {
      uint64_t v4 = v5;
    }
    else {
      uint64_t v4 = (void *)v5[0];
    }
    pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper::IssueFatalError((pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper *)v7, (pxrInternal__aapl__pxrReserved__ *)"Dereferenced an invalid %s", v3, v4);
  }
  return a1;
}

void sub_216A641F0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  JUMPOUT(0x216A64168);
}

void sub_216A64208(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

_DWORD *sub_216A64224@<X0>(pxrInternal__aapl__pxrReserved__::Sdf_Identity **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = sub_216A64148(a1);
  pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v3, &v7);
  Name = pxrInternal__aapl__pxrReserved__::SdfPath::GetName((pxrInternal__aapl__pxrReserved__::SdfPath *)&v7);
  if (*((char *)Name + 23) < 0)
  {
    sub_216778F24((unsigned char *)a2, (void *)*Name, Name[1]);
  }
  else
  {
    long long v5 = *(_OWORD *)Name;
    *(void *)(a2 + 16) = Name[2];
    *(_OWORD *)a2 = v5;
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v8);
  return sub_21697C414(&v7);
}

void sub_216A642A0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

BOOL pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_AttributeChildPolicy>::IsEqualTo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_216851B24(a1);
  return v4 == sub_216851B24(a2)
      && *(void *)(a1 + 16) == *(void *)(a2 + 16)
      && (*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFF8) == (*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFF8);
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_AttributeChildPolicy>::Copy(uint64_t a1)
{
  *(unsigned char *)(a1 + 64) = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_AttributeChildPolicy>::IsValid();
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_AttributeChildPolicy>::Insert(uint64_t a1)
{
  *(unsigned char *)(a1 + 64) = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_AttributeChildPolicy>::IsValid();
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_AttributeChildPolicy>::Erase(uint64_t a1)
{
  *(unsigned char *)(a1 + 64) = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_AttributeChildPolicy>::IsValid();
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_MapperChildPolicy>::Sdf_Children(uint64_t a1)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a1 + 16));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a1 + 20));
  *(_OWORD *)(a1 + 49) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  return a1;
}

{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a1 + 16));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a1 + 20));
  *(_OWORD *)(a1 + 49) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_MapperChildPolicy>::Sdf_Children(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  if (v4) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v4 + 8), 1u, memory_order_relaxed);
  }
  sub_216981010((_DWORD *)(a1 + 16), (_DWORD *)(a2 + 16));
  sub_21698105C((_DWORD *)(a1 + 20), (_DWORD *)(a2 + 20));
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 24) = v5;
  if ((v5 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v5 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    *(void *)(a1 + 24) &= 0xFFFFFFFFFFFFFFF8;
  }
  char v6 = *(atomic_uint **)(a2 + 32);
  *(void *)(a1 + 32) = v6;
  if (v6) {
    atomic_fetch_add(v6, 1u);
  }
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 64) = 0;
  *(void *)(a1 + 56) = 0;
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_MapperChildPolicy>::Sdf_Children(uint64_t a1, void *a2, _DWORD *a3, uint64_t *a4, atomic_uint **a5)
{
  uint64_t v9 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v9;
  if (v9) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v9 + 8), 1u, memory_order_relaxed);
  }
  sub_216981010((_DWORD *)(a1 + 16), a3);
  sub_21698105C((_DWORD *)(a1 + 20), a3 + 1);
  uint64_t v10 = *a4;
  *(void *)(a1 + 24) = *a4;
  if ((v10 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v10 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    *(void *)(a1 + 24) &= 0xFFFFFFFFFFFFFFF8;
  }
  unint64_t v11 = *a5;
  *(void *)(a1 + 32) = *a5;
  if (v11) {
    atomic_fetch_add(v11, 1u);
  }
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 64) = 0;
  *(void *)(a1 + 56) = 0;
  return a1;
}

BOOL pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_MapperChildPolicy>::IsValid(uint64_t a1)
{
  int8x8_t v2 = sub_21697CF14((void *)a1);
  return v3 & 1 | (unint64_t)v2
      && pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 16));
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_MapperChildPolicy>::GetSize()
{
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_MapperChildPolicy>::_UpdateChildNames(uint64_t a1)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  if (!*(unsigned char *)(a1 + 64))
  {
    *(unsigned char *)(a1 + 64) = 1;
    int8x8_t v2 = sub_21697CF14((void *)a1);
    if (v3 & 1 | (unint64_t)v2)
    {
      uint64_t v4 = sub_2169791E0((uint64_t *)a1);
      memset(v9, 0, sizeof(v9));
      uint64_t v5 = sub_216A5B7B0((uint64_t *)(v4 + 112));
      (*(void (**)(void ***__return_ptr))(*(void *)v5 + 136))(&v12);
      if (sub_2169DC8C8((pxrInternal__aapl__pxrReserved__::VtValue *)&v12))
      {
        if ((v13 & 4) != 0) {
          char v6 = (void **)(*(uint64_t (**)(void ***))((v13 & 0xFFFFFFFFFFFFFFF8) + 168))(&v12);
        }
        else {
          char v6 = v12;
        }
      }
      else
      {
        char v6 = (void **)v9;
      }
      long long v10 = 0uLL;
      uint64_t v11 = 0;
      sub_216980EEC(&v10, *v6, v6[1], ((unsigned char *)v6[1] - (unsigned char *)*v6) >> 3);
      sub_2168EE084((uint64_t)&v12);
      sub_216981200((void *)(a1 + 40));
      *(_OWORD *)(a1 + 40) = v10;
      *(void *)(a1 + 56) = v11;
      uint64_t v11 = 0;
      long long v10 = 0uLL;
      long long v12 = (void **)&v10;
      sub_216981168(&v12);
      long long v12 = (void **)v9;
      sub_216981168(&v12);
    }
    else
    {
      int v8 = *(_DWORD **)(a1 + 40);
      for (uint64_t i = *(_DWORD **)(a1 + 48); i != v8; sub_216981128(a1 + 56, i))
        i -= 2;
      *(void *)(a1 + 48) = v8;
    }
  }
}

void sub_216A64944(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void **a17)
{
  sub_2168EE084(v17 - 56);
  a17 = (void **)&a10;
  sub_216981168(&a17);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_MapperChildPolicy>::GetChild()
{
}

void sub_216A64A98(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v3 = va_arg(va1, void);
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec((pxrInternal__aapl__pxrReserved__::SdfSpec *)va);
  sub_21697B754((int *)va1);
  _Unwind_Resume(a1);
}

_DWORD *sub_216A64ABC@<X0>(pxrInternal__aapl__pxrReserved__::SdfPath *a1@<X0>, pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, _DWORD *a3@<X8>)
{
  pxrInternal__aapl__pxrReserved__::SdfPath::GetPrimPath(a1, &v7);
  pxrInternal__aapl__pxrReserved__::SdfPath::MakeAbsolutePath(a2, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v7, &v9);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v8);
  sub_21697C414(&v7);
  pxrInternal__aapl__pxrReserved__::SdfPath::AppendMapper(a1, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v9, a3);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v10);
  return sub_21697C414(&v9);
}

void sub_216A64B48(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_MapperChildPolicy>::Find()
{
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_MapperChildPolicy>::FindKey()
{
}

void sub_216A64E00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
}

_DWORD *sub_216A64E28@<X0>(pxrInternal__aapl__pxrReserved__::Sdf_Identity **a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v3 = sub_21697F2E0(a1);
  pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v3, &v6);
  TargetPath = pxrInternal__aapl__pxrReserved__::SdfPath::GetTargetPath((pxrInternal__aapl__pxrReserved__::SdfPath *)&v6);
  sub_216981010(a2, TargetPath);
  sub_21698105C(a2 + 1, (_DWORD *)TargetPath + 1);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  return sub_21697C414(&v6);
}

void sub_216A64EA0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

BOOL pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_MapperChildPolicy>::IsEqualTo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_216851B24(a1);
  return v4 == sub_216851B24(a2)
      && *(void *)(a1 + 16) == *(void *)(a2 + 16)
      && (*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFF8) == (*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFF8);
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_MapperChildPolicy>::Copy(uint64_t a1)
{
  *(unsigned char *)(a1 + 64) = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_MapperChildPolicy>::IsValid();
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_MapperChildPolicy>::Insert(uint64_t a1)
{
  *(unsigned char *)(a1 + 64) = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_MapperChildPolicy>::IsValid();
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_MapperChildPolicy>::Erase(uint64_t a1)
{
  *(unsigned char *)(a1 + 64) = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_MapperChildPolicy>::IsValid();
}

void sub_216A65128(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_MapperArgChildPolicy>::Sdf_Children(uint64_t a1)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a1 + 16));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a1 + 20));
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 64) = 0;
  return a1;
}

{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a1 + 16));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a1 + 20));
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 64) = 0;
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_MapperArgChildPolicy>::Sdf_Children(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  if (v4) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v4 + 8), 1u, memory_order_relaxed);
  }
  sub_216981010((_DWORD *)(a1 + 16), (_DWORD *)(a2 + 16));
  sub_21698105C((_DWORD *)(a1 + 20), (_DWORD *)(a2 + 20));
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 24) = v5;
  if ((v5 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v5 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    *(void *)(a1 + 24) &= 0xFFFFFFFFFFFFFFF8;
  }
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 64) = 0;
  *(void *)(a1 + 56) = 0;
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_MapperArgChildPolicy>::Sdf_Children(uint64_t a1, void *a2, _DWORD *a3, uint64_t *a4)
{
  uint64_t v7 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v7;
  if (v7) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v7 + 8), 1u, memory_order_relaxed);
  }
  sub_216981010((_DWORD *)(a1 + 16), a3);
  sub_21698105C((_DWORD *)(a1 + 20), a3 + 1);
  uint64_t v8 = *a4;
  *(void *)(a1 + 24) = *a4;
  if ((v8 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    *(void *)(a1 + 24) &= 0xFFFFFFFFFFFFFFF8;
  }
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 64) = 0;
  *(void *)(a1 + 56) = 0;
  return a1;
}

BOOL pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_MapperArgChildPolicy>::IsValid(uint64_t a1)
{
  int8x8_t v2 = sub_21697CF14((void *)a1);
  return v3 & 1 | (unint64_t)v2
      && pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 16));
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_MapperArgChildPolicy>::GetSize()
{
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_MapperArgChildPolicy>::_UpdateChildNames(uint64_t a1)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  if (!*(unsigned char *)(a1 + 64))
  {
    *(unsigned char *)(a1 + 64) = 1;
    int8x8_t v2 = sub_21697CF14((void *)a1);
    if (v3 & 1 | (unint64_t)v2)
    {
      uint64_t v4 = sub_2169791E0((uint64_t *)a1);
      memset(v11, 0, sizeof(v11));
      uint64_t v5 = sub_216A5B7B0((uint64_t *)(v4 + 112));
      (*(void (**)(void ***__return_ptr))(*(void *)v5 + 136))(&v14);
      if (sub_21697BFBC((pxrInternal__aapl__pxrReserved__::VtValue *)&v14))
      {
        if ((v15 & 4) != 0) {
          int v6 = (uint64_t **)(*(uint64_t (**)(void ***))((v15 & 0xFFFFFFFFFFFFFFF8) + 168))(&v14);
        }
        else {
          int v6 = (uint64_t **)v14;
        }
      }
      else
      {
        int v6 = (uint64_t **)v11;
      }
      long long v12 = 0uLL;
      uint64_t v13 = 0;
      sub_21698FA28(&v12, *v6, v6[1], v6[1] - *v6);
      sub_2168EE084((uint64_t)&v14);
      sub_216A698A4((void **)(a1 + 40));
      *(_OWORD *)(a1 + 40) = v12;
      *(void *)(a1 + 56) = v13;
      uint64_t v13 = 0;
      long long v12 = 0uLL;
      uint64_t v14 = (void **)&v12;
      sub_216889A04(&v14);
      uint64_t v14 = (void **)v11;
      sub_216889A04(&v14);
    }
    else
    {
      uint64_t v7 = *(void *)(a1 + 40);
      for (uint64_t i = *(void *)(a1 + 48); i != v7; i -= 8)
      {
        uint64_t v10 = *(void *)(i - 8);
        uint64_t v9 = v10;
        if ((v10 & 7) != 0) {
          atomic_fetch_add_explicit((atomic_uint *volatile)(v9 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
        }
      }
      *(void *)(a1 + 48) = v7;
    }
  }
}

void sub_216A65504(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  sub_2168EE084(v10 - 40);
  *(void *)(v10 - 48) = &a10;
  sub_216889A04((void ***)(v10 - 48));
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_MapperArgChildPolicy>::GetChild()
{
}

void sub_216A65658(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v3 = va_arg(va1, void);
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec((pxrInternal__aapl__pxrReserved__::SdfSpec *)va);
  sub_21697B754((int *)va1);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_MapperArgChildPolicy>::Find()
{
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_MapperArgChildPolicy>::FindKey()
{
}

void sub_216A658E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
}

_DWORD *sub_216A65908@<X0>(pxrInternal__aapl__pxrReserved__::Sdf_Identity **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = sub_21697F2E0(a1);
  pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v3, &v7);
  Name = pxrInternal__aapl__pxrReserved__::SdfPath::GetName((pxrInternal__aapl__pxrReserved__::SdfPath *)&v7);
  if (*((char *)Name + 23) < 0)
  {
    sub_216778F24((unsigned char *)a2, (void *)*Name, Name[1]);
  }
  else
  {
    long long v5 = *(_OWORD *)Name;
    *(void *)(a2 + 16) = Name[2];
    *(_OWORD *)a2 = v5;
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v8);
  return sub_21697C414(&v7);
}

void sub_216A65984(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

BOOL pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_MapperArgChildPolicy>::IsEqualTo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_216851B24(a1);
  return v4 == sub_216851B24(a2)
      && *(void *)(a1 + 16) == *(void *)(a2 + 16)
      && (*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFF8) == (*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFF8);
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_MapperArgChildPolicy>::Copy(uint64_t a1)
{
  *(unsigned char *)(a1 + 64) = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_MapperArgChildPolicy>::IsValid();
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_MapperArgChildPolicy>::Insert(uint64_t a1)
{
  *(unsigned char *)(a1 + 64) = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_MapperArgChildPolicy>::IsValid();
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_MapperArgChildPolicy>::Erase(uint64_t a1)
{
  *(unsigned char *)(a1 + 64) = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_MapperArgChildPolicy>::IsValid();
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_PrimChildPolicy>::Sdf_Children(uint64_t a1)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a1 + 16));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a1 + 20));
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 64) = 0;
  return a1;
}

{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a1 + 16));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a1 + 20));
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 64) = 0;
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_PrimChildPolicy>::Sdf_Children(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  if (v4) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v4 + 8), 1u, memory_order_relaxed);
  }
  sub_216981010((_DWORD *)(a1 + 16), (_DWORD *)(a2 + 16));
  sub_21698105C((_DWORD *)(a1 + 20), (_DWORD *)(a2 + 20));
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 24) = v5;
  if ((v5 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v5 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    *(void *)(a1 + 24) &= 0xFFFFFFFFFFFFFFF8;
  }
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 64) = 0;
  *(void *)(a1 + 56) = 0;
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_PrimChildPolicy>::Sdf_Children(uint64_t a1, void *a2, _DWORD *a3, uint64_t *a4)
{
  uint64_t v7 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v7;
  if (v7) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v7 + 8), 1u, memory_order_relaxed);
  }
  sub_216981010((_DWORD *)(a1 + 16), a3);
  sub_21698105C((_DWORD *)(a1 + 20), a3 + 1);
  uint64_t v8 = *a4;
  *(void *)(a1 + 24) = *a4;
  if ((v8 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    *(void *)(a1 + 24) &= 0xFFFFFFFFFFFFFFF8;
  }
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 64) = 0;
  *(void *)(a1 + 56) = 0;
  return a1;
}

BOOL pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_PrimChildPolicy>::IsValid(uint64_t a1)
{
  int8x8_t v2 = sub_21697CF14((void *)a1);
  return v3 & 1 | (unint64_t)v2
      && pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 16));
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_PrimChildPolicy>::GetSize()
{
}

{
  while (1)
    ;
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_PrimChildPolicy>::_UpdateChildNames(uint64_t a1)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  if (!*(unsigned char *)(a1 + 64))
  {
    *(unsigned char *)(a1 + 64) = 1;
    int8x8_t v2 = sub_21697CF14((void *)a1);
    if (v3 & 1 | (unint64_t)v2)
    {
      uint64_t v4 = sub_2169791E0((uint64_t *)a1);
      memset(v11, 0, sizeof(v11));
      uint64_t v5 = sub_216A5B7B0((uint64_t *)(v4 + 112));
      (*(void (**)(void ***__return_ptr))(*(void *)v5 + 136))(&v14);
      if (sub_21697BFBC((pxrInternal__aapl__pxrReserved__::VtValue *)&v14))
      {
        if ((v15 & 4) != 0) {
          int v6 = (uint64_t **)(*(uint64_t (**)(void ***))((v15 & 0xFFFFFFFFFFFFFFF8) + 168))(&v14);
        }
        else {
          int v6 = (uint64_t **)v14;
        }
      }
      else
      {
        int v6 = (uint64_t **)v11;
      }
      long long v12 = 0uLL;
      uint64_t v13 = 0;
      sub_21698FA28(&v12, *v6, v6[1], v6[1] - *v6);
      sub_2168EE084((uint64_t)&v14);
      sub_216A698A4((void **)(a1 + 40));
      *(_OWORD *)(a1 + 40) = v12;
      *(void *)(a1 + 56) = v13;
      uint64_t v13 = 0;
      long long v12 = 0uLL;
      uint64_t v14 = (void **)&v12;
      sub_216889A04(&v14);
      uint64_t v14 = (void **)v11;
      sub_216889A04(&v14);
    }
    else
    {
      uint64_t v7 = *(void *)(a1 + 40);
      for (uint64_t i = *(void *)(a1 + 48); i != v7; i -= 8)
      {
        uint64_t v10 = *(void *)(i - 8);
        uint64_t v9 = v10;
        if ((v10 & 7) != 0) {
          atomic_fetch_add_explicit((atomic_uint *volatile)(v9 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
        }
      }
      *(void *)(a1 + 48) = v7;
    }
  }
}

void sub_216A65FF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  sub_2168EE084(v10 - 40);
  *(void *)(v10 - 48) = &a10;
  sub_216889A04((void ***)(v10 - 48));
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_PrimChildPolicy>::GetChild()
{
}

{
  while (1)
    ;
}

void sub_216A6614C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v3 = va_arg(va1, void);
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec((pxrInternal__aapl__pxrReserved__::SdfSpec *)va);
  sub_21697B754((int *)va1);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_PrimChildPolicy>::Find()
{
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_PrimChildPolicy>::FindKey()
{
}

void sub_216A663D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
}

pxrInternal__aapl__pxrReserved__::Sdf_Identity **sub_216A663FC(pxrInternal__aapl__pxrReserved__::Sdf_Identity **a1)
{
  if (pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant(a1))
  {
    v7[0] = "sdf/declareHandles.h";
    v7[1] = "operator->";
    v7[2] = 96;
    void v7[3] = "SpecType *pxrInternal__aapl__pxrReserved__::SdfHandle<pxrInternal__aapl__pxrReserved__::SdfPrimSpec>::operat"
            "or->() const [T = pxrInternal__aapl__pxrReserved__::SdfPrimSpec]";
    char v8 = 0;
    int v9 = 4;
    pxrInternal__aapl__pxrReserved__::ArchGetDemangled((pxrInternal__aapl__pxrReserved__ *)(0x8000000217473C7CLL & 0x7FFFFFFFFFFFFFFFLL), (uint64_t)v5);
    if (v6 >= 0) {
      uint64_t v4 = v5;
    }
    else {
      uint64_t v4 = (void *)v5[0];
    }
    pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper::IssueFatalError((pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper *)v7, (pxrInternal__aapl__pxrReserved__ *)"Dereferenced an invalid %s", v3, v4);
  }
  return a1;
}

void sub_216A664A4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  JUMPOUT(0x216A6641CLL);
}

void sub_216A664BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

_DWORD *sub_216A664D8@<X0>(pxrInternal__aapl__pxrReserved__::Sdf_Identity **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = sub_216A663FC(a1);
  pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v3, &v7);
  Name = pxrInternal__aapl__pxrReserved__::SdfPath::GetName((pxrInternal__aapl__pxrReserved__::SdfPath *)&v7);
  if (*((char *)Name + 23) < 0)
  {
    sub_216778F24((unsigned char *)a2, (void *)*Name, Name[1]);
  }
  else
  {
    long long v5 = *(_OWORD *)Name;
    *(void *)(a2 + 16) = Name[2];
    *(_OWORD *)a2 = v5;
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v8);
  return sub_21697C414(&v7);
}

void sub_216A66554(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

BOOL pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_PrimChildPolicy>::IsEqualTo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_216851B24(a1);
  return v4 == sub_216851B24(a2)
      && *(void *)(a1 + 16) == *(void *)(a2 + 16)
      && (*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFF8) == (*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFF8);
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_PrimChildPolicy>::Copy(uint64_t a1)
{
  *(unsigned char *)(a1 + 64) = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_PrimChildPolicy>::IsValid();
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_PrimChildPolicy>::Insert(uint64_t a1)
{
  *(unsigned char *)(a1 + 64) = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_PrimChildPolicy>::IsValid();
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_PrimChildPolicy>::Erase(uint64_t a1)
{
  *(unsigned char *)(a1 + 64) = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_PrimChildPolicy>::IsValid();
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_PropertyChildPolicy>::Sdf_Children(uint64_t a1)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a1 + 16));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a1 + 20));
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 64) = 0;
  return a1;
}

{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a1 + 16));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a1 + 20));
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 64) = 0;
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_PropertyChildPolicy>::Sdf_Children(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  if (v4) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v4 + 8), 1u, memory_order_relaxed);
  }
  sub_216981010((_DWORD *)(a1 + 16), (_DWORD *)(a2 + 16));
  sub_21698105C((_DWORD *)(a1 + 20), (_DWORD *)(a2 + 20));
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 24) = v5;
  if ((v5 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v5 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    *(void *)(a1 + 24) &= 0xFFFFFFFFFFFFFFF8;
  }
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 64) = 0;
  *(void *)(a1 + 56) = 0;
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_PropertyChildPolicy>::Sdf_Children(uint64_t a1, void *a2, _DWORD *a3, uint64_t *a4)
{
  uint64_t v7 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v7;
  if (v7) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v7 + 8), 1u, memory_order_relaxed);
  }
  sub_216981010((_DWORD *)(a1 + 16), a3);
  sub_21698105C((_DWORD *)(a1 + 20), a3 + 1);
  uint64_t v8 = *a4;
  *(void *)(a1 + 24) = *a4;
  if ((v8 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    *(void *)(a1 + 24) &= 0xFFFFFFFFFFFFFFF8;
  }
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 64) = 0;
  *(void *)(a1 + 56) = 0;
  return a1;
}

BOOL pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_PropertyChildPolicy>::IsValid(uint64_t a1)
{
  int8x8_t v2 = sub_21697CF14((void *)a1);
  return v3 & 1 | (unint64_t)v2
      && pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 16));
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_PropertyChildPolicy>::GetSize()
{
}

{
  while (1)
    ;
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_PropertyChildPolicy>::_UpdateChildNames(uint64_t a1)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  if (!*(unsigned char *)(a1 + 64))
  {
    *(unsigned char *)(a1 + 64) = 1;
    int8x8_t v2 = sub_21697CF14((void *)a1);
    if (v3 & 1 | (unint64_t)v2)
    {
      uint64_t v4 = sub_2169791E0((uint64_t *)a1);
      memset(v11, 0, sizeof(v11));
      uint64_t v5 = sub_216A5B7B0((uint64_t *)(v4 + 112));
      (*(void (**)(void ***__return_ptr))(*(void *)v5 + 136))(&v14);
      if (sub_21697BFBC((pxrInternal__aapl__pxrReserved__::VtValue *)&v14))
      {
        if ((v15 & 4) != 0) {
          char v6 = (uint64_t **)(*(uint64_t (**)(void ***))((v15 & 0xFFFFFFFFFFFFFFF8) + 168))(&v14);
        }
        else {
          char v6 = (uint64_t **)v14;
        }
      }
      else
      {
        char v6 = (uint64_t **)v11;
      }
      long long v12 = 0uLL;
      uint64_t v13 = 0;
      sub_21698FA28(&v12, *v6, v6[1], v6[1] - *v6);
      sub_2168EE084((uint64_t)&v14);
      sub_216A698A4((void **)(a1 + 40));
      *(_OWORD *)(a1 + 40) = v12;
      *(void *)(a1 + 56) = v13;
      uint64_t v13 = 0;
      long long v12 = 0uLL;
      uint64_t v14 = (void **)&v12;
      sub_216889A04(&v14);
      uint64_t v14 = (void **)v11;
      sub_216889A04(&v14);
    }
    else
    {
      uint64_t v7 = *(void *)(a1 + 40);
      for (uint64_t i = *(void *)(a1 + 48); i != v7; i -= 8)
      {
        uint64_t v10 = *(void *)(i - 8);
        uint64_t v9 = v10;
        if ((v10 & 7) != 0) {
          atomic_fetch_add_explicit((atomic_uint *volatile)(v9 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
        }
      }
      *(void *)(a1 + 48) = v7;
    }
  }
}

void sub_216A66BC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  sub_2168EE084(v10 - 40);
  *(void *)(v10 - 48) = &a10;
  sub_216889A04((void ***)(v10 - 48));
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_PropertyChildPolicy>::GetChild()
{
}

{
  while (1)
    ;
}

void sub_216A66D1C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v3 = va_arg(va1, void);
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec((pxrInternal__aapl__pxrReserved__::SdfSpec *)va);
  sub_21697B754((int *)va1);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_PropertyChildPolicy>::Find()
{
}

{
  while (1)
    ;
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_PropertyChildPolicy>::FindKey()
{
}

void sub_216A66FA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
}

_DWORD *sub_216A66FCC@<X0>(pxrInternal__aapl__pxrReserved__::Sdf_Identity **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = sub_216990F1C(a1);
  pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v3, &v7);
  Name = pxrInternal__aapl__pxrReserved__::SdfPath::GetName((pxrInternal__aapl__pxrReserved__::SdfPath *)&v7);
  if (*((char *)Name + 23) < 0)
  {
    sub_216778F24((unsigned char *)a2, (void *)*Name, Name[1]);
  }
  else
  {
    long long v5 = *(_OWORD *)Name;
    *(void *)(a2 + 16) = Name[2];
    *(_OWORD *)a2 = v5;
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v8);
  return sub_21697C414(&v7);
}

void sub_216A67048(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

BOOL pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_PropertyChildPolicy>::IsEqualTo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_216851B24(a1);
  return v4 == sub_216851B24(a2)
      && *(void *)(a1 + 16) == *(void *)(a2 + 16)
      && (*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFF8) == (*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFF8);
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_PropertyChildPolicy>::Copy(uint64_t a1)
{
  *(unsigned char *)(a1 + 64) = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_PropertyChildPolicy>::IsValid();
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_PropertyChildPolicy>::Insert(uint64_t a1)
{
  *(unsigned char *)(a1 + 64) = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_PropertyChildPolicy>::IsValid();
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_PropertyChildPolicy>::Erase(uint64_t a1)
{
  *(unsigned char *)(a1 + 64) = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_PropertyChildPolicy>::IsValid();
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_RelationshipChildPolicy>::Sdf_Children(uint64_t a1)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a1 + 16));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a1 + 20));
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 64) = 0;
  return a1;
}

{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a1 + 16));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a1 + 20));
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 64) = 0;
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_RelationshipChildPolicy>::Sdf_Children(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  if (v4) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v4 + 8), 1u, memory_order_relaxed);
  }
  sub_216981010((_DWORD *)(a1 + 16), (_DWORD *)(a2 + 16));
  sub_21698105C((_DWORD *)(a1 + 20), (_DWORD *)(a2 + 20));
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 24) = v5;
  if ((v5 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v5 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    *(void *)(a1 + 24) &= 0xFFFFFFFFFFFFFFF8;
  }
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 64) = 0;
  *(void *)(a1 + 56) = 0;
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_RelationshipChildPolicy>::Sdf_Children(uint64_t a1, void *a2, _DWORD *a3, uint64_t *a4)
{
  uint64_t v7 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v7;
  if (v7) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v7 + 8), 1u, memory_order_relaxed);
  }
  sub_216981010((_DWORD *)(a1 + 16), a3);
  sub_21698105C((_DWORD *)(a1 + 20), a3 + 1);
  uint64_t v8 = *a4;
  *(void *)(a1 + 24) = *a4;
  if ((v8 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    *(void *)(a1 + 24) &= 0xFFFFFFFFFFFFFFF8;
  }
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 64) = 0;
  *(void *)(a1 + 56) = 0;
  return a1;
}

BOOL pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_RelationshipChildPolicy>::IsValid(uint64_t a1)
{
  int8x8_t v2 = sub_21697CF14((void *)a1);
  return v3 & 1 | (unint64_t)v2
      && pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 16));
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_RelationshipChildPolicy>::GetSize()
{
}

{
  while (1)
    ;
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_RelationshipChildPolicy>::_UpdateChildNames(uint64_t a1)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  if (!*(unsigned char *)(a1 + 64))
  {
    *(unsigned char *)(a1 + 64) = 1;
    int8x8_t v2 = sub_21697CF14((void *)a1);
    if (v3 & 1 | (unint64_t)v2)
    {
      uint64_t v4 = sub_2169791E0((uint64_t *)a1);
      memset(v11, 0, sizeof(v11));
      uint64_t v5 = sub_216A5B7B0((uint64_t *)(v4 + 112));
      (*(void (**)(void ***__return_ptr))(*(void *)v5 + 136))(&v14);
      if (sub_21697BFBC((pxrInternal__aapl__pxrReserved__::VtValue *)&v14))
      {
        if ((v15 & 4) != 0) {
          char v6 = (uint64_t **)(*(uint64_t (**)(void ***))((v15 & 0xFFFFFFFFFFFFFFF8) + 168))(&v14);
        }
        else {
          char v6 = (uint64_t **)v14;
        }
      }
      else
      {
        char v6 = (uint64_t **)v11;
      }
      long long v12 = 0uLL;
      uint64_t v13 = 0;
      sub_21698FA28(&v12, *v6, v6[1], v6[1] - *v6);
      sub_2168EE084((uint64_t)&v14);
      sub_216A698A4((void **)(a1 + 40));
      *(_OWORD *)(a1 + 40) = v12;
      *(void *)(a1 + 56) = v13;
      uint64_t v13 = 0;
      long long v12 = 0uLL;
      uint64_t v14 = (void **)&v12;
      sub_216889A04(&v14);
      uint64_t v14 = (void **)v11;
      sub_216889A04(&v14);
    }
    else
    {
      uint64_t v7 = *(void *)(a1 + 40);
      for (uint64_t i = *(void *)(a1 + 48); i != v7; i -= 8)
      {
        uint64_t v10 = *(void *)(i - 8);
        uint64_t v9 = v10;
        if ((v10 & 7) != 0) {
          atomic_fetch_add_explicit((atomic_uint *volatile)(v9 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
        }
      }
      *(void *)(a1 + 48) = v7;
    }
  }
}

void sub_216A676BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  sub_2168EE084(v10 - 40);
  *(void *)(v10 - 48) = &a10;
  sub_216889A04((void ***)(v10 - 48));
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_RelationshipChildPolicy>::GetChild()
{
}

{
  while (1)
    ;
}

void sub_216A67810(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v3 = va_arg(va1, void);
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec((pxrInternal__aapl__pxrReserved__::SdfSpec *)va);
  sub_21697B754((int *)va1);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_RelationshipChildPolicy>::Find()
{
}

{
  while (1)
    ;
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_RelationshipChildPolicy>::FindKey()
{
}

void sub_216A67A98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
}

pxrInternal__aapl__pxrReserved__::Sdf_Identity **sub_216A67AC0(pxrInternal__aapl__pxrReserved__::Sdf_Identity **a1)
{
  if (pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant(a1))
  {
    v7[0] = "sdf/declareHandles.h";
    v7[1] = "operator->";
    v7[2] = 96;
    void v7[3] = "SpecType *pxrInternal__aapl__pxrReserved__::SdfHandle<pxrInternal__aapl__pxrReserved__::SdfRelationshipSpec>"
            "::operator->() const [T = pxrInternal__aapl__pxrReserved__::SdfRelationshipSpec]";
    char v8 = 0;
    int v9 = 4;
    pxrInternal__aapl__pxrReserved__::ArchGetDemangled((pxrInternal__aapl__pxrReserved__ *)(0x800000021746C0CFLL & 0x7FFFFFFFFFFFFFFFLL), (uint64_t)v5);
    if (v6 >= 0) {
      uint64_t v4 = v5;
    }
    else {
      uint64_t v4 = (void *)v5[0];
    }
    pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper::IssueFatalError((pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper *)v7, (pxrInternal__aapl__pxrReserved__ *)"Dereferenced an invalid %s", v3, v4);
  }
  return a1;
}

void sub_216A67B68(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  JUMPOUT(0x216A67AE0);
}

void sub_216A67B80(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

_DWORD *sub_216A67B9C@<X0>(pxrInternal__aapl__pxrReserved__::Sdf_Identity **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = sub_216A67AC0(a1);
  pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v3, &v7);
  Name = pxrInternal__aapl__pxrReserved__::SdfPath::GetName((pxrInternal__aapl__pxrReserved__::SdfPath *)&v7);
  if (*((char *)Name + 23) < 0)
  {
    sub_216778F24((unsigned char *)a2, (void *)*Name, Name[1]);
  }
  else
  {
    long long v5 = *(_OWORD *)Name;
    *(void *)(a2 + 16) = Name[2];
    *(_OWORD *)a2 = v5;
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v8);
  return sub_21697C414(&v7);
}

void sub_216A67C18(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

BOOL pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_RelationshipChildPolicy>::IsEqualTo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_216851B24(a1);
  return v4 == sub_216851B24(a2)
      && *(void *)(a1 + 16) == *(void *)(a2 + 16)
      && (*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFF8) == (*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFF8);
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_RelationshipChildPolicy>::Copy(uint64_t a1)
{
  *(unsigned char *)(a1 + 64) = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_RelationshipChildPolicy>::IsValid();
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_RelationshipChildPolicy>::Insert(uint64_t a1)
{
  *(unsigned char *)(a1 + 64) = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_RelationshipChildPolicy>::IsValid();
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_RelationshipChildPolicy>::Erase(uint64_t a1)
{
  *(unsigned char *)(a1 + 64) = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_RelationshipChildPolicy>::IsValid();
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_VariantChildPolicy>::Sdf_Children(uint64_t a1)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a1 + 16));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a1 + 20));
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 64) = 0;
  return a1;
}

{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a1 + 16));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a1 + 20));
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 64) = 0;
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_VariantChildPolicy>::Sdf_Children(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  if (v4) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v4 + 8), 1u, memory_order_relaxed);
  }
  sub_216981010((_DWORD *)(a1 + 16), (_DWORD *)(a2 + 16));
  sub_21698105C((_DWORD *)(a1 + 20), (_DWORD *)(a2 + 20));
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 24) = v5;
  if ((v5 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v5 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    *(void *)(a1 + 24) &= 0xFFFFFFFFFFFFFFF8;
  }
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 64) = 0;
  *(void *)(a1 + 56) = 0;
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_VariantChildPolicy>::Sdf_Children(uint64_t a1, void *a2, _DWORD *a3, uint64_t *a4)
{
  uint64_t v7 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v7;
  if (v7) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v7 + 8), 1u, memory_order_relaxed);
  }
  sub_216981010((_DWORD *)(a1 + 16), a3);
  sub_21698105C((_DWORD *)(a1 + 20), a3 + 1);
  uint64_t v8 = *a4;
  *(void *)(a1 + 24) = *a4;
  if ((v8 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    *(void *)(a1 + 24) &= 0xFFFFFFFFFFFFFFF8;
  }
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 64) = 0;
  *(void *)(a1 + 56) = 0;
  return a1;
}

BOOL pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_VariantChildPolicy>::IsValid(uint64_t a1)
{
  int8x8_t v2 = sub_21697CF14((void *)a1);
  return v3 & 1 | (unint64_t)v2
      && pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 16));
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_VariantChildPolicy>::GetSize()
{
}

{
  while (1)
    ;
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_VariantChildPolicy>::_UpdateChildNames(uint64_t a1)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  if (!*(unsigned char *)(a1 + 64))
  {
    *(unsigned char *)(a1 + 64) = 1;
    int8x8_t v2 = sub_21697CF14((void *)a1);
    if (v3 & 1 | (unint64_t)v2)
    {
      uint64_t v4 = sub_2169791E0((uint64_t *)a1);
      memset(v11, 0, sizeof(v11));
      uint64_t v5 = sub_216A5B7B0((uint64_t *)(v4 + 112));
      (*(void (**)(void ***__return_ptr))(*(void *)v5 + 136))(&v14);
      if (sub_21697BFBC((pxrInternal__aapl__pxrReserved__::VtValue *)&v14))
      {
        if ((v15 & 4) != 0) {
          char v6 = (uint64_t **)(*(uint64_t (**)(void ***))((v15 & 0xFFFFFFFFFFFFFFF8) + 168))(&v14);
        }
        else {
          char v6 = (uint64_t **)v14;
        }
      }
      else
      {
        char v6 = (uint64_t **)v11;
      }
      long long v12 = 0uLL;
      uint64_t v13 = 0;
      sub_21698FA28(&v12, *v6, v6[1], v6[1] - *v6);
      sub_2168EE084((uint64_t)&v14);
      sub_216A698A4((void **)(a1 + 40));
      *(_OWORD *)(a1 + 40) = v12;
      *(void *)(a1 + 56) = v13;
      uint64_t v13 = 0;
      long long v12 = 0uLL;
      uint64_t v14 = (void **)&v12;
      sub_216889A04(&v14);
      uint64_t v14 = (void **)v11;
      sub_216889A04(&v14);
    }
    else
    {
      uint64_t v7 = *(void *)(a1 + 40);
      for (uint64_t i = *(void *)(a1 + 48); i != v7; i -= 8)
      {
        uint64_t v10 = *(void *)(i - 8);
        uint64_t v9 = v10;
        if ((v10 & 7) != 0) {
          atomic_fetch_add_explicit((atomic_uint *volatile)(v9 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
        }
      }
      *(void *)(a1 + 48) = v7;
    }
  }
}

void sub_216A6828C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  sub_2168EE084(v10 - 40);
  *(void *)(v10 - 48) = &a10;
  sub_216889A04((void ***)(v10 - 48));
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_VariantChildPolicy>::GetChild()
{
}

{
  while (1)
    ;
}

void sub_216A683E0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v3 = va_arg(va1, void);
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec((pxrInternal__aapl__pxrReserved__::SdfSpec *)va);
  sub_21697B754((int *)va1);
  _Unwind_Resume(a1);
}

void sub_216A68404(pxrInternal__aapl__pxrReserved__::SdfPath *a1@<X0>, void *a2@<X1>, _DWORD *a3@<X8>)
{
  pxrInternal__aapl__pxrReserved__::SdfPath::GetVariantSelection(a1, (uint64_t)v10);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v10;
  uint64_t v15 = v11;
  v10[1] = 0;
  uint64_t v11 = 0;
  v10[0] = 0;
  if (v13 < 0)
  {
    operator delete(__p);
    if (SHIBYTE(v11) < 0) {
      operator delete(v10[0]);
    }
  }
  pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath(a1, v10);
  EmptyString = (uint64_t *)pxrInternal__aapl__pxrReserved__::TfToken::TfToken(&v9);
  if ((v9 & 0xFFFFFFFFFFFFFFF8) != 0)
  {
    uint64_t v7 = (v9 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  else
  {
    EmptyString = pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString((pxrInternal__aapl__pxrReserved__::TfToken *)EmptyString);
    uint64_t v7 = (uint64_t)EmptyString;
  }
  if ((*a2 & 0xFFFFFFFFFFFFFFF8) != 0) {
    uint64_t v8 = (uint64_t *)((*a2 & 0xFFFFFFFFFFFFFFF8) + 16);
  }
  else {
    uint64_t v8 = pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString((pxrInternal__aapl__pxrReserved__::TfToken *)EmptyString);
  }
  pxrInternal__aapl__pxrReserved__::SdfPath::AppendVariantSelection(v10, v7, (uint64_t)v8, a3);
  if ((v9 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v9 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v10 + 1);
  sub_21697C414(v10);
  if (SHIBYTE(v15) < 0) {
    operator delete(v14[0]);
  }
}

void sub_216A6851C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_VariantChildPolicy>::Find()
{
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_VariantChildPolicy>::FindKey()
{
}

void sub_216A687CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
}

void sub_216A687F4(pxrInternal__aapl__pxrReserved__::SdfPath *a1@<X0>, _DWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::SdfPath::GetVariantSelection(a1, (uint64_t)v6);
  long long v10 = *(_OWORD *)v6;
  uint64_t v11 = v7;
  v6[1] = 0;
  uint64_t v7 = 0;
  v6[0] = 0;
  if (v9 < 0)
  {
    operator delete(__p);
    if (SHIBYTE(v7) < 0) {
      operator delete(v6[0]);
    }
  }
  pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath(a1, &v4);
  sub_216779094(v6, "");
  pxrInternal__aapl__pxrReserved__::SdfPath::AppendVariantSelection(&v4, (uint64_t)&v10, (uint64_t)v6, a2);
  if (SHIBYTE(v7) < 0) {
    operator delete(v6[0]);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v5);
  sub_21697C414(&v4);
  if (SHIBYTE(v11) < 0) {
    operator delete((void *)v10);
  }
}

void sub_216A688C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  sub_21697B754(&a10);
  if (*(char *)(v16 - 25) < 0) {
    operator delete(*(void **)(v16 - 48));
  }
  _Unwind_Resume(a1);
}

_DWORD *sub_216A6890C@<X0>(pxrInternal__aapl__pxrReserved__::Sdf_Identity **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = sub_216992ED0(a1);
  pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v3, &v7);
  Name = pxrInternal__aapl__pxrReserved__::SdfPath::GetName((pxrInternal__aapl__pxrReserved__::SdfPath *)&v7);
  if (*((char *)Name + 23) < 0)
  {
    sub_216778F24((unsigned char *)a2, (void *)*Name, Name[1]);
  }
  else
  {
    long long v5 = *(_OWORD *)Name;
    *(void *)(a2 + 16) = Name[2];
    *(_OWORD *)a2 = v5;
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v8);
  return sub_21697C414(&v7);
}

void sub_216A68988(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

BOOL pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_VariantChildPolicy>::IsEqualTo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_216851B24(a1);
  return v4 == sub_216851B24(a2)
      && *(void *)(a1 + 16) == *(void *)(a2 + 16)
      && (*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFF8) == (*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFF8);
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_VariantChildPolicy>::Copy(uint64_t a1)
{
  *(unsigned char *)(a1 + 64) = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_VariantChildPolicy>::IsValid();
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_VariantChildPolicy>::Insert(uint64_t a1)
{
  *(unsigned char *)(a1 + 64) = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_VariantChildPolicy>::IsValid();
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_VariantChildPolicy>::Erase(uint64_t a1)
{
  *(unsigned char *)(a1 + 64) = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_VariantChildPolicy>::IsValid();
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_VariantSetChildPolicy>::Sdf_Children(uint64_t a1)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a1 + 16));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a1 + 20));
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 64) = 0;
  return a1;
}

{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a1 + 16));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a1 + 20));
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 64) = 0;
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_VariantSetChildPolicy>::Sdf_Children(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  if (v4) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v4 + 8), 1u, memory_order_relaxed);
  }
  sub_216981010((_DWORD *)(a1 + 16), (_DWORD *)(a2 + 16));
  sub_21698105C((_DWORD *)(a1 + 20), (_DWORD *)(a2 + 20));
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 24) = v5;
  if ((v5 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v5 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    *(void *)(a1 + 24) &= 0xFFFFFFFFFFFFFFF8;
  }
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 64) = 0;
  *(void *)(a1 + 56) = 0;
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_VariantSetChildPolicy>::Sdf_Children(uint64_t a1, void *a2, _DWORD *a3, uint64_t *a4)
{
  uint64_t v7 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v7;
  if (v7) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v7 + 8), 1u, memory_order_relaxed);
  }
  sub_216981010((_DWORD *)(a1 + 16), a3);
  sub_21698105C((_DWORD *)(a1 + 20), a3 + 1);
  uint64_t v8 = *a4;
  *(void *)(a1 + 24) = *a4;
  if ((v8 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    *(void *)(a1 + 24) &= 0xFFFFFFFFFFFFFFF8;
  }
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 64) = 0;
  *(void *)(a1 + 56) = 0;
  return a1;
}

BOOL pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_VariantSetChildPolicy>::IsValid(uint64_t a1)
{
  int8x8_t v2 = sub_21697CF14((void *)a1);
  return v3 & 1 | (unint64_t)v2
      && pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 16));
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_VariantSetChildPolicy>::GetSize()
{
}

{
  while (1)
    ;
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_VariantSetChildPolicy>::_UpdateChildNames(uint64_t a1)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  if (!*(unsigned char *)(a1 + 64))
  {
    *(unsigned char *)(a1 + 64) = 1;
    int8x8_t v2 = sub_21697CF14((void *)a1);
    if (v3 & 1 | (unint64_t)v2)
    {
      uint64_t v4 = sub_2169791E0((uint64_t *)a1);
      memset(v11, 0, sizeof(v11));
      uint64_t v5 = sub_216A5B7B0((uint64_t *)(v4 + 112));
      (*(void (**)(void ***__return_ptr))(*(void *)v5 + 136))(&v14);
      if (sub_21697BFBC((pxrInternal__aapl__pxrReserved__::VtValue *)&v14))
      {
        if ((v15 & 4) != 0) {
          char v6 = (uint64_t **)(*(uint64_t (**)(void ***))((v15 & 0xFFFFFFFFFFFFFFF8) + 168))(&v14);
        }
        else {
          char v6 = (uint64_t **)v14;
        }
      }
      else
      {
        char v6 = (uint64_t **)v11;
      }
      long long v12 = 0uLL;
      uint64_t v13 = 0;
      sub_21698FA28(&v12, *v6, v6[1], v6[1] - *v6);
      sub_2168EE084((uint64_t)&v14);
      sub_216A698A4((void **)(a1 + 40));
      *(_OWORD *)(a1 + 40) = v12;
      *(void *)(a1 + 56) = v13;
      uint64_t v13 = 0;
      long long v12 = 0uLL;
      uint64_t v14 = (void **)&v12;
      sub_216889A04(&v14);
      uint64_t v14 = (void **)v11;
      sub_216889A04(&v14);
    }
    else
    {
      uint64_t v7 = *(void *)(a1 + 40);
      for (uint64_t i = *(void *)(a1 + 48); i != v7; i -= 8)
      {
        uint64_t v10 = *(void *)(i - 8);
        uint64_t v9 = v10;
        if ((v10 & 7) != 0) {
          atomic_fetch_add_explicit((atomic_uint *volatile)(v9 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
        }
      }
      *(void *)(a1 + 48) = v7;
    }
  }
}

void sub_216A68FFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  sub_2168EE084(v10 - 40);
  *(void *)(v10 - 48) = &a10;
  sub_216889A04((void ***)(v10 - 48));
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_VariantSetChildPolicy>::GetChild()
{
}

{
  while (1)
    ;
}

void sub_216A69150(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v3 = va_arg(va1, void);
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec((pxrInternal__aapl__pxrReserved__::SdfSpec *)va);
  sub_21697B754((int *)va1);
  _Unwind_Resume(a1);
}

void sub_216A69174(pxrInternal__aapl__pxrReserved__::TfToken *a1@<X0>, void *a2@<X1>, _DWORD *a3@<X8>)
{
  if ((*a2 & 0xFFFFFFFFFFFFFFF8) != 0) {
    EmptyString = (uint64_t *)((*a2 & 0xFFFFFFFFFFFFFFF8) + 16);
  }
  else {
    EmptyString = pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(a1);
  }
  sub_216779094(__p, "");
  pxrInternal__aapl__pxrReserved__::SdfPath::AppendVariantSelection(a1, (uint64_t)EmptyString, (uint64_t)__p, a3);
  if (v7 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216A691F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_VariantSetChildPolicy>::Find()
{
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_VariantSetChildPolicy>::FindKey()
{
}

{
  while (1)
    ;
}

void sub_216A69478(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
}

pxrInternal__aapl__pxrReserved__::Sdf_Identity **sub_216A694A0(pxrInternal__aapl__pxrReserved__::Sdf_Identity **a1)
{
  if (pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant(a1))
  {
    v7[0] = "sdf/declareHandles.h";
    v7[1] = "operator->";
    v7[2] = 96;
    void v7[3] = "SpecType *pxrInternal__aapl__pxrReserved__::SdfHandle<pxrInternal__aapl__pxrReserved__::SdfVariantSetSpec>::"
            "operator->() const [T = pxrInternal__aapl__pxrReserved__::SdfVariantSetSpec]";
    char v8 = 0;
    int v9 = 4;
    pxrInternal__aapl__pxrReserved__::ArchGetDemangled((pxrInternal__aapl__pxrReserved__ *)(0x8000000217473DCELL & 0x7FFFFFFFFFFFFFFFLL), (uint64_t)v5);
    if (v6 >= 0) {
      uint64_t v4 = v5;
    }
    else {
      uint64_t v4 = (void *)v5[0];
    }
    pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper::IssueFatalError((pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper *)v7, (pxrInternal__aapl__pxrReserved__ *)"Dereferenced an invalid %s", v3, v4);
  }
  return a1;
}

void sub_216A69548(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  JUMPOUT(0x216A694C0);
}

void sub_216A69560(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

_DWORD *sub_216A6957C@<X0>(pxrInternal__aapl__pxrReserved__::Sdf_Identity **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = sub_216A694A0(a1);
  pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v3, &v7);
  Name = pxrInternal__aapl__pxrReserved__::SdfPath::GetName((pxrInternal__aapl__pxrReserved__::SdfPath *)&v7);
  if (*((char *)Name + 23) < 0)
  {
    sub_216778F24((unsigned char *)a2, (void *)*Name, Name[1]);
  }
  else
  {
    long long v5 = *(_OWORD *)Name;
    *(void *)(a2 + 16) = Name[2];
    *(_OWORD *)a2 = v5;
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v8);
  return sub_21697C414(&v7);
}

void sub_216A695F8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

BOOL pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_VariantSetChildPolicy>::IsEqualTo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_216851B24(a1);
  return v4 == sub_216851B24(a2)
      && *(void *)(a1 + 16) == *(void *)(a2 + 16)
      && (*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFF8) == (*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFF8);
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_VariantSetChildPolicy>::Copy(uint64_t a1)
{
  *(unsigned char *)(a1 + 64) = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_VariantSetChildPolicy>::IsValid();
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_VariantSetChildPolicy>::Insert(uint64_t a1)
{
  *(unsigned char *)(a1 + 64) = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_VariantSetChildPolicy>::IsValid();
}

void pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_VariantSetChildPolicy>::Erase(uint64_t a1)
{
  *(unsigned char *)(a1 + 64) = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_VariantSetChildPolicy>::IsValid();
}

void sub_216A698A4(void **a1)
{
  uint64_t v1 = (char *)*a1;
  if (*a1)
  {
    uint64_t v3 = (char *)a1[1];
    uint64_t v4 = *a1;
    if (v3 != v1)
    {
      do
      {
        uint64_t v6 = *((void *)v3 - 1);
        v3 -= 8;
        uint64_t v5 = v6;
        if ((v6 & 7) != 0) {
          atomic_fetch_add_explicit((atomic_uint *volatile)(v5 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
        }
      }
      while (v3 != v1);
      uint64_t v4 = *a1;
    }
    a1[1] = v1;
    operator delete(v4);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

void pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_AttributeChildPolicy>::CreateSpec(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v1 = (uint64_t *)(a1 + 8);
  if (v2) {
    sub_216850B68(v1);
  }

  pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_AttributeChildPolicy>::CreateSpec();
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_AttributeChildPolicy>::CreateSpec(pxrInternal__aapl__pxrReserved__::SdfLayer *a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    pxrInternal__aapl__pxrReserved__::SdfChangeBlock::SdfChangeBlock((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)v17);
    uint64_t Spec = pxrInternal__aapl__pxrReserved__::SdfLayer::_CreateSpec(a1, a2, a3, a4);
    if (Spec)
    {
      pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath(a2, &v18);
      sub_216A69BE4((atomic_uint **)__p);
      uint64_t v9 = *(void *)pxrInternal__aapl__pxrReserved__::SdfPath::GetNameToken(a2);
      if ((v9 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v9 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed);
      }
      pxrInternal__aapl__pxrReserved__::SdfLayer::_PrimPushChild<pxrInternal__aapl__pxrReserved__::TfToken>();
    }
    unint64_t v18 = "sdf/childrenUtils.cpp";
    unint64_t v19 = "CreateSpec";
    uint64_t v20 = 101;
    int v21 = "static BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_Attribut"
          "eChildPolicy>::CreateSpec(SdfLayer *, const SdfPath &, SdfSpecType, BOOL) [ChildPolicy = pxrInternal__aapl__px"
          "rReserved__::Sdf_AttributeChildPolicy]";
    char v22 = 0;
    pxrInternal__aapl__pxrReserved__::TfEnum::GetName((uint64_t)&unk_26C755200, a3, (uint64_t)__p);
    int v10 = v16;
    uint64_t v11 = (void **)__p[0];
    Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText(a2);
    uint64_t v13 = __p;
    if (v10 < 0) {
      uint64_t v13 = v11;
    }
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v18, 1, (pxrInternal__aapl__pxrReserved__ *)"Failed to create spec of type '%s' at <%s>", (const char *)v13, Text);
    if (v16 < 0) {
      operator delete(__p[0]);
    }
    sub_21697BEF0((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)v17);
  }
  else
  {
    unint64_t v18 = "sdf/childrenUtils.cpp";
    unint64_t v19 = "CreateSpec";
    uint64_t v20 = 90;
    int v21 = "static BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_Attribut"
          "eChildPolicy>::CreateSpec(SdfLayer *, const SdfPath &, SdfSpecType, BOOL) [ChildPolicy = pxrInternal__aapl__px"
          "rReserved__::Sdf_AttributeChildPolicy]";
    char v22 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v18, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid object type");
    return 0;
  }
  return Spec;
}

void sub_216A69B60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18, int a19, __int16 a20,char a21,char a22)
{
}

pxrInternal__aapl__pxrReserved__::SdfChildrenKeys_StaticTokenType *sub_216A69BE4@<X0>(atomic_uint **a1@<X8>)
{
  uint64_t result = (pxrInternal__aapl__pxrReserved__::SdfChildrenKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfChildrenKeys);
  if (!result) {
    uint64_t result = sub_21697E16C(&pxrInternal__aapl__pxrReserved__::SdfChildrenKeys);
  }
  uint64_t v3 = (atomic_uint *)*((void *)result + 5);
  *a1 = v3;
  if ((v3 & 7) != 0)
  {
    uint64_t v4 = (atomic_uint *)((unint64_t)v3 & 0xFFFFFFFFFFFFFFF8);
    if ((atomic_fetch_add_explicit(v4, 2u, memory_order_relaxed) & 1) == 0) {
      *a1 = v4;
    }
  }
  return result;
}

BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_AttributeChildPolicy>::IsValidName(pxrInternal__aapl__pxrReserved__::TfToken *a1)
{
  if ((*(void *)a1 & 0xFFFFFFFFFFFFFFF8) != 0) {
    EmptyString = (uint64_t *)((*(void *)a1 & 0xFFFFFFFFFFFFFFF8) + 16);
  }
  else {
    EmptyString = pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(a1);
  }

  return pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_AttributeChildPolicy>::IsValidName((size_t *)EmptyString);
}

BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_AttributeChildPolicy>::IsValidName(size_t *a1)
{
  pxrInternal__aapl__pxrReserved__::SdfSchemaBase::IsValidNamespacedIdentifier(a1, (uint64_t)&__p);
  int v1 = v5;
  if (v5 && v4 < 0) {
    operator delete(__p);
  }
  return v1 == 0;
}

double pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_AttributeChildPolicy>::CanRename@<D0>(uint64_t **a1@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::SdfSpec::GetLayer(a1, (uint64_t *)__p);
  uint64_t v3 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0((uint64_t *)__p);
  char v4 = pxrInternal__aapl__pxrReserved__::SdfLayer::PermissionToEdit(v3);
  unsigned __int8 v5 = __p[1];
  if (__p[1] && atomic_fetch_add_explicit((atomic_uint *volatile)__p[1] + 2, 0xFFFFFFFF, memory_order_release) == 1) {
    (*(void (**)(void *))(*(void *)v5 + 8))(v5);
  }
  if (v4) {
    pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_AttributeChildPolicy>::IsValidName();
  }
  sub_216779094(__p, "Layer is not editable");
  double result = *(double *)__p;
  *(_OWORD *)a2 = *(_OWORD *)__p;
  *(void *)(a2 + 16) = v8;
  *(unsigned char *)(a2 + 24) = 1;
  return result;
}

void sub_216A69F64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
}

_DWORD *sub_216A6A018@<X0>(pxrInternal__aapl__pxrReserved__::SdfPath *a1@<X0>, const pxrInternal__aapl__pxrReserved__::TfToken *a2@<X1>, int *a3@<X8>)
{
  pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath(a1, &v6);
  sub_216A63E40((pxrInternal__aapl__pxrReserved__::SdfPath *)&v6, a2, a3);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  return sub_21697C414(&v6);
}

void sub_216A6A07C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_AttributeChildPolicy>::Rename(pxrInternal__aapl__pxrReserved__::SdfSpec *a1)
{
  uint64_t v2 = *MEMORY[0x263EF8340];
  pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath(a1, v1);
  pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_AttributeChildPolicy>::IsValidName();
}

uint64_t sub_216A6A608@<X0>(uint64_t a1@<X0>, uint64_t **a2@<X3>, void *a3@<X8>)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  uint64_t v5 = sub_216A5B7B0((uint64_t *)(a1 + 112));
  (*(void (**)(uint64_t ***__return_ptr))(*(void *)v5 + 136))(&v7);
  if (sub_21697BFBC((pxrInternal__aapl__pxrReserved__::VtValue *)&v7))
  {
    if ((v8 & 4) != 0) {
      a2 = (uint64_t **)(*(uint64_t (**)(uint64_t ***))((v8 & 0xFFFFFFFFFFFFFFF8) + 168))(&v7);
    }
    else {
      a2 = v7;
    }
  }
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  sub_21698FA28(a3, *a2, a2[1], a2[1] - *a2);
  return sub_2168EE084((uint64_t)&v7);
}

void sub_216A6A6FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
}

uint64_t sub_216A6A718(pxrInternal__aapl__pxrReserved__::SdfLayer *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t **a4)
{
  v8[2] = *(unsigned int **)MEMORY[0x263EF8340];
  v8[1] = (unsigned int *)&off_26C756C08;
  sub_2169DBAB4(v8, a4);
  pxrInternal__aapl__pxrReserved__::SdfLayer::SetField(a1, a2, a3, (const pxrInternal__aapl__pxrReserved__::VtValue *)v8);
  return sub_2168EE084((uint64_t)v8);
}

void sub_216A6A7B0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_2168EE084((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_AttributeChildPolicy>::SetChildren(uint64_t *a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2, long long *a3)
{
  uint64_t v113 = *MEMORY[0x263EF8340];
  sub_216A69BE4((atomic_uint **)&v106);
  long long v104 = 0uLL;
  unint64_t v105 = 0;
  __p[1] = 0;
  uint64_t v98 = 0;
  __p[0] = &__p[1];
  for (long long i = *a3; (void)i != *((void *)&i + 1); sub_216A8DF9C(&i))
  {
    uint64_t v8 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)sub_216A8DF1C((uint64_t *)&i, v6, v7);
    if (pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant(v8)) {
      goto LABEL_13;
    }
    uint64_t v11 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)sub_216A8DF1C((uint64_t *)&i, v9, v10);
    sub_216A64224(v11, (uint64_t)&v107);
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken(&v101);
    if (SHIBYTE(v108) < 0) {
      operator delete((void *)v107);
    }
    sub_216A8E144((uint64_t **)__p, (uint64_t *)&v101, (uint64_t *)&v101);
    if (v9) {
      goto LABEL_9;
    }
    long long v12 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)sub_216A8DF1C((uint64_t *)&i, v9, v10);
    uint64_t v13 = sub_216A64148(v12);
    pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v13, &j);
    pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath((pxrInternal__aapl__pxrReserved__::SdfPath *)&j, &v107);
    uint64_t v14 = v107;
    uint64_t v15 = *(void *)a2;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v107 + 1);
    sub_21697C414(&v107);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&j + 1);
    sub_21697C414(&j);
    if (v14 != v15) {
LABEL_9:
    }
      char v16 = 1;
    else {
      char v16 = 0;
    }
    if ((v101 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v101 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    if (v16)
    {
LABEL_13:
      uint64_t v17 = (atomic_uint **)sub_216A8DF1C((uint64_t *)&i, v9, v10);
      uint64_t v18 = *((void *)&v104 + 1);
      if (*((void *)&v104 + 1) >= v105)
      {
        uint64_t v20 = sub_216A8E01C((atomic_uint ***)&v104, v17);
      }
      else
      {
        unint64_t v19 = *v17;
        **((void **)&v104 + 1) = *v17;
        if (v19) {
          atomic_fetch_add(v19, 1u);
        }
        uint64_t v20 = (char *)(v18 + 8);
      }
      *((void *)&v104 + 1) = v20;
    }
  }
  sub_2168CB05C((uint64_t)__p, (void *)__p[1]);
  uint64_t v21 = sub_2169791E0(a1);
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v98 = 0;
  uint64_t v22 = sub_216A5B7B0((uint64_t *)(v21 + 112));
  (*(void (**)(long long *__return_ptr))(*(void *)v22 + 136))(&i);
  if (sub_21697BFBC((pxrInternal__aapl__pxrReserved__::VtValue *)&i))
  {
    if ((BYTE8(i) & 4) != 0) {
      uint64_t v23 = (uint64_t **)(*(uint64_t (**)(long long *))((*((void *)&i + 1) & 0xFFFFFFFFFFFFFFF8) + 168))(&i);
    }
    else {
      uint64_t v23 = (uint64_t **)i;
    }
  }
  else
  {
    uint64_t v23 = (uint64_t **)__p;
  }
  long long v107 = 0uLL;
  uint64_t v108 = 0;
  sub_21698FA28(&v107, *v23, v23[1], v23[1] - *v23);
  int v24 = (void ***)sub_2168EE084((uint64_t)&i);
  *(void *)&long long i = __p;
  sub_216889A04(v24);
  *((void *)&i + 1) = 0;
  uint64_t v110 = 0;
  *(void *)&long long i = (char *)&i + 8;
  unint64_t v101 = 0;
  uint64_t v102 = 0;
  unint64_t v103 = 0;
  sub_216973388((char **)&v101, (uint64_t)(*((void *)&v104 + 1) - v104) >> 3);
  for (long long j = v104; (void)j != *((void *)&j + 1); sub_216A6B5C8(&j))
  {
    uint64_t v27 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)sub_216A6B548((uint64_t *)&j, v25, v26);
    if (pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant(v27))
    {
      __p[0] = "sdf/childrenUtils.cpp";
      __p[1] = "SetChildren";
      uint64_t v98 = 181;
      uint64_t v99 = "static BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_Attrib"
            "uteChildPolicy>::SetChildren(const SdfLayerHandle &, const SdfPath &, const std::vector<typename ChildPolicy"
            "::ValueType> &) [ChildPolicy = pxrInternal__aapl__pxrReserved__::Sdf_AttributeChildPolicy]";
      char v100 = 0;
      pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)__p, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid child");
      goto LABEL_92;
    }
    int v30 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)sub_216A6B548((uint64_t *)&j, v28, v29);
    sub_216A64224(v30, (uint64_t)__p);
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken(&v86);
    if (SHIBYTE(v98) < 0) {
      operator delete(__p[0]);
    }
    uint64_t v31 = v102;
    if ((unint64_t)v102 >= v103)
    {
      uint64_t v33 = sub_216973984((char **)&v101, (uint64_t *)&v86);
    }
    else
    {
      unint64_t v32 = v86;
      *uint64_t v102 = v86;
      if ((v32 & 7) != 0
        && (atomic_fetch_add_explicit((atomic_uint *volatile)(v32 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
      {
        *v31 &= 0xFFFFFFFFFFFFFFF8;
      }
      uint64_t v33 = (char *)(v31 + 1);
    }
    uint64_t v102 = (uint64_t *)v33;
    sub_216A8E144((uint64_t **)&i, (uint64_t *)&v86, (uint64_t *)&v86);
    if ((v34 & 1) == 0)
    {
      __p[0] = "sdf/childrenUtils.cpp";
      __p[1] = "SetChildren";
      uint64_t v98 = 188;
      uint64_t v99 = "static BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_Attrib"
            "uteChildPolicy>::SetChildren(const SdfLayerHandle &, const SdfPath &, const std::vector<typename ChildPolicy"
            "::ValueType> &) [ChildPolicy = pxrInternal__aapl__pxrReserved__::Sdf_AttributeChildPolicy]";
      char v100 = 0;
      pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)__p, 1, (pxrInternal__aapl__pxrReserved__ *)"Duplicate child");
LABEL_90:
      if ((v86 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v86 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
LABEL_92:
      BOOL v59 = 0;
      goto LABEL_97;
    }
    uint64_t v36 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)sub_216A6B548((uint64_t *)&j, v34, v35);
    char v37 = (uint64_t **)sub_216A64148(v36);
    pxrInternal__aapl__pxrReserved__::SdfSpec::GetLayer(v37, (uint64_t *)__p);
    uint64_t v38 = sub_216851B24((uint64_t)__p);
    uint64_t v41 = sub_216851B24((uint64_t)a1);
    uint64_t v42 = __p[1];
    if (__p[1] && atomic_fetch_add_explicit((atomic_uint *volatile)__p[1] + 2, 0xFFFFFFFF, memory_order_release) == 1) {
      (*(void (**)(void *))(*(void *)v42 + 8))(v42);
    }
    if (v38 != v41)
    {
      __p[0] = "sdf/childrenUtils.cpp";
      __p[1] = "SetChildren";
      uint64_t v98 = 193;
      uint64_t v99 = "static BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_Attrib"
            "uteChildPolicy>::SetChildren(const SdfLayerHandle &, const SdfPath &, const std::vector<typename ChildPolicy"
            "::ValueType> &) [ChildPolicy = pxrInternal__aapl__pxrReserved__::Sdf_AttributeChildPolicy]";
      char v100 = 0;
      pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)__p, 1, (pxrInternal__aapl__pxrReserved__ *)"Cannot reparent to another layer");
      goto LABEL_90;
    }
    uint64_t v43 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)sub_216A6B548((uint64_t *)&j, v39, v40);
    uint64_t v44 = sub_216A64148(v43);
    pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v44, &v111);
    pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath((pxrInternal__aapl__pxrReserved__::SdfPath *)&v111, __p);
    if (*(void **)a2 == __p[0])
    {
      BOOL HasPrefix = 0;
    }
    else
    {
      uint64_t v48 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)sub_216A6B548((uint64_t *)&j, v45, v46);
      unsigned __int8 v49 = sub_216A64148(v48);
      pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v49, &k);
      BOOL HasPrefix = pxrInternal__aapl__pxrReserved__::SdfPath::HasPrefix(a2, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&k);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&k + 1);
      sub_21697C414(&k);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)__p + 1);
    sub_21697C414(__p);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v111 + 1);
    sub_21697C414(&v111);
    if (HasPrefix)
    {
      __p[0] = "sdf/childrenUtils.cpp";
      __p[1] = "SetChildren";
      uint64_t v98 = 203;
      uint64_t v99 = "static BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_Attrib"
            "uteChildPolicy>::SetChildren(const SdfLayerHandle &, const SdfPath &, const std::vector<typename ChildPolicy"
            "::ValueType> &) [ChildPolicy = pxrInternal__aapl__pxrReserved__::Sdf_AttributeChildPolicy]";
      char v100 = 0;
      pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)__p, 1, (pxrInternal__aapl__pxrReserved__ *)"Cannot reparent child under itself");
      goto LABEL_90;
    }
    if ((v86 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v86 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  pxrInternal__aapl__pxrReserved__::SdfChangeBlock::SdfChangeBlock((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)v96);
  *(_OWORD *)long long __p = v107;
  while (__p[0] != __p[1])
  {
    int v52 = (uint64_t *)sub_2169CEBC8((uint64_t *)__p, v50, v51);
    if ((void *)((char *)&i + 8) == sub_216A8E1C4((uint64_t)&i, v52))
    {
      int v55 = (const pxrInternal__aapl__pxrReserved__::TfToken *)sub_2169CEBC8((uint64_t *)__p, v53, v54);
      sub_216A63E40(a2, v55, (int *)&j);
      int v56 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
      pxrInternal__aapl__pxrReserved__::SdfLayer::_DeleteSpec(v56, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&j);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&j + 1);
      sub_21697C414(&j);
    }
    sub_2169CECC4(__p);
  }
  sub_216A8E254((uint64_t)&j, (uint64_t *)v107, *((uint64_t **)&v107 + 1));
  for (long long k = v104; ; sub_216A6B5C8(&k))
  {
    BOOL v59 = k == *((void *)&k + 1);
    if ((void)k == *((void *)&k + 1)) {
      break;
    }
    int v60 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)sub_216A6B548((uint64_t *)&k, v57, v58);
    sub_216A64224(v60, (uint64_t)__p);
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken(&v93);
    if (SHIBYTE(v98) < 0) {
      operator delete(__p[0]);
    }
    sub_216A63E40(a2, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v93, &v91);
    int v63 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)sub_216A6B548((uint64_t *)&k, v61, v62);
    int v64 = sub_216A64148(v63);
    pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v64, __p);
    pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath((pxrInternal__aapl__pxrReserved__::SdfPath *)__p, &v90);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)__p + 1);
    sub_21697C414(__p);
    if (v90 == *(void *)a2)
    {
      int v65 = 10;
    }
    else
    {
      if ((void *)((char *)&j + 8) != sub_216A8E1C4((uint64_t)&j, &v93))
      {
        int v66 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
        pxrInternal__aapl__pxrReserved__::SdfLayer::_DeleteSpec(v66, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v91);
      }
      sub_216A69BE4((atomic_uint **)&v89);
      uint64_t v67 = sub_2169791E0(a1);
      __p[0] = 0;
      __p[1] = 0;
      uint64_t v98 = 0;
      uint64_t v68 = sub_216A5B7B0((uint64_t *)(v67 + 112));
      (*(void (**)(void ***__return_ptr))(*(void *)v68 + 136))(&v111);
      if (sub_21697BFBC((pxrInternal__aapl__pxrReserved__::VtValue *)&v111))
      {
        if ((v112 & 4) != 0) {
          std::locale v69 = (uint64_t **)(*(uint64_t (**)(void ***))((v112 & 0xFFFFFFFFFFFFFFF8) + 168))(&v111);
        }
        else {
          std::locale v69 = (uint64_t **)v111;
        }
      }
      else
      {
        std::locale v69 = (uint64_t **)__p;
      }
      unint64_t v86 = 0;
      uint64_t v87 = 0;
      uint64_t v88 = 0;
      sub_21698FA28(&v86, *v69, v69[1], v69[1] - *v69);
      size_t v70 = (void ***)sub_2168EE084((uint64_t)&v111);
      uint64_t v111 = __p;
      sub_216889A04(v70);
      uint64_t v71 = (uint64_t *)v86;
      if ((uint64_t *)v86 != v87)
      {
        while ((*v71 & 0xFFFFFFFFFFFFFFF8) != (v93 & 0xFFFFFFFFFFFFFFF8))
        {
          if (++v71 == v87)
          {
            uint64_t v71 = v87;
            break;
          }
        }
      }
      if (v71 == v87)
      {
        __p[0] = "sdf/childrenUtils.cpp";
        __p[1] = "SetChildren";
        uint64_t v98 = 254;
        uint64_t v99 = "static BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_Attr"
              "ibuteChildPolicy>::SetChildren(const SdfLayerHandle &, const SdfPath &, const std::vector<typename ChildPo"
              "licy::ValueType> &) [ChildPolicy = pxrInternal__aapl__pxrReserved__::Sdf_AttributeChildPolicy]";
        char v100 = 0;
        pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)__p, 1, (pxrInternal__aapl__pxrReserved__ *)"An object was not in its parent's list of children");
        int v65 = 1;
      }
      else
      {
        sub_216A8E2D8(v71 + 1, v87, v71);
        for (m = v87; m != v72; --m)
        {
          uint64_t v75 = *(m - 1);
          uint64_t v74 = v75;
          if ((v75 & 7) != 0) {
            atomic_fetch_add_explicit((atomic_uint *volatile)(v74 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
          }
        }
        uint64_t v87 = v72;
        if ((uint64_t *)v86 == v72)
        {
          uint64_t v77 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
          pxrInternal__aapl__pxrReserved__::SdfLayer::EraseField(v77, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v90, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v89);
        }
        else
        {
          uint64_t v76 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
          sub_216A6A718(v76, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v90, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v89, (uint64_t **)&v86);
        }
        long long v78 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
        uint64_t v81 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)sub_216A6B548((uint64_t *)&k, v79, v80);
        unsigned __int8 v82 = sub_216A64148(v81);
        pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v82, __p);
        pxrInternal__aapl__pxrReserved__::SdfLayer::_MoveSpec(v78, (const pxrInternal__aapl__pxrReserved__::SdfPath *)__p, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v91);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)__p + 1);
        sub_21697C414(__p);
        int v65 = 0;
      }
      __p[0] = &v86;
      sub_216889A04((void ***)__p);
      if ((v89 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v89 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v90 + 1);
    sub_21697C414(&v90);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v92);
    sub_21697C414(&v91);
    if ((v93 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v93 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    if (v65 != 10 && v65) {
      goto LABEL_96;
    }
  }
  if ((uint64_t *)v101 == v102)
  {
    uint64_t v84 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
    pxrInternal__aapl__pxrReserved__::SdfLayer::EraseField(v84, a2, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v106);
  }
  else
  {
    uint64_t v83 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
    sub_216A6A718(v83, a2, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v106, (uint64_t **)&v101);
  }
LABEL_96:
  sub_2168CB05C((uint64_t)&j, *((void **)&j + 1));
  sub_21697BEF0((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)v96);
LABEL_97:
  __p[0] = &v101;
  sub_216889A04((void ***)__p);
  sub_2168CB05C((uint64_t)&i, *((void **)&i + 1));
  __p[0] = &v107;
  sub_216889A04((void ***)__p);
  __p[0] = &v104;
  sub_216991094((void ***)__p);
  if ((v106 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v106 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  return v59;
}

void sub_216A6B21C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, char a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,char a25,uint64_t *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  if ((a10 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(a10 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  long long __p = &a34;
  sub_216889A04((void ***)&__p);
  sub_2168CB05C(v37 - 144, *(void **)(v37 - 136));
  long long __p = (uint64_t *)(v37 - 176);
  sub_216889A04((void ***)&__p);
  long long __p = (uint64_t *)&a37;
  sub_216991094((void ***)&__p);
  uint64_t v39 = *(void *)(v37 - 184);
  if ((v39 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v39 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_216A6B548(uint64_t *a1, uint64_t a2, char *a3)
{
  uint64_t result = *a1;
  if (result == a1[1])
  {
    v5[0] = "tf/iterator.h";
    v5[1] = "operator*";
    void v5[2] = 271;
    v5[3] = "Reference pxrInternal__aapl__pxrReserved__::TfIterator<std::vector<pxrInternal__aapl__pxrReserved__::SdfHand"
            "le<pxrInternal__aapl__pxrReserved__::SdfAttributeSpec>>>::operator*() [T = std::vector<pxrInternal__aapl__px"
            "rReserved__::SdfHandle<pxrInternal__aapl__pxrReserved__::SdfAttributeSpec>>, Reverse = false]";
    char v6 = 0;
    int v7 = 4;
    pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper::IssueFatalError((pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper *)v5, (pxrInternal__aapl__pxrReserved__ *)"iterator exhausted", a3);
  }
  return result;
}

void sub_216A6B5C0()
{
}

void *sub_216A6B5C8(void *a1)
{
  if (*a1 == a1[1])
  {
    v3[0] = "tf/iterator.h";
    v3[1] = "operator++";
    v3[2] = 250;
    void v3[3] = "TfIterator<T, Reverse> &pxrInternal__aapl__pxrReserved__::TfIterator<std::vector<pxrInternal__aapl__pxrReser"
            "ved__::SdfHandle<pxrInternal__aapl__pxrReserved__::SdfAttributeSpec>>>::operator++() [T = std::vector<pxrInt"
            "ernal__aapl__pxrReserved__::SdfHandle<pxrInternal__aapl__pxrReserved__::SdfAttributeSpec>>, Reverse = false]";
    char v4 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v3, 1, (pxrInternal__aapl__pxrReserved__ *)"iterator exhausted");
  }
  else
  {
    *a1 += 8;
  }
  return a1;
}

void *sub_216A6B648(uint64_t a1, void *a2)
{
  sub_216A8E2D8(a2 + 1, *(void **)(a1 + 8), a2);
  for (uint64_t i = *(void *)(a1 + 8); i != v4; i -= 8)
  {
    uint64_t v7 = *(void *)(i - 8);
    uint64_t v6 = v7;
    if ((v7 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v6 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  *(void *)(a1 + 8) = v4;
  return a2;
}

BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_AttributeChildPolicy>::InsertChild(uint64_t *a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2, pxrInternal__aapl__pxrReserved__::Sdf_Identity **a3, int a4)
{
  uint64_t v64 = *MEMORY[0x263EF8340];
  sub_216A69BE4(v58);
  if (pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant(a3))
  {
    long long __p = "sdf/childrenUtils.cpp";
    int v54 = "InsertChild";
    uint64_t v55 = 290;
    int v56 = "static BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_Attribut"
          "eChildPolicy>::InsertChild(const SdfLayerHandle &, const SdfPath &, const typename ChildPolicy::ValueType &, i"
          "nt) [ChildPolicy = pxrInternal__aapl__pxrReserved__::Sdf_AttributeChildPolicy]";
    char v57 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&__p, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid child");
LABEL_8:
    BOOL v12 = 0;
    goto LABEL_9;
  }
  uint64_t v8 = (uint64_t **)sub_216A64148(a3);
  pxrInternal__aapl__pxrReserved__::SdfSpec::GetLayer(v8, (uint64_t *)&__p);
  uint64_t v9 = sub_216851B24((uint64_t)&__p);
  uint64_t v10 = sub_216851B24((uint64_t)a1);
  uint64_t v11 = v54;
  if (v54 && atomic_fetch_add_explicit((atomic_uint *volatile)v54 + 2, 0xFFFFFFFF, memory_order_release) == 1) {
    (*(void (**)(const char *))(*(void *)v11 + 8))(v11);
  }
  if (v9 != v10)
  {
    long long __p = "sdf/childrenUtils.cpp";
    int v54 = "InsertChild";
    uint64_t v55 = 295;
    int v56 = "static BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_Attribut"
          "eChildPolicy>::InsertChild(const SdfLayerHandle &, const SdfPath &, const typename ChildPolicy::ValueType &, i"
          "nt) [ChildPolicy = pxrInternal__aapl__pxrReserved__::Sdf_AttributeChildPolicy]";
    char v57 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&__p, 1, (pxrInternal__aapl__pxrReserved__ *)"Cannot reparent to another layer");
    goto LABEL_8;
  }
  uint64_t v14 = sub_216A64148(a3);
  pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v14, &v47);
  pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath((pxrInternal__aapl__pxrReserved__::SdfPath *)&v47, &__p);
  uint64_t v15 = __p;
  char v16 = *(void **)a2;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&__p + 1);
  sub_21697C414(&__p);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v47 + 1);
  sub_21697C414(&v47);
  if (v15 == v16)
  {
    BOOL v12 = 1;
  }
  else
  {
    sub_216A64224(a3, (uint64_t)&__p);
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken(&v52);
    if (SHIBYTE(v55) < 0) {
      operator delete(__p);
    }
    sub_216A63E40(a2, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v52, &v50);
    uint64_t v17 = sub_216A64148(a3);
    pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v17, &__p);
    BOOL HasPrefix = pxrInternal__aapl__pxrReserved__::SdfPath::HasPrefix((pxrInternal__aapl__pxrReserved__::SdfPath *)&v50, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&__p);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&__p + 1);
    sub_21697C414(&__p);
    if (HasPrefix)
    {
      long long __p = "sdf/childrenUtils.cpp";
      int v54 = "InsertChild";
      uint64_t v55 = 312;
      int v56 = "static BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_Attrib"
            "uteChildPolicy>::InsertChild(const SdfLayerHandle &, const SdfPath &, const typename ChildPolicy::ValueType "
            "&, int) [ChildPolicy = pxrInternal__aapl__pxrReserved__::Sdf_AttributeChildPolicy]";
      char v57 = 0;
      pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&__p, 1, (pxrInternal__aapl__pxrReserved__ *)"Cannot reparent child under itself");
      BOOL v12 = 0;
    }
    else
    {
      uint64_t v19 = sub_2169791E0(a1);
      long long __p = 0;
      int v54 = 0;
      uint64_t v55 = 0;
      uint64_t v20 = sub_216A5B7B0((uint64_t *)(v19 + 112));
      (*(void (**)(void ***__return_ptr))(*(void *)v20 + 136))(&v59);
      if (sub_21697BFBC((pxrInternal__aapl__pxrReserved__::VtValue *)&v59))
      {
        if ((v60 & 4) != 0) {
          p_p = (void **)(*(uint64_t (**)(void ***))(((unint64_t)v60 & 0xFFFFFFFFFFFFFFF8) + 168))(&v59);
        }
        else {
          p_p = v59;
        }
      }
      else
      {
        p_p = &__p;
      }
      unsigned __int8 v47 = 0;
      uint64_t v48 = 0;
      uint64_t v49 = 0;
      sub_21698FA28(&v47, (uint64_t *)*p_p, (uint64_t *)p_p[1], ((unsigned char *)p_p[1] - (unsigned char *)*p_p) >> 3);
      uint64_t v22 = (void ***)sub_2168EE084((uint64_t)&v59);
      BOOL v59 = &__p;
      sub_216889A04(v22);
      unint64_t v25 = (unint64_t)((char *)v48 - (char *)v47) >> 3;
      if (a4 != -1) {
        LODWORD(v25) = a4;
      }
      uint64_t v26 = (int)v25;
      if ((int)v25 <= (unint64_t)(((char *)v48 - (char *)v47) >> 3))
      {
        BOOL v59 = v47;
        int v60 = (void **)v48;
        while (v59 != v60)
        {
          uint64_t v28 = (void *)sub_2169CEBC8((uint64_t *)&v59, v23, v24);
          if ((*v28 & 0xFFFFFFFFFFFFFFF8) == (v52 & 0xFFFFFFFFFFFFFFF8))
          {
            long long __p = "sdf/childrenUtils.cpp";
            int v54 = "InsertChild";
            uint64_t v55 = 334;
            int v56 = "static BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_"
                  "AttributeChildPolicy>::InsertChild(const SdfLayerHandle &, const SdfPath &, const typename ChildPolicy"
                  "::ValueType &, int) [ChildPolicy = pxrInternal__aapl__pxrReserved__::Sdf_AttributeChildPolicy]";
            char v57 = 0;
            Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v50);
            pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&__p, 1, (pxrInternal__aapl__pxrReserved__ *)"Attempt to insert duplicate spec %s", Text);
            goto LABEL_34;
          }
          sub_2169CECC4(&v59);
        }
        uint64_t v29 = sub_216A64148(a3);
        pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v29, &__p);
        pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath((pxrInternal__aapl__pxrReserved__::SdfPath *)&__p, &v45);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&__p + 1);
        sub_21697C414(&__p);
        sub_216A69BE4((atomic_uint **)&v44);
        uint64_t v30 = sub_2169791E0(a1);
        long long __p = 0;
        int v54 = 0;
        uint64_t v55 = 0;
        uint64_t v31 = sub_216A5B7B0((uint64_t *)(v30 + 112));
        (*(void (**)(atomic_uint **__return_ptr))(*(void *)v31 + 136))(&v62);
        if (sub_21697BFBC((pxrInternal__aapl__pxrReserved__::VtValue *)&v62))
        {
          if ((v63 & 4) != 0) {
            unint64_t v32 = (uint64_t **)(*(uint64_t (**)(atomic_uint **))((v63 & 0xFFFFFFFFFFFFFFF8) + 168))(&v62);
          }
          else {
            unint64_t v32 = (uint64_t **)v62;
          }
        }
        else
        {
          unint64_t v32 = (uint64_t **)&__p;
        }
        BOOL v59 = 0;
        int v60 = 0;
        uint64_t v61 = 0;
        sub_21698FA28(&v59, *v32, v32[1], v32[1] - *v32);
        uint64_t v34 = (void ***)sub_2168EE084((uint64_t)&v62);
        int v62 = (atomic_uint *)&__p;
        sub_216889A04(v34);
        uint64_t v35 = v59;
        if (v59 != v60)
        {
          while (((unint64_t)*v35 & 0xFFFFFFFFFFFFFFF8) != (v52 & 0xFFFFFFFFFFFFFFF8))
          {
            if (++v35 == v60)
            {
              uint64_t v35 = v60;
              break;
            }
          }
        }
        BOOL v12 = v35 != v60;
        if (v35 == v60)
        {
          long long __p = "sdf/childrenUtils.cpp";
          int v54 = "InsertChild";
          uint64_t v55 = 352;
          int v56 = "static BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_At"
                "tributeChildPolicy>::InsertChild(const SdfLayerHandle &, const SdfPath &, const typename ChildPolicy::Va"
                "lueType &, int) [ChildPolicy = pxrInternal__aapl__pxrReserved__::Sdf_AttributeChildPolicy]";
          char v57 = 0;
          pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&__p, 1, (pxrInternal__aapl__pxrReserved__ *)"An object was not in its parent's list of children");
        }
        else
        {
          pxrInternal__aapl__pxrReserved__::SdfChangeBlock::SdfChangeBlock((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)&__p);
          sub_216A6B648((uint64_t)&v59, v35);
          if (v59 == v60)
          {
            uint64_t v37 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
            pxrInternal__aapl__pxrReserved__::SdfLayer::EraseField(v37, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v45, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v44);
          }
          else
          {
            uint64_t v36 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
            sub_216A6A718(v36, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v45, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v44, (uint64_t **)&v59);
          }
          uint64_t v38 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
          uint64_t v39 = sub_216A64148(a3);
          pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v39, &v62);
          pxrInternal__aapl__pxrReserved__::SdfLayer::_MoveSpec(v38, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v62, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v50);
          sub_21697B754(&v62);
          sub_216A6BFEC(&v47, (char *)&v47[v26], (char *)&v52);
          uint64_t v40 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
          sub_216A6A718(v40, a2, (const pxrInternal__aapl__pxrReserved__::TfToken *)v58, (uint64_t **)&v47);
          uint64_t v41 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
          pxrInternal__aapl__pxrReserved__::SdfLayer::GetObjectAtPath(v41, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v45, &v62);
          uint64_t IsDormant = pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&v62);
          if ((IsDormant & 1) == 0)
          {
            unint64_t Instance = pxrInternal__aapl__pxrReserved__::Sdf_CleanupTracker::GetInstance((pxrInternal__aapl__pxrReserved__::Sdf_CleanupTracker *)IsDormant);
            pxrInternal__aapl__pxrReserved__::Sdf_CleanupTracker::AddSpecIfTracking(Instance, &v62);
          }
          pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec((pxrInternal__aapl__pxrReserved__::SdfSpec *)&v62);
          sub_21697BEF0((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)&__p);
        }
        long long __p = &v59;
        sub_216889A04((void ***)&__p);
        if ((v44 & 7) != 0) {
          atomic_fetch_add_explicit((atomic_uint *volatile)(v44 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
        }
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v46);
        sub_21697C414(&v45);
      }
      else
      {
        long long __p = "sdf/childrenUtils.cpp";
        int v54 = "InsertChild";
        uint64_t v55 = 326;
        int v56 = "static BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_Attr"
              "ibuteChildPolicy>::InsertChild(const SdfLayerHandle &, const SdfPath &, const typename ChildPolicy::ValueT"
              "ype &, int) [ChildPolicy = pxrInternal__aapl__pxrReserved__::Sdf_AttributeChildPolicy]";
        char v57 = 0;
        uint64_t v27 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v50);
        pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&__p, 1, (pxrInternal__aapl__pxrReserved__ *)"Attempt to insert spec %s at an invalid index %d", v27, v26);
LABEL_34:
        BOOL v12 = 0;
      }
      long long __p = &v47;
      sub_216889A04((void ***)&__p);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v51);
    sub_21697C414(&v50);
    if ((v52 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v52 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
LABEL_9:
  if (((uint64_t)v58[0] & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)((unint64_t)v58[0] & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  return v12;
}

void sub_216A6BDD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, int a19, uint64_t a20,__int16 *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  long long __p = (__int16 *)(v30 - 112);
  sub_216889A04((void ***)&__p);
  if ((a11 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(a11 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  sub_21697B754(&a12);
  long long __p = &a14;
  sub_216889A04((void ***)&__p);
  sub_21697B754(&a19);
  if ((a20 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(a20 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  if ((a29 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(a29 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  _Unwind_Resume(a1);
}

char *sub_216A6BFEC(void *a1, char *a2, char *a3)
{
  uint64_t v4 = a2;
  unint64_t v6 = a1[1];
  uint64_t v8 = (uint64_t)(a1 + 2);
  unint64_t v7 = a1[2];
  if (v6 >= v7)
  {
    uint64_t v9 = (char *)*a1;
    unint64_t v10 = ((uint64_t)(v6 - *a1) >> 3) + 1;
    if (v10 >> 61) {
      sub_21677CB10();
    }
    uint64_t v11 = a2 - v9;
    uint64_t v12 = (a2 - v9) >> 3;
    uint64_t v13 = v7 - (void)v9;
    if (v13 >> 2 > v10) {
      unint64_t v10 = v13 >> 2;
    }
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v14 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v14 = v10;
    }
    uint64_t v37 = a1 + 2;
    if (v14)
    {
      uint64_t v15 = (char *)sub_21677CB28((uint64_t)(a1 + 2), v14);
      uint64_t v17 = v16;
    }
    else
    {
      uint64_t v15 = 0;
      uint64_t v17 = 0;
    }
    uint64_t v19 = &v15[8 * v12];
    uint64_t v34 = v15;
    *(void *)&long long v35 = v19;
    *((void *)&v35 + 1) = v19;
    uint64_t v36 = &v15[8 * v17];
    if (v12 == v17)
    {
      if (v11 < 1)
      {
        if (v9 == v4) {
          unint64_t v21 = 1;
        }
        else {
          unint64_t v21 = v11 >> 2;
        }
        uint64_t v41 = v8;
        uint64_t v22 = (char *)sub_21677CB28(v8, v21);
        int v24 = (void *)v35;
        uint64_t v25 = *((void *)&v35 + 1) - v35;
        if (*((void *)&v35 + 1) == (void)v35)
        {
          int64x2_t v30 = vdupq_n_s64(v35);
          unint64_t v27 = (unint64_t)&v22[8 * (v21 >> 2)];
        }
        else
        {
          uint64_t v26 = v25 >> 3;
          unint64_t v27 = (unint64_t)&v22[8 * (v21 >> 2) + (v25 & 0xFFFFFFFFFFFFFFF8)];
          uint64_t v28 = 8 * v26;
          uint64_t v29 = &v22[8 * (v21 >> 2)];
          do
          {
            *(void *)uint64_t v29 = *v24;
            v29 += 8;
            *v24++ = 0;
            v28 -= 8;
          }
          while (v28);
          int64x2_t v30 = (int64x2_t)v35;
        }
        uint64_t v31 = v36;
        uint64_t v38 = v34;
        uint64_t v34 = v22;
        *(void *)&long long v35 = &v22[8 * (v21 >> 2)];
        int64x2_t v39 = v30;
        *((void *)&v35 + 1) = v27;
        uint64_t v36 = &v22[8 * v23];
        uint64_t v40 = v31;
        sub_2168BE9D8((uint64_t)&v38);
        uint64_t v19 = (char *)*((void *)&v35 + 1);
      }
      else
      {
        if (v12 >= -1) {
          uint64_t v20 = v12 + 1;
        }
        else {
          uint64_t v20 = v12 + 2;
        }
        sub_216A8E2D8(&v15[8 * v12], v19, &v19[-8 * (v20 >> 1)]);
        *(void *)&long long v35 = v35 - 8 * (v20 >> 1);
        *((void *)&v35 + 1) = v19;
      }
    }
    uint64_t v32 = *(void *)a3;
    *(void *)uint64_t v19 = *(void *)a3;
    if ((v32 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v32 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      *(void *)v19 &= 0xFFFFFFFFFFFFFFF8;
    }
    *((void *)&v35 + 1) += 8;
    uint64_t v4 = (char *)sub_216A8E370(a1, &v34, v4);
    sub_2168BE9D8((uint64_t)&v34);
  }
  else if (a2 == (char *)v6)
  {
    uint64_t v18 = *(void *)a3;
    *(void *)a2 = *(void *)a3;
    if ((v18 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v18 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      *(void *)a2 &= 0xFFFFFFFFFFFFFFF8;
    }
    a1[1] = a2 + 8;
  }
  else
  {
    sub_216A8E328((uint64_t)a1, (uint64_t)a2, v6, (uint64_t)(a2 + 8));
    if (v4 <= a3) {
      a3 += 8 * (a1[1] > (unint64_t)a3);
    }
    sub_2168D2318(v4, a3);
  }
  return v4;
}

void sub_216A6C264(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_AttributeChildPolicy>::RemoveChild(uint64_t *a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  sub_216A69BE4((atomic_uint **)&v28);
  uint64_t v4 = sub_2169791E0(a1);
  memset(v24, 0, sizeof(v24));
  uint64_t v5 = sub_216A5B7B0((uint64_t *)(v4 + 112));
  (*(void (**)(unint64_t *__return_ptr))(*(void *)v5 + 136))(&v31);
  if (sub_21697BFBC((pxrInternal__aapl__pxrReserved__::VtValue *)&v31))
  {
    if ((v32 & 4) != 0) {
      unint64_t v6 = (uint64_t **)(*(uint64_t (**)(unint64_t *))((v32 & 0xFFFFFFFFFFFFFFF8) + 168))(&v31);
    }
    else {
      unint64_t v6 = (uint64_t **)v31;
    }
  }
  else
  {
    unint64_t v6 = (uint64_t **)v24;
  }
  uint64_t v25 = 0;
  uint64_t v26 = 0;
  uint64_t v27 = 0;
  sub_21698FA28(&v25, *v6, v6[1], v6[1] - *v6);
  unint64_t v7 = (void ***)sub_2168EE084((uint64_t)&v31);
  unint64_t v31 = (unint64_t)v24;
  sub_216889A04(v7);
  pxrInternal__aapl__pxrReserved__::SdfChangeBlock::SdfChangeBlock((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)v24);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(&v31);
  uint64_t v8 = (uint64_t *)v25;
  unint64_t v9 = v31;
  if ((uint64_t *)v25 == v26)
  {
LABEL_9:
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v10 = -v25;
    while ((*v8 & 0xFFFFFFFFFFFFFFF8) != (v31 & 0xFFFFFFFFFFFFFFF8))
    {
      ++v8;
      v10 -= 8;
      if (v8 == v26) {
        goto LABEL_9;
      }
    }
    sub_216A63E40(a2, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v31, &v29);
    uint64_t v12 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
    pxrInternal__aapl__pxrReserved__::SdfLayer::_DeleteSpec(v12, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v29);
    sub_216A8E2D8((void *)(8 - v10), v26, (void *)-v10);
    for (uint64_t i = v26; i != v13; --i)
    {
      uint64_t v16 = *(i - 1);
      uint64_t v15 = v16;
      if ((v16 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v15 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
    }
    uint64_t v26 = v13;
    if ((uint64_t *)v25 == v13)
    {
      uint64_t v18 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
      pxrInternal__aapl__pxrReserved__::SdfLayer::EraseField(v18, a2, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v28);
    }
    else
    {
      uint64_t v17 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
      sub_216A6A718(v17, a2, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v28, (uint64_t **)&v25);
    }
    uint64_t v19 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
    pxrInternal__aapl__pxrReserved__::SdfLayer::GetObjectAtPath(v19, a2, &v23);
    uint64_t IsDormant = pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&v23);
    if ((IsDormant & 1) == 0)
    {
      unint64_t Instance = pxrInternal__aapl__pxrReserved__::Sdf_CleanupTracker::GetInstance((pxrInternal__aapl__pxrReserved__::Sdf_CleanupTracker *)IsDormant);
      pxrInternal__aapl__pxrReserved__::Sdf_CleanupTracker::AddSpecIfTracking(Instance, &v23);
    }
    pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec((pxrInternal__aapl__pxrReserved__::SdfSpec *)&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v30);
    sub_21697C414(&v29);
    uint64_t v11 = 1;
    unint64_t v9 = v31;
  }
  if ((v9 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v9 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  sub_21697BEF0((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)v24);
  v24[0] = (void **)&v25;
  sub_216889A04(v24);
  if ((v28 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v28 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  return v11;
}

void sub_216A6C520(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  if (a2) {
    sub_21675DB74(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_AttributeChildPolicy>::MoveChildForBatchNamespaceEdit(uint64_t *a1, pxrInternal__aapl__pxrReserved__::TfToken *a2, pxrInternal__aapl__pxrReserved__::Sdf_Identity **a3, const pxrInternal__aapl__pxrReserved__::TfToken *a4, int a5)
{
  uint64_t v61 = *MEMORY[0x263EF8340];
  sub_216A69BE4(v55);
  sub_216A6CD34(a2, a4, (int *)&v54);
  uint64_t v10 = sub_216A64148(a3);
  pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v10, &v51);
  uint64_t v11 = v54;
  uint64_t v12 = v51;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v51 + 1);
  sub_21697C414(&v51);
  if (a5 == -2 && v11 == v12) {
    goto LABEL_59;
  }
  uint64_t v13 = sub_2169791E0(a1);
  long long __p = 0;
  uint64_t v49 = 0;
  uint64_t v50 = 0;
  uint64_t v14 = sub_216A5B7B0((uint64_t *)(v13 + 112));
  (*(void (**)(void ***__return_ptr))(*(void *)v14 + 136))(&v56);
  if (sub_21697BFBC((pxrInternal__aapl__pxrReserved__::VtValue *)&v56))
  {
    if ((v57 & 4) != 0) {
      p_p = (void **)(*(uint64_t (**)(void ***))((v57 & 0xFFFFFFFFFFFFFFF8) + 168))(&v56);
    }
    else {
      p_p = v56;
    }
  }
  else
  {
    p_p = &__p;
  }
  int v51 = 0;
  uint64_t v52 = 0;
  uint64_t v53 = 0;
  sub_21698FA28(&v51, (uint64_t *)*p_p, (uint64_t *)p_p[1], ((unsigned char *)p_p[1] - (unsigned char *)*p_p) >> 3);
  sub_2168EE084((uint64_t)&v56);
  int v56 = &__p;
  sub_216889A04(&v56);
  sub_216A64224(a3, (uint64_t)&__p);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(&v47);
  if (SHIBYTE(v50) < 0) {
    operator delete(__p);
  }
  uint64_t v16 = sub_216A64148(a3);
  pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v16, &__p);
  pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath((pxrInternal__aapl__pxrReserved__::SdfPath *)&__p, &v46);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&__p + 1);
  sub_21697C414(&__p);
  if (a5 == -2 && v46 == *(void *)a2)
  {
    if (v51 == v52)
    {
      uint64_t v17 = v51;
    }
    else
    {
      uint64_t v17 = v51;
      while ((*v17 & 0xFFFFFFFFFFFFFFF8) != (v47 & 0xFFFFFFFFFFFFFFF8))
      {
        if (++v17 == v52)
        {
          uint64_t v17 = v52;
          break;
        }
      }
    }
    unint64_t v18 = (unint64_t)((char *)v17 - (char *)v51) >> 3;
  }
  else if (v52 - v51 >= (unint64_t)a5)
  {
    LODWORD(v18) = a5;
  }
  else
  {
    LODWORD(v18) = v52 - v51;
  }
  sub_216A69BE4((atomic_uint **)&v45);
  uint64_t v19 = sub_2169791E0(a1);
  int v56 = 0;
  uint64_t v57 = 0;
  uint64_t v58 = 0;
  uint64_t v20 = sub_216A5B7B0((uint64_t *)(v19 + 112));
  (*(void (**)(void ****__return_ptr))(*(void *)v20 + 136))(&v59);
  if (sub_21697BFBC((pxrInternal__aapl__pxrReserved__::VtValue *)&v59))
  {
    if ((v60 & 4) != 0) {
      unint64_t v21 = (void ***)(*(uint64_t (**)(void ****))((v60 & 0xFFFFFFFFFFFFFFF8) + 168))(&v59);
    }
    else {
      unint64_t v21 = v59;
    }
  }
  else
  {
    unint64_t v21 = &v56;
  }
  long long __p = 0;
  uint64_t v49 = 0;
  uint64_t v50 = 0;
  sub_21698FA28(&__p, (uint64_t *)*v21, (uint64_t *)v21[1], v21[1] - *v21);
  uint64_t v22 = (void ***)sub_2168EE084((uint64_t)&v59);
  BOOL v59 = &v56;
  sub_216889A04(v22);
  uint64_t v23 = (char *)__p;
  if (__p != v49)
  {
    while ((*(void *)v23 & 0xFFFFFFFFFFFFFFF8) != (v47 & 0xFFFFFFFFFFFFFFF8))
    {
      v23 += 8;
      if (v23 == v49)
      {
        uint64_t v23 = v49;
        break;
      }
    }
  }
  pxrInternal__aapl__pxrReserved__::SdfChangeBlock::SdfChangeBlock((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)&v56);
  if (v46 == *(void *)a2)
  {
    uint64_t v24 = v23 - (unsigned char *)__p;
    if ((v47 & 0xFFFFFFFFFFFFFFF8) == (*(void *)a4 & 0xFFFFFFFFFFFFFFF8)
      && (v18 == ((unint64_t)v24 >> 3)
       || ((unint64_t)v24 >> 3) + 1 == v18))
    {
      goto LABEL_54;
    }
    BOOL v26 = (int)v18 > v24 >> 3;
    uint64_t v27 = v51;
    if (v51 != v52)
    {
      while ((*v27 & 0xFFFFFFFFFFFFFFF8) != (v47 & 0xFFFFFFFFFFFFFFF8))
      {
        if (++v27 == v52)
        {
          uint64_t v27 = v52;
          break;
        }
      }
    }
    sub_216A8E2D8(v27 + 1, v52, v27);
    LODWORD(v18) = v18 - v26;
    for (uint64_t i = v52; i != v28; --i)
    {
      uint64_t v31 = *(i - 1);
      uint64_t v30 = v31;
      if ((v31 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v30 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
    }
    uint64_t v52 = v28;
  }
  else
  {
    sub_216A8E2D8((void *)v23 + 1, v49, v23);
    for (long long j = v49; j != v32; j -= 8)
    {
      uint64_t v35 = *((void *)j - 1);
      uint64_t v34 = v35;
      if ((v35 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v34 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
    }
    uint64_t v49 = v32;
    if (__p == v32)
    {
      uint64_t v37 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
      pxrInternal__aapl__pxrReserved__::SdfLayer::EraseField(v37, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v46, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v45);
      uint64_t v38 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
      pxrInternal__aapl__pxrReserved__::SdfLayer::GetObjectAtPath(v38, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v46, &v59);
      uint64_t IsDormant = pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&v59);
      if ((IsDormant & 1) == 0)
      {
        unint64_t Instance = pxrInternal__aapl__pxrReserved__::Sdf_CleanupTracker::GetInstance((pxrInternal__aapl__pxrReserved__::Sdf_CleanupTracker *)IsDormant);
        pxrInternal__aapl__pxrReserved__::Sdf_CleanupTracker::AddSpecIfTracking(Instance, (atomic_uint **)&v59);
      }
      pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec((pxrInternal__aapl__pxrReserved__::SdfSpec *)&v59);
    }
    else
    {
      uint64_t v36 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
      sub_216A6A718(v36, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v46, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v45, (uint64_t **)&__p);
    }
  }
  uint64_t v41 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
  uint64_t v42 = sub_216A64148(a3);
  pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v42, &v59);
  pxrInternal__aapl__pxrReserved__::SdfLayer::_MoveSpec(v41, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v59, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v54);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v59 + 1);
  sub_21697C414(&v59);
  sub_216A6BFEC(&v51, (char *)&v51[(int)v18], (char *)a4);
  uint64_t v43 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
  sub_216A6A718(v43, a2, (const pxrInternal__aapl__pxrReserved__::TfToken *)v55, &v51);
LABEL_54:
  sub_21697BEF0((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)&v56);
  int v56 = &__p;
  sub_216889A04(&v56);
  if ((v45 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v45 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v46 + 1);
  sub_21697C414(&v46);
  if ((v47 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v47 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  long long __p = &v51;
  sub_216889A04((void ***)&__p);
LABEL_59:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v54 + 1);
  sub_21697C414(&v54);
  if (((uint64_t)v55[0] & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)((unint64_t)v55[0] & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  return 1;
}

void sub_216A6CBA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, uint64_t a11, char *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18, uint64_t a19, uint64_t a20,int a21,uint64_t a22,uint64_t a23,void **p_p)
{
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec((pxrInternal__aapl__pxrReserved__::SdfSpec *)(v24 - 88));
  sub_21697BEF0((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)&p_p);
  p_p = (void **)&__p;
  sub_216889A04(&p_p);
  if ((a9 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(a9 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  sub_21697B754(&a10);
  if ((a11 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(a11 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  long long __p = &a18;
  sub_216889A04((void ***)&__p);
  sub_21697B754(&a21);
  if ((a22 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(a22 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  _Unwind_Resume(a1);
}

void sub_216A6CD34(pxrInternal__aapl__pxrReserved__::TfToken *a1@<X0>, const pxrInternal__aapl__pxrReserved__::TfToken *a2@<X1>, int *a3@<X8>)
{
  if ((*(void *)a2 & 0xFFFFFFFFFFFFFFF8) != 0) {
    EmptyString = (uint64_t *)((*(void *)a2 & 0xFFFFFFFFFFFFFFF8) + 16);
  }
  else {
    EmptyString = pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(a1);
  }
  if (pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_AttributeChildPolicy>::IsValidName((size_t *)EmptyString))
  {
    sub_216A63E40(a1, a2, a3);
  }
  else
  {
    *(void *)a3 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(a3);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(a3 + 1);
  }
}

BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_AttributeChildPolicy>::CanMoveChildForBatchNamespaceEdit(uint64_t *a1, pxrInternal__aapl__pxrReserved__::TfToken *a2, pxrInternal__aapl__pxrReserved__::Sdf_Identity **a3, const pxrInternal__aapl__pxrReserved__::TfToken *a4, int a5, uint64_t a6)
{
  sub_216A69BE4((atomic_uint **)&v42);
  uint64_t v12 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
  if ((pxrInternal__aapl__pxrReserved__::SdfLayer::PermissionToEdit(v12) & 1) == 0)
  {
    if (a6)
    {
      uint64_t v13 = "Layer is not editable";
      goto LABEL_13;
    }
LABEL_14:
    BOOL v18 = 0;
    goto LABEL_15;
  }
  if (pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant(a3))
  {
    if (a6)
    {
      uint64_t v13 = "Object does not exist";
LABEL_13:
      MEMORY[0x21D4477E0](a6, v13);
      goto LABEL_14;
    }
    goto LABEL_14;
  }
  uint64_t v14 = (uint64_t **)sub_216A64148(a3);
  pxrInternal__aapl__pxrReserved__::SdfSpec::GetLayer(v14, &v38);
  uint64_t v15 = sub_216851B24((uint64_t)&v38);
  uint64_t v16 = sub_216851B24((uint64_t)a1);
  uint64_t v17 = v39;
  if (v39 && atomic_fetch_add_explicit((atomic_uint *volatile)(v39 + 8), 0xFFFFFFFF, memory_order_release) == 1) {
    (*(void (**)(uint64_t))(*(void *)v17 + 8))(v17);
  }
  if (v15 != v16)
  {
    if (a6)
    {
      uint64_t v13 = "Cannot reparent to another layer";
      goto LABEL_13;
    }
    goto LABEL_14;
  }
  sub_216A6CD34(a2, a4, &v40);
  if (!pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator BOOL(&v40))
  {
    if (!a6)
    {
LABEL_24:
      BOOL v18 = 0;
      goto LABEL_25;
    }
    uint64_t v23 = "Invalid name";
LABEL_23:
    MEMORY[0x21D4477E0](a6, v23);
    goto LABEL_24;
  }
  uint64_t v20 = sub_216A64148(a3);
  pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v20, &__p);
  pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath((pxrInternal__aapl__pxrReserved__::SdfPath *)&__p, &v38);
  uint64_t v21 = v38;
  uint64_t v22 = *(void *)a2;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v38 + 1);
  sub_21697C414(&v38);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&__p + 1);
  sub_21697C414(&__p);
  if (v21 != v22)
  {
    uint64_t v24 = sub_216A64148(a3);
    pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v24, &v38);
    BOOL HasPrefix = pxrInternal__aapl__pxrReserved__::SdfPath::HasPrefix((pxrInternal__aapl__pxrReserved__::SdfPath *)&v40, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v38);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v38 + 1);
    sub_21697C414(&v38);
    if (!HasPrefix)
    {
      uint64_t v26 = sub_2169791E0(a1);
      long long __p = 0;
      uint64_t v36 = 0;
      uint64_t v37 = 0;
      sub_216A6A608(v26, (uint64_t **)&__p, &v38);
      v31[0] = &__p;
      sub_216889A04(v31);
      unint64_t v27 = (unint64_t)(v39 - v38) >> 3;
      if (a5 != -1) {
        LODWORD(v27) = a5;
      }
      if (v27 == -2 || (int)v27 <= (unint64_t)((v39 - v38) >> 3))
      {
        sub_216A64224(a3, (uint64_t)&__p);
        pxrInternal__aapl__pxrReserved__::TfToken::TfToken(&v34);
        if (SHIBYTE(v37) < 0) {
          operator delete(__p);
        }
        unint64_t v28 = sub_216A64148(a3);
        pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v28, &__p);
        pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath((pxrInternal__aapl__pxrReserved__::SdfPath *)&__p, &v33);
        sub_21697B754(&__p);
        sub_216A69BE4((atomic_uint **)&v32);
        uint64_t v29 = sub_2169791E0(a1);
        memset(v31, 0, sizeof(v31));
        sub_216A6A608(v29, (uint64_t **)v31, &__p);
        uint64_t v43 = v31;
        sub_216889A04((void ***)&v43);
        uint64_t v30 = __p;
        if (__p != v36)
        {
          while ((*v30 & 0xFFFFFFFFFFFFFFF8) != (v34 & 0xFFFFFFFFFFFFFFF8))
          {
            if (++v30 == v36)
            {
              uint64_t v30 = v36;
              break;
            }
          }
        }
        BOOL v18 = v30 != v36;
        if (a6 && v30 == v36) {
          MEMORY[0x21D4477E0](a6, "Coding error: Object is not in its parent's children");
        }
        v31[0] = &__p;
        sub_216889A04(v31);
        if ((v32 & 7) != 0) {
          atomic_fetch_add_explicit((atomic_uint *volatile)(v32 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
        }
        sub_21697B754(&v33);
        if ((v34 & 7) != 0) {
          atomic_fetch_add_explicit((atomic_uint *volatile)(v34 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
        }
      }
      else
      {
        if (a6) {
          MEMORY[0x21D4477E0](a6, "Invalid index");
        }
        BOOL v18 = 0;
      }
      long long __p = &v38;
      sub_216889A04((void ***)&__p);
      goto LABEL_25;
    }
    if (!a6) {
      goto LABEL_24;
    }
    uint64_t v23 = "Cannot reparent object under itself";
    goto LABEL_23;
  }
  BOOL v18 = 1;
LABEL_25:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v41);
  sub_21697C414(&v40);
LABEL_15:
  if ((v42 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v42 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  return v18;
}

void sub_216A6D1C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, char *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22,uint64_t a23)
{
  long long __p = &a22;
  sub_216889A04((void ***)&__p);
  sub_21697B754((_DWORD *)(v23 - 88));
  uint64_t v25 = *(void *)(v23 - 80);
  if ((v25 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v25 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  _Unwind_Resume(a1);
}

BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_AttributeChildPolicy>::CanRemoveChildForBatchNamespaceEdit(uint64_t *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  sub_216A69BE4((atomic_uint **)&v19);
  unint64_t v7 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
  if (pxrInternal__aapl__pxrReserved__::SdfLayer::PermissionToEdit(v7))
  {
    uint64_t v8 = sub_2169791E0(a1);
    memset(v15, 0, sizeof(v15));
    uint64_t v9 = sub_216A5B7B0((uint64_t *)(v8 + 112));
    (*(void (**)(void ****__return_ptr))(*(void *)v9 + 136))(&v20);
    if (sub_21697BFBC((pxrInternal__aapl__pxrReserved__::VtValue *)&v20))
    {
      if ((v21 & 4) != 0) {
        uint64_t v10 = (uint64_t **)(*(uint64_t (**)(void ****))((v21 & 0xFFFFFFFFFFFFFFF8) + 168))(&v20);
      }
      else {
        uint64_t v10 = (uint64_t **)v20;
      }
    }
    else
    {
      uint64_t v10 = (uint64_t **)v15;
    }
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    sub_21698FA28(&v16, *v10, v10[1], v10[1] - *v10);
    uint64_t v12 = (void ***)sub_2168EE084((uint64_t)&v20);
    uint64_t v20 = v15;
    sub_216889A04(v12);
    uint64_t v13 = v16;
    if (v16 != v17)
    {
      while ((*v13 & 0xFFFFFFFFFFFFFFF8) != (*a3 & 0xFFFFFFFFFFFFFFF8))
      {
        if (++v13 == v17)
        {
          uint64_t v13 = v17;
          break;
        }
      }
    }
    BOOL v11 = v13 != v17;
    if (a4 && v13 == v17) {
      MEMORY[0x21D4477E0](a4, "Object does not exist");
    }
    v15[0] = (void **)&v16;
    sub_216889A04(v15);
  }
  else
  {
    if (a4) {
      MEMORY[0x21D4477E0](a4, "Layer is not editable");
    }
    BOOL v11 = 0;
  }
  if ((v19 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v19 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  return v11;
}

void sub_216A6D518(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  a10 = (void **)&a13;
  sub_216889A04(&a10);
  if ((a16 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(a16 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_MapperChildPolicy>::CreateSpec(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  int v1 = (uint64_t *)(a1 + 8);
  if (v2) {
    sub_216850B68(v1);
  }

  pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_MapperChildPolicy>::CreateSpec();
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_MapperChildPolicy>::CreateSpec(pxrInternal__aapl__pxrReserved__::SdfLayer *a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    pxrInternal__aapl__pxrReserved__::SdfChangeBlock::SdfChangeBlock((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)v17);
    uint64_t Spec = pxrInternal__aapl__pxrReserved__::SdfLayer::_CreateSpec(a1, a2, a3, a4);
    if (Spec)
    {
      pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath(a2, &v18);
      sub_216A6D828((atomic_uint **)__p);
      sub_216A6D88C(a2, &v14);
      pxrInternal__aapl__pxrReserved__::SdfLayer::_PrimPushChild<pxrInternal__aapl__pxrReserved__::SdfPath>();
    }
    uint64_t v18 = "sdf/childrenUtils.cpp";
    unint64_t v19 = "CreateSpec";
    uint64_t v20 = 101;
    uint64_t v21 = "static BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_MapperCh"
          "ildPolicy>::CreateSpec(SdfLayer *, const SdfPath &, SdfSpecType, BOOL) [ChildPolicy = pxrInternal__aapl__pxrRe"
          "served__::Sdf_MapperChildPolicy]";
    char v22 = 0;
    pxrInternal__aapl__pxrReserved__::TfEnum::GetName((uint64_t)&unk_26C755200, a3, (uint64_t)__p);
    int v9 = v16;
    uint64_t v10 = (void **)__p[0];
    Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText(a2);
    uint64_t v12 = __p;
    if (v9 < 0) {
      uint64_t v12 = v10;
    }
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v18, 1, (pxrInternal__aapl__pxrReserved__ *)"Failed to create spec of type '%s' at <%s>", (const char *)v12, Text);
    if (v16 < 0) {
      operator delete(__p[0]);
    }
    sub_21697BEF0((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)v17);
  }
  else
  {
    uint64_t v18 = "sdf/childrenUtils.cpp";
    unint64_t v19 = "CreateSpec";
    uint64_t v20 = 90;
    uint64_t v21 = "static BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_MapperCh"
          "ildPolicy>::CreateSpec(SdfLayer *, const SdfPath &, SdfSpecType, BOOL) [ChildPolicy = pxrInternal__aapl__pxrRe"
          "served__::Sdf_MapperChildPolicy]";
    char v22 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v18, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid object type");
    return 0;
  }
  return Spec;
}

void sub_216A6D7AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18, int a19, __int16 a20,char a21,char a22)
{
}

pxrInternal__aapl__pxrReserved__::SdfChildrenKeys_StaticTokenType *sub_216A6D828@<X0>(atomic_uint **a1@<X8>)
{
  uint64_t result = (pxrInternal__aapl__pxrReserved__::SdfChildrenKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfChildrenKeys);
  if (!result) {
    uint64_t result = sub_21697E16C(&pxrInternal__aapl__pxrReserved__::SdfChildrenKeys);
  }
  uint64_t v3 = (atomic_uint *)*((void *)result + 3);
  *a1 = v3;
  if ((v3 & 7) != 0)
  {
    uint64_t v4 = (atomic_uint *)((unint64_t)v3 & 0xFFFFFFFFFFFFFFF8);
    if ((atomic_fetch_add_explicit(v4, 2u, memory_order_relaxed) & 1) == 0) {
      *a1 = v4;
    }
  }
  return result;
}

_DWORD *sub_216A6D88C@<X0>(pxrInternal__aapl__pxrReserved__::SdfPath *a1@<X0>, int *a2@<X8>)
{
  TargetPath = pxrInternal__aapl__pxrReserved__::SdfPath::GetTargetPath(a1);
  sub_216981010(&v8, TargetPath);
  sub_21698105C(&v9, (_DWORD *)TargetPath + 1);
  pxrInternal__aapl__pxrReserved__::SdfPath::GetPrimPath(a1, &v6);
  pxrInternal__aapl__pxrReserved__::SdfPath::MakeAbsolutePath((pxrInternal__aapl__pxrReserved__::SdfPath *)&v8, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v6, a2);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  return sub_21697C414(&v8);
}

void sub_216A6D930(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, int a11)
{
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_MapperChildPolicy>::IsValidName()
{
  return 1;
}

int *pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_MapperChildPolicy>::IsValidName(long long *a1)
{
  return pxrInternal__aapl__pxrReserved__::SdfPath::IsValidPathString(a1, 0);
}

BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_MapperChildPolicy>::SetChildren(uint64_t *a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2, long long *a3)
{
  uint64_t v113 = *MEMORY[0x263EF8340];
  sub_216A6D828(v108);
  long long v106 = 0uLL;
  unint64_t v107 = 0;
  *((void *)&k + 1) = 0;
  uint64_t v98 = 0;
  *(void *)&long long k = (char *)&k + 8;
  for (long long i = *a3; (void)i != *((void *)&i + 1); sub_216A8E4E0(&i))
  {
    int v8 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)sub_216A8E460((uint64_t *)&i, v6, v7);
    if (pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant(v8)) {
      goto LABEL_9;
    }
    BOOL v11 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)sub_216A8E460((uint64_t *)&i, v9, v10);
    sub_216A64E28(v11, &v109);
    sub_216A5CF30((uint64_t **)&k, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v109, &v109);
    if (v12) {
      goto LABEL_7;
    }
    int v14 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)sub_216A8E460((uint64_t *)&i, v12, v13);
    uint64_t v15 = sub_21697F2E0(v14);
    pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v15, &j);
    pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath((pxrInternal__aapl__pxrReserved__::SdfPath *)&j, &v101);
    char v16 = v101;
    uint64_t v17 = *(_DWORD **)a2;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v101 + 1);
    sub_21697C414(&v101);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&j + 1);
    sub_21697C414(&j);
    if (v16 != v17) {
LABEL_7:
    }
      char v18 = 1;
    else {
      char v18 = 0;
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v109 + 1);
    sub_21697C414(&v109);
    if (v18)
    {
LABEL_9:
      unint64_t v19 = (atomic_uint **)sub_216A8E460((uint64_t *)&i, v9, v10);
      uint64_t v20 = *((void *)&v106 + 1);
      if (*((void *)&v106 + 1) >= v107)
      {
        char v22 = sub_21697CF74((atomic_uint ***)&v106, v19);
      }
      else
      {
        uint64_t v21 = *v19;
        **((void **)&v106 + 1) = *v19;
        if (v21) {
          atomic_fetch_add(v21, 1u);
        }
        char v22 = (char *)(v20 + 8);
      }
      *((void *)&v106 + 1) = v22;
    }
  }
  sub_216981EE8((uint64_t)&k, *((void **)&k + 1));
  uint64_t v23 = sub_2169791E0(a1);
  long long k = 0uLL;
  uint64_t v98 = 0;
  uint64_t v24 = sub_216A5B7B0((uint64_t *)(v23 + 112));
  (*(void (**)(uint64_t **__return_ptr))(*(void *)v24 + 136))(&v109);
  if (sub_2169DC8C8((pxrInternal__aapl__pxrReserved__::VtValue *)&v109))
  {
    if (((uint64_t)v110[0] & 4) != 0) {
      uint64_t v25 = (uint64_t *)(*(uint64_t (**)(uint64_t **))(((unint64_t)v110[0] & 0xFFFFFFFFFFFFFFF8) + 168))(&v109);
    }
    else {
      uint64_t v25 = v109;
    }
  }
  else
  {
    uint64_t v25 = (uint64_t *)&k;
  }
  long long i = 0uLL;
  uint64_t v105 = 0;
  sub_216980EEC(&i, (_DWORD *)*v25, (_DWORD *)v25[1], (v25[1] - *v25) >> 3);
  uint64_t v26 = (void ***)sub_2168EE084((uint64_t)&v109);
  uint64_t v109 = (uint64_t *)&k;
  sub_216981168(v26);
  v110[0] = 0;
  v110[1] = 0;
  uint64_t v109 = (uint64_t *)v110;
  unint64_t v101 = 0;
  uint64_t v102 = 0;
  unint64_t v103 = 0;
  sub_216A6E72C((uint64_t *)&v101, (uint64_t)(*((void *)&v106 + 1) - v106) >> 3);
  for (long long j = v106; (void)j != *((void *)&j + 1); sub_216A6E840(&j))
  {
    uint64_t v29 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)sub_216A6E7C0((uint64_t *)&j, v27, v28);
    if (pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant(v29))
    {
      *(void *)&long long k = "sdf/childrenUtils.cpp";
      *((void *)&k + 1) = "SetChildren";
      uint64_t v98 = 181;
      uint64_t v99 = "static BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_Mapper"
            "ChildPolicy>::SetChildren(const SdfLayerHandle &, const SdfPath &, const std::vector<typename ChildPolicy::V"
            "alueType> &) [ChildPolicy = pxrInternal__aapl__pxrReserved__::Sdf_MapperChildPolicy]";
      char v100 = 0;
      pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&k, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid child");
      goto LABEL_75;
    }
    unint64_t v32 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)sub_216A6E7C0((uint64_t *)&j, v30, v31);
    sub_216A64E28(v32, &v86);
    int v33 = v102;
    if ((unint64_t)v102 >= v103)
    {
      uint64_t v34 = (_DWORD *)sub_216981B30((uint64_t *)&v101, &v86);
    }
    else
    {
      sub_216981010(v102, &v86);
      sub_21698105C(v33 + 1, (_DWORD *)&v86 + 1);
      uint64_t v34 = v33 + 2;
    }
    uint64_t v102 = v34;
    sub_216A5CF30(&v109, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v86, &v86);
    if ((v35 & 1) == 0)
    {
      *(void *)&long long k = "sdf/childrenUtils.cpp";
      *((void *)&k + 1) = "SetChildren";
      uint64_t v98 = 188;
      uint64_t v99 = "static BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_Mapper"
            "ChildPolicy>::SetChildren(const SdfLayerHandle &, const SdfPath &, const std::vector<typename ChildPolicy::V"
            "alueType> &) [ChildPolicy = pxrInternal__aapl__pxrReserved__::Sdf_MapperChildPolicy]";
      char v100 = 0;
      pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&k, 1, (pxrInternal__aapl__pxrReserved__ *)"Duplicate child");
      goto LABEL_74;
    }
    uint64_t v37 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)sub_216A6E7C0((uint64_t *)&j, v35, v36);
    uint64_t v38 = (uint64_t **)sub_21697F2E0(v37);
    pxrInternal__aapl__pxrReserved__::SdfSpec::GetLayer(v38, (uint64_t *)&k);
    uint64_t v39 = sub_216851B24((uint64_t)&k);
    uint64_t v42 = sub_216851B24((uint64_t)a1);
    uint64_t v43 = *((void *)&k + 1);
    if (*((void *)&k + 1)
      && atomic_fetch_add_explicit((atomic_uint *volatile)(*((void *)&k + 1) + 8), 0xFFFFFFFF, memory_order_release) == 1)
    {
      (*(void (**)(uint64_t))(*(void *)v43 + 8))(v43);
    }
    if (v39 != v42)
    {
      *(void *)&long long k = "sdf/childrenUtils.cpp";
      *((void *)&k + 1) = "SetChildren";
      uint64_t v98 = 193;
      uint64_t v99 = "static BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_Mapper"
            "ChildPolicy>::SetChildren(const SdfLayerHandle &, const SdfPath &, const std::vector<typename ChildPolicy::V"
            "alueType> &) [ChildPolicy = pxrInternal__aapl__pxrReserved__::Sdf_MapperChildPolicy]";
      char v100 = 0;
      pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&k, 1, (pxrInternal__aapl__pxrReserved__ *)"Cannot reparent to another layer");
      goto LABEL_74;
    }
    unint64_t v44 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)sub_216A6E7C0((uint64_t *)&j, v40, v41);
    unint64_t v45 = sub_21697F2E0(v44);
    pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v45, &v111);
    pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath((pxrInternal__aapl__pxrReserved__::SdfPath *)&v111, &k);
    if (*(void *)a2 == (void)k)
    {
      BOOL HasPrefix = 0;
    }
    else
    {
      uint64_t v49 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)sub_216A6E7C0((uint64_t *)&j, v46, v47);
      uint64_t v50 = sub_21697F2E0(v49);
      pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v50, &m);
      BOOL HasPrefix = pxrInternal__aapl__pxrReserved__::SdfPath::HasPrefix(a2, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&m);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&m + 1);
      sub_21697C414(&m);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&k + 1);
    sub_21697C414(&k);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v111 + 1);
    sub_21697C414(&v111);
    if (HasPrefix)
    {
      *(void *)&long long k = "sdf/childrenUtils.cpp";
      *((void *)&k + 1) = "SetChildren";
      uint64_t v98 = 203;
      uint64_t v99 = "static BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_Mapper"
            "ChildPolicy>::SetChildren(const SdfLayerHandle &, const SdfPath &, const std::vector<typename ChildPolicy::V"
            "alueType> &) [ChildPolicy = pxrInternal__aapl__pxrReserved__::Sdf_MapperChildPolicy]";
      char v100 = 0;
      pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&k, 1, (pxrInternal__aapl__pxrReserved__ *)"Cannot reparent child under itself");
LABEL_74:
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v86 + 1);
      sub_21697C414(&v86);
LABEL_75:
      BOOL v60 = 0;
      goto LABEL_80;
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v86 + 1);
    sub_21697C414(&v86);
  }
  pxrInternal__aapl__pxrReserved__::SdfChangeBlock::SdfChangeBlock((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)v96);
  for (long long k = i; (void)k != *((void *)&k + 1); sub_21698147C(&k))
  {
    uint64_t v53 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)sub_2169813FC((uint64_t *)&k, v51, v52);
    if (v110 == sub_21698EFF0((uint64_t)&v109, v53))
    {
      int v56 = (pxrInternal__aapl__pxrReserved__::SdfPath *)sub_2169813FC((uint64_t *)&k, v54, v55);
      sub_216A64ABC(a2, v56, &j);
      uint64_t v57 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
      pxrInternal__aapl__pxrReserved__::SdfLayer::_DeleteSpec(v57, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&j);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&j + 1);
      sub_21697C414(&j);
    }
  }
  sub_216A8E560((uint64_t)&j, (const pxrInternal__aapl__pxrReserved__::SdfPath *)i, *((const pxrInternal__aapl__pxrReserved__::SdfPath **)&i + 1));
  for (long long m = v106; ; sub_216A6E840(&m))
  {
    BOOL v60 = m == *((void *)&m + 1);
    if ((void)m == *((void *)&m + 1)) {
      break;
    }
    uint64_t v61 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)sub_216A6E7C0((uint64_t *)&m, v58, v59);
    sub_216A64E28(v61, &v93);
    sub_216A64ABC(a2, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v93, &v91);
    uint64_t v64 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)sub_216A6E7C0((uint64_t *)&m, v62, v63);
    int v65 = sub_21697F2E0(v64);
    pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v65, &k);
    pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath((pxrInternal__aapl__pxrReserved__::SdfPath *)&k, &v90);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&k + 1);
    sub_21697C414(&k);
    if (v90 == *(void *)a2)
    {
      int v66 = 10;
    }
    else
    {
      if ((void *)((char *)&j + 8) != sub_21698EFF0((uint64_t)&j, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v93))
      {
        uint64_t v67 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
        pxrInternal__aapl__pxrReserved__::SdfLayer::_DeleteSpec(v67, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v91);
      }
      sub_216A6D828((atomic_uint **)&v89);
      uint64_t v68 = sub_2169791E0(a1);
      long long k = 0uLL;
      uint64_t v98 = 0;
      uint64_t v69 = sub_216A5B7B0((uint64_t *)(v68 + 112));
      (*(void (**)(long long **__return_ptr))(*(void *)v69 + 136))(&v111);
      if (sub_2169DC8C8((pxrInternal__aapl__pxrReserved__::VtValue *)&v111))
      {
        if ((v112 & 4) != 0) {
          p_long long k = (long long *)(*(uint64_t (**)(long long **))((v112 & 0xFFFFFFFFFFFFFFF8) + 168))(&v111);
        }
        else {
          p_long long k = v111;
        }
      }
      else
      {
        p_long long k = &k;
      }
      unint64_t v86 = 0;
      uint64_t v87 = 0;
      uint64_t v88 = 0;
      sub_216980EEC(&v86, *(_DWORD **)p_k, *((_DWORD **)p_k + 1), (uint64_t)(*((void *)p_k + 1) - *(void *)p_k) >> 3);
      uint64_t v71 = (void ***)sub_2168EE084((uint64_t)&v111);
      uint64_t v111 = &k;
      sub_216981168(v71);
      unsigned __int8 v72 = v86;
      if (v86 != v87)
      {
        while (*(void *)v72 != v93)
        {
          v72 += 2;
          if (v72 == v87)
          {
            unsigned __int8 v72 = v87;
            break;
          }
        }
      }
      if (v72 == v87)
      {
        *(void *)&long long k = "sdf/childrenUtils.cpp";
        *((void *)&k + 1) = "SetChildren";
        uint64_t v98 = 254;
        uint64_t v99 = "static BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_Mapp"
              "erChildPolicy>::SetChildren(const SdfLayerHandle &, const SdfPath &, const std::vector<typename ChildPolic"
              "y::ValueType> &) [ChildPolicy = pxrInternal__aapl__pxrReserved__::Sdf_MapperChildPolicy]";
        char v100 = 0;
        pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&k, 1, (pxrInternal__aapl__pxrReserved__ *)"An object was not in its parent's list of children");
        int v66 = 1;
      }
      else
      {
        sub_216A8E5E4((uint64_t)&v111, v72 + 2, v87, v72);
        uint64_t v74 = v73;
        for (n = v87; n != v74; sub_216981128((uint64_t)&v88, n))
          n -= 2;
        uint64_t v87 = v74;
        if (v86 == v74)
        {
          uint64_t v77 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
          pxrInternal__aapl__pxrReserved__::SdfLayer::EraseField(v77, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v90, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v89);
        }
        else
        {
          uint64_t v76 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
          sub_216A6E944(v76, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v90, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v89, &v86);
        }
        long long v78 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
        uint64_t v81 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)sub_216A6E7C0((uint64_t *)&m, v79, v80);
        unsigned __int8 v82 = sub_21697F2E0(v81);
        pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v82, &k);
        pxrInternal__aapl__pxrReserved__::SdfLayer::_MoveSpec(v78, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&k, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v91);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&k + 1);
        sub_21697C414(&k);
        int v66 = 0;
      }
      *(void *)&long long k = &v86;
      sub_216981168((void ***)&k);
      if ((v89 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v89 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v90 + 1);
    sub_21697C414(&v90);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v92);
    sub_21697C414(&v91);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v93 + 1);
    sub_21697C414(&v93);
    if (v66 != 10 && v66) {
      goto LABEL_79;
    }
  }
  if (v101 == v102)
  {
    uint64_t v84 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
    pxrInternal__aapl__pxrReserved__::SdfLayer::EraseField(v84, a2, (const pxrInternal__aapl__pxrReserved__::TfToken *)v108);
  }
  else
  {
    uint64_t v83 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
    sub_216A6E944(v83, a2, (const pxrInternal__aapl__pxrReserved__::TfToken *)v108, &v101);
  }
LABEL_79:
  sub_216981EE8((uint64_t)&j, *((void **)&j + 1));
  sub_21697BEF0((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)v96);
LABEL_80:
  *(void *)&long long k = &v101;
  sub_216981168((void ***)&k);
  sub_216981EE8((uint64_t)&v109, v110[0]);
  *(void *)&long long k = &i;
  sub_216981168((void ***)&k);
  *(void *)&long long k = &v106;
  sub_21697CA24((void ***)&k);
  if (((uint64_t)v108[0] & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)((unint64_t)v108[0] & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  return v60;
}

void sub_216A6E358(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void **a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  sub_21697B754(&a10);
  a23 = (void **)&a28;
  sub_216981168(&a23);
  sub_216981EE8(v31 - 144, *(void **)(v31 - 136));
  a23 = (void **)&a31;
  sub_216981168(&a23);
  a23 = (void **)(v31 - 192);
  sub_21697CA24(&a23);
  uint64_t v33 = *(void *)(v31 - 160);
  if ((v33 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v33 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_216A6E61C@<X0>(uint64_t a1@<X0>, _DWORD **a2@<X3>, void *a3@<X8>)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  uint64_t v5 = sub_216A5B7B0((uint64_t *)(a1 + 112));
  (*(void (**)(_DWORD ***__return_ptr))(*(void *)v5 + 136))(&v7);
  if (sub_2169DC8C8((pxrInternal__aapl__pxrReserved__::VtValue *)&v7))
  {
    if ((v8 & 4) != 0) {
      a2 = (_DWORD **)(*(uint64_t (**)(_DWORD ***))((v8 & 0xFFFFFFFFFFFFFFF8) + 168))(&v7);
    }
    else {
      a2 = v7;
    }
  }
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  sub_216980EEC(a3, *a2, a2[1], ((char *)a2[1] - (char *)*a2) >> 3);
  return sub_2168EE084((uint64_t)&v7);
}

void sub_216A6E710(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
}

void **sub_216A6E72C(uint64_t *a1, unint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t result = (void **)(a1 + 2);
  if (a2 > (v4 - *a1) >> 3)
  {
    if (a2 >> 61) {
      sub_21677CB10();
    }
    uint64_t v5 = a1[1] - *a1;
    void v7[4] = result;
    v7[0] = sub_21677CB28((uint64_t)result, a2);
    v7[1] = (char *)v7[0] + v5;
    v7[2] = (char *)v7[0] + v5;
    void v7[3] = (char *)v7[0] + 8 * v6;
    sub_216981C20(a1, v7);
    return sub_216981DDC(v7);
  }
  return result;
}

void sub_216A6E7AC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216981DDC((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_216A6E7C0(uint64_t *a1, uint64_t a2, char *a3)
{
  uint64_t result = *a1;
  if (result == a1[1])
  {
    v5[0] = "tf/iterator.h";
    v5[1] = "operator*";
    void v5[2] = 271;
    v5[3] = "Reference pxrInternal__aapl__pxrReserved__::TfIterator<std::vector<pxrInternal__aapl__pxrReserved__::SdfHand"
            "le<pxrInternal__aapl__pxrReserved__::SdfSpec>>>::operator*() [T = std::vector<pxrInternal__aapl__pxrReserved"
            "__::SdfHandle<pxrInternal__aapl__pxrReserved__::SdfSpec>>, Reverse = false]";
    char v6 = 0;
    int v7 = 4;
    pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper::IssueFatalError((pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper *)v5, (pxrInternal__aapl__pxrReserved__ *)"iterator exhausted", a3);
  }
  return result;
}

void sub_216A6E838()
{
}

void *sub_216A6E840(void *a1)
{
  if (*a1 == a1[1])
  {
    v3[0] = "tf/iterator.h";
    v3[1] = "operator++";
    v3[2] = 250;
    void v3[3] = "TfIterator<T, Reverse> &pxrInternal__aapl__pxrReserved__::TfIterator<std::vector<pxrInternal__aapl__pxrReser"
            "ved__::SdfHandle<pxrInternal__aapl__pxrReserved__::SdfSpec>>>::operator++() [T = std::vector<pxrInternal__aa"
            "pl__pxrReserved__::SdfHandle<pxrInternal__aapl__pxrReserved__::SdfSpec>>, Reverse = false]";
    char v4 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v3, 1, (pxrInternal__aapl__pxrReserved__ *)"iterator exhausted");
  }
  else
  {
    *a1 += 8;
  }
  return a1;
}

int *sub_216A6E8C0(uint64_t a1, int *a2)
{
  sub_216A8E5E4((uint64_t)&v8, a2 + 2, *(int **)(a1 + 8), a2);
  uint64_t v5 = v4;
  char v6 = *(_DWORD **)(a1 + 8);
  if (v6 != v4)
  {
    do
    {
      v6 -= 2;
      sub_216981128(a1 + 16, v6);
    }
    while (v6 != v5);
  }
  *(void *)(a1 + 8) = v5;
  return a2;
}

uint64_t sub_216A6E944(pxrInternal__aapl__pxrReserved__::SdfLayer *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, _DWORD **a4)
{
  v8[2] = *(unsigned int **)MEMORY[0x263EF8340];
  v8[1] = (unsigned int *)&off_26C756D88;
  sub_2169DC54C(v8, a4);
  pxrInternal__aapl__pxrReserved__::SdfLayer::SetField(a1, a2, a3, (const pxrInternal__aapl__pxrReserved__::VtValue *)v8);
  return sub_2168EE084((uint64_t)v8);
}

void sub_216A6E9DC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_2168EE084((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_MapperChildPolicy>::InsertChild(uint64_t *a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2, pxrInternal__aapl__pxrReserved__::Sdf_Identity **a3, int a4)
{
  uint64_t v64 = *MEMORY[0x263EF8340];
  sub_216A6D828(v58);
  if (pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant(a3))
  {
    uint64_t v53 = (void **)"sdf/childrenUtils.cpp";
    uint64_t v54 = "InsertChild";
    uint64_t v55 = 290;
    int v56 = "static BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_MapperCh"
          "ildPolicy>::InsertChild(const SdfLayerHandle &, const SdfPath &, const typename ChildPolicy::ValueType &, int)"
          " [ChildPolicy = pxrInternal__aapl__pxrReserved__::Sdf_MapperChildPolicy]";
    char v57 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v53, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid child");
LABEL_8:
    BOOL v12 = 0;
    goto LABEL_9;
  }
  char v8 = (uint64_t **)sub_21697F2E0(a3);
  pxrInternal__aapl__pxrReserved__::SdfSpec::GetLayer(v8, (uint64_t *)&v53);
  uint64_t v9 = sub_216851B24((uint64_t)&v53);
  uint64_t v10 = sub_216851B24((uint64_t)a1);
  BOOL v11 = v54;
  if (v54 && atomic_fetch_add_explicit((atomic_uint *volatile)v54 + 2, 0xFFFFFFFF, memory_order_release) == 1) {
    (*(void (**)(const char *))(*(void *)v11 + 8))(v11);
  }
  if (v9 != v10)
  {
    uint64_t v53 = (void **)"sdf/childrenUtils.cpp";
    uint64_t v54 = "InsertChild";
    uint64_t v55 = 295;
    int v56 = "static BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_MapperCh"
          "ildPolicy>::InsertChild(const SdfLayerHandle &, const SdfPath &, const typename ChildPolicy::ValueType &, int)"
          " [ChildPolicy = pxrInternal__aapl__pxrReserved__::Sdf_MapperChildPolicy]";
    char v57 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v53, 1, (pxrInternal__aapl__pxrReserved__ *)"Cannot reparent to another layer");
    goto LABEL_8;
  }
  int v14 = sub_21697F2E0(a3);
  pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v14, &v47);
  pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath((pxrInternal__aapl__pxrReserved__::SdfPath *)&v47, &v53);
  uint64_t v15 = v53;
  char v16 = *(void ***)a2;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v53 + 1);
  sub_21697C414(&v53);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v47 + 1);
  sub_21697C414(&v47);
  if (v15 == v16)
  {
    BOOL v12 = 1;
  }
  else
  {
    sub_216A64E28(a3, &v52);
    sub_216A64ABC(a2, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v52, &v50);
    uint64_t v17 = sub_21697F2E0(a3);
    pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v17, &v53);
    BOOL HasPrefix = pxrInternal__aapl__pxrReserved__::SdfPath::HasPrefix((pxrInternal__aapl__pxrReserved__::SdfPath *)&v50, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v53);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v53 + 1);
    sub_21697C414(&v53);
    if (HasPrefix)
    {
      uint64_t v53 = (void **)"sdf/childrenUtils.cpp";
      uint64_t v54 = "InsertChild";
      uint64_t v55 = 312;
      int v56 = "static BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_Mapper"
            "ChildPolicy>::InsertChild(const SdfLayerHandle &, const SdfPath &, const typename ChildPolicy::ValueType &, "
            "int) [ChildPolicy = pxrInternal__aapl__pxrReserved__::Sdf_MapperChildPolicy]";
      char v57 = 0;
      pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v53, 1, (pxrInternal__aapl__pxrReserved__ *)"Cannot reparent child under itself");
      BOOL v12 = 0;
    }
    else
    {
      uint64_t v19 = sub_2169791E0(a1);
      uint64_t v53 = 0;
      uint64_t v54 = 0;
      uint64_t v55 = 0;
      uint64_t v20 = sub_216A5B7B0((uint64_t *)(v19 + 112));
      (*(void (**)(void ****__return_ptr))(*(void *)v20 + 136))(&v59);
      if (sub_2169DC8C8((pxrInternal__aapl__pxrReserved__::VtValue *)&v59))
      {
        if ((v60 & 4) != 0) {
          uint64_t v21 = (void ***)(*(uint64_t (**)(void ****))(((unint64_t)v60 & 0xFFFFFFFFFFFFFFF8) + 168))(&v59);
        }
        else {
          uint64_t v21 = v59;
        }
      }
      else
      {
        uint64_t v21 = &v53;
      }
      uint64_t v47 = 0;
      uint64_t v48 = 0;
      uint64_t v49 = 0;
      sub_216980EEC(&v47, *v21, v21[1], v21[1] - *v21);
      char v22 = (void ***)sub_2168EE084((uint64_t)&v59);
      BOOL v59 = &v53;
      sub_216981168(v22);
      unint64_t v25 = (unint64_t)(v48 - (char *)v47) >> 3;
      if (a4 != -1) {
        LODWORD(v25) = a4;
      }
      uint64_t v26 = (int)v25;
      if ((int)v25 <= (unint64_t)((v48 - (char *)v47) >> 3))
      {
        BOOL v59 = v47;
        BOOL v60 = (int *)v48;
        while (v59 != (void ***)v60)
        {
          unint64_t v28 = (void *)sub_2169813FC((uint64_t *)&v59, v23, v24);
          if (*v28 == v52)
          {
            uint64_t v53 = (void **)"sdf/childrenUtils.cpp";
            uint64_t v54 = "InsertChild";
            uint64_t v55 = 334;
            int v56 = "static BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_"
                  "MapperChildPolicy>::InsertChild(const SdfLayerHandle &, const SdfPath &, const typename ChildPolicy::V"
                  "alueType &, int) [ChildPolicy = pxrInternal__aapl__pxrReserved__::Sdf_MapperChildPolicy]";
            char v57 = 0;
            Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v50);
            pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v53, 1, (pxrInternal__aapl__pxrReserved__ *)"Attempt to insert duplicate spec %s", Text);
            goto LABEL_32;
          }
          sub_21698147C(&v59);
        }
        uint64_t v29 = sub_21697F2E0(a3);
        pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v29, &v53);
        pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath((pxrInternal__aapl__pxrReserved__::SdfPath *)&v53, &v45);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v53 + 1);
        sub_21697C414(&v53);
        sub_216A6D828((atomic_uint **)&v44);
        uint64_t v30 = sub_2169791E0(a1);
        uint64_t v53 = 0;
        uint64_t v54 = 0;
        uint64_t v55 = 0;
        uint64_t v31 = sub_216A5B7B0((uint64_t *)(v30 + 112));
        (*(void (**)(void ****__return_ptr))(*(void *)v31 + 136))(&v62);
        if (sub_2169DC8C8((pxrInternal__aapl__pxrReserved__::VtValue *)&v62))
        {
          if ((v63 & 4) != 0) {
            unint64_t v32 = (void ***)(*(uint64_t (**)(void ****))((v63 & 0xFFFFFFFFFFFFFFF8) + 168))(&v62);
          }
          else {
            unint64_t v32 = v62;
          }
        }
        else
        {
          unint64_t v32 = &v53;
        }
        BOOL v59 = 0;
        BOOL v60 = 0;
        uint64_t v61 = 0;
        sub_216980EEC(&v59, *v32, v32[1], v32[1] - *v32);
        uint64_t v34 = (void ***)sub_2168EE084((uint64_t)&v62);
        uint64_t v62 = &v53;
        sub_216981168(v34);
        uint64_t v35 = (int *)v59;
        if (v59 != (void ***)v60)
        {
          while (*(void *)v35 != v52)
          {
            v35 += 2;
            if (v35 == v60)
            {
              uint64_t v35 = v60;
              break;
            }
          }
        }
        BOOL v12 = v35 != v60;
        if (v35 == v60)
        {
          uint64_t v53 = (void **)"sdf/childrenUtils.cpp";
          uint64_t v54 = "InsertChild";
          uint64_t v55 = 352;
          int v56 = "static BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_Ma"
                "pperChildPolicy>::InsertChild(const SdfLayerHandle &, const SdfPath &, const typename ChildPolicy::Value"
                "Type &, int) [ChildPolicy = pxrInternal__aapl__pxrReserved__::Sdf_MapperChildPolicy]";
          char v57 = 0;
          pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v53, 1, (pxrInternal__aapl__pxrReserved__ *)"An object was not in its parent's list of children");
        }
        else
        {
          pxrInternal__aapl__pxrReserved__::SdfChangeBlock::SdfChangeBlock((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)&v53);
          sub_216A6E8C0((uint64_t)&v59, v35);
          if (v59 == (void ***)v60)
          {
            uint64_t v37 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
            pxrInternal__aapl__pxrReserved__::SdfLayer::EraseField(v37, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v45, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v44);
          }
          else
          {
            uint64_t v36 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
            sub_216A6E944(v36, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v45, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v44, (_DWORD **)&v59);
          }
          uint64_t v38 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
          uint64_t v39 = sub_21697F2E0(a3);
          pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v39, &v62);
          pxrInternal__aapl__pxrReserved__::SdfLayer::_MoveSpec(v38, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v62, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v50);
          sub_21697B754(&v62);
          sub_216A6F2DC((uint64_t *)&v47, (int *)&v47[v26], (int *)&v52);
          uint64_t v40 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
          sub_216A6E944(v40, a2, (const pxrInternal__aapl__pxrReserved__::TfToken *)v58, (_DWORD **)&v47);
          int v41 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
          pxrInternal__aapl__pxrReserved__::SdfLayer::GetObjectAtPath(v41, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v45, &v62);
          uint64_t IsDormant = pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&v62);
          if ((IsDormant & 1) == 0)
          {
            unint64_t Instance = pxrInternal__aapl__pxrReserved__::Sdf_CleanupTracker::GetInstance((pxrInternal__aapl__pxrReserved__::Sdf_CleanupTracker *)IsDormant);
            pxrInternal__aapl__pxrReserved__::Sdf_CleanupTracker::AddSpecIfTracking(Instance, (atomic_uint **)&v62);
          }
          pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec((pxrInternal__aapl__pxrReserved__::SdfSpec *)&v62);
          sub_21697BEF0((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)&v53);
        }
        uint64_t v53 = (void **)&v59;
        sub_216981168(&v53);
        if ((v44 & 7) != 0) {
          atomic_fetch_add_explicit((atomic_uint *volatile)(v44 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
        }
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v46);
        sub_21697C414(&v45);
      }
      else
      {
        uint64_t v53 = (void **)"sdf/childrenUtils.cpp";
        uint64_t v54 = "InsertChild";
        uint64_t v55 = 326;
        int v56 = "static BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_Mapp"
              "erChildPolicy>::InsertChild(const SdfLayerHandle &, const SdfPath &, const typename ChildPolicy::ValueType"
              " &, int) [ChildPolicy = pxrInternal__aapl__pxrReserved__::Sdf_MapperChildPolicy]";
        char v57 = 0;
        uint64_t v27 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v50);
        pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v53, 1, (pxrInternal__aapl__pxrReserved__ *)"Attempt to insert spec %s at an invalid index %d", v27, v26);
LABEL_32:
        BOOL v12 = 0;
      }
      uint64_t v53 = (void **)&v47;
      sub_216981168(&v53);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v51);
    sub_21697C414(&v50);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v52 + 1);
    sub_21697C414(&v52);
  }
LABEL_9:
  if (((uint64_t)v58[0] & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)((unint64_t)v58[0] & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  return v12;
}

void sub_216A6F0E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, char a14, uint64_t a15, uint64_t a16, int a17, int a18, int a19, void **a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  a20 = (void **)(v25 - 112);
  sub_216981168(&a20);
  if ((a11 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(a11 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  sub_21697B754(&a12);
  a20 = (void **)&a14;
  sub_216981168(&a20);
  sub_21697B754(&a17);
  sub_21697B754(&a19);
  if ((a25 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(a25 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  _Unwind_Resume(a1);
}

int *sub_216A6F2DC(uint64_t *a1, int *a2, int *a3)
{
  char v4 = a2;
  uint64_t v7 = *a1;
  unint64_t v6 = a1[1];
  uint64_t v8 = ((uint64_t)a2 - *a1) >> 3;
  unint64_t v11 = a1[2];
  uint64_t v9 = (uint64_t)(a1 + 2);
  unint64_t v10 = v11;
  if (v6 >= v11)
  {
    unint64_t v12 = ((uint64_t)(v6 - v7) >> 3) + 1;
    if (v12 >> 61) {
      sub_21677CB10();
    }
    uint64_t v13 = v10 - v7;
    if (v13 >> 2 > v12) {
      unint64_t v12 = v13 >> 2;
    }
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v14 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v14 = v12;
    }
    uint64_t v21 = v9;
    if (v14) {
      uint64_t v15 = (char *)sub_21677CB28(v9, v14);
    }
    else {
      uint64_t v15 = 0;
    }
    uint64_t v17 = v15;
    char v18 = &v15[8 * v8];
    uint64_t v19 = v18;
    uint64_t v20 = &v15[8 * v14];
    sub_216A8E6E0(&v17, a3);
    char v4 = (int *)sub_2169DCBF4((uint64_t)a1, &v17, v4);
    sub_216981DDC(&v17);
  }
  else if (a2 == (int *)v6)
  {
    sub_216981010(a2, a3);
    sub_21698105C((_DWORD *)(v7 + 8 * v8 + 4), a3 + 1);
    a1[1] = (uint64_t)(v4 + 2);
  }
  else
  {
    sub_2169DCAD8((uint64_t)a1, (uint64_t)a2, v6, (uint64_t)(a2 + 2));
    if (v4 <= a3) {
      a3 += 2 * (a1[1] > (unint64_t)a3);
    }
    sub_2169C487C(v4, a3);
    sub_2169C48D4((int *)(v7 + 8 * v8 + 4), a3 + 1);
  }
  return v4;
}

void sub_216A6F438(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216981DDC((void **)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_MapperChildPolicy>::RemoveChild(uint64_t *a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2, _DWORD *a3)
{
  uint64_t v32 = *MEMORY[0x263EF8340];
  sub_216A6D828((atomic_uint **)&v27);
  uint64_t v6 = sub_2169791E0(a1);
  memset(v23, 0, sizeof(v23));
  uint64_t v7 = sub_216A5B7B0((uint64_t *)(v6 + 112));
  (*(void (**)(void ****__return_ptr))(*(void *)v7 + 136))(&v30);
  if (sub_2169DC8C8((pxrInternal__aapl__pxrReserved__::VtValue *)&v30))
  {
    if ((v31 & 4) != 0) {
      uint64_t v8 = (void ***)(*(uint64_t (**)(void ****))((v31 & 0xFFFFFFFFFFFFFFF8) + 168))(&v30);
    }
    else {
      uint64_t v8 = v30;
    }
  }
  else
  {
    uint64_t v8 = v23;
  }
  uint64_t v24 = 0;
  uint64_t v25 = 0;
  uint64_t v26 = 0;
  sub_216980EEC(&v24, *v8, v8[1], v8[1] - *v8);
  sub_2168EE084((uint64_t)&v30);
  uint64_t v30 = v23;
  sub_216981168((void ***)&v30);
  pxrInternal__aapl__pxrReserved__::SdfChangeBlock::SdfChangeBlock((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)v23);
  sub_216981010(&v30, a3);
  sub_21698105C((_DWORD *)&v30 + 1, a3 + 1);
  uint64_t v9 = (int *)v24;
  if ((int *)v24 == v25)
  {
LABEL_9:
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v10 = -v24;
    while (*(void ****)v9 != v30)
    {
      v9 += 2;
      v10 -= 8;
      if (v9 == v25) {
        goto LABEL_9;
      }
    }
    sub_216A64ABC(a2, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v30, &v28);
    unint64_t v12 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
    pxrInternal__aapl__pxrReserved__::SdfLayer::_DeleteSpec(v12, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v28);
    sub_216A8E5E4((uint64_t)&v22, (int *)(8 - v10), v25, (int *)-v10);
    unint64_t v14 = v13;
    for (long long i = v25; i != v14; sub_216981128((uint64_t)&v26, i))
      i -= 2;
    uint64_t v25 = v14;
    if ((int *)v24 == v14)
    {
      uint64_t v17 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
      pxrInternal__aapl__pxrReserved__::SdfLayer::EraseField(v17, a2, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v27);
    }
    else
    {
      char v16 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
      sub_216A6E944(v16, a2, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v27, (_DWORD **)&v24);
    }
    char v18 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
    pxrInternal__aapl__pxrReserved__::SdfLayer::GetObjectAtPath(v18, a2, &v22);
    uint64_t IsDormant = pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&v22);
    if ((IsDormant & 1) == 0)
    {
      unint64_t Instance = pxrInternal__aapl__pxrReserved__::Sdf_CleanupTracker::GetInstance((pxrInternal__aapl__pxrReserved__::Sdf_CleanupTracker *)IsDormant);
      pxrInternal__aapl__pxrReserved__::Sdf_CleanupTracker::AddSpecIfTracking(Instance, &v22);
    }
    pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec((pxrInternal__aapl__pxrReserved__::SdfSpec *)&v22);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
    sub_21697C414(&v28);
    uint64_t v11 = 1;
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v30 + 1);
  sub_21697C414(&v30);
  sub_21697BEF0((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)v23);
  v23[0] = (void **)&v24;
  sub_216981168(v23);
  if ((v27 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v27 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  return v11;
}

void sub_216A6F70C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  if (a2) {
    sub_21675DB74(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_MapperChildPolicy>::MoveChildForBatchNamespaceEdit(uint64_t *a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2, pxrInternal__aapl__pxrReserved__::Sdf_Identity **a3, pxrInternal__aapl__pxrReserved__::SdfPath *a4, int a5)
{
  uint64_t v59 = *MEMORY[0x263EF8340];
  sub_216A6D828(v53);
  sub_216A64ABC(a2, a4, &v52);
  uint64_t v10 = sub_21697F2E0(a3);
  pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v10, &v49);
  uint64_t v11 = v52;
  unint64_t v12 = v49;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v49 + 1);
  sub_21697C414(&v49);
  if (a5 == -2 && v11 == v12) {
    goto LABEL_51;
  }
  uint64_t v13 = sub_2169791E0(a1);
  int v46 = 0;
  uint64_t v47 = 0;
  uint64_t v48 = 0;
  uint64_t v14 = sub_216A5B7B0((uint64_t *)(v13 + 112));
  (*(void (**)(char ****__return_ptr))(*(void *)v14 + 136))(&v54);
  if (sub_2169DC8C8((pxrInternal__aapl__pxrReserved__::VtValue *)&v54))
  {
    if ((v55 & 4) != 0) {
      uint64_t v15 = (char ***)(*(uint64_t (**)(char ****))((v55 & 0xFFFFFFFFFFFFFFF8) + 168))(&v54);
    }
    else {
      uint64_t v15 = v54;
    }
  }
  else
  {
    uint64_t v15 = &v46;
  }
  uint64_t v49 = 0;
  int v50 = 0;
  uint64_t v51 = 0;
  sub_216980EEC(&v49, *v15, v15[1], v15[1] - *v15);
  sub_2168EE084((uint64_t)&v54);
  uint64_t v54 = &v46;
  sub_216981168((void ***)&v54);
  sub_216A64E28(a3, &v45);
  char v16 = sub_21697F2E0(a3);
  pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v16, &v46);
  pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath((pxrInternal__aapl__pxrReserved__::SdfPath *)&v46, &v44);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v46 + 1);
  sub_21697C414(&v46);
  if (a5 == -2 && v44 == *(void *)a2)
  {
    if (v49 == (char *)v50)
    {
      uint64_t v17 = (int *)v49;
    }
    else
    {
      uint64_t v17 = (int *)v49;
      while (*(void *)v17 != v45)
      {
        v17 += 2;
        if (v17 == v50)
        {
          uint64_t v17 = v50;
          break;
        }
      }
    }
    unint64_t v18 = (unint64_t)((char *)v17 - v49) >> 3;
  }
  else if (((char *)v50 - v49) >> 3 >= (unint64_t)a5)
  {
    LODWORD(v18) = a5;
  }
  else
  {
    LODWORD(v18) = ((char *)v50 - v49) >> 3;
  }
  sub_216A6D828((atomic_uint **)&v43);
  uint64_t v19 = sub_2169791E0(a1);
  uint64_t v54 = 0;
  uint64_t v55 = 0;
  uint64_t v56 = 0;
  uint64_t v20 = sub_216A5B7B0((uint64_t *)(v19 + 112));
  (*(void (**)(char *****__return_ptr))(*(void *)v20 + 136))(&v57);
  if (sub_2169DC8C8((pxrInternal__aapl__pxrReserved__::VtValue *)&v57))
  {
    if ((v58 & 4) != 0) {
      uint64_t v21 = (char ****)(*(uint64_t (**)(char *****))((v58 & 0xFFFFFFFFFFFFFFF8) + 168))(&v57);
    }
    else {
      uint64_t v21 = v57;
    }
  }
  else
  {
    uint64_t v21 = &v54;
  }
  int v46 = 0;
  uint64_t v47 = 0;
  uint64_t v48 = 0;
  sub_216980EEC(&v46, *v21, v21[1], v21[1] - *v21);
  char v22 = (void ***)sub_2168EE084((uint64_t)&v57);
  char v57 = &v54;
  sub_216981168(v22);
  uint64_t v23 = (int *)v46;
  if (v46 != (char **)v47)
  {
    while (*(void *)v23 != v45)
    {
      v23 += 2;
      if (v23 == v47)
      {
        uint64_t v23 = v47;
        break;
      }
    }
  }
  pxrInternal__aapl__pxrReserved__::SdfChangeBlock::SdfChangeBlock((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)&v54);
  if (v44 == *(void *)a2)
  {
    uint64_t v24 = (char *)v23 - (char *)v46;
    if (v45 == *(void *)a4
      && (v18 == ((unint64_t)v24 >> 3)
       || ((unint64_t)v24 >> 3) + 1 == v18))
    {
      goto LABEL_48;
    }
    BOOL v26 = (int)v18 > v24 >> 3;
    unint64_t v27 = (int *)v49;
    if (v49 != (char *)v50)
    {
      while (*(void *)v27 != v45)
      {
        v27 += 2;
        if (v27 == v50)
        {
          unint64_t v27 = v50;
          break;
        }
      }
    }
    sub_216A8E5E4((uint64_t)&v57, v27 + 2, v50, v27);
    int v29 = v28;
    LODWORD(v18) = v18 - v26;
    for (long long i = v50; i != v29; sub_216981128((uint64_t)&v51, i))
      i -= 2;
    int v50 = v29;
  }
  else
  {
    sub_216A8E5E4((uint64_t)&v57, v23 + 2, v47, v23);
    uint64_t v32 = v31;
    for (long long j = v47; j != v32; sub_216981128((uint64_t)&v48, j))
      j -= 2;
    uint64_t v47 = v32;
    if (v46 == (char **)v32)
    {
      uint64_t v35 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
      pxrInternal__aapl__pxrReserved__::SdfLayer::EraseField(v35, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v44, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v43);
      uint64_t v36 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
      pxrInternal__aapl__pxrReserved__::SdfLayer::GetObjectAtPath(v36, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v44, &v57);
      uint64_t IsDormant = pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&v57);
      if ((IsDormant & 1) == 0)
      {
        unint64_t Instance = pxrInternal__aapl__pxrReserved__::Sdf_CleanupTracker::GetInstance((pxrInternal__aapl__pxrReserved__::Sdf_CleanupTracker *)IsDormant);
        pxrInternal__aapl__pxrReserved__::Sdf_CleanupTracker::AddSpecIfTracking(Instance, (atomic_uint **)&v57);
      }
      pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec((pxrInternal__aapl__pxrReserved__::SdfSpec *)&v57);
    }
    else
    {
      uint64_t v34 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
      sub_216A6E944(v34, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v44, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v43, (_DWORD **)&v46);
    }
  }
  uint64_t v39 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
  uint64_t v40 = sub_21697F2E0(a3);
  pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v40, &v57);
  pxrInternal__aapl__pxrReserved__::SdfLayer::_MoveSpec(v39, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v57, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v52);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v57 + 1);
  sub_21697C414(&v57);
  sub_216A6F2DC((uint64_t *)&v49, (int *)&v49[8 * (int)v18], (int *)a4);
  int v41 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
  sub_216A6E944(v41, a2, (const pxrInternal__aapl__pxrReserved__::TfToken *)v53, (_DWORD **)&v49);
LABEL_48:
  sub_21697BEF0((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)&v54);
  uint64_t v54 = &v46;
  sub_216981168((void ***)&v54);
  if ((v43 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v43 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v44 + 1);
  sub_21697C414(&v44);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v45 + 1);
  sub_21697C414(&v45);
  int v46 = &v49;
  sub_216981168((void ***)&v46);
LABEL_51:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v52 + 1);
  sub_21697C414(&v52);
  if (((uint64_t)v53[0] & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)((unint64_t)v53[0] & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  return 1;
}

void sub_216A6FD50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, int a12, void **a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, int a19, uint64_t a20,uint64_t a21,void ***a22)
{
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec((pxrInternal__aapl__pxrReserved__::SdfSpec *)(v22 - 88));
  sub_21697BEF0((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)&a22);
  a22 = &a13;
  sub_216981168((void ***)&a22);
  if ((a9 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(a9 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  sub_21697B754(&a10);
  sub_21697B754(&a12);
  a13 = (void **)&a16;
  sub_216981168(&a13);
  sub_21697B754(&a19);
  if ((a20 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(a20 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  _Unwind_Resume(a1);
}

BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_MapperChildPolicy>::CanMoveChildForBatchNamespaceEdit(uint64_t *a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2, pxrInternal__aapl__pxrReserved__::Sdf_Identity **a3, pxrInternal__aapl__pxrReserved__::SdfPath *a4, int a5, uint64_t a6)
{
  sub_216A6D828((atomic_uint **)&v42);
  unint64_t v12 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
  if ((pxrInternal__aapl__pxrReserved__::SdfLayer::PermissionToEdit(v12) & 1) == 0)
  {
    if (a6)
    {
      uint64_t v13 = "Layer is not editable";
      goto LABEL_13;
    }
LABEL_14:
    BOOL v18 = 0;
    goto LABEL_15;
  }
  if (pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant(a3))
  {
    if (a6)
    {
      uint64_t v13 = "Object does not exist";
LABEL_13:
      MEMORY[0x21D4477E0](a6, v13);
      goto LABEL_14;
    }
    goto LABEL_14;
  }
  uint64_t v14 = (uint64_t **)sub_21697F2E0(a3);
  pxrInternal__aapl__pxrReserved__::SdfSpec::GetLayer(v14, &v38);
  uint64_t v15 = sub_216851B24((uint64_t)&v38);
  uint64_t v16 = sub_216851B24((uint64_t)a1);
  uint64_t v17 = v39;
  if (v39 && atomic_fetch_add_explicit((atomic_uint *volatile)(v39 + 8), 0xFFFFFFFF, memory_order_release) == 1) {
    (*(void (**)(uint64_t))(*(void *)v17 + 8))(v17);
  }
  if (v15 != v16)
  {
    if (a6)
    {
      uint64_t v13 = "Cannot reparent to another layer";
      goto LABEL_13;
    }
    goto LABEL_14;
  }
  sub_216A64ABC(a2, a4, &v40);
  if (!pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator BOOL(&v40))
  {
    if (!a6)
    {
LABEL_24:
      BOOL v18 = 0;
      goto LABEL_25;
    }
    uint64_t v23 = "Invalid name";
LABEL_23:
    MEMORY[0x21D4477E0](a6, v23);
    goto LABEL_24;
  }
  uint64_t v20 = sub_21697F2E0(a3);
  pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v20, &v35);
  pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath((pxrInternal__aapl__pxrReserved__::SdfPath *)&v35, &v38);
  uint64_t v21 = v38;
  uint64_t v22 = *(void *)a2;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v38 + 1);
  sub_21697C414(&v38);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v35 + 1);
  sub_21697C414(&v35);
  if (v21 != v22)
  {
    uint64_t v24 = sub_21697F2E0(a3);
    pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v24, &v38);
    BOOL HasPrefix = pxrInternal__aapl__pxrReserved__::SdfPath::HasPrefix((pxrInternal__aapl__pxrReserved__::SdfPath *)&v40, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v38);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v38 + 1);
    sub_21697C414(&v38);
    if (!HasPrefix)
    {
      uint64_t v26 = sub_2169791E0(a1);
      uint64_t v35 = 0;
      uint64_t v36 = 0;
      uint64_t v37 = 0;
      sub_216A6E61C(v26, (_DWORD **)&v35, &v38);
      v31[0] = (void **)&v35;
      sub_216981168(v31);
      unint64_t v27 = (unint64_t)(v39 - v38) >> 3;
      if (a5 != -1) {
        LODWORD(v27) = a5;
      }
      if (v27 == -2 || (int)v27 <= (unint64_t)((v39 - v38) >> 3))
      {
        sub_216A64E28(a3, &v34);
        int v28 = sub_21697F2E0(a3);
        pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v28, &v35);
        pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath((pxrInternal__aapl__pxrReserved__::SdfPath *)&v35, &v33);
        sub_21697B754(&v35);
        sub_216A6D828((atomic_uint **)&v32);
        uint64_t v29 = sub_2169791E0(a1);
        memset(v31, 0, sizeof(v31));
        sub_216A6E61C(v29, (_DWORD **)v31, &v35);
        unint64_t v43 = v31;
        sub_216981168((void ***)&v43);
        uint64_t v30 = v35;
        if (v35 != v36)
        {
          while (*v30 != v34)
          {
            if (++v30 == v36)
            {
              uint64_t v30 = v36;
              break;
            }
          }
        }
        BOOL v18 = v30 != v36;
        if (a6 && v30 == v36) {
          MEMORY[0x21D4477E0](a6, "Coding error: Object is not in its parent's children");
        }
        v31[0] = (void **)&v35;
        sub_216981168(v31);
        if ((v32 & 7) != 0) {
          atomic_fetch_add_explicit((atomic_uint *volatile)(v32 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
        }
        sub_21697B754(&v33);
        sub_21697B754(&v34);
      }
      else
      {
        if (a6) {
          MEMORY[0x21D4477E0](a6, "Invalid index");
        }
        BOOL v18 = 0;
      }
      uint64_t v35 = &v38;
      sub_216981168((void ***)&v35);
      goto LABEL_25;
    }
    if (!a6) {
      goto LABEL_24;
    }
    uint64_t v23 = "Cannot reparent object under itself";
    goto LABEL_23;
  }
  BOOL v18 = 1;
LABEL_25:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v41);
  sub_21697C414(&v40);
LABEL_15:
  if ((v42 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v42 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  return v18;
}

void sub_216A7026C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void **a16, uint64_t a17, uint64_t a18, char a19)
{
  a16 = (void **)&a19;
  sub_216981168(&a16);
  sub_21697B754((_DWORD *)(v19 - 88));
  uint64_t v21 = *(void *)(v19 - 80);
  if ((v21 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v21 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  _Unwind_Resume(a1);
}

BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_MapperChildPolicy>::CanRemoveChildForBatchNamespaceEdit(uint64_t *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  sub_216A6D828((atomic_uint **)&v19);
  uint64_t v7 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
  if (pxrInternal__aapl__pxrReserved__::SdfLayer::PermissionToEdit(v7))
  {
    uint64_t v8 = sub_2169791E0(a1);
    memset(v15, 0, sizeof(v15));
    uint64_t v9 = sub_216A5B7B0((uint64_t *)(v8 + 112));
    (*(void (**)(void ****__return_ptr))(*(void *)v9 + 136))(&v20);
    if (sub_2169DC8C8((pxrInternal__aapl__pxrReserved__::VtValue *)&v20))
    {
      if ((v21 & 4) != 0) {
        uint64_t v10 = (void ***)(*(uint64_t (**)(void ****))((v21 & 0xFFFFFFFFFFFFFFF8) + 168))(&v20);
      }
      else {
        uint64_t v10 = v20;
      }
    }
    else
    {
      uint64_t v10 = v15;
    }
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    sub_216980EEC(&v16, *v10, v10[1], v10[1] - *v10);
    unint64_t v12 = (void ***)sub_2168EE084((uint64_t)&v20);
    uint64_t v20 = v15;
    sub_216981168(v12);
    uint64_t v13 = v16;
    if (v16 != v17)
    {
      while (*v13 != *a3)
      {
        if (++v13 == v17)
        {
          uint64_t v13 = v17;
          break;
        }
      }
    }
    BOOL v11 = v13 != v17;
    if (a4 && v13 == v17) {
      MEMORY[0x21D4477E0](a4, "Object does not exist");
    }
    v15[0] = (void **)&v16;
    sub_216981168(v15);
  }
  else
  {
    if (a4) {
      MEMORY[0x21D4477E0](a4, "Layer is not editable");
    }
    BOOL v11 = 0;
  }
  if ((v19 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v19 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  return v11;
}

void sub_216A70590(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  a10 = (void **)&a13;
  sub_216981168(&a10);
  if ((a16 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(a16 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_MapperArgChildPolicy>::CreateSpec(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  int v1 = (uint64_t *)(a1 + 8);
  if (v2) {
    sub_216850B68(v1);
  }

  pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_MapperArgChildPolicy>::CreateSpec();
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_MapperArgChildPolicy>::CreateSpec(pxrInternal__aapl__pxrReserved__::SdfLayer *a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    pxrInternal__aapl__pxrReserved__::SdfChangeBlock::SdfChangeBlock((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)v17);
    uint64_t Spec = pxrInternal__aapl__pxrReserved__::SdfLayer::_CreateSpec(a1, a2, a3, a4);
    if (Spec)
    {
      pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath(a2, &v18);
      sub_216A708D0((atomic_uint **)__p);
      uint64_t v9 = *(void *)pxrInternal__aapl__pxrReserved__::SdfPath::GetNameToken(a2);
      if ((v9 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v9 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed);
      }
      pxrInternal__aapl__pxrReserved__::SdfLayer::_PrimPushChild<pxrInternal__aapl__pxrReserved__::TfToken>();
    }
    uint64_t v18 = "sdf/childrenUtils.cpp";
    unint64_t v19 = "CreateSpec";
    uint64_t v20 = 101;
    uint64_t v21 = "static BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_MapperAr"
          "gChildPolicy>::CreateSpec(SdfLayer *, const SdfPath &, SdfSpecType, BOOL) [ChildPolicy = pxrInternal__aapl__px"
          "rReserved__::Sdf_MapperArgChildPolicy]";
    char v22 = 0;
    pxrInternal__aapl__pxrReserved__::TfEnum::GetName((uint64_t)&unk_26C755200, a3, (uint64_t)__p);
    int v10 = v16;
    BOOL v11 = (void **)__p[0];
    Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText(a2);
    uint64_t v13 = __p;
    if (v10 < 0) {
      uint64_t v13 = v11;
    }
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v18, 1, (pxrInternal__aapl__pxrReserved__ *)"Failed to create spec of type '%s' at <%s>", (const char *)v13, Text);
    if (v16 < 0) {
      operator delete(__p[0]);
    }
    sub_21697BEF0((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)v17);
  }
  else
  {
    uint64_t v18 = "sdf/childrenUtils.cpp";
    unint64_t v19 = "CreateSpec";
    uint64_t v20 = 90;
    uint64_t v21 = "static BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_MapperAr"
          "gChildPolicy>::CreateSpec(SdfLayer *, const SdfPath &, SdfSpecType, BOOL) [ChildPolicy = pxrInternal__aapl__px"
          "rReserved__::Sdf_MapperArgChildPolicy]";
    char v22 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v18, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid object type");
    return 0;
  }
  return Spec;
}

void sub_216A7084C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18, int a19, __int16 a20,char a21,char a22)
{
}

pxrInternal__aapl__pxrReserved__::SdfChildrenKeys_StaticTokenType *sub_216A708D0@<X0>(atomic_uint **a1@<X8>)
{
  uint64_t result = (pxrInternal__aapl__pxrReserved__::SdfChildrenKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfChildrenKeys);
  if (!result) {
    uint64_t result = sub_21697E16C(&pxrInternal__aapl__pxrReserved__::SdfChildrenKeys);
  }
  uint64_t v3 = (atomic_uint *)*((void *)result + 2);
  *a1 = v3;
  if ((v3 & 7) != 0)
  {
    char v4 = (atomic_uint *)((unint64_t)v3 & 0xFFFFFFFFFFFFFFF8);
    if ((atomic_fetch_add_explicit(v4, 2u, memory_order_relaxed) & 1) == 0) {
      *a1 = v4;
    }
  }
  return result;
}

BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_MapperArgChildPolicy>::IsValidName(pxrInternal__aapl__pxrReserved__::TfToken *a1)
{
  if ((*(void *)a1 & 0xFFFFFFFFFFFFFFF8) != 0) {
    EmptyString = (uint64_t *)((*(void *)a1 & 0xFFFFFFFFFFFFFFF8) + 16);
  }
  else {
    EmptyString = pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(a1);
  }

  return pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_MapperArgChildPolicy>::IsValidName((uint64_t)EmptyString);
}

BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_MapperArgChildPolicy>::IsValidName(uint64_t a1)
{
  pxrInternal__aapl__pxrReserved__::SdfSchemaBase::IsValidIdentifier(a1, (uint64_t)&__p);
  int v1 = v5;
  if (v5 && v4 < 0) {
    operator delete(__p);
  }
  return v1 == 0;
}

double pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_MapperArgChildPolicy>::CanRename@<D0>(uint64_t **a1@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::SdfSpec::GetLayer(a1, (uint64_t *)__p);
  uint64_t v3 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0((uint64_t *)__p);
  char v4 = pxrInternal__aapl__pxrReserved__::SdfLayer::PermissionToEdit(v3);
  unsigned __int8 v5 = __p[1];
  if (__p[1] && atomic_fetch_add_explicit((atomic_uint *volatile)__p[1] + 2, 0xFFFFFFFF, memory_order_release) == 1) {
    (*(void (**)(void *))(*(void *)v5 + 8))(v5);
  }
  if (v4) {
    pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_MapperArgChildPolicy>::IsValidName();
  }
  sub_216779094(__p, "Layer is not editable");
  double result = *(double *)__p;
  *(_OWORD *)a2 = *(_OWORD *)__p;
  *(void *)(a2 + 16) = v8;
  *(unsigned char *)(a2 + 24) = 1;
  return result;
}

void sub_216A70C50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
}

_DWORD *sub_216A70D04@<X0>(pxrInternal__aapl__pxrReserved__::SdfPath *a1@<X0>, const pxrInternal__aapl__pxrReserved__::TfToken *a2@<X1>, _DWORD *a3@<X8>)
{
  pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath(a1, &v6);
  pxrInternal__aapl__pxrReserved__::SdfPath::AppendMapperArg((pxrInternal__aapl__pxrReserved__::SdfPath *)&v6, a2, a3);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  return sub_21697C414(&v6);
}

void sub_216A70D68(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_MapperArgChildPolicy>::Rename(pxrInternal__aapl__pxrReserved__::SdfSpec *a1)
{
  uint64_t v2 = *MEMORY[0x263EF8340];
  pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath(a1, v1);
  pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_MapperArgChildPolicy>::IsValidName();
}

BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_MapperArgChildPolicy>::SetChildren(uint64_t *a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2, long long *a3)
{
  uint64_t v113 = *MEMORY[0x263EF8340];
  sub_216A708D0((atomic_uint **)&v106);
  long long v104 = 0uLL;
  unint64_t v105 = 0;
  __p[1] = 0;
  uint64_t v98 = 0;
  __p[0] = &__p[1];
  for (long long i = *a3; (void)i != *((void *)&i + 1); sub_216A8E4E0(&i))
  {
    uint64_t v8 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)sub_216A8E460((uint64_t *)&i, v6, v7);
    if (pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant(v8)) {
      goto LABEL_13;
    }
    BOOL v11 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)sub_216A8E460((uint64_t *)&i, v9, v10);
    sub_216A65908(v11, (uint64_t)&v107);
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken(&v101);
    if (SHIBYTE(v108) < 0) {
      operator delete((void *)v107);
    }
    sub_216A8E144((uint64_t **)__p, (uint64_t *)&v101, (uint64_t *)&v101);
    if (v9) {
      goto LABEL_9;
    }
    unint64_t v12 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)sub_216A8E460((uint64_t *)&i, v9, v10);
    uint64_t v13 = sub_21697F2E0(v12);
    pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v13, &j);
    pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath((pxrInternal__aapl__pxrReserved__::SdfPath *)&j, &v107);
    uint64_t v14 = v107;
    uint64_t v15 = *(void *)a2;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v107 + 1);
    sub_21697C414(&v107);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&j + 1);
    sub_21697C414(&j);
    if (v14 != v15) {
LABEL_9:
    }
      char v16 = 1;
    else {
      char v16 = 0;
    }
    if ((v101 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v101 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    if (v16)
    {
LABEL_13:
      uint64_t v17 = (atomic_uint **)sub_216A8E460((uint64_t *)&i, v9, v10);
      uint64_t v18 = *((void *)&v104 + 1);
      if (*((void *)&v104 + 1) >= v105)
      {
        uint64_t v20 = sub_21697CF74((atomic_uint ***)&v104, v17);
      }
      else
      {
        unint64_t v19 = *v17;
        **((void **)&v104 + 1) = *v17;
        if (v19) {
          atomic_fetch_add(v19, 1u);
        }
        uint64_t v20 = (char *)(v18 + 8);
      }
      *((void *)&v104 + 1) = v20;
    }
  }
  sub_2168CB05C((uint64_t)__p, (void *)__p[1]);
  uint64_t v21 = sub_2169791E0(a1);
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v98 = 0;
  uint64_t v22 = sub_216A5B7B0((uint64_t *)(v21 + 112));
  (*(void (**)(long long *__return_ptr))(*(void *)v22 + 136))(&i);
  if (sub_21697BFBC((pxrInternal__aapl__pxrReserved__::VtValue *)&i))
  {
    if ((BYTE8(i) & 4) != 0) {
      uint64_t v23 = (uint64_t **)(*(uint64_t (**)(long long *))((*((void *)&i + 1) & 0xFFFFFFFFFFFFFFF8) + 168))(&i);
    }
    else {
      uint64_t v23 = (uint64_t **)i;
    }
  }
  else
  {
    uint64_t v23 = (uint64_t **)__p;
  }
  long long v107 = 0uLL;
  uint64_t v108 = 0;
  sub_21698FA28(&v107, *v23, v23[1], v23[1] - *v23);
  uint64_t v24 = (void ***)sub_2168EE084((uint64_t)&i);
  *(void *)&long long i = __p;
  sub_216889A04(v24);
  *((void *)&i + 1) = 0;
  uint64_t v110 = 0;
  *(void *)&long long i = (char *)&i + 8;
  unint64_t v101 = 0;
  uint64_t v102 = 0;
  unint64_t v103 = 0;
  sub_216973388((char **)&v101, (uint64_t)(*((void *)&v104 + 1) - v104) >> 3);
  for (long long j = v104; (void)j != *((void *)&j + 1); sub_216A6E840(&j))
  {
    unint64_t v27 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)sub_216A6E7C0((uint64_t *)&j, v25, v26);
    if (pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant(v27))
    {
      __p[0] = "sdf/childrenUtils.cpp";
      __p[1] = "SetChildren";
      uint64_t v98 = 181;
      uint64_t v99 = "static BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_Mapper"
            "ArgChildPolicy>::SetChildren(const SdfLayerHandle &, const SdfPath &, const std::vector<typename ChildPolicy"
            "::ValueType> &) [ChildPolicy = pxrInternal__aapl__pxrReserved__::Sdf_MapperArgChildPolicy]";
      char v100 = 0;
      pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)__p, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid child");
      goto LABEL_92;
    }
    uint64_t v30 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)sub_216A6E7C0((uint64_t *)&j, v28, v29);
    sub_216A65908(v30, (uint64_t)__p);
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken(&v86);
    if (SHIBYTE(v98) < 0) {
      operator delete(__p[0]);
    }
    uint64_t v31 = v102;
    if ((unint64_t)v102 >= v103)
    {
      int v33 = sub_216973984((char **)&v101, (uint64_t *)&v86);
    }
    else
    {
      unint64_t v32 = v86;
      *uint64_t v102 = v86;
      if ((v32 & 7) != 0
        && (atomic_fetch_add_explicit((atomic_uint *volatile)(v32 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
      {
        *v31 &= 0xFFFFFFFFFFFFFFF8;
      }
      int v33 = (char *)(v31 + 1);
    }
    uint64_t v102 = (uint64_t *)v33;
    sub_216A8E144((uint64_t **)&i, (uint64_t *)&v86, (uint64_t *)&v86);
    if ((v34 & 1) == 0)
    {
      __p[0] = "sdf/childrenUtils.cpp";
      __p[1] = "SetChildren";
      uint64_t v98 = 188;
      uint64_t v99 = "static BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_Mapper"
            "ArgChildPolicy>::SetChildren(const SdfLayerHandle &, const SdfPath &, const std::vector<typename ChildPolicy"
            "::ValueType> &) [ChildPolicy = pxrInternal__aapl__pxrReserved__::Sdf_MapperArgChildPolicy]";
      char v100 = 0;
      pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)__p, 1, (pxrInternal__aapl__pxrReserved__ *)"Duplicate child");
LABEL_90:
      if ((v86 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v86 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
LABEL_92:
      BOOL v59 = 0;
      goto LABEL_97;
    }
    uint64_t v36 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)sub_216A6E7C0((uint64_t *)&j, v34, v35);
    uint64_t v37 = (uint64_t **)sub_21697F2E0(v36);
    pxrInternal__aapl__pxrReserved__::SdfSpec::GetLayer(v37, (uint64_t *)__p);
    uint64_t v38 = sub_216851B24((uint64_t)__p);
    uint64_t v41 = sub_216851B24((uint64_t)a1);
    unint64_t v42 = __p[1];
    if (__p[1] && atomic_fetch_add_explicit((atomic_uint *volatile)__p[1] + 2, 0xFFFFFFFF, memory_order_release) == 1) {
      (*(void (**)(void *))(*(void *)v42 + 8))(v42);
    }
    if (v38 != v41)
    {
      __p[0] = "sdf/childrenUtils.cpp";
      __p[1] = "SetChildren";
      uint64_t v98 = 193;
      uint64_t v99 = "static BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_Mapper"
            "ArgChildPolicy>::SetChildren(const SdfLayerHandle &, const SdfPath &, const std::vector<typename ChildPolicy"
            "::ValueType> &) [ChildPolicy = pxrInternal__aapl__pxrReserved__::Sdf_MapperArgChildPolicy]";
      char v100 = 0;
      pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)__p, 1, (pxrInternal__aapl__pxrReserved__ *)"Cannot reparent to another layer");
      goto LABEL_90;
    }
    unint64_t v43 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)sub_216A6E7C0((uint64_t *)&j, v39, v40);
    uint64_t v44 = sub_21697F2E0(v43);
    pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v44, &v111);
    pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath((pxrInternal__aapl__pxrReserved__::SdfPath *)&v111, __p);
    if (*(void **)a2 == __p[0])
    {
      BOOL HasPrefix = 0;
    }
    else
    {
      uint64_t v48 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)sub_216A6E7C0((uint64_t *)&j, v45, v46);
      uint64_t v49 = sub_21697F2E0(v48);
      pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v49, &k);
      BOOL HasPrefix = pxrInternal__aapl__pxrReserved__::SdfPath::HasPrefix(a2, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&k);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&k + 1);
      sub_21697C414(&k);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)__p + 1);
    sub_21697C414(__p);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v111 + 1);
    sub_21697C414(&v111);
    if (HasPrefix)
    {
      __p[0] = "sdf/childrenUtils.cpp";
      __p[1] = "SetChildren";
      uint64_t v98 = 203;
      uint64_t v99 = "static BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_Mapper"
            "ArgChildPolicy>::SetChildren(const SdfLayerHandle &, const SdfPath &, const std::vector<typename ChildPolicy"
            "::ValueType> &) [ChildPolicy = pxrInternal__aapl__pxrReserved__::Sdf_MapperArgChildPolicy]";
      char v100 = 0;
      pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)__p, 1, (pxrInternal__aapl__pxrReserved__ *)"Cannot reparent child under itself");
      goto LABEL_90;
    }
    if ((v86 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v86 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  pxrInternal__aapl__pxrReserved__::SdfChangeBlock::SdfChangeBlock((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)v96);
  *(_OWORD *)long long __p = v107;
  while (__p[0] != __p[1])
  {
    uint64_t v52 = (uint64_t *)sub_2169CEBC8((uint64_t *)__p, v50, v51);
    if ((void *)((char *)&i + 8) == sub_216A8E1C4((uint64_t)&i, v52))
    {
      uint64_t v55 = (const pxrInternal__aapl__pxrReserved__::TfToken *)sub_2169CEBC8((uint64_t *)__p, v53, v54);
      pxrInternal__aapl__pxrReserved__::SdfPath::AppendMapperArg(a2, v55, &j);
      uint64_t v56 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
      pxrInternal__aapl__pxrReserved__::SdfLayer::_DeleteSpec(v56, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&j);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&j + 1);
      sub_21697C414(&j);
    }
    sub_2169CECC4(__p);
  }
  sub_216A8E254((uint64_t)&j, (uint64_t *)v107, *((uint64_t **)&v107 + 1));
  for (long long k = v104; ; sub_216A6E840(&k))
  {
    BOOL v59 = k == *((void *)&k + 1);
    if ((void)k == *((void *)&k + 1)) {
      break;
    }
    BOOL v60 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)sub_216A6E7C0((uint64_t *)&k, v57, v58);
    sub_216A65908(v60, (uint64_t)__p);
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken(&v93);
    if (SHIBYTE(v98) < 0) {
      operator delete(__p[0]);
    }
    pxrInternal__aapl__pxrReserved__::SdfPath::AppendMapperArg(a2, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v93, &v91);
    uint64_t v63 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)sub_216A6E7C0((uint64_t *)&k, v61, v62);
    uint64_t v64 = sub_21697F2E0(v63);
    pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v64, __p);
    pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath((pxrInternal__aapl__pxrReserved__::SdfPath *)__p, &v90);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)__p + 1);
    sub_21697C414(__p);
    if (v90 == *(void *)a2)
    {
      int v65 = 10;
    }
    else
    {
      if ((void *)((char *)&j + 8) != sub_216A8E1C4((uint64_t)&j, &v93))
      {
        int v66 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
        pxrInternal__aapl__pxrReserved__::SdfLayer::_DeleteSpec(v66, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v91);
      }
      sub_216A708D0((atomic_uint **)&v89);
      uint64_t v67 = sub_2169791E0(a1);
      __p[0] = 0;
      __p[1] = 0;
      uint64_t v98 = 0;
      uint64_t v68 = sub_216A5B7B0((uint64_t *)(v67 + 112));
      (*(void (**)(void ***__return_ptr))(*(void *)v68 + 136))(&v111);
      if (sub_21697BFBC((pxrInternal__aapl__pxrReserved__::VtValue *)&v111))
      {
        if ((v112 & 4) != 0) {
          uint64_t v69 = (uint64_t **)(*(uint64_t (**)(void ***))((v112 & 0xFFFFFFFFFFFFFFF8) + 168))(&v111);
        }
        else {
          uint64_t v69 = (uint64_t **)v111;
        }
      }
      else
      {
        uint64_t v69 = (uint64_t **)__p;
      }
      unint64_t v86 = 0;
      uint64_t v87 = 0;
      uint64_t v88 = 0;
      sub_21698FA28(&v86, *v69, v69[1], v69[1] - *v69);
      size_t v70 = (void ***)sub_2168EE084((uint64_t)&v111);
      uint64_t v111 = __p;
      sub_216889A04(v70);
      uint64_t v71 = (uint64_t *)v86;
      if ((uint64_t *)v86 != v87)
      {
        while ((*v71 & 0xFFFFFFFFFFFFFFF8) != (v93 & 0xFFFFFFFFFFFFFFF8))
        {
          if (++v71 == v87)
          {
            uint64_t v71 = v87;
            break;
          }
        }
      }
      if (v71 == v87)
      {
        __p[0] = "sdf/childrenUtils.cpp";
        __p[1] = "SetChildren";
        uint64_t v98 = 254;
        uint64_t v99 = "static BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_Mapp"
              "erArgChildPolicy>::SetChildren(const SdfLayerHandle &, const SdfPath &, const std::vector<typename ChildPo"
              "licy::ValueType> &) [ChildPolicy = pxrInternal__aapl__pxrReserved__::Sdf_MapperArgChildPolicy]";
        char v100 = 0;
        pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)__p, 1, (pxrInternal__aapl__pxrReserved__ *)"An object was not in its parent's list of children");
        int v65 = 1;
      }
      else
      {
        sub_216A8E2D8(v71 + 1, v87, v71);
        for (long long m = v87; m != v72; --m)
        {
          uint64_t v75 = *(m - 1);
          uint64_t v74 = v75;
          if ((v75 & 7) != 0) {
            atomic_fetch_add_explicit((atomic_uint *volatile)(v74 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
          }
        }
        uint64_t v87 = v72;
        if ((uint64_t *)v86 == v72)
        {
          uint64_t v77 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
          pxrInternal__aapl__pxrReserved__::SdfLayer::EraseField(v77, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v90, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v89);
        }
        else
        {
          uint64_t v76 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
          sub_216A6A718(v76, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v90, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v89, (uint64_t **)&v86);
        }
        long long v78 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
        uint64_t v81 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)sub_216A6E7C0((uint64_t *)&k, v79, v80);
        unsigned __int8 v82 = sub_21697F2E0(v81);
        pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v82, __p);
        pxrInternal__aapl__pxrReserved__::SdfLayer::_MoveSpec(v78, (const pxrInternal__aapl__pxrReserved__::SdfPath *)__p, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v91);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)__p + 1);
        sub_21697C414(__p);
        int v65 = 0;
      }
      __p[0] = &v86;
      sub_216889A04((void ***)__p);
      if ((v89 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v89 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v90 + 1);
    sub_21697C414(&v90);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v92);
    sub_21697C414(&v91);
    if ((v93 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v93 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    if (v65 != 10 && v65) {
      goto LABEL_96;
    }
  }
  if ((uint64_t *)v101 == v102)
  {
    uint64_t v84 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
    pxrInternal__aapl__pxrReserved__::SdfLayer::EraseField(v84, a2, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v106);
  }
  else
  {
    uint64_t v83 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
    sub_216A6A718(v83, a2, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v106, (uint64_t **)&v101);
  }
LABEL_96:
  sub_2168CB05C((uint64_t)&j, *((void **)&j + 1));
  sub_21697BEF0((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)v96);
LABEL_97:
  __p[0] = &v101;
  sub_216889A04((void ***)__p);
  sub_2168CB05C((uint64_t)&i, *((void **)&i + 1));
  __p[0] = &v107;
  sub_216889A04((void ***)__p);
  __p[0] = &v104;
  sub_21697CA24((void ***)__p);
  if ((v106 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v106 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  return v59;
}

void sub_216A71D44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, char a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,char a25,uint64_t *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  if ((a10 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(a10 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  long long __p = &a34;
  sub_216889A04((void ***)&__p);
  sub_2168CB05C(v37 - 144, *(void **)(v37 - 136));
  long long __p = (uint64_t *)(v37 - 176);
  sub_216889A04((void ***)&__p);
  long long __p = (uint64_t *)&a37;
  sub_21697CA24((void ***)&__p);
  uint64_t v39 = *(void *)(v37 - 184);
  if ((v39 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v39 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  _Unwind_Resume(a1);
}

BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_MapperArgChildPolicy>::InsertChild(uint64_t *a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2, pxrInternal__aapl__pxrReserved__::Sdf_Identity **a3, int a4)
{
  uint64_t v64 = *MEMORY[0x263EF8340];
  sub_216A708D0(v58);
  if (pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant(a3))
  {
    long long __p = "sdf/childrenUtils.cpp";
    uint64_t v54 = "InsertChild";
    uint64_t v55 = 290;
    uint64_t v56 = "static BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_MapperAr"
          "gChildPolicy>::InsertChild(const SdfLayerHandle &, const SdfPath &, const typename ChildPolicy::ValueType &, i"
          "nt) [ChildPolicy = pxrInternal__aapl__pxrReserved__::Sdf_MapperArgChildPolicy]";
    char v57 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&__p, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid child");
LABEL_8:
    BOOL v12 = 0;
    goto LABEL_9;
  }
  uint64_t v8 = (uint64_t **)sub_21697F2E0(a3);
  pxrInternal__aapl__pxrReserved__::SdfSpec::GetLayer(v8, (uint64_t *)&__p);
  uint64_t v9 = sub_216851B24((uint64_t)&__p);
  uint64_t v10 = sub_216851B24((uint64_t)a1);
  BOOL v11 = v54;
  if (v54 && atomic_fetch_add_explicit((atomic_uint *volatile)v54 + 2, 0xFFFFFFFF, memory_order_release) == 1) {
    (*(void (**)(const char *))(*(void *)v11 + 8))(v11);
  }
  if (v9 != v10)
  {
    long long __p = "sdf/childrenUtils.cpp";
    uint64_t v54 = "InsertChild";
    uint64_t v55 = 295;
    uint64_t v56 = "static BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_MapperAr"
          "gChildPolicy>::InsertChild(const SdfLayerHandle &, const SdfPath &, const typename ChildPolicy::ValueType &, i"
          "nt) [ChildPolicy = pxrInternal__aapl__pxrReserved__::Sdf_MapperArgChildPolicy]";
    char v57 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&__p, 1, (pxrInternal__aapl__pxrReserved__ *)"Cannot reparent to another layer");
    goto LABEL_8;
  }
  uint64_t v14 = sub_21697F2E0(a3);
  pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v14, &v47);
  pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath((pxrInternal__aapl__pxrReserved__::SdfPath *)&v47, &__p);
  uint64_t v15 = __p;
  char v16 = *(void **)a2;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&__p + 1);
  sub_21697C414(&__p);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v47 + 1);
  sub_21697C414(&v47);
  if (v15 == v16)
  {
    BOOL v12 = 1;
  }
  else
  {
    sub_216A65908(a3, (uint64_t)&__p);
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken(&v52);
    if (SHIBYTE(v55) < 0) {
      operator delete(__p);
    }
    pxrInternal__aapl__pxrReserved__::SdfPath::AppendMapperArg(a2, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v52, &v50);
    uint64_t v17 = sub_21697F2E0(a3);
    pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v17, &__p);
    BOOL HasPrefix = pxrInternal__aapl__pxrReserved__::SdfPath::HasPrefix((pxrInternal__aapl__pxrReserved__::SdfPath *)&v50, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&__p);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&__p + 1);
    sub_21697C414(&__p);
    if (HasPrefix)
    {
      long long __p = "sdf/childrenUtils.cpp";
      uint64_t v54 = "InsertChild";
      uint64_t v55 = 312;
      uint64_t v56 = "static BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_Mapper"
            "ArgChildPolicy>::InsertChild(const SdfLayerHandle &, const SdfPath &, const typename ChildPolicy::ValueType "
            "&, int) [ChildPolicy = pxrInternal__aapl__pxrReserved__::Sdf_MapperArgChildPolicy]";
      char v57 = 0;
      pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&__p, 1, (pxrInternal__aapl__pxrReserved__ *)"Cannot reparent child under itself");
      BOOL v12 = 0;
    }
    else
    {
      uint64_t v19 = sub_2169791E0(a1);
      long long __p = 0;
      uint64_t v54 = 0;
      uint64_t v55 = 0;
      uint64_t v20 = sub_216A5B7B0((uint64_t *)(v19 + 112));
      (*(void (**)(void ***__return_ptr))(*(void *)v20 + 136))(&v59);
      if (sub_21697BFBC((pxrInternal__aapl__pxrReserved__::VtValue *)&v59))
      {
        if ((v60 & 4) != 0) {
          p_p = (void **)(*(uint64_t (**)(void ***))(((unint64_t)v60 & 0xFFFFFFFFFFFFFFF8) + 168))(&v59);
        }
        else {
          p_p = v59;
        }
      }
      else
      {
        p_p = &__p;
      }
      uint64_t v47 = 0;
      uint64_t v48 = 0;
      uint64_t v49 = 0;
      sub_21698FA28(&v47, (uint64_t *)*p_p, (uint64_t *)p_p[1], ((unsigned char *)p_p[1] - (unsigned char *)*p_p) >> 3);
      uint64_t v22 = (void ***)sub_2168EE084((uint64_t)&v59);
      BOOL v59 = &__p;
      sub_216889A04(v22);
      unint64_t v25 = (unint64_t)((char *)v48 - (char *)v47) >> 3;
      if (a4 != -1) {
        LODWORD(v25) = a4;
      }
      uint64_t v26 = (int)v25;
      if ((int)v25 <= (unint64_t)(((char *)v48 - (char *)v47) >> 3))
      {
        BOOL v59 = v47;
        BOOL v60 = (void **)v48;
        while (v59 != v60)
        {
          uint64_t v28 = (void *)sub_2169CEBC8((uint64_t *)&v59, v23, v24);
          if ((*v28 & 0xFFFFFFFFFFFFFFF8) == (v52 & 0xFFFFFFFFFFFFFFF8))
          {
            long long __p = "sdf/childrenUtils.cpp";
            uint64_t v54 = "InsertChild";
            uint64_t v55 = 334;
            uint64_t v56 = "static BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_"
                  "MapperArgChildPolicy>::InsertChild(const SdfLayerHandle &, const SdfPath &, const typename ChildPolicy"
                  "::ValueType &, int) [ChildPolicy = pxrInternal__aapl__pxrReserved__::Sdf_MapperArgChildPolicy]";
            char v57 = 0;
            Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v50);
            pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&__p, 1, (pxrInternal__aapl__pxrReserved__ *)"Attempt to insert duplicate spec %s", Text);
            goto LABEL_34;
          }
          sub_2169CECC4(&v59);
        }
        uint64_t v29 = sub_21697F2E0(a3);
        pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v29, &__p);
        pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath((pxrInternal__aapl__pxrReserved__::SdfPath *)&__p, &v45);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&__p + 1);
        sub_21697C414(&__p);
        sub_216A708D0((atomic_uint **)&v44);
        uint64_t v30 = sub_2169791E0(a1);
        long long __p = 0;
        uint64_t v54 = 0;
        uint64_t v55 = 0;
        uint64_t v31 = sub_216A5B7B0((uint64_t *)(v30 + 112));
        (*(void (**)(atomic_uint **__return_ptr))(*(void *)v31 + 136))(&v62);
        if (sub_21697BFBC((pxrInternal__aapl__pxrReserved__::VtValue *)&v62))
        {
          if ((v63 & 4) != 0) {
            unint64_t v32 = (uint64_t **)(*(uint64_t (**)(atomic_uint **))((v63 & 0xFFFFFFFFFFFFFFF8) + 168))(&v62);
          }
          else {
            unint64_t v32 = (uint64_t **)v62;
          }
        }
        else
        {
          unint64_t v32 = (uint64_t **)&__p;
        }
        BOOL v59 = 0;
        BOOL v60 = 0;
        uint64_t v61 = 0;
        sub_21698FA28(&v59, *v32, v32[1], v32[1] - *v32);
        uint64_t v34 = (void ***)sub_2168EE084((uint64_t)&v62);
        uint64_t v62 = (atomic_uint *)&__p;
        sub_216889A04(v34);
        uint64_t v35 = v59;
        if (v59 != v60)
        {
          while (((unint64_t)*v35 & 0xFFFFFFFFFFFFFFF8) != (v52 & 0xFFFFFFFFFFFFFFF8))
          {
            if (++v35 == v60)
            {
              uint64_t v35 = v60;
              break;
            }
          }
        }
        BOOL v12 = v35 != v60;
        if (v35 == v60)
        {
          long long __p = "sdf/childrenUtils.cpp";
          uint64_t v54 = "InsertChild";
          uint64_t v55 = 352;
          uint64_t v56 = "static BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_Ma"
                "pperArgChildPolicy>::InsertChild(const SdfLayerHandle &, const SdfPath &, const typename ChildPolicy::Va"
                "lueType &, int) [ChildPolicy = pxrInternal__aapl__pxrReserved__::Sdf_MapperArgChildPolicy]";
          char v57 = 0;
          pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&__p, 1, (pxrInternal__aapl__pxrReserved__ *)"An object was not in its parent's list of children");
        }
        else
        {
          pxrInternal__aapl__pxrReserved__::SdfChangeBlock::SdfChangeBlock((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)&__p);
          sub_216A6B648((uint64_t)&v59, v35);
          if (v59 == v60)
          {
            uint64_t v37 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
            pxrInternal__aapl__pxrReserved__::SdfLayer::EraseField(v37, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v45, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v44);
          }
          else
          {
            uint64_t v36 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
            sub_216A6A718(v36, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v45, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v44, (uint64_t **)&v59);
          }
          uint64_t v38 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
          uint64_t v39 = sub_21697F2E0(a3);
          pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v39, &v62);
          pxrInternal__aapl__pxrReserved__::SdfLayer::_MoveSpec(v38, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v62, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v50);
          sub_21697B754(&v62);
          sub_216A6BFEC(&v47, (char *)&v47[v26], (char *)&v52);
          int v40 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
          sub_216A6A718(v40, a2, (const pxrInternal__aapl__pxrReserved__::TfToken *)v58, (uint64_t **)&v47);
          uint64_t v41 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
          pxrInternal__aapl__pxrReserved__::SdfLayer::GetObjectAtPath(v41, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v45, &v62);
          uint64_t IsDormant = pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&v62);
          if ((IsDormant & 1) == 0)
          {
            unint64_t Instance = pxrInternal__aapl__pxrReserved__::Sdf_CleanupTracker::GetInstance((pxrInternal__aapl__pxrReserved__::Sdf_CleanupTracker *)IsDormant);
            pxrInternal__aapl__pxrReserved__::Sdf_CleanupTracker::AddSpecIfTracking(Instance, &v62);
          }
          pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec((pxrInternal__aapl__pxrReserved__::SdfSpec *)&v62);
          sub_21697BEF0((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)&__p);
        }
        long long __p = &v59;
        sub_216889A04((void ***)&__p);
        if ((v44 & 7) != 0) {
          atomic_fetch_add_explicit((atomic_uint *volatile)(v44 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
        }
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v46);
        sub_21697C414(&v45);
      }
      else
      {
        long long __p = "sdf/childrenUtils.cpp";
        uint64_t v54 = "InsertChild";
        uint64_t v55 = 326;
        uint64_t v56 = "static BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_Mapp"
              "erArgChildPolicy>::InsertChild(const SdfLayerHandle &, const SdfPath &, const typename ChildPolicy::ValueT"
              "ype &, int) [ChildPolicy = pxrInternal__aapl__pxrReserved__::Sdf_MapperArgChildPolicy]";
        char v57 = 0;
        unint64_t v27 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v50);
        pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&__p, 1, (pxrInternal__aapl__pxrReserved__ *)"Attempt to insert spec %s at an invalid index %d", v27, v26);
LABEL_34:
        BOOL v12 = 0;
      }
      long long __p = &v47;
      sub_216889A04((void ***)&__p);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v51);
    sub_21697C414(&v50);
    if ((v52 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v52 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
LABEL_9:
  if (((uint64_t)v58[0] & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)((unint64_t)v58[0] & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  return v12;
}

void sub_216A72790(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, int a19, uint64_t a20,__int16 *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  long long __p = (__int16 *)(v30 - 112);
  sub_216889A04((void ***)&__p);
  if ((a11 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(a11 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  sub_21697B754(&a12);
  long long __p = &a14;
  sub_216889A04((void ***)&__p);
  sub_21697B754(&a19);
  if ((a20 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(a20 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  if ((a29 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(a29 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_MapperArgChildPolicy>::RemoveChild(uint64_t *a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  sub_216A708D0((atomic_uint **)&v28);
  uint64_t v4 = sub_2169791E0(a1);
  memset(v24, 0, sizeof(v24));
  uint64_t v5 = sub_216A5B7B0((uint64_t *)(v4 + 112));
  (*(void (**)(unint64_t *__return_ptr))(*(void *)v5 + 136))(&v31);
  if (sub_21697BFBC((pxrInternal__aapl__pxrReserved__::VtValue *)&v31))
  {
    if ((v32 & 4) != 0) {
      uint64_t v6 = (uint64_t **)(*(uint64_t (**)(unint64_t *))((v32 & 0xFFFFFFFFFFFFFFF8) + 168))(&v31);
    }
    else {
      uint64_t v6 = (uint64_t **)v31;
    }
  }
  else
  {
    uint64_t v6 = (uint64_t **)v24;
  }
  uint64_t v25 = 0;
  uint64_t v26 = 0;
  uint64_t v27 = 0;
  sub_21698FA28(&v25, *v6, v6[1], v6[1] - *v6);
  int v7 = (void ***)sub_2168EE084((uint64_t)&v31);
  unint64_t v31 = (unint64_t)v24;
  sub_216889A04(v7);
  pxrInternal__aapl__pxrReserved__::SdfChangeBlock::SdfChangeBlock((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)v24);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(&v31);
  uint64_t v8 = (uint64_t *)v25;
  unint64_t v9 = v31;
  if ((uint64_t *)v25 == v26)
  {
LABEL_9:
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v10 = -v25;
    while ((*v8 & 0xFFFFFFFFFFFFFFF8) != (v31 & 0xFFFFFFFFFFFFFFF8))
    {
      ++v8;
      v10 -= 8;
      if (v8 == v26) {
        goto LABEL_9;
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfPath::AppendMapperArg(a2, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v31, &v29);
    BOOL v12 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
    pxrInternal__aapl__pxrReserved__::SdfLayer::_DeleteSpec(v12, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v29);
    sub_216A8E2D8((void *)(8 - v10), v26, (void *)-v10);
    for (long long i = v26; i != v13; --i)
    {
      uint64_t v16 = *(i - 1);
      uint64_t v15 = v16;
      if ((v16 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v15 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
    }
    uint64_t v26 = v13;
    if ((uint64_t *)v25 == v13)
    {
      uint64_t v18 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
      pxrInternal__aapl__pxrReserved__::SdfLayer::EraseField(v18, a2, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v28);
    }
    else
    {
      uint64_t v17 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
      sub_216A6A718(v17, a2, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v28, (uint64_t **)&v25);
    }
    uint64_t v19 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
    pxrInternal__aapl__pxrReserved__::SdfLayer::GetObjectAtPath(v19, a2, &v23);
    uint64_t IsDormant = pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&v23);
    if ((IsDormant & 1) == 0)
    {
      unint64_t Instance = pxrInternal__aapl__pxrReserved__::Sdf_CleanupTracker::GetInstance((pxrInternal__aapl__pxrReserved__::Sdf_CleanupTracker *)IsDormant);
      pxrInternal__aapl__pxrReserved__::Sdf_CleanupTracker::AddSpecIfTracking(Instance, &v23);
    }
    pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec((pxrInternal__aapl__pxrReserved__::SdfSpec *)&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v30);
    sub_21697C414(&v29);
    uint64_t v11 = 1;
    unint64_t v9 = v31;
  }
  if ((v9 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v9 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  sub_21697BEF0((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)v24);
  v24[0] = (void **)&v25;
  sub_216889A04(v24);
  if ((v28 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v28 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  return v11;
}

void sub_216A72C54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  if (a2) {
    sub_21675DB74(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_MapperArgChildPolicy>::MoveChildForBatchNamespaceEdit(uint64_t *a1, pxrInternal__aapl__pxrReserved__::TfToken *a2, pxrInternal__aapl__pxrReserved__::Sdf_Identity **a3, const pxrInternal__aapl__pxrReserved__::TfToken *a4, int a5)
{
  uint64_t v61 = *MEMORY[0x263EF8340];
  sub_216A708D0(v55);
  sub_216A73468(a2, a4, &v54);
  uint64_t v10 = sub_21697F2E0(a3);
  pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v10, &v51);
  uint64_t v11 = v54;
  BOOL v12 = v51;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v51 + 1);
  sub_21697C414(&v51);
  if (a5 == -2 && v11 == v12) {
    goto LABEL_59;
  }
  uint64_t v13 = sub_2169791E0(a1);
  long long __p = 0;
  uint64_t v49 = 0;
  uint64_t v50 = 0;
  uint64_t v14 = sub_216A5B7B0((uint64_t *)(v13 + 112));
  (*(void (**)(void ***__return_ptr))(*(void *)v14 + 136))(&v56);
  if (sub_21697BFBC((pxrInternal__aapl__pxrReserved__::VtValue *)&v56))
  {
    if ((v57 & 4) != 0) {
      p_p = (void **)(*(uint64_t (**)(void ***))((v57 & 0xFFFFFFFFFFFFFFF8) + 168))(&v56);
    }
    else {
      p_p = v56;
    }
  }
  else
  {
    p_p = &__p;
  }
  int v51 = 0;
  uint64_t v52 = 0;
  uint64_t v53 = 0;
  sub_21698FA28(&v51, (uint64_t *)*p_p, (uint64_t *)p_p[1], ((unsigned char *)p_p[1] - (unsigned char *)*p_p) >> 3);
  sub_2168EE084((uint64_t)&v56);
  uint64_t v56 = &__p;
  sub_216889A04(&v56);
  sub_216A65908(a3, (uint64_t)&__p);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(&v47);
  if (SHIBYTE(v50) < 0) {
    operator delete(__p);
  }
  uint64_t v16 = sub_21697F2E0(a3);
  pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v16, &__p);
  pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath((pxrInternal__aapl__pxrReserved__::SdfPath *)&__p, &v46);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&__p + 1);
  sub_21697C414(&__p);
  if (a5 == -2 && v46 == *(void *)a2)
  {
    if (v51 == v52)
    {
      uint64_t v17 = v51;
    }
    else
    {
      uint64_t v17 = v51;
      while ((*v17 & 0xFFFFFFFFFFFFFFF8) != (v47 & 0xFFFFFFFFFFFFFFF8))
      {
        if (++v17 == v52)
        {
          uint64_t v17 = v52;
          break;
        }
      }
    }
    unint64_t v18 = (unint64_t)((char *)v17 - (char *)v51) >> 3;
  }
  else if (v52 - v51 >= (unint64_t)a5)
  {
    LODWORD(v18) = a5;
  }
  else
  {
    LODWORD(v18) = v52 - v51;
  }
  sub_216A708D0((atomic_uint **)&v45);
  uint64_t v19 = sub_2169791E0(a1);
  uint64_t v56 = 0;
  uint64_t v57 = 0;
  uint64_t v58 = 0;
  uint64_t v20 = sub_216A5B7B0((uint64_t *)(v19 + 112));
  (*(void (**)(void ****__return_ptr))(*(void *)v20 + 136))(&v59);
  if (sub_21697BFBC((pxrInternal__aapl__pxrReserved__::VtValue *)&v59))
  {
    if ((v60 & 4) != 0) {
      uint64_t v21 = (void ***)(*(uint64_t (**)(void ****))((v60 & 0xFFFFFFFFFFFFFFF8) + 168))(&v59);
    }
    else {
      uint64_t v21 = v59;
    }
  }
  else
  {
    uint64_t v21 = &v56;
  }
  long long __p = 0;
  uint64_t v49 = 0;
  uint64_t v50 = 0;
  sub_21698FA28(&__p, (uint64_t *)*v21, (uint64_t *)v21[1], v21[1] - *v21);
  uint64_t v22 = (void ***)sub_2168EE084((uint64_t)&v59);
  BOOL v59 = &v56;
  sub_216889A04(v22);
  uint64_t v23 = (char *)__p;
  if (__p != v49)
  {
    while ((*(void *)v23 & 0xFFFFFFFFFFFFFFF8) != (v47 & 0xFFFFFFFFFFFFFFF8))
    {
      v23 += 8;
      if (v23 == v49)
      {
        uint64_t v23 = v49;
        break;
      }
    }
  }
  pxrInternal__aapl__pxrReserved__::SdfChangeBlock::SdfChangeBlock((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)&v56);
  if (v46 == *(void *)a2)
  {
    uint64_t v24 = v23 - (unsigned char *)__p;
    if ((v47 & 0xFFFFFFFFFFFFFFF8) == (*(void *)a4 & 0xFFFFFFFFFFFFFFF8)
      && (v18 == ((unint64_t)v24 >> 3)
       || ((unint64_t)v24 >> 3) + 1 == v18))
    {
      goto LABEL_54;
    }
    BOOL v26 = (int)v18 > v24 >> 3;
    uint64_t v27 = v51;
    if (v51 != v52)
    {
      while ((*v27 & 0xFFFFFFFFFFFFFFF8) != (v47 & 0xFFFFFFFFFFFFFFF8))
      {
        if (++v27 == v52)
        {
          uint64_t v27 = v52;
          break;
        }
      }
    }
    sub_216A8E2D8(v27 + 1, v52, v27);
    LODWORD(v18) = v18 - v26;
    for (long long i = v52; i != v28; --i)
    {
      uint64_t v31 = *(i - 1);
      uint64_t v30 = v31;
      if ((v31 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v30 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
    }
    uint64_t v52 = v28;
  }
  else
  {
    sub_216A8E2D8((void *)v23 + 1, v49, v23);
    for (long long j = v49; j != v32; j -= 8)
    {
      uint64_t v35 = *((void *)j - 1);
      uint64_t v34 = v35;
      if ((v35 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v34 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
    }
    uint64_t v49 = v32;
    if (__p == v32)
    {
      uint64_t v37 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
      pxrInternal__aapl__pxrReserved__::SdfLayer::EraseField(v37, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v46, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v45);
      uint64_t v38 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
      pxrInternal__aapl__pxrReserved__::SdfLayer::GetObjectAtPath(v38, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v46, &v59);
      uint64_t IsDormant = pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&v59);
      if ((IsDormant & 1) == 0)
      {
        unint64_t Instance = pxrInternal__aapl__pxrReserved__::Sdf_CleanupTracker::GetInstance((pxrInternal__aapl__pxrReserved__::Sdf_CleanupTracker *)IsDormant);
        pxrInternal__aapl__pxrReserved__::Sdf_CleanupTracker::AddSpecIfTracking(Instance, (atomic_uint **)&v59);
      }
      pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec((pxrInternal__aapl__pxrReserved__::SdfSpec *)&v59);
    }
    else
    {
      uint64_t v36 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
      sub_216A6A718(v36, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v46, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v45, (uint64_t **)&__p);
    }
  }
  uint64_t v41 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
  unint64_t v42 = sub_21697F2E0(a3);
  pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v42, &v59);
  pxrInternal__aapl__pxrReserved__::SdfLayer::_MoveSpec(v41, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v59, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v54);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v59 + 1);
  sub_21697C414(&v59);
  sub_216A6BFEC(&v51, (char *)&v51[(int)v18], (char *)a4);
  unint64_t v43 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
  sub_216A6A718(v43, a2, (const pxrInternal__aapl__pxrReserved__::TfToken *)v55, &v51);
LABEL_54:
  sub_21697BEF0((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)&v56);
  uint64_t v56 = &__p;
  sub_216889A04(&v56);
  if ((v45 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v45 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v46 + 1);
  sub_21697C414(&v46);
  if ((v47 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v47 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  long long __p = &v51;
  sub_216889A04((void ***)&__p);
LABEL_59:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v54 + 1);
  sub_21697C414(&v54);
  if (((uint64_t)v55[0] & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)((unint64_t)v55[0] & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  return 1;
}

void sub_216A732DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, uint64_t a11, char *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18, uint64_t a19, uint64_t a20,int a21,uint64_t a22,uint64_t a23,void **p_p)
{
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec((pxrInternal__aapl__pxrReserved__::SdfSpec *)(v24 - 88));
  sub_21697BEF0((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)&p_p);
  p_p = (void **)&__p;
  sub_216889A04(&p_p);
  if ((a9 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(a9 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  sub_21697B754(&a10);
  if ((a11 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(a11 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  long long __p = &a18;
  sub_216889A04((void ***)&__p);
  sub_21697B754(&a21);
  if ((a22 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(a22 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  _Unwind_Resume(a1);
}

void ***sub_216A73468@<X0>(pxrInternal__aapl__pxrReserved__::TfToken *a1@<X0>, const pxrInternal__aapl__pxrReserved__::TfToken *a2@<X1>, _DWORD *a3@<X8>)
{
  if ((*(void *)a2 & 0xFFFFFFFFFFFFFFF8) != 0) {
    EmptyString = (uint64_t *)((*(void *)a2 & 0xFFFFFFFFFFFFFFF8) + 16);
  }
  else {
    EmptyString = pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(a1);
  }
  if (pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_MapperArgChildPolicy>::IsValidName((uint64_t)EmptyString))
  {
    return pxrInternal__aapl__pxrReserved__::SdfPath::AppendMapperArg(a1, a2, a3);
  }
  else
  {
    *(void *)a3 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(a3);
    return (void ***)pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(a3 + 1);
  }
}

BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_MapperArgChildPolicy>::CanMoveChildForBatchNamespaceEdit(uint64_t *a1, pxrInternal__aapl__pxrReserved__::TfToken *a2, pxrInternal__aapl__pxrReserved__::Sdf_Identity **a3, const pxrInternal__aapl__pxrReserved__::TfToken *a4, int a5, uint64_t a6)
{
  sub_216A708D0((atomic_uint **)&v42);
  BOOL v12 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
  if ((pxrInternal__aapl__pxrReserved__::SdfLayer::PermissionToEdit(v12) & 1) == 0)
  {
    if (a6)
    {
      uint64_t v13 = "Layer is not editable";
      goto LABEL_13;
    }
LABEL_14:
    BOOL v18 = 0;
    goto LABEL_15;
  }
  if (pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant(a3))
  {
    if (a6)
    {
      uint64_t v13 = "Object does not exist";
LABEL_13:
      MEMORY[0x21D4477E0](a6, v13);
      goto LABEL_14;
    }
    goto LABEL_14;
  }
  uint64_t v14 = (uint64_t **)sub_21697F2E0(a3);
  pxrInternal__aapl__pxrReserved__::SdfSpec::GetLayer(v14, &v38);
  uint64_t v15 = sub_216851B24((uint64_t)&v38);
  uint64_t v16 = sub_216851B24((uint64_t)a1);
  uint64_t v17 = v39;
  if (v39 && atomic_fetch_add_explicit((atomic_uint *volatile)(v39 + 8), 0xFFFFFFFF, memory_order_release) == 1) {
    (*(void (**)(uint64_t))(*(void *)v17 + 8))(v17);
  }
  if (v15 != v16)
  {
    if (a6)
    {
      uint64_t v13 = "Cannot reparent to another layer";
      goto LABEL_13;
    }
    goto LABEL_14;
  }
  sub_216A73468(a2, a4, &v40);
  if (!pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator BOOL(&v40))
  {
    if (!a6)
    {
LABEL_24:
      BOOL v18 = 0;
      goto LABEL_25;
    }
    uint64_t v23 = "Invalid name";
LABEL_23:
    MEMORY[0x21D4477E0](a6, v23);
    goto LABEL_24;
  }
  uint64_t v20 = sub_21697F2E0(a3);
  pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v20, &__p);
  pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath((pxrInternal__aapl__pxrReserved__::SdfPath *)&__p, &v38);
  uint64_t v21 = v38;
  uint64_t v22 = *(void *)a2;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v38 + 1);
  sub_21697C414(&v38);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&__p + 1);
  sub_21697C414(&__p);
  if (v21 != v22)
  {
    uint64_t v24 = sub_21697F2E0(a3);
    pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v24, &v38);
    BOOL HasPrefix = pxrInternal__aapl__pxrReserved__::SdfPath::HasPrefix((pxrInternal__aapl__pxrReserved__::SdfPath *)&v40, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v38);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v38 + 1);
    sub_21697C414(&v38);
    if (!HasPrefix)
    {
      uint64_t v26 = sub_2169791E0(a1);
      long long __p = 0;
      uint64_t v36 = 0;
      uint64_t v37 = 0;
      sub_216A6A608(v26, (uint64_t **)&__p, &v38);
      v31[0] = &__p;
      sub_216889A04(v31);
      unint64_t v27 = (unint64_t)(v39 - v38) >> 3;
      if (a5 != -1) {
        LODWORD(v27) = a5;
      }
      if (v27 == -2 || (int)v27 <= (unint64_t)((v39 - v38) >> 3))
      {
        sub_216A65908(a3, (uint64_t)&__p);
        pxrInternal__aapl__pxrReserved__::TfToken::TfToken(&v34);
        if (SHIBYTE(v37) < 0) {
          operator delete(__p);
        }
        unint64_t v28 = sub_21697F2E0(a3);
        pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v28, &__p);
        pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath((pxrInternal__aapl__pxrReserved__::SdfPath *)&__p, &v33);
        sub_21697B754(&__p);
        sub_216A708D0((atomic_uint **)&v32);
        uint64_t v29 = sub_2169791E0(a1);
        memset(v31, 0, sizeof(v31));
        sub_216A6A608(v29, (uint64_t **)v31, &__p);
        unint64_t v43 = v31;
        sub_216889A04((void ***)&v43);
        uint64_t v30 = __p;
        if (__p != v36)
        {
          while ((*v30 & 0xFFFFFFFFFFFFFFF8) != (v34 & 0xFFFFFFFFFFFFFFF8))
          {
            if (++v30 == v36)
            {
              uint64_t v30 = v36;
              break;
            }
          }
        }
        BOOL v18 = v30 != v36;
        if (a6 && v30 == v36) {
          MEMORY[0x21D4477E0](a6, "Coding error: Object is not in its parent's children");
        }
        v31[0] = &__p;
        sub_216889A04(v31);
        if ((v32 & 7) != 0) {
          atomic_fetch_add_explicit((atomic_uint *volatile)(v32 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
        }
        sub_21697B754(&v33);
        if ((v34 & 7) != 0) {
          atomic_fetch_add_explicit((atomic_uint *volatile)(v34 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
        }
      }
      else
      {
        if (a6) {
          MEMORY[0x21D4477E0](a6, "Invalid index");
        }
        BOOL v18 = 0;
      }
      long long __p = &v38;
      sub_216889A04((void ***)&__p);
      goto LABEL_25;
    }
    if (!a6) {
      goto LABEL_24;
    }
    uint64_t v23 = "Cannot reparent object under itself";
    goto LABEL_23;
  }
  BOOL v18 = 1;
LABEL_25:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v41);
  sub_21697C414(&v40);
LABEL_15:
  if ((v42 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v42 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  return v18;
}

void sub_216A738F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, char *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22,uint64_t a23)
{
  long long __p = &a22;
  sub_216889A04((void ***)&__p);
  sub_21697B754((_DWORD *)(v23 - 88));
  uint64_t v25 = *(void *)(v23 - 80);
  if ((v25 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v25 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  _Unwind_Resume(a1);
}

BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_MapperArgChildPolicy>::CanRemoveChildForBatchNamespaceEdit(uint64_t *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  sub_216A708D0((atomic_uint **)&v19);
  int v7 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
  if (pxrInternal__aapl__pxrReserved__::SdfLayer::PermissionToEdit(v7))
  {
    uint64_t v8 = sub_2169791E0(a1);
    memset(v15, 0, sizeof(v15));
    uint64_t v9 = sub_216A5B7B0((uint64_t *)(v8 + 112));
    (*(void (**)(void ****__return_ptr))(*(void *)v9 + 136))(&v20);
    if (sub_21697BFBC((pxrInternal__aapl__pxrReserved__::VtValue *)&v20))
    {
      if ((v21 & 4) != 0) {
        uint64_t v10 = (uint64_t **)(*(uint64_t (**)(void ****))((v21 & 0xFFFFFFFFFFFFFFF8) + 168))(&v20);
      }
      else {
        uint64_t v10 = (uint64_t **)v20;
      }
    }
    else
    {
      uint64_t v10 = (uint64_t **)v15;
    }
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    sub_21698FA28(&v16, *v10, v10[1], v10[1] - *v10);
    BOOL v12 = (void ***)sub_2168EE084((uint64_t)&v20);
    uint64_t v20 = v15;
    sub_216889A04(v12);
    uint64_t v13 = v16;
    if (v16 != v17)
    {
      while ((*v13 & 0xFFFFFFFFFFFFFFF8) != (*a3 & 0xFFFFFFFFFFFFFFF8))
      {
        if (++v13 == v17)
        {
          uint64_t v13 = v17;
          break;
        }
      }
    }
    BOOL v11 = v13 != v17;
    if (a4 && v13 == v17) {
      MEMORY[0x21D4477E0](a4, "Object does not exist");
    }
    v15[0] = (void **)&v16;
    sub_216889A04(v15);
  }
  else
  {
    if (a4) {
      MEMORY[0x21D4477E0](a4, "Layer is not editable");
    }
    BOOL v11 = 0;
  }
  if ((v19 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v19 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  return v11;
}

void sub_216A73C4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  a10 = (void **)&a13;
  sub_216889A04(&a10);
  if ((a16 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(a16 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_ExpressionChildPolicy>::CreateSpec(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  int v1 = (uint64_t *)(a1 + 8);
  if (v2) {
    sub_216850B68(v1);
  }

  pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_ExpressionChildPolicy>::CreateSpec();
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_ExpressionChildPolicy>::CreateSpec(pxrInternal__aapl__pxrReserved__::SdfLayer *a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    pxrInternal__aapl__pxrReserved__::SdfChangeBlock::SdfChangeBlock((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)v17);
    uint64_t Spec = pxrInternal__aapl__pxrReserved__::SdfLayer::_CreateSpec(a1, a2, a3, a4);
    if (Spec)
    {
      pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath(a2, &v18);
      sub_216A73F8C((atomic_uint **)__p);
      uint64_t v9 = *(void *)pxrInternal__aapl__pxrReserved__::SdfPath::GetNameToken(a2);
      if ((v9 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v9 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed);
      }
      pxrInternal__aapl__pxrReserved__::SdfLayer::_PrimPushChild<pxrInternal__aapl__pxrReserved__::TfToken>();
    }
    uint64_t v18 = "sdf/childrenUtils.cpp";
    unint64_t v19 = "CreateSpec";
    uint64_t v20 = 101;
    uint64_t v21 = "static BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_Expressi"
          "onChildPolicy>::CreateSpec(SdfLayer *, const SdfPath &, SdfSpecType, BOOL) [ChildPolicy = pxrInternal__aapl__p"
          "xrReserved__::Sdf_ExpressionChildPolicy]";
    char v22 = 0;
    pxrInternal__aapl__pxrReserved__::TfEnum::GetName((uint64_t)&unk_26C755200, a3, (uint64_t)__p);
    int v10 = v16;
    BOOL v11 = (void **)__p[0];
    Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText(a2);
    uint64_t v13 = __p;
    if (v10 < 0) {
      uint64_t v13 = v11;
    }
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v18, 1, (pxrInternal__aapl__pxrReserved__ *)"Failed to create spec of type '%s' at <%s>", (const char *)v13, Text);
    if (v16 < 0) {
      operator delete(__p[0]);
    }
    sub_21697BEF0((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)v17);
  }
  else
  {
    uint64_t v18 = "sdf/childrenUtils.cpp";
    unint64_t v19 = "CreateSpec";
    uint64_t v20 = 90;
    uint64_t v21 = "static BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_Expressi"
          "onChildPolicy>::CreateSpec(SdfLayer *, const SdfPath &, SdfSpecType, BOOL) [ChildPolicy = pxrInternal__aapl__p"
          "xrReserved__::Sdf_ExpressionChildPolicy]";
    char v22 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v18, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid object type");
    return 0;
  }
  return Spec;
}

void sub_216A73F08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18, int a19, __int16 a20,char a21,char a22)
{
}

pxrInternal__aapl__pxrReserved__::SdfChildrenKeys_StaticTokenType *sub_216A73F8C@<X0>(atomic_uint **a1@<X8>)
{
  double result = (pxrInternal__aapl__pxrReserved__::SdfChildrenKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfChildrenKeys);
  if (!result) {
    double result = sub_21697E16C(&pxrInternal__aapl__pxrReserved__::SdfChildrenKeys);
  }
  uint64_t v3 = (atomic_uint *)*((void *)result + 1);
  *a1 = v3;
  if ((v3 & 7) != 0)
  {
    uint64_t v4 = (atomic_uint *)((unint64_t)v3 & 0xFFFFFFFFFFFFFFF8);
    if ((atomic_fetch_add_explicit(v4, 2u, memory_order_relaxed) & 1) == 0) {
      *a1 = v4;
    }
  }
  return result;
}

BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_ExpressionChildPolicy>::IsValidName(pxrInternal__aapl__pxrReserved__::TfToken *a1)
{
  if ((*(void *)a1 & 0xFFFFFFFFFFFFFFF8) != 0) {
    EmptyString = (uint64_t *)((*(void *)a1 & 0xFFFFFFFFFFFFFFF8) + 16);
  }
  else {
    EmptyString = pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(a1);
  }

  return pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_MapperArgChildPolicy>::IsValidName((uint64_t)EmptyString);
}

double pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_ExpressionChildPolicy>::CanRename@<D0>(uint64_t **a1@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::SdfSpec::GetLayer(a1, (uint64_t *)__p);
  uint64_t v3 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0((uint64_t *)__p);
  char v4 = pxrInternal__aapl__pxrReserved__::SdfLayer::PermissionToEdit(v3);
  uint64_t v5 = __p[1];
  if (__p[1] && atomic_fetch_add_explicit((atomic_uint *volatile)__p[1] + 2, 0xFFFFFFFF, memory_order_release) == 1) {
    (*(void (**)(void *))(*(void *)v5 + 8))(v5);
  }
  if (v4) {
    pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_ExpressionChildPolicy>::IsValidName();
  }
  sub_216779094(__p, "Layer is not editable");
  double result = *(double *)__p;
  *(_OWORD *)a2 = *(_OWORD *)__p;
  *(void *)(a2 + 16) = v8;
  *(unsigned char *)(a2 + 24) = 1;
  return result;
}

void sub_216A742BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
}

_DWORD *sub_216A74370@<X0>(pxrInternal__aapl__pxrReserved__::SdfPath *a1@<X0>, _DWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath(a1, &v4);
  pxrInternal__aapl__pxrReserved__::SdfPath::AppendExpression((pxrInternal__aapl__pxrReserved__::SdfPath *)&v4, a2);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v5);
  return sub_21697C414(&v4);
}

void sub_216A743C4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_ExpressionChildPolicy>::Rename(pxrInternal__aapl__pxrReserved__::SdfSpec *a1)
{
  uint64_t v2 = *MEMORY[0x263EF8340];
  pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath(a1, v1);
  pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_ExpressionChildPolicy>::IsValidName();
}

BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_ExpressionChildPolicy>::SetChildren(uint64_t *a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2, long long *a3)
{
  uint64_t v112 = *MEMORY[0x263EF8340];
  sub_216A73F8C((atomic_uint **)&v105);
  long long v103 = 0uLL;
  unint64_t v104 = 0;
  __p[1] = 0;
  uint64_t v97 = 0;
  __p[0] = &__p[1];
  for (long long i = *a3; (void)i != *((void *)&i + 1); sub_216A8E4E0(&i))
  {
    uint64_t v8 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)sub_216A8E460((uint64_t *)&i, v6, v7);
    if (pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant(v8)) {
      goto LABEL_13;
    }
    BOOL v11 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)sub_216A8E460((uint64_t *)&i, v9, v10);
    sub_216A65908(v11, (uint64_t)&v106);
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken(&v100);
    if (SHIBYTE(v107) < 0) {
      operator delete((void *)v106);
    }
    sub_216A8E144((uint64_t **)__p, (uint64_t *)&v100, (uint64_t *)&v100);
    if (v9) {
      goto LABEL_9;
    }
    BOOL v12 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)sub_216A8E460((uint64_t *)&i, v9, v10);
    uint64_t v13 = sub_21697F2E0(v12);
    pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v13, &j);
    pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath((pxrInternal__aapl__pxrReserved__::SdfPath *)&j, &v106);
    uint64_t v14 = v106;
    uint64_t v15 = *(void *)a2;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v106 + 1);
    sub_21697C414(&v106);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&j + 1);
    sub_21697C414(&j);
    if (v14 != v15) {
LABEL_9:
    }
      char v16 = 1;
    else {
      char v16 = 0;
    }
    if ((v100 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v100 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    if (v16)
    {
LABEL_13:
      uint64_t v17 = (atomic_uint **)sub_216A8E460((uint64_t *)&i, v9, v10);
      uint64_t v18 = *((void *)&v103 + 1);
      if (*((void *)&v103 + 1) >= v104)
      {
        uint64_t v20 = sub_21697CF74((atomic_uint ***)&v103, v17);
      }
      else
      {
        unint64_t v19 = *v17;
        **((void **)&v103 + 1) = *v17;
        if (v19) {
          atomic_fetch_add(v19, 1u);
        }
        uint64_t v20 = (char *)(v18 + 8);
      }
      *((void *)&v103 + 1) = v20;
    }
  }
  sub_2168CB05C((uint64_t)__p, (void *)__p[1]);
  uint64_t v21 = sub_2169791E0(a1);
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v97 = 0;
  uint64_t v22 = sub_216A5B7B0((uint64_t *)(v21 + 112));
  (*(void (**)(long long *__return_ptr))(*(void *)v22 + 136))(&i);
  if (sub_21697BFBC((pxrInternal__aapl__pxrReserved__::VtValue *)&i))
  {
    if ((BYTE8(i) & 4) != 0) {
      uint64_t v23 = (uint64_t **)(*(uint64_t (**)(long long *))((*((void *)&i + 1) & 0xFFFFFFFFFFFFFFF8) + 168))(&i);
    }
    else {
      uint64_t v23 = (uint64_t **)i;
    }
  }
  else
  {
    uint64_t v23 = (uint64_t **)__p;
  }
  long long v106 = 0uLL;
  uint64_t v107 = 0;
  sub_21698FA28(&v106, *v23, v23[1], v23[1] - *v23);
  uint64_t v24 = (void ***)sub_2168EE084((uint64_t)&i);
  *(void *)&long long i = __p;
  sub_216889A04(v24);
  *((void *)&i + 1) = 0;
  uint64_t v109 = 0;
  *(void *)&long long i = (char *)&i + 8;
  unint64_t v100 = 0;
  unint64_t v101 = 0;
  unint64_t v102 = 0;
  sub_216973388((char **)&v100, (uint64_t)(*((void *)&v103 + 1) - v103) >> 3);
  for (long long j = v103; (void)j != *((void *)&j + 1); sub_216A6E840(&j))
  {
    unint64_t v27 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)sub_216A6E7C0((uint64_t *)&j, v25, v26);
    if (pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant(v27))
    {
      __p[0] = "sdf/childrenUtils.cpp";
      __p[1] = "SetChildren";
      uint64_t v97 = 181;
      uint64_t v98 = "static BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_Expres"
            "sionChildPolicy>::SetChildren(const SdfLayerHandle &, const SdfPath &, const std::vector<typename ChildPolic"
            "y::ValueType> &) [ChildPolicy = pxrInternal__aapl__pxrReserved__::Sdf_ExpressionChildPolicy]";
      char v99 = 0;
      pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)__p, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid child");
      goto LABEL_92;
    }
    uint64_t v30 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)sub_216A6E7C0((uint64_t *)&j, v28, v29);
    sub_216A65908(v30, (uint64_t)__p);
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken(&v85);
    if (SHIBYTE(v97) < 0) {
      operator delete(__p[0]);
    }
    uint64_t v31 = v101;
    if ((unint64_t)v101 >= v102)
    {
      int v33 = sub_216973984((char **)&v100, (uint64_t *)&v85);
    }
    else
    {
      unint64_t v32 = v85;
      *unint64_t v101 = v85;
      if ((v32 & 7) != 0
        && (atomic_fetch_add_explicit((atomic_uint *volatile)(v32 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
      {
        *v31 &= 0xFFFFFFFFFFFFFFF8;
      }
      int v33 = (char *)(v31 + 1);
    }
    unint64_t v101 = (uint64_t *)v33;
    sub_216A8E144((uint64_t **)&i, (uint64_t *)&v85, (uint64_t *)&v85);
    if ((v34 & 1) == 0)
    {
      __p[0] = "sdf/childrenUtils.cpp";
      __p[1] = "SetChildren";
      uint64_t v97 = 188;
      uint64_t v98 = "static BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_Expres"
            "sionChildPolicy>::SetChildren(const SdfLayerHandle &, const SdfPath &, const std::vector<typename ChildPolic"
            "y::ValueType> &) [ChildPolicy = pxrInternal__aapl__pxrReserved__::Sdf_ExpressionChildPolicy]";
      char v99 = 0;
      pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)__p, 1, (pxrInternal__aapl__pxrReserved__ *)"Duplicate child");
LABEL_90:
      if ((v85 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v85 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
LABEL_92:
      BOOL v58 = 0;
      goto LABEL_97;
    }
    uint64_t v36 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)sub_216A6E7C0((uint64_t *)&j, v34, v35);
    uint64_t v37 = (uint64_t **)sub_21697F2E0(v36);
    pxrInternal__aapl__pxrReserved__::SdfSpec::GetLayer(v37, (uint64_t *)__p);
    uint64_t v38 = sub_216851B24((uint64_t)__p);
    uint64_t v41 = sub_216851B24((uint64_t)a1);
    unint64_t v42 = __p[1];
    if (__p[1] && atomic_fetch_add_explicit((atomic_uint *volatile)__p[1] + 2, 0xFFFFFFFF, memory_order_release) == 1) {
      (*(void (**)(void *))(*(void *)v42 + 8))(v42);
    }
    if (v38 != v41)
    {
      __p[0] = "sdf/childrenUtils.cpp";
      __p[1] = "SetChildren";
      uint64_t v97 = 193;
      uint64_t v98 = "static BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_Expres"
            "sionChildPolicy>::SetChildren(const SdfLayerHandle &, const SdfPath &, const std::vector<typename ChildPolic"
            "y::ValueType> &) [ChildPolicy = pxrInternal__aapl__pxrReserved__::Sdf_ExpressionChildPolicy]";
      char v99 = 0;
      pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)__p, 1, (pxrInternal__aapl__pxrReserved__ *)"Cannot reparent to another layer");
      goto LABEL_90;
    }
    unint64_t v43 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)sub_216A6E7C0((uint64_t *)&j, v39, v40);
    unint64_t v44 = sub_21697F2E0(v43);
    pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v44, &v110);
    pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath((pxrInternal__aapl__pxrReserved__::SdfPath *)&v110, __p);
    if (*(void **)a2 == __p[0])
    {
      BOOL HasPrefix = 0;
    }
    else
    {
      uint64_t v48 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)sub_216A6E7C0((uint64_t *)&j, v45, v46);
      uint64_t v49 = sub_21697F2E0(v48);
      pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v49, &k);
      BOOL HasPrefix = pxrInternal__aapl__pxrReserved__::SdfPath::HasPrefix(a2, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&k);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&k + 1);
      sub_21697C414(&k);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)__p + 1);
    sub_21697C414(__p);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v110 + 1);
    sub_21697C414(&v110);
    if (HasPrefix)
    {
      __p[0] = "sdf/childrenUtils.cpp";
      __p[1] = "SetChildren";
      uint64_t v97 = 203;
      uint64_t v98 = "static BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_Expres"
            "sionChildPolicy>::SetChildren(const SdfLayerHandle &, const SdfPath &, const std::vector<typename ChildPolic"
            "y::ValueType> &) [ChildPolicy = pxrInternal__aapl__pxrReserved__::Sdf_ExpressionChildPolicy]";
      char v99 = 0;
      pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)__p, 1, (pxrInternal__aapl__pxrReserved__ *)"Cannot reparent child under itself");
      goto LABEL_90;
    }
    if ((v85 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v85 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  pxrInternal__aapl__pxrReserved__::SdfChangeBlock::SdfChangeBlock((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)v95);
  *(_OWORD *)long long __p = v106;
  while (__p[0] != __p[1])
  {
    uint64_t v52 = (uint64_t *)sub_2169CEBC8((uint64_t *)__p, v50, v51);
    if ((void *)((char *)&i + 8) == sub_216A8E1C4((uint64_t)&i, v52))
    {
      sub_2169CEBC8((uint64_t *)__p, v53, v54);
      pxrInternal__aapl__pxrReserved__::SdfPath::AppendExpression(a2, &j);
      uint64_t v55 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
      pxrInternal__aapl__pxrReserved__::SdfLayer::_DeleteSpec(v55, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&j);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&j + 1);
      sub_21697C414(&j);
    }
    sub_2169CECC4(__p);
  }
  sub_216A8E254((uint64_t)&j, (uint64_t *)v106, *((uint64_t **)&v106 + 1));
  for (long long k = v103; ; sub_216A6E840(&k))
  {
    BOOL v58 = k == *((void *)&k + 1);
    if ((void)k == *((void *)&k + 1)) {
      break;
    }
    BOOL v59 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)sub_216A6E7C0((uint64_t *)&k, v56, v57);
    sub_216A65908(v59, (uint64_t)__p);
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken(&v92);
    if (SHIBYTE(v97) < 0) {
      operator delete(__p[0]);
    }
    pxrInternal__aapl__pxrReserved__::SdfPath::AppendExpression(a2, &v90);
    uint64_t v62 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)sub_216A6E7C0((uint64_t *)&k, v60, v61);
    uint64_t v63 = sub_21697F2E0(v62);
    pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v63, __p);
    pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath((pxrInternal__aapl__pxrReserved__::SdfPath *)__p, &v89);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)__p + 1);
    sub_21697C414(__p);
    if (v89 == *(void *)a2)
    {
      int v64 = 10;
    }
    else
    {
      if ((void *)((char *)&j + 8) != sub_216A8E1C4((uint64_t)&j, &v92))
      {
        int v65 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
        pxrInternal__aapl__pxrReserved__::SdfLayer::_DeleteSpec(v65, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v90);
      }
      sub_216A73F8C((atomic_uint **)&v88);
      uint64_t v66 = sub_2169791E0(a1);
      __p[0] = 0;
      __p[1] = 0;
      uint64_t v97 = 0;
      uint64_t v67 = sub_216A5B7B0((uint64_t *)(v66 + 112));
      (*(void (**)(void ***__return_ptr))(*(void *)v67 + 136))(&v110);
      if (sub_21697BFBC((pxrInternal__aapl__pxrReserved__::VtValue *)&v110))
      {
        if ((v111 & 4) != 0) {
          uint64_t v68 = (uint64_t **)(*(uint64_t (**)(void ***))((v111 & 0xFFFFFFFFFFFFFFF8) + 168))(&v110);
        }
        else {
          uint64_t v68 = (uint64_t **)v110;
        }
      }
      else
      {
        uint64_t v68 = (uint64_t **)__p;
      }
      unint64_t v85 = 0;
      unint64_t v86 = 0;
      uint64_t v87 = 0;
      sub_21698FA28(&v85, *v68, v68[1], v68[1] - *v68);
      uint64_t v69 = (void ***)sub_2168EE084((uint64_t)&v110);
      uint64_t v110 = __p;
      sub_216889A04(v69);
      size_t v70 = (uint64_t *)v85;
      if ((uint64_t *)v85 != v86)
      {
        while ((*v70 & 0xFFFFFFFFFFFFFFF8) != (v92 & 0xFFFFFFFFFFFFFFF8))
        {
          if (++v70 == v86)
          {
            size_t v70 = v86;
            break;
          }
        }
      }
      if (v70 == v86)
      {
        __p[0] = "sdf/childrenUtils.cpp";
        __p[1] = "SetChildren";
        uint64_t v97 = 254;
        uint64_t v98 = "static BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_Expr"
              "essionChildPolicy>::SetChildren(const SdfLayerHandle &, const SdfPath &, const std::vector<typename ChildP"
              "olicy::ValueType> &) [ChildPolicy = pxrInternal__aapl__pxrReserved__::Sdf_ExpressionChildPolicy]";
        char v99 = 0;
        pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)__p, 1, (pxrInternal__aapl__pxrReserved__ *)"An object was not in its parent's list of children");
        int v64 = 1;
      }
      else
      {
        sub_216A8E2D8(v70 + 1, v86, v70);
        for (long long m = v86; m != v71; --m)
        {
          uint64_t v74 = *(m - 1);
          uint64_t v73 = v74;
          if ((v74 & 7) != 0) {
            atomic_fetch_add_explicit((atomic_uint *volatile)(v73 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
          }
        }
        unint64_t v86 = v71;
        if ((uint64_t *)v85 == v71)
        {
          uint64_t v76 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
          pxrInternal__aapl__pxrReserved__::SdfLayer::EraseField(v76, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v89, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v88);
        }
        else
        {
          uint64_t v75 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
          sub_216A6A718(v75, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v89, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v88, (uint64_t **)&v85);
        }
        uint64_t v77 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
        uint64_t v80 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)sub_216A6E7C0((uint64_t *)&k, v78, v79);
        uint64_t v81 = sub_21697F2E0(v80);
        pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v81, __p);
        pxrInternal__aapl__pxrReserved__::SdfLayer::_MoveSpec(v77, (const pxrInternal__aapl__pxrReserved__::SdfPath *)__p, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v90);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)__p + 1);
        sub_21697C414(__p);
        int v64 = 0;
      }
      __p[0] = &v85;
      sub_216889A04((void ***)__p);
      if ((v88 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v88 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v89 + 1);
    sub_21697C414(&v89);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v91);
    sub_21697C414(&v90);
    if ((v92 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v92 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    if (v64 != 10 && v64) {
      goto LABEL_96;
    }
  }
  if ((uint64_t *)v100 == v101)
  {
    uint64_t v83 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
    pxrInternal__aapl__pxrReserved__::SdfLayer::EraseField(v83, a2, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v105);
  }
  else
  {
    unsigned __int8 v82 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
    sub_216A6A718(v82, a2, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v105, (uint64_t **)&v100);
  }
LABEL_96:
  sub_2168CB05C((uint64_t)&j, *((void **)&j + 1));
  sub_21697BEF0((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)v95);
LABEL_97:
  __p[0] = &v100;
  sub_216889A04((void ***)__p);
  sub_2168CB05C((uint64_t)&i, *((void **)&i + 1));
  __p[0] = &v106;
  sub_216889A04((void ***)__p);
  __p[0] = &v103;
  sub_21697CA24((void ***)__p);
  if ((v105 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v105 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  return v58;
}

void sub_216A75394(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, char a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,char a25,uint64_t *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  if ((a10 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(a10 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  long long __p = &a34;
  sub_216889A04((void ***)&__p);
  sub_2168CB05C(v37 - 144, *(void **)(v37 - 136));
  long long __p = (uint64_t *)(v37 - 176);
  sub_216889A04((void ***)&__p);
  long long __p = (uint64_t *)&a37;
  sub_21697CA24((void ***)&__p);
  uint64_t v39 = *(void *)(v37 - 184);
  if ((v39 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v39 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  _Unwind_Resume(a1);
}

BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_ExpressionChildPolicy>::InsertChild(uint64_t *a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2, pxrInternal__aapl__pxrReserved__::Sdf_Identity **a3, int a4)
{
  uint64_t v64 = *MEMORY[0x263EF8340];
  sub_216A73F8C(v58);
  if (pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant(a3))
  {
    long long __p = "sdf/childrenUtils.cpp";
    uint64_t v54 = "InsertChild";
    uint64_t v55 = 290;
    uint64_t v56 = "static BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_Expressi"
          "onChildPolicy>::InsertChild(const SdfLayerHandle &, const SdfPath &, const typename ChildPolicy::ValueType &, "
          "int) [ChildPolicy = pxrInternal__aapl__pxrReserved__::Sdf_ExpressionChildPolicy]";
    char v57 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&__p, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid child");
LABEL_8:
    BOOL v12 = 0;
    goto LABEL_9;
  }
  uint64_t v8 = (uint64_t **)sub_21697F2E0(a3);
  pxrInternal__aapl__pxrReserved__::SdfSpec::GetLayer(v8, (uint64_t *)&__p);
  uint64_t v9 = sub_216851B24((uint64_t)&__p);
  uint64_t v10 = sub_216851B24((uint64_t)a1);
  BOOL v11 = v54;
  if (v54 && atomic_fetch_add_explicit((atomic_uint *volatile)v54 + 2, 0xFFFFFFFF, memory_order_release) == 1) {
    (*(void (**)(const char *))(*(void *)v11 + 8))(v11);
  }
  if (v9 != v10)
  {
    long long __p = "sdf/childrenUtils.cpp";
    uint64_t v54 = "InsertChild";
    uint64_t v55 = 295;
    uint64_t v56 = "static BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_Expressi"
          "onChildPolicy>::InsertChild(const SdfLayerHandle &, const SdfPath &, const typename ChildPolicy::ValueType &, "
          "int) [ChildPolicy = pxrInternal__aapl__pxrReserved__::Sdf_ExpressionChildPolicy]";
    char v57 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&__p, 1, (pxrInternal__aapl__pxrReserved__ *)"Cannot reparent to another layer");
    goto LABEL_8;
  }
  uint64_t v14 = sub_21697F2E0(a3);
  pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v14, &v47);
  pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath((pxrInternal__aapl__pxrReserved__::SdfPath *)&v47, &__p);
  uint64_t v15 = __p;
  char v16 = *(void **)a2;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&__p + 1);
  sub_21697C414(&__p);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v47 + 1);
  sub_21697C414(&v47);
  if (v15 == v16)
  {
    BOOL v12 = 1;
  }
  else
  {
    sub_216A65908(a3, (uint64_t)&__p);
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken(&v52);
    if (SHIBYTE(v55) < 0) {
      operator delete(__p);
    }
    pxrInternal__aapl__pxrReserved__::SdfPath::AppendExpression(a2, &v50);
    uint64_t v17 = sub_21697F2E0(a3);
    pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v17, &__p);
    BOOL HasPrefix = pxrInternal__aapl__pxrReserved__::SdfPath::HasPrefix((pxrInternal__aapl__pxrReserved__::SdfPath *)&v50, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&__p);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&__p + 1);
    sub_21697C414(&__p);
    if (HasPrefix)
    {
      long long __p = "sdf/childrenUtils.cpp";
      uint64_t v54 = "InsertChild";
      uint64_t v55 = 312;
      uint64_t v56 = "static BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_Expres"
            "sionChildPolicy>::InsertChild(const SdfLayerHandle &, const SdfPath &, const typename ChildPolicy::ValueType"
            " &, int) [ChildPolicy = pxrInternal__aapl__pxrReserved__::Sdf_ExpressionChildPolicy]";
      char v57 = 0;
      pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&__p, 1, (pxrInternal__aapl__pxrReserved__ *)"Cannot reparent child under itself");
      BOOL v12 = 0;
    }
    else
    {
      uint64_t v19 = sub_2169791E0(a1);
      long long __p = 0;
      uint64_t v54 = 0;
      uint64_t v55 = 0;
      uint64_t v20 = sub_216A5B7B0((uint64_t *)(v19 + 112));
      (*(void (**)(void ***__return_ptr))(*(void *)v20 + 136))(&v59);
      if (sub_21697BFBC((pxrInternal__aapl__pxrReserved__::VtValue *)&v59))
      {
        if ((v60 & 4) != 0) {
          p_p = (void **)(*(uint64_t (**)(void ***))(((unint64_t)v60 & 0xFFFFFFFFFFFFFFF8) + 168))(&v59);
        }
        else {
          p_p = v59;
        }
      }
      else
      {
        p_p = &__p;
      }
      uint64_t v47 = 0;
      uint64_t v48 = 0;
      uint64_t v49 = 0;
      sub_21698FA28(&v47, (uint64_t *)*p_p, (uint64_t *)p_p[1], ((unsigned char *)p_p[1] - (unsigned char *)*p_p) >> 3);
      uint64_t v22 = (void ***)sub_2168EE084((uint64_t)&v59);
      BOOL v59 = &__p;
      sub_216889A04(v22);
      unint64_t v25 = (unint64_t)((char *)v48 - (char *)v47) >> 3;
      if (a4 != -1) {
        LODWORD(v25) = a4;
      }
      uint64_t v26 = (int)v25;
      if ((int)v25 <= (unint64_t)(((char *)v48 - (char *)v47) >> 3))
      {
        BOOL v59 = v47;
        uint64_t v60 = (void **)v48;
        while (v59 != v60)
        {
          uint64_t v28 = (void *)sub_2169CEBC8((uint64_t *)&v59, v23, v24);
          if ((*v28 & 0xFFFFFFFFFFFFFFF8) == (v52 & 0xFFFFFFFFFFFFFFF8))
          {
            long long __p = "sdf/childrenUtils.cpp";
            uint64_t v54 = "InsertChild";
            uint64_t v55 = 334;
            uint64_t v56 = "static BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_"
                  "ExpressionChildPolicy>::InsertChild(const SdfLayerHandle &, const SdfPath &, const typename ChildPolic"
                  "y::ValueType &, int) [ChildPolicy = pxrInternal__aapl__pxrReserved__::Sdf_ExpressionChildPolicy]";
            char v57 = 0;
            Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v50);
            pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&__p, 1, (pxrInternal__aapl__pxrReserved__ *)"Attempt to insert duplicate spec %s", Text);
            goto LABEL_34;
          }
          sub_2169CECC4(&v59);
        }
        uint64_t v29 = sub_21697F2E0(a3);
        pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v29, &__p);
        pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath((pxrInternal__aapl__pxrReserved__::SdfPath *)&__p, &v45);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&__p + 1);
        sub_21697C414(&__p);
        sub_216A73F8C((atomic_uint **)&v44);
        uint64_t v30 = sub_2169791E0(a1);
        long long __p = 0;
        uint64_t v54 = 0;
        uint64_t v55 = 0;
        uint64_t v31 = sub_216A5B7B0((uint64_t *)(v30 + 112));
        (*(void (**)(atomic_uint **__return_ptr))(*(void *)v31 + 136))(&v62);
        if (sub_21697BFBC((pxrInternal__aapl__pxrReserved__::VtValue *)&v62))
        {
          if ((v63 & 4) != 0) {
            unint64_t v32 = (uint64_t **)(*(uint64_t (**)(atomic_uint **))((v63 & 0xFFFFFFFFFFFFFFF8) + 168))(&v62);
          }
          else {
            unint64_t v32 = (uint64_t **)v62;
          }
        }
        else
        {
          unint64_t v32 = (uint64_t **)&__p;
        }
        BOOL v59 = 0;
        uint64_t v60 = 0;
        uint64_t v61 = 0;
        sub_21698FA28(&v59, *v32, v32[1], v32[1] - *v32);
        uint64_t v34 = (void ***)sub_2168EE084((uint64_t)&v62);
        uint64_t v62 = (atomic_uint *)&__p;
        sub_216889A04(v34);
        uint64_t v35 = v59;
        if (v59 != v60)
        {
          while (((unint64_t)*v35 & 0xFFFFFFFFFFFFFFF8) != (v52 & 0xFFFFFFFFFFFFFFF8))
          {
            if (++v35 == v60)
            {
              uint64_t v35 = v60;
              break;
            }
          }
        }
        BOOL v12 = v35 != v60;
        if (v35 == v60)
        {
          long long __p = "sdf/childrenUtils.cpp";
          uint64_t v54 = "InsertChild";
          uint64_t v55 = 352;
          uint64_t v56 = "static BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_Ex"
                "pressionChildPolicy>::InsertChild(const SdfLayerHandle &, const SdfPath &, const typename ChildPolicy::V"
                "alueType &, int) [ChildPolicy = pxrInternal__aapl__pxrReserved__::Sdf_ExpressionChildPolicy]";
          char v57 = 0;
          pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&__p, 1, (pxrInternal__aapl__pxrReserved__ *)"An object was not in its parent's list of children");
        }
        else
        {
          pxrInternal__aapl__pxrReserved__::SdfChangeBlock::SdfChangeBlock((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)&__p);
          sub_216A6B648((uint64_t)&v59, v35);
          if (v59 == v60)
          {
            uint64_t v37 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
            pxrInternal__aapl__pxrReserved__::SdfLayer::EraseField(v37, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v45, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v44);
          }
          else
          {
            uint64_t v36 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
            sub_216A6A718(v36, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v45, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v44, (uint64_t **)&v59);
          }
          uint64_t v38 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
          uint64_t v39 = sub_21697F2E0(a3);
          pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v39, &v62);
          pxrInternal__aapl__pxrReserved__::SdfLayer::_MoveSpec(v38, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v62, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v50);
          sub_21697B754(&v62);
          sub_216A6BFEC(&v47, (char *)&v47[v26], (char *)&v52);
          int v40 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
          sub_216A6A718(v40, a2, (const pxrInternal__aapl__pxrReserved__::TfToken *)v58, (uint64_t **)&v47);
          uint64_t v41 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a1);
          pxrInternal__aapl__pxrReserved__::SdfLayer::GetObjectAtPath(v41, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v45, &v62);
          uint64_t IsDormant = pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&v62);
          if ((IsDormant & 1) == 0)
          {
            unint64_t Instance = pxrInternal__aapl__pxrReserved__::Sdf_CleanupTracker::GetInstance((pxrInternal__aapl__pxrReserved__::Sdf_CleanupTracker *)IsDormant);
            pxrInternal__aapl__pxrReserved__::Sdf_CleanupTracker::AddSpecIfTracking(Instance, &v62);
          }
          pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec((pxrInternal__aapl__pxrReserved__::SdfSpec *)&v62);
          sub_21697BEF0((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)&__p);
        }
        long long __p = &v59;
        sub_216889A04((void ***)&__p);
        if ((v44 & 7) != 0) {
          atomic_fetch_add_explicit((atomic_uint *volatile)(v44 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
        }
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v46);
        sub_21697C414(&v45);
      }
      else
      {
        long long __p = "sdf/childrenUtils.cpp";
        uint64_t v54 = "InsertChild";
        uint64_t v55 = 326;
        uint64_t v56 = "static BOOL pxrInternal__aapl__pxrReserved__::Sdf_ChildrenUtils<pxrInternal__aapl__pxrReserved__::Sdf_Expr"
              "essionChildPolicy>::InsertChild(const SdfLayerHandle &, const SdfPath &, const typename ChildPolicy::Value"
              "Type &, int) [ChildPolicy = pxrInternal__aapl__pxrReserved__::Sdf_ExpressionChildPolicy]";
        char v57 = 0;
        unint64_t v27 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v50);
        pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&__p, 1, (pxrInternal__aapl__pxrReserved__ *)"Attempt to insert spec %s at an invalid index %d", v27, v26);
LABEL_34:
        BOOL v12 = 0;
      }
      long long __p = &v47;
      sub_216889A04((void ***)&__p);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v51);
    sub_21697C414(&v50);
    if ((v52 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v52 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
LABEL_9:
  if (((uint64_t)v58[0] & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)((unint64_t)v58[0] & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  return v12;
}