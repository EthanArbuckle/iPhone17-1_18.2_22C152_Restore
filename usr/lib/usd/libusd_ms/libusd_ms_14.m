_OWORD *sub_216E1B7B4(uint64_t a1, _DWORD *a2, uint64_t *a3)
{
  _OWORD *v6;
  void *v7;
  uint64_t v9[2];

  v6 = (_OWORD *)tbb::internal::allocate_via_handler_v3((tbb::internal *)0x20);
  v9[1] = a1;
  *v6 = 0u;
  v6[1] = 0u;
  sub_216E1B838((uint64_t)(v6 + 1), a2, a3);
  v9[0] = 0;
  sub_216E1B894(v9, v7);
  return v6;
}

void sub_216E1B824(_Unwind_Exception *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_216E1B838(uint64_t a1, _DWORD *a2, uint64_t *a3)
{
  v6 = sub_216981010((_DWORD *)a1, a2);
  sub_21698105C(v6 + 1, a2 + 1);
  uint64_t v7 = *a3;
  *(void *)(a1 + 8) = *a3;
  if (v7) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v7 + 48), 1uLL, memory_order_relaxed);
  }
  return a1;
}

uint64_t *sub_216E1B894(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  if (v3) {
    tbb::internal::deallocate_via_handler_v3(v3, a2);
  }
  return a1;
}

void *sub_216E1B8C8(void *a1, unint64_t a2)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_21677CACC(a1, a2);
    v4 = (char *)a1[1];
    bzero(v4, 8 * a2);
    a1[1] = &v4[8 * a2];
  }
  return a1;
}

void sub_216E1B924(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_216E1B940(uint64_t result, uint64_t **a2, uint64_t a3, char a4)
{
  v9 = (uint64_t **)result;
  while (2)
  {
    v10 = a2 - 1;
    v71 = a2 - 2;
    v72 = a2;
    v11 = a2 - 3;
    v12 = v9;
    while (1)
    {
      while (1)
      {
        while (1)
        {
          v9 = v12;
          uint64_t v13 = (char *)a2 - (char *)v12;
          uint64_t v14 = a2 - v12;
          if (v5 || !v4)
          {
            switch(v14)
            {
              case 0:
              case 1:
                return result;
              case 2:
                result = sub_216E1C0E0(v10, v9);
                if (result)
                {
                  v30 = *v9;
                  *v9 = *v10;
                  *v10 = v30;
                }
                break;
              case 3:
                result = sub_216E1C1B4(v9, v9 + 1, v10);
                break;
              case 4:
                result = sub_216E1C4A8(v9, v9 + 1, v9 + 2, v10);
                break;
              case 5:
                v31 = v9 + 2;
                v32 = v9 + 3;
                sub_216E1C4A8(v9, v9 + 1, v9 + 2, v9 + 3);
                result = sub_216E1C0E0(v10, v9 + 3);
                if (result)
                {
                  v33 = *v32;
                  *v32 = *v10;
                  *v10 = v33;
                  result = sub_216E1C0E0(v9 + 3, v9 + 2);
                  if (result)
                  {
                    v34 = *v31;
                    v35 = *v32;
                    *v31 = *v32;
                    *v32 = v34;
                    result = sub_216E1C0E0(v9 + 2, v9 + 1);
                    if (result)
                    {
                      v36 = v9[1];
                      v9[1] = v35;
                      v9[2] = v36;
                      result = sub_216E1C0E0(v9 + 1, v9);
                      if (result)
                      {
                        v37 = *v9;
                        *v9 = v35;
                        v9[1] = v37;
                      }
                    }
                  }
                }
                break;
              default:
                JUMPOUT(0);
            }
            return result;
          }
          if (v13 <= 191)
          {
            v38 = v9 + 1;
            BOOL v40 = v9 == a2 || v38 == a2;
            if (a4)
            {
              if (!v40)
              {
                uint64_t v41 = 0;
                v42 = v9;
                do
                {
                  v43 = v42;
                  v42 = v38;
                  result = sub_216E1C0E0(v38, v43);
                  if (result)
                  {
                    v73 = *v42;
                    uint64_t v44 = v41;
                    while (1)
                    {
                      *(uint64_t **)((char *)v9 + v44 + 8) = *(uint64_t **)((char *)v9 + v44);
                      if (!v44) {
                        break;
                      }
                      v44 -= 8;
                      result = sub_216E1C0E0(&v73, (uint64_t **)((char *)v9 + v44));
                      if ((result & 1) == 0)
                      {
                        v45 = (uint64_t **)((char *)v9 + v44 + 8);
                        goto LABEL_83;
                      }
                    }
                    v45 = v9;
LABEL_83:
                    a2 = v72;
                    *v45 = v73;
                  }
                  v38 = v42 + 1;
                  v41 += 8;
                }
                while (v42 + 1 != a2);
              }
            }
            else if (!v40)
            {
              v68 = v9 - 1;
              do
              {
                v69 = v9;
                v9 = v38;
                result = sub_216E1C0E0(v38, v69);
                if (result)
                {
                  v73 = *v9;
                  v70 = v68;
                  do
                  {
                    v70[2] = v70[1];
                    result = sub_216E1C0E0(&v73, v70--);
                  }
                  while ((result & 1) != 0);
                  v70[2] = v73;
                }
                v38 = v9 + 1;
                ++v68;
              }
              while (v9 + 1 != a2);
            }
            return result;
          }
          if (!a3)
          {
            if (v9 != a2)
            {
              int64_t v46 = (unint64_t)(v14 - 2) >> 1;
              int64_t v47 = v46;
              do
              {
                int64_t v48 = v47;
                if (v46 >= v47)
                {
                  uint64_t v49 = (2 * v47) | 1;
                  v50 = &v9[v49];
                  if (2 * v47 + 2 < v14 && sub_216E1C0E0(&v9[v49], v50 + 1))
                  {
                    ++v50;
                    uint64_t v49 = 2 * v48 + 2;
                  }
                  v51 = &v9[v48];
                  result = sub_216E1C0E0(v50, v51);
                  if ((result & 1) == 0)
                  {
                    v73 = *v51;
                    do
                    {
                      v52 = v50;
                      *v51 = *v50;
                      if (v46 < v49) {
                        break;
                      }
                      uint64_t v53 = (2 * v49) | 1;
                      v50 = &v9[v53];
                      uint64_t v54 = 2 * v49 + 2;
                      if (v54 < v14 && sub_216E1C0E0(&v9[v53], v50 + 1))
                      {
                        ++v50;
                        uint64_t v53 = v54;
                      }
                      result = sub_216E1C0E0(v50, &v73);
                      v51 = v52;
                      uint64_t v49 = v53;
                    }
                    while (!result);
                    *v52 = v73;
                  }
                }
                int64_t v47 = v48 - 1;
              }
              while (v48);
              uint64_t v55 = (unint64_t)v13 >> 3;
              v56 = v72;
              do
              {
                uint64_t v57 = 0;
                v58 = *v9;
                v59 = v9;
                do
                {
                  v60 = &v59[v57 + 1];
                  uint64_t v61 = (2 * v57) | 1;
                  uint64_t v62 = 2 * v57 + 2;
                  if (v62 < v55)
                  {
                    result = sub_216E1C0E0(&v59[v57 + 1], &v59[v57 + 2]);
                    if (result)
                    {
                      ++v60;
                      uint64_t v61 = v62;
                    }
                  }
                  *v59 = *v60;
                  v59 = v60;
                  uint64_t v57 = v61;
                }
                while (v61 <= (uint64_t)((unint64_t)(v55 - 2) >> 1));
                if (v60 == --v56)
                {
                  *v60 = v58;
                }
                else
                {
                  *v60 = *v56;
                  *v56 = v58;
                  uint64_t v63 = (char *)v60 - (char *)v9 + 8;
                  if (v63 >= 9)
                  {
                    unint64_t v64 = (((unint64_t)v63 >> 3) - 2) >> 1;
                    v65 = &v9[v64];
                    result = sub_216E1C0E0(v65, v60);
                    if (result)
                    {
                      v73 = *v60;
                      do
                      {
                        v66 = v65;
                        *v60 = *v65;
                        if (!v64) {
                          break;
                        }
                        unint64_t v64 = (v64 - 1) >> 1;
                        v65 = &v9[v64];
                        result = sub_216E1C0E0(v65, &v73);
                        v60 = v66;
                      }
                      while ((result & 1) != 0);
                      *v66 = v73;
                    }
                  }
                }
              }
              while (v55-- > 2);
            }
            return result;
          }
          unint64_t v15 = (unint64_t)v14 >> 1;
          v16 = &v9[(unint64_t)v14 >> 1];
          if ((unint64_t)v13 < 0x401)
          {
            sub_216E1C1B4(v16, v9, v10);
          }
          else
          {
            sub_216E1C1B4(v9, v16, v10);
            sub_216E1C1B4(v9 + 1, v16 - 1, v71);
            sub_216E1C1B4(v9 + 2, &v9[v15 + 1], v11);
            sub_216E1C1B4(v16 - 1, v16, &v9[v15 + 1]);
            v17 = *v9;
            *v9 = *v16;
            *v16 = v17;
          }
          a2 = v72;
          --a3;
          if (a4 & 1) != 0 || (sub_216E1C0E0(v9 - 1, v9)) {
            break;
          }
          v73 = *v9;
          result = sub_216E1C0E0(&v73, v10);
          if (result)
          {
            v12 = v9;
            do
              result = sub_216E1C0E0(&v73, ++v12);
            while ((result & 1) == 0);
          }
          else
          {
            v26 = v9 + 1;
            do
            {
              v12 = v26;
              if (v26 >= v72) {
                break;
              }
              result = sub_216E1C0E0(&v73, v26);
              v26 = v12 + 1;
            }
            while (!result);
          }
          v27 = v72;
          if (v12 < v72)
          {
            v27 = v72;
            do
              result = sub_216E1C0E0(&v73, --v27);
            while ((result & 1) != 0);
          }
          while (v12 < v27)
          {
            v28 = *v12;
            *v12 = *v27;
            *v27 = v28;
            do
              ++v12;
            while (!sub_216E1C0E0(&v73, v12));
            do
              result = sub_216E1C0E0(&v73, --v27);
            while ((result & 1) != 0);
          }
          v29 = v12 - 1;
          BOOL v4 = v12 - 1 >= v9;
          BOOL v5 = v12 - 1 == v9;
          if (v12 - 1 != v9) {
            *v9 = *v29;
          }
          a4 = 0;
          *v29 = v73;
        }
        uint64_t v18 = 0;
        v73 = *v9;
        do
          ++v18;
        while ((sub_216E1C0E0(&v9[v18], &v73) & 1) != 0);
        v19 = &v9[v18];
        v20 = v72;
        BOOL v5 = v18 == 1;
        a2 = v72;
        if (v5)
        {
          v20 = v72;
          do
          {
            if (v19 >= v20) {
              break;
            }
            --v20;
          }
          while ((sub_216E1C0E0(v20, &v73) & 1) == 0);
        }
        else
        {
          do
            --v20;
          while (!sub_216E1C0E0(v20, &v73));
        }
        if (v19 >= v20)
        {
          v24 = v19 - 1;
        }
        else
        {
          v21 = v19;
          v22 = v20;
          do
          {
            v23 = *v21;
            *v21 = *v22;
            *v22 = v23;
            do
              ++v21;
            while ((sub_216E1C0E0(v21, &v73) & 1) != 0);
            do
              --v22;
            while (!sub_216E1C0E0(v22, &v73));
          }
          while (v21 < v22);
          v24 = v21 - 1;
        }
        if (v24 != v9) {
          *v9 = *v24;
        }
        *v24 = v73;
        if (v19 >= v20) {
          break;
        }
LABEL_33:
        result = sub_216E1B940(v9, v24, a3, a4 & 1);
        a4 = 0;
        v12 = v24 + 1;
      }
      BOOL v25 = sub_216E1C278(v9, v24);
      v12 = v24 + 1;
      result = sub_216E1C278(v24 + 1, v72);
      if (result) {
        break;
      }
      if (!v25) {
        goto LABEL_33;
      }
    }
    a2 = v24;
    if (!v25) {
      continue;
    }
    return result;
  }
}

uint64_t sub_216E1C0E0(uint64_t **a1, uint64_t **a2)
{
  uint64_t v2 = **a1;
  uint64_t v3 = **a2;
  if (v2) {
    BOOL v4 = v3 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (v4)
  {
    if (v2) {
      BOOL v5 = 1;
    }
    else {
      BOOL v5 = v3 == 0;
    }
    return !v5;
  }
  else
  {
    if (v2 == v3) {
      return 0;
    }
    unint64_t v7 = v2 & 0xFFFFFFFFFFFFFFF8;
    unint64_t v8 = v3 & 0xFFFFFFFFFFFFFFF8;
    unint64_t v9 = *(void *)(v7 + 8);
    unint64_t v10 = *(void *)(v8 + 8);
    if (v9 < v10) {
      return 1;
    }
    if (v9 != v10)
    {
      return 0;
    }
    else
    {
      uint64_t v13 = *(const void **)(v8 + 16);
      unint64_t v11 = v8 + 16;
      v12 = v13;
      int v14 = *(char *)(v11 + 23);
      v17 = *(const void **)(v7 + 16);
      unint64_t v15 = v7 + 16;
      v16 = v17;
      int v18 = *(char *)(v15 + 23);
      if (v18 >= 0) {
        size_t v19 = *(unsigned __int8 *)(v15 + 23);
      }
      else {
        size_t v19 = *(void *)(v15 + 8);
      }
      if (v18 >= 0) {
        v20 = (const void *)v15;
      }
      else {
        v20 = v16;
      }
      if (v14 >= 0) {
        size_t v21 = *(unsigned __int8 *)(v11 + 23);
      }
      else {
        size_t v21 = *(void *)(v11 + 8);
      }
      if (v14 >= 0) {
        v22 = (const void *)v11;
      }
      else {
        v22 = v12;
      }
      if (v21 >= v19) {
        size_t v23 = v19;
      }
      else {
        size_t v23 = v21;
      }
      int v24 = memcmp(v20, v22, v23);
      if (v24) {
        return v24 < 0;
      }
      else {
        return v19 < v21;
      }
    }
  }
}

uint64_t sub_216E1C1B4(uint64_t **a1, uint64_t **a2, uint64_t **a3)
{
  char v6 = sub_216E1C0E0(a2, a1);
  uint64_t result = sub_216E1C0E0(a3, a2);
  if (v6)
  {
    unint64_t v8 = *a1;
    if (result)
    {
      *a1 = *a3;
    }
    else
    {
      *a1 = *a2;
      *a2 = v8;
      uint64_t result = sub_216E1C0E0(a3, a2);
      if (!result) {
        return result;
      }
      *a2 = *a3;
    }
    *a3 = v8;
  }
  else if (result)
  {
    unint64_t v9 = *a2;
    *a2 = *a3;
    *a3 = v9;
    uint64_t result = sub_216E1C0E0(a2, a1);
    if (result)
    {
      unint64_t v10 = *a1;
      *a1 = *a2;
      *a2 = v10;
    }
  }
  return result;
}

BOOL sub_216E1C278(uint64_t **a1, uint64_t **a2)
{
  uint64_t v4 = a2 - a1;
  BOOL result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      char v6 = a2 - 1;
      if (sub_216E1C0E0(a2 - 1, a1))
      {
        unint64_t v7 = *a1;
        *a1 = *v6;
        _DWORD *v6 = v7;
      }
      return 1;
    case 3:
      sub_216E1C1B4(a1, a1 + 1, a2 - 1);
      return 1;
    case 4:
      sub_216E1C4A8(a1, a1 + 1, a1 + 2, a2 - 1);
      return 1;
    case 5:
      unint64_t v15 = a1 + 2;
      v16 = a1 + 3;
      v17 = a2 - 1;
      sub_216E1C4A8(a1, a1 + 1, a1 + 2, a1 + 3);
      if (sub_216E1C0E0(v17, a1 + 3))
      {
        int v18 = *v16;
        const void *v16 = *v17;
        const void *v17 = v18;
        if (sub_216E1C0E0(a1 + 3, a1 + 2))
        {
          size_t v19 = *v15;
          v20 = *v16;
          *unint64_t v15 = *v16;
          const void *v16 = v19;
          if (sub_216E1C0E0(a1 + 2, a1 + 1))
          {
            size_t v21 = a1[1];
            a1[1] = v20;
            a1[2] = v21;
            if (sub_216E1C0E0(a1 + 1, a1))
            {
              v22 = *a1;
              *a1 = v20;
              a1[1] = v22;
            }
          }
        }
      }
      return 1;
    default:
      unint64_t v8 = a1 + 2;
      sub_216E1C1B4(a1, a1 + 1, a1 + 2);
      unint64_t v9 = a1 + 3;
      if (a1 + 3 == a2) {
        return 1;
      }
      uint64_t v10 = 0;
      int v11 = 0;
      break;
  }
  while (1)
  {
    if (sub_216E1C0E0(v9, v8))
    {
      size_t v23 = *v9;
      uint64_t v12 = v10;
      while (1)
      {
        uint64_t v13 = (uint64_t **)((char *)a1 + v12);
        *(uint64_t **)((char *)a1 + v12 + 24) = *(uint64_t **)((char *)a1 + v12 + 16);
        if (v12 == -16) {
          break;
        }
        v12 -= 8;
        if ((sub_216E1C0E0(&v23, v13 + 1) & 1) == 0)
        {
          int v14 = (uint64_t **)((char *)a1 + v12 + 24);
          goto LABEL_13;
        }
      }
      int v14 = a1;
LABEL_13:
      *int v14 = v23;
      if (++v11 == 8) {
        return v9 + 1 == a2;
      }
    }
    unint64_t v8 = v9;
    v10 += 8;
    if (++v9 == a2) {
      return 1;
    }
  }
}

uint64_t sub_216E1C4A8(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  sub_216E1C1B4(a1, a2, a3);
  uint64_t result = sub_216E1C0E0(a4, a3);
  if (result)
  {
    unint64_t v9 = *a3;
    *a3 = *a4;
    *a4 = v9;
    uint64_t result = sub_216E1C0E0(a3, a2);
    if (result)
    {
      uint64_t v10 = *a2;
      *a2 = *a3;
      *a3 = v10;
      uint64_t result = sub_216E1C0E0(a2, a1);
      if (result)
      {
        int v11 = *a1;
        *a1 = *a2;
        *a2 = v11;
      }
    }
  }
  return result;
}

uint64_t sub_216E1C540(uint64_t a1, unint64_t a2, uint64_t a3)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  if (a2 == a3)
  {
    unint64_t v4 = 0;
  }
  else
  {
    unint64_t v4 = 0;
    unint64_t v5 = a2;
    do
    {
      ++v4;
      uint64_t v6 = *(void *)(v5 + 40);
      if ((v6 & 7) != 0) {
        unint64_t v5 = 0;
      }
      else {
        unint64_t v5 = v6 & 0xFFFFFFFFFFFFFFF8;
      }
    }
    while (v5 != a3);
  }
  sub_216E1C5A8((char *)a1, a2, a3, v4);
  return a1;
}

char *sub_216E1C5A8(char *result, unint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    uint64_t result = sub_21677CACC(result, a4);
    unint64_t v7 = (unint64_t *)*((void *)v6 + 1);
    while (a2 != a3)
    {
      *v7++ = a2;
      uint64_t v8 = *(void *)(a2 + 40);
      if ((v8 & 7) != 0) {
        a2 = 0;
      }
      else {
        a2 = v8 & 0xFFFFFFFFFFFFFFF8;
      }
    }
    *((void *)v6 + 1) = v7;
  }
  return result;
}

void sub_216E1C60C(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_216E1C628(uint64_t result, uint64_t *a2, uint64_t a3, char a4)
{
  unint64_t v9 = result;
  while (2)
  {
    uint64_t v10 = a2 - 1;
    v66 = a2 - 2;
    v67 = a2;
    int v11 = a2 - 3;
    uint64_t v12 = (uint64_t *)v9;
    while (1)
    {
      while (1)
      {
        while (1)
        {
          unint64_t v9 = (unint64_t)v12;
          uint64_t v13 = (char *)a2 - (char *)v12;
          uint64_t v14 = a2 - v12;
          if (v5 || !v4)
          {
            switch(v14)
            {
              case 0:
              case 1:
                return result;
              case 2:
                uint64_t result = sub_216E1CDCC((uint64_t)v10, v9);
                if (result)
                {
                  uint64_t v30 = *(void *)v9;
                  *(void *)unint64_t v9 = *v10;
                  *uint64_t v10 = v30;
                }
                break;
              case 3:
                uint64_t result = sub_216E1CEB8((uint64_t *)v9, (uint64_t *)(v9 + 8), v10);
                break;
              case 4:
                uint64_t result = sub_216E1D1B4((uint64_t *)v9, (uint64_t *)(v9 + 8), (uint64_t *)(v9 + 16), v10);
                break;
              case 5:
                v31 = (uint64_t *)(v9 + 24);
                sub_216E1D1B4((uint64_t *)v9, (uint64_t *)(v9 + 8), (uint64_t *)(v9 + 16), (uint64_t *)(v9 + 24));
                uint64_t result = sub_216E1CDCC((uint64_t)v10, v9 + 24);
                if (result)
                {
                  uint64_t v32 = *v31;
                  uint64_t *v31 = *v10;
                  *uint64_t v10 = v32;
                  uint64_t result = sub_216E1CDCC(v9 + 24, v9 + 16);
                  if (result)
                  {
                    *(int8x16_t *)(v9 + 16) = vextq_s8(*(int8x16_t *)(v9 + 16), *(int8x16_t *)(v9 + 16), 8uLL);
                    uint64_t result = sub_216E1CDCC(v9 + 16, v9 + 8);
                    if (result)
                    {
                      *(int8x16_t *)(v9 + 8) = vextq_s8(*(int8x16_t *)(v9 + 8), *(int8x16_t *)(v9 + 8), 8uLL);
                      uint64_t result = sub_216E1CDCC(v9 + 8, v9);
                      if (result) {
                        *(int8x16_t *)unint64_t v9 = vextq_s8(*(int8x16_t *)v9, *(int8x16_t *)v9, 8uLL);
                      }
                    }
                  }
                }
                break;
              default:
                JUMPOUT(0);
            }
            return result;
          }
          if (v13 <= 191)
          {
            uint64_t v33 = v9 + 8;
            BOOL v35 = (uint64_t *)v9 == a2 || v33 == (void)a2;
            if (a4)
            {
              if (!v35)
              {
                uint64_t v36 = 0;
                v37 = (uint64_t *)v9;
                do
                {
                  uint64_t v38 = (uint64_t)v37;
                  v37 = (uint64_t *)v33;
                  uint64_t result = sub_216E1CDCC(v33, v38);
                  if (result)
                  {
                    uint64_t v68 = *v37;
                    uint64_t v39 = v36;
                    while (1)
                    {
                      *(void *)(v9 + v39 + 8) = *(void *)(v9 + v39);
                      if (!v39) {
                        break;
                      }
                      v39 -= 8;
                      uint64_t result = sub_216E1CDCC((uint64_t)&v68, v39 + v9);
                      if ((result & 1) == 0)
                      {
                        BOOL v40 = (void *)(v9 + v39 + 8);
                        goto LABEL_83;
                      }
                    }
                    BOOL v40 = (void *)v9;
LABEL_83:
                    a2 = v67;
                    *BOOL v40 = v68;
                  }
                  uint64_t v33 = (uint64_t)(v37 + 1);
                  v36 += 8;
                }
                while (v37 + 1 != a2);
              }
            }
            else if (!v35)
            {
              uint64_t v63 = v9 - 8;
              do
              {
                uint64_t v64 = v9;
                unint64_t v9 = v33;
                uint64_t result = sub_216E1CDCC(v33, v64);
                if (result)
                {
                  uint64_t v68 = *(void *)v9;
                  uint64_t v65 = v63;
                  do
                  {
                    *(void *)(v65 + 16) = *(void *)(v65 + 8);
                    uint64_t result = sub_216E1CDCC((uint64_t)&v68, v65);
                    v65 -= 8;
                  }
                  while ((result & 1) != 0);
                  *(void *)(v65 + 16) = v68;
                }
                uint64_t v33 = v9 + 8;
                v63 += 8;
              }
              while ((uint64_t *)(v9 + 8) != a2);
            }
            return result;
          }
          if (!a3)
          {
            if ((uint64_t *)v9 != a2)
            {
              int64_t v41 = (unint64_t)(v14 - 2) >> 1;
              int64_t v42 = v41;
              do
              {
                int64_t v43 = v42;
                if (v41 >= v42)
                {
                  uint64_t v44 = (2 * v42) | 1;
                  v45 = (uint64_t *)(v9 + 8 * v44);
                  if (2 * v42 + 2 < v14 && sub_216E1CDCC(v9 + 8 * v44, (uint64_t)(v45 + 1)))
                  {
                    ++v45;
                    uint64_t v44 = 2 * v43 + 2;
                  }
                  int64_t v46 = (uint64_t *)(v9 + 8 * v43);
                  uint64_t result = sub_216E1CDCC((uint64_t)v45, (uint64_t)v46);
                  if ((result & 1) == 0)
                  {
                    uint64_t v68 = *v46;
                    do
                    {
                      int64_t v47 = v45;
                      *int64_t v46 = *v45;
                      if (v41 < v44) {
                        break;
                      }
                      uint64_t v48 = (2 * v44) | 1;
                      v45 = (uint64_t *)(v9 + 8 * v48);
                      uint64_t v49 = 2 * v44 + 2;
                      if (v49 < v14 && sub_216E1CDCC(v9 + 8 * v48, (uint64_t)(v45 + 1)))
                      {
                        ++v45;
                        uint64_t v48 = v49;
                      }
                      uint64_t result = sub_216E1CDCC((uint64_t)v45, (uint64_t)&v68);
                      int64_t v46 = v47;
                      uint64_t v44 = v48;
                    }
                    while (!result);
                    *int64_t v47 = v68;
                  }
                }
                int64_t v42 = v43 - 1;
              }
              while (v43);
              uint64_t v50 = (unint64_t)v13 >> 3;
              v51 = v67;
              do
              {
                uint64_t v52 = 0;
                uint64_t v53 = *(void *)v9;
                uint64_t v54 = (void *)v9;
                do
                {
                  uint64_t v55 = &v54[v52 + 1];
                  uint64_t v56 = (2 * v52) | 1;
                  uint64_t v57 = 2 * v52 + 2;
                  if (v57 < v50)
                  {
                    uint64_t result = sub_216E1CDCC((uint64_t)&v54[v52 + 1], (uint64_t)&v54[v52 + 2]);
                    if (result)
                    {
                      ++v55;
                      uint64_t v56 = v57;
                    }
                  }
                  *uint64_t v54 = *v55;
                  uint64_t v54 = v55;
                  uint64_t v52 = v56;
                }
                while (v56 <= (uint64_t)((unint64_t)(v50 - 2) >> 1));
                if (v55 == --v51)
                {
                  *uint64_t v55 = v53;
                }
                else
                {
                  *uint64_t v55 = *v51;
                  uint64_t *v51 = v53;
                  uint64_t v58 = (uint64_t)v55 - v9 + 8;
                  if (v58 >= 9)
                  {
                    unint64_t v59 = (((unint64_t)v58 >> 3) - 2) >> 1;
                    v60 = (uint64_t *)(v9 + 8 * v59);
                    uint64_t result = sub_216E1CDCC((uint64_t)v60, (uint64_t)v55);
                    if (result)
                    {
                      uint64_t v68 = *v55;
                      do
                      {
                        uint64_t v61 = v60;
                        *uint64_t v55 = *v60;
                        if (!v59) {
                          break;
                        }
                        unint64_t v59 = (v59 - 1) >> 1;
                        v60 = (uint64_t *)(v9 + 8 * v59);
                        uint64_t result = sub_216E1CDCC((uint64_t)v60, (uint64_t)&v68);
                        uint64_t v55 = v61;
                      }
                      while ((result & 1) != 0);
                      *uint64_t v61 = v68;
                    }
                  }
                }
              }
              while (v50-- > 2);
            }
            return result;
          }
          unint64_t v15 = (unint64_t)v14 >> 1;
          v16 = (uint64_t *)(v9 + 8 * ((unint64_t)v14 >> 1));
          if ((unint64_t)v13 < 0x401)
          {
            sub_216E1CEB8(v16, (uint64_t *)v9, v10);
          }
          else
          {
            sub_216E1CEB8((uint64_t *)v9, v16, v10);
            sub_216E1CEB8((uint64_t *)(v9 + 8), v16 - 1, v66);
            sub_216E1CEB8((uint64_t *)(v9 + 16), (uint64_t *)(v9 + 8 + 8 * v15), v11);
            sub_216E1CEB8(v16 - 1, v16, (uint64_t *)(v9 + 8 + 8 * v15));
            uint64_t v17 = *(void *)v9;
            *(void *)unint64_t v9 = *v16;
            uint64_t *v16 = v17;
          }
          a2 = v67;
          --a3;
          if (a4 & 1) != 0 || (sub_216E1CDCC(v9 - 8, v9)) {
            break;
          }
          uint64_t v68 = *(void *)v9;
          uint64_t result = sub_216E1CDCC((uint64_t)&v68, (uint64_t)v10);
          if (result)
          {
            uint64_t v12 = (uint64_t *)v9;
            do
              uint64_t result = sub_216E1CDCC((uint64_t)&v68, (uint64_t)++v12);
            while ((result & 1) == 0);
          }
          else
          {
            unint64_t v26 = v9 + 8;
            do
            {
              uint64_t v12 = (uint64_t *)v26;
              if (v26 >= (unint64_t)v67) {
                break;
              }
              uint64_t result = sub_216E1CDCC((uint64_t)&v68, v26);
              unint64_t v26 = (unint64_t)(v12 + 1);
            }
            while (!result);
          }
          v27 = v67;
          if (v12 < v67)
          {
            v27 = v67;
            do
              uint64_t result = sub_216E1CDCC((uint64_t)&v68, (uint64_t)--v27);
            while ((result & 1) != 0);
          }
          while (v12 < v27)
          {
            uint64_t v28 = *v12;
            uint64_t *v12 = *v27;
            uint64_t *v27 = v28;
            do
              ++v12;
            while (!sub_216E1CDCC((uint64_t)&v68, (uint64_t)v12));
            do
              uint64_t result = sub_216E1CDCC((uint64_t)&v68, (uint64_t)--v27);
            while ((result & 1) != 0);
          }
          v29 = v12 - 1;
          BOOL v4 = (unint64_t)(v12 - 1) >= v9;
          BOOL v5 = v12 - 1 == (uint64_t *)v9;
          if (v12 - 1 != (uint64_t *)v9) {
            *(void *)unint64_t v9 = *v29;
          }
          a4 = 0;
          uint64_t *v29 = v68;
        }
        uint64_t v18 = 0;
        uint64_t v68 = *(void *)v9;
        do
          v18 += 8;
        while ((sub_216E1CDCC(v18 + v9, (uint64_t)&v68) & 1) != 0);
        size_t v19 = (uint64_t *)(v9 + v18);
        unint64_t v20 = (unint64_t)v67;
        BOOL v5 = v18 == 8;
        a2 = v67;
        if (v5)
        {
          unint64_t v20 = (unint64_t)v67;
          do
          {
            if ((unint64_t)v19 >= v20) {
              break;
            }
            v20 -= 8;
          }
          while ((sub_216E1CDCC(v20, (uint64_t)&v68) & 1) == 0);
        }
        else
        {
          do
            v20 -= 8;
          while (!sub_216E1CDCC(v20, (uint64_t)&v68));
        }
        if ((unint64_t)v19 >= v20)
        {
          int v24 = v19 - 1;
        }
        else
        {
          size_t v21 = v19;
          v22 = (uint64_t *)v20;
          do
          {
            uint64_t v23 = *v21;
            *size_t v21 = *v22;
            uint64_t *v22 = v23;
            do
              ++v21;
            while ((sub_216E1CDCC((uint64_t)v21, (uint64_t)&v68) & 1) != 0);
            do
              --v22;
            while (!sub_216E1CDCC((uint64_t)v22, (uint64_t)&v68));
          }
          while (v21 < v22);
          int v24 = v21 - 1;
        }
        if (v24 != (uint64_t *)v9) {
          *(void *)unint64_t v9 = *v24;
        }
        *int v24 = v68;
        if ((unint64_t)v19 >= v20) {
          break;
        }
LABEL_33:
        uint64_t result = sub_216E1C628(v9, v24, a3, a4 & 1);
        a4 = 0;
        uint64_t v12 = v24 + 1;
      }
      BOOL v25 = sub_216E1CF80(v9, v24);
      uint64_t v12 = v24 + 1;
      uint64_t result = sub_216E1CF80((uint64_t)(v24 + 1), v67);
      if (result) {
        break;
      }
      if (!v25) {
        goto LABEL_33;
      }
    }
    a2 = v24;
    if (!v25) {
      continue;
    }
    return result;
  }
}

uint64_t sub_216E1CDCC(uint64_t a1, uint64_t a2)
{
  NameToken = pxrInternal__aapl__pxrReserved__::SdfPath::GetNameToken((pxrInternal__aapl__pxrReserved__::SdfPath *)(*(void *)a1 + 16));
  BOOL v4 = pxrInternal__aapl__pxrReserved__::SdfPath::GetNameToken((pxrInternal__aapl__pxrReserved__::SdfPath *)(*(void *)a2 + 16));
  uint64_t v5 = *(void *)NameToken;
  uint64_t v6 = *(void *)v4;
  if (*(void *)NameToken) {
    BOOL v7 = v6 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  if (v7)
  {
    if (v5) {
      BOOL v8 = 1;
    }
    else {
      BOOL v8 = v6 == 0;
    }
    return !v8;
  }
  else
  {
    if (v5 == v6) {
      return 0;
    }
    unint64_t v10 = v5 & 0xFFFFFFFFFFFFFFF8;
    unint64_t v11 = v6 & 0xFFFFFFFFFFFFFFF8;
    unint64_t v12 = *(void *)(v10 + 8);
    unint64_t v13 = *(void *)(v11 + 8);
    if (v12 < v13) {
      return 1;
    }
    if (v12 != v13)
    {
      return 0;
    }
    else
    {
      v16 = *(const void **)(v11 + 16);
      unint64_t v14 = v11 + 16;
      unint64_t v15 = v16;
      int v17 = *(char *)(v14 + 23);
      unint64_t v20 = *(const void **)(v10 + 16);
      unint64_t v18 = v10 + 16;
      size_t v19 = v20;
      int v21 = *(char *)(v18 + 23);
      if (v21 >= 0) {
        size_t v22 = *(unsigned __int8 *)(v18 + 23);
      }
      else {
        size_t v22 = *(void *)(v18 + 8);
      }
      if (v21 >= 0) {
        uint64_t v23 = (const void *)v18;
      }
      else {
        uint64_t v23 = v19;
      }
      if (v17 >= 0) {
        size_t v24 = *(unsigned __int8 *)(v14 + 23);
      }
      else {
        size_t v24 = *(void *)(v14 + 8);
      }
      if (v17 >= 0) {
        BOOL v25 = (const void *)v14;
      }
      else {
        BOOL v25 = v15;
      }
      if (v24 >= v22) {
        size_t v26 = v22;
      }
      else {
        size_t v26 = v24;
      }
      int v27 = memcmp(v23, v25, v26);
      if (v27) {
        return v27 < 0;
      }
      else {
        return v22 < v24;
      }
    }
  }
}

uint64_t sub_216E1CEB8(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  char v6 = sub_216E1CDCC((uint64_t)a2, (uint64_t)a1);
  uint64_t result = sub_216E1CDCC((uint64_t)a3, (uint64_t)a2);
  if (v6)
  {
    uint64_t v8 = *a1;
    if (result)
    {
      *a1 = *a3;
    }
    else
    {
      *a1 = *a2;
      *a2 = v8;
      uint64_t result = sub_216E1CDCC((uint64_t)a3, (uint64_t)a2);
      if (!result) {
        return result;
      }
      uint64_t v8 = *a2;
      *a2 = *a3;
    }
    *a3 = v8;
  }
  else if (result)
  {
    uint64_t v9 = *a2;
    *a2 = *a3;
    *a3 = v9;
    uint64_t result = sub_216E1CDCC((uint64_t)a2, (uint64_t)a1);
    if (result)
    {
      uint64_t v10 = *a1;
      *a1 = *a2;
      *a2 = v10;
    }
  }
  return result;
}

BOOL sub_216E1CF80(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = ((uint64_t)a2 - a1) >> 3;
  BOOL result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      char v6 = a2 - 1;
      if (sub_216E1CDCC((uint64_t)(a2 - 1), a1))
      {
        uint64_t v7 = *(void *)a1;
        *(void *)a1 = *v6;
        uint64_t *v6 = v7;
      }
      return 1;
    case 3:
      sub_216E1CEB8((uint64_t *)a1, (uint64_t *)(a1 + 8), a2 - 1);
      return 1;
    case 4:
      sub_216E1D1B4((uint64_t *)a1, (uint64_t *)(a1 + 8), (uint64_t *)(a1 + 16), a2 - 1);
      return 1;
    case 5:
      unint64_t v15 = (uint64_t *)(a1 + 24);
      v16 = a2 - 1;
      sub_216E1D1B4((uint64_t *)a1, (uint64_t *)(a1 + 8), (uint64_t *)(a1 + 16), (uint64_t *)(a1 + 24));
      if (sub_216E1CDCC((uint64_t)v16, a1 + 24))
      {
        uint64_t v17 = *v15;
        *unint64_t v15 = *v16;
        uint64_t *v16 = v17;
        if (sub_216E1CDCC(a1 + 24, a1 + 16))
        {
          *(int8x16_t *)(a1 + 16) = vextq_s8(*(int8x16_t *)(a1 + 16), *(int8x16_t *)(a1 + 16), 8uLL);
          if (sub_216E1CDCC(a1 + 16, a1 + 8))
          {
            *(int8x16_t *)(a1 + 8) = vextq_s8(*(int8x16_t *)(a1 + 8), *(int8x16_t *)(a1 + 8), 8uLL);
            if (sub_216E1CDCC(a1 + 8, a1)) {
              *(int8x16_t *)a1 = vextq_s8(*(int8x16_t *)a1, *(int8x16_t *)a1, 8uLL);
            }
          }
        }
      }
      return 1;
    default:
      uint64_t v8 = a1 + 16;
      sub_216E1CEB8((uint64_t *)a1, (uint64_t *)(a1 + 8), (uint64_t *)(a1 + 16));
      uint64_t v9 = (uint64_t *)(a1 + 24);
      if ((uint64_t *)(a1 + 24) == a2) {
        return 1;
      }
      uint64_t v10 = 0;
      int v11 = 0;
      break;
  }
  while (1)
  {
    if (sub_216E1CDCC((uint64_t)v9, v8))
    {
      uint64_t v18 = *v9;
      uint64_t v12 = v10;
      while (1)
      {
        uint64_t v13 = a1 + v12;
        *(void *)(a1 + v12 + 24) = *(void *)(a1 + v12 + 16);
        if (v12 == -16) {
          break;
        }
        v12 -= 8;
        if ((sub_216E1CDCC((uint64_t)&v18, v13 + 8) & 1) == 0)
        {
          unint64_t v14 = (void *)(a1 + v12 + 24);
          goto LABEL_13;
        }
      }
      unint64_t v14 = (void *)a1;
LABEL_13:
      *unint64_t v14 = v18;
      if (++v11 == 8) {
        return v9 + 1 == a2;
      }
    }
    uint64_t v8 = (uint64_t)v9;
    v10 += 8;
    if (++v9 == a2) {
      return 1;
    }
  }
}

uint64_t sub_216E1D1B4(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  sub_216E1CEB8(a1, a2, a3);
  uint64_t result = sub_216E1CDCC((uint64_t)a4, (uint64_t)a3);
  if (result)
  {
    uint64_t v9 = *a3;
    *a3 = *a4;
    *a4 = v9;
    uint64_t result = sub_216E1CDCC((uint64_t)a3, (uint64_t)a2);
    if (result)
    {
      uint64_t v10 = *a2;
      *a2 = *a3;
      *a3 = v10;
      uint64_t result = sub_216E1CDCC((uint64_t)a2, (uint64_t)a1);
      if (result)
      {
        uint64_t v11 = *a1;
        *a1 = *a2;
        *a2 = v11;
      }
    }
  }
  return result;
}

unint64_t sub_216E1D24C(unint64_t result, uint64_t *a2, uint64_t a3, char a4)
{
  uint64_t v9 = (uint64_t *)result;
  while (2)
  {
    uint64_t v10 = v9;
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v9 = v10;
          uint64_t v11 = (char *)a2 - (char *)v10;
          unint64_t v12 = ((char *)a2 - (char *)v10) >> 4;
          if (v5 || !v4)
          {
            switch(v12)
            {
              case 0uLL:
              case 1uLL:
                return result;
              case 2uLL:
                if (*(a2 - 1) < (unint64_t)v10[1])
                {
                  uint64_t v45 = *v10;
                  *uint64_t v10 = *(a2 - 2);
                  *(a2 - 2) = v45;
                  uint64_t v46 = v10[1];
                  v10[1] = *(a2 - 1);
                  *(a2 - 1) = v46;
                }
                break;
              case 3uLL:
                uint64_t result = (unint64_t)sub_216E1D9E4(v10, v10 + 2, a2 - 2);
                break;
              case 4uLL:
                uint64_t result = (unint64_t)sub_216E1DCD8(v10, v10 + 2, v10 + 4, a2 - 2);
                break;
              case 5uLL:
                uint64_t result = (unint64_t)sub_216E1DCD8(v10, v10 + 2, v10 + 4, v10 + 6);
                if (*(a2 - 1) < (unint64_t)v10[7])
                {
                  uint64_t v47 = v10[6];
                  v10[6] = *(a2 - 2);
                  *(a2 - 2) = v47;
                  uint64_t v48 = v10[7];
                  v10[7] = *(a2 - 1);
                  *(a2 - 1) = v48;
                  unint64_t v49 = v10[7];
                  unint64_t v50 = v10[5];
                  if (v49 < v50)
                  {
                    uint64_t v51 = v10[6];
                    unint64_t v52 = v10[3];
                    uint64_t v53 = v10[4];
                    v10[4] = v51;
                    v10[5] = v49;
                    v10[6] = v53;
                    v10[7] = v50;
                    if (v52 > v49)
                    {
                      unint64_t v54 = v10[1];
                      uint64_t v55 = v10[2];
                      v10[2] = v51;
                      v10[3] = v49;
                      v10[4] = v55;
                      v10[5] = v52;
                      if (v54 > v49)
                      {
                        uint64_t v56 = *v10;
                        *uint64_t v10 = v51;
                        v10[1] = v49;
                        v10[2] = v56;
                        v10[3] = v54;
                      }
                    }
                  }
                }
                break;
              default:
                JUMPOUT(0);
            }
            return result;
          }
          if (v11 <= 383)
          {
            uint64_t v57 = v10 + 2;
            BOOL v59 = v10 == a2 || v57 == a2;
            if (a4)
            {
              if (!v59)
              {
                uint64_t v60 = 0;
                uint64_t v61 = v10;
                do
                {
                  unint64_t v62 = v61[3];
                  unint64_t v63 = v61[1];
                  uint64_t v61 = v57;
                  if (v62 < v63)
                  {
                    uint64_t v64 = *v57;
                    uint64_t v65 = v60;
                    while (1)
                    {
                      v66 = (char *)v10 + v65;
                      uint64_t v67 = *(uint64_t *)((char *)v10 + v65 + 8);
                      *((void *)v66 + 2) = *(uint64_t *)((char *)v10 + v65);
                      *((void *)v66 + 3) = v67;
                      if (!v65) {
                        break;
                      }
                      v65 -= 16;
                      if (v62 >= *((void *)v66 - 1))
                      {
                        uint64_t v68 = (uint64_t *)((char *)v10 + v65 + 16);
                        goto LABEL_85;
                      }
                    }
                    uint64_t v68 = v10;
LABEL_85:
                    *uint64_t v68 = v64;
                    v68[1] = v62;
                  }
                  uint64_t v57 = v61 + 2;
                  v60 += 16;
                }
                while (v61 + 2 != a2);
              }
            }
            else if (!v59)
            {
              v100 = v10 + 3;
              do
              {
                unint64_t v101 = v9[3];
                unint64_t v102 = v9[1];
                uint64_t v9 = v57;
                if (v101 < v102)
                {
                  uint64_t v103 = *v57;
                  v104 = v100;
                  do
                  {
                    v105 = v104;
                    unint64_t v106 = *(v104 - 4);
                    *(v104 - 1) = *(v104 - 3);
                    uint64_t v107 = *(v104 - 2);
                    v104 -= 2;
                    void *v105 = v107;
                  }
                  while (v101 < v106);
                  *(v104 - 1) = v103;
                  void *v104 = v101;
                }
                uint64_t v57 = v9 + 2;
                v100 += 2;
              }
              while (v9 + 2 != a2);
            }
            return result;
          }
          if (!a3)
          {
            if (v10 != a2)
            {
              int64_t v69 = (v12 - 2) >> 1;
              int64_t v70 = v69;
              do
              {
                int64_t v71 = v70;
                if (v69 >= v70)
                {
                  uint64_t v72 = (2 * v70) | 1;
                  v73 = &v10[2 * v72];
                  if (2 * v71 + 2 < (uint64_t)v12)
                  {
                    unint64_t v74 = v73[1];
                    unint64_t v75 = v73[3];
                    v73 += 2 * (v74 < v75);
                    if (v74 < v75) {
                      uint64_t v72 = 2 * v71 + 2;
                    }
                  }
                  unint64_t v76 = v10[2 * v71 + 1];
                  if (v73[1] >= v76)
                  {
                    v77 = &v10[2 * v71];
                    uint64_t v78 = *v77;
                    do
                    {
                      v79 = v77;
                      v77 = v73;
                      uint64_t *v79 = *v73;
                      v79[1] = v73[1];
                      if (v69 < v72) {
                        break;
                      }
                      uint64_t v80 = (2 * v72) | 1;
                      v73 = &v10[2 * v80];
                      uint64_t v81 = 2 * v72 + 2;
                      if (v81 < (uint64_t)v12)
                      {
                        unint64_t v82 = v73[1];
                        unint64_t v83 = v73[3];
                        v73 += 2 * (v82 < v83);
                        if (v82 < v83) {
                          uint64_t v80 = v81;
                        }
                      }
                      uint64_t result = v73[1];
                      uint64_t v72 = v80;
                    }
                    while (result >= v76);
                    uint64_t *v77 = v78;
                    v77[1] = v76;
                  }
                }
                int64_t v70 = v71 - 1;
              }
              while (v71);
              uint64_t v84 = (unint64_t)v11 >> 4;
              do
              {
                uint64_t v85 = 0;
                uint64_t v86 = *v10;
                uint64_t v87 = v10[1];
                v88 = v10;
                do
                {
                  v89 = &v88[2 * v85 + 2];
                  uint64_t v90 = (2 * v85) | 1;
                  uint64_t v91 = 2 * v85 + 2;
                  if (v91 < v84)
                  {
                    unint64_t v92 = v89[1];
                    unint64_t v93 = v89[3];
                    v89 += 2 * (v92 < v93);
                    if (v92 < v93) {
                      uint64_t v90 = v91;
                    }
                  }
                  uint64_t *v88 = *v89;
                  v88[1] = v89[1];
                  v88 = v89;
                  uint64_t v85 = v90;
                }
                while (v90 <= (uint64_t)((unint64_t)(v84 - 2) >> 1));
                if (v89 == a2 - 2)
                {
                  uint64_t *v89 = v86;
                  v89[1] = v87;
                }
                else
                {
                  uint64_t *v89 = *(a2 - 2);
                  v89[1] = *(a2 - 1);
                  *(a2 - 2) = v86;
                  *(a2 - 1) = v87;
                  uint64_t v94 = (char *)v89 - (char *)v10 + 16;
                  if (v94 >= 17)
                  {
                    unint64_t v95 = (((unint64_t)v94 >> 4) - 2) >> 1;
                    unint64_t v96 = v89[1];
                    if (v10[2 * v95 + 1] < v96)
                    {
                      uint64_t v97 = *v89;
                      do
                      {
                        v98 = v89;
                        v89 = &v10[2 * v95];
                        uint64_t *v98 = *v89;
                        v98[1] = v89[1];
                        if (!v95) {
                          break;
                        }
                        unint64_t v95 = (v95 - 1) >> 1;
                      }
                      while (v10[2 * v95 + 1] < v96);
                      uint64_t *v89 = v97;
                      v89[1] = v96;
                    }
                  }
                }
                a2 -= 2;
              }
              while (v84-- > 2);
            }
            return result;
          }
          unint64_t v13 = v12 >> 1;
          unint64_t v14 = &v10[2 * (v12 >> 1)];
          if ((unint64_t)v11 >= 0x801)
          {
            sub_216E1D9E4(v9, &v9[2 * (v12 >> 1)], a2 - 2);
            sub_216E1D9E4(v9 + 2, v14 - 2, a2 - 4);
            sub_216E1D9E4(v9 + 4, &v9[2 * v13 + 2], a2 - 6);
            uint64_t result = (unint64_t)sub_216E1D9E4(v14 - 2, v14, &v9[2 * v13 + 2]);
            uint64_t v15 = v14[1];
            long long v16 = *(_OWORD *)v9;
            *uint64_t v9 = *v14;
            v9[1] = v15;
            *(_OWORD *)unint64_t v14 = v16;
          }
          else
          {
            uint64_t result = (unint64_t)sub_216E1D9E4(&v9[2 * (v12 >> 1)], v9, a2 - 2);
          }
          --a3;
          if (a4) {
            break;
          }
          unint64_t v17 = v9[1];
          if (*(v9 - 1) < v17) {
            goto LABEL_13;
          }
          if (v17 >= *(a2 - 1))
          {
            BOOL v35 = v9 + 2;
            do
            {
              uint64_t v10 = v35;
              if (v35 >= a2) {
                break;
              }
              unint64_t v36 = v35[1];
              v35 += 2;
            }
            while (v17 >= v36);
          }
          else
          {
            uint64_t v33 = v9;
            do
            {
              uint64_t v10 = v33 + 2;
              unint64_t v34 = v33[3];
              v33 += 2;
            }
            while (v17 >= v34);
          }
          v37 = a2;
          if (v10 < a2)
          {
            uint64_t v38 = a2;
            do
            {
              v37 = v38 - 2;
              unint64_t v39 = *(v38 - 1);
              v38 -= 2;
            }
            while (v17 < v39);
          }
          uint64_t v40 = *v9;
          while (v10 < v37)
          {
            uint64_t v41 = *v10;
            *uint64_t v10 = *v37;
            uint64_t *v37 = v41;
            uint64_t v42 = v10[1];
            v10[1] = v37[1];
            v37[1] = v42;
            do
            {
              unint64_t v43 = v10[3];
              v10 += 2;
            }
            while (v17 >= v43);
            do
            {
              unint64_t v44 = *(v37 - 1);
              v37 -= 2;
            }
            while (v17 < v44);
          }
          BOOL v4 = v10 - 2 >= v9;
          BOOL v5 = v10 - 2 == v9;
          if (v10 - 2 != v9)
          {
            *uint64_t v9 = *(v10 - 2);
            v9[1] = *(v10 - 1);
          }
          a4 = 0;
          *(v10 - 2) = v40;
          *(v10 - 1) = v17;
        }
        unint64_t v17 = v9[1];
LABEL_13:
        uint64_t v18 = 0;
        uint64_t v19 = *v9;
        do
        {
          unint64_t v20 = v9[v18 + 3];
          v18 += 2;
        }
        while (v20 < v17);
        int v21 = &v9[v18];
        size_t v22 = a2;
        if (v18 == 2)
        {
          BOOL v25 = a2;
          while (v21 < v25)
          {
            uint64_t v23 = v25 - 2;
            unint64_t v26 = *(v25 - 1);
            v25 -= 2;
            if (v26 < v17) {
              goto LABEL_23;
            }
          }
          uint64_t v23 = v25;
        }
        else
        {
          do
          {
            uint64_t v23 = v22 - 2;
            unint64_t v24 = *(v22 - 1);
            v22 -= 2;
          }
          while (v24 >= v17);
        }
LABEL_23:
        uint64_t v10 = v21;
        if (v21 < v23)
        {
          int v27 = v23;
          do
          {
            uint64_t v28 = *v10;
            *uint64_t v10 = *v27;
            uint64_t *v27 = v28;
            uint64_t v29 = v10[1];
            v10[1] = v27[1];
            v27[1] = v29;
            do
            {
              unint64_t v30 = v10[3];
              v10 += 2;
            }
            while (v30 < v17);
            do
            {
              unint64_t v31 = *(v27 - 1);
              v27 -= 2;
            }
            while (v31 >= v17);
          }
          while (v10 < v27);
        }
        if (v10 - 2 != v9)
        {
          *uint64_t v9 = *(v10 - 2);
          v9[1] = *(v10 - 1);
        }
        *(v10 - 2) = v19;
        *(v10 - 1) = v17;
        if (v21 >= v23) {
          break;
        }
LABEL_34:
        uint64_t result = sub_216E1D24C(v9, v10 - 2, a3, a4 & 1);
        a4 = 0;
      }
      BOOL v32 = sub_216E1DAC0(v9, v10 - 2);
      uint64_t result = sub_216E1DAC0(v10, a2);
      if (result) {
        break;
      }
      if (!v32) {
        goto LABEL_34;
      }
    }
    a2 = v10 - 2;
    if (!v32) {
      continue;
    }
    return result;
  }
}

uint64_t *sub_216E1D9E4(uint64_t *result, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3 = a2 + 1;
  unint64_t v4 = a2[1];
  BOOL v5 = result + 1;
  unint64_t v6 = a3[1];
  if (v4 < result[1])
  {
    uint64_t v7 = *result;
    if (v6 >= v4)
    {
      *uint64_t result = *a2;
      *a2 = v7;
      unint64_t v11 = result[1];
      result[1] = a2[1];
      a2[1] = v11;
      if (a3[1] >= v11) {
        return result;
      }
      uint64_t v12 = *a2;
      *a2 = *a3;
      *a3 = v12;
      BOOL v5 = a2 + 1;
    }
    else
    {
      *uint64_t result = *a3;
      *a3 = v7;
    }
    uint64_t v3 = a3 + 1;
    goto LABEL_10;
  }
  if (v6 < v4)
  {
    uint64_t v8 = *a2;
    *a2 = *a3;
    *a3 = v8;
    uint64_t v9 = a2[1];
    a2[1] = a3[1];
    a3[1] = v9;
    if (a2[1] < (unint64_t)*v5)
    {
      uint64_t v10 = *result;
      *uint64_t result = *a2;
      *a2 = v10;
LABEL_10:
      uint64_t v13 = *v5;
      *BOOL v5 = *v3;
      *uint64_t v3 = v13;
    }
  }
  return result;
}

BOOL sub_216E1DAC0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = ((char *)a2 - (char *)a1) >> 4;
  BOOL result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      if (*(a2 - 1) < (unint64_t)a1[1])
      {
        uint64_t v6 = *a1;
        *a1 = *(a2 - 2);
        *(a2 - 2) = v6;
        uint64_t v7 = a1[1];
        a1[1] = *(a2 - 1);
        *(a2 - 1) = v7;
      }
      return result;
    case 3:
      sub_216E1D9E4(a1, a1 + 2, a2 - 2);
      return 1;
    case 4:
      sub_216E1DCD8(a1, a1 + 2, a1 + 4, a2 - 2);
      return 1;
    case 5:
      sub_216E1DCD8(a1, a1 + 2, a1 + 4, a1 + 6);
      if (*(a2 - 1) < (unint64_t)a1[7])
      {
        uint64_t v18 = a1[6];
        a1[6] = *(a2 - 2);
        *(a2 - 2) = v18;
        uint64_t v19 = a1[7];
        a1[7] = *(a2 - 1);
        *(a2 - 1) = v19;
        unint64_t v20 = a1[7];
        unint64_t v21 = a1[5];
        if (v20 < v21)
        {
          uint64_t v22 = a1[6];
          unint64_t v23 = a1[3];
          uint64_t v24 = a1[4];
          a1[4] = v22;
          a1[5] = v20;
          a1[6] = v24;
          a1[7] = v21;
          if (v23 > v20)
          {
            unint64_t v25 = a1[1];
            uint64_t v26 = a1[2];
            a1[2] = v22;
            a1[3] = v20;
            a1[4] = v26;
            a1[5] = v23;
            if (v25 > v20)
            {
              uint64_t v27 = *a1;
              *a1 = v22;
              a1[1] = v20;
              a1[2] = v27;
              a1[3] = v25;
            }
          }
        }
      }
      return 1;
    default:
      uint64_t v8 = a1 + 4;
      sub_216E1D9E4(a1, a1 + 2, a1 + 4);
      uint64_t v9 = a1 + 6;
      if (a1 + 6 == a2) {
        return 1;
      }
      uint64_t v10 = 0;
      int v11 = 0;
      break;
  }
  while (1)
  {
    unint64_t v12 = v9[1];
    if (v12 < v8[1])
    {
      uint64_t v13 = *v9;
      uint64_t v14 = v10;
      while (1)
      {
        uint64_t v15 = (uint64_t *)((char *)a1 + v14);
        uint64_t v16 = *(uint64_t *)((char *)a1 + v14 + 40);
        v15[6] = *(uint64_t *)((char *)a1 + v14 + 32);
        v15[7] = v16;
        if (v14 == -32) {
          break;
        }
        v14 -= 16;
        if (v12 >= v15[3])
        {
          unint64_t v17 = (uint64_t *)((char *)a1 + v14 + 48);
          goto LABEL_13;
        }
      }
      unint64_t v17 = a1;
LABEL_13:
      uint64_t *v17 = v13;
      v17[1] = v12;
      if (++v11 == 8) {
        return v9 + 2 == a2;
      }
    }
    uint64_t v8 = v9;
    v10 += 16;
    v9 += 2;
    if (v9 == a2) {
      return 1;
    }
  }
}

uint64_t *sub_216E1DCD8(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  BOOL result = sub_216E1D9E4(a1, a2, a3);
  if (a4[1] < (unint64_t)a3[1])
  {
    uint64_t v9 = *a3;
    *a3 = *a4;
    *a4 = v9;
    uint64_t v10 = a3[1];
    a3[1] = a4[1];
    a4[1] = v10;
    if (a3[1] < (unint64_t)a2[1])
    {
      uint64_t v11 = *a2;
      *a2 = *a3;
      *a3 = v11;
      uint64_t v12 = a2[1];
      a2[1] = a3[1];
      a3[1] = v12;
      if (a2[1] < (unint64_t)a1[1])
      {
        uint64_t v13 = *a1;
        *a1 = *a2;
        *a2 = v13;
        uint64_t v14 = a1[1];
        a1[1] = a2[1];
        a2[1] = v14;
      }
    }
  }
  return result;
}

uint64_t sub_216E1DDA0(uint64_t a1)
{
  *(void *)a1 = &unk_26C769F00;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 44));
  sub_21697C414((_DWORD *)(a1 + 40));
  return a1;
}

void sub_216E1DDF0(_DWORD *a1)
{
  *(void *)a1 = &unk_26C769F00;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(a1 + 11);
  sub_21697C414(a1 + 10);

  operator delete(a1);
}

uint64_t sub_216E1DE50(uint64_t a1)
{
  pxrInternal__aapl__pxrReserved__::TfErrorMark::TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v6);
  pxrInternal__aapl__pxrReserved__::UsdStage::_ComposeSubtreeImpl(*(pxrInternal__aapl__pxrReserved__ **)(a1 + 8), *(void *)(a1 + 16), *(const pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 24), *(const pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask **)(a1 + 32), (_DWORD *)(a1 + 40));
  unint64_t v2 = atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
  if (!v2) {
    pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_CreateInstance();
  }
  unint64_t v3 = v6;
  unint64_t v4 = atomic_load((unint64_t *)(v2 + 144));
  if (v3 < v4
    && !pxrInternal__aapl__pxrReserved__::TfErrorMark::_IsCleanImpl((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v6, (atomic_ullong *)v2))
  {
    pxrInternal__aapl__pxrReserved__::WorkDispatcher::_TransportErrors(&v6, *(void *)(a1 + 48));
  }
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v6);
  return 0;
}

void sub_216E1DEE8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)va);
  _Unwind_Resume(a1);
}

void sub_216E1DEFC(uint64_t a1)
{
  if (*(void *)(a1 + 24))
  {
    sub_2169735F0(a1, *(void **)(a1 + 16));
    *(void *)(a1 + 16) = 0;
    uint64_t v2 = *(void *)(a1 + 8);
    if (v2)
    {
      for (uint64_t i = 0; i != v2; ++i)
        *(void *)(*(void *)a1 + 8 * i) = 0;
    }
    *(void *)(a1 + 24) = 0;
  }
}

uint64_t sub_216E1DF5C(uint64_t a1)
{
  pxrInternal__aapl__pxrReserved__::TfErrorMark::TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v6);
  pxrInternal__aapl__pxrReserved__::UsdStage::_DestroyPrim(*(pxrInternal__aapl__pxrReserved__::UsdStage **)(a1 + 8), *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 16));
  unint64_t v2 = atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
  if (!v2) {
    pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_CreateInstance();
  }
  unint64_t v3 = v6;
  unint64_t v4 = atomic_load((unint64_t *)(v2 + 144));
  if (v3 < v4
    && !pxrInternal__aapl__pxrReserved__::TfErrorMark::_IsCleanImpl((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v6, (atomic_ullong *)v2))
  {
    pxrInternal__aapl__pxrReserved__::WorkDispatcher::_TransportErrors(&v6, *(void *)(a1 + 24));
  }
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v6);
  return 0;
}

void sub_216E1DFEC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)va);
  _Unwind_Resume(a1);
}

void *sub_216E1E000(void *a1, void *a2, void *a3)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2 == a3)
  {
    unint64_t v4 = 0;
  }
  else
  {
    unint64_t v4 = 0;
    BOOL v5 = a2;
    do
    {
      unint64_t v6 = (void *)v5[1];
      if (v6)
      {
        do
        {
          uint64_t v7 = v6;
          unint64_t v6 = (void *)*v6;
        }
        while (v6);
      }
      else
      {
        do
        {
          uint64_t v7 = (void *)v5[2];
          BOOL v8 = *v7 == (void)v5;
          BOOL v5 = v7;
        }
        while (!v8);
      }
      ++v4;
      BOOL v5 = v7;
    }
    while (v7 != a3);
  }
  sub_216E1E088(a1, a2, a3, v4);
  return a1;
}

void *sub_216E1E088(void *result, void *a2, void *a3, unint64_t a4)
{
  if (a4)
  {
    unint64_t v6 = result;
    sub_21682BF78(result, a4);
    BOOL result = sub_216E1E110((uint64_t)(v6 + 2), a2, a3, (void *)v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_216E1E0F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  sub_216850BF4(&a9);
  _Unwind_Resume(a1);
}

void *sub_216E1E110(uint64_t a1, void *a2, void *a3, void *a4)
{
  unint64_t v4 = a4;
  uint64_t v13 = a4;
  uint64_t v12 = a4;
  v10[0] = a1;
  v10[1] = &v12;
  v10[2] = &v13;
  if (a2 != a3)
  {
    do
    {
      void *v4 = a2[4];
      uint64_t v5 = a2[5];
      v4[1] = v5;
      if (v5) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v5 + 8), 1u, memory_order_relaxed);
      }
      unint64_t v6 = (void *)a2[1];
      if (v6)
      {
        do
        {
          uint64_t v7 = v6;
          unint64_t v6 = (void *)*v6;
        }
        while (v6);
      }
      else
      {
        do
        {
          uint64_t v7 = (void *)a2[2];
          BOOL v8 = *v7 == (void)a2;
          a2 = v7;
        }
        while (!v8);
      }
      v4 += 2;
      uint64_t v13 = v4;
      a2 = v7;
    }
    while (v7 != a3);
  }
  char v11 = 1;
  sub_216BCCFF4((uint64_t)v10);
  return v4;
}

void sub_216E1E1CC(uint64_t **a1, _DWORD *a2, void *a3)
{
  uint64_t v19 = a2;
  unint64_t v4 = sub_216E1B264(a1, (pxrInternal__aapl__pxrReserved__::SdfPath *)a2, (uint64_t)&unk_2174BFD90, &v19);
  uint64_t v5 = (void *)v4[6];
  unint64_t v6 = v4[7];
  if ((unint64_t)v5 >= v6)
  {
    uint64_t v8 = v4[5];
    uint64_t v9 = ((uint64_t)v5 - v8) >> 3;
    if ((unint64_t)(v9 + 1) >> 61) {
      sub_21677CB10();
    }
    uint64_t v10 = v6 - v8;
    uint64_t v11 = v10 >> 2;
    if (v10 >> 2 <= (unint64_t)(v9 + 1)) {
      uint64_t v11 = v9 + 1;
    }
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v12 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v11;
    }
    if (v12) {
      uint64_t v13 = (char *)sub_21677CB28((uint64_t)(v4 + 7), v12);
    }
    else {
      uint64_t v13 = 0;
    }
    uint64_t v14 = &v13[8 * v9];
    uint64_t v15 = &v13[8 * v12];
    *(void *)uint64_t v14 = *a3;
    uint64_t v7 = v14 + 8;
    unint64_t v17 = (char *)v4[5];
    uint64_t v16 = (char *)v4[6];
    if (v16 != v17)
    {
      do
      {
        uint64_t v18 = *((void *)v16 - 1);
        v16 -= 8;
        *((void *)v14 - 1) = v18;
        v14 -= 8;
      }
      while (v16 != v17);
      uint64_t v16 = (char *)v4[5];
    }
    v4[5] = v14;
    v4[6] = v7;
    v4[7] = v15;
    if (v16) {
      operator delete(v16);
    }
  }
  else
  {
    *uint64_t v5 = *a3;
    uint64_t v7 = v5 + 1;
  }
  v4[6] = v7;
}

void sub_216E1E2D0(void *a1)
{
  sub_2169C4410(v8, a1[2]);
  unint64_t v2 = (void *)*a1;
  unint64_t v3 = a1 + 1;
  if ((void *)*a1 != a1 + 1)
  {
    unint64_t v4 = (int *)v8[0];
    do
    {
      sub_2169C487C(v4, (_DWORD *)v2 + 8);
      sub_2169C48D4(v4 + 1, (_DWORD *)v2 + 9);
      uint64_t v5 = (void *)v2[1];
      if (v5)
      {
        do
        {
          unint64_t v6 = v5;
          uint64_t v5 = (void *)*v5;
        }
        while (v5);
      }
      else
      {
        do
        {
          unint64_t v6 = (void *)v2[2];
          BOOL v7 = *v6 == (void)v2;
          unint64_t v2 = v6;
        }
        while (!v7);
      }
      v4 += 2;
      unint64_t v2 = v6;
    }
    while (v6 != v3);
  }
  sub_216D59A34(v8);
  uint64_t v9 = v8;
  sub_216981168((void ***)&v9);
}

void sub_216E1E394(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_216981168((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t sub_216E1E3AC(uint64_t *a1, _DWORD *a2)
{
  unint64_t v4 = a1[1];
  if (v4 >= a1[2])
  {
    uint64_t result = sub_216981B30(a1, a2);
  }
  else
  {
    sub_216981010((_DWORD *)a1[1], a2);
    sub_21698105C((_DWORD *)(v4 + 4), a2 + 1);
    uint64_t result = v4 + 8;
  }
  a1[1] = result;
  return result;
}

uint64_t *sub_216E1E414(uint64_t **a1, uint64_t *a2, uint64_t *a3)
{
  if (a2 != a3)
  {
    unint64_t v4 = a2;
    do
    {
      unint64_t v6 = sub_2167AE00C(a1, v4);
      sub_216D5FE64((uint64_t)(v4 + 4));
      operator delete(v4);
      unint64_t v4 = v6;
    }
    while (v6 != a3);
  }
  return a3;
}

void *sub_216E1E47C(void *result, _DWORD *a2, _DWORD *a3, unint64_t a4)
{
  if (a4)
  {
    unint64_t v6 = result;
    sub_21677CACC(result, a4);
    uint64_t result = sub_216980F74((uint64_t)(v6 + 2), a2, a3, (_DWORD *)v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_216E1E4E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  sub_216981168(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_216E1E504(uint64_t a1, const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *a2, uint64_t a3)
{
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, a2, 1);
  if (v19 != v21 || v20 != v22)
  {
    uint64_t v7 = MEMORY[0x263F8C230];
    while (1)
    {
      char v17 = 1;
      uint64_t v8 = (void *)sub_216AA5ECC(v23);
      uint64_t v24 = v19;
      unint64_t v25 = v20;
      Path = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v24);
      uint64_t v10 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if (!v10) {
        uint64_t v10 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      }
      unint64_t v25 = &v17;
      uint64_t v26 = v7;
      __int16 v27 = 0;
      uint64_t v24 = (uint64_t (**)(void, uint64_t))&unk_26C75BAE8;
      unsigned __int8 HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v8, Path, v10, &v24);
      int v12 = v17 ? 2 : 1;
      int v13 = (HasField & ((_BYTE)v27 == 0)) != 0 ? v12 : 0;
      if (v13) {
        break;
      }
      pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18);
      if (v19 == v21 && v20 == v22) {
        goto LABEL_19;
      }
    }
    if (v13 != 2) {
      return 0;
    }
  }
LABEL_19:
  if (pxrInternal__aapl__pxrReserved__::PcpPrimIndex::IsInstanceable(a2)) {
    return pxrInternal__aapl__pxrReserved__::Usd_InstanceCache::RegisterInstancePrimIndex(*(void *)(a1 + 16), a2, *(char **)a1, *(const pxrInternal__aapl__pxrReserved__::UsdStageLoadRules **)(a1 + 8));
  }
  uint64_t v15 = *(char **)a1;
  if (!v15) {
    return 1;
  }
  uint64_t v16 = pxrInternal__aapl__pxrReserved__::PcpPrimIndex::GetPath(a2);
  return pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask::GetIncludedChildNames((uint64_t)v15, (const pxrInternal__aapl__pxrReserved__::SdfPath *)v16, a3);
}

BOOL sub_216E1E6A8(uint64_t a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  return pxrInternal__aapl__pxrReserved__::UsdStageLoadRules::IsLoaded((char **)(*(void *)a1 + 1232), a2);
}

uint64_t sub_216E1E6B4(uint64_t *a1, void *a2)
{
  uint64_t result = sub_216E1E72C((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_216E1E72C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v15 = a6;
  *((void *)&v15 + 1) = a7;
  long long v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  if (a3 == a5)
  {
    uint64_t v10 = a6;
  }
  else
  {
    uint64_t v8 = (_OWORD *)(a7 - 32);
    do
    {
      long long v9 = *(_OWORD *)(a3 - 32);
      a3 -= 32;
      *uint64_t v8 = v9;
      *(void *)a3 = 0;
      *(void *)(a3 + 8) = 0;
      v8[1] = *(_OWORD *)(a3 + 16);
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      *((void *)&v15 + 1) = v8;
      v7 -= 32;
      v8 -= 2;
    }
    while (a3 != a5);
    uint64_t v10 = v15;
  }
  char v13 = 1;
  sub_216E1E7CC((uint64_t)v12);
  return v10;
}

uint64_t sub_216E1E7CC(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_216E1E804((uint64_t *)a1);
  }
  return a1;
}

uint64_t *sub_216E1E804(uint64_t *result)
{
  uint64_t v1 = *(void *)(result[2] + 8);
  uint64_t v2 = *(void *)(result[1] + 8);
  if (v1 != v2)
  {
    uint64_t v3 = *result;
    do
    {
      uint64_t result = (uint64_t *)sub_216E11F9C(v3, v1);
      v1 += 32;
    }
    while (v1 != v2);
  }
  return result;
}

atomic_uint *sub_216E1E858(atomic_uint *a1)
{
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

atomic_uint *sub_216E1E88C(atomic_uint *result)
{
  uint64_t v2 = *((void *)result + 1);
  uint64_t v1 = *((void *)result + 2);
  if (v1 != v2)
  {
    uint64_t v3 = result;
    do
    {
      uint64_t v4 = *((void *)v3 + 4);
      *((void *)v3 + 2) = v1 - 32;
      uint64_t result = sub_216E11F9C(v4, v1 - 32);
      uint64_t v1 = *((void *)v3 + 2);
    }
    while (v1 != v2);
  }
  return result;
}

void *sub_216E1E8D4(void *a1, unint64_t a2, unint64_t a3, void *a4)
{
  v9.n128_u64[0] = a2;
  v9.n128_u64[1] = a3;
  uint64_t v6 = operator new(0x58uLL);
  pxrInternal__aapl__pxrReserved__::TfType::TfType((pxrInternal__aapl__pxrReserved__::TfType *)v8);
  sub_216E1E950((uint64_t)v6, a1, &v9, a4);
  return v6;
}

void sub_216E1E93C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

__n128 sub_216E1E950(uint64_t a1, void *a2, __n128 *a3, void *a4)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_WORD *)(a1 + 32) = 1;
  *(void *)a1 = &unk_26C769F90;
  uint64_t v4 = a2[1];
  *(void *)(a1 + 40) = *a2;
  *(void *)(a1 + 48) = v4;
  if (v4) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v4 + 8), 1u, memory_order_relaxed);
  }
  uint64_t v5 = a4[1];
  *(void *)(a1 + 56) = *a4;
  *(void *)(a1 + 64) = v5;
  if (v5) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v5 + 8), 1u, memory_order_relaxed);
  }
  __n128 result = *a3;
  *(__n128 *)(a1 + 72) = *a3;
  return result;
}

void sub_216E1E9B4(pxrInternal__aapl__pxrReserved__::TfNotice::_DelivererBase *this, const void *a2)
{
  *(void *)this = &unk_26C769F90;
  uint64_t v3 = (atomic_uint *)*((void *)this + 8);
  if (v3 && atomic_fetch_add_explicit(v3 + 2, 0xFFFFFFFF, memory_order_release) == 1) {
    (*(void (**)(atomic_uint *))(*(void *)v3 + 8))(v3);
  }
  uint64_t v4 = (atomic_uint *)*((void *)this + 6);
  if (v4 && atomic_fetch_add_explicit(v4 + 2, 0xFFFFFFFF, memory_order_release) == 1) {
    (*(void (**)(atomic_uint *))(*(void *)v4 + 8))(v4);
  }

  pxrInternal__aapl__pxrReserved__::TfNotice::_DelivererBase::~_DelivererBase(this, a2);
}

void sub_216E1EA84(pxrInternal__aapl__pxrReserved__::TfNotice::_DelivererBase *this, const void *a2)
{
  *(void *)this = &unk_26C769F90;
  uint64_t v3 = (atomic_uint *)*((void *)this + 8);
  if (v3 && atomic_fetch_add_explicit(v3 + 2, 0xFFFFFFFF, memory_order_release) == 1) {
    (*(void (**)(atomic_uint *))(*(void *)v3 + 8))(v3);
  }
  uint64_t v4 = (atomic_uint *)*((void *)this + 6);
  if (v4 && atomic_fetch_add_explicit(v4 + 2, 0xFFFFFFFF, memory_order_release) == 1) {
    (*(void (**)(atomic_uint *))(*(void *)v4 + 8))(v4);
  }
  pxrInternal__aapl__pxrReserved__::TfNotice::_DelivererBase::~_DelivererBase(this, a2);

  operator delete(v5);
}

uint64_t sub_216E1EB58(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v9 = a1[6];
  uint64_t v8 = a1 + 6;
  if (!v9) {
    return 0;
  }
  char v13 = v8 - 1;
  uint64_t v14 = sub_216850B68(v8);
  uint64_t v15 = *v13;
  BOOL v16 = !*(unsigned char *)(v14 + 14) || v15 == 0;
  if (v16 || a1[8] && !*(unsigned char *)(sub_216850B68(a1 + 8) + 14)) {
    return 0;
  }
  if (*a7 != a7[1])
  {
    uint64_t v22 = (char *)(*(uint64_t (**)(uint64_t *))(*a1 + 40))(a1);
    uint64_t v23 = sub_216D01530(v13) + 16;
    if (v22) {
      uint64_t v24 = a6;
    }
    else {
      uint64_t v24 = MEMORY[0x263F8C288];
    }
  }
  uint64_t v18 = (void (*)(void *, uint64_t))a1[9];
  uint64_t v19 = a1[10];
  unint64_t v20 = (void *)(v15 + (v19 >> 1));
  if (v19) {
    uint64_t v18 = *(void (**)(void *, uint64_t))(*v20 + v18);
  }
  v18(v20, a2);
  if (*a7 != a7[1]) {
    pxrInternal__aapl__pxrReserved__::TfNotice::_DelivererBase::_EndDelivery((uint64_t)a1, a7, v21);
  }
  return 1;
}

uint64_t sub_216E1ECBC(uint64_t a1, const std::type_info *a2, char *a3)
{
  pxrInternal__aapl__pxrReserved__::TfType::TfType((pxrInternal__aapl__pxrReserved__::TfType *)v13);
  if (v13[0] == v3)
  {
    v13[0] = "tf/notice.h";
    v13[1] = "GetNoticeType";
    v13[2] = 563;
    v13[3] = "virtual TfType pxrInternal__aapl__pxrReserved__::TfNotice::_StandardDeliverer<pxrInternal__aapl__pxrReserve"
             "d__::TfNotice::_Deliverer<pxrInternal__aapl__pxrReserved__::TfWeakPtr<pxrInternal__aapl__pxrReserved__::Usd"
             "Stage>, pxrInternal__aapl__pxrReserved__::TfWeakPtr<pxrInternal__aapl__pxrReserved__::SdfLayer>, void (pxrI"
             "nternal__aapl__pxrReserved__::UsdStage::*)(const pxrInternal__aapl__pxrReserved__::SdfNotice::LayersDidChan"
             "geSentPerLayer &), pxrInternal__aapl__pxrReserved__::SdfNotice::LayersDidChangeSentPerLayer>>::GetNoticeTyp"
             "e() const [Derived = pxrInternal__aapl__pxrReserved__::TfNotice::_Deliverer<pxrInternal__aapl__pxrReserved_"
             "_::TfWeakPtr<pxrInternal__aapl__pxrReserved__::UsdStage>, pxrInternal__aapl__pxrReserved__::TfWeakPtr<pxrIn"
             "ternal__aapl__pxrReserved__::SdfLayer>, void (pxrInternal__aapl__pxrReserved__::UsdStage::*)(const pxrInter"
             "nal__aapl__pxrReserved__::SdfNotice::LayersDidChangeSentPerLayer &), pxrInternal__aapl__pxrReserved__::SdfN"
             "otice::LayersDidChangeSentPerLayer>]";
    char v14 = 0;
    int v15 = 4;
    pxrInternal__aapl__pxrReserved__::ArchGetDemangled((pxrInternal__aapl__pxrReserved__ *)((unint64_t)off_26C7598D0 & 0x7FFFFFFFFFFFFFFFLL), (uint64_t)&v9);
    uint64_t v4 = std::string::insert(&v9, 0, "notice type ");
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    v10.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v10.__r_.__value_.__l.__data_ = v5;
    v4->__r_.__value_.__l.__size_ = 0;
    v4->__r_.__value_.__r.__words[2] = 0;
    v4->__r_.__value_.__r.__words[0] = 0;
    uint64_t v6 = std::string::append(&v10, " undefined in the TfType system");
    long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    std::string::size_type v12 = v6->__r_.__value_.__r.__words[2];
    *(_OWORD *)__p = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper::IssueFatalError((uint64_t)v13, (uint64_t)__p);
    if (SHIBYTE(v12) < 0) {
      operator delete(__p[0]);
    }
    if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v10.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v9.__r_.__value_.__l.__data_);
    }
  }
  return v3;
}

void sub_216E1EDDC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a28 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_216E1EE28(uint64_t *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (*(uint64_t (**)(uint64_t *))(*a1 + 24))(a1);
  uint64_t result = pxrInternal__aapl__pxrReserved__::TfType::IsA(a2, v6, v7);
  if (result)
  {
    uint64_t v11 = a1[8];
    std::string v10 = a1 + 8;
    BOOL v9 = v11;
    if (v11) {
      BOOL v9 = *(unsigned char *)(sub_216850B68(v10) + 14) == 0;
    }
    uint64_t result = 0;
    if (a3)
    {
      if (!v9) {
        return sub_2169791E0(v10 - 1) + 16 == a3;
      }
    }
  }
  return result;
}

uint64_t sub_216E1EEC8(uint64_t a1)
{
  uint64_t v1 = (uint64_t *)(a1 + 56);
  uint64_t v2 = sub_21697CF14((void *)(a1 + 56));
  if (v3 & 1 | (unint64_t)v2) {
    return sub_2169791E0(v1) + 16;
  }
  else {
    return 0;
  }
}

void *sub_216E1EF10(uint64_t a1)
{
  uint64_t v2 = operator new(0x58uLL);
  (*(void (**)(uint64_t))(*(void *)a1 + 24))(a1);
  sub_216E1E950((uint64_t)v2, (void *)(a1 + 40), (__n128 *)(a1 + 72), (void *)(a1 + 56));
  return v2;
}

void sub_216E1EF8C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_216E1EFA0(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = (a1[1] - *a1) >> 5;
  unint64_t v5 = v4 + 1;
  if ((unint64_t)(v4 + 1) >> 59) {
    sub_21677CB10();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  uint64_t v8 = a1[2] - v3;
  if (v8 >> 4 > v5) {
    unint64_t v5 = v8 >> 4;
  }
  if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFE0) {
    unint64_t v9 = 0x7FFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v9 = v5;
  }
  v16[4] = a1 + 2;
  if (v9) {
    std::string v10 = (char *)sub_2168707F4(v7, v9);
  }
  else {
    std::string v10 = 0;
  }
  uint64_t v11 = &v10[32 * v4];
  v16[0] = v10;
  v16[1] = v11;
  v16[3] = &v10[32 * v9];
  *(void *)uint64_t v11 = *a2;
  uint64_t v12 = a2[1];
  *((void *)v11 + 1) = v12;
  if (v12) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v12 + 8), 1u, memory_order_relaxed);
  }
  *((void *)v11 + 2) = a2[2];
  uint64_t v13 = a2[3];
  *((void *)v11 + 3) = v13;
  if (v13) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v13 + 8), 1u, memory_order_relaxed);
  }
  v16[2] = v11 + 32;
  sub_216E1E6B4(a1, v16);
  uint64_t v14 = a1[1];
  sub_216E1E858((atomic_uint *)v16);
  return v14;
}

void sub_216E1F0A4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216E1E858((atomic_uint *)va);
  _Unwind_Resume(a1);
}

void *sub_216E1F0B8(void *a1, uint64_t a2, uint64_t a3)
{
  *(void *)&long long v8 = a2;
  *((void *)&v8 + 1) = a3;
  uint64_t v4 = operator new(0x68uLL);
  v7[0] = &unk_26C74B5E8;
  pxrInternal__aapl__pxrReserved__::TfType::TfType((pxrInternal__aapl__pxrReserved__::TfType *)v6);
  sub_216E1F1A4((uint64_t)v4, a1, &v8, (uint64_t)v7);
  (*(void (**)(void *))v7[0])(v7);
  return v4;
}

void sub_216E1F168(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void (**a11)(void))
{
  (*a11)(&a11);
  operator delete(v11);
  _Unwind_Resume(a1);
}

uint64_t sub_216E1F1A4(uint64_t a1, void *a2, _OWORD *a3, uint64_t a4)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_WORD *)(a1 + 32) = 1;
  *(void *)a1 = &unk_26C76A008;
  uint64_t v6 = a2[1];
  *(void *)(a1 + 40) = *a2;
  *(void *)(a1 + 48) = v6;
  if (v6) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v6 + 8), 1u, memory_order_relaxed);
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)a4 + 16))(a4, a1 + 56);
  *(_OWORD *)(a1 + 88) = *a3;
  return a1;
}

void sub_216E1F240(_Unwind_Exception *a1, const void *a2)
{
  uint64_t v4 = *((void *)v2 + 6);
  if (v4) {
    sub_217324248(v4);
  }
  pxrInternal__aapl__pxrReserved__::TfNotice::_DelivererBase::~_DelivererBase(v2, a2);
  _Unwind_Resume(a1);
}

void sub_216E1F260(uint64_t a1)
{
  *(void *)a1 = &unk_26C76A008;
  (**(void (***)(void))(a1 + 56))();
  uint64_t v3 = *(atomic_uint **)(a1 + 48);
  if (v3 && atomic_fetch_add_explicit(v3 + 2, 0xFFFFFFFF, memory_order_release) == 1) {
    (*(void (**)(atomic_uint *))(*(void *)v3 + 8))(v3);
  }

  pxrInternal__aapl__pxrReserved__::TfNotice::_DelivererBase::~_DelivererBase((pxrInternal__aapl__pxrReserved__::TfNotice::_DelivererBase *)a1, v2);
}

void sub_216E1F314(uint64_t a1)
{
  *(void *)a1 = &unk_26C76A008;
  (**(void (***)(void))(a1 + 56))();
  uint64_t v3 = *(atomic_uint **)(a1 + 48);
  if (v3 && atomic_fetch_add_explicit(v3 + 2, 0xFFFFFFFF, memory_order_release) == 1) {
    (*(void (**)(atomic_uint *))(*(void *)v3 + 8))(v3);
  }
  pxrInternal__aapl__pxrReserved__::TfNotice::_DelivererBase::~_DelivererBase((pxrInternal__aapl__pxrReserved__::TfNotice::_DelivererBase *)a1, v2);

  operator delete(v4);
}

uint64_t sub_216E1F3CC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v9 = a1[6];
  long long v8 = a1 + 6;
  if (!v9) {
    return 0;
  }
  uint64_t v13 = v8 - 1;
  uint64_t v14 = sub_216850B68(v8);
  uint64_t v15 = *v13;
  BOOL v16 = !*(unsigned char *)(v14 + 14) || v15 == 0;
  if (v16
    || (pxrInternal__aapl__pxrReserved__::TfAnyWeakPtr::IsInvalid((pxrInternal__aapl__pxrReserved__::TfAnyWeakPtr *)(a1 + 7)) & 1) != 0)
  {
    return 0;
  }
  if (*a7 != a7[1])
  {
    uint64_t v26 = v15;
    uint64_t v22 = (*(uint64_t (**)(uint64_t *))(*a1 + 40))(a1);
    uint64_t v23 = sub_216D01530(v13) + 16;
    if (v22) {
      uint64_t v24 = a6;
    }
    else {
      uint64_t v24 = MEMORY[0x263F8C288];
    }
    unint64_t v25 = (char *)v22;
    uint64_t v15 = v26;
  }
  uint64_t v18 = (void (*)(void *, uint64_t))a1[11];
  uint64_t v19 = a1[12];
  unint64_t v20 = (void *)(v15 + (v19 >> 1));
  if (v19) {
    uint64_t v18 = *(void (**)(void *, uint64_t))(*v20 + v18);
  }
  v18(v20, a2);
  if (*a7 != a7[1]) {
    pxrInternal__aapl__pxrReserved__::TfNotice::_DelivererBase::_EndDelivery((uint64_t)a1, a7, v21);
  }
  return 1;
}

uint64_t sub_216E1F52C(uint64_t a1, const std::type_info *a2, char *a3)
{
  pxrInternal__aapl__pxrReserved__::TfType::TfType((pxrInternal__aapl__pxrReserved__::TfType *)v13);
  if (v13[0] == v3)
  {
    v13[0] = "tf/notice.h";
    v13[1] = "GetNoticeType";
    v13[2] = 563;
    v13[3] = "virtual TfType pxrInternal__aapl__pxrReserved__::TfNotice::_StandardDeliverer<pxrInternal__aapl__pxrReserve"
             "d__::TfNotice::_Deliverer<pxrInternal__aapl__pxrReserved__::TfWeakPtr<pxrInternal__aapl__pxrReserved__::Usd"
             "Stage>, pxrInternal__aapl__pxrReserved__::TfAnyWeakPtr, void (pxrInternal__aapl__pxrReserved__::UsdStage::*"
             ")(const pxrInternal__aapl__pxrReserved__::ArNotice::ResolverChanged &), pxrInternal__aapl__pxrReserved__::A"
             "rNotice::ResolverChanged>>::GetNoticeType() const [Derived = pxrInternal__aapl__pxrReserved__::TfNotice::_D"
             "eliverer<pxrInternal__aapl__pxrReserved__::TfWeakPtr<pxrInternal__aapl__pxrReserved__::UsdStage>, pxrIntern"
             "al__aapl__pxrReserved__::TfAnyWeakPtr, void (pxrInternal__aapl__pxrReserved__::UsdStage::*)(const pxrIntern"
             "al__aapl__pxrReserved__::ArNotice::ResolverChanged &), pxrInternal__aapl__pxrReserved__::ArNotice::ResolverChanged>]";
    char v14 = 0;
    int v15 = 4;
    pxrInternal__aapl__pxrReserved__::ArchGetDemangled((pxrInternal__aapl__pxrReserved__ *)((unint64_t)off_26C753CB0 & 0x7FFFFFFFFFFFFFFFLL), (uint64_t)&v9);
    uint64_t v4 = std::string::insert(&v9, 0, "notice type ");
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    v10.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v10.__r_.__value_.__l.__data_ = v5;
    v4->__r_.__value_.__l.__size_ = 0;
    v4->__r_.__value_.__r.__words[2] = 0;
    v4->__r_.__value_.__r.__words[0] = 0;
    uint64_t v6 = std::string::append(&v10, " undefined in the TfType system");
    long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    std::string::size_type v12 = v6->__r_.__value_.__r.__words[2];
    *(_OWORD *)__p = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper::IssueFatalError((uint64_t)v13, (uint64_t)__p);
    if (SHIBYTE(v12) < 0) {
      operator delete(__p[0]);
    }
    if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v10.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v9.__r_.__value_.__l.__data_);
    }
  }
  return v3;
}

void sub_216E1F64C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a28 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_216E1F698(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 24))(a1);
  uint64_t result = pxrInternal__aapl__pxrReserved__::TfType::IsA(a2, v6, v7);
  if (result)
  {
    std::string v9 = (pxrInternal__aapl__pxrReserved__::TfAnyWeakPtr *)(a1 + 56);
    char IsInvalid = pxrInternal__aapl__pxrReserved__::TfAnyWeakPtr::IsInvalid(v9);
    uint64_t result = 0;
    if (a3)
    {
      if ((IsInvalid & 1) == 0) {
        return pxrInternal__aapl__pxrReserved__::TfAnyWeakPtr::GetWeakBase(v9) == a3;
      }
    }
  }
  return result;
}

uint64_t sub_216E1F728(uint64_t a1)
{
  uint64_t v1 = (pxrInternal__aapl__pxrReserved__::TfAnyWeakPtr *)(a1 + 56);
  if (!pxrInternal__aapl__pxrReserved__::TfAnyWeakPtr::operator BOOL(a1 + 56)) {
    return 0;
  }

  return pxrInternal__aapl__pxrReserved__::TfAnyWeakPtr::GetWeakBase(v1);
}

void *sub_216E1F778(uint64_t a1)
{
  uint64_t v2 = operator new(0x68uLL);
  (*(void (**)(uint64_t))(*(void *)a1 + 24))(a1);
  sub_216E1F1A4((uint64_t)v2, (void *)(a1 + 40), (_OWORD *)(a1 + 88), a1 + 56);
  return v2;
}

void sub_216E1F7F4(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_216E1F808(uint64_t **a1, void *a2, uint64_t a3, uint64_t **a4)
{
  uint64_t v6 = (uint64_t **)sub_216E1F8A0((uint64_t)a1, &v9, a2);
  uint64_t result = *v6;
  if (!*v6)
  {
    sub_216E1F940((uint64_t)a1, a4, (uint64_t)&v8);
    sub_21677B358(a1, v9, v6, v8);
    return v8;
  }
  return result;
}

void *sub_216E1F8A0(uint64_t a1, void *a2, void *a3)
{
  long long v5 = (void *)(a1 + 8);
  uint64_t v4 = *(void **)(a1 + 8);
  if (v4)
  {
    long long v7 = (uint64_t *)(a1 + 16);
    do
    {
      while (1)
      {
        long long v8 = v4;
        uint64_t v9 = v4 + 4;
        if (!sub_216E1F9B8(v7, a3, v4 + 4)) {
          break;
        }
        uint64_t v4 = (void *)*v8;
        long long v5 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }
      if (!sub_216E1F9B8(v7, v9, a3)) {
        break;
      }
      long long v5 = v8 + 1;
      uint64_t v4 = (void *)v8[1];
    }
    while (v4);
  }
  else
  {
    long long v8 = (void *)(a1 + 8);
  }
LABEL_10:
  *a2 = v8;
  return v5;
}

void *sub_216E1F940@<X0>(uint64_t a1@<X0>, uint64_t **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t result = operator new(0x38uLL);
  *(void *)a3 = result;
  *(void *)(a3 + 8) = v5;
  uint64_t v7 = **a2;
  result[4] = v7;
  if ((v7 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v7 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    result[4] &= 0xFFFFFFFFFFFFFFF8;
  }
  result[6] = 0;
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

uint64_t sub_216E1F9B8(uint64_t *EmptyString, void *a2, void *a3)
{
  uint64_t v4 = (uint64_t)EmptyString;
  if ((*a2 & 0xFFFFFFFFFFFFFFF8) != 0)
  {
    uint64_t v5 = (*a2 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  else
  {
    EmptyString = pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString((pxrInternal__aapl__pxrReserved__::TfToken *)EmptyString);
    uint64_t v5 = (uint64_t)EmptyString;
  }
  if ((*a3 & 0xFFFFFFFFFFFFFFF8) != 0) {
    uint64_t v6 = (uint64_t *)((*a3 & 0xFFFFFFFFFFFFFFF8) + 16);
  }
  else {
    uint64_t v6 = pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString((pxrInternal__aapl__pxrReserved__::TfToken *)EmptyString);
  }
  if (*(char *)(v5 + 23) >= 0) {
    uint64_t v7 = (char *)v5;
  }
  else {
    uint64_t v7 = *(char **)v5;
  }
  int v8 = *v7;
  if (*((char *)v6 + 23) >= 0) {
    uint64_t v9 = (char *)v6;
  }
  else {
    uint64_t v9 = (char *)*v6;
  }
  if ((v8 & 0x80000000) == 0)
  {
    int v10 = *v9;
    if ((v10 & 0x80000000) == 0)
    {
      unsigned int v11 = v8;
      unsigned int v12 = v10;
      unsigned int v13 = (v10 ^ v11) & 0xFFFFFFDF;
      BOOL v14 = v11 < 0x40 || v13 == 0;
      if (!v14 && v12 >= 0x40) {
        return (((_BYTE)v11 + 5) & 0x1Fu) < (((_BYTE)v12 + 5) & 0x1Fu);
      }
    }
  }

  return pxrInternal__aapl__pxrReserved__::TfDictionaryLessThan::_LessImpl(v4, v5, (uint64_t)v6);
}

void sub_216E1FAB0(void **a1)
{
  uint64_t v1 = (char *)*a1;
  if (*a1)
  {
    uint64_t v3 = (char *)a1[1];
    uint64_t v4 = v1;
    if (v3 != v1)
    {
      do
        uint64_t v3 = (char *)pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v4, (pxrInternal__aapl__pxrReserved__::SdfSpec *)(v3 - 8));
      while (v3 != v1);
      uint64_t v4 = *a1;
    }
    a1[1] = v1;
    operator delete(v4);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

uint64_t sub_216E1FB10(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t v2 = a2;
  if (sub_216A94450(a2))
  {
    uint64_t v4 = *((void *)v2 + 1);
    if ((v4 & 4) != 0) {
      uint64_t v2 = (pxrInternal__aapl__pxrReserved__::VtValue *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v4 & 0xFFFFFFFFFFFFFFF8) + 168))(v2);
    }
    **(_DWORD **)(a1 + 8) = *(_DWORD *)v2;
    return 1;
  }
  else
  {
    uint64_t result = sub_216A5F85C(v2);
    if (result)
    {
      uint64_t result = 1;
      *(unsigned char *)(a1 + 24) = 1;
    }
    else
    {
      *(unsigned char *)(a1 + 25) = 1;
    }
  }
  return result;
}

uint64_t sub_216E1FB94(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  if (sub_216A94450(a2))
  {
    **(_DWORD **)(a1 + 8) = sub_216E1FBFC(a2);
    return 1;
  }
  else
  {
    uint64_t result = sub_216A5F85C(a2);
    if (result)
    {
      uint64_t result = 1;
      *(unsigned char *)(a1 + 24) = 1;
    }
    else
    {
      *(unsigned char *)(a1 + 25) = 1;
    }
  }
  return result;
}

uint64_t sub_216E1FBFC(void *a1)
{
  uint64_t v2 = sub_216CDE44C(a1);
  uint64_t v3 = *v2;
  *uint64_t v2 = 0;
  uint64_t v4 = a1[1];
  if (v4) {
    BOOL v5 = (a1[1] & 3) == 3;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5) {
    (*(void (**)(void *))((v4 & 0xFFFFFFFFFFFFFFF8) + 32))(a1);
  }
  a1[1] = 0;
  return v3;
}

BOOL sub_216E1FC54(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, int a5, uint64_t a6, uint64_t (****a7)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v22);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v23);
  for (BOOL i = 1;
        *(void *)(a6 + 16) != *(void *)(a6 + 32) || *(void *)(a6 + 24) != *(void *)(a6 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a6))
  {
    if (i)
    {
      sub_216E0E77C(a6, a2, &v20);
      sub_21697DE94(&v22, &v20);
      sub_21697DEEC(&v23, &v21);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v21);
      sub_21697C414(&v20);
    }
    if (sub_216E15820(a7, *(uint64_t **)(a6 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v22, a3, a4))
    {
      BOOL v18 = 1;
      *((unsigned char *)a7 + 40) = 1;
      goto LABEL_19;
    }
    if (*((unsigned char *)a7 + 40))
    {
      BOOL v18 = 1;
      goto LABEL_19;
    }
  }
  if (a5)
  {
    BOOL v16 = *(atomic_ullong **)(a1 + 24);
    uint64_t explicit = atomic_load_explicit(v16 + 7, memory_order_acquire);
    if (!explicit) {
      uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v16);
    }
    *((unsigned char *)a7 + 40) = sub_216E156AC(explicit, a2, a3, a4, *a7);
  }
  BOOL v18 = *((unsigned char *)a7 + 40) != 0;
LABEL_19:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v23);
  sub_21697C414(&v22);
  return v18;
}

void sub_216E1FDD4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_216E1FDFC(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, int a4, pxrInternal__aapl__pxrReserved__::VtValue **a5)
{
  uint64_t v36 = *MEMORY[0x263EF8340];
  int v10 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92090, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92090))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B92088, &dword_216758000);
    __cxa_guard_release(&qword_267B92090);
  }
  if (*(int *)a1 < 2) {
    unsigned int v11 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B92088;
  }
  else {
    unsigned int v11 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v10);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v21, PrimIndex, 1);
  if (!sub_216E23768((uint64_t)v10, v11, a2, a3, a4, (uint64_t)v21, (uint64_t)a5)) {
    return 0;
  }
  uint64_t Typeid = pxrInternal__aapl__pxrReserved__::VtValue::GetTypeid(*a5);
  if (sub_21677EC50(Typeid, (uint64_t)&stru_26C755180))
  {
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v29);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v30);
    if (v22 != v24 || v23 != v25)
    {
      sub_216E0E77C((uint64_t)v21, v11, (int *)&v34);
      sub_21697DE94(&v29, (int *)&v34);
      sub_21697DEEC(&v30, (int *)&v34 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v34 + 1);
      sub_21697C414(&v34);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    if (a4) {
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    BOOL v15 = v31 != v32;
    if (v31 != v32)
    {
      uint64_t v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      uint64_t v35 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::ApplyOperations();
    }
LABEL_56:
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v30);
    sub_21697C414(&v29);
    unint64_t v34 = (void **)&v31;
    sub_216E16FC0(&v34);
    return v15;
  }
  if (sub_21677EC50(Typeid, (uint64_t)&stru_26C755190))
  {
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v29);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v30);
    if (v22 != v24 || v23 != v25)
    {
      sub_216E0E77C((uint64_t)v21, v11, (int *)&v34);
      sub_21697DE94(&v29, (int *)&v34);
      sub_21697DEEC(&v30, (int *)&v34 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v34 + 1);
      sub_21697C414(&v34);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    if (a4) {
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    BOOL v15 = v31 != v32;
    if (v31 != v32)
    {
      uint64_t v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      uint64_t v35 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::ApplyOperations();
    }
    goto LABEL_56;
  }
  if (sub_21677EC50(Typeid, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v29);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v30);
    if (v22 != v24 || v23 != v25)
    {
      sub_216E0E77C((uint64_t)v21, v11, (int *)&v34);
      sub_21697DE94(&v29, (int *)&v34);
      sub_21697DEEC(&v30, (int *)&v34 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v34 + 1);
      sub_21697C414(&v34);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    if (a4) {
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    BOOL v15 = v31 != v32;
    if (v31 != v32)
    {
      uint64_t v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      uint64_t v35 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::ApplyOperations();
    }
    goto LABEL_56;
  }
  if (sub_21677EC50(Typeid, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v29);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v30);
    if (v22 != v24 || v23 != v25)
    {
      sub_216E0E77C((uint64_t)v21, v11, (int *)&v34);
      sub_21697DE94(&v29, (int *)&v34);
      sub_21697DEEC(&v30, (int *)&v34 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v34 + 1);
      sub_21697C414(&v34);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    if (a4) {
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    BOOL v15 = v31 != v32;
    if (v31 != v32)
    {
      uint64_t v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      uint64_t v35 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::ApplyOperations();
    }
    goto LABEL_56;
  }
  if (sub_21677EC50(Typeid, (uint64_t)&stru_26C7551C0)) {
    return sub_216E2390C((uint64_t)v10, v11, (uint64_t)a2, a4, v21);
  }
  if (!sub_21677EC50(Typeid, (uint64_t)&stru_26C7551D0)) {
    return 1;
  }
  return sub_216E23F38((uint64_t)v10, v11, (uint64_t)a2, a4, v21);
}

void sub_216E21254(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

void sub_216E215DC(const pxrInternal__aapl__pxrReserved__::VtDictionary ***a1, uint64_t a2, void *a3, const pxrInternal__aapl__pxrReserved__::TfToken *a4, const pxrInternal__aapl__pxrReserved__::TfToken *a5)
{
  uint64_t Typeid = pxrInternal__aapl__pxrReserved__::VtValue::GetTypeid((pxrInternal__aapl__pxrReserved__::VtValue *)*a1);
  if (!strcmp((const char *)(0x8000000217473E6ALL & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(void *)(Typeid + 8) & 0x7FFFFFFFFFFFFFFFLL)))
  {
    BOOL v16 = (*a1)[1];
    if ((v16 & 4) != 0) {
      char v17 = (const pxrInternal__aapl__pxrReserved__::VtDictionary *)(*(uint64_t (**)(void))(((unint64_t)v16 & 0xFFFFFFFFFFFFFFF8)
    }
                                                                                         + 168))();
    else {
      char v17 = **a1;
    }
    pxrInternal__aapl__pxrReserved__::VtDictionary::VtDictionary((pxrInternal__aapl__pxrReserved__::VtDictionary *)__p, v17);
    if (sub_216E21D30(a2, a3, a4, a5, (pxrInternal__aapl__pxrReserved__::VtValue *)*a1))
    {
      *((unsigned char *)a1 + 40) = 1;
      uint64_t v18 = pxrInternal__aapl__pxrReserved__::VtValue::GetTypeid((pxrInternal__aapl__pxrReserved__::VtValue *)*a1);
      if (!strcmp((const char *)(0x8000000217473E6ALL & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(void *)(v18 + 8) & 0x7FFFFFFFFFFFFFFFLL)))
      {
        uint64_t v19 = (*a1)[1];
        if ((v19 & 4) != 0) {
          int v20 = (const char **)(*(uint64_t (**)(void))(((unint64_t)v19 & 0xFFFFFFFFFFFFFFF8) + 168))();
        }
        else {
          int v20 = (const char **)**a1;
        }
        pxrInternal__aapl__pxrReserved__::VtDictionaryOverRecursive((pxrInternal__aapl__pxrReserved__ *)__p, v20, 0);
        int v21 = (uint64_t *)sub_2168EEFE0((const void *****)*a1);
        pxrInternal__aapl__pxrReserved__::VtDictionary::swap(v21, (pxrInternal__aapl__pxrReserved__::VtDictionary *)__p);
      }
    }
    sub_2168EBBB8((void ***)__p, 0);
  }
  else if (sub_216E21C10((pxrInternal__aapl__pxrReserved__::VtValue **)a1))
  {
    memset(v63, 0, sizeof(v63));
    *(_OWORD *)uint64_t v61 = 0u;
    memset(v62, 0, sizeof(v62));
    uint64_t v60 = 0;
    long long v58 = 0u;
    long long v59 = 0u;
    uint64_t v11 = pxrInternal__aapl__pxrReserved__::VtValue::GetTypeid((pxrInternal__aapl__pxrReserved__::VtValue *)*a1);
    int v12 = strcmp((const char *)(0x8000000217478EC2 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(void *)(v11 + 8) & 0x7FFFFFFFFFFFFFFFLL));
    unsigned int v13 = (pxrInternal__aapl__pxrReserved__::VtValue *)*a1;
    BOOL v14 = (*a1)[1];
    if (v12)
    {
      if ((v14 & 4) != 0) {
        BOOL v15 = (long long *)(*(uint64_t (**)(void))(((unint64_t)v14 & 0xFFFFFFFFFFFFFFF8) + 168))();
      }
      else {
        BOOL v15 = *(long long **)v13;
      }
      sub_216C45C64((uint64_t)&v58, v15);
    }
    else
    {
      if ((v14 & 4) != 0) {
        uint64_t v22 = (const std::string *)(*(uint64_t (**)(void))(((unint64_t)v14 & 0xFFFFFFFFFFFFFFF8) + 168))();
      }
      else {
        uint64_t v22 = *(const std::string **)v13;
      }
      if (v61 != (void **)v22)
      {
        sub_216825D78((char *)v61, v22->__r_.__value_.__l.__data_, v22->__r_.__value_.__l.__size_, (uint64_t)(v22->__r_.__value_.__l.__size_ - v22->__r_.__value_.__r.__words[0]) >> 2);
        sub_216B01A9C((uint64_t)v62 + 8, (uint64_t)v22[1].__r_.__value_.__l.__data_, v22[1].__r_.__value_.__l.__size_, (uint64_t)(v22[1].__r_.__value_.__l.__size_ - v22[1].__r_.__value_.__r.__words[0]) >> 5);
        sub_216B01C6C((uint64_t)v63, (uint64_t)v22[2].__r_.__value_.__l.__data_, v22[2].__r_.__value_.__l.__size_, (uint64_t)(v22[2].__r_.__value_.__l.__size_ - v22[2].__r_.__value_.__r.__words[0]) >> 6);
      }
      std::string::operator=(&v63[1], v22 + 3);
    }
    if (sub_216E21D30(a2, a3, a4, a5, (pxrInternal__aapl__pxrReserved__::VtValue *)*a1))
    {
      *((unsigned char *)a1 + 40) = 1;
      if (v12)
      {
        uint64_t v25 = (*a1)[1];
        if ((v25 & 4) != 0) {
          uint64_t v26 = (*(uint64_t (**)(void))(((unint64_t)v25 & 0xFFFFFFFFFFFFFFF8) + 168))();
        }
        else {
          uint64_t v26 = (uint64_t)**a1;
        }
        long long v27 = *(_OWORD *)(v26 + 16);
        long long v55 = *(_OWORD *)v26;
        long long v56 = v27;
        uint64_t v28 = *(void *)(v26 + 32);
        uint64_t v57 = v28;
        if (v28)
        {
          int v29 = (atomic_ullong *)(v28 - 16);
          if (*((void *)&v56 + 1)) {
            int v29 = (atomic_ullong *)*((void *)&v56 + 1);
          }
          atomic_fetch_add_explicit(v29, 1uLL, memory_order_relaxed);
        }
        if ((void)v55 == (void)v58)
        {
          sub_2169B8E9C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v58, v23, v24);
          uint64_t v30 = v60;
          sub_2169B8E9C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v58, v31, v32);
          uint64_t v33 = v60;
          uint64_t v34 = v58;
          sub_2169B8E9C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v55, v35, v36);
          uint64_t v54 = v57;
          sub_2169B8E9C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v58, v37, v38);
          uint64_t v39 = v33 + 96 * v34;
          if (v30 != v39)
          {
            uint64_t v40 = 0;
            uint64_t v41 = v60;
            do
            {
              sub_216E21C90(v30 + v40, (const std::string *)(v54 + v40), (uint64_t)__p);
              uint64_t v42 = *(void **)(v41 + v40);
              if (v42)
              {
                *(void *)(v41 + v40 + 8) = v42;
                operator delete(v42);
              }
              uint64_t v43 = v41 + v40;
              *(_OWORD *)uint64_t v43 = *(_OWORD *)__p;
              *(void *)(v43 + 16) = v65;
              __p[0] = 0;
              __p[1] = 0;
              uint64_t v65 = 0;
              sub_2169B59AC((void **)(v41 + v40 + 24));
              *(_OWORD *)(v43 + 24) = v66;
              *(void *)(v43 + 40) = v67;
              long long v66 = 0uLL;
              uint64_t v67 = 0;
              sub_2169B5A6C((void **)(v41 + v40 + 48));
              *(std::string *)(v43 + 48) = v68;
              memset(&v68, 0, sizeof(v68));
              unint64_t v44 = (void **)(v41 + v40 + 72);
              if (*(char *)(v41 + v40 + 95) < 0) {
                operator delete(*v44);
              }
              long long v45 = *(_OWORD *)&v69.__r_.__value_.__l.__data_;
              *(void *)(v43 + 88) = *((void *)&v69.__r_.__value_.__l + 2);
              *(_OWORD *)unint64_t v44 = v45;
              *((unsigned char *)&v69.__r_.__value_.__s + 23) = 0;
              v69.__r_.__value_.__s.__data_[0] = 0;
              v70[0] = (void **)&v68;
              sub_2169B81EC(v70);
              v70[0] = (void **)&v66;
              sub_2169B74B8(v70);
              if (__p[0])
              {
                __p[1] = __p[0];
                operator delete(__p[0]);
              }
              v40 += 96;
            }
            while (v30 + v40 != v39);
          }
        }
        uint64_t v46 = sub_216B50650(*a1);
        uint64_t v47 = *(void *)(v46 + 32);
        unint64_t v48 = v59;
        *(void *)(v46 + 32) = v60;
        uint64_t v60 = v47;
        long long v49 = *(_OWORD *)v46;
        *(_OWORD *)uint64_t v46 = v58;
        uint64_t v50 = *(void *)(v46 + 16);
        uint64_t v51 = *(void *)(v46 + 24);
        *(_OWORD *)(v46 + 16) = __PAIR128__(*((unint64_t *)&v59 + 1), v48);
        long long v58 = v49;
        *(void *)&long long v59 = v50;
        *((void *)&v59 + 1) = v51;
        sub_2169B88CC(&v55);
      }
      else
      {
        unint64_t v52 = (*a1)[1];
        if ((v52 & 4) != 0) {
          uint64_t v53 = (const std::string *)(*(uint64_t (**)(void))(((unint64_t)v52 & 0xFFFFFFFFFFFFFFF8) + 168))();
        }
        else {
          uint64_t v53 = (const std::string *)**a1;
        }
        pxrInternal__aapl__pxrReserved__::SdfPathExpression::ComposeOver((uint64_t)v61, v53, (uint64_t)__p);
        if (v61[0])
        {
          v61[1] = v61[0];
          operator delete(v61[0]);
        }
        *(_OWORD *)uint64_t v61 = *(_OWORD *)__p;
        *(void *)&v62[0] = v65;
        __p[1] = 0;
        uint64_t v65 = 0;
        __p[0] = 0;
        sub_2169B59AC((void **)v62 + 1);
        *(_OWORD *)((char *)v62 + 8) = v66;
        *((void *)&v62[1] + 1) = v67;
        uint64_t v67 = 0;
        long long v66 = 0uLL;
        sub_2169B5A6C((void **)&v63[0].__r_.__value_.__l.__data_);
        v63[0] = v68;
        memset(&v68, 0, sizeof(v68));
        if (SHIBYTE(v63[1].__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v63[1].__r_.__value_.__l.__data_);
        }
        v63[1] = v69;
        *((unsigned char *)&v69.__r_.__value_.__s + 23) = 0;
        v69.__r_.__value_.__s.__data_[0] = 0;
        *(void *)&long long v55 = &v68;
        sub_2169B81EC((void ***)&v55);
        *(void *)&long long v55 = &v66;
        sub_2169B74B8((void ***)&v55);
        if (__p[0])
        {
          __p[1] = __p[0];
          operator delete(__p[0]);
        }
        sub_216B8EF88((uint64_t *)*a1, (uint64_t)v61);
      }
    }
    sub_2169B88CC(&v58);
    if (SHIBYTE(v63[1].__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v63[1].__r_.__value_.__l.__data_);
    }
    __p[0] = v63;
    sub_2169B81EC((void ***)__p);
    __p[0] = (char *)v62 + 8;
    sub_2169B74B8((void ***)__p);
    if (v61[0])
    {
      v61[1] = v61[0];
      operator delete(v61[0]);
    }
  }
  else
  {
    *((unsigned char *)a1 + 40) = sub_216E21D30(a2, a3, a4, a5, (pxrInternal__aapl__pxrReserved__::VtValue *)*a1);
  }
}

void sub_216E21BB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  sub_2169B88CC((uint64_t *)va);
  sub_216B02BDC((uint64_t)va, (uint64_t)va1);
  _Unwind_Resume(a1);
}

BOOL sub_216E21C10(pxrInternal__aapl__pxrReserved__::VtValue **a1)
{
  uint64_t Typeid = pxrInternal__aapl__pxrReserved__::VtValue::GetTypeid(*a1);
  if (!strcmp((const char *)(0x8000000217478EC2 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(void *)(Typeid + 8) & 0x7FFFFFFFFFFFFFFFLL)))return 1; {
  uint64_t v3 = pxrInternal__aapl__pxrReserved__::VtValue::GetTypeid(*a1);
  }
  return strcmp((const char *)(0x8000000217478EFALL & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(void *)(v3 + 8) & 0x7FFFFFFFFFFFFFFFLL)) == 0;
}

void sub_216E21C90(uint64_t a1@<X0>, const std::string *a2@<X1>, uint64_t a3@<X8>)
{
  sub_2169B70E4(v5, a1);
  pxrInternal__aapl__pxrReserved__::SdfPathExpression::ComposeOver((uint64_t)v5, a2, a3);
  if (v9 < 0) {
    operator delete(__p);
  }
  uint64_t v10 = (void **)&v7;
  sub_2169B81EC(&v10);
  uint64_t v10 = (void **)&v6;
  sub_2169B74B8(&v10);
  if (v5[0])
  {
    v5[1] = v5[0];
    operator delete(v5[0]);
  }
}

void sub_216E21D1C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_2169B5940((uint64_t)va);
  _Unwind_Resume(a1);
}

void *sub_216E21D30(uint64_t a1, void *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, const pxrInternal__aapl__pxrReserved__::TfToken *a4, pxrInternal__aapl__pxrReserved__::VtValue *a5)
{
  if (*(void *)a4) {
    return sub_216E21D44(a1, a2, a3, a4, a5);
  }
  else {
    return sub_216D801A4(a1, a2, a3, a5);
  }
}

void *sub_216E21D44(uint64_t a1, void *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, const pxrInternal__aapl__pxrReserved__::TfToken *a4, pxrInternal__aapl__pxrReserved__::VtValue *a5)
{
  uint64_t result = sub_2168CB120((void *)(a1 + 16), a2);
  if (result)
  {
    char v9 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)(result + 4);
    uint64_t v10 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)result[3];
    return (void *)pxrInternal__aapl__pxrReserved__::SdfLayer::HasFieldDictKey(v10, v9, a3, a4, a5);
  }
  return result;
}

uint64_t sub_216E21DB8(void **a1, void *a2, pxrInternal__aapl__pxrReserved__::PcpNodeRef *a3, uint64_t *a4, const pxrInternal__aapl__pxrReserved__::SdfPath *a5, const pxrInternal__aapl__pxrReserved__::TfToken *a6, const pxrInternal__aapl__pxrReserved__::TfToken *a7)
{
  uint64_t Typeid = pxrInternal__aapl__pxrReserved__::VtValue::GetTypeid((pxrInternal__aapl__pxrReserved__::VtValue *)*a1);
  if (!strcmp((const char *)(0x8000000217473E6ALL & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(void *)(Typeid + 8) & 0x7FFFFFFFFFFFFFFFLL)))
  {
    uint64_t v20 = (*a1)[1];
    if ((v20 & 4) != 0) {
      int v21 = (const pxrInternal__aapl__pxrReserved__::VtDictionary *)(*(uint64_t (**)(void))((v20 & 0xFFFFFFFFFFFFFFF8)
    }
                                                                                         + 168))();
    else {
      int v21 = (const pxrInternal__aapl__pxrReserved__::VtDictionary *)**a1;
    }
    pxrInternal__aapl__pxrReserved__::VtDictionary::VtDictionary((pxrInternal__aapl__pxrReserved__::VtDictionary *)&v87, v21);
    uint64_t v22 = sub_216E22924((pxrInternal__aapl__pxrReserved__::VtValue **)a1, a4, a5, a6, a7);
    if (v22)
    {
      LayerStack = (uint64_t *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetLayerStack(a3);
      uint64_t v24 = (pxrInternal__aapl__pxrReserved__::PcpLayerStack *)sub_216BBBFA8(LayerStack);
      uint64_t Identifier = pxrInternal__aapl__pxrReserved__::PcpLayerStack::GetIdentifier(v24);
      sub_216ABBA60((uint64_t *)v90, a4);
      sub_216E229B8((uint64_t)__p, a3, v90);
      uint64_t v26 = v90[1];
      if (v90[1] && atomic_fetch_add_explicit((atomic_uint *volatile)v90[1] + 2, 0xFFFFFFFF, memory_order_release) == 1) {
        (*(void (**)(void *))(*(void *)v26 + 8))(v26);
      }
      long long v27 = (pxrInternal__aapl__pxrReserved__::VtValue *)*a1;
      uint64_t v28 = (void *)*a4;
      v90[0] = a2;
      v90[1] = v28;
      sub_2168BD80C((uint64_t *)&v90[1]);
      sub_216981010(v91, a5);
      sub_21698105C((_DWORD *)v91 + 1, (_DWORD *)a5 + 1);
      *(_OWORD *)((char *)v91 + 8) = *(_OWORD *)a3;
      BOOL v29 = sub_216E22A28(a1 + 1, v27, (uint64_t)v90, Identifier + 32, (uint64_t)__p, *((unsigned char *)a1 + 41));
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v91 + 1);
      uint64_t v22 = v22;
      sub_21697C414(v91);
      sub_216ABB798((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)&v90[1]);
      if (v29)
      {
        uint64_t v30 = (*a1)[1];
        if ((v30 & 4) != 0) {
          uint64_t v31 = (const char **)(*(uint64_t (**)(void))((v30 & 0xFFFFFFFFFFFFFFF8) + 168))();
        }
        else {
          uint64_t v31 = (const char **)**a1;
        }
        pxrInternal__aapl__pxrReserved__::VtDictionaryOverRecursive((pxrInternal__aapl__pxrReserved__ *)&v87, v31, 0);
        uint64_t v32 = (uint64_t *)sub_2168EEFE0((const void *****)*a1);
        pxrInternal__aapl__pxrReserved__::VtDictionary::swap(v32, (pxrInternal__aapl__pxrReserved__::VtDictionary *)&v87);
      }
      uint64_t v33 = v95;
      if ((void)v95
        && atomic_fetch_add_explicit((atomic_uint *volatile)(v95 + 8), 0xFFFFFFFF, memory_order_release) == 1)
      {
        (*(void (**)(uint64_t))(*(void *)v33 + 8))(v33);
      }
    }
    sub_2168EBBB8((void ***)&v87, 0);
  }
  else if (sub_216E21C10((pxrInternal__aapl__pxrReserved__::VtValue **)a1))
  {
    memset(v92, 0, sizeof(v92));
    *(_OWORD *)uint64_t v90 = 0u;
    memset(v91, 0, sizeof(v91));
    v89 = 0;
    long long v87 = 0u;
    long long v88 = 0u;
    uint64_t v15 = pxrInternal__aapl__pxrReserved__::VtValue::GetTypeid((pxrInternal__aapl__pxrReserved__::VtValue *)*a1);
    int v16 = strcmp((const char *)(0x8000000217478EC2 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(void *)(v15 + 8) & 0x7FFFFFFFFFFFFFFFLL));
    char v17 = (pxrInternal__aapl__pxrReserved__::VtValue *)*a1;
    uint64_t v18 = (*a1)[1];
    if (v16)
    {
      if ((v18 & 4) != 0) {
        uint64_t v19 = (long long *)(*(uint64_t (**)(void))((v18 & 0xFFFFFFFFFFFFFFF8) + 168))();
      }
      else {
        uint64_t v19 = *(long long **)v17;
      }
      sub_216C45C64((uint64_t)&v87, v19);
    }
    else
    {
      if ((v18 & 4) != 0) {
        long long v45 = (const std::string *)(*(uint64_t (**)(void))((v18 & 0xFFFFFFFFFFFFFFF8) + 168))();
      }
      else {
        long long v45 = *(const std::string **)v17;
      }
      if (v90 != (void **)v45)
      {
        sub_216825D78((char *)v90, v45->__r_.__value_.__l.__data_, v45->__r_.__value_.__l.__size_, (uint64_t)(v45->__r_.__value_.__l.__size_ - v45->__r_.__value_.__r.__words[0]) >> 2);
        sub_216B01A9C((uint64_t)v91 + 8, (uint64_t)v45[1].__r_.__value_.__l.__data_, v45[1].__r_.__value_.__l.__size_, (uint64_t)(v45[1].__r_.__value_.__l.__size_ - v45[1].__r_.__value_.__r.__words[0]) >> 5);
        sub_216B01C6C((uint64_t)v92, (uint64_t)v45[2].__r_.__value_.__l.__data_, v45[2].__r_.__value_.__l.__size_, (uint64_t)(v45[2].__r_.__value_.__l.__size_ - v45[2].__r_.__value_.__r.__words[0]) >> 6);
      }
      std::string::operator=(&v92[1], v45 + 3);
    }
    uint64_t v22 = sub_216E22924((pxrInternal__aapl__pxrReserved__::VtValue **)a1, a4, a5, a6, a7);
    if (v22
      && sub_216E23234((pxrInternal__aapl__pxrReserved__::VtValue *)*a1, (uint64_t)(a1 + 1), a3))
    {
      if (v16)
      {
        uint64_t v48 = (*a1)[1];
        if ((v48 & 4) != 0) {
          uint64_t v49 = (*(uint64_t (**)(void))((v48 & 0xFFFFFFFFFFFFFFF8) + 168))();
        }
        else {
          uint64_t v49 = **a1;
        }
        long long v50 = *(_OWORD *)(v49 + 16);
        long long v84 = *(_OWORD *)v49;
        long long v85 = v50;
        uint64_t v51 = *(void *)(v49 + 32);
        uint64_t v86 = v51;
        if (v51)
        {
          unint64_t v52 = (atomic_ullong *)(v51 - 16);
          if (*((void *)&v85 + 1)) {
            unint64_t v52 = (atomic_ullong *)*((void *)&v85 + 1);
          }
          atomic_fetch_add_explicit(v52, 1uLL, memory_order_relaxed);
        }
        if ((void)v84 == (void)v87)
        {
          sub_2169B8E9C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v87, v46, v47);
          uint64_t v53 = v89;
          sub_2169B8E9C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v87, v54, v55);
          long long v56 = v89;
          uint64_t v57 = v87;
          sub_2169B8E9C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v84, v58, v59);
          uint64_t v83 = v86;
          sub_2169B8E9C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v87, v60, v61);
          unint64_t v82 = (pxrInternal__aapl__pxrReserved__::VtValue *)((char *)v56 + 96 * v57);
          if (v53 != v82)
          {
            uint64_t v62 = 0;
            unint64_t v63 = v89;
            do
            {
              sub_216E21C90((uint64_t)v53 + v62, (const std::string *)(v83 + v62), (uint64_t)__p);
              uint64_t v64 = *(void **)((char *)v63 + v62);
              if (v64)
              {
                *(void *)((char *)v63 + v62 + 8) = v64;
                operator delete(v64);
              }
              uint64_t v65 = (uint64_t)v63 + v62;
              *(_OWORD *)uint64_t v65 = *(_OWORD *)__p;
              *(void *)(v65 + 16) = v94;
              __p[0] = 0;
              __p[1] = 0;
              uint64_t v94 = 0;
              sub_2169B59AC((void **)((char *)v63 + v62 + 24));
              *(_OWORD *)(v65 + 24) = v95;
              *(void *)(v65 + 40) = v96;
              long long v95 = 0uLL;
              uint64_t v96 = 0;
              sub_2169B5A6C((void **)((char *)v63 + v62 + 48));
              *(std::string *)(v65 + 48) = v97;
              memset(&v97, 0, sizeof(v97));
              long long v66 = (void **)((char *)v63 + v62 + 72);
              if (*((char *)v63 + v62 + 95) < 0) {
                operator delete(*v66);
              }
              long long v67 = *(_OWORD *)&v98.__r_.__value_.__l.__data_;
              *(void *)(v65 + 88) = *((void *)&v98.__r_.__value_.__l + 2);
              *(_OWORD *)long long v66 = v67;
              *((unsigned char *)&v98.__r_.__value_.__s + 23) = 0;
              v98.__r_.__value_.__s.__data_[0] = 0;
              v99[0] = (void **)&v97;
              sub_2169B81EC(v99);
              v99[0] = (void **)&v95;
              sub_2169B74B8(v99);
              if (__p[0])
              {
                __p[1] = __p[0];
                operator delete(__p[0]);
              }
              v62 += 96;
            }
            while ((pxrInternal__aapl__pxrReserved__::VtValue *)((char *)v53 + v62) != v82);
          }
        }
        uint64_t v68 = sub_216B50650(*a1);
        std::string v69 = *(pxrInternal__aapl__pxrReserved__::VtValue **)(v68 + 32);
        unint64_t v70 = v88;
        *(void *)(v68 + 32) = v89;
        v89 = v69;
        long long v71 = *(_OWORD *)v68;
        *(_OWORD *)uint64_t v68 = v87;
        uint64_t v72 = *(void *)(v68 + 16);
        uint64_t v73 = *(void *)(v68 + 24);
        *(_OWORD *)(v68 + 16) = __PAIR128__(*((unint64_t *)&v88 + 1), v70);
        long long v87 = v71;
        *(void *)&long long v88 = v72;
        *((void *)&v88 + 1) = v73;
        sub_2169B88CC(&v84);
      }
      else
      {
        uint64_t v74 = (*a1)[1];
        if ((v74 & 4) != 0) {
          unint64_t v75 = (const std::string *)(*(uint64_t (**)(void))((v74 & 0xFFFFFFFFFFFFFFF8) + 168))();
        }
        else {
          unint64_t v75 = (const std::string *)**a1;
        }
        pxrInternal__aapl__pxrReserved__::SdfPathExpression::ComposeOver((uint64_t)v90, v75, (uint64_t)__p);
        if (v90[0])
        {
          v90[1] = v90[0];
          operator delete(v90[0]);
        }
        *(_OWORD *)uint64_t v90 = *(_OWORD *)__p;
        *(void *)&v91[0] = v94;
        __p[1] = 0;
        uint64_t v94 = 0;
        __p[0] = 0;
        sub_2169B59AC((void **)v91 + 1);
        *(_OWORD *)((char *)v91 + 8) = v95;
        *((void *)&v91[1] + 1) = v96;
        uint64_t v96 = 0;
        long long v95 = 0uLL;
        sub_2169B5A6C((void **)&v92[0].__r_.__value_.__l.__data_);
        v92[0] = v97;
        memset(&v97, 0, sizeof(v97));
        if (SHIBYTE(v92[1].__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v92[1].__r_.__value_.__l.__data_);
        }
        v92[1] = v98;
        *((unsigned char *)&v98.__r_.__value_.__s + 23) = 0;
        v98.__r_.__value_.__s.__data_[0] = 0;
        *(void *)&long long v84 = &v97;
        sub_2169B81EC((void ***)&v84);
        *(void *)&long long v84 = &v95;
        sub_2169B74B8((void ***)&v84);
        if (__p[0])
        {
          __p[1] = __p[0];
          operator delete(__p[0]);
        }
        sub_216B8EF88(*a1, (uint64_t)v90);
      }
    }
    sub_2169B88CC(&v87);
    if (SHIBYTE(v92[1].__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v92[1].__r_.__value_.__l.__data_);
    }
    __p[0] = v92;
    sub_2169B81EC((void ***)__p);
    __p[0] = (char *)v91 + 8;
    sub_2169B74B8((void ***)__p);
    if (v90[0])
    {
      v90[1] = v90[0];
      operator delete(v90[0]);
    }
  }
  else if (sub_216E22924((pxrInternal__aapl__pxrReserved__::VtValue **)a1, a4, a5, a6, a7))
  {
    uint64_t v34 = pxrInternal__aapl__pxrReserved__::VtValue::GetTypeid((pxrInternal__aapl__pxrReserved__::VtValue *)*a1);
    if (strcmp((const char *)(0x8000000217473E6ALL & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(void *)(v34 + 8) & 0x7FFFFFFFFFFFFFFFLL))&& !sub_216E21C10((pxrInternal__aapl__pxrReserved__::VtValue **)a1))
    {
      *((unsigned char *)a1 + 40) = 1;
    }
    uint64_t v35 = (uint64_t *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetLayerStack(a3);
    uint64_t v36 = (pxrInternal__aapl__pxrReserved__::PcpLayerStack *)sub_216BBBFA8(v35);
    uint64_t v37 = pxrInternal__aapl__pxrReserved__::PcpLayerStack::GetIdentifier(v36);
    sub_216ABBA60((uint64_t *)v90, a4);
    sub_216E229B8((uint64_t)__p, a3, v90);
    uint64_t v38 = v90[1];
    if (v90[1] && atomic_fetch_add_explicit((atomic_uint *volatile)v90[1] + 2, 0xFFFFFFFF, memory_order_release) == 1) {
      (*(void (**)(void *))(*(void *)v38 + 8))(v38);
    }
    uint64_t v81 = (pxrInternal__aapl__pxrReserved__::VtValue *)*a1;
    uint64_t v39 = (void *)*a4;
    v90[0] = a2;
    v90[1] = v39;
    sub_2168BD80C((uint64_t *)&v90[1]);
    sub_216981010(v91, a5);
    sub_21698105C((_DWORD *)v91 + 1, (_DWORD *)a5 + 1);
    *(_OWORD *)((char *)v91 + 8) = *(_OWORD *)a3;
    BOOL v40 = sub_216E22A28(a1 + 1, v81, (uint64_t)v90, v37 + 32, (uint64_t)__p, *((unsigned char *)a1 + 41));
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v91 + 1);
    sub_21697C414(v91);
    sub_216ABB798((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)&v90[1]);
    if (!v40)
    {
      uint64_t v41 = (pxrInternal__aapl__pxrReserved__::VtValue *)*a1;
      uint64_t v42 = pxrInternal__aapl__pxrReserved__::VtValue::GetTypeid((pxrInternal__aapl__pxrReserved__::VtValue *)*a1);
      if (!strcmp((const char *)(0x8000000217479096 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(void *)(v42 + 8) & 0x7FFFFFFFFFFFFFFFLL)))
      {
        if (!v97.__r_.__value_.__s.__data_[0])
        {
          v97.__r_.__value_.__s.__data_[0] = 1;
          *((void *)&v95 + 1) = sub_216C5617C((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)__p, &v94);
          uint64_t v96 = v76;
        }
        if (!pxrInternal__aapl__pxrReserved__::SdfLayerOffset::IsIdentity((pxrInternal__aapl__pxrReserved__::SdfLayerOffset *)((char *)&v95 + 8)))
        {
          v90[1] = 0;
          *(void *)&v91[0] = 0;
          v90[0] = &v90[1];
          v77 = (uint64_t *)sub_216A9E608((uint64_t *)v41);
          sub_2168A6B2C(v77, (uint64_t)v90);
          sub_216D16278((uint64_t)v90, (double *)&v95 + 1);
          uint64_t v78 = (uint64_t *)sub_216A9E608((uint64_t *)v41);
          sub_2168A6B2C(v78, (uint64_t)v90);
          sub_216997EC4((uint64_t)v90, (void *)v90[1]);
        }
      }
      else
      {
        uint64_t v43 = (pxrInternal__aapl__pxrReserved__::VtValue *)*a1;
        unint64_t v44 = (void *)*a4;
        v90[0] = a2;
        v90[1] = v44;
        sub_2168BD80C((uint64_t *)&v90[1]);
        sub_216981010(v91, a5);
        sub_21698105C((_DWORD *)v91 + 1, (_DWORD *)a5 + 1);
        *(_OWORD *)((char *)v91 + 8) = *(_OWORD *)a3;
        if ((sub_216E22DB0(v43, (const pxrInternal__aapl__pxrReserved__::ArResolverContext *)(v37 + 32), (uint64_t *)v90, *((unsigned __int8 *)a1 + 41)) & 1) == 0&& (sub_216E2301C((pxrInternal__aapl__pxrReserved__::VtValue *)*a1, (uint64_t)__p) & 1) == 0)
        {
          sub_216E23234((pxrInternal__aapl__pxrReserved__::VtValue *)*a1, (uint64_t)(a1 + 1), a3);
        }
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v91 + 1);
        sub_21697C414(v91);
        sub_216ABB798((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)&v90[1]);
      }
    }
    uint64_t v79 = v95;
    if ((void)v95
      && atomic_fetch_add_explicit((atomic_uint *volatile)(v95 + 8), 0xFFFFFFFF, memory_order_release) == 1)
    {
      (*(void (**)(uint64_t))(*(void *)v79 + 8))(v79);
    }
    return 1;
  }
  else
  {
    return 0;
  }
  return v22;
}

void sub_216E227BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va1, a11);
  va_start(va, a11);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  sub_2169B88CC((uint64_t *)va);
  sub_2169B5940((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_216E22924(pxrInternal__aapl__pxrReserved__::VtValue **a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, const pxrInternal__aapl__pxrReserved__::TfToken *a4, const pxrInternal__aapl__pxrReserved__::TfToken *a5)
{
  uint64_t v9 = *(void *)a5;
  uint64_t v10 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v11 = *a1;
  if (v9)
  {
    return pxrInternal__aapl__pxrReserved__::SdfLayer::HasFieldDictKey(v10, a3, a4, a5, v11);
  }
  else
  {
    uint64_t v13 = *a1;
    return pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v10, a3, a4, v13);
  }
}

uint64_t sub_216E229B8(uint64_t a1, _OWORD *a2, void *a3)
{
  *(_OWORD *)a1 = *a2;
  uint64_t v4 = a3[1];
  *(void *)(a1 + 16) = *a3;
  *(void *)(a1 + 24) = v4;
  if (v4) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v4 + 8), 1u, memory_order_relaxed);
  }
  pxrInternal__aapl__pxrReserved__::SdfLayerOffset::SdfLayerOffset((double *)(a1 + 32), 0.0, 1.0);
  *(unsigned char *)(a1 + 48) = 0;
  return a1;
}

void sub_216E22A10(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void *)(v1 + 24);
  if (v3) {
    sub_217324248(v3);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_216E22A28(void *a1, pxrInternal__aapl__pxrReserved__::VtValue *this, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t Typeid = pxrInternal__aapl__pxrReserved__::VtValue::GetTypeid(this);
  int v13 = strcmp((const char *)(0x8000000217473E6ALL & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(void *)(Typeid + 8) & 0x7FFFFFFFFFFFFFFFLL));
  if (!v13)
  {
    uint64_t v17 = 0;
    uint64_t v14 = (uint64_t *)sub_2168EEFE0((const void *****)this);
    pxrInternal__aapl__pxrReserved__::VtDictionary::swap(v14, (pxrInternal__aapl__pxrReserved__::VtDictionary *)&v17);
    uint64_t v24 = a5;
    char v23 = a6;
    if (a5)
    {
      uint64_t v18 = a4;
      uint64_t v19 = a3;
      uint64_t v20 = &v23;
      int v21 = &v24;
      uint64_t v22 = a1;
      sub_216E22B44((pxrInternal__aapl__pxrReserved__::VtDictionary *)&v17, (uint64_t)&v18);
    }
    else
    {
      uint64_t v18 = a4;
      uint64_t v19 = a3;
      uint64_t v20 = &v23;
      int v21 = a1;
      sub_216E22C84((pxrInternal__aapl__pxrReserved__::VtDictionary *)&v17, (uint64_t)&v18);
    }
    uint64_t v15 = (uint64_t *)sub_2168EEFE0((const void *****)this);
    pxrInternal__aapl__pxrReserved__::VtDictionary::swap(v15, (pxrInternal__aapl__pxrReserved__::VtDictionary *)&v17);
    sub_2168EBBB8(&v17, 0);
  }
  return v13 == 0;
}

void sub_216E22B2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

void *sub_216E22B44(pxrInternal__aapl__pxrReserved__::VtDictionary *a1, uint64_t a2)
{
  uint64_t v4 = pxrInternal__aapl__pxrReserved__::VtDictionary::begin(a1);
  uint64_t v6 = v5;
  uint64_t v21 = v4;
  uint64_t v22 = v5;
  uint64_t result = (void *)pxrInternal__aapl__pxrReserved__::VtDictionary::end(a1);
  uint64_t v9 = result;
  uint64_t v10 = v8;
  if (v8) {
    BOOL v11 = v4 == (void)result;
  }
  else {
    BOOL v11 = 1;
  }
  char v12 = v11;
  if (v6 != v8 || (v12 & 1) == 0)
  {
    do
    {
      int v13 = (const void *****)(v4 + 56);
      if (sub_2168EC434((pxrInternal__aapl__pxrReserved__::VtValue *)v13))
      {
        uint64_t v20 = 0;
        uint64_t v14 = (uint64_t *)sub_2168EEFE0(v13);
        pxrInternal__aapl__pxrReserved__::VtDictionary::swap(v14, (pxrInternal__aapl__pxrReserved__::VtDictionary *)&v20);
        sub_216E22B44(&v20, a2);
        uint64_t v15 = (uint64_t *)sub_2168EEFE0(v13);
        pxrInternal__aapl__pxrReserved__::VtDictionary::swap(v15, (pxrInternal__aapl__pxrReserved__::VtDictionary *)&v20);
        sub_2168EBBB8(&v20, 0);
      }
      else if ((sub_216E22DB0((pxrInternal__aapl__pxrReserved__::VtValue *)v13, *(const pxrInternal__aapl__pxrReserved__::ArResolverContext **)a2, *(uint64_t **)(a2 + 8), **(unsigned __int8 **)(a2 + 16)) & 1) == 0&& (sub_216E2301C((pxrInternal__aapl__pxrReserved__::VtValue *)v13, **(void **)(a2 + 24)) & 1) == 0)
      {
        sub_216E23234((pxrInternal__aapl__pxrReserved__::VtValue *)v13, *(void *)(a2 + 32), (pxrInternal__aapl__pxrReserved__::PcpNodeRef *)(*(void *)(a2 + 8) + 24));
      }
      uint64_t result = sub_2168EF1B0(&v21, v16, v17);
      uint64_t v4 = v21;
      if (v10) {
        BOOL v18 = v21 == (void)v9;
      }
      else {
        BOOL v18 = 1;
      }
      char v19 = v18;
    }
    while (v22 != v10 || (v19 & 1) == 0);
  }
  return result;
}

void sub_216E22C6C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_2168EBBB8((void ***)va, 0);
  _Unwind_Resume(a1);
}

void *sub_216E22C84(pxrInternal__aapl__pxrReserved__::VtDictionary *a1, uint64_t a2)
{
  uint64_t v4 = pxrInternal__aapl__pxrReserved__::VtDictionary::begin(a1);
  uint64_t v6 = v5;
  uint64_t v21 = v4;
  uint64_t v22 = v5;
  uint64_t result = (void *)pxrInternal__aapl__pxrReserved__::VtDictionary::end(a1);
  uint64_t v9 = result;
  uint64_t v10 = v8;
  if (v8) {
    BOOL v11 = v4 == (void)result;
  }
  else {
    BOOL v11 = 1;
  }
  char v12 = v11;
  if (v6 != v8 || (v12 & 1) == 0)
  {
    do
    {
      int v13 = (const void *****)(v4 + 56);
      if (sub_2168EC434((pxrInternal__aapl__pxrReserved__::VtValue *)v13))
      {
        uint64_t v20 = 0;
        uint64_t v14 = (uint64_t *)sub_2168EEFE0(v13);
        pxrInternal__aapl__pxrReserved__::VtDictionary::swap(v14, (pxrInternal__aapl__pxrReserved__::VtDictionary *)&v20);
        sub_216E22C84(&v20, a2);
        uint64_t v15 = (uint64_t *)sub_2168EEFE0(v13);
        pxrInternal__aapl__pxrReserved__::VtDictionary::swap(v15, (pxrInternal__aapl__pxrReserved__::VtDictionary *)&v20);
        sub_2168EBBB8(&v20, 0);
      }
      else if ((sub_216E22DB0((pxrInternal__aapl__pxrReserved__::VtValue *)v13, *(const pxrInternal__aapl__pxrReserved__::ArResolverContext **)a2, *(uint64_t **)(a2 + 8), **(unsigned __int8 **)(a2 + 16)) & 1) == 0)
      {
        sub_216E23234((pxrInternal__aapl__pxrReserved__::VtValue *)v13, *(void *)(a2 + 24), (pxrInternal__aapl__pxrReserved__::PcpNodeRef *)(*(void *)(a2 + 8) + 24));
      }
      uint64_t result = sub_2168EF1B0(&v21, v16, v17);
      uint64_t v4 = v21;
      if (v10) {
        BOOL v18 = v21 == (void)v9;
      }
      else {
        BOOL v18 = 1;
      }
      char v19 = v18;
    }
    while (v22 != v10 || (v19 & 1) == 0);
  }
  return result;
}

void sub_216E22D98(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_2168EBBB8((void ***)va, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_216E22DB0(pxrInternal__aapl__pxrReserved__::VtValue *a1, const pxrInternal__aapl__pxrReserved__::ArResolverContext *a2, uint64_t *a3, int a4)
{
  uint64_t Typeid = pxrInternal__aapl__pxrReserved__::VtValue::GetTypeid(a1);
  if (!strcmp((const char *)(0x800000021746880ALL & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(void *)(Typeid + 8) & 0x7FFFFFFFFFFFFFFFLL)))
  {
    pxrInternal__aapl__pxrReserved__::SdfAssetPath::SdfAssetPath((pxrInternal__aapl__pxrReserved__::SdfAssetPath *)v38);
    BOOL v11 = sub_216B8E5FC((long long **)a1);
    char v12 = (void *)*((void *)v11 + 2);
    long long v13 = *v11;
    uint64_t v14 = __p[0];
    *BOOL v11 = *(_OWORD *)v38;
    *((void *)v11 + 2) = v14;
    *(_OWORD *)uint64_t v38 = v13;
    __p[0] = v12;
    uint64_t v15 = *((void *)v11 + 5);
    long long v16 = *(long long *)((char *)v11 + 24);
    uint64_t v17 = v40;
    *(long long *)((char *)v11 + 24) = *(_OWORD *)&__p[1];
    *((void *)v11 + 5) = v17;
    *(_OWORD *)&__p[1] = v16;
    uint64_t v40 = v15;
    sub_216DE5A00(a3, a2, (uint64_t)v38, 1, a4);
    BOOL v18 = sub_216B8E5FC((long long **)a1);
    char v19 = (void *)*((void *)v18 + 2);
    long long v20 = *v18;
    uint64_t v21 = __p[0];
    *BOOL v18 = *(_OWORD *)v38;
    *((void *)v18 + 2) = v21;
    *(_OWORD *)uint64_t v38 = v20;
    __p[0] = v19;
    uint64_t v22 = *((void *)v18 + 5);
    long long v23 = *(long long *)((char *)v18 + 24);
    uint64_t v24 = v40;
    *(long long *)((char *)v18 + 24) = *(_OWORD *)&__p[1];
    *((void *)v18 + 5) = v24;
    *(_OWORD *)&__p[1] = v23;
    uint64_t v40 = v22;
    if (SHIBYTE(v22) < 0) {
      operator delete(__p[1]);
    }
    if (SHIBYTE(__p[0]) < 0) {
      operator delete(v38[0]);
    }
  }
  else
  {
    uint64_t v9 = pxrInternal__aapl__pxrReserved__::VtValue::GetTypeid(a1);
    if (strcmp((const char *)(0x800000021746883DLL & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(void *)(v9 + 8) & 0x7FFFFFFFFFFFFFFFLL)))
    {
      return 0;
    }
    *(_OWORD *)uint64_t v38 = 0u;
    memset(__p, 0, sizeof(__p));
    uint64_t v25 = sub_216B8E760(a1);
    uint64_t v26 = *(void **)(v25 + 32);
    *(void *)(v25 + 32) = 0;
    __p[2] = v26;
    long long v27 = *(_OWORD *)v25;
    *(_OWORD *)uint64_t v25 = *(_OWORD *)v38;
    uint64_t v28 = *(void **)(v25 + 16);
    BOOL v29 = *(void **)(v25 + 24);
    *(void *)(v25 + 16) = 0;
    *(void **)(v25 + 24) = __p[1];
    *(_OWORD *)uint64_t v38 = v27;
    __p[0] = v28;
    __p[1] = v29;
    sub_2169B49FC((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)v38, v30, v31);
    sub_216DE5A00(a3, a2, (uint64_t)__p[2], (uint64_t)v38[0], a4);
    uint64_t v32 = sub_216B8E760(a1);
    uint64_t v33 = *(void **)(v32 + 32);
    uint64_t v34 = __p[0];
    *(void **)(v32 + 32) = __p[2];
    __p[2] = v33;
    long long v35 = *(_OWORD *)v32;
    *(_OWORD *)uint64_t v32 = *(_OWORD *)v38;
    uint64_t v36 = *(void **)(v32 + 16);
    uint64_t v37 = *(void **)(v32 + 24);
    *(void *)(v32 + 16) = v34;
    *(void **)(v32 + 24) = __p[1];
    *(_OWORD *)uint64_t v38 = v35;
    __p[0] = v36;
    __p[1] = v37;
    sub_2169B4408(v38);
  }
  return 1;
}

void sub_216E22FE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
}

uint64_t sub_216E2301C(pxrInternal__aapl__pxrReserved__::VtValue *a1, uint64_t a2)
{
  uint64_t Typeid = pxrInternal__aapl__pxrReserved__::VtValue::GetTypeid(a1);
  if (!strcmp((const char *)(0x8000000217468BA7 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(void *)(Typeid + 8) & 0x7FFFFFFFFFFFFFFFLL)))
  {
    if (!*(unsigned char *)(a2 + 48))
    {
      *(unsigned char *)(a2 + 48) = 1;
      *(double *)(a2 + 32) = sub_216C5617C((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)a2, (uint64_t *)(a2 + 16));
      *(void *)(a2 + 4sub_2168EBBB8(&a9, 0) = v7;
    }
    uint64_t v8 = (double *)(a2 + 32);
    if (!pxrInternal__aapl__pxrReserved__::SdfLayerOffset::IsIdentity((pxrInternal__aapl__pxrReserved__::SdfLayerOffset *)v8))
    {
      uint64_t v9 = sub_216B8D9A4(a1);
      uint64_t v10 = *v9;
      *uint64_t v9 = 0;
      *(void *)&long long v31 = v10;
      *(void *)&long long v31 = pxrInternal__aapl__pxrReserved__::SdfLayerOffset::operator*(v8, (double *)&v31);
      BOOL v11 = sub_216B8D9A4(a1);
      *BOOL v11 = v31;
    }
  }
  else
  {
    uint64_t v5 = pxrInternal__aapl__pxrReserved__::VtValue::GetTypeid(a1);
    if (strcmp((const char *)(0x8000000217468BD9 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(void *)(v5 + 8) & 0x7FFFFFFFFFFFFFFFLL)))
    {
      return 0;
    }
    if (!*(unsigned char *)(a2 + 48))
    {
      *(unsigned char *)(a2 + 48) = 1;
      *(double *)(a2 + 32) = sub_216C5617C((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)a2, (uint64_t *)(a2 + 16));
      *(void *)(a2 + 4sub_2168EBBB8(&a9, 0) = v12;
    }
    long long v13 = (double *)(a2 + 32);
    if (!pxrInternal__aapl__pxrReserved__::SdfLayerOffset::IsIdentity((pxrInternal__aapl__pxrReserved__::SdfLayerOffset *)v13))
    {
      uint64_t v33 = 0;
      long long v31 = 0u;
      long long v32 = 0u;
      uint64_t v14 = sub_216B8DB90(a1);
      uint64_t v15 = *(double **)(v14 + 32);
      *(void *)(v14 + 32) = 0;
      uint64_t v33 = v15;
      long long v16 = *(_OWORD *)v14;
      *(_OWORD *)uint64_t v14 = v31;
      uint64_t v17 = *(void *)(v14 + 16);
      uint64_t v18 = *(void *)(v14 + 24);
      *(_OWORD *)(v14 + 16) = __PAIR128__(*((unint64_t *)&v32 + 1), 0);
      long long v31 = v16;
      *(void *)&long long v32 = v17;
      *((void *)&v32 + 1) = v18;
      sub_2169B1440((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v31, v19, v20);
      uint64_t v21 = v33;
      sub_2169B1440((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v31, v22, v23);
      uint64_t v24 = &v33[v31];
      while (v21 != v24)
      {
        *uint64_t v21 = pxrInternal__aapl__pxrReserved__::SdfLayerOffset::operator*(v13, v21);
        ++v21;
      }
      uint64_t v25 = sub_216B8DB90(a1);
      uint64_t v26 = *(double **)(v25 + 32);
      unint64_t v27 = v32;
      *(void *)(v25 + 32) = v33;
      uint64_t v33 = v26;
      long long v28 = *(_OWORD *)v25;
      *(_OWORD *)uint64_t v25 = v31;
      uint64_t v29 = *(void *)(v25 + 16);
      uint64_t v30 = *(void *)(v25 + 24);
      *(_OWORD *)(v25 + 16) = __PAIR128__(*((unint64_t *)&v32 + 1), v27);
      long long v31 = v28;
      *(void *)&long long v32 = v29;
      *((void *)&v32 + 1) = v30;
      sub_2168F83DC((uint64_t)&v31);
    }
  }
  return 1;
}

void sub_216E23218(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_216E23234(pxrInternal__aapl__pxrReserved__::VtValue *a1, uint64_t a2, pxrInternal__aapl__pxrReserved__::PcpNodeRef *a3)
{
  uint64_t Typeid = pxrInternal__aapl__pxrReserved__::VtValue::GetTypeid(a1);
  if (!strcmp((const char *)(0x8000000217478EC2 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(void *)(Typeid + 8) & 0x7FFFFFFFFFFFFFFFLL)))
  {
    memset(v54, 0, sizeof(v54));
    long long __p = 0u;
    memset(v53, 0, sizeof(v53));
    sub_216B8EF88((uint64_t *)a1, (uint64_t)&__p);
    MapToRoot = (pxrInternal__aapl__pxrReserved__::PcpMapExpression::_Node **)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetMapToRoot(a3);
    uint64_t v12 = pxrInternal__aapl__pxrReserved__::PcpMapExpression::Evaluate(MapToRoot, v10, v11);
    sub_216D16CFC((uint64_t)&v39, (uint64_t *)(a2 + 8), (_DWORD *)(a2 + 16));
    pxrInternal__aapl__pxrReserved__::UsdPrim::_GetProtoToInstancePathMap((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v39, v13, (uint64_t *)v44);
    sub_216DE683C(&__p, (uint64_t)v12, (uint64_t)v44, (uint64_t)v45);
    if ((void)__p)
    {
      *((void *)&__p + 1) = __p;
      operator delete((void *)__p);
    }
    long long __p = *(_OWORD *)v45;
    v53[0] = *(void *)v46;
    v45[1] = 0;
    *(void *)uint64_t v46 = 0;
    v45[0] = 0;
    sub_2169B59AC((void **)&v53[1]);
    *(_OWORD *)&v53[1] = *(_OWORD *)&v46[8];
    v53[3] = v47;
    *(void *)&v46[16] = 0;
    uint64_t v47 = 0;
    *(void *)&v46[8] = 0;
    sub_2169B5A6C((void **)v54);
    v54[0] = v48;
    *(void *)&v54[1] = v49;
    uint64_t v49 = 0;
    long long v48 = 0uLL;
    if (SHIBYTE(v54[2]) < 0) {
      operator delete(*((void **)&v54[1] + 1));
    }
    *(_OWORD *)((char *)&v54[1] + 8) = v50;
    *((void *)&v54[2] + 1) = v51;
    HIBYTE(v51) = 0;
    LOBYTE(v5sub_2168EBBB8(&a9, 0) = 0;
    v55[0] = (void **)&v48;
    sub_2169B81EC(v55);
    v55[0] = (void **)&v46[8];
    sub_2169B74B8(v55);
    if (v45[0])
    {
      v45[1] = v45[0];
      operator delete(v45[0]);
    }
    v55[0] = (void **)v44;
    sub_216BECE18(v55);
    if ((v43 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v43 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v42);
    sub_21697C414(&v41);
    if (v40) {
      sub_216D16E0C(v40);
    }
    sub_216B8EF88((uint64_t *)a1, (uint64_t)&__p);
    if (SHIBYTE(v54[2]) < 0) {
      operator delete(*((void **)&v54[1] + 1));
    }
    v45[0] = v54;
    sub_2169B81EC((void ***)v45);
    v45[0] = &v53[1];
    sub_2169B74B8((void ***)v45);
    if ((void)__p)
    {
      *((void *)&__p + 1) = __p;
      operator delete((void *)__p);
    }
  }
  else
  {
    uint64_t v7 = pxrInternal__aapl__pxrReserved__::VtValue::GetTypeid(a1);
    if (strcmp((const char *)(0x8000000217478EFALL & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(void *)(v7 + 8) & 0x7FFFFFFFFFFFFFFFLL)))
    {
      return 0;
    }
    *(_OWORD *)long long v45 = 0u;
    memset(v46, 0, sizeof(v46));
    uint64_t v14 = sub_216B50650(a1);
    uint64_t v15 = *(void *)(v14 + 32);
    *(void *)(v14 + 32) = 0;
    *(void *)&v46[16] = v15;
    long long v16 = *(_OWORD *)v14;
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v45;
    uint64_t v17 = *(void *)(v14 + 16);
    uint64_t v18 = *(void *)(v14 + 24);
    *(_OWORD *)(v14 + 16) = __PAIR128__(*(unint64_t *)&v46[8], 0);
    *(_OWORD *)long long v45 = v16;
    *(void *)uint64_t v46 = v17;
    *(void *)&v46[8] = v18;
    sub_216D16CFC((uint64_t)&__p, (uint64_t *)(a2 + 8), (_DWORD *)(a2 + 16));
    pxrInternal__aapl__pxrReserved__::UsdPrim::_GetProtoToInstancePathMap((pxrInternal__aapl__pxrReserved__::UsdPrim *)&__p, v19, &v39);
    if ((v53[1] & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v53[1] & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v53 + 1);
    sub_21697C414(v53);
    if (*((void *)&__p + 1)) {
      sub_216D16E0C(*((atomic_ullong **)&__p + 1));
    }
    long long v20 = (pxrInternal__aapl__pxrReserved__::PcpMapExpression::_Node **)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetMapToRoot(a3);
    long long v23 = pxrInternal__aapl__pxrReserved__::PcpMapExpression::Evaluate(v20, v21, v22);
    sub_2169B8E9C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)v45, v24, v25);
    uint64_t v26 = *(void *)&v46[16];
    sub_2169B8E9C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)v45, v27, v28);
    for (uint64_t i = *(void *)&v46[16] + 96 * (uint64_t)v45[0]; v26 != i; v26 += 96)
    {
      sub_216DE683C((void *)v26, (uint64_t)v23, (uint64_t)&v39, (uint64_t)&__p);
      uint64_t v30 = *(void **)v26;
      if (*(void *)v26)
      {
        *(void *)(v26 + 8) = v30;
        operator delete(v30);
        *(void *)uint64_t v26 = 0;
        *(void *)(v26 + 8) = 0;
        *(void *)(v26 + 16) = 0;
      }
      *(_OWORD *)uint64_t v26 = __p;
      *(void *)(v26 + 16) = v53[0];
      long long __p = 0uLL;
      v53[0] = 0;
      sub_2169B59AC((void **)(v26 + 24));
      *(_OWORD *)(v26 + 24) = *(_OWORD *)&v53[1];
      *(void *)(v26 + 4sub_2168EBBB8(&a9, 0) = v53[3];
      memset(&v53[1], 0, 24);
      sub_2169B5A6C((void **)(v26 + 48));
      *(_OWORD *)(v26 + 48) = v54[0];
      *(void *)(v26 + 64) = *(void *)&v54[1];
      memset(v54, 0, 24);
      long long v31 = (void **)(v26 + 72);
      if (*(char *)(v26 + 95) < 0) {
        operator delete(*v31);
      }
      long long v32 = *(_OWORD *)((char *)&v54[1] + 8);
      *(void *)(v26 + 88) = *((void *)&v54[2] + 1);
      *(_OWORD *)long long v31 = v32;
      HIBYTE(v54[2]) = 0;
      BYTE8(v54[1]) = 0;
      v44[0] = (void **)v54;
      sub_2169B81EC(v44);
      v44[0] = (void **)&v53[1];
      sub_2169B74B8(v44);
      if ((void)__p)
      {
        *((void *)&__p + 1) = __p;
        operator delete((void *)__p);
      }
    }
    uint64_t v33 = sub_216B50650(a1);
    uint64_t v34 = *(void *)(v33 + 32);
    unint64_t v35 = *(void *)v46;
    *(void *)(v33 + 32) = *(void *)&v46[16];
    *(void *)&v46[16] = v34;
    long long v36 = *(_OWORD *)v33;
    *(_OWORD *)uint64_t v33 = *(_OWORD *)v45;
    uint64_t v37 = *(void *)(v33 + 16);
    uint64_t v38 = *(void *)(v33 + 24);
    *(_OWORD *)(v33 + 16) = __PAIR128__(*(unint64_t *)&v46[8], v35);
    *(_OWORD *)long long v45 = v36;
    *(void *)uint64_t v46 = v37;
    *(void *)&v46[8] = v38;
    *(void *)&long long __p = &v39;
    sub_216BECE18((void ***)&__p);
    sub_2169B88CC(v45);
  }
  return 1;
}

void sub_216E236D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void **a29)
{
  a29 = (void **)&a10;
  sub_216BECE18(&a29);
  sub_2169B88CC(&a17);
  _Unwind_Resume(a1);
}

BOOL sub_216E23768(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, const pxrInternal__aapl__pxrReserved__::TfToken *a4, int a5, uint64_t a6, uint64_t a7)
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v26);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v27);
  char v14 = 0;
  for (BOOL i = 1;
        ;
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a6))
  {
    uint64_t v16 = *(void *)(a6 + 16);
    uint64_t v17 = *(void *)(a6 + 24);
    if (v16 == *(void *)(a6 + 32) && v17 == *(void *)(a6 + 40)) {
      break;
    }
    if (i)
    {
      sub_216E0E77C(a6, a2, (int *)v25);
      sub_21697DE94(&v26, (int *)v25);
      sub_21697DEEC(&v27, (int *)v25 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v25 + 1);
      sub_21697C414(v25);
      uint64_t v16 = *(void *)(a6 + 16);
      uint64_t v17 = *(void *)(a6 + 24);
    }
    uint64_t v19 = *(void **)a1;
    v25[0] = v16;
    v25[1] = v17;
    char v20 = sub_216E21DB8((void **)a7, v19, (pxrInternal__aapl__pxrReserved__::PcpNodeRef *)v25, *(uint64_t **)(a6 + 48), (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v26, a3, a4);
    if (*(unsigned char *)(a7 + 40)) {
      goto LABEL_15;
    }
    v14 |= v20;
  }
  if (a5)
  {
    uint64_t v21 = *(atomic_ullong **)(a1 + 24);
    uint64_t explicit = atomic_load_explicit(v21 + 7, memory_order_acquire);
    if (!explicit) {
      uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v21);
    }
    sub_216E215DC((const pxrInternal__aapl__pxrReserved__::VtDictionary ***)a7, explicit, a2, a3, a4);
  }
  if (v14)
  {
LABEL_15:
    BOOL v23 = 1;
    goto LABEL_17;
  }
  BOOL v23 = *(unsigned char *)(a7 + 40) != 0;
LABEL_17:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v27);
  sub_21697C414(&v26);
  return v23;
}

void sub_216E238E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

BOOL sub_216E2390C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, char a4, void *a5)
{
  v17[19] = *(void ***)MEMORY[0x263EF8340];
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v12);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v13);
  if (a5[2] != a5[4] || a5[3] != a5[5])
  {
    sub_216E0E77C((uint64_t)a5, a2, (int *)v17);
    sub_21697DE94(&v12, (int *)v17);
    sub_21697DEEC(&v13, (int *)v17 + 1);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v17 + 1);
    sub_21697C414(v17);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  if (a4) {
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  uint64_t v7 = v14;
  uint64_t v8 = v15;
  if (v14 != v15)
  {
    v17[3] = 0;
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::ApplyOperations();
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v13);
  sub_21697C414(&v12);
  v17[0] = (void **)&v14;
  sub_216E18898(v17);
  return v7 != v8;
}

void sub_216E23E4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  sub_216E183E4((uint64_t)&a38);
  sub_2169CBCC8((void **)(v50 - 248));
  sub_21697B754(&a48);
  *(void *)(v50 - 248) = &a50;
  sub_216E18898((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

BOOL sub_216E23F38(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, char a4, void *a5)
{
  v17[19] = *(void ***)MEMORY[0x263EF8340];
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v12);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v13);
  if (a5[2] != a5[4] || a5[3] != a5[5])
  {
    sub_216E0E77C((uint64_t)a5, a2, (int *)v17);
    sub_21697DE94(&v12, (int *)v17);
    sub_21697DEEC(&v13, (int *)v17 + 1);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v17 + 1);
    sub_21697C414(v17);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  if (a4) {
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  uint64_t v7 = v14;
  uint64_t v8 = v15;
  if (v14 != v15)
  {
    v17[3] = 0;
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::ApplyOperations();
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v13);
  sub_21697C414(&v12);
  v17[0] = (void **)&v14;
  sub_216E0CAB4(v17);
  return v7 != v8;
}

void sub_216E24478(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  sub_216E18930((uint64_t)&a38);
  sub_2169E0B70((void **)(v50 - 248));
  sub_21697B754(&a48);
  *(void *)(v50 - 248) = &a50;
  sub_216E0CAB4((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E24564(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, int a4, uint64_t (****a5)(void, uint64_t))
{
  uint64_t v36 = *MEMORY[0x263EF8340];
  uint64_t v10 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B920A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B920A0))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B92098, &dword_216758000);
    __cxa_guard_release(&qword_267B920A0);
  }
  if (*(int *)a1 < 2) {
    BOOL v11 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B92098;
  }
  else {
    BOOL v11 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v10);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v21, PrimIndex, 1);
  if (!sub_216E25D44((uint64_t)v10, v11, a2, a3, a4, (uint64_t)v21, a5)) {
    return 0;
  }
  uint64_t v13 = (uint64_t)(*a5)[2];
  if (sub_21677EC50(v13, (uint64_t)&stru_26C755180))
  {
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v29);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v30);
    if (v22 != v24 || v23 != v25)
    {
      sub_216E0E77C((uint64_t)v21, v11, (int *)&v34);
      sub_21697DE94(&v29, (int *)&v34);
      sub_21697DEEC(&v30, (int *)&v34 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v34 + 1);
      sub_21697C414(&v34);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    if (a4) {
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    BOOL v15 = v31 != v32;
    if (v31 != v32)
    {
      int v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      uint64_t v35 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::ApplyOperations();
    }
LABEL_56:
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v30);
    sub_21697C414(&v29);
    uint64_t v34 = (void **)&v31;
    sub_216E16FC0(&v34);
    return v15;
  }
  if (sub_21677EC50(v13, (uint64_t)&stru_26C755190))
  {
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v29);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v30);
    if (v22 != v24 || v23 != v25)
    {
      sub_216E0E77C((uint64_t)v21, v11, (int *)&v34);
      sub_21697DE94(&v29, (int *)&v34);
      sub_21697DEEC(&v30, (int *)&v34 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v34 + 1);
      sub_21697C414(&v34);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    if (a4) {
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    BOOL v15 = v31 != v32;
    if (v31 != v32)
    {
      int v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      uint64_t v35 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::ApplyOperations();
    }
    goto LABEL_56;
  }
  if (sub_21677EC50(v13, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v29);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v30);
    if (v22 != v24 || v23 != v25)
    {
      sub_216E0E77C((uint64_t)v21, v11, (int *)&v34);
      sub_21697DE94(&v29, (int *)&v34);
      sub_21697DEEC(&v30, (int *)&v34 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v34 + 1);
      sub_21697C414(&v34);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    if (a4) {
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    BOOL v15 = v31 != v32;
    if (v31 != v32)
    {
      int v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      uint64_t v35 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::ApplyOperations();
    }
    goto LABEL_56;
  }
  if (sub_21677EC50(v13, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v29);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v30);
    if (v22 != v24 || v23 != v25)
    {
      sub_216E0E77C((uint64_t)v21, v11, (int *)&v34);
      sub_21697DE94(&v29, (int *)&v34);
      sub_21697DEEC(&v30, (int *)&v34 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v34 + 1);
      sub_21697C414(&v34);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    if (a4) {
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    BOOL v15 = v31 != v32;
    if (v31 != v32)
    {
      int v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      uint64_t v35 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::ApplyOperations();
    }
    goto LABEL_56;
  }
  if (sub_21677EC50(v13, (uint64_t)&stru_26C7551C0)) {
    return sub_216E25EEC((uint64_t)v10, v11, (uint64_t)a2, a4, v21);
  }
  if (!sub_21677EC50(v13, (uint64_t)&stru_26C7551D0)) {
    return 1;
  }
  return sub_216E26518((uint64_t)v10, v11, (uint64_t)a2, a4, v21);
}

void sub_216E259BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

BOOL sub_216E25D44(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, int a5, uint64_t a6, uint64_t (****a7)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v22);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v23);
  for (BOOL i = 1;
        *(void *)(a6 + 16) != *(void *)(a6 + 32) || *(void *)(a6 + 24) != *(void *)(a6 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a6))
  {
    if (i)
    {
      sub_216E0E77C(a6, a2, &v20);
      sub_21697DE94(&v22, &v20);
      sub_21697DEEC(&v23, &v21);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v21);
      sub_21697C414(&v20);
    }
    if (sub_216E15820(a7, *(uint64_t **)(a6 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v22, a3, a4))
    {
      BOOL v18 = 1;
      *((unsigned char *)a7 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_19;
    }
    if (*((unsigned char *)a7 + 40))
    {
      BOOL v18 = 1;
      goto LABEL_19;
    }
  }
  if (a5)
  {
    uint64_t v16 = *(atomic_ullong **)(a1 + 24);
    uint64_t explicit = atomic_load_explicit(v16 + 7, memory_order_acquire);
    if (!explicit) {
      uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v16);
    }
    *((unsigned char *)a7 + 4sub_2168EBBB8(&a9, 0) = sub_216E156AC(explicit, a2, a3, a4, *a7);
  }
  BOOL v18 = *((unsigned char *)a7 + 40) != 0;
LABEL_19:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v23);
  sub_21697C414(&v22);
  return v18;
}

void sub_216E25EC4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

BOOL sub_216E25EEC(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, char a4, void *a5)
{
  v17[19] = *(void ***)MEMORY[0x263EF8340];
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v12);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v13);
  if (a5[2] != a5[4] || a5[3] != a5[5])
  {
    sub_216E0E77C((uint64_t)a5, a2, (int *)v17);
    sub_21697DE94(&v12, (int *)v17);
    sub_21697DEEC(&v13, (int *)v17 + 1);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v17 + 1);
    sub_21697C414(v17);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  if (a4) {
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  uint64_t v7 = v14;
  uint64_t v8 = v15;
  if (v14 != v15)
  {
    v17[3] = 0;
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::ApplyOperations();
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v13);
  sub_21697C414(&v12);
  v17[0] = (void **)&v14;
  sub_216E18898(v17);
  return v7 != v8;
}

void sub_216E2642C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  sub_216E183E4((uint64_t)&a38);
  sub_2169CBCC8((void **)(v50 - 248));
  sub_21697B754(&a48);
  *(void *)(v50 - 248) = &a50;
  sub_216E18898((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

BOOL sub_216E26518(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, char a4, void *a5)
{
  v17[19] = *(void ***)MEMORY[0x263EF8340];
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v12);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v13);
  if (a5[2] != a5[4] || a5[3] != a5[5])
  {
    sub_216E0E77C((uint64_t)a5, a2, (int *)v17);
    sub_21697DE94(&v12, (int *)v17);
    sub_21697DEEC(&v13, (int *)v17 + 1);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v17 + 1);
    sub_21697C414(v17);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  if (a4) {
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  uint64_t v7 = v14;
  uint64_t v8 = v15;
  if (v14 != v15)
  {
    v17[3] = 0;
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::ApplyOperations();
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v13);
  sub_21697C414(&v12);
  v17[0] = (void **)&v14;
  sub_216E0CAB4(v17);
  return v7 != v8;
}

void sub_216E26A58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  sub_216E18930((uint64_t)&a38);
  sub_2169E0B70((void **)(v50 - 248));
  sub_21697B754(&a48);
  *(void *)(v50 - 248) = &a50;
  sub_216E0CAB4((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E26B44(uint64_t a1, uint64_t *a2)
{
  if (sub_216995B54((pxrInternal__aapl__pxrReserved__::VtValue *)a2))
  {
    uint64_t v4 = a2[1];
    if ((v4 & 4) != 0) {
      uint64_t v5 = (*(uint64_t (**)(uint64_t *))((v4 & 0xFFFFFFFFFFFFFFF8) + 168))(a2);
    }
    else {
      uint64_t v5 = *a2;
    }
    uint64_t v6 = *(uint64_t ***)(a1 + 8);
    if (v6 != (uint64_t **)v5) {
      sub_216E26CA4(v6, *(void **)v5, (void *)(v5 + 8));
    }
    return 1;
  }
  else
  {
    uint64_t result = sub_216A5F85C((pxrInternal__aapl__pxrReserved__::VtValue *)a2);
    if (result)
    {
      uint64_t result = 1;
      *(unsigned char *)(a1 + 24) = 1;
    }
    else
    {
      *(unsigned char *)(a1 + 25) = 1;
    }
  }
  return result;
}

uint64_t sub_216E26BD4(uint64_t a1, uint64_t *a2)
{
  if (sub_216995B54((pxrInternal__aapl__pxrReserved__::VtValue *)a2))
  {
    sub_216E26F04(a2, &v10);
    uint64_t v4 = *(void *)(a1 + 8);
    uint64_t v5 = v4 + 8;
    sub_216997EC4(v4, *(void **)(v4 + 8));
    *(void *)uint64_t v4 = v10;
    uint64_t v6 = v11;
    *(void *)(v4 + 8) = v11;
    uint64_t v7 = v12;
    *(void *)(v4 + 16) = v12;
    if (v7)
    {
      uint64_t v8 = 0;
      v6[2] = v5;
      uint64_t v10 = &v11;
      BOOL v11 = 0;
      uint64_t v12 = 0;
    }
    else
    {
      *(void *)uint64_t v4 = v5;
      uint64_t v8 = v11;
    }
    sub_216997EC4((uint64_t)&v10, v8);
    return 1;
  }
  else
  {
    uint64_t result = sub_216A5F85C((pxrInternal__aapl__pxrReserved__::VtValue *)a2);
    if (result)
    {
      uint64_t result = 1;
      *(unsigned char *)(a1 + 24) = 1;
    }
    else
    {
      *(unsigned char *)(a1 + 25) = 1;
    }
  }
  return result;
}

uint64_t **sub_216E26CA4(uint64_t **result, void *a2, void *a3)
{
  uint64_t v5 = result;
  if (result[2])
  {
    uint64_t v6 = *result;
    uint64_t v7 = result[1];
    *uint64_t result = (uint64_t *)(result + 1);
    v7[2] = 0;
    result[1] = 0;
    result[2] = 0;
    if (v6[1]) {
      uint64_t v8 = (uint64_t *)v6[1];
    }
    else {
      uint64_t v8 = v6;
    }
    uint64_t v14 = result;
    uint64_t v15 = v8;
    uint64_t v16 = v8;
    if (v8)
    {
      uint64_t v15 = sub_216799E28((uint64_t)v8);
      if (a2 != a3)
      {
        uint64_t v9 = a2;
        do
        {
          v8[4] = v9[4];
          sub_2168EC6DC(v8 + 5, v9 + 5);
          sub_216938DC8(v5, (uint64_t)v16);
          uint64_t v8 = v15;
          uint64_t v16 = v15;
          if (v15) {
            uint64_t v15 = sub_216799E28((uint64_t)v15);
          }
          uint64_t v10 = (void *)v9[1];
          if (v10)
          {
            do
            {
              a2 = v10;
              uint64_t v10 = (void *)*v10;
            }
            while (v10);
          }
          else
          {
            do
            {
              a2 = (void *)v9[2];
              BOOL v11 = *a2 == (void)v9;
              uint64_t v9 = a2;
            }
            while (!v11);
          }
          if (!v8) {
            break;
          }
          uint64_t v9 = a2;
        }
        while (a2 != a3);
      }
    }
    uint64_t result = (uint64_t **)sub_216E26E14((uint64_t)&v14);
  }
  if (a2 != a3)
  {
    do
    {
      uint64_t result = (uint64_t **)sub_216E26E6C((uint64_t)v5, a2 + 4);
      uint64_t v12 = (void *)a2[1];
      if (v12)
      {
        do
        {
          int v13 = v12;
          uint64_t v12 = (void *)*v12;
        }
        while (v12);
      }
      else
      {
        do
        {
          int v13 = (void *)a2[2];
          BOOL v11 = *v13 == (void)a2;
          a2 = v13;
        }
        while (!v11);
      }
      a2 = v13;
    }
    while (v13 != a3);
  }
  return result;
}

void sub_216E26E00(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216E26E14((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_216E26E14(uint64_t a1)
{
  sub_216997EC4(*(void *)a1, *(void **)(a1 + 16));
  uint64_t v2 = *(void **)(a1 + 8);
  if (v2)
  {
    uint64_t v3 = (void *)v2[2];
    if (v3)
    {
      do
      {
        uint64_t v2 = v3;
        uint64_t v3 = (void *)v3[2];
      }
      while (v3);
      *(void *)(a1 + 8) = v2;
    }
    sub_216997EC4(*(void *)a1, v2);
  }
  return a1;
}

uint64_t *sub_216E26E6C(uint64_t a1, void *a2)
{
  sub_216997DF8(a1, a2, (uint64_t)v8);
  uint64_t v3 = (uint64_t **)(a1 + 8);
  uint64_t v4 = *(uint64_t **)(a1 + 8);
  if (v4)
  {
    do
    {
      while (1)
      {
        uint64_t v3 = (uint64_t **)v4;
        if (*((double *)v8[0] + 4) >= *((double *)v4 + 4)) {
          break;
        }
        uint64_t v4 = (uint64_t *)*v4;
        uint64_t v5 = v3;
        if (!*v3) {
          goto LABEL_8;
        }
      }
      uint64_t v4 = (uint64_t *)v4[1];
    }
    while (v4);
    uint64_t v5 = v3 + 1;
  }
  else
  {
    uint64_t v5 = (uint64_t **)(a1 + 8);
  }
LABEL_8:
  sub_21677B358((uint64_t **)a1, (uint64_t)v3, v5, v8[0]);
  uint64_t v6 = v8[0];
  v8[0] = 0;
  sub_216997E6C((uint64_t)v8, 0);
  return v6;
}

uint64_t *sub_216E26F04@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  a2[2] = 0;
  a2[1] = 0;
  *a2 = a2 + 1;
  uint64_t v4 = (uint64_t *)sub_216A9E608(a1);
  uint64_t result = sub_2168A6B2C(v4, (uint64_t)a2);
  uint64_t v6 = a1[1];
  if (v6) {
    BOOL v7 = (a1[1] & 3) == 3;
  }
  else {
    BOOL v7 = 1;
  }
  if (!v7) {
    uint64_t result = (uint64_t *)(*(uint64_t (**)(uint64_t *))((v6 & 0xFFFFFFFFFFFFFFF8) + 32))(a1);
  }
  a1[1] = 0;
  return result;
}

void sub_216E26F68(_Unwind_Exception *a1)
{
  sub_216997EC4(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t sub_216E26F80(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, int a4, uint64_t a5)
{
  uint64_t v36 = *MEMORY[0x263EF8340];
  uint64_t v10 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B920B0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B920B0))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B920A8, &dword_216758000);
    __cxa_guard_release(&qword_267B920B0);
  }
  if (*(int *)a1 < 2) {
    BOOL v11 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B920A8;
  }
  else {
    BOOL v11 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v10);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v21, PrimIndex, 1);
  if (!sub_216E28838((uint64_t)v10, v11, a2, a3, a4, (uint64_t)v21, a5)) {
    return 0;
  }
  uint64_t v13 = *(void *)(*(void *)a5 + 16);
  if (sub_21677EC50(v13, (uint64_t)&stru_26C755180))
  {
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v29);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v30);
    if (v22 != v24 || v23 != v25)
    {
      sub_216E0E77C((uint64_t)v21, v11, (int *)&v34);
      sub_21697DE94(&v29, (int *)&v34);
      sub_21697DEEC(&v30, (int *)&v34 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v34 + 1);
      sub_21697C414(&v34);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    if (a4) {
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    BOOL v15 = v31 != v32;
    if (v31 != v32)
    {
      int v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      uint64_t v35 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::ApplyOperations();
    }
LABEL_56:
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v30);
    sub_21697C414(&v29);
    uint64_t v34 = (void **)&v31;
    sub_216E16FC0(&v34);
    return v15;
  }
  if (sub_21677EC50(v13, (uint64_t)&stru_26C755190))
  {
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v29);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v30);
    if (v22 != v24 || v23 != v25)
    {
      sub_216E0E77C((uint64_t)v21, v11, (int *)&v34);
      sub_21697DE94(&v29, (int *)&v34);
      sub_21697DEEC(&v30, (int *)&v34 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v34 + 1);
      sub_21697C414(&v34);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    if (a4) {
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    BOOL v15 = v31 != v32;
    if (v31 != v32)
    {
      int v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      uint64_t v35 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::ApplyOperations();
    }
    goto LABEL_56;
  }
  if (sub_21677EC50(v13, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v29);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v30);
    if (v22 != v24 || v23 != v25)
    {
      sub_216E0E77C((uint64_t)v21, v11, (int *)&v34);
      sub_21697DE94(&v29, (int *)&v34);
      sub_21697DEEC(&v30, (int *)&v34 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v34 + 1);
      sub_21697C414(&v34);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    if (a4) {
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    BOOL v15 = v31 != v32;
    if (v31 != v32)
    {
      int v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      uint64_t v35 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::ApplyOperations();
    }
    goto LABEL_56;
  }
  if (sub_21677EC50(v13, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v29);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v30);
    if (v22 != v24 || v23 != v25)
    {
      sub_216E0E77C((uint64_t)v21, v11, (int *)&v34);
      sub_21697DE94(&v29, (int *)&v34);
      sub_21697DEEC(&v30, (int *)&v34 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v34 + 1);
      sub_21697C414(&v34);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    if (a4) {
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    BOOL v15 = v31 != v32;
    if (v31 != v32)
    {
      int v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      uint64_t v35 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::ApplyOperations();
    }
    goto LABEL_56;
  }
  if (sub_21677EC50(v13, (uint64_t)&stru_26C7551C0)) {
    return sub_216E289DC((uint64_t)v10, v11, (uint64_t)a2, a4, v21);
  }
  if (!sub_21677EC50(v13, (uint64_t)&stru_26C7551D0)) {
    return 1;
  }
  return sub_216E29008((uint64_t)v10, v11, (uint64_t)a2, a4, v21);
}

void sub_216E283D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E28760(uint64_t a1, pxrInternal__aapl__pxrReserved__::PcpNodeRef *a2, uint64_t *a3, pxrInternal__aapl__pxrReserved__::SdfPath *a4, const pxrInternal__aapl__pxrReserved__::TfToken *a5, uint64_t *a6)
{
  uint64_t v9 = sub_216E15820((uint64_t (****)(void, uint64_t))a1, a3, a4, a5, a6);
  if (v9)
  {
    *(unsigned char *)(a1 + 4sub_2168EBBB8(&a9, 0) = 1;
    v13[0] = sub_216E06358(a2, a3);
    v13[1] = v10;
    BOOL v11 = *(uint64_t (****)(void, uint64_t))a1;
    if (!pxrInternal__aapl__pxrReserved__::SdfLayerOffset::IsIdentity((pxrInternal__aapl__pxrReserved__::SdfLayerOffset *)v13))
    {
      v15[0] = 0;
      v15[1] = 0;
      uint64_t v14 = v15;
      sub_2168A6B2C((uint64_t *)v11[1], (uint64_t)&v14);
      sub_216D16278((uint64_t)&v14, v13);
      sub_2168A6B2C((uint64_t *)v11[1], (uint64_t)&v14);
      sub_216997EC4((uint64_t)&v14, v15[0]);
    }
  }
  return v9;
}

void sub_216E28820(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, void *a13)
{
}

BOOL sub_216E28838(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, int a5, uint64_t a6, uint64_t a7)
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v25);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v26);
  char v14 = 0;
  for (BOOL i = 1;
        ;
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a6))
  {
    uint64_t v16 = *(void *)(a6 + 16);
    uint64_t v17 = *(void *)(a6 + 24);
    if (v16 == *(void *)(a6 + 32) && v17 == *(void *)(a6 + 40)) {
      break;
    }
    if (i)
    {
      sub_216E0E77C(a6, a2, (int *)v24);
      sub_21697DE94(&v25, (int *)v24);
      sub_21697DEEC(&v26, (int *)v24 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v24 + 1);
      sub_21697C414(v24);
      uint64_t v16 = *(void *)(a6 + 16);
      uint64_t v17 = *(void *)(a6 + 24);
    }
    v24[0] = v16;
    v24[1] = v17;
    char v19 = sub_216E28760(a7, (pxrInternal__aapl__pxrReserved__::PcpNodeRef *)v24, *(uint64_t **)(a6 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v25, a3, a4);
    if (*(unsigned char *)(a7 + 40)) {
      goto LABEL_15;
    }
    v14 |= v19;
  }
  if (a5)
  {
    int v20 = *(atomic_ullong **)(a1 + 24);
    uint64_t explicit = atomic_load_explicit(v20 + 7, memory_order_acquire);
    if (!explicit) {
      uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v20);
    }
    *(unsigned char *)(a7 + 4sub_2168EBBB8(&a9, 0) = sub_216E156AC(explicit, a2, a3, a4, *(uint64_t (****)(void, uint64_t))a7);
  }
  if (v14)
  {
LABEL_15:
    BOOL v22 = 1;
    goto LABEL_17;
  }
  BOOL v22 = *(unsigned char *)(a7 + 40) != 0;
LABEL_17:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v26);
  sub_21697C414(&v25);
  return v22;
}

void sub_216E289B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

BOOL sub_216E289DC(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, char a4, void *a5)
{
  v17[19] = *(void ***)MEMORY[0x263EF8340];
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v12);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v13);
  if (a5[2] != a5[4] || a5[3] != a5[5])
  {
    sub_216E0E77C((uint64_t)a5, a2, (int *)v17);
    sub_21697DE94(&v12, (int *)v17);
    sub_21697DEEC(&v13, (int *)v17 + 1);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v17 + 1);
    sub_21697C414(v17);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  if (a4) {
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  uint64_t v7 = v14;
  uint64_t v8 = v15;
  if (v14 != v15)
  {
    v17[3] = 0;
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::ApplyOperations();
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v13);
  sub_21697C414(&v12);
  v17[0] = (void **)&v14;
  sub_216E18898(v17);
  return v7 != v8;
}

void sub_216E28F1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  sub_216E183E4((uint64_t)&a38);
  sub_2169CBCC8((void **)(v50 - 248));
  sub_21697B754(&a48);
  *(void *)(v50 - 248) = &a50;
  sub_216E18898((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

BOOL sub_216E29008(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, char a4, void *a5)
{
  v17[19] = *(void ***)MEMORY[0x263EF8340];
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v12);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v13);
  if (a5[2] != a5[4] || a5[3] != a5[5])
  {
    sub_216E0E77C((uint64_t)a5, a2, (int *)v17);
    sub_21697DE94(&v12, (int *)v17);
    sub_21697DEEC(&v13, (int *)v17 + 1);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v17 + 1);
    sub_21697C414(v17);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  if (a4) {
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  uint64_t v7 = v14;
  uint64_t v8 = v15;
  if (v14 != v15)
  {
    v17[3] = 0;
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::ApplyOperations();
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v13);
  sub_21697C414(&v12);
  v17[0] = (void **)&v14;
  sub_216E0CAB4(v17);
  return v7 != v8;
}

void sub_216E29548(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  sub_216E18930((uint64_t)&a38);
  sub_2169E0B70((void **)(v50 - 248));
  sub_21697B754(&a48);
  *(void *)(v50 - 248) = &a50;
  sub_216E0CAB4((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

BOOL sub_216E29634(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, int a4, unsigned char *a5)
{
  uint64_t v9 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B920C0, memory_order_acquire) & 1) == 0)
  {
    uint64_t v13 = a1;
    int v14 = __cxa_guard_acquire(&qword_267B920C0);
    a1 = v13;
    if (v14)
    {
      __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B920B8, &dword_216758000);
      __cxa_guard_release(&qword_267B920C0);
      a1 = v13;
    }
  }
  if (*(int *)a1 < 2) {
    double v10 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B920B8;
  }
  else {
    double v10 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v9);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v15, PrimIndex, 1);
  return sub_216E29878((uint64_t)v9, v10, a2, a3, a4, (uint64_t)v15, a5);
}

pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **sub_216E2973C(uint64_t a1, uint64_t a2, void *a3, const pxrInternal__aapl__pxrReserved__::TfToken *a4, const pxrInternal__aapl__pxrReserved__::TfToken *a5)
{
  *(unsigned char *)a1 = sub_216E21D30(a2, a3, a4, a5, 0);
  uint64_t result = *(pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter ***)(a1 + 8);
  if (result)
  {
    uint64_t v7 = *result;
    *uint64_t result = 0;
    uint64_t v8 = 0;
    sub_2168BD378((int)result, v7);
    return sub_216ABB798(&v8);
  }
  return result;
}

void sub_216E297A0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216ABB798((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_216E297B4(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, const pxrInternal__aapl__pxrReserved__::TfToken *a4, const pxrInternal__aapl__pxrReserved__::TfToken *a5)
{
  uint64_t v10 = *(void *)a5;
  BOOL v11 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  if (v10)
  {
    uint64_t result = pxrInternal__aapl__pxrReserved__::SdfLayer::HasFieldDictKey(v11, a3, a4, a5, 0);
    *(unsigned char *)a1 = result;
    if (!result) {
      return result;
    }
  }
  else
  {
    char HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v11, a3, a4, 0);
    *(unsigned char *)a1 = HasField;
    if ((HasField & 1) == 0) {
      return 0;
    }
  }
  int v14 = *(pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter ***)(a1 + 8);
  if (!v14) {
    return 1;
  }
  uint64_t v15 = *v14;
  *int v14 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *)*a2;
  sub_2168BD80C(a2);
  sub_2168BD378((int)v14, v15);
  return *(unsigned char *)a1 != 0;
}

BOOL sub_216E29878(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, const pxrInternal__aapl__pxrReserved__::TfToken *a4, int a5, uint64_t a6, unsigned char *a7)
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v24);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v25);
  char v14 = 0;
  for (BOOL i = 1;
        *(void *)(a6 + 16) != *(void *)(a6 + 32) || *(void *)(a6 + 24) != *(void *)(a6 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a6))
  {
    if (i)
    {
      sub_216E0E77C(a6, a2, &v22);
      sub_21697DE94(&v24, &v22);
      sub_21697DEEC(&v25, &v23);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v23);
      sub_21697C414(&v22);
    }
    char v17 = sub_216E297B4((uint64_t)a7, *(uint64_t **)(a6 + 48), (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v24, a3, a4);
    if (*a7) {
      goto LABEL_15;
    }
    v14 |= v17;
  }
  if (a5)
  {
    BOOL v18 = *(atomic_ullong **)(a1 + 24);
    uint64_t explicit = atomic_load_explicit(v18 + 7, memory_order_acquire);
    if (!explicit) {
      uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v18);
    }
    sub_216E2973C((uint64_t)a7, explicit, a2, a3, a4);
  }
  if (v14)
  {
LABEL_15:
    BOOL v20 = 1;
    goto LABEL_17;
  }
  BOOL v20 = *a7 != 0;
LABEL_17:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v25);
  sub_21697C414(&v24);
  return v20;
}

void sub_216E299E4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216E29A0C(uint64_t a1, _DWORD *a2, _DWORD *a3, void **a4, _DWORD *a5, uint64_t a6)
{
  BOOL v18 = 0;
  memset(v17, 0, sizeof(v17));
  uint64_t v8 = v17;
  if (a5) {
    uint64_t v8 = a5;
  }
  v16[0] = a2;
  v16[1] = a3;
  v16[2] = v8;
  if (a4)
  {
    __p[0] = *a4;
    sub_216E29B64(a1, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)a2, v16, (double *)__p, a6);
  }
  else
  {
    sub_216E29B64(a1, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)a2, v16, 0, a6);
  }
  BOOL v9 = sub_216C4B19C(16);
  if (v9
    && (a3[18] - 3) <= 1
    && pxrInternal__aapl__pxrReserved__::UsdStage::_GetVariability((pxrInternal__aapl__pxrReserved__::UsdStage *)v9, (const pxrInternal__aapl__pxrReserved__::UsdProperty *)a2) == 1&& sub_216C4B19C(16))
  {
    pxrInternal__aapl__pxrReserved__::UsdDescribe((uint64_t *)__p, (pxrInternal__aapl__pxrReserved__ *)a2, v10);
    uint64_t v13 = v15 >= 0 ? __p : (void **)__p[0];
    pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"Warning: detected time sample value on uniform attribute <%s>\n", v11, v12, v13);
    if (v15 < 0) {
      operator delete(__p[0]);
    }
  }
  if (v18) {
    sub_216784EC4(v18);
  }
}

void sub_216E29B2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,std::__shared_weak_count *a24)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a24) {
    sub_216784EC4(a24);
  }
  _Unwind_Resume(exception_object);
}

void sub_216E29B64(uint64_t a1, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2, _DWORD **a3, double *a4, uint64_t a5)
{
  uint64_t v10 = (atomic_ullong *)*((void *)a2 + 1);
  if (!v10 || (atomic_fetch_add_explicit(v10 + 6, 1uLL, memory_order_relaxed), atomic_ullong v11 = v10[7], (v11 & 0x800) != 0))
  {
    pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError((pxrInternal__aapl__pxrReserved__ *)v10, a2);
    atomic_ullong v11 = v10[7];
  }
  if ((v11 & 0x400) != 0)
  {
    char v15 = *(pxrInternal__aapl__pxrReserved__::Usd_ClipCache **)(a1 + 136);
    if ((v11 & 0x800) != 0) {
      pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError((pxrInternal__aapl__pxrReserved__ *)v10, a2);
    }
    ClipsForPrim = pxrInternal__aapl__pxrReserved__::Usd_ClipCache::GetClipsForPrim(v15, (const pxrInternal__aapl__pxrReserved__::SdfPath *)(v10 + 2));
    BOOL v18 = *(pxrInternal__aapl__pxrReserved__ **)(*(void *)a5 + 8);
    if (!v18 || (*((unsigned char *)v18 + 57) & 8) != 0) {
      pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(v18, v16);
    }
    PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v18);
    pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v21, PrimIndex, 0);
    BOOL v20 = sub_216D563F8(a2);
    sub_216E29E2C((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v21, v20, a3, a4, (void **)ClipsForPrim);
  }
  else
  {
    int v12 = *(pxrInternal__aapl__pxrReserved__ **)(*(void *)a5 + 8);
    if (!v12 || (*((unsigned char *)v12 + 57) & 8) != 0) {
      pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(v12, a2);
    }
    uint64_t v13 = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v12);
    pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v21, v13, 1);
    char v14 = sub_216D563F8(a2);
    sub_216E2A0CC((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v21, v14, a3, a4);
  }
  sub_216D16E0C(v10);
}

void sub_216E29CA8(_Unwind_Exception *a1)
{
  sub_216D16E0C(v1);
  _Unwind_Resume(a1);
}

_DWORD *sub_216E29CD0(uint64_t a1, _DWORD *a2, _DWORD **a3, uint64_t a4)
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v24);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v25);
  uint64_t v8 = *(pxrInternal__aapl__pxrReserved__ **)(*(void *)a4 + 8);
  if (!v8 || (*((unsigned char *)v8 + 57) & 8) != 0) {
    pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(v8, v7);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  for (BOOL i = 1;
        ;
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18))
  {
    uint64_t v12 = v19;
    uint64_t v13 = v20;
    if (v19 == v21 && v20 == v22) {
      break;
    }
    if (i)
    {
      char v15 = sub_216D563F8(a2);
      sub_216E0E77C((uint64_t)v18, v15, (int *)v17);
      sub_21697DE94(&v24, (int *)v17);
      sub_21697DEEC(&v25, (int *)v17 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v17 + 1);
      sub_21697C414(v17);
      uint64_t v12 = v19;
      uint64_t v13 = v20;
    }
    v17[0] = v12;
    v17[1] = v13;
    if (sub_216E2A688((uint64_t)a3, v23, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v24, (pxrInternal__aapl__pxrReserved__::PcpNodeRef *)v17))goto LABEL_14; {
  }
    }
  sub_216E2A49C(a3, v10);
LABEL_14:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v25);
  return sub_21697C414(&v24);
}

void sub_216E29E08(_Unwind_Exception *a1)
{
  sub_21697B754((_DWORD *)(v1 - 40));
  _Unwind_Resume(a1);
}

_DWORD *sub_216E29E2C(pxrInternal__aapl__pxrReserved__::Usd_Resolver *a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, _DWORD **a3, double *a4, void **a5)
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v29);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v30);
  uint64_t v26 = 0;
  uint64_t v27 = 0;
  uint64_t v28 = 0;
  atomic_ullong v11 = (void **)*((void *)a1 + 2);
  uint64_t v12 = (uint64_t *)*((void *)a1 + 3);
  if (v11 != *((void ***)a1 + 4) || v12 != *((uint64_t **)a1 + 5))
  {
    char v14 = 0;
    BOOL Layer = 1;
    do
    {
      if (Layer)
      {
        sub_216E0E77C((uint64_t)a1, a2, (int *)&v24);
        sub_21697DE94(&v29, (int *)&v24);
        sub_21697DEEC(&v30, (int *)&v24 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v24 + 1);
        sub_21697C414(&v24);
        uint64_t v16 = (uint64_t *)*((void *)a1 + 3);
        int v24 = (void **)*((void *)a1 + 2);
        int v25 = v16;
        if (!pxrInternal__aapl__pxrReserved__::PcpNodeRef::HasSpecs((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v24))
        {
          char v14 = 0;
          goto LABEL_14;
        }
        atomic_ullong v11 = (void **)*((void *)a1 + 2);
        uint64_t v12 = (uint64_t *)*((void *)a1 + 3);
      }
      else if ((v14 & 1) == 0)
      {
        goto LABEL_17;
      }
      char v17 = (uint64_t *)*((void *)a1 + 6);
      int v24 = v11;
      int v25 = v12;
      if (sub_216E2A1FC((uint64_t)a3, v17, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v29, (pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v24, a4))goto LABEL_29; {
      char v14 = 1;
      }
      if (!Layer) {
        goto LABEL_18;
      }
LABEL_14:
      uint64_t v18 = *((void *)a1 + 3);
      v23[0] = *((void *)a1 + 2);
      v23[1] = v18;
      sub_216E0FA94((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)v23, a5, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v29, (uint64_t *)&v24);
      sub_216C4CE90((uint64_t)&v26, (uint64_t *)v24, v25, ((char *)v25 - (char *)v24) >> 4);
      uint64_t v31 = &v24;
      sub_216787968((void ***)&v31);
      if (v14)
      {
        char v14 = 1;
        goto LABEL_18;
      }
      if (v26 != v27)
      {
LABEL_17:
        char v14 = 0;
LABEL_18:
        uint64_t v19 = v26;
        uint64_t v20 = v27;
        while (v19 != v20)
        {
          if (sub_216ABA3A0((uint64_t *)(*(void *)v19 + 48), *((void **)a1 + 6)))
          {
            uint64_t v21 = (uint64_t *)*((void *)a1 + 3);
            int v24 = (void **)*((void *)a1 + 2);
            int v25 = v21;
            if (sub_216E0FB5C((uint64_t)a3, v19, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v29, (pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v24, a4))goto LABEL_29; {
          }
            }
          v19 += 16;
        }
        BOOL Layer = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer(a1);
        goto LABEL_24;
      }
      pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextNode(a1);
      char v14 = 0;
      BOOL Layer = 1;
LABEL_24:
      uint64_t v12 = (uint64_t *)*((void *)a1 + 3);
      atomic_ullong v11 = (void **)*((void *)a1 + 2);
    }
    while (v11 != *((void ***)a1 + 4) || v12 != *((uint64_t **)a1 + 5));
  }
  sub_216E2A49C(a3, v10);
LABEL_29:
  int v24 = (void **)&v26;
  sub_216787968(&v24);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v30);
  return sub_21697C414(&v29);
}

void sub_216E2A06C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va2, a3);
  va_start(va1, a3);
  va_start(va, a3);
  va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  va_copy(va2, va1);
  uint64_t v8 = va_arg(va2, void);
  uint64_t v10 = va_arg(va2, void);
  uint64_t v11 = va_arg(va2, void);
  va_copy((va_list)v4, va1);
  sub_216787968((void ***)va);
  sub_21697B754(va2);
  _Unwind_Resume(a1);
}

_DWORD *sub_216E2A0CC(pxrInternal__aapl__pxrReserved__::Usd_Resolver *a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, _DWORD **a3, double *a4)
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v16);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v17);
  for (BOOL i = 1; ; BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer(a1))
  {
    uint64_t v10 = *((void *)a1 + 2);
    uint64_t v11 = *((void *)a1 + 3);
    if (v10 == *((void *)a1 + 4) && v11 == *((void *)a1 + 5)) {
      break;
    }
    if (i)
    {
      sub_216E0E77C((uint64_t)a1, a2, (int *)v15);
      sub_21697DE94(&v16, (int *)v15);
      sub_21697DEEC(&v17, (int *)v15 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v15 + 1);
      sub_21697C414(v15);
      uint64_t v10 = *((void *)a1 + 2);
      uint64_t v11 = *((void *)a1 + 3);
    }
    uint64_t v13 = (uint64_t *)*((void *)a1 + 6);
    v15[0] = v10;
    v15[1] = v11;
    if (sub_216E2A1FC((uint64_t)a3, v13, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v16, (pxrInternal__aapl__pxrReserved__::PcpNodeRef *)v15, a4))goto LABEL_11; {
  }
    }
  sub_216E2A49C(a3, v8);
LABEL_11:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v17);
  return sub_21697C414(&v16);
}

void sub_216E2A1D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_216E2A1FC(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, pxrInternal__aapl__pxrReserved__::PcpNodeRef *a4, double *a5)
{
  *(void *)&long long v29 = sub_216E06358(a4, a2);
  *((void *)&v29 + 1) = v10;
  LOBYTE(v27) = 0;
  char v28 = 0;
  if (a5)
  {
    *(void *)&long long v26 = pxrInternal__aapl__pxrReserved__::SdfLayerOffset::GetInverse((pxrInternal__aapl__pxrReserved__::SdfLayerOffset *)&v29);
    *((void *)&v26 + 1) = v11;
    double v27 = pxrInternal__aapl__pxrReserved__::SdfLayerOffset::operator*((double *)&v26, *a5);
    char v28 = 1;
    uint64_t v12 = &v27;
  }
  else
  {
    uint64_t v12 = 0;
  }
  if (sub_216E0FD54(a2, a3, v12, *(double **)(a1 + 16), (double *)(*(void *)(a1 + 16) + 8)))
  {
    int v13 = 3;
LABEL_10:
    *(_DWORD *)(*(void *)(a1 + 8) + 72) = v13;
    goto LABEL_11;
  }
  int v14 = sub_216E2A518(a2, a3, *(void *)(*(void *)(a1 + 16) + 16));
  if (v14 == 1)
  {
    int v13 = 2;
    goto LABEL_10;
  }
  if (v14 == 2)
  {
    *(unsigned char *)(*(void *)(a1 + 8) + 76) = 1;
    return sub_216E2A49C((_DWORD **)a1, v15);
  }
  if (!*(_DWORD *)(*(void *)(a1 + 8) + 72)) {
    return 0;
  }
LABEL_11:
  LayerStack = (uint64_t *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetLayerStack(a4);
  sub_216BC11A8((uint64_t *)&v26, LayerStack);
  uint64_t v18 = *(void *)(a1 + 8);
  uint64_t v19 = *(atomic_uint **)(v18 + 8);
  *(_OWORD *)uint64_t v18 = v26;
  *((void *)&v26 + 1) = 0;
  if (v19)
  {
    if (atomic_fetch_add_explicit(v19 + 2, 0xFFFFFFFF, memory_order_release) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)v19 + 8))(v19);
    }
    uint64_t v20 = *((void *)&v26 + 1);
    *(void *)&long long v26 = 0;
    if (*((void *)&v26 + 1)
      && atomic_fetch_add_explicit((atomic_uint *volatile)(*((void *)&v26 + 1) + 8), 0xFFFFFFFF, memory_order_release) == 1)
    {
      (*(void (**)(uint64_t))(*(void *)v20 + 8))(v20);
    }
  }
  sub_216ABBA60((uint64_t *)&v26, a2);
  uint64_t v21 = *(void *)(a1 + 8);
  uint64_t v22 = *(atomic_uint **)(v21 + 24);
  *(_OWORD *)(v21 + 16) = v26;
  *((void *)&v26 + 1) = 0;
  if (v22)
  {
    if (atomic_fetch_add_explicit(v22 + 2, 0xFFFFFFFF, memory_order_release) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)v22 + 8))(v22);
    }
    uint64_t v23 = *((void *)&v26 + 1);
    *(void *)&long long v26 = 0;
    if (*((void *)&v26 + 1))
    {
      if (atomic_fetch_add_explicit((atomic_uint *volatile)(*((void *)&v26 + 1) + 8), 0xFFFFFFFF, memory_order_release) == 1)(*(void (**)(uint64_t))(*(void *)v23 + 8))(v23); {
    }
      }
  }
  Path = (_DWORD *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath(a4);
  uint64_t v25 = *(void *)(a1 + 8);
  sub_2169C487C((int *)(v25 + 64), Path);
  sub_2169C48D4((int *)(v25 + 68), Path + 1);
  *(_OWORD *)(*(void *)(a1 + 8) + 48) = v29;
  *(_OWORD *)(*(void *)(a1 + 8) + 32) = *(_OWORD *)a4;
  return 1;
}

uint64_t sub_216E2A49C(_DWORD **a1, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2)
{
  uint64_t v3 = *((void *)*a1 + 1);
  if (!v3 || (*(unsigned char *)(v3 + 57) & 8) != 0) {
    pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(*((pxrInternal__aapl__pxrReserved__ **)*a1 + 1), a2);
  }
  uint64_t v4 = *(atomic_ullong **)(v3 + 24);
  uint64_t explicit = atomic_load_explicit(v4 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v4);
  }
  uint64_t v6 = sub_216D563F8(*a1);
  a1[1][18] = sub_216E2A618(explicit, v6, *((uint64_t (****)(void, uint64_t))a1[2] + 2));
  return 1;
}

uint64_t sub_216E2A518(uint64_t *a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2, uint64_t a3)
{
  uint64_t v5 = (void *)sub_216AA5ECC(a1);
  uint64_t v6 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!a3)
  {
    if (!v6) {
      uint64_t v6 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    BOOL v9 = (char *)v6 + 88;
    uint64_t v10 = sub_216A5B7B0(v5 + 14);
    uint64_t v11 = (*(uint64_t (**)(uint64_t, pxrInternal__aapl__pxrReserved__::SdfPath *, char *))(*(void *)v10
                                                                                                  + 144))(v10, a2, v9);
    if (sub_21677EC50(v11, MEMORY[0x263F8C288])) {
      return 0;
    }
    BOOL v8 = !sub_21677EC50(v11, (uint64_t)&stru_26C757FD0);
    goto LABEL_11;
  }
  if (!v6) {
    uint64_t v6 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  }
  uint64_t result = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v5, a2, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v6 + 88), (uint64_t (***)(void, uint64_t))a3);
  if (result)
  {
    BOOL v8 = *(unsigned char *)(a3 + 24) == 0;
LABEL_11:
    if (v8) {
      return 1;
    }
    else {
      return 2;
    }
  }
  return result;
}

void *sub_216E2A618(uint64_t a1, void *a2, uint64_t (***a3)(void, uint64_t))
{
  uint64_t v6 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v6) {
    uint64_t v6 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  }

  return sub_216E156C0(a1, a2, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v6 + 88), a3);
}

uint64_t sub_216E2A688(uint64_t a1, uint64_t *a2, pxrInternal__aapl__pxrReserved__::SdfPath *a3, pxrInternal__aapl__pxrReserved__::PcpNodeRef *a4)
{
  int v7 = sub_216E2A518(a2, a3, *(void *)(*(void *)(a1 + 16) + 16));
  if (v7 == 2)
  {
    *(unsigned char *)(*(void *)(a1 + 8) + 76) = 1;
    return sub_216E2A49C((_DWORD **)a1, v8);
  }
  else if (v7 == 1)
  {
    *(_DWORD *)(*(void *)(a1 + 8) + 72) = 2;
    LayerStack = (uint64_t *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetLayerStack(a4);
    sub_216BC11A8((uint64_t *)&v22, LayerStack);
    uint64_t v10 = *(void *)(a1 + 8);
    uint64_t v11 = *(atomic_uint **)(v10 + 8);
    *(_OWORD *)uint64_t v10 = v22;
    *((void *)&v22 + 1) = 0;
    if (v11)
    {
      if (atomic_fetch_add_explicit(v11 + 2, 0xFFFFFFFF, memory_order_release) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v11 + 8))(v11);
      }
      uint64_t v12 = *((void *)&v22 + 1);
      *(void *)&long long v22 = 0;
      if (*((void *)&v22 + 1)
        && atomic_fetch_add_explicit((atomic_uint *volatile)(*((void *)&v22 + 1) + 8), 0xFFFFFFFF, memory_order_release) == 1)
      {
        (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
      }
    }
    sub_216ABBA60((uint64_t *)&v22, a2);
    uint64_t v13 = *(void *)(a1 + 8);
    int v14 = *(atomic_uint **)(v13 + 24);
    *(_OWORD *)(v13 + 16) = v22;
    *((void *)&v22 + 1) = 0;
    if (v14)
    {
      if (atomic_fetch_add_explicit(v14 + 2, 0xFFFFFFFF, memory_order_release) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v14 + 8))(v14);
      }
      uint64_t v15 = *((void *)&v22 + 1);
      *(void *)&long long v22 = 0;
      if (*((void *)&v22 + 1))
      {
        if (atomic_fetch_add_explicit((atomic_uint *volatile)(*((void *)&v22 + 1) + 8), 0xFFFFFFFF, memory_order_release) == 1)(*(void (**)(uint64_t))(*(void *)v15 + 8))(v15); {
      }
        }
    }
    Path = (_DWORD *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath(a4);
    uint64_t v17 = *(void *)(a1 + 8);
    sub_2169C487C((int *)(v17 + 64), Path);
    sub_2169C48D4((int *)(v17 + 68), Path + 1);
    double v18 = sub_216E06358(a4, a2);
    uint64_t v19 = *(void *)(a1 + 8);
    *(double *)(v19 + 48) = v18;
    *(void *)(v19 + 56) = v20;
    *(_OWORD *)(v19 + 32) = *(_OWORD *)a4;
    return 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_216E2A8D4(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, pxrInternal__aapl__pxrReserved__::PcpNodeRef *a4)
{
  BOOL v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  pxrInternal__aapl__pxrReserved__::SdfLayer::GetPropertyAtPath((uint64_t *)&v15, v8, a3);
  if ((pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&v15) & 1) == 0)
  {
    if (*(unsigned char *)(a1 + 48))
    {
      *(void *)&long long v14 = sub_216E06358(a4, a2);
      *((void *)&v14 + 1) = v10;
      sub_216E2A9B8((uint64_t *)(a1 + 24), &v15, &v14);
    }
    else
    {
      BOOL v9 = *(char **)(a1 + 8);
      if ((unint64_t)v9 >= *(void *)(a1 + 16))
      {
        uint64_t v12 = sub_216A8E01C((atomic_uint ***)a1, &v15);
      }
      else
      {
        uint64_t v11 = v15;
        *(void *)BOOL v9 = v15;
        if (v11) {
          atomic_fetch_add(v11, 1u);
        }
        uint64_t v12 = v9 + 8;
      }
      *(void *)(a1 + 8) = v12;
    }
  }
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v9, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v15);
  return 0;
}

void sub_216E2A9A0(_Unwind_Exception *a1@<X0>, void *a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(a2, (pxrInternal__aapl__pxrReserved__::SdfSpec *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_216E2A9B8(uint64_t *a1, atomic_uint **a2, _OWORD *a3)
{
  unint64_t v8 = a1[2];
  uint64_t v6 = (uint64_t)(a1 + 2);
  unint64_t v7 = v8;
  unint64_t v9 = *(void *)(v6 - 8);
  if (v9 >= v8)
  {
    unint64_t v12 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v9 - *a1) >> 3);
    unint64_t v13 = v12 + 1;
    if (v12 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_21677CB10();
    }
    unint64_t v14 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v7 - *a1) >> 3);
    if (2 * v14 > v13) {
      unint64_t v13 = 2 * v14;
    }
    if (v14 >= 0x555555555555555) {
      unint64_t v15 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v15 = v13;
    }
    uint64_t v23 = v6;
    if (v15) {
      int v16 = (char *)sub_216782ED8(v6, v15);
    }
    else {
      int v16 = 0;
    }
    uint64_t v17 = (atomic_uint **)&v16[24 * v12];
    v20[0] = v16;
    v20[1] = v17;
    uint64_t v21 = v17;
    long long v22 = &v16[24 * v15];
    double v18 = *a2;
    uint64_t *v17 = *a2;
    if (v18)
    {
      atomic_fetch_add(v18, 1u);
      uint64_t v17 = v21;
    }
    *(_OWORD *)&v16[24 * v12 + 8] = *a3;
    uint64_t v21 = v17 + 3;
    sub_216C33658(a1, v20);
    uint64_t v11 = a1[1];
    sub_216C336E0((uint64_t)v20);
  }
  else
  {
    uint64_t v10 = *a2;
    *(void *)unint64_t v9 = *a2;
    if (v10) {
      atomic_fetch_add(v10, 1u);
    }
    *(_OWORD *)(v9 + 8) = *a3;
    uint64_t v11 = v9 + 24;
    a1[1] = v9 + 24;
  }
  a1[1] = v11;
  return v11 - 24;
}

void sub_216E2AAFC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216C336E0((uint64_t)va);
  _Unwind_Resume(a1);
}

_DWORD *sub_216E2AB10(pxrInternal__aapl__pxrReserved__::Usd_Resolver *a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, double *a4, void **a5)
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v28);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v29);
  uint64_t v25 = 0;
  long long v26 = 0;
  uint64_t v27 = 0;
  uint64_t v10 = (void **)*((void *)a1 + 2);
  uint64_t v11 = (uint64_t *)*((void *)a1 + 3);
  if (v10 != *((void ***)a1 + 4) || v11 != *((uint64_t **)a1 + 5))
  {
    char v13 = 0;
    BOOL Layer = 1;
    do
    {
      if (Layer)
      {
        sub_216E0E77C((uint64_t)a1, a2, (int *)&v23);
        sub_21697DE94(&v28, (int *)&v23);
        sub_21697DEEC(&v29, (int *)&v23 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v23 + 1);
        sub_21697C414(&v23);
        unint64_t v15 = (uint64_t *)*((void *)a1 + 3);
        uint64_t v23 = (void **)*((void *)a1 + 2);
        int v24 = v15;
        if (!pxrInternal__aapl__pxrReserved__::PcpNodeRef::HasSpecs((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v23))
        {
          char v13 = 0;
          goto LABEL_14;
        }
        uint64_t v10 = (void **)*((void *)a1 + 2);
        uint64_t v11 = (uint64_t *)*((void *)a1 + 3);
      }
      else if ((v13 & 1) == 0)
      {
        goto LABEL_17;
      }
      int v16 = (uint64_t *)*((void *)a1 + 6);
      uint64_t v23 = v10;
      int v24 = v11;
      if (sub_216E2A8D4(a3, v16, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v28, (pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v23))break; {
      char v13 = 1;
      }
      if (!Layer) {
        goto LABEL_18;
      }
LABEL_14:
      uint64_t v17 = *((void *)a1 + 3);
      v22[0] = *((void *)a1 + 2);
      v22[1] = v17;
      sub_216E0FA94((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)v22, a5, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v28, (uint64_t *)&v23);
      sub_216C4CE90((uint64_t)&v25, (uint64_t *)v23, v24, ((char *)v24 - (char *)v23) >> 4);
      int v30 = &v23;
      sub_216787968((void ***)&v30);
      if (v13)
      {
        char v13 = 1;
        goto LABEL_18;
      }
      if (v25 != v26)
      {
LABEL_17:
        char v13 = 0;
LABEL_18:
        double v18 = v25;
        uint64_t v19 = v26;
        while (v18 != v19)
        {
          if (sub_216ABA3A0((uint64_t *)*v18 + 6, *((void **)a1 + 6)))
          {
            uint64_t v20 = (uint64_t *)*((void *)a1 + 3);
            uint64_t v23 = (void **)*((void *)a1 + 2);
            int v24 = v20;
            if (sub_216E2AEBC(a3, v18, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v28, (pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v23, a4))goto LABEL_28; {
          }
            }
          v18 += 2;
        }
        BOOL Layer = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer(a1);
        goto LABEL_24;
      }
      pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextNode(a1);
      char v13 = 0;
      BOOL Layer = 1;
LABEL_24:
      uint64_t v11 = (uint64_t *)*((void *)a1 + 3);
      uint64_t v10 = (void **)*((void *)a1 + 2);
    }
    while (v10 != *((void ***)a1 + 4) || v11 != *((uint64_t **)a1 + 5));
  }
LABEL_28:
  uint64_t v23 = (void **)&v25;
  sub_216787968(&v23);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
  return sub_21697C414(&v28);
}

void sub_216E2AD48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void **a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, int a17, void ***a18)
{
  a18 = &a11;
  sub_216787968((void ***)&a18);
  a11 = (void **)&a14;
  sub_216787968(&a11);
  sub_21697B754(&a17);
  _Unwind_Resume(a1);
}

_DWORD *sub_216E2ADA0(pxrInternal__aapl__pxrReserved__::Usd_Resolver *a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3)
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v13);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v14);
  for (BOOL i = 1; ; BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer(a1))
  {
    uint64_t v7 = *((void *)a1 + 2);
    uint64_t v8 = *((void *)a1 + 3);
    if (v7 == *((void *)a1 + 4) && v8 == *((void *)a1 + 5)) {
      break;
    }
    if (i)
    {
      sub_216E0E77C((uint64_t)a1, a2, (int *)v12);
      sub_21697DE94(&v13, (int *)v12);
      sub_21697DEEC(&v14, (int *)v12 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v12 + 1);
      sub_21697C414(v12);
      uint64_t v7 = *((void *)a1 + 2);
      uint64_t v8 = *((void *)a1 + 3);
    }
    uint64_t v10 = (uint64_t *)*((void *)a1 + 6);
    v12[0] = v7;
    v12[1] = v8;
    if (sub_216E2A8D4(a3, v10, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v13, (pxrInternal__aapl__pxrReserved__::PcpNodeRef *)v12))break; {
  }
    }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v14);
  return sub_21697C414(&v13);
}

void sub_216E2AEA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_216E2AEBC(uint64_t a1, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, pxrInternal__aapl__pxrReserved__::PcpNodeRef *a4, double *a5)
{
  uint64_t v23 = 0;
  uint64_t v24 = 0;
  if (sub_216E07674(a2, a3, a5, (double *)&v24, (double *)&v23))
  {
    uint64_t v10 = *a2;
    uint64_t v11 = (pxrInternal__aapl__pxrReserved__::Usd_Clip **)(*((void *)v10 + 11)
                                                        + 16
                                                        * pxrInternal__aapl__pxrReserved__::Usd_ClipSet::_FindClipIndexForTime(*a2, *a5));
    if (!pxrInternal__aapl__pxrReserved__::Usd_Clip::HasAuthoredTimeSamples(*v11, a3)) {
      uint64_t v11 = (pxrInternal__aapl__pxrReserved__::Usd_Clip **)((char *)*a2 + 72);
    }
    unint64_t v12 = *v11;
    if (!*v11)
    {
      *(void *)&long long v19 = "usd/stage.cpp";
      *((void *)&v19 + 1) = "ProcessClips";
      uint64_t v20 = 8344;
      uint64_t v21 = "BOOL pxrInternal__aapl__pxrReserved__::UsdStage::_PropertyStackResolver::ProcessClips(const Usd_ClipSetRefPt"
            "r &, const SdfPath &, const PcpNodeRef &, const double *)";
      char v22 = 0;
      if (!pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v19, "sourceClip", 0)) {
        return 0;
      }
      unint64_t v12 = *v11;
    }
    pxrInternal__aapl__pxrReserved__::Usd_Clip::GetPropertyAtPath(v12, a3, (uint64_t *)&v18);
    if ((pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&v18) & 1) == 0)
    {
      if (*(unsigned char *)(a1 + 48))
      {
        *(void *)&long long v19 = sub_216C5617C(a4, (uint64_t *)*a2 + 6);
        *((void *)&v19 + 1) = v14;
        sub_216E2A9B8((uint64_t *)(a1 + 24), &v18, &v19);
      }
      else
      {
        int v13 = *(char **)(a1 + 8);
        if ((unint64_t)v13 >= *(void *)(a1 + 16))
        {
          int v16 = sub_216A8E01C((atomic_uint ***)a1, &v18);
        }
        else
        {
          unint64_t v15 = v18;
          *(void *)int v13 = v18;
          if (v15) {
            atomic_fetch_add(v15, 1u);
          }
          int v16 = v13 + 8;
        }
        *(void *)(a1 + 8) = v16;
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v13, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v18);
  }
  return 0;
}

void sub_216E2B034(_Unwind_Exception *a1@<X0>, void *a2@<X8>, uint64_t a3)
{
}

char *sub_216E2B04C(char *result, atomic_uint **a2, atomic_uint **a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    uint64_t result = sub_21677CACC(result, a4);
    for (BOOL i = (atomic_uint **)*((void *)v6 + 1); a2 != a3; ++i)
    {
      uint64_t v8 = *a2;
      *BOOL i = *a2;
      if (v8) {
        atomic_fetch_add(v8, 1u);
      }
      ++a2;
    }
    *((void *)v6 + 1) = i;
  }
  return result;
}

void sub_216E2B0CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

char *sub_216E2B0E0(char *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    uint64_t result = sub_216782E84(result, a4);
    for (uint64_t i = *((void *)v6 + 1); a2 != a3; a2 += 24)
    {
      uint64_t v8 = *(atomic_uint **)a2;
      *(void *)uint64_t i = *(void *)a2;
      if (v8) {
        atomic_fetch_add(v8, 1u);
      }
      *(_OWORD *)(i + 8) = *(_OWORD *)(a2 + 8);
      i += 24;
    }
    *((void *)v6 + 1) = i;
  }
  return result;
}

void sub_216E2B168(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

void sub_216E2B17C(uint64_t a1, _DWORD *a2, _DWORD *a3, void **a4, _DWORD *a5, const pxrInternal__aapl__pxrReserved__::UsdResolveTarget **a6)
{
  double v18 = 0;
  memset(v17, 0, sizeof(v17));
  uint64_t v8 = v17;
  if (a5) {
    uint64_t v8 = a5;
  }
  v16[0] = a2;
  v16[1] = a3;
  v16[2] = v8;
  if (a4)
  {
    __p[0] = *a4;
    sub_216E2B2D4(a1, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)a2, v16, (double *)__p, a6);
  }
  else
  {
    sub_216E2B2D4(a1, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)a2, v16, 0, a6);
  }
  BOOL v9 = sub_216C4B19C(16);
  if (v9
    && (a3[18] - 3) <= 1
    && pxrInternal__aapl__pxrReserved__::UsdStage::_GetVariability((pxrInternal__aapl__pxrReserved__::UsdStage *)v9, (const pxrInternal__aapl__pxrReserved__::UsdProperty *)a2) == 1&& sub_216C4B19C(16))
  {
    pxrInternal__aapl__pxrReserved__::UsdDescribe((uint64_t *)__p, (pxrInternal__aapl__pxrReserved__ *)a2, v10);
    int v13 = v15 >= 0 ? __p : (void **)__p[0];
    pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"Warning: detected time sample value on uniform attribute <%s>\n", v11, v12, v13);
    if (v15 < 0) {
      operator delete(__p[0]);
    }
  }
  if (v18) {
    sub_216784EC4(v18);
  }
}

void sub_216E2B29C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,std::__shared_weak_count *a24)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a24) {
    sub_216784EC4(a24);
  }
  _Unwind_Resume(exception_object);
}

void sub_216E2B2D4(uint64_t a1, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2, _DWORD **a3, double *a4, const pxrInternal__aapl__pxrReserved__::UsdResolveTarget **a5)
{
  uint64_t v10 = (atomic_ullong *)*((void *)a2 + 1);
  if (!v10 || (atomic_fetch_add_explicit(v10 + 6, 1uLL, memory_order_relaxed), atomic_ullong v11 = v10[7], (v11 & 0x800) != 0))
  {
    pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError((pxrInternal__aapl__pxrReserved__ *)v10, a2);
    atomic_ullong v11 = v10[7];
  }
  if ((v11 & 0x400) != 0)
  {
    int v13 = *(pxrInternal__aapl__pxrReserved__::Usd_ClipCache **)(a1 + 136);
    if ((v11 & 0x800) != 0) {
      pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError((pxrInternal__aapl__pxrReserved__ *)v10, a2);
    }
    ClipsForPrim = pxrInternal__aapl__pxrReserved__::Usd_ClipCache::GetClipsForPrim(v13, (const pxrInternal__aapl__pxrReserved__::SdfPath *)(v10 + 2));
    pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v16, *a5, 0);
    char v15 = sub_216D563F8(a2);
    sub_216E29E2C((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v16, v15, a3, a4, (void **)ClipsForPrim);
  }
  else
  {
    pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v16, *a5, 1);
    unint64_t v12 = sub_216D563F8(a2);
    sub_216E2A0CC((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v16, v12, a3, a4);
  }
  sub_216D16E0C(v10);
}

void sub_216E2B3D0(_Unwind_Exception *a1)
{
  sub_216D16E0C(v1);
  _Unwind_Resume(a1);
}

_DWORD *sub_216E2B3F8(uint64_t a1, _DWORD *a2, _DWORD **a3, const pxrInternal__aapl__pxrReserved__::UsdResolveTarget **a4)
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v15, *a4, 1);
  for (BOOL i = 1;
        ;
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v15))
  {
    uint64_t v9 = v16;
    uint64_t v10 = v17;
    if (v16 == v18 && v17 == v19) {
      break;
    }
    if (i)
    {
      unint64_t v12 = sub_216D563F8(a2);
      sub_216E0E77C((uint64_t)v15, v12, (int *)v14);
      sub_21697DE94(&v21, (int *)v14);
      sub_21697DEEC(&v22, (int *)v14 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v14 + 1);
      sub_21697C414(v14);
      uint64_t v9 = v16;
      uint64_t v10 = v17;
    }
    v14[0] = v9;
    v14[1] = v10;
    if (sub_216E2A688((uint64_t)a3, v20, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, (pxrInternal__aapl__pxrReserved__::PcpNodeRef *)v14))goto LABEL_11; {
  }
    }
  sub_216E2A49C(a3, v7);
LABEL_11:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  return sub_21697C414(&v21);
}

void sub_216E2B50C(_Unwind_Exception *a1)
{
  sub_21697B754((_DWORD *)(v1 - 40));
  _Unwind_Resume(a1);
}

uint64_t sub_216E2B530(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t v2 = a1 + 1;
  if (!v3) {
    return 0;
  }
  if (*(unsigned char *)(sub_216850B68(v2) + 14)) {
    return *a1;
  }
  return 0;
}

BOOL sub_216E2B574(uint64_t a1, char *a2, void *a3)
{
  sub_216779094(__p, a2);
  uint64_t v5 = sub_21678C2D8(a1, (const void **)__p);
  if (v12 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v6 = a1 + 8;
  if (v6 != v5)
  {
    uint64_t v8 = *(void *)(v5 + 56);
    uint64_t v7 = *(void *)(v5 + 64);
    if (v7) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v7 + 8), 1uLL, memory_order_relaxed);
    }
    uint64_t v9 = (std::__shared_weak_count *)a3[1];
    *a3 = v8;
    a3[1] = v7;
    if (v9) {
      sub_216784EC4(v9);
    }
  }
  return v6 != v5;
}

void sub_216E2B608(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_216E2B624(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = MEMORY[0x263F8C230];
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C75BAE8;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76A0F0;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v4, (uint64_t)v5, **(double **)(a3 + 8));
}

uint64_t sub_216E2B6B0(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  uint64_t v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B920D0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B920D0))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B920C8, &dword_216758000);
    __cxa_guard_release(&qword_267B920D0);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B920C8;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216E1FC54((uint64_t)v8, v9, a2, a3, 1, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216E2CE5C((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216E2D478((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216E2CAD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

void sub_216E2CE5C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216E2D38C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216E2D478(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216E2D9A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E2DA94(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C37F2C(v8, a3, v9, a5);
}

void sub_216E2DAE8(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

uint64_t sub_216E2DB78(pxrInternal__aapl__pxrReserved__::Usd_Clip **a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, uint64_t (**a3)(void, uint64_t))
{
  uint64_t v4 = *a1;
  uint64_t v5 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (a3)
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    return sub_216E2DC40(v4, a2, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v5 + 88), a3);
  }
  else
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    uint64_t v8 = sub_216C53204(v4, a2, (uint64_t)v5 + 88);
    if (sub_21677EC50(v8, MEMORY[0x263F8C288]))
    {
      return 0;
    }
    else if (sub_21677EC50(v8, (uint64_t)&stru_26C757FD0))
    {
      return 2;
    }
    else
    {
      return 1;
    }
  }
}

uint64_t sub_216E2DC40(pxrInternal__aapl__pxrReserved__::Usd_Clip *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_GetLayerForClip(a1, (uint64_t *)&v12);
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC((uint64_t *)&v12);
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_TranslatePathToClip(a1, a2, &v11);
  uint64_t v9 = sub_216DFFD18(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v11, a3, a4);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  sub_216ABB798(&v12);
  return v9;
}

void sub_216E2DCE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a10)
{
}

uint64_t sub_216E2DD0C(uint64_t a1, _DWORD *a2, uint64_t (***a3)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a4, double a5)
{
  double v27 = a5;
  sub_216D1CEAC((uint64_t)&v21);
  long long v18 = 0u;
  uint64_t v20 = 0;
  long long v19 = (unint64_t)a4;
  pxrInternal__aapl__pxrReserved__::TfErrorMark::TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v17);
  int v28 = a2;
  sub_216E29A0C(a1, a2, &v21, (void **)&v27, &v18, (uint64_t)&v28);
  if (v26 == 4)
  {
    uint64_t IsCleanImpl = sub_216E2E1C4(a2, (uint64_t)&v21, (pxrInternal__aapl__pxrReserved__::Usd_ClipSet **)&v19 + 1, (double *)&v18, (double *)&v18 + 1, (uint64_t)a3, v27);
    goto LABEL_5;
  }
  if (v26 == 3)
  {
    uint64_t IsCleanImpl = sub_216E2DF30(a2, &v21, (double *)&v18, (double *)&v18 + 1, a3, a4, v27);
LABEL_5:
    uint64_t v10 = IsCleanImpl;
    goto LABEL_6;
  }
  if ((v26 - 1) > 1)
  {
    uint64_t v10 = 0;
  }
  else
  {
    unint64_t v14 = atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
    if (!v14) {
      pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_CreateInstance();
    }
    unint64_t v15 = v17;
    unint64_t v16 = atomic_load((unint64_t *)(v14 + 144));
    if (v15 < v16)
    {
      uint64_t IsCleanImpl = pxrInternal__aapl__pxrReserved__::TfErrorMark::_IsCleanImpl((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v17, (atomic_ullong *)v14);
      goto LABEL_5;
    }
    uint64_t v10 = 1;
  }
LABEL_6:
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v17);
  if (v20) {
    sub_216784EC4(v20);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v25);
  sub_21697C414(&v24);
  uint64_t v11 = v23;
  if (v23 && atomic_fetch_add_explicit((atomic_uint *volatile)(v23 + 8), 0xFFFFFFFF, memory_order_release) == 1) {
    (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
  }
  uint64_t v12 = v22;
  if (v22 && atomic_fetch_add_explicit((atomic_uint *volatile)(v22 + 8), 0xFFFFFFFF, memory_order_release) == 1) {
    (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
  }
  return v10;
}

void sub_216E2DF00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  sub_216D1B1E8((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL sub_216E2DF30(_DWORD *a1, uint64_t *a2, double *a3, double *a4, uint64_t (***a5)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a6, double a7)
{
  double v48 = a7;
  int v13 = (pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 8);
  unint64_t v14 = sub_216D563F8(a1);
  pxrInternal__aapl__pxrReserved__::SdfPath::AppendProperty(v13, v14, &v46);
  double Inverse = pxrInternal__aapl__pxrReserved__::SdfLayerOffset::GetInverse((pxrInternal__aapl__pxrReserved__::SdfLayerOffset *)(a2 + 6));
  uint64_t v40 = v15;
  double v16 = pxrInternal__aapl__pxrReserved__::SdfLayerOffset::operator*(&Inverse, a7);
  unint64_t v17 = a2 + 2;
  double v45 = 0.0;
  double v44 = 0.0;
  if (a3 && a4)
  {
    double v44 = *a3;
    double v45 = *a4;
  }
  else
  {
    long long v18 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(v17);
    if ((pxrInternal__aapl__pxrReserved__::SdfLayer::GetBracketingTimeSamplesForPath(v18, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v46, v16, &v44, &v45) & 1) == 0)
    {
      double Inverse = COERCE_DOUBLE("usd/stage.cpp");
      uint64_t v40 = "_GetTimeSampleValue";
      uint64_t v41 = 8116;
      int v42 = "static BOOL pxrInternal__aapl__pxrReserved__::UsdStage_ResolveInfoAccess::_GetTimeSampleValue(UsdTimeCode, c"
            "onst UsdAttribute &, const UsdResolveInfo &, const double *, const double *, Usd_InterpolatorBase *, T *) [T"
            " = pxrInternal__aapl__pxrReserved__::SdfAbstractDataValue]";
      char v43 = 0;
      uint64_t v30 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(v17);
      uint64_t Identifier = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v30);
      int v32 = *(char *)(Identifier + 23);
      uint64_t v33 = *(void *)Identifier;
      Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v46);
      uint64_t v37 = v32 >= 0 ? Identifier : v33;
      uint64_t v38 = pxrInternal__aapl__pxrReserved__::Tf_VerifyStringFormat((pxrInternal__aapl__pxrReserved__ *)"No bracketing time samples for %s on <%s> for time %g between %g and %g", v35, v36, v37, Text, *(void *)&v16, *(void *)&v44, *(void *)&v45);
      if ((pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&Inverse, "layer->GetBracketingTimeSamplesForPath( specPath, localTime, &lower, &upper)", v38) & 1) == 0)
      {
        BOOL v28 = 0;
        goto LABEL_17;
      }
    }
  }
  if (sub_216C4B19C(15))
  {
    long long v19 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v46);
    uint64_t v20 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    if (!v20) {
      uint64_t v20 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    unint64_t v21 = *((void *)v20 + 54) & 0xFFFFFFFFFFFFFFF8;
    if (v21)
    {
      uint64_t v22 = (const char *)(v21 + 16);
      if (*(char *)(v21 + 39) < 0) {
        uint64_t v22 = *(const char **)v22;
      }
    }
    else
    {
      uint64_t v22 = "";
    }
    uint64_t v23 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(v17);
    uint64_t v24 = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v23);
    if (*(char *)(v24 + 23) >= 0) {
      uint64_t v27 = v24;
    }
    else {
      uint64_t v27 = *(void *)v24;
    }
    pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"RESOLVE: reading field %s:%s from @%s@, with requested time = %.3f (local time = %.3f) reading from sample %.3f \n", v25, v26, v19, v22, v27, *(void *)&v48, *(void *)&v16, *(void *)&v44);
  }
  BOOL v28 = sub_216E2E410((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)v17, (uint64_t)&v46, a5, a6, v16, v44, v45);
LABEL_17:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v47);
  sub_21697C414(&v46);
  return v28;
}

void sub_216E2E1A0(_Unwind_Exception *a1)
{
  sub_21697B754((_DWORD *)(v1 - 80));
  _Unwind_Resume(a1);
}

uint64_t sub_216E2E1C4(_DWORD *a1, uint64_t a2, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a3, double *a4, double *a5, uint64_t a6, double a7)
{
  double v29 = a7;
  uint64_t v12 = (pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 64);
  int v13 = sub_216D563F8(a1);
  pxrInternal__aapl__pxrReserved__::SdfPath::AppendProperty(v12, v13, &v27);
  double v26 = a7;
  double v24 = 0.0;
  double v25 = 0.0;
  if (a4 && a5)
  {
    double v14 = *a5;
    double v24 = *a4;
    double v25 = v14;
  }
  else
  {
    sub_216E07674(a3, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v27, &v26, &v24, &v25);
  }
  if (sub_216C4B19C(15))
  {
    Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v27);
    long long v18 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    if (!v18) {
      long long v18 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    unint64_t v19 = *((void *)v18 + 54) & 0xFFFFFFFFFFFFFFF8;
    if (v19)
    {
      uint64_t v20 = (const char *)(v19 + 16);
      if (*(char *)(v19 + 39) < 0) {
        uint64_t v20 = *(const char **)v20;
      }
    }
    else
    {
      uint64_t v20 = "";
    }
    unint64_t v21 = *a3;
    if (*((char *)*a3 + 23) < 0) {
      unint64_t v21 = *(pxrInternal__aapl__pxrReserved__::Usd_ClipSet **)v21;
    }
    pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"RESOLVE: reading field %s:%s from clip set %s, with requested time = %.3f reading from sample %.3f \n", v15, v16, Text, v20, v21, *(void *)&v26, *(void *)&v24);
  }
  if (vabdd_f64(v24, v25) < 0.000001)
  {
    pxrInternal__aapl__pxrReserved__::Usd_ClipSet::_FindClipIndexForTime(*a3, v24);
    pxrInternal__aapl__pxrReserved__::Usd_Clip::QueryTimeSample<pxrInternal__aapl__pxrReserved__::SdfAbstractDataValue>();
  }
  uint64_t v22 = (*(uint64_t (**)(uint64_t, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **, int *, double, double))(*(void *)a6 + 8))(a6, a3, &v27, v26, v24);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v28);
  sub_21697C414(&v27);
  return v22;
}

void sub_216E2E3F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

BOOL sub_216E2E410(pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **a1, uint64_t a2, uint64_t (***a3)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a4, double a5, double a6, double a7)
{
  uint64_t v11 = (uint64_t *)(a1 + 1);
  if (vabdd_f64(a6, a7) >= 0.000001)
  {
    long long v18 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *)*v11;
    if (*v11)
    {
      if (*(unsigned char *)(sub_216850B68(v11) + 14)) {
        long long v18 = *a1;
      }
      else {
        long long v18 = 0;
      }
    }
    uint64_t v20 = v18;
    sub_2168BD80C((uint64_t *)&v20);
    uint64_t TimeSample = (**a3)(a3, &v20, a2, a5, a6, a7);
    sub_216ABB798(&v20);
  }
  else
  {
    int v13 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *)*v11;
    if (*v11)
    {
      if (*(unsigned char *)(sub_216850B68(v11) + 14)) {
        int v13 = *a1;
      }
      else {
        int v13 = 0;
      }
    }
    uint64_t v20 = v13;
    sub_2168BD80C((uint64_t *)&v20);
    uint64_t v14 = sub_216AA5ECC((uint64_t *)&v20);
    uint64_t TimeSample = pxrInternal__aapl__pxrReserved__::SdfLayer::QueryTimeSample(v14, a6);
    sub_216ABB798(&v20);
    if (TimeSample) {
      return !a4 || *(unsigned char *)(a4 + 24) == 0;
    }
  }
  return TimeSample;
}

void sub_216E2E560(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216ABB798((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_216E2E578(pxrInternal__aapl__pxrReserved__::Usd_Clip **a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!a3)
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    uint64_t v9 = sub_216C53204(v4, a2, (uint64_t)v5 + 88);
    if (sub_21677EC50(v9, MEMORY[0x263F8C288])) {
      return 0;
    }
    BOOL v8 = !sub_21677EC50(v9, (uint64_t)&stru_26C757FD0);
    goto LABEL_11;
  }
  if (!v5) {
    uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  }
  uint64_t result = sub_216E2E64C(v4, a2, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v5 + 88), (uint64_t (***)(void, uint64_t))a3);
  if (result)
  {
    BOOL v8 = *(unsigned char *)(a3 + 24) == 0;
LABEL_11:
    if (v8) {
      return 1;
    }
    else {
      return 2;
    }
  }
  return result;
}

uint64_t sub_216E2E64C(pxrInternal__aapl__pxrReserved__::Usd_Clip *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (***a4)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_GetLayerForClip(a1, (uint64_t *)&v12);
  BOOL v8 = (void *)sub_216AA5ECC((uint64_t *)&v12);
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_TranslatePathToClip(a1, a2, &v11);
  uint64_t HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v11, a3, a4);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  sub_216ABB798(&v12);
  return HasField;
}

void sub_216E2E6F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a10)
{
}

uint64_t sub_216E2E718(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  uint64_t v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216E2E774(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = &stru_26C74E160;
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C75D8E0;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76A128;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v4, (uint64_t)v5, **(double **)(a3 + 8));
}

uint64_t sub_216E2E800(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  BOOL v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B920E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B920E0))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B920D8, &dword_216758000);
    __cxa_guard_release(&qword_267B920E0);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B920D8;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216E2FFA8((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216E3013C((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216E30758((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216E2FC20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E2FFA8(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216E30114(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216E3013C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216E3066C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216E30758(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216E30C88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E30D74(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C38124(v8, a3, v9, a5);
}

void sub_216E30DC8(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

uint64_t sub_216E30E58(pxrInternal__aapl__pxrReserved__::Usd_Clip **a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, uint64_t (**a3)(void, uint64_t))
{
  uint64_t v4 = *a1;
  uint64_t v5 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (a3)
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    return sub_216E30F20(v4, a2, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v5 + 88), a3);
  }
  else
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    uint64_t v8 = sub_216C53204(v4, a2, (uint64_t)v5 + 88);
    if (sub_21677EC50(v8, MEMORY[0x263F8C288]))
    {
      return 0;
    }
    else if (sub_21677EC50(v8, (uint64_t)&stru_26C757FD0))
    {
      return 2;
    }
    else
    {
      return 1;
    }
  }
}

uint64_t sub_216E30F20(pxrInternal__aapl__pxrReserved__::Usd_Clip *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_GetLayerForClip(a1, (uint64_t *)&v12);
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC((uint64_t *)&v12);
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_TranslatePathToClip(a1, a2, &v11);
  uint64_t v9 = sub_216E30FEC(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v11, a3, a4);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  sub_216ABB798(&v12);
  return v9;
}

void sub_216E30FC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a10)
{
}

uint64_t sub_216E30FEC(pxrInternal__aapl__pxrReserved__::SdfLayer *a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(void, uint64_t))
{
  if (a4)
  {
    v6[1] = a4;
    v6[2] = (uint64_t (**)(void, uint64_t))&stru_26C74E160;
    __int16 v7 = 0;
    v6[0] = (uint64_t (**)(void, uint64_t))&unk_26C75D8E0;
    LODWORD(result) = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, v6);
    if ((_BYTE)v7) {
      return 0;
    }
    else {
      return result;
    }
  }
  else
  {
    return pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, 0);
  }
}

void *sub_216E31060(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t (***a4)(void, uint64_t))
{
  int v4 = *((_DWORD *)a2 + 18);
  if (!v4) {
    return 0;
  }
  if (v4 != 1)
  {
    if (v4 == 2)
    {
      uint64_t v8 = sub_216D563F8((_DWORD *)a3);
      pxrInternal__aapl__pxrReserved__::SdfPath::AppendProperty((pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 8), v8, (int *)v33);
      uint64_t v9 = a2 + 2;
      if (sub_216C4B19C(15))
      {
        Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)v33);
        uint64_t v11 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
        if (!v11) {
          uint64_t v11 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
        }
        unint64_t v12 = *((void *)v11 + 11) & 0xFFFFFFFFFFFFFFF8;
        if (v12)
        {
          int v13 = (const char *)(v12 + 16);
          if (*(char *)(v12 + 39) < 0) {
            int v13 = *(const char **)v13;
          }
        }
        else
        {
          int v13 = "";
        }
        int v22 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(v9);
        uint64_t Identifier = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v22);
        if (*(char *)(Identifier + 23) >= 0) {
          uint64_t v26 = Identifier;
        }
        else {
          uint64_t v26 = *(void *)Identifier;
        }
        pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"RESOLVE: reading field %s:%s from @%s@\n", v24, v25, Text, v13, v26);
      }
      uint64_t v27 = (void *)sub_2169791E0(v9);
      int v28 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if (!v28) {
        int v28 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      }
      uint64_t HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v27, (pxrInternal__aapl__pxrReserved__::SdfPath *)v33, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v28 + 88), a4);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v33 + 1);
      sub_21697C414(v33);
      return (void *)HasField;
    }
    v33[0] = "usd/stage.cpp";
    v33[1] = "_GetDefaultValueFromResolveInfoImpl";
    v33[2] = 8884;
    v33[3] = "BOOL pxrInternal__aapl__pxrReserved__::UsdStage::_GetDefaultValueFromResolveInfoImpl(const UsdResolveInfo &"
             ", const UsdAttribute &, T *) const [T = pxrInternal__aapl__pxrReserved__::SdfAbstractDataValue]";
    char v34 = 0;
    sub_216D0162C(a3, &v31);
    int v19 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v31);
    pxrInternal__aapl__pxrReserved__::TfEnum::GetName((uint64_t)&unk_26C7696F0, *((unsigned int *)a2 + 18), (uint64_t)__p);
    if (v30 >= 0) {
      int v20 = __p;
    }
    else {
      int v20 = (void **)__p[0];
    }
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v33, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid resolve info used for getting the value at default time for attr '%s'. Resolve info source must be Default, Fallback, or None. Got %s", v19, (const char *)v20);
    if (v30 < 0) {
      operator delete(__p[0]);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v32);
    sub_21697C414(&v31);
    return 0;
  }
  uint64_t v14 = *(void *)(a3 + 8);
  if (!v14 || (*(unsigned char *)(v14 + 57) & 8) != 0) {
    pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(*(pxrInternal__aapl__pxrReserved__ **)(a3 + 8), (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)a2);
  }
  unint64_t v15 = *(atomic_ullong **)(v14 + 24);
  uint64_t explicit = atomic_load_explicit(v15 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v15);
  }
  char v17 = sub_216D563F8((_DWORD *)a3);

  return sub_216E2A618(explicit, v17, a4);
}

void sub_216E312DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, int a18, int a19, __int16 a20,char a21,char a22)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  sub_21697B754(&a18);
  _Unwind_Resume(a1);
}

void *sub_216E3131C(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = MEMORY[0x263F8C230];
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C75BAE8;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76A0F0;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v4, (uint64_t)v5, **(double **)(a3 + 16));
}

void *sub_216E313A8(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t (***a4)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a5, double a6)
{
  double v46 = a6;
  __int16 v6 = (uint64_t (***)(void, uint64_t))a5;
  switch(*((_DWORD *)a2 + 18))
  {
    case 1:
      uint64_t v11 = *(void *)(a3 + 8);
      if (!v11 || (*(unsigned char *)(v11 + 57) & 8) != 0) {
        pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(*(pxrInternal__aapl__pxrReserved__ **)(a3 + 8), (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)a2);
      }
      unint64_t v12 = *(atomic_ullong **)(v11 + 24);
      uint64_t explicit = atomic_load_explicit(v12 + 7, memory_order_acquire);
      if (!explicit) {
        uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v12);
      }
      uint64_t v14 = sub_216D563F8((_DWORD *)a3);
      return sub_216E2A618(explicit, v14, v6);
    case 2:
      unsigned __int8 v16 = sub_216D563F8((_DWORD *)a3);
      pxrInternal__aapl__pxrReserved__::SdfPath::AppendProperty((pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 8), v16, &v38);
      char v17 = a2 + 2;
      if (sub_216C4B19C(15))
      {
        Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v38);
        int v19 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
        if (!v19) {
          int v19 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
        }
        unint64_t v20 = *((void *)v19 + 54) & 0xFFFFFFFFFFFFFFF8;
        if (v20)
        {
          int v21 = (const char *)(v20 + 16);
          if (*(char *)(v20 + 39) < 0) {
            int v21 = *(const char **)v21;
          }
        }
        else
        {
          int v21 = "";
        }
        int v29 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(v17);
        uint64_t Identifier = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v29);
        if (*(char *)(Identifier + 23) >= 0) {
          uint64_t v33 = Identifier;
        }
        else {
          uint64_t v33 = *(void *)Identifier;
        }
        pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"RESOLVE: reading field %s:%s from @%s@, with t = %.3f as default\n", v31, v32, Text, v21, v33, *(void *)&v46);
      }
      char v34 = (void *)sub_2169791E0(v17);
      uint64_t v35 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if (!v35) {
        uint64_t v35 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      }
      LOBYTE(v6) = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v34, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v38, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v35 + 88), v6);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v39);
      sub_21697C414(&v38);
      return (void *)(v6 & 1);
    case 3:
      return (void *)sub_216E2DF30((_DWORD *)a3, a2, 0, 0, a4, a5, a6);
    case 4:
      int v23 = sub_216D563F8((_DWORD *)a3);
      pxrInternal__aapl__pxrReserved__::SdfPath::AppendProperty((pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 8), v23, &v44);
      sub_216D16CFC((uint64_t)&v38, (uint64_t *)(a3 + 8), (_DWORD *)(a3 + 16));
      int v24 = *(pxrInternal__aapl__pxrReserved__::Usd_ClipCache **)(a1 + 136);
      sub_216D0162C((uint64_t)&v38, &v36);
      ClipsForPrim = pxrInternal__aapl__pxrReserved__::Usd_ClipCache::GetClipsForPrim(v24, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v36);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v37);
      sub_21697C414(&v36);
      uint64_t v26 = (pxrInternal__aapl__pxrReserved__::Usd_ClipSet **)*ClipsForPrim;
      uint64_t v27 = (pxrInternal__aapl__pxrReserved__::Usd_ClipSet **)ClipsForPrim[1];
      break;
    default:
      goto LABEL_31;
  }
  while (1)
  {
    if (v26 == v27)
    {
      char v28 = 1;
      goto LABEL_26;
    }
    if (sub_216E06ADC(v26, (uint64_t)a2, (pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 8))
      && sub_216E06B5C((uint64_t)v26, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v44))
    {
      break;
    }
    v26 += 2;
  }
  LOBYTE(v6) = sub_216E2E1C4((_DWORD *)a3, (uint64_t)a2, v26, 0, 0, (uint64_t)a4, a6);
  char v28 = 0;
LABEL_26:
  if ((v43 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v43 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v42);
  sub_21697C414(&v41);
  if (v40) {
    sub_216D16E0C(v40);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v45);
  sub_21697C414(&v44);
  if (v28) {
LABEL_31:
  }
    LOBYTE(v6) = 0;
  return (void *)(v6 & 1);
}

void sub_216E31740(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va1, a7);
  va_start(va, a7);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  sub_216D16AD8((uint64_t)va);
  sub_21697B754((int *)va1);
  _Unwind_Resume(a1);
}

void *sub_216E317AC(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = &stru_26C74E160;
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C75D8E0;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76A128;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v4, (uint64_t)v5, **(double **)(a3 + 16));
}

uint64_t sub_216E31838(uint64_t a1, void *a2)
{
  return 1;
}

uint64_t sub_216E31860(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result = sub_216A31600(a2);
  if (result)
  {
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 4) != 0) {
      uint64_t v6 = (*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8) + 168))(a2);
    }
    else {
      uint64_t v6 = *(void *)a2;
    }
    uint64_t v7 = *(void *)(a1 + 8);
    return sub_216908A98(v6, v7);
  }
  return result;
}

uint64_t sub_216E318D0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  uint64_t v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216E3192C(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = MEMORY[0x263F8C250];
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C75D918;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76A198;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v4, (uint64_t)v5, **(double **)(a3 + 8));
}

uint64_t sub_216E319B8(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  uint64_t v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B920F0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B920F0))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B920E8, &dword_216758000);
    __cxa_guard_release(&qword_267B920F0);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B920E8;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216E33160((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216E332F4((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216E33910((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216E32DD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E33160(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216E332CC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216E332F4(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216E33824(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216E33910(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216E33E40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E33F2C(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C3831C(v8, a3, v9, a5);
}

void sub_216E33F80(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

uint64_t sub_216E34010(pxrInternal__aapl__pxrReserved__::Usd_Clip **a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, uint64_t (**a3)(void, uint64_t))
{
  int v4 = *a1;
  uint64_t v5 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (a3)
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    return sub_216E340D8(v4, a2, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v5 + 88), a3);
  }
  else
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    uint64_t v8 = sub_216C53204(v4, a2, (uint64_t)v5 + 88);
    if (sub_21677EC50(v8, MEMORY[0x263F8C288]))
    {
      return 0;
    }
    else if (sub_21677EC50(v8, (uint64_t)&stru_26C757FD0))
    {
      return 2;
    }
    else
    {
      return 1;
    }
  }
}

uint64_t sub_216E340D8(pxrInternal__aapl__pxrReserved__::Usd_Clip *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_GetLayerForClip(a1, (uint64_t *)&v12);
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC((uint64_t *)&v12);
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_TranslatePathToClip(a1, a2, &v11);
  uint64_t v9 = sub_216E341A4(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v11, a3, a4);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  sub_216ABB798(&v12);
  return v9;
}

void sub_216E3417C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a10)
{
}

uint64_t sub_216E341A4(pxrInternal__aapl__pxrReserved__::SdfLayer *a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(void, uint64_t))
{
  if (a4)
  {
    v6[1] = a4;
    v6[2] = (uint64_t (**)(void, uint64_t))MEMORY[0x263F8C250];
    __int16 v7 = 0;
    v6[0] = (uint64_t (**)(void, uint64_t))&unk_26C75D918;
    LODWORD(result) = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, v6);
    if ((_BYTE)v7) {
      return 0;
    }
    else {
      return result;
    }
  }
  else
  {
    return pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, 0);
  }
}

uint64_t sub_216E34218(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  uint64_t v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216E34274(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = &stru_26C74E190;
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C75D950;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76A1D0;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v4, (uint64_t)v5, **(double **)(a3 + 8));
}

uint64_t sub_216E34300(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  uint64_t v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92100, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92100))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B920F8, &dword_216758000);
    __cxa_guard_release(&qword_267B92100);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B920F8;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216E35AA8((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216E35C3C((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216E36258((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216E35720(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E35AA8(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216E35C14(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216E35C3C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216E3616C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216E36258(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216E36788(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E36874(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C38514(v8, a3, v9, a5);
}

void sub_216E368C8(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

uint64_t sub_216E36958(pxrInternal__aapl__pxrReserved__::Usd_Clip **a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, uint64_t (**a3)(void, uint64_t))
{
  uint64_t v4 = *a1;
  uint64_t v5 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (a3)
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    return sub_216E36A20(v4, a2, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v5 + 88), a3);
  }
  else
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    uint64_t v8 = sub_216C53204(v4, a2, (uint64_t)v5 + 88);
    if (sub_21677EC50(v8, MEMORY[0x263F8C288]))
    {
      return 0;
    }
    else if (sub_21677EC50(v8, (uint64_t)&stru_26C757FD0))
    {
      return 2;
    }
    else
    {
      return 1;
    }
  }
}

uint64_t sub_216E36A20(pxrInternal__aapl__pxrReserved__::Usd_Clip *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_GetLayerForClip(a1, (uint64_t *)&v12);
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC((uint64_t *)&v12);
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_TranslatePathToClip(a1, a2, &v11);
  uint64_t v9 = sub_216E36AEC(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v11, a3, a4);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  sub_216ABB798(&v12);
  return v9;
}

void sub_216E36AC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a10)
{
}

uint64_t sub_216E36AEC(pxrInternal__aapl__pxrReserved__::SdfLayer *a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(void, uint64_t))
{
  if (a4)
  {
    v6[1] = a4;
    v6[2] = (uint64_t (**)(void, uint64_t))&stru_26C74E190;
    __int16 v7 = 0;
    v6[0] = (uint64_t (**)(void, uint64_t))&unk_26C75D950;
    LODWORD(result) = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, v6);
    if ((_BYTE)v7) {
      return 0;
    }
    else {
      return result;
    }
  }
  else
  {
    return pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, 0);
  }
}

void *sub_216E36B60(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = MEMORY[0x263F8C250];
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C75D918;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76A198;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v4, (uint64_t)v5, **(double **)(a3 + 16));
}

void *sub_216E36BEC(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = &stru_26C74E190;
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C75D950;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76A1D0;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v4, (uint64_t)v5, **(double **)(a3 + 16));
}

uint64_t sub_216E36C78(uint64_t a1, uint64_t a2)
{
  char v3 = **(unsigned char **)(a1 + 8);
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    BOOL v5 = (*(void *)(a2 + 8) & 3) == 3;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5) {
    (*(void (**)(uint64_t))((v4 & 0xFFFFFFFFFFFFFFF8) + 32))(a2);
  }
  *(void *)(a2 + 8) = &unk_26C75031B;
  *(unsigned char *)a2 = v3;
  return 1;
}

uint64_t sub_216E36CDC(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t v2 = a2;
  uint64_t result = sub_2169975B8(a2);
  if (result)
  {
    uint64_t v5 = *((void *)v2 + 1);
    if ((v5 & 4) != 0) {
      uint64_t v2 = (pxrInternal__aapl__pxrReserved__::VtValue *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8) + 168))(v2);
    }
    return *(unsigned __int8 *)v2 == **(unsigned __int8 **)(a1 + 8);
  }
  return result;
}

uint64_t sub_216E36D40(uint64_t a1, void *a2)
{
  return 1;
}

uint64_t sub_216E36D68(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result = sub_216908770(a2);
  if (result)
  {
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 4) != 0) {
      uint64_t v6 = (*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8) + 168))(a2);
    }
    else {
      uint64_t v6 = *(void *)a2;
    }
    uint64_t v7 = *(void *)(a1 + 8);
    return sub_216908A98(v6, v7);
  }
  return result;
}

uint64_t sub_216E36DD8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  char v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216E36E34(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = MEMORY[0x263F8C258];
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C772360;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76A278;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v4, (uint64_t)v5, **(double **)(a3 + 8));
}

uint64_t sub_216E36EC0(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  uint64_t v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92110, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92110))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B92108, &dword_216758000);
    __cxa_guard_release(&qword_267B92110);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B92108;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216E38668((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216E387FC((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216E38E18((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216E382E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E38668(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216E387D4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216E387FC(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216E38D2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216E38E18(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216E39348(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E39434(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C3870C(v8, a3, v9, a5);
}

void sub_216E39488(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

uint64_t sub_216E39518(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  char v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216E39574(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = &stru_26C74E1D8;
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C75D9A0;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76A2B0;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v4, (uint64_t)v5, **(double **)(a3 + 8));
}

uint64_t sub_216E39600(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  int v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92120, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92120))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B92118, &dword_216758000);
    __cxa_guard_release(&qword_267B92120);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B92118;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216E3ADA8((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216E3AF3C((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216E3B558((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216E3AA20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E3ADA8(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216E3AF14(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216E3AF3C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216E3B46C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216E3B558(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216E3BA88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E3BB74(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C38904(v8, a3, v9, a5);
}

void sub_216E3BBC8(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

uint64_t sub_216E3BC58(pxrInternal__aapl__pxrReserved__::Usd_Clip **a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, uint64_t (**a3)(void, uint64_t))
{
  uint64_t v4 = *a1;
  uint64_t v5 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (a3)
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    return sub_216E3BD20(v4, a2, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v5 + 88), a3);
  }
  else
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    uint64_t v8 = sub_216C53204(v4, a2, (uint64_t)v5 + 88);
    if (sub_21677EC50(v8, MEMORY[0x263F8C288]))
    {
      return 0;
    }
    else if (sub_21677EC50(v8, (uint64_t)&stru_26C757FD0))
    {
      return 2;
    }
    else
    {
      return 1;
    }
  }
}

uint64_t sub_216E3BD20(pxrInternal__aapl__pxrReserved__::Usd_Clip *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_GetLayerForClip(a1, (uint64_t *)&v12);
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC((uint64_t *)&v12);
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_TranslatePathToClip(a1, a2, &v11);
  uint64_t v9 = sub_216E3BDEC(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v11, a3, a4);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  sub_216ABB798(&v12);
  return v9;
}

void sub_216E3BDC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a10)
{
}

uint64_t sub_216E3BDEC(pxrInternal__aapl__pxrReserved__::SdfLayer *a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(void, uint64_t))
{
  if (a4)
  {
    v6[1] = a4;
    v6[2] = (uint64_t (**)(void, uint64_t))&stru_26C74E1D8;
    __int16 v7 = 0;
    v6[0] = (uint64_t (**)(void, uint64_t))&unk_26C75D9A0;
    LODWORD(result) = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, v6);
    if ((_BYTE)v7) {
      return 0;
    }
    else {
      return result;
    }
  }
  else
  {
    return pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, 0);
  }
}

void *sub_216E3BE60(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = MEMORY[0x263F8C258];
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C772360;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76A278;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v4, (uint64_t)v5, **(double **)(a3 + 16));
}

void *sub_216E3BEEC(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = &stru_26C74E1D8;
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C75D9A0;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76A2B0;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v4, (uint64_t)v5, **(double **)(a3 + 16));
}

uint64_t sub_216E3BF78(uint64_t a1, uint64_t a2)
{
  int v3 = **(_DWORD **)(a1 + 8);
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    BOOL v5 = (*(void *)(a2 + 8) & 3) == 3;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5) {
    (*(void (**)(uint64_t))((v4 & 0xFFFFFFFFFFFFFFF8) + 32))(a2);
  }
  *(void *)(a2 + 8) = &unk_26C750543;
  *(_DWORD *)a2 = v3;
  return 1;
}

uint64_t sub_216E3BFDC(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t v2 = (uint64_t)a2;
  uint64_t result = sub_21695A85C(a2);
  if (result)
  {
    uint64_t v5 = *(void *)(v2 + 8);
    if ((v5 & 4) != 0) {
      uint64_t v2 = (*(uint64_t (**)(uint64_t))((v5 & 0xFFFFFFFFFFFFFFF8) + 168))(v2);
    }
    return *(_DWORD *)v2 == **(_DWORD **)(a1 + 8);
  }
  return result;
}

uint64_t sub_216E3C040(uint64_t a1, void *a2)
{
  return 1;
}

uint64_t sub_216E3C068(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result = sub_216907880(a2);
  if (result)
  {
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 4) != 0) {
      uint64_t v6 = (*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8) + 168))(a2);
    }
    else {
      uint64_t v6 = *(void *)a2;
    }
    uint64_t v7 = *(void *)(a1 + 8);
    return pxrInternal__aapl__pxrReserved__::UsdSkelTopology::operator==(v6, v7);
  }
  return result;
}

uint64_t sub_216E3C0D8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  int v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216E3C134(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = MEMORY[0x263F8C260];
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C75D9D8;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76A358;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v4, (uint64_t)v5, **(double **)(a3 + 8));
}

uint64_t sub_216E3C1C0(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  uint64_t v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92130, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92130))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B92128, &dword_216758000);
    __cxa_guard_release(&qword_267B92130);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B92128;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216E3D968((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216E3DAFC((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216E3E118((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216E3D5E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E3D968(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216E3DAD4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216E3DAFC(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216E3E02C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216E3E118(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216E3E648(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E3E734(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C38AFC(v8, a3, v9, a5);
}

void sub_216E3E788(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

uint64_t sub_216E3E818(pxrInternal__aapl__pxrReserved__::Usd_Clip **a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, uint64_t (**a3)(void, uint64_t))
{
  uint64_t v4 = *a1;
  uint64_t v5 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (a3)
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    return sub_216E3E8E0(v4, a2, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v5 + 88), a3);
  }
  else
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    uint64_t v8 = sub_216C53204(v4, a2, (uint64_t)v5 + 88);
    if (sub_21677EC50(v8, MEMORY[0x263F8C288]))
    {
      return 0;
    }
    else if (sub_21677EC50(v8, (uint64_t)&stru_26C757FD0))
    {
      return 2;
    }
    else
    {
      return 1;
    }
  }
}

uint64_t sub_216E3E8E0(pxrInternal__aapl__pxrReserved__::Usd_Clip *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_GetLayerForClip(a1, (uint64_t *)&v12);
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC((uint64_t *)&v12);
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_TranslatePathToClip(a1, a2, &v11);
  uint64_t v9 = sub_216E3E9AC(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v11, a3, a4);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  sub_216ABB798(&v12);
  return v9;
}

void sub_216E3E984(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a10)
{
}

uint64_t sub_216E3E9AC(pxrInternal__aapl__pxrReserved__::SdfLayer *a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(void, uint64_t))
{
  if (a4)
  {
    v6[1] = a4;
    v6[2] = (uint64_t (**)(void, uint64_t))MEMORY[0x263F8C260];
    __int16 v7 = 0;
    v6[0] = (uint64_t (**)(void, uint64_t))&unk_26C75D9D8;
    LODWORD(result) = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, v6);
    if ((_BYTE)v7) {
      return 0;
    }
    else {
      return result;
    }
  }
  else
  {
    return pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, 0);
  }
}

uint64_t sub_216E3EA20(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  int v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216E3EA7C(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = &stru_26C74E1F0;
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C75DA10;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76A390;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v4, (uint64_t)v5, **(double **)(a3 + 8));
}

uint64_t sub_216E3EB08(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  uint64_t v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92140, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92140))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B92138, &dword_216758000);
    __cxa_guard_release(&qword_267B92140);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B92138;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216E402B0((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216E40444((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216E40A60((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216E3FF28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E402B0(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216E4041C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216E40444(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216E40974(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216E40A60(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216E40F90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E4107C(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C38CF4(v8, a3, v9, a5);
}

void sub_216E410D0(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

uint64_t sub_216E41160(pxrInternal__aapl__pxrReserved__::Usd_Clip **a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, uint64_t (**a3)(void, uint64_t))
{
  uint64_t v4 = *a1;
  uint64_t v5 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (a3)
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    return sub_216E41228(v4, a2, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v5 + 88), a3);
  }
  else
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    uint64_t v8 = sub_216C53204(v4, a2, (uint64_t)v5 + 88);
    if (sub_21677EC50(v8, MEMORY[0x263F8C288]))
    {
      return 0;
    }
    else if (sub_21677EC50(v8, (uint64_t)&stru_26C757FD0))
    {
      return 2;
    }
    else
    {
      return 1;
    }
  }
}

uint64_t sub_216E41228(pxrInternal__aapl__pxrReserved__::Usd_Clip *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_GetLayerForClip(a1, (uint64_t *)&v12);
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC((uint64_t *)&v12);
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_TranslatePathToClip(a1, a2, &v11);
  uint64_t v9 = sub_216E412F4(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v11, a3, a4);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  sub_216ABB798(&v12);
  return v9;
}

void sub_216E412CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a10)
{
}

uint64_t sub_216E412F4(pxrInternal__aapl__pxrReserved__::SdfLayer *a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(void, uint64_t))
{
  if (a4)
  {
    v6[1] = a4;
    v6[2] = (uint64_t (**)(void, uint64_t))&stru_26C74E1F0;
    __int16 v7 = 0;
    v6[0] = (uint64_t (**)(void, uint64_t))&unk_26C75DA10;
    LODWORD(result) = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, v6);
    if ((_BYTE)v7) {
      return 0;
    }
    else {
      return result;
    }
  }
  else
  {
    return pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, 0);
  }
}

void *sub_216E41368(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = MEMORY[0x263F8C260];
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C75D9D8;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76A358;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v4, (uint64_t)v5, **(double **)(a3 + 16));
}

void *sub_216E413F4(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = &stru_26C74E1F0;
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C75DA10;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76A390;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v4, (uint64_t)v5, **(double **)(a3 + 16));
}

uint64_t sub_216E41480(uint64_t a1, uint64_t a2)
{
  int v3 = **(_DWORD **)(a1 + 8);
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    BOOL v5 = (*(void *)(a2 + 8) & 3) == 3;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5) {
    (*(void (**)(uint64_t))((v4 & 0xFFFFFFFFFFFFFFF8) + 32))(a2);
  }
  *(void *)(a2 + 8) = &unk_26C7505FB;
  *(_DWORD *)a2 = v3;
  return 1;
}

uint64_t sub_216E414E4(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t v2 = (uint64_t)a2;
  uint64_t result = sub_216B8CB68(a2);
  if (result)
  {
    uint64_t v5 = *(void *)(v2 + 8);
    if ((v5 & 4) != 0) {
      uint64_t v2 = (*(uint64_t (**)(uint64_t))((v5 & 0xFFFFFFFFFFFFFFF8) + 168))(v2);
    }
    return *(_DWORD *)v2 == **(_DWORD **)(a1 + 8);
  }
  return result;
}

uint64_t sub_216E41548(uint64_t a1, void *a2)
{
  return 1;
}

uint64_t sub_216E41570(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result = sub_2169062C0(a2);
  if (result)
  {
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 4) != 0) {
      uint64_t v6 = (*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8) + 168))(a2);
    }
    else {
      uint64_t v6 = *(void *)a2;
    }
    uint64_t v7 = *(void *)(a1 + 8);
    return pxrInternal__aapl__pxrReserved__::UsdSkelTopology::operator==(v6, v7);
  }
  return result;
}

uint64_t sub_216E415E0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  int v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216E4163C(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = MEMORY[0x263F8C290];
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C75DA48;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76A438;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v4, (uint64_t)v5, **(double **)(a3 + 8));
}

uint64_t sub_216E416C8(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  uint64_t v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92150, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92150))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B92148, &dword_216758000);
    __cxa_guard_release(&qword_267B92150);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B92148;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216E42E70((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216E43004((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216E43620((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216E42AE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E42E70(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216E42FDC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216E43004(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216E43534(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216E43620(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216E43B50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E43C3C(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C38EEC(v8, a3, v9, a5);
}

void sub_216E43C90(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

uint64_t sub_216E43D20(pxrInternal__aapl__pxrReserved__::Usd_Clip **a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, uint64_t (**a3)(void, uint64_t))
{
  uint64_t v4 = *a1;
  uint64_t v5 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (a3)
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    return sub_216E43DE8(v4, a2, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v5 + 88), a3);
  }
  else
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    uint64_t v8 = sub_216C53204(v4, a2, (uint64_t)v5 + 88);
    if (sub_21677EC50(v8, MEMORY[0x263F8C288]))
    {
      return 0;
    }
    else if (sub_21677EC50(v8, (uint64_t)&stru_26C757FD0))
    {
      return 2;
    }
    else
    {
      return 1;
    }
  }
}

uint64_t sub_216E43DE8(pxrInternal__aapl__pxrReserved__::Usd_Clip *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_GetLayerForClip(a1, (uint64_t *)&v12);
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC((uint64_t *)&v12);
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_TranslatePathToClip(a1, a2, &v11);
  uint64_t v9 = sub_216E43EB4(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v11, a3, a4);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  sub_216ABB798(&v12);
  return v9;
}

void sub_216E43E8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a10)
{
}

uint64_t sub_216E43EB4(pxrInternal__aapl__pxrReserved__::SdfLayer *a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(void, uint64_t))
{
  if (a4)
  {
    v6[1] = a4;
    v6[2] = (uint64_t (**)(void, uint64_t))MEMORY[0x263F8C290];
    __int16 v7 = 0;
    v6[0] = (uint64_t (**)(void, uint64_t))&unk_26C75DA48;
    LODWORD(result) = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, v6);
    if ((_BYTE)v7) {
      return 0;
    }
    else {
      return result;
    }
  }
  else
  {
    return pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, 0);
  }
}

uint64_t sub_216E43F28(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  int v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216E43F84(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = &stru_26C74E208;
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C75DA80;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76A470;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v4, (uint64_t)v5, **(double **)(a3 + 8));
}

uint64_t sub_216E44010(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  uint64_t v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92160, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92160))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B92158, &dword_216758000);
    __cxa_guard_release(&qword_267B92160);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B92158;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216E457B8((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216E4594C((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216E45F68((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216E45430(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E457B8(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216E45924(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216E4594C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216E45E7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216E45F68(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216E46498(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E46584(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C390E4(v8, a3, v9, a5);
}

void sub_216E465D8(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

uint64_t sub_216E46668(pxrInternal__aapl__pxrReserved__::Usd_Clip **a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, uint64_t (**a3)(void, uint64_t))
{
  uint64_t v4 = *a1;
  uint64_t v5 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (a3)
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    return sub_216E46730(v4, a2, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v5 + 88), a3);
  }
  else
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    uint64_t v8 = sub_216C53204(v4, a2, (uint64_t)v5 + 88);
    if (sub_21677EC50(v8, MEMORY[0x263F8C288]))
    {
      return 0;
    }
    else if (sub_21677EC50(v8, (uint64_t)&stru_26C757FD0))
    {
      return 2;
    }
    else
    {
      return 1;
    }
  }
}

uint64_t sub_216E46730(pxrInternal__aapl__pxrReserved__::Usd_Clip *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_GetLayerForClip(a1, (uint64_t *)&v12);
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC((uint64_t *)&v12);
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_TranslatePathToClip(a1, a2, &v11);
  uint64_t v9 = sub_216E467FC(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v11, a3, a4);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  sub_216ABB798(&v12);
  return v9;
}

void sub_216E467D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a10)
{
}

uint64_t sub_216E467FC(pxrInternal__aapl__pxrReserved__::SdfLayer *a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(void, uint64_t))
{
  if (a4)
  {
    v6[1] = a4;
    v6[2] = (uint64_t (**)(void, uint64_t))&stru_26C74E208;
    __int16 v7 = 0;
    v6[0] = (uint64_t (**)(void, uint64_t))&unk_26C75DA80;
    LODWORD(result) = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, v6);
    if ((_BYTE)v7) {
      return 0;
    }
    else {
      return result;
    }
  }
  else
  {
    return pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, 0);
  }
}

void *sub_216E46870(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = MEMORY[0x263F8C290];
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C75DA48;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76A438;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v4, (uint64_t)v5, **(double **)(a3 + 16));
}

void *sub_216E468FC(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = &stru_26C74E208;
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C75DA80;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76A470;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v4, (uint64_t)v5, **(double **)(a3 + 16));
}

uint64_t sub_216E46988(uint64_t a1, void *a2)
{
  uint64_t v3 = **(void **)(a1 + 8);
  uint64_t v4 = a2[1];
  if (v4) {
    BOOL v5 = (a2[1] & 3) == 3;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5) {
    (*(void (**)(void *))((v4 & 0xFFFFFFFFFFFFFFF8) + 32))(a2);
  }
  *a2 = v3;
  a2[1] = &unk_26C750823;
  return 1;
}

uint64_t sub_216E469E8(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t v2 = a2;
  uint64_t result = sub_2169F9268(a2);
  if (result)
  {
    uint64_t v5 = *((void *)v2 + 1);
    if ((v5 & 4) != 0) {
      uint64_t v2 = (pxrInternal__aapl__pxrReserved__::VtValue *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8) + 168))(v2);
    }
    return *(void *)v2 == **(void **)(a1 + 8);
  }
  return result;
}

uint64_t sub_216E46A4C(uint64_t a1, void *a2)
{
  return 1;
}

uint64_t sub_216E46A74(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result = sub_2169DDCD4(a2);
  if (result)
  {
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 4) != 0) {
      uint64_t v6 = (*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8) + 168))(a2);
    }
    else {
      uint64_t v6 = *(void *)a2;
    }
    uint64_t v7 = *(void *)(a1 + 8);
    return sub_2169ADC94(v6, v7);
  }
  return result;
}

uint64_t sub_216E46AE4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  uint64_t v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216E46B40(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = MEMORY[0x263F8C298];
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C75DAB8;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76A518;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v4, (uint64_t)v5, **(double **)(a3 + 8));
}

uint64_t sub_216E46BCC(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  uint64_t v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92170, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92170))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B92168, &dword_216758000);
    __cxa_guard_release(&qword_267B92170);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B92168;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216E48374((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216E48508((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216E48B24((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216E47FEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E48374(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216E484E0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216E48508(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216E48A38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216E48B24(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216E49054(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E49140(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C392DC(v8, a3, v9, a5);
}

void sub_216E49194(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

uint64_t sub_216E49224(pxrInternal__aapl__pxrReserved__::Usd_Clip **a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, uint64_t (**a3)(void, uint64_t))
{
  uint64_t v4 = *a1;
  uint64_t v5 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (a3)
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    return sub_216E492EC(v4, a2, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v5 + 88), a3);
  }
  else
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    uint64_t v8 = sub_216C53204(v4, a2, (uint64_t)v5 + 88);
    if (sub_21677EC50(v8, MEMORY[0x263F8C288]))
    {
      return 0;
    }
    else if (sub_21677EC50(v8, (uint64_t)&stru_26C757FD0))
    {
      return 2;
    }
    else
    {
      return 1;
    }
  }
}

uint64_t sub_216E492EC(pxrInternal__aapl__pxrReserved__::Usd_Clip *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_GetLayerForClip(a1, (uint64_t *)&v12);
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC((uint64_t *)&v12);
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_TranslatePathToClip(a1, a2, &v11);
  uint64_t v9 = sub_216E493B8(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v11, a3, a4);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  sub_216ABB798(&v12);
  return v9;
}

void sub_216E49390(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a10)
{
}

uint64_t sub_216E493B8(pxrInternal__aapl__pxrReserved__::SdfLayer *a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(void, uint64_t))
{
  if (a4)
  {
    v6[1] = a4;
    v6[2] = (uint64_t (**)(void, uint64_t))MEMORY[0x263F8C298];
    __int16 v7 = 0;
    v6[0] = (uint64_t (**)(void, uint64_t))&unk_26C75DAB8;
    LODWORD(result) = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, v6);
    if ((_BYTE)v7) {
      return 0;
    }
    else {
      return result;
    }
  }
  else
  {
    return pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, 0);
  }
}

uint64_t sub_216E4942C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  uint64_t v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216E49488(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = &stru_26C74E220;
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C75DAF0;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76A550;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v4, (uint64_t)v5, **(double **)(a3 + 8));
}

uint64_t sub_216E49514(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  uint64_t v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92180, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92180))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B92178, &dword_216758000);
    __cxa_guard_release(&qword_267B92180);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B92178;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216E4ACBC((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216E4AE50((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216E4B46C((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216E4A934(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E4ACBC(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216E4AE28(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216E4AE50(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216E4B380(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216E4B46C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216E4B99C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E4BA88(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C394D4(v8, a3, v9, a5);
}

void sub_216E4BADC(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

uint64_t sub_216E4BB6C(pxrInternal__aapl__pxrReserved__::Usd_Clip **a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, uint64_t (**a3)(void, uint64_t))
{
  uint64_t v4 = *a1;
  uint64_t v5 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (a3)
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    return sub_216E4BC34(v4, a2, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v5 + 88), a3);
  }
  else
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    uint64_t v8 = sub_216C53204(v4, a2, (uint64_t)v5 + 88);
    if (sub_21677EC50(v8, MEMORY[0x263F8C288]))
    {
      return 0;
    }
    else if (sub_21677EC50(v8, (uint64_t)&stru_26C757FD0))
    {
      return 2;
    }
    else
    {
      return 1;
    }
  }
}

uint64_t sub_216E4BC34(pxrInternal__aapl__pxrReserved__::Usd_Clip *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_GetLayerForClip(a1, (uint64_t *)&v12);
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC((uint64_t *)&v12);
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_TranslatePathToClip(a1, a2, &v11);
  uint64_t v9 = sub_216E4BD00(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v11, a3, a4);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  sub_216ABB798(&v12);
  return v9;
}

void sub_216E4BCD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a10)
{
}

uint64_t sub_216E4BD00(pxrInternal__aapl__pxrReserved__::SdfLayer *a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(void, uint64_t))
{
  if (a4)
  {
    v6[1] = a4;
    v6[2] = (uint64_t (**)(void, uint64_t))&stru_26C74E220;
    __int16 v7 = 0;
    v6[0] = (uint64_t (**)(void, uint64_t))&unk_26C75DAF0;
    LODWORD(result) = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, v6);
    if ((_BYTE)v7) {
      return 0;
    }
    else {
      return result;
    }
  }
  else
  {
    return pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, 0);
  }
}

void *sub_216E4BD74(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = MEMORY[0x263F8C298];
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C75DAB8;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76A518;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v4, (uint64_t)v5, **(double **)(a3 + 16));
}

void *sub_216E4BE00(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = &stru_26C74E220;
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C75DAF0;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76A550;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v4, (uint64_t)v5, **(double **)(a3 + 16));
}

uint64_t sub_216E4BE8C(uint64_t a1, void *a2)
{
  uint64_t v3 = **(void **)(a1 + 8);
  uint64_t v4 = a2[1];
  if (v4) {
    BOOL v5 = (a2[1] & 3) == 3;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5) {
    (*(void (**)(void *))((v4 & 0xFFFFFFFFFFFFFFF8) + 32))(a2);
  }
  *a2 = v3;
  a2[1] = &unk_26C7508DB;
  return 1;
}

uint64_t sub_216E4BEEC(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t v2 = a2;
  uint64_t result = sub_216B8D0C8(a2);
  if (result)
  {
    uint64_t v5 = *((void *)v2 + 1);
    if ((v5 & 4) != 0) {
      uint64_t v2 = (pxrInternal__aapl__pxrReserved__::VtValue *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8) + 168))(v2);
    }
    return *(void *)v2 == **(void **)(a1 + 8);
  }
  return result;
}

uint64_t sub_216E4BF50(uint64_t a1, void *a2)
{
  return 1;
}

uint64_t sub_216E4BF78(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result = sub_2169DF540(a2);
  if (result)
  {
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 4) != 0) {
      uint64_t v6 = (*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8) + 168))(a2);
    }
    else {
      uint64_t v6 = *(void *)a2;
    }
    uint64_t v7 = *(void *)(a1 + 8);
    return sub_2169ADC94(v6, v7);
  }
  return result;
}

uint64_t sub_216E4BFE8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  uint64_t v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216E4C044(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74C510;
  __int16 v7 = 0;
  v6[0] = &unk_26C75DB28;
  if (*(_DWORD *)(a1 + 784) == 1) {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C766B30;
  }
  else {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76A5F8;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v5, (uint64_t)v6, **(double **)(a3 + 8));
}

uint64_t sub_216E4C0F4(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  uint64_t v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92190, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92190))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B92188, &dword_216758000);
    __cxa_guard_release(&qword_267B92190);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B92188;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216E4D89C((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216E4DA30((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216E4E04C((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216E4D514(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E4D89C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216E4DA08(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216E4DA30(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216E4DF60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216E4E04C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216E4E57C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E4E668(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C396CC(v8, a3, v9, a5);
}

void sub_216E4E6BC(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

uint64_t sub_216E4E74C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  uint64_t v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216E4E7A8(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74E268;
  __int16 v7 = 0;
  v6[0] = &unk_26C75DB60;
  if (*(_DWORD *)(a1 + 784) == 1) {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C766B68;
  }
  else {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76A630;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v5, (uint64_t)v6, **(double **)(a3 + 8));
}

uint64_t sub_216E4E858(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  int v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B921A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B921A0))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B92198, &dword_216758000);
    __cxa_guard_release(&qword_267B921A0);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B92198;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216E50000((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216E50194((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216E507B0((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216E4FC78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E50000(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216E5016C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216E50194(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216E506C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216E507B0(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216E50CE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E50DCC(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C398C4(v8, a3, v9, a5);
}

void sub_216E50E20(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

void *sub_216E50EB0(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74C510;
  __int16 v7 = 0;
  v6[0] = &unk_26C75DB28;
  if (*(_DWORD *)(a1 + 784) == 1) {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C766B30;
  }
  else {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76A5F8;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v5, (uint64_t)v6, **(double **)(a3 + 16));
}

void *sub_216E50F60(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74E268;
  __int16 v7 = 0;
  v6[0] = &unk_26C75DB60;
  if (*(_DWORD *)(a1 + 784) == 1) {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C766B68;
  }
  else {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76A630;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v5, (uint64_t)v6, **(double **)(a3 + 16));
}

uint64_t sub_216E51010(uint64_t a1, uint64_t a2)
{
  __int16 v3 = **(_WORD **)(a1 + 8);
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    BOOL v5 = (*(void *)(a2 + 8) & 3) == 3;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5) {
    (*(void (**)(uint64_t))((v4 & 0xFFFFFFFFFFFFFFF8) + 32))(a2);
  }
  *(void *)(a2 + 8) = (char *)&off_26C750990 + 3;
  *(_WORD *)a2 = v3;
  return 1;
}

uint64_t sub_216E51074(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t v2 = a2;
  uint64_t result = sub_216B8D444(a2);
  if (result)
  {
    uint64_t v5 = *((void *)v2 + 1);
    if ((v5 & 4) != 0) {
      uint64_t v2 = (pxrInternal__aapl__pxrReserved__::VtValue *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8) + 168))(v2);
    }
    return pxrInternal__aapl__pxrReserved__::pxr_half::half::_toFloat[*(unsigned __int16 *)v2] == pxrInternal__aapl__pxrReserved__::pxr_half::half::_toFloat[**(unsigned __int16 **)(a1 + 8)];
  }
  return result;
}

uint64_t sub_216E510E8(uint64_t a1, void *a2)
{
  return 1;
}

uint64_t sub_216E51110(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result = sub_2168F8308(a2);
  if (result)
  {
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 4) != 0) {
      uint64_t v6 = (void *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8)
    }
                                                                                            + 168))(a2);
    else {
      uint64_t v6 = *(void **)a2;
    }
    uint64_t v7 = *(void *)(a1 + 8);
    return sub_2168F973C(v6, v7);
  }
  return result;
}

uint64_t sub_216E51180(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  __int16 v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216E511DC(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = MEMORY[0x263F8C248];
  __int16 v7 = 0;
  v6[0] = &unk_26C75DB98;
  if (*(_DWORD *)(a1 + 784) == 1) {
    __int16 v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C766BA0;
  }
  else {
    __int16 v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76A6D8;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v5, (uint64_t)v6, **(double **)(a3 + 8));
}

uint64_t sub_216E5128C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  int v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B921B0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B921B0))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B921A8, &dword_216758000);
    __cxa_guard_release(&qword_267B921B0);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B921A8;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216E52A34((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216E52BC8((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216E531E4((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216E526AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E52A34(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216E52BA0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216E52BC8(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216E530F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216E531E4(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216E53714(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E53800(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C39ABC(v8, a3, v9, a5);
}

void sub_216E53854(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

uint64_t sub_216E538E4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  __int16 v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216E53940(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74E250;
  __int16 v7 = 0;
  v6[0] = &unk_26C75DBD0;
  if (*(_DWORD *)(a1 + 784) == 1) {
    __int16 v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C766BD8;
  }
  else {
    __int16 v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76A710;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v5, (uint64_t)v6, **(double **)(a3 + 8));
}

uint64_t sub_216E539F0(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  int v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B921C0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B921C0))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B921B8, &dword_216758000);
    __cxa_guard_release(&qword_267B921C0);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B921B8;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216E55198((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216E5532C((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216E55948((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216E54E10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E55198(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216E55304(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216E5532C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216E5585C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216E55948(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216E55E78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E55F64(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C39CB4(v8, a3, v9, a5);
}

void sub_216E55FB8(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

void *sub_216E56048(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = MEMORY[0x263F8C248];
  __int16 v7 = 0;
  v6[0] = &unk_26C75DB98;
  if (*(_DWORD *)(a1 + 784) == 1) {
    __int16 v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C766BA0;
  }
  else {
    __int16 v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76A6D8;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v5, (uint64_t)v6, **(double **)(a3 + 16));
}

void *sub_216E560F8(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74E250;
  __int16 v7 = 0;
  v6[0] = &unk_26C75DBD0;
  if (*(_DWORD *)(a1 + 784) == 1) {
    __int16 v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C766BD8;
  }
  else {
    __int16 v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76A710;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v5, (uint64_t)v6, **(double **)(a3 + 16));
}

uint64_t sub_216E561A8(uint64_t a1, uint64_t a2)
{
  int v3 = **(_DWORD **)(a1 + 8);
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    BOOL v5 = (*(void *)(a2 + 8) & 3) == 3;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5) {
    (*(void (**)(uint64_t))((v4 & 0xFFFFFFFFFFFFFFF8) + 32))(a2);
  }
  *(void *)(a2 + 8) = &unk_26C750A4B;
  *(_DWORD *)a2 = v3;
  return 1;
}

uint64_t sub_216E56214(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t v2 = (uint64_t)a2;
  uint64_t result = sub_21691FA2C(a2);
  if (result)
  {
    uint64_t v5 = *(void *)(v2 + 8);
    if ((v5 & 4) != 0) {
      uint64_t v2 = (*(uint64_t (**)(uint64_t))((v5 & 0xFFFFFFFFFFFFFFF8) + 168))(v2);
    }
    return *(float *)v2 == **(float **)(a1 + 8);
  }
  return result;
}

uint64_t sub_216E56278(uint64_t a1, void *a2)
{
  return 1;
}

uint64_t sub_216E562A0(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result = sub_2168F8860(a2);
  if (result)
  {
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 4) != 0) {
      uint64_t v6 = (void *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8)
    }
                                                                                            + 168))(a2);
    else {
      uint64_t v6 = *(void **)a2;
    }
    uint64_t v7 = *(void *)(a1 + 8);
    return sub_2168F8B8C(v6, v7);
  }
  return result;
}

uint64_t sub_216E56310(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  int v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216E5636C(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = MEMORY[0x263F8C240];
  __int16 v7 = 0;
  v6[0] = &unk_26C75DC08;
  if (*(_DWORD *)(a1 + 784) == 1) {
    int v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C766C10;
  }
  else {
    int v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76A7B8;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v5, (uint64_t)v6, **(double **)(a3 + 8));
}

uint64_t sub_216E5641C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  int v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B921D0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B921D0))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B921C8, &dword_216758000);
    __cxa_guard_release(&qword_267B921D0);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B921C8;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216E57BC4((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216E57D58((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216E58374((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216E5783C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E57BC4(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216E57D30(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216E57D58(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216E58288(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216E58374(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216E588A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E58990(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C39EAC(v8, a3, v9, a5);
}

void sub_216E589E4(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

uint64_t sub_216E58A74(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  int v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216E58AD0(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74E238;
  __int16 v7 = 0;
  v6[0] = &unk_26C75DC40;
  if (*(_DWORD *)(a1 + 784) == 1) {
    int v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C766C48;
  }
  else {
    int v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76A7F0;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v5, (uint64_t)v6, **(double **)(a3 + 8));
}

uint64_t sub_216E58B80(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  int v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B921E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B921E0))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B921D8, &dword_216758000);
    __cxa_guard_release(&qword_267B921E0);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B921D8;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216E5A328((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216E5A4BC((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216E5AAD8((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216E59FA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E5A328(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216E5A494(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216E5A4BC(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216E5A9EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216E5AAD8(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216E5B008(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E5B0F4(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C3A0A4(v8, a3, v9, a5);
}

void sub_216E5B148(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

void *sub_216E5B1D8(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = MEMORY[0x263F8C240];
  __int16 v7 = 0;
  v6[0] = &unk_26C75DC08;
  if (*(_DWORD *)(a1 + 784) == 1) {
    int v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C766C10;
  }
  else {
    int v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76A7B8;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v5, (uint64_t)v6, **(double **)(a3 + 16));
}

void *sub_216E5B288(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74E238;
  __int16 v7 = 0;
  v6[0] = &unk_26C75DC40;
  if (*(_DWORD *)(a1 + 784) == 1) {
    int v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C766C48;
  }
  else {
    int v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76A7F0;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v5, (uint64_t)v6, **(double **)(a3 + 16));
}

uint64_t sub_216E5B338(uint64_t a1, void *a2)
{
  return 1;
}

uint64_t sub_216E5B360(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result = sub_2168F9F4C(a2);
  if (result)
  {
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 4) != 0) {
      uint64_t v6 = (void *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8)
    }
                                                                                            + 168))(a2);
    else {
      uint64_t v6 = *(void **)a2;
    }
    uint64_t v7 = *(void *)(a1 + 8);
    return sub_2168FA278(v6, v7);
  }
  return result;
}

uint64_t sub_216E5B3D0(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C7557E0;
  __int16 v7 = 0;
  v6[0] = &unk_26C75DC78;
  if (*(_DWORD *)(a1 + 784) == 1) {
    int v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C766C80;
  }
  else {
    int v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76A860;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v5, (uint64_t)v6, **(double **)(a3 + 8));
}

uint64_t sub_216E5B480(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C3A2B4(v8, a3, v9, a5);
}

void sub_216E5B4D4(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

uint64_t sub_216E5B564(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C7558A8;
  __int16 v7 = 0;
  v6[0] = &unk_26C75DCB0;
  if (*(_DWORD *)(a1 + 784) == 1) {
    int v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C766CB8;
  }
  else {
    int v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76A898;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v5, (uint64_t)v6, **(double **)(a3 + 8));
}

uint64_t sub_216E5B614(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C3A4F0(v8, a3, v9, a5);
}

void sub_216E5B668(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

void *sub_216E5B6F8(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C7557E0;
  __int16 v7 = 0;
  v6[0] = &unk_26C75DC78;
  if (*(_DWORD *)(a1 + 784) == 1) {
    int v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C766C80;
  }
  else {
    int v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76A860;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v5, (uint64_t)v6, **(double **)(a3 + 16));
}

void *sub_216E5B7A8(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C7558A8;
  __int16 v7 = 0;
  v6[0] = &unk_26C75DCB0;
  if (*(_DWORD *)(a1 + 784) == 1) {
    int v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C766CB8;
  }
  else {
    int v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76A898;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v5, (uint64_t)v6, **(double **)(a3 + 16));
}

uint64_t sub_216E5B858(uint64_t a1, void *a2)
{
  return 1;
}

uint64_t sub_216E5B880(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t v2 = (uint64_t)a2;
  uint64_t result = sub_216B8D878(a2);
  if (result)
  {
    uint64_t v5 = *(void *)(v2 + 8);
    if ((v5 & 4) != 0) {
      uint64_t v2 = (*(uint64_t (**)(uint64_t))((v5 & 0xFFFFFFFFFFFFFFF8) + 168))(v2);
    }
    return *(double *)v2 == **(double **)(a1 + 8);
  }
  return result;
}

uint64_t sub_216E5B8E4(uint64_t a1, void *a2)
{
  return 1;
}

uint64_t sub_216E5B90C(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result = sub_216B8DA34(a2);
  if (result)
  {
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 4) != 0) {
      uint64_t v6 = (void *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8)
    }
                                                                                            + 168))(a2);
    else {
      uint64_t v6 = *(void **)a2;
    }
    uint64_t v7 = *(void *)(a1 + 8);
    return sub_2168FA278(v6, v7);
  }
  return result;
}

uint64_t sub_216E5B97C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  int v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216E5B9D8(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = &stru_26C747090;
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C75D628;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76A940;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v4, (uint64_t)v5, **(double **)(a3 + 8));
}

uint64_t sub_216E5BA64(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  int v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B921F0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B921F0))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B921E8, &dword_216758000);
    __cxa_guard_release(&qword_267B921F0);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B921E8;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216E5D20C((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216E5D3A0((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216E5D9BC((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216E5CE84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E5D20C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216E5D378(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216E5D3A0(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216E5D8D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216E5D9BC(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216E5DEEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E5DFD8(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C3A6E8(v8, a3, v9, a5);
}

void sub_216E5E02C(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

uint64_t sub_216E5E0BC(pxrInternal__aapl__pxrReserved__::Usd_Clip **a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, uint64_t (**a3)(void, uint64_t))
{
  uint64_t v4 = *a1;
  uint64_t v5 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (a3)
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    return sub_216E5E184(v4, a2, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v5 + 88), a3);
  }
  else
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    uint64_t v8 = sub_216C53204(v4, a2, (uint64_t)v5 + 88);
    if (sub_21677EC50(v8, MEMORY[0x263F8C288]))
    {
      return 0;
    }
    else if (sub_21677EC50(v8, (uint64_t)&stru_26C757FD0))
    {
      return 2;
    }
    else
    {
      return 1;
    }
  }
}

uint64_t sub_216E5E184(pxrInternal__aapl__pxrReserved__::Usd_Clip *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_GetLayerForClip(a1, (uint64_t *)&v12);
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC((uint64_t *)&v12);
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_TranslatePathToClip(a1, a2, &v11);
  uint64_t v9 = sub_216C08B4C(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v11, a3, a4);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  sub_216ABB798(&v12);
  return v9;
}

void sub_216E5E228(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a10)
{
}

uint64_t sub_216E5E250(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  int v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216E5E2AC(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = &stru_26C74E280;
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C75DCE8;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76A978;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v4, (uint64_t)v5, **(double **)(a3 + 8));
}

uint64_t sub_216E5E338(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  uint64_t v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92200, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92200))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B921F8, &dword_216758000);
    __cxa_guard_release(&qword_267B92200);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B921F8;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216E5FAE0((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216E5FC74((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216E60290((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216E5F758(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E5FAE0(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216E5FC4C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216E5FC74(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216E601A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216E60290(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216E607C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E608AC(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C3A8E0(v8, a3, v9, a5);
}

void sub_216E60900(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

uint64_t sub_216E60990(pxrInternal__aapl__pxrReserved__::Usd_Clip **a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, uint64_t (**a3)(void, uint64_t))
{
  uint64_t v4 = *a1;
  uint64_t v5 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (a3)
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    return sub_216E60A58(v4, a2, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v5 + 88), a3);
  }
  else
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    uint64_t v8 = sub_216C53204(v4, a2, (uint64_t)v5 + 88);
    if (sub_21677EC50(v8, MEMORY[0x263F8C288]))
    {
      return 0;
    }
    else if (sub_21677EC50(v8, (uint64_t)&stru_26C757FD0))
    {
      return 2;
    }
    else
    {
      return 1;
    }
  }
}

uint64_t sub_216E60A58(pxrInternal__aapl__pxrReserved__::Usd_Clip *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_GetLayerForClip(a1, (uint64_t *)&v12);
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC((uint64_t *)&v12);
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_TranslatePathToClip(a1, a2, &v11);
  uint64_t v9 = sub_216E60B24(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v11, a3, a4);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  sub_216ABB798(&v12);
  return v9;
}

void sub_216E60AFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a10)
{
}

uint64_t sub_216E60B24(pxrInternal__aapl__pxrReserved__::SdfLayer *a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(void, uint64_t))
{
  if (a4)
  {
    v6[1] = a4;
    v6[2] = (uint64_t (**)(void, uint64_t))&stru_26C74E280;
    __int16 v7 = 0;
    v6[0] = (uint64_t (**)(void, uint64_t))&unk_26C75DCE8;
    LODWORD(result) = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, v6);
    if ((_BYTE)v7) {
      return 0;
    }
    else {
      return result;
    }
  }
  else
  {
    return pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, 0);
  }
}

void *sub_216E60B98(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = &stru_26C747090;
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C75D628;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76A940;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v4, (uint64_t)v5, **(double **)(a3 + 16));
}

void *sub_216E60C24(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = &stru_26C74E280;
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C75DCE8;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76A978;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v4, (uint64_t)v5, **(double **)(a3 + 16));
}

uint64_t sub_216E60CB0(uint64_t a1, void *a2)
{
  return 1;
}

uint64_t sub_216E60CD8(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result = sub_216998044(a2);
  if (result)
  {
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 4) != 0) {
      __int16 v6 = (uint64_t *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8)
    }
                                                                                             + 168))(a2);
    else {
      __int16 v6 = *(uint64_t **)a2;
    }
    uint64_t v7 = *(void *)(a1 + 8);
    return sub_2169B1D58(v6, v7);
  }
  return result;
}

uint64_t sub_216E60D48(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = &stru_26C74C2C0;
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C758B08;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76A9E8;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v4, (uint64_t)v5, **(double **)(a3 + 8));
}

uint64_t sub_216E60DD4(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C3AAD8(v8, a3, v9, a5);
}

void sub_216E60E28(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

uint64_t sub_216E60EB8(pxrInternal__aapl__pxrReserved__::Usd_Clip **a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, uint64_t (**a3)(void, uint64_t))
{
  uint64_t v4 = *a1;
  uint64_t v5 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (a3)
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    return sub_216E60F80(v4, a2, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v5 + 88), a3);
  }
  else
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    uint64_t v8 = sub_216C53204(v4, a2, (uint64_t)v5 + 88);
    if (sub_21677EC50(v8, MEMORY[0x263F8C288]))
    {
      return 0;
    }
    else if (sub_21677EC50(v8, (uint64_t)&stru_26C757FD0))
    {
      return 2;
    }
    else
    {
      return 1;
    }
  }
}

uint64_t sub_216E60F80(pxrInternal__aapl__pxrReserved__::Usd_Clip *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_GetLayerForClip(a1, (uint64_t *)&v12);
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC((uint64_t *)&v12);
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_TranslatePathToClip(a1, a2, &v11);
  uint64_t v9 = sub_216D80204(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v11, a3, a4);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  sub_216ABB798(&v12);
  return v9;
}

void sub_216E61024(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a10)
{
}

uint64_t sub_216E6104C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  int v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216E610A8(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = &stru_26C74E298;
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C75DD20;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76AA20;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v4, (uint64_t)v5, **(double **)(a3 + 8));
}

uint64_t sub_216E61134(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  uint64_t v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92210, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92210))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B92208, &dword_216758000);
    __cxa_guard_release(&qword_267B92210);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B92208;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216E628DC((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216E62A70((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216E6308C((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216E62554(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E628DC(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216E62A48(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216E62A70(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216E62FA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216E6308C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216E635BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E636A8(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C3ACD0(v8, a3, v9, a5);
}

void sub_216E636FC(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

uint64_t sub_216E6378C(pxrInternal__aapl__pxrReserved__::Usd_Clip **a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, uint64_t (**a3)(void, uint64_t))
{
  uint64_t v4 = *a1;
  uint64_t v5 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (a3)
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    return sub_216E63854(v4, a2, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v5 + 88), a3);
  }
  else
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    uint64_t v8 = sub_216C53204(v4, a2, (uint64_t)v5 + 88);
    if (sub_21677EC50(v8, MEMORY[0x263F8C288]))
    {
      return 0;
    }
    else if (sub_21677EC50(v8, (uint64_t)&stru_26C757FD0))
    {
      return 2;
    }
    else
    {
      return 1;
    }
  }
}

uint64_t sub_216E63854(pxrInternal__aapl__pxrReserved__::Usd_Clip *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_GetLayerForClip(a1, (uint64_t *)&v12);
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC((uint64_t *)&v12);
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_TranslatePathToClip(a1, a2, &v11);
  uint64_t v9 = sub_216E63920(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v11, a3, a4);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  sub_216ABB798(&v12);
  return v9;
}

void sub_216E638F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a10)
{
}

uint64_t sub_216E63920(pxrInternal__aapl__pxrReserved__::SdfLayer *a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(void, uint64_t))
{
  if (a4)
  {
    v6[1] = a4;
    v6[2] = (uint64_t (**)(void, uint64_t))&stru_26C74E298;
    __int16 v7 = 0;
    v6[0] = (uint64_t (**)(void, uint64_t))&unk_26C75DD20;
    LODWORD(result) = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, v6);
    if ((_BYTE)v7) {
      return 0;
    }
    else {
      return result;
    }
  }
  else
  {
    return pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, 0);
  }
}

void *sub_216E63994(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = &stru_26C74C2C0;
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C758B08;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76A9E8;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v4, (uint64_t)v5, **(double **)(a3 + 16));
}

void *sub_216E63A20(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = &stru_26C74E298;
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C75DD20;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76AA20;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v4, (uint64_t)v5, **(double **)(a3 + 16));
}

uint64_t sub_216E63AAC(uint64_t a1, void *a2)
{
  return 1;
}

uint64_t sub_216E63AD4(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result = sub_21699807C(a2);
  if (result)
  {
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 4) != 0) {
      __int16 v6 = (void *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8)
    }
                                                                                            + 168))(a2);
    else {
      __int16 v6 = *(void **)a2;
    }
    uint64_t v7 = *(void *)(a1 + 8);
    return sub_2169B2CB0(v6, v7);
  }
  return result;
}

uint64_t sub_216E63B44(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = &stru_26C755240;
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C75DD58;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76AA90;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v4, (uint64_t)v5, **(double **)(a3 + 8));
}

uint64_t sub_216E63BD0(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C3AEC8(v8, a3, v9, a5);
}

void sub_216E63C24(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

uint64_t sub_216E63CB4(pxrInternal__aapl__pxrReserved__::Usd_Clip **a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, uint64_t (**a3)(void, uint64_t))
{
  uint64_t v4 = *a1;
  uint64_t v5 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (a3)
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    return sub_216E63D7C(v4, a2, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v5 + 88), a3);
  }
  else
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    uint64_t v8 = sub_216C53204(v4, a2, (uint64_t)v5 + 88);
    if (sub_21677EC50(v8, MEMORY[0x263F8C288]))
    {
      return 0;
    }
    else if (sub_21677EC50(v8, (uint64_t)&stru_26C757FD0))
    {
      return 2;
    }
    else
    {
      return 1;
    }
  }
}

uint64_t sub_216E63D7C(pxrInternal__aapl__pxrReserved__::Usd_Clip *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_GetLayerForClip(a1, (uint64_t *)&v12);
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC((uint64_t *)&v12);
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_TranslatePathToClip(a1, a2, &v11);
  uint64_t v9 = sub_216E63E48(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v11, a3, a4);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  sub_216ABB798(&v12);
  return v9;
}

void sub_216E63E20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a10)
{
}

uint64_t sub_216E63E48(pxrInternal__aapl__pxrReserved__::SdfLayer *a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(void, uint64_t))
{
  if (a4)
  {
    v6[1] = a4;
    v6[2] = (uint64_t (**)(void, uint64_t))&stru_26C755240;
    __int16 v7 = 0;
    v6[0] = (uint64_t (**)(void, uint64_t))&unk_26C75DD58;
    LODWORD(result) = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, v6);
    if ((_BYTE)v7) {
      return 0;
    }
    else {
      return result;
    }
  }
  else
  {
    return pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, 0);
  }
}

uint64_t sub_216E63EBC(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = &stru_26C755250;
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C75DD90;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76AAC8;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v4, (uint64_t)v5, **(double **)(a3 + 8));
}

uint64_t sub_216E63F48(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C3B0C0(v8, a3, v9, a5);
}

void sub_216E63F9C(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

uint64_t sub_216E6402C(pxrInternal__aapl__pxrReserved__::Usd_Clip **a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, uint64_t (**a3)(void, uint64_t))
{
  uint64_t v4 = *a1;
  uint64_t v5 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (a3)
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    return sub_216E640F4(v4, a2, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v5 + 88), a3);
  }
  else
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    uint64_t v8 = sub_216C53204(v4, a2, (uint64_t)v5 + 88);
    if (sub_21677EC50(v8, MEMORY[0x263F8C288]))
    {
      return 0;
    }
    else if (sub_21677EC50(v8, (uint64_t)&stru_26C757FD0))
    {
      return 2;
    }
    else
    {
      return 1;
    }
  }
}

uint64_t sub_216E640F4(pxrInternal__aapl__pxrReserved__::Usd_Clip *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_GetLayerForClip(a1, (uint64_t *)&v12);
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC((uint64_t *)&v12);
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_TranslatePathToClip(a1, a2, &v11);
  uint64_t v9 = sub_216E641C0(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v11, a3, a4);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  sub_216ABB798(&v12);
  return v9;
}

void sub_216E64198(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a10)
{
}

uint64_t sub_216E641C0(pxrInternal__aapl__pxrReserved__::SdfLayer *a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(void, uint64_t))
{
  if (a4)
  {
    v6[1] = a4;
    v6[2] = (uint64_t (**)(void, uint64_t))&stru_26C755250;
    __int16 v7 = 0;
    v6[0] = (uint64_t (**)(void, uint64_t))&unk_26C75DD90;
    LODWORD(result) = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, v6);
    if ((_BYTE)v7) {
      return 0;
    }
    else {
      return result;
    }
  }
  else
  {
    return pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, 0);
  }
}

void *sub_216E64234(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = &stru_26C755240;
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C75DD58;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76AA90;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v4, (uint64_t)v5, **(double **)(a3 + 16));
}

void *sub_216E642C0(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = &stru_26C755250;
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C75DD90;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76AAC8;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v4, (uint64_t)v5, **(double **)(a3 + 16));
}

uint64_t sub_216E6434C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  int v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216E643A8(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = &stru_26C755210;
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C75DDC8;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76AB00;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v4, (uint64_t)v5, **(double **)(a3 + 8));
}

uint64_t sub_216E64434(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  uint64_t v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92220, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92220))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B92218, &dword_216758000);
    __cxa_guard_release(&qword_267B92220);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B92218;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216E65BDC((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216E65D70((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216E6638C((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216E65854(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E65BDC(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216E65D48(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216E65D70(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216E662A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216E6638C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216E668BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E669A8(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C3B2B8(v8, a3, v9, a5);
}

void sub_216E669FC(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

uint64_t sub_216E66A8C(pxrInternal__aapl__pxrReserved__::Usd_Clip **a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, uint64_t (**a3)(void, uint64_t))
{
  uint64_t v4 = *a1;
  uint64_t v5 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (a3)
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    return sub_216E66B54(v4, a2, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v5 + 88), a3);
  }
  else
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    uint64_t v8 = sub_216C53204(v4, a2, (uint64_t)v5 + 88);
    if (sub_21677EC50(v8, MEMORY[0x263F8C288]))
    {
      return 0;
    }
    else if (sub_21677EC50(v8, (uint64_t)&stru_26C757FD0))
    {
      return 2;
    }
    else
    {
      return 1;
    }
  }
}

uint64_t sub_216E66B54(pxrInternal__aapl__pxrReserved__::Usd_Clip *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_GetLayerForClip(a1, (uint64_t *)&v12);
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC((uint64_t *)&v12);
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_TranslatePathToClip(a1, a2, &v11);
  uint64_t v9 = sub_216E66C20(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v11, a3, a4);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  sub_216ABB798(&v12);
  return v9;
}

void sub_216E66BF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a10)
{
}

uint64_t sub_216E66C20(pxrInternal__aapl__pxrReserved__::SdfLayer *a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(void, uint64_t))
{
  if (a4)
  {
    v6[1] = a4;
    v6[2] = (uint64_t (**)(void, uint64_t))&stru_26C755210;
    __int16 v7 = 0;
    v6[0] = (uint64_t (**)(void, uint64_t))&unk_26C75DDC8;
    LODWORD(result) = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, v6);
    if ((_BYTE)v7) {
      return 0;
    }
    else {
      return result;
    }
  }
  else
  {
    return pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, 0);
  }
}

uint64_t sub_216E66C94(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  int v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216E66CF0(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = &stru_26C755C58;
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C75DE00;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76AB38;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v4, (uint64_t)v5, **(double **)(a3 + 8));
}

uint64_t sub_216E66D7C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  uint64_t v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92230, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92230))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B92228, &dword_216758000);
    __cxa_guard_release(&qword_267B92230);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B92228;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216E68524((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216E686B8((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216E68CD4((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216E6819C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E68524(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216E68690(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216E686B8(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216E68BE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216E68CD4(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216E69204(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E692F0(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C3B4B0(v8, a3, v9, a5);
}

void sub_216E69344(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

uint64_t sub_216E693D4(pxrInternal__aapl__pxrReserved__::Usd_Clip **a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, uint64_t (**a3)(void, uint64_t))
{
  uint64_t v4 = *a1;
  uint64_t v5 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (a3)
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    return sub_216E6949C(v4, a2, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v5 + 88), a3);
  }
  else
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    uint64_t v8 = sub_216C53204(v4, a2, (uint64_t)v5 + 88);
    if (sub_21677EC50(v8, MEMORY[0x263F8C288]))
    {
      return 0;
    }
    else if (sub_21677EC50(v8, (uint64_t)&stru_26C757FD0))
    {
      return 2;
    }
    else
    {
      return 1;
    }
  }
}

uint64_t sub_216E6949C(pxrInternal__aapl__pxrReserved__::Usd_Clip *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_GetLayerForClip(a1, (uint64_t *)&v12);
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC((uint64_t *)&v12);
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_TranslatePathToClip(a1, a2, &v11);
  uint64_t v9 = sub_216E69568(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v11, a3, a4);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  sub_216ABB798(&v12);
  return v9;
}

void sub_216E69540(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a10)
{
}

uint64_t sub_216E69568(pxrInternal__aapl__pxrReserved__::SdfLayer *a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(void, uint64_t))
{
  if (a4)
  {
    v6[1] = a4;
    v6[2] = (uint64_t (**)(void, uint64_t))&stru_26C755C58;
    __int16 v7 = 0;
    v6[0] = (uint64_t (**)(void, uint64_t))&unk_26C75DE00;
    LODWORD(result) = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, v6);
    if ((_BYTE)v7) {
      return 0;
    }
    else {
      return result;
    }
  }
  else
  {
    return pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, 0);
  }
}

void *sub_216E695DC(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = &stru_26C755210;
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C75DDC8;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76AB00;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v4, (uint64_t)v5, **(double **)(a3 + 16));
}

void *sub_216E69668(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = &stru_26C755C58;
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C75DE00;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76AB38;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v4, (uint64_t)v5, **(double **)(a3 + 16));
}

uint64_t sub_216E696F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    BOOL v4 = (*(void *)(a2 + 8) & 3) == 3;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4) {
    (*(void (**)(uint64_t))((v3 & 0xFFFFFFFFFFFFFFF8) + 32))(a2);
  }
  *(void *)(a2 + 8) = (char *)&off_26C75AC58 + 3;
  return 1;
}

uint64_t sub_216E6974C(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t v3 = sub_21699510C(a2);
  if (v3)
  {
    uint64_t v4 = *((void *)a2 + 1);
    if ((v4 & 4) != 0) {
      (*(void (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v4 & 0xFFFFFFFFFFFFFFF8) + 168))(a2);
    }
  }
  return v3;
}

uint64_t sub_216E6979C(uint64_t a1, void *a2)
{
  return 1;
}

uint64_t sub_216E697C4(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result = sub_216B8EA80(a2);
  if (result)
  {
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 4) != 0) {
      uint64_t v6 = (*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8) + 168))(a2);
    }
    else {
      uint64_t v6 = *(void *)a2;
    }
    uint64_t v7 = *(void *)(a1 + 8);
    return sub_2169B50EC(v6, v7);
  }
  return result;
}

uint64_t sub_216E69834(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = &stru_26C755268;
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C75DE38;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76ABE0;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v4, (uint64_t)v5, **(double **)(a3 + 8));
}

uint64_t sub_216E698C0(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C3B6A8(v8, a3, v9, a5);
}

void sub_216E69914(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

uint64_t sub_216E699A4(pxrInternal__aapl__pxrReserved__::Usd_Clip **a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, uint64_t (**a3)(void, uint64_t))
{
  uint64_t v4 = *a1;
  uint64_t v5 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (a3)
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    return sub_216E69A6C(v4, a2, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v5 + 88), a3);
  }
  else
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    uint64_t v8 = sub_216C53204(v4, a2, (uint64_t)v5 + 88);
    if (sub_21677EC50(v8, MEMORY[0x263F8C288]))
    {
      return 0;
    }
    else if (sub_21677EC50(v8, (uint64_t)&stru_26C757FD0))
    {
      return 2;
    }
    else
    {
      return 1;
    }
  }
}

uint64_t sub_216E69A6C(pxrInternal__aapl__pxrReserved__::Usd_Clip *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_GetLayerForClip(a1, (uint64_t *)&v12);
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC((uint64_t *)&v12);
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_TranslatePathToClip(a1, a2, &v11);
  uint64_t v9 = sub_216E69B38(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v11, a3, a4);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  sub_216ABB798(&v12);
  return v9;
}

void sub_216E69B10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a10)
{
}

uint64_t sub_216E69B38(pxrInternal__aapl__pxrReserved__::SdfLayer *a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(void, uint64_t))
{
  if (a4)
  {
    v6[1] = a4;
    v6[2] = (uint64_t (**)(void, uint64_t))&stru_26C755268;
    __int16 v7 = 0;
    v6[0] = (uint64_t (**)(void, uint64_t))&unk_26C75DE38;
    LODWORD(result) = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, v6);
    if ((_BYTE)v7) {
      return 0;
    }
    else {
      return result;
    }
  }
  else
  {
    return pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, 0);
  }
}

uint64_t sub_216E69BAC(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = &stru_26C755278;
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C75DE70;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76AC18;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v4, (uint64_t)v5, **(double **)(a3 + 8));
}

uint64_t sub_216E69C38(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C3B8A0(v8, a3, v9, a5);
}

void sub_216E69C8C(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

uint64_t sub_216E69D1C(pxrInternal__aapl__pxrReserved__::Usd_Clip **a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, uint64_t (**a3)(void, uint64_t))
{
  uint64_t v4 = *a1;
  uint64_t v5 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (a3)
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    return sub_216E69DE4(v4, a2, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v5 + 88), a3);
  }
  else
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    uint64_t v8 = sub_216C53204(v4, a2, (uint64_t)v5 + 88);
    if (sub_21677EC50(v8, MEMORY[0x263F8C288]))
    {
      return 0;
    }
    else if (sub_21677EC50(v8, (uint64_t)&stru_26C757FD0))
    {
      return 2;
    }
    else
    {
      return 1;
    }
  }
}

uint64_t sub_216E69DE4(pxrInternal__aapl__pxrReserved__::Usd_Clip *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_GetLayerForClip(a1, (uint64_t *)&v12);
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC((uint64_t *)&v12);
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_TranslatePathToClip(a1, a2, &v11);
  uint64_t v9 = sub_216E69EB0(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v11, a3, a4);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  sub_216ABB798(&v12);
  return v9;
}

void sub_216E69E88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a10)
{
}

uint64_t sub_216E69EB0(pxrInternal__aapl__pxrReserved__::SdfLayer *a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(void, uint64_t))
{
  if (a4)
  {
    v6[1] = a4;
    v6[2] = (uint64_t (**)(void, uint64_t))&stru_26C755278;
    __int16 v7 = 0;
    v6[0] = (uint64_t (**)(void, uint64_t))&unk_26C75DE70;
    LODWORD(result) = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, v6);
    if ((_BYTE)v7) {
      return 0;
    }
    else {
      return result;
    }
  }
  else
  {
    return pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, 0);
  }
}

void *sub_216E69F24(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = &stru_26C755268;
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C75DE38;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76ABE0;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v4, (uint64_t)v5, **(double **)(a3 + 16));
}

void *sub_216E69FB0(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = &stru_26C755278;
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C75DE70;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76AC18;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v4, (uint64_t)v5, **(double **)(a3 + 16));
}

uint64_t sub_216E6A03C(uint64_t a1, uint64_t a2)
{
  return 1;
}

uint64_t sub_216E6A064(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result = sub_21699AB4C(a2);
  if (result)
  {
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 4) != 0) {
      uint64_t v6 = (*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8) + 168))(a2);
    }
    else {
      uint64_t v6 = *(void *)a2;
    }
    uint64_t v7 = *(void *)(a1 + 8);
    v9[0] = v6;
    v9[1] = v6 + 24;
    v9[2] = v6 + 48;
    v9[3] = v6 + 72;
    v8[0] = v7;
    v8[1] = v7 + 24;
    v8[2] = v7 + 48;
    v8[3] = v7 + 72;
    return sub_2169B66D4((uint64_t)&v10, (uint64_t)v9, (uint64_t)v8);
  }
  return result;
}

uint64_t sub_216E6A0F8(uint64_t a1, void *a2)
{
  return 1;
}

uint64_t sub_216E6A120(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result = sub_21699AC40(a2);
  if (result)
  {
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 4) != 0) {
      uint64_t v6 = (uint64_t *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8)
    }
                                                                                             + 168))(a2);
    else {
      uint64_t v6 = *(uint64_t **)a2;
    }
    uint64_t v7 = *(void *)(a1 + 8);
    return sub_2169B8738(v6, v7);
  }
  return result;
}

uint64_t sub_216E6A190(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  uint64_t v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216E6A1EC(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74C570;
  __int16 v7 = 0;
  v6[0] = &unk_26C75DEA8;
  if (*(_DWORD *)(a1 + 784) == 1) {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C766CF0;
  }
  else {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76ACC0;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v5, (uint64_t)v6, **(double **)(a3 + 8));
}

uint64_t sub_216E6A29C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  uint64_t v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92240, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92240))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B92238, &dword_216758000);
    __cxa_guard_release(&qword_267B92240);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B92238;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216E6BA44((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216E6BBD8((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216E6C1F4((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216E6B6BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E6BA44(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216E6BBB0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216E6BBD8(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216E6C108(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216E6C1F4(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216E6C724(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E6C810(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C3BA98(v8, a3, v9, a5);
}

void sub_216E6C864(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

uint64_t sub_216E6C8F4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  uint64_t v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216E6C950(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74DFE0;
  __int16 v7 = 0;
  v6[0] = &unk_26C75DEE0;
  if (*(_DWORD *)(a1 + 784) == 1) {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C766D28;
  }
  else {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76ACF8;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v5, (uint64_t)v6, **(double **)(a3 + 8));
}

uint64_t sub_216E6CA00(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  int v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92250, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92250))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B92248, &dword_216758000);
    __cxa_guard_release(&qword_267B92250);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B92248;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216E6E1A8((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216E6E33C((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216E6E958((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216E6DE20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E6E1A8(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216E6E314(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216E6E33C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216E6E86C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216E6E958(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216E6EE88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E6EF74(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C3BC90(v8, a3, v9, a5);
}

void sub_216E6EFC8(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

void *sub_216E6F058(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74C570;
  __int16 v7 = 0;
  v6[0] = &unk_26C75DEA8;
  if (*(_DWORD *)(a1 + 784) == 1) {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C766CF0;
  }
  else {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76ACC0;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v5, (uint64_t)v6, **(double **)(a3 + 16));
}

void *sub_216E6F108(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74DFE0;
  __int16 v7 = 0;
  v6[0] = &unk_26C75DEE0;
  if (*(_DWORD *)(a1 + 784) == 1) {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C766D28;
  }
  else {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76ACF8;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v5, (uint64_t)v6, **(double **)(a3 + 16));
}

uint64_t sub_216E6F1B8(uint64_t a1, void *a2)
{
  return 1;
}

uint64_t sub_216E6F1E0(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result = sub_21694FB20(a2);
  if (result)
  {
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 4) != 0) {
      uint64_t v6 = (double *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8)
    }
                                                                                            + 168))(a2);
    else {
      uint64_t v6 = *(double **)a2;
    }
    __int16 v7 = *(double **)(a1 + 8);
    return pxrInternal__aapl__pxrReserved__::GfMatrix2d::operator==(v6, v7);
  }
  return result;
}

uint64_t sub_216E6F250(uint64_t a1, void *a2)
{
  return 1;
}

uint64_t sub_216E6F278(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result = sub_216B8F40C(a2);
  if (result)
  {
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 4) != 0) {
      uint64_t v6 = (uint64_t *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8)
    }
                                                                                             + 168))(a2);
    else {
      uint64_t v6 = *(uint64_t **)a2;
    }
    uint64_t v7 = *(void *)(a1 + 8);
    return sub_2169C06C0(v6, v7);
  }
  return result;
}

uint64_t sub_216E6F2E8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  uint64_t v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216E6F344(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74C5A0;
  __int16 v7 = 0;
  v6[0] = &unk_26C75DF18;
  if (*(_DWORD *)(a1 + 784) == 1) {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C766D60;
  }
  else {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76ADA0;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v5, (uint64_t)v6, **(double **)(a3 + 8));
}

uint64_t sub_216E6F3F4(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  int v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92260, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92260))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B92258, &dword_216758000);
    __cxa_guard_release(&qword_267B92260);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B92258;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216E70B9C((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216E70D30((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216E7134C((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216E70814(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E70B9C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216E70D08(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216E70D30(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216E71260(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216E7134C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216E7187C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E71968(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C3BE88(v8, a3, v9, a5);
}

void sub_216E719BC(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

uint64_t sub_216E71A4C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  uint64_t v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216E71AA8(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74DFC8;
  __int16 v7 = 0;
  v6[0] = &unk_26C75DF50;
  if (*(_DWORD *)(a1 + 784) == 1) {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C766D98;
  }
  else {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76ADD8;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v5, (uint64_t)v6, **(double **)(a3 + 8));
}

uint64_t sub_216E71B58(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  int v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92270, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92270))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B92268, &dword_216758000);
    __cxa_guard_release(&qword_267B92270);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B92268;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216E73300((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216E73494((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216E73AB0((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216E72F78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E73300(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216E7346C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216E73494(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216E739C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216E73AB0(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216E73FE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E740CC(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C3C080(v8, a3, v9, a5);
}

void sub_216E74120(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

void *sub_216E741B0(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74C5A0;
  __int16 v7 = 0;
  v6[0] = &unk_26C75DF18;
  if (*(_DWORD *)(a1 + 784) == 1) {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C766D60;
  }
  else {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76ADA0;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v5, (uint64_t)v6, **(double **)(a3 + 16));
}

void *sub_216E74260(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74DFC8;
  __int16 v7 = 0;
  v6[0] = &unk_26C75DF50;
  if (*(_DWORD *)(a1 + 784) == 1) {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C766D98;
  }
  else {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76ADD8;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v5, (uint64_t)v6, **(double **)(a3 + 16));
}

uint64_t sub_216E74310(uint64_t a1, void *a2)
{
  return 1;
}

uint64_t sub_216E74338(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result = sub_21695273C(a2);
  if (result)
  {
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 4) != 0) {
      uint64_t v6 = (double *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8)
    }
                                                                                            + 168))(a2);
    else {
      uint64_t v6 = *(double **)a2;
    }
    __int16 v7 = *(double **)(a1 + 8);
    return pxrInternal__aapl__pxrReserved__::GfMatrix3d::operator==(v6, v7);
  }
  return result;
}

uint64_t sub_216E743A8(uint64_t a1, void *a2)
{
  return 1;
}

uint64_t sub_216E743D0(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result = sub_216B8F888(a2);
  if (result)
  {
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 4) != 0) {
      uint64_t v6 = (uint64_t *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8)
    }
                                                                                             + 168))(a2);
    else {
      uint64_t v6 = *(uint64_t **)a2;
    }
    uint64_t v7 = *(void *)(a1 + 8);
    return sub_2169C14C4(v6, v7);
  }
  return result;
}

uint64_t sub_216E74440(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  uint64_t v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216E7449C(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74C5C0;
  __int16 v7 = 0;
  v6[0] = &unk_26C75DF88;
  if (*(_DWORD *)(a1 + 784) == 1) {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C766DD0;
  }
  else {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76AE80;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v5, (uint64_t)v6, **(double **)(a3 + 8));
}

uint64_t sub_216E7454C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  int v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92280, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92280))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B92278, &dword_216758000);
    __cxa_guard_release(&qword_267B92280);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B92278;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216E75CF4((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216E75E88((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216E764A4((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216E7596C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E75CF4(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216E75E60(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216E75E88(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216E763B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216E764A4(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216E769D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E76AC0(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C3C278(v8, a3, v9, a5);
}

void sub_216E76B14(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

uint64_t sub_216E76BA4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  uint64_t v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216E76C00(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74DFB0;
  __int16 v7 = 0;
  v6[0] = &unk_26C75DFC0;
  if (*(_DWORD *)(a1 + 784) == 1) {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C766E08;
  }
  else {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76AEB8;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v5, (uint64_t)v6, **(double **)(a3 + 8));
}

uint64_t sub_216E76CB0(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  int v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92290, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92290))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B92288, &dword_216758000);
    __cxa_guard_release(&qword_267B92290);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B92288;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216E78458((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216E785EC((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216E78C08((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216E780D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E78458(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216E785C4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216E785EC(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216E78B1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216E78C08(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216E79138(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E79224(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C3C470(v8, a3, v9, a5);
}

void sub_216E79278(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

void *sub_216E79308(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74C5C0;
  __int16 v7 = 0;
  v6[0] = &unk_26C75DF88;
  if (*(_DWORD *)(a1 + 784) == 1) {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C766DD0;
  }
  else {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76AE80;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v5, (uint64_t)v6, **(double **)(a3 + 16));
}

void *sub_216E793B8(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74DFB0;
  __int16 v7 = 0;
  v6[0] = &unk_26C75DFC0;
  if (*(_DWORD *)(a1 + 784) == 1) {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C766E08;
  }
  else {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76AEB8;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v5, (uint64_t)v6, **(double **)(a3 + 16));
}

uint64_t sub_216E79468(uint64_t a1, void *a2)
{
  return 1;
}

uint64_t sub_216E79490(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result = sub_21695529C(a2);
  if (result)
  {
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 4) != 0) {
      uint64_t v6 = (double *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8)
    }
                                                                                            + 168))(a2);
    else {
      uint64_t v6 = *(double **)a2;
    }
    __int16 v7 = *(double **)(a1 + 8);
    return pxrInternal__aapl__pxrReserved__::GfMatrix4d::operator==(v6, v7);
  }
  return result;
}

uint64_t sub_216E79500(uint64_t a1, void *a2)
{
  return 1;
}

uint64_t sub_216E79528(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result = sub_2169026B0(a2);
  if (result)
  {
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 4) != 0) {
      uint64_t v6 = (uint64_t *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8)
    }
                                                                                             + 168))(a2);
    else {
      uint64_t v6 = *(uint64_t **)a2;
    }
    uint64_t v7 = *(void *)(a1 + 8);
    return sub_216902AEC(v6, v7);
  }
  return result;
}

uint64_t sub_216E79598(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  uint64_t v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216E795F4(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74C610;
  __int16 v7 = 0;
  v6[0] = &unk_26C75DFF8;
  if (*(_DWORD *)(a1 + 784) == 1) {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C767310;
  }
  else {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76AF60;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v5, (uint64_t)v6, **(double **)(a3 + 8));
}

uint64_t sub_216E796A4(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  int v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B922A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B922A0))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B92298, &dword_216758000);
    __cxa_guard_release(&qword_267B922A0);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B92298;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216E7AE4C((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216E7AFE0((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216E7B5FC((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216E7AAC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E7AE4C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216E7AFB8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216E7AFE0(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216E7B510(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216E7B5FC(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216E7BB2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E7BC18(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C3C668(v8, a3, v9, a5);
}

void sub_216E7BC6C(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

uint64_t sub_216E7BCFC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  uint64_t v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216E7BD58(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74E0B8;
  __int16 v7 = 0;
  v6[0] = &unk_26C75E030;
  if (*(_DWORD *)(a1 + 784) == 1) {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C767348;
  }
  else {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76AF98;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v5, (uint64_t)v6, **(double **)(a3 + 8));
}

uint64_t sub_216E7BE08(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  int v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B922B0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B922B0))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B922A8, &dword_216758000);
    __cxa_guard_release(&qword_267B922B0);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B922A8;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216E7D5B0((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216E7D744((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216E7DD60((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216E7D228(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E7D5B0(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216E7D71C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216E7D744(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216E7DC74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216E7DD60(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216E7E290(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E7E37C(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C3C860(v8, a3, v9, a5);
}

void sub_216E7E3D0(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

void *sub_216E7E460(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74C610;
  __int16 v7 = 0;
  v6[0] = &unk_26C75DFF8;
  if (*(_DWORD *)(a1 + 784) == 1) {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C767310;
  }
  else {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76AF60;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v5, (uint64_t)v6, **(double **)(a3 + 16));
}

void *sub_216E7E510(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74E0B8;
  __int16 v7 = 0;
  v6[0] = &unk_26C75E030;
  if (*(_DWORD *)(a1 + 784) == 1) {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C767348;
  }
  else {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76AF98;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v5, (uint64_t)v6, **(double **)(a3 + 16));
}

uint64_t sub_216E7E5C0(uint64_t a1, void *a2)
{
  return 1;
}

BOOL sub_216E7E5E8(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t v2 = (uint64_t)a2;
  if (!sub_216B8FDA4(a2)) {
    return 0;
  }
  uint64_t v4 = *(void *)(v2 + 8);
  if ((v4 & 4) != 0) {
    uint64_t v2 = (*(uint64_t (**)(uint64_t))((v4 & 0xFFFFFFFFFFFFFFF8) + 168))(v2);
  }
  uint64_t v5 = *(unsigned __int16 **)(a1 + 8);
  if (pxrInternal__aapl__pxrReserved__::pxr_half::half::_toFloat[*(unsigned __int16 *)(v2 + 6)] != pxrInternal__aapl__pxrReserved__::pxr_half::half::_toFloat[v5[3]]) {
    return 0;
  }

  return sub_2168F450C((unsigned __int16 *)v2, v5);
}

uint64_t sub_216E7E680(uint64_t a1, void *a2)
{
  return 1;
}

uint64_t sub_216E7E6A8(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result = sub_216903B7C(a2);
  if (result)
  {
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 4) != 0) {
      uint64_t v6 = (uint64_t *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8)
    }
                                                                                             + 168))(a2);
    else {
      uint64_t v6 = *(uint64_t **)a2;
    }
    uint64_t v7 = *(void *)(a1 + 8);
    return sub_216904F84(v6, v7);
  }
  return result;
}

uint64_t sub_216E7E718(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  uint64_t v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216E7E774(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74C600;
  __int16 v7 = 0;
  v6[0] = &unk_26C75E068;
  if (*(_DWORD *)(a1 + 784) == 1) {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C7672A0;
  }
  else {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76B040;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v5, (uint64_t)v6, **(double **)(a3 + 8));
}

uint64_t sub_216E7E824(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  int v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B922C0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B922C0))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B922B8, &dword_216758000);
    __cxa_guard_release(&qword_267B922C0);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B922B8;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216E7FFCC((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216E80160((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216E8077C((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216E7FC44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E7FFCC(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216E80138(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216E80160(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216E80690(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216E8077C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216E80CAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E80D98(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C3CA58(v8, a3, v9, a5);
}

void sub_216E80DEC(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

uint64_t sub_216E80E7C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  uint64_t v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216E80ED8(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74E0D0;
  __int16 v7 = 0;
  v6[0] = &unk_26C75E0A0;
  if (*(_DWORD *)(a1 + 784) == 1) {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C7672D8;
  }
  else {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76B078;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v5, (uint64_t)v6, **(double **)(a3 + 8));
}

uint64_t sub_216E80F88(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  int v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B922D0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B922D0))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B922C8, &dword_216758000);
    __cxa_guard_release(&qword_267B922D0);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B922C8;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216E82730((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216E828C4((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216E82EE0((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216E823A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E82730(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216E8289C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216E828C4(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216E82DF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216E82EE0(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216E83410(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E834FC(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C3CC50(v8, a3, v9, a5);
}

void sub_216E83550(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

void *sub_216E835E0(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74C600;
  __int16 v7 = 0;
  v6[0] = &unk_26C75E068;
  if (*(_DWORD *)(a1 + 784) == 1) {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C7672A0;
  }
  else {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76B040;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v5, (uint64_t)v6, **(double **)(a3 + 16));
}

void *sub_216E83690(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74E0D0;
  __int16 v7 = 0;
  v6[0] = &unk_26C75E0A0;
  if (*(_DWORD *)(a1 + 784) == 1) {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C7672D8;
  }
  else {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76B078;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v5, (uint64_t)v6, **(double **)(a3 + 16));
}

uint64_t sub_216E83740(uint64_t a1, unsigned int **a2)
{
  return 1;
}

uint64_t sub_216E83768(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result = sub_21695810C(a2);
  if (result)
  {
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 4) != 0) {
      uint64_t v6 = (float *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8)
    }
                                                                                           + 168))(a2);
    else {
      uint64_t v6 = *(float **)a2;
    }
    __int16 v7 = *(float **)(a1 + 8);
    return v6[3] == v7[3] && *v6 == *v7 && v6[1] == v7[1] && v6[2] == v7[2];
  }
  return result;
}

uint64_t sub_216E83804(uint64_t a1, void *a2)
{
  return 1;
}

uint64_t sub_216E8382C(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result = sub_216904004(a2);
  if (result)
  {
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 4) != 0) {
      uint64_t v6 = (void *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8)
    }
                                                                                            + 168))(a2);
    else {
      uint64_t v6 = *(void **)a2;
    }
    uint64_t v7 = *(void *)(a1 + 8);
    return sub_216904400(v6, v7);
  }
  return result;
}

uint64_t sub_216E8389C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  uint64_t v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216E838F8(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74C5F0;
  __int16 v7 = 0;
  v6[0] = &unk_26C75E0D8;
  if (*(_DWORD *)(a1 + 784) == 1) {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C767230;
  }
  else {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76B120;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v5, (uint64_t)v6, **(double **)(a3 + 8));
}

uint64_t sub_216E839A8(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  int v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B922E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B922E0))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B922D8, &dword_216758000);
    __cxa_guard_release(&qword_267B922E0);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B922D8;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216E85150((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216E852E4((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216E85900((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216E84DC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E85150(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216E852BC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216E852E4(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216E85814(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216E85900(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216E85E30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E85F1C(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C3CE48(v8, a3, v9, a5);
}

void sub_216E85F70(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

uint64_t sub_216E86000(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  uint64_t v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216E8605C(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74E0E8;
  __int16 v7 = 0;
  v6[0] = &unk_26C75E110;
  if (*(_DWORD *)(a1 + 784) == 1) {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C767268;
  }
  else {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76B158;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v5, (uint64_t)v6, **(double **)(a3 + 8));
}

uint64_t sub_216E8610C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  int v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B922F0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B922F0))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B922E8, &dword_216758000);
    __cxa_guard_release(&qword_267B922F0);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B922E8;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216E878B4((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216E87A48((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216E88064((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216E8752C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E878B4(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216E87A20(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216E87A48(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216E87F78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216E88064(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216E88594(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E88680(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C3D040(v8, a3, v9, a5);
}

void sub_216E886D4(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

void *sub_216E88764(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74C5F0;
  __int16 v7 = 0;
  v6[0] = &unk_26C75E0D8;
  if (*(_DWORD *)(a1 + 784) == 1) {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C767230;
  }
  else {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76B120;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v5, (uint64_t)v6, **(double **)(a3 + 16));
}

void *sub_216E88814(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74E0E8;
  __int16 v7 = 0;
  v6[0] = &unk_26C75E110;
  if (*(_DWORD *)(a1 + 784) == 1) {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C767268;
  }
  else {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76B158;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v5, (uint64_t)v6, **(double **)(a3 + 16));
}

uint64_t sub_216E888C4(uint64_t a1, void *a2)
{
  return 1;
}

uint64_t sub_216E888EC(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result = sub_216956AEC(a2);
  if (result)
  {
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 4) != 0) {
      uint64_t v6 = (double *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8)
    }
                                                                                            + 168))(a2);
    else {
      uint64_t v6 = *(double **)a2;
    }
    __int16 v7 = *(double **)(a1 + 8);
    return v6[3] == v7[3] && *v6 == *v7 && v6[1] == v7[1] && v6[2] == v7[2];
  }
  return result;
}

uint64_t sub_216E88988(uint64_t a1, void *a2)
{
  return 1;
}

uint64_t sub_216E889B0(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result = sub_21690577C(a2);
  if (result)
  {
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 4) != 0) {
      uint64_t v6 = (void *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8)
    }
                                                                                            + 168))(a2);
    else {
      uint64_t v6 = *(void **)a2;
    }
    uint64_t v7 = *(void *)(a1 + 8);
    return sub_216905B78(v6, v7);
  }
  return result;
}

uint64_t sub_216E88A20(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  uint64_t v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216E88A7C(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = &stru_26C74C720;
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C75E148;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76B200;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v4, (uint64_t)v5, **(double **)(a3 + 8));
}

uint64_t sub_216E88B08(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  int v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92300, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92300))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B922F8, &dword_216758000);
    __cxa_guard_release(&qword_267B92300);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B922F8;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216E8A2B0((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216E8A444((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216E8AA60((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216E89F28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E8A2B0(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216E8A41C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216E8A444(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216E8A974(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216E8AA60(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216E8AF90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E8B07C(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C3D238(v8, a3, v9, a5);
}

void sub_216E8B0D0(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

uint64_t sub_216E8B160(pxrInternal__aapl__pxrReserved__::Usd_Clip **a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, uint64_t (**a3)(void, uint64_t))
{
  uint64_t v4 = *a1;
  uint64_t v5 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (a3)
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    return sub_216E8B228(v4, a2, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v5 + 88), a3);
  }
  else
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    uint64_t v8 = sub_216C53204(v4, a2, (uint64_t)v5 + 88);
    if (sub_21677EC50(v8, MEMORY[0x263F8C288]))
    {
      return 0;
    }
    else if (sub_21677EC50(v8, (uint64_t)&stru_26C757FD0))
    {
      return 2;
    }
    else
    {
      return 1;
    }
  }
}

uint64_t sub_216E8B228(pxrInternal__aapl__pxrReserved__::Usd_Clip *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_GetLayerForClip(a1, (uint64_t *)&v12);
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC((uint64_t *)&v12);
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_TranslatePathToClip(a1, a2, &v11);
  uint64_t v9 = sub_216E8B2F4(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v11, a3, a4);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  sub_216ABB798(&v12);
  return v9;
}

void sub_216E8B2CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a10)
{
}

uint64_t sub_216E8B2F4(pxrInternal__aapl__pxrReserved__::SdfLayer *a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(void, uint64_t))
{
  if (a4)
  {
    v6[1] = a4;
    v6[2] = (uint64_t (**)(void, uint64_t))&stru_26C74C720;
    __int16 v7 = 0;
    v6[0] = (uint64_t (**)(void, uint64_t))&unk_26C75E148;
    LODWORD(result) = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, v6);
    if ((_BYTE)v7) {
      return 0;
    }
    else {
      return result;
    }
  }
  else
  {
    return pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, 0);
  }
}

uint64_t sub_216E8B368(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  uint64_t v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216E8B3C4(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = &stru_26C74DE78;
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C75E180;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76B238;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v4, (uint64_t)v5, **(double **)(a3 + 8));
}

uint64_t sub_216E8B450(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  uint64_t v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92310, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92310))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B92308, &dword_216758000);
    __cxa_guard_release(&qword_267B92310);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B92308;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216E8CBF8((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216E8CD8C((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216E8D3A8((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216E8C870(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E8CBF8(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216E8CD64(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216E8CD8C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216E8D2BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216E8D3A8(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216E8D8D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E8D9C4(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C3D430(v8, a3, v9, a5);
}

void sub_216E8DA18(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

uint64_t sub_216E8DAA8(pxrInternal__aapl__pxrReserved__::Usd_Clip **a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, uint64_t (**a3)(void, uint64_t))
{
  uint64_t v4 = *a1;
  uint64_t v5 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (a3)
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    return sub_216E8DB70(v4, a2, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v5 + 88), a3);
  }
  else
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    uint64_t v8 = sub_216C53204(v4, a2, (uint64_t)v5 + 88);
    if (sub_21677EC50(v8, MEMORY[0x263F8C288]))
    {
      return 0;
    }
    else if (sub_21677EC50(v8, (uint64_t)&stru_26C757FD0))
    {
      return 2;
    }
    else
    {
      return 1;
    }
  }
}

uint64_t sub_216E8DB70(pxrInternal__aapl__pxrReserved__::Usd_Clip *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_GetLayerForClip(a1, (uint64_t *)&v12);
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC((uint64_t *)&v12);
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_TranslatePathToClip(a1, a2, &v11);
  uint64_t v9 = sub_216E8DC3C(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v11, a3, a4);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  sub_216ABB798(&v12);
  return v9;
}

void sub_216E8DC14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a10)
{
}

uint64_t sub_216E8DC3C(pxrInternal__aapl__pxrReserved__::SdfLayer *a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(void, uint64_t))
{
  if (a4)
  {
    v6[1] = a4;
    v6[2] = (uint64_t (**)(void, uint64_t))&stru_26C74DE78;
    __int16 v7 = 0;
    v6[0] = (uint64_t (**)(void, uint64_t))&unk_26C75E180;
    LODWORD(result) = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, v6);
    if ((_BYTE)v7) {
      return 0;
    }
    else {
      return result;
    }
  }
  else
  {
    return pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, 0);
  }
}

void *sub_216E8DCB0(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = &stru_26C74C720;
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C75E148;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76B200;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v4, (uint64_t)v5, **(double **)(a3 + 16));
}

void *sub_216E8DD3C(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = &stru_26C74DE78;
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C75E180;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76B238;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v4, (uint64_t)v5, **(double **)(a3 + 16));
}

uint64_t sub_216E8DDC8(uint64_t a1, void *a2)
{
  uint64_t v3 = **(void **)(a1 + 8);
  uint64_t v4 = a2[1];
  if (v4) {
    BOOL v5 = (a2[1] & 3) == 3;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5) {
    (*(void (**)(void *))((v4 & 0xFFFFFFFFFFFFFFF8) + 32))(a2);
  }
  *a2 = v3;
  a2[1] = (char *)&off_26C755DE0 + 3;
  return 1;
}

uint64_t sub_216E8DE28(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t v2 = (uint64_t)a2;
  uint64_t result = sub_216B90548(a2);
  if (result)
  {
    uint64_t v5 = *(void *)(v2 + 8);
    if ((v5 & 4) != 0) {
      uint64_t v2 = (*(uint64_t (**)(uint64_t))((v5 & 0xFFFFFFFFFFFFFFF8) + 168))(v2);
    }
    __int16 v6 = *(_DWORD **)(a1 + 8);
    return *(_DWORD *)v2 == *v6 && *(_DWORD *)(v2 + 4) == v6[1];
  }
  return result;
}

uint64_t sub_216E8DEA4(uint64_t a1, void *a2)
{
  return 1;
}

uint64_t sub_216E8DECC(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result = sub_216B90610(a2);
  if (result)
  {
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 4) != 0) {
      __int16 v6 = (void *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8)
    }
                                                                                            + 168))(a2);
    else {
      __int16 v6 = *(void **)a2;
    }
    uint64_t v7 = *(void *)(a1 + 8);
    return sub_2169B9898(v6, v7);
  }
  return result;
}

uint64_t sub_216E8DF3C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  uint64_t v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216E8DF98(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74C710;
  __int16 v7 = 0;
  v6[0] = &unk_26C75E1B8;
  if (*(_DWORD *)(a1 + 784) == 1) {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C766F20;
  }
  else {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76B2E0;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v5, (uint64_t)v6, **(double **)(a3 + 8));
}

uint64_t sub_216E8E048(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  uint64_t v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92320, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92320))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B92318, &dword_216758000);
    __cxa_guard_release(&qword_267B92320);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B92318;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216E8F7F0((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216E8F984((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216E8FFA0((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216E8F468(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E8F7F0(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216E8F95C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216E8F984(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216E8FEB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216E8FFA0(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216E904D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E905BC(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C3D628(v8, a3, v9, a5);
}

void sub_216E90610(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

uint64_t sub_216E906A0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  uint64_t v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216E906FC(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74DEC0;
  __int16 v7 = 0;
  v6[0] = &unk_26C75E1F0;
  if (*(_DWORD *)(a1 + 784) == 1) {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C766F58;
  }
  else {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76B318;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v5, (uint64_t)v6, **(double **)(a3 + 8));
}

uint64_t sub_216E907AC(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  int v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92330, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92330))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B92328, &dword_216758000);
    __cxa_guard_release(&qword_267B92330);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B92328;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216E91F54((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216E920E8((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216E92704((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216E91BCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E91F54(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216E920C0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216E920E8(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216E92618(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216E92704(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216E92C34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E92D20(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C3D820(v8, a3, v9, a5);
}

void sub_216E92D74(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

void *sub_216E92E04(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74C710;
  __int16 v7 = 0;
  v6[0] = &unk_26C75E1B8;
  if (*(_DWORD *)(a1 + 784) == 1) {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C766F20;
  }
  else {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76B2E0;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v5, (uint64_t)v6, **(double **)(a3 + 16));
}

void *sub_216E92EB4(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74DEC0;
  __int16 v7 = 0;
  v6[0] = &unk_26C75E1F0;
  if (*(_DWORD *)(a1 + 784) == 1) {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C766F58;
  }
  else {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76B318;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v5, (uint64_t)v6, **(double **)(a3 + 16));
}

uint64_t sub_216E92F64(uint64_t a1, uint64_t a2)
{
  int v3 = **(_DWORD **)(a1 + 8);
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    BOOL v5 = (*(void *)(a2 + 8) & 3) == 3;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5) {
    (*(void (**)(uint64_t))((v4 & 0xFFFFFFFFFFFFFFF8) + 32))(a2);
  }
  *(void *)(a2 + 8) = (char *)&off_26C74E2B0 + 3;
  *(_DWORD *)a2 = v3;
  return 1;
}

uint64_t sub_216E92FC8(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t v2 = a2;
  uint64_t result = sub_216B908FC(a2);
  if (result)
  {
    uint64_t v5 = *((void *)v2 + 1);
    if ((v5 & 4) != 0) {
      uint64_t v2 = (pxrInternal__aapl__pxrReserved__::VtValue *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8) + 168))(v2);
    }
    __int16 v6 = *(unsigned __int16 **)(a1 + 8);
    return pxrInternal__aapl__pxrReserved__::pxr_half::half::_toFloat[*(unsigned __int16 *)v2] == pxrInternal__aapl__pxrReserved__::pxr_half::half::_toFloat[*v6]
        && pxrInternal__aapl__pxrReserved__::pxr_half::half::_toFloat[*((unsigned __int16 *)v2 + 1)] == pxrInternal__aapl__pxrReserved__::pxr_half::half::_toFloat[v6[1]];
  }
  return result;
}

uint64_t sub_216E9305C(uint64_t a1, void *a2)
{
  return 1;
}

uint64_t sub_216E93084(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result = sub_2168FAA14(a2);
  if (result)
  {
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 4) != 0) {
      __int16 v6 = (void *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8)
    }
                                                                                            + 168))(a2);
    else {
      __int16 v6 = *(void **)a2;
    }
    uint64_t v7 = *(void *)(a1 + 8);
    return sub_2168FBD2C(v6, v7);
  }
  return result;
}

uint64_t sub_216E930F4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  int v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216E93150(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74C700;
  __int16 v7 = 0;
  v6[0] = &unk_26C75E228;
  if (*(_DWORD *)(a1 + 784) == 1) {
    int v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C766EB0;
  }
  else {
    int v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76B3C0;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v5, (uint64_t)v6, **(double **)(a3 + 8));
}

uint64_t sub_216E93200(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  int v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92340, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92340))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B92338, &dword_216758000);
    __cxa_guard_release(&qword_267B92340);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B92338;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216E949A8((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216E94B3C((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216E95158((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216E94620(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E949A8(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216E94B14(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216E94B3C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216E9506C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216E95158(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216E95688(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E95774(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C3DA18(v8, a3, v9, a5);
}

void sub_216E957C8(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

uint64_t sub_216E95858(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  int v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216E958B4(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74DF08;
  __int16 v7 = 0;
  v6[0] = &unk_26C75E260;
  if (*(_DWORD *)(a1 + 784) == 1) {
    int v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C766EE8;
  }
  else {
    int v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76B3F8;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v5, (uint64_t)v6, **(double **)(a3 + 8));
}

uint64_t sub_216E95964(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  int v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92350, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92350))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B92348, &dword_216758000);
    __cxa_guard_release(&qword_267B92350);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B92348;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216E9710C((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216E972A0((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216E978BC((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216E96D84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E9710C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216E97278(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216E972A0(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216E977D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216E978BC(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216E97DEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E97ED8(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C3DC10(v8, a3, v9, a5);
}

void sub_216E97F2C(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

void *sub_216E97FBC(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74C700;
  __int16 v7 = 0;
  v6[0] = &unk_26C75E228;
  if (*(_DWORD *)(a1 + 784) == 1) {
    int v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C766EB0;
  }
  else {
    int v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76B3C0;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v5, (uint64_t)v6, **(double **)(a3 + 16));
}

void *sub_216E9806C(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74DF08;
  __int16 v7 = 0;
  v6[0] = &unk_26C75E260;
  if (*(_DWORD *)(a1 + 784) == 1) {
    int v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C766EE8;
  }
  else {
    int v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76B3F8;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v5, (uint64_t)v6, **(double **)(a3 + 16));
}

uint64_t sub_216E9811C(uint64_t a1, void *a2)
{
  uint64_t v3 = **(void **)(a1 + 8);
  uint64_t v4 = a2[1];
  if (v4) {
    BOOL v5 = (a2[1] & 3) == 3;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5) {
    (*(void (**)(void *))((v4 & 0xFFFFFFFFFFFFFFF8) + 32))(a2);
  }
  a2[1] = (char *)&off_26C74E368 + 3;
  *a2 = v3;
  return 1;
}

uint64_t sub_216E98188(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t v2 = (uint64_t)a2;
  uint64_t result = sub_2169456CC(a2);
  if (result)
  {
    uint64_t v5 = *(void *)(v2 + 8);
    if ((v5 & 4) != 0) {
      uint64_t v2 = (*(uint64_t (**)(uint64_t))((v5 & 0xFFFFFFFFFFFFFFF8) + 168))(v2);
    }
    __int16 v6 = *(float **)(a1 + 8);
    return *(float *)v2 == *v6 && *(float *)(v2 + 4) == v6[1];
  }
  return result;
}

uint64_t sub_216E98204(uint64_t a1, void *a2)
{
  return 1;
}

uint64_t sub_216E9822C(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result = sub_2168FAEA0(a2);
  if (result)
  {
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 4) != 0) {
      __int16 v6 = (void *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8)
    }
                                                                                            + 168))(a2);
    else {
      __int16 v6 = *(void **)a2;
    }
    uint64_t v7 = *(void *)(a1 + 8);
    return sub_2168FB280(v6, v7);
  }
  return result;
}

uint64_t sub_216E9829C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  uint64_t v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216E982F8(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74C6F0;
  __int16 v7 = 0;
  v6[0] = &unk_26C75E298;
  if (*(_DWORD *)(a1 + 784) == 1) {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C766E40;
  }
  else {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76B4A0;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v5, (uint64_t)v6, **(double **)(a3 + 8));
}

uint64_t sub_216E983A8(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  int v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92360, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92360))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B92358, &dword_216758000);
    __cxa_guard_release(&qword_267B92360);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B92358;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216E99B50((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216E99CE4((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216E9A300((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216E997C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E99B50(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216E99CBC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216E99CE4(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216E9A214(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216E9A300(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216E9A830(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E9A91C(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C3DE08(v8, a3, v9, a5);
}

void sub_216E9A970(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

uint64_t sub_216E9AA00(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  uint64_t v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216E9AA5C(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74DF50;
  __int16 v7 = 0;
  v6[0] = &unk_26C75E2D0;
  if (*(_DWORD *)(a1 + 784) == 1) {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C766E78;
  }
  else {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76B4D8;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v5, (uint64_t)v6, **(double **)(a3 + 8));
}

uint64_t sub_216E9AB0C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  int v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92370, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92370))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B92368, &dword_216758000);
    __cxa_guard_release(&qword_267B92370);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B92368;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216E9C2B4((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216E9C448((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216E9CA64((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216E9BF2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E9C2B4(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216E9C420(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216E9C448(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216E9C978(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216E9CA64(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216E9CF94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E9D080(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C3E000(v8, a3, v9, a5);
}

void sub_216E9D0D4(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

void *sub_216E9D164(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74C6F0;
  __int16 v7 = 0;
  v6[0] = &unk_26C75E298;
  if (*(_DWORD *)(a1 + 784) == 1) {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C766E40;
  }
  else {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76B4A0;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v5, (uint64_t)v6, **(double **)(a3 + 16));
}

void *sub_216E9D214(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74DF50;
  __int16 v7 = 0;
  v6[0] = &unk_26C75E2D0;
  if (*(_DWORD *)(a1 + 784) == 1) {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C766E78;
  }
  else {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76B4D8;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v5, (uint64_t)v6, **(double **)(a3 + 16));
}

uint64_t sub_216E9D2C4(uint64_t a1, unsigned int **a2)
{
  return 1;
}

uint64_t sub_216E9D2EC(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result = sub_216943B00(a2);
  if (result)
  {
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 4) != 0) {
      __int16 v6 = (double *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8)
    }
                                                                                            + 168))(a2);
    else {
      __int16 v6 = *(double **)a2;
    }
    __int16 v7 = *(double **)(a1 + 8);
    return *v6 == *v7 && v6[1] == v7[1];
  }
  return result;
}

uint64_t sub_216E9D368(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  uint64_t v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216E9D3C4(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = &stru_26C74C760;
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C75E308;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76B548;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v4, (uint64_t)v5, **(double **)(a3 + 8));
}

uint64_t sub_216E9D450(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  int v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92380, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92380))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B92378, &dword_216758000);
    __cxa_guard_release(&qword_267B92380);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B92378;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216E9EBF8((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216E9ED8C((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216E9F3A8((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216E9E870(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E9EBF8(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216E9ED64(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216E9ED8C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216E9F2BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216E9F3A8(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216E9F8D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216E9F9C4(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C3E1F8(v8, a3, v9, a5);
}

void sub_216E9FA18(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

uint64_t sub_216E9FAA8(pxrInternal__aapl__pxrReserved__::Usd_Clip **a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, uint64_t (**a3)(void, uint64_t))
{
  uint64_t v4 = *a1;
  uint64_t v5 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (a3)
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    return sub_216E9FB70(v4, a2, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v5 + 88), a3);
  }
  else
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    uint64_t v8 = sub_216C53204(v4, a2, (uint64_t)v5 + 88);
    if (sub_21677EC50(v8, MEMORY[0x263F8C288]))
    {
      return 0;
    }
    else if (sub_21677EC50(v8, (uint64_t)&stru_26C757FD0))
    {
      return 2;
    }
    else
    {
      return 1;
    }
  }
}

uint64_t sub_216E9FB70(pxrInternal__aapl__pxrReserved__::Usd_Clip *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_GetLayerForClip(a1, (uint64_t *)&v12);
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC((uint64_t *)&v12);
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_TranslatePathToClip(a1, a2, &v11);
  uint64_t v9 = sub_216E9FC3C(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v11, a3, a4);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  sub_216ABB798(&v12);
  return v9;
}

void sub_216E9FC14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a10)
{
}

uint64_t sub_216E9FC3C(pxrInternal__aapl__pxrReserved__::SdfLayer *a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(void, uint64_t))
{
  if (a4)
  {
    v6[1] = a4;
    v6[2] = (uint64_t (**)(void, uint64_t))&stru_26C74C760;
    __int16 v7 = 0;
    v6[0] = (uint64_t (**)(void, uint64_t))&unk_26C75E308;
    LODWORD(result) = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, v6);
    if ((_BYTE)v7) {
      return 0;
    }
    else {
      return result;
    }
  }
  else
  {
    return pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, 0);
  }
}

uint64_t sub_216E9FCB0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  uint64_t v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216E9FD0C(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = &stru_26C74DE60;
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C75E340;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76B580;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v4, (uint64_t)v5, **(double **)(a3 + 8));
}

uint64_t sub_216E9FD98(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  uint64_t v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92390, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92390))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B92388, &dword_216758000);
    __cxa_guard_release(&qword_267B92390);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B92388;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216EA1540((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216EA16D4((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216EA1CF0((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216EA11B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216EA1540(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216EA16AC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216EA16D4(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216EA1C04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216EA1CF0(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216EA2220(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216EA230C(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C3E3F0(v8, a3, v9, a5);
}

void sub_216EA2360(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

uint64_t sub_216EA23F0(pxrInternal__aapl__pxrReserved__::Usd_Clip **a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, uint64_t (**a3)(void, uint64_t))
{
  uint64_t v4 = *a1;
  uint64_t v5 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (a3)
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    return sub_216EA24B8(v4, a2, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v5 + 88), a3);
  }
  else
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    uint64_t v8 = sub_216C53204(v4, a2, (uint64_t)v5 + 88);
    if (sub_21677EC50(v8, MEMORY[0x263F8C288]))
    {
      return 0;
    }
    else if (sub_21677EC50(v8, (uint64_t)&stru_26C757FD0))
    {
      return 2;
    }
    else
    {
      return 1;
    }
  }
}

uint64_t sub_216EA24B8(pxrInternal__aapl__pxrReserved__::Usd_Clip *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_GetLayerForClip(a1, (uint64_t *)&v12);
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC((uint64_t *)&v12);
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_TranslatePathToClip(a1, a2, &v11);
  uint64_t v9 = sub_216EA2584(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v11, a3, a4);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  sub_216ABB798(&v12);
  return v9;
}

void sub_216EA255C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a10)
{
}

uint64_t sub_216EA2584(pxrInternal__aapl__pxrReserved__::SdfLayer *a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(void, uint64_t))
{
  if (a4)
  {
    v6[1] = a4;
    v6[2] = (uint64_t (**)(void, uint64_t))&stru_26C74DE60;
    __int16 v7 = 0;
    v6[0] = (uint64_t (**)(void, uint64_t))&unk_26C75E340;
    LODWORD(result) = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, v6);
    if ((_BYTE)v7) {
      return 0;
    }
    else {
      return result;
    }
  }
  else
  {
    return pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, 0);
  }
}

void *sub_216EA25F8(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = &stru_26C74C760;
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C75E308;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76B548;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v4, (uint64_t)v5, **(double **)(a3 + 16));
}

void *sub_216EA2684(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = &stru_26C74DE60;
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C75E340;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76B580;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v4, (uint64_t)v5, **(double **)(a3 + 16));
}

uint64_t sub_216EA2710(uint64_t a1, void *a2)
{
  return 1;
}

uint64_t sub_216EA2738(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result = sub_216B90E68(a2);
  if (result)
  {
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 4) != 0) {
      __int16 v6 = (_DWORD *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8)
    }
                                                                                            + 168))(a2);
    else {
      __int16 v6 = *(_DWORD **)a2;
    }
    __int16 v7 = *(_DWORD **)(a1 + 8);
    return *v6 == *v7 && v6[1] == v7[1] && v6[2] == v7[2];
  }
  return result;
}

uint64_t sub_216EA27C4(uint64_t a1, void *a2)
{
  return 1;
}

uint64_t sub_216EA27EC(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result = sub_216B91028(a2);
  if (result)
  {
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 4) != 0) {
      __int16 v6 = (void *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8)
    }
                                                                                            + 168))(a2);
    else {
      __int16 v6 = *(void **)a2;
    }
    uint64_t v7 = *(void *)(a1 + 8);
    return sub_2169BB810(v6, v7);
  }
  return result;
}

uint64_t sub_216EA285C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  uint64_t v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216EA28B8(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74C750;
  __int16 v7 = 0;
  v6[0] = &unk_26C75E378;
  if (*(_DWORD *)(a1 + 784) == 1) {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C767070;
  }
  else {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76B628;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v5, (uint64_t)v6, **(double **)(a3 + 8));
}

uint64_t sub_216EA2968(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  uint64_t v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B923A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B923A0))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B92398, &dword_216758000);
    __cxa_guard_release(&qword_267B923A0);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B92398;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216EA4110((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216EA42A4((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216EA48C0((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216EA3D88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216EA4110(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216EA427C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216EA42A4(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216EA47D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216EA48C0(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216EA4DF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216EA4EDC(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C3E5E8(v8, a3, v9, a5);
}

void sub_216EA4F30(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

uint64_t sub_216EA4FC0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  uint64_t v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216EA501C(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74DEA8;
  __int16 v7 = 0;
  v6[0] = &unk_26C75E3B0;
  if (*(_DWORD *)(a1 + 784) == 1) {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C7670A8;
  }
  else {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76B660;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v5, (uint64_t)v6, **(double **)(a3 + 8));
}

uint64_t sub_216EA50CC(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  int v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B923B0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B923B0))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B923A8, &dword_216758000);
    __cxa_guard_release(&qword_267B923B0);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B923A8;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216EA6874((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216EA6A08((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216EA7024((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216EA64EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216EA6874(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216EA69E0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216EA6A08(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216EA6F38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216EA7024(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216EA7554(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216EA7640(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C3E7E0(v8, a3, v9, a5);
}

void sub_216EA7694(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

void *sub_216EA7724(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74C750;
  __int16 v7 = 0;
  v6[0] = &unk_26C75E378;
  if (*(_DWORD *)(a1 + 784) == 1) {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C767070;
  }
  else {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76B628;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v5, (uint64_t)v6, **(double **)(a3 + 16));
}

void *sub_216EA77D4(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74DEA8;
  __int16 v7 = 0;
  v6[0] = &unk_26C75E3B0;
  if (*(_DWORD *)(a1 + 784) == 1) {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C7670A8;
  }
  else {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76B660;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v5, (uint64_t)v6, **(double **)(a3 + 16));
}

uint64_t sub_216EA7884(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = **(unsigned int **)(a1 + 8) | ((unint64_t)*(unsigned __int16 *)(*(void *)(a1 + 8) + 4) << 32);
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    BOOL v5 = (*(void *)(a2 + 8) & 3) == 3;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5) {
    (*(void (**)(uint64_t))((v4 & 0xFFFFFFFFFFFFFFF8) + 32))(a2);
  }
  *(void *)(a2 + 8) = (char *)&off_26C74E4D8 + 3;
  *(_DWORD *)a2 = v3;
  *(_WORD *)(a2 + 4) = WORD2(v3);
  return 1;
}

uint64_t sub_216EA78F8(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t v2 = (uint64_t)a2;
  uint64_t result = sub_216B91330(a2);
  if (result)
  {
    uint64_t v5 = *(void *)(v2 + 8);
    if ((v5 & 4) != 0) {
      uint64_t v2 = (*(uint64_t (**)(uint64_t))((v5 & 0xFFFFFFFFFFFFFFF8) + 168))(v2);
    }
    __int16 v6 = *(unsigned __int16 **)(a1 + 8);
    return sub_2168F450C((unsigned __int16 *)v2, v6);
  }
  return result;
}

uint64_t sub_216EA796C(uint64_t a1, void *a2)
{
  return 1;
}

uint64_t sub_216EA7994(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result = sub_2168FD1A4(a2);
  if (result)
  {
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 4) != 0) {
      __int16 v6 = (uint64_t *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8)
    }
                                                                                             + 168))(a2);
    else {
      __int16 v6 = *(uint64_t **)a2;
    }
    uint64_t v7 = *(void *)(a1 + 8);
    return sub_2168FE584(v6, v7);
  }
  return result;
}

uint64_t sub_216EA7A04(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  unint64_t v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216EA7A60(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74C740;
  __int16 v7 = 0;
  v6[0] = &unk_26C75E3E8;
  if (*(_DWORD *)(a1 + 784) == 1) {
    unint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C767000;
  }
  else {
    unint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76B708;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v5, (uint64_t)v6, **(double **)(a3 + 8));
}

uint64_t sub_216EA7B10(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  int v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B923C0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B923C0))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B923B8, &dword_216758000);
    __cxa_guard_release(&qword_267B923C0);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B923B8;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216EA92B8((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216EA944C((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216EA9A68((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216EA8F30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216EA92B8(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216EA9424(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216EA944C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216EA997C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216EA9A68(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216EA9F98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216EAA084(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C3E9D8(v8, a3, v9, a5);
}

void sub_216EAA0D8(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

uint64_t sub_216EAA168(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  unint64_t v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216EAA1C4(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74DEF0;
  __int16 v7 = 0;
  v6[0] = &unk_26C75E420;
  if (*(_DWORD *)(a1 + 784) == 1) {
    unint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C767038;
  }
  else {
    unint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76B740;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v5, (uint64_t)v6, **(double **)(a3 + 8));
}

uint64_t sub_216EAA274(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  int v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B923D0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B923D0))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B923C8, &dword_216758000);
    __cxa_guard_release(&qword_267B923D0);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B923C8;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216EABA1C((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216EABBB0((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216EAC1CC((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216EAB694(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216EABA1C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216EABB88(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216EABBB0(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216EAC0E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216EAC1CC(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216EAC6FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216EAC7E8(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C3EBD0(v8, a3, v9, a5);
}

void sub_216EAC83C(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

void *sub_216EAC8CC(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74C740;
  __int16 v7 = 0;
  v6[0] = &unk_26C75E3E8;
  if (*(_DWORD *)(a1 + 784) == 1) {
    unint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C767000;
  }
  else {
    unint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76B708;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v5, (uint64_t)v6, **(double **)(a3 + 16));
}

void *sub_216EAC97C(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74DEF0;
  __int16 v7 = 0;
  v6[0] = &unk_26C75E420;
  if (*(_DWORD *)(a1 + 784) == 1) {
    unint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C767038;
  }
  else {
    unint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76B740;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v5, (uint64_t)v6, **(double **)(a3 + 16));
}

uint64_t sub_216EACA2C(uint64_t a1, void *a2)
{
  return 1;
}

uint64_t sub_216EACA54(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result = sub_216949788(a2);
  if (result)
  {
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 4) != 0) {
      __int16 v6 = (float *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8)
    }
                                                                                           + 168))(a2);
    else {
      __int16 v6 = *(float **)a2;
    }
    __int16 v7 = *(float **)(a1 + 8);
    return *v6 == *v7 && v6[1] == v7[1] && v6[2] == v7[2];
  }
  return result;
}

uint64_t sub_216EACAE0(uint64_t a1, void *a2)
{
  return 1;
}

uint64_t sub_216EACB08(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result = sub_2168FD6AC(a2);
  if (result)
  {
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 4) != 0) {
      __int16 v6 = (void *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8)
    }
                                                                                            + 168))(a2);
    else {
      __int16 v6 = *(void **)a2;
    }
    uint64_t v7 = *(void *)(a1 + 8);
    return sub_2168FDA1C(v6, v7);
  }
  return result;
}

uint64_t sub_216EACB78(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  unint64_t v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216EACBD4(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74C730;
  __int16 v7 = 0;
  v6[0] = &unk_26C75E458;
  if (*(_DWORD *)(a1 + 784) == 1) {
    unint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C766F90;
  }
  else {
    unint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76B7E8;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v5, (uint64_t)v6, **(double **)(a3 + 8));
}

uint64_t sub_216EACC84(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  int v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B923E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B923E0))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B923D8, &dword_216758000);
    __cxa_guard_release(&qword_267B923E0);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B923D8;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216EAE42C((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216EAE5C0((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216EAEBDC((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216EAE0A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216EAE42C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216EAE598(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216EAE5C0(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216EAEAF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216EAEBDC(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216EAF10C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216EAF1F8(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C3EDC8(v8, a3, v9, a5);
}

void sub_216EAF24C(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

uint64_t sub_216EAF2DC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  unint64_t v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216EAF338(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74DF38;
  __int16 v7 = 0;
  v6[0] = &unk_26C75E490;
  if (*(_DWORD *)(a1 + 784) == 1) {
    unint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C766FC8;
  }
  else {
    unint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76B820;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v5, (uint64_t)v6, **(double **)(a3 + 8));
}

uint64_t sub_216EAF3E8(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  int v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B923F0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B923F0))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B923E8, &dword_216758000);
    __cxa_guard_release(&qword_267B923F0);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B923E8;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216EB0B90((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216EB0D24((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216EB1340((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216EB0808(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216EB0B90(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216EB0CFC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216EB0D24(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216EB1254(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216EB1340(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216EB1870(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216EB195C(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C3EFC0(v8, a3, v9, a5);
}

void sub_216EB19B0(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

void *sub_216EB1A40(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74C730;
  __int16 v7 = 0;
  v6[0] = &unk_26C75E458;
  if (*(_DWORD *)(a1 + 784) == 1) {
    unint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C766F90;
  }
  else {
    unint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76B7E8;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v5, (uint64_t)v6, **(double **)(a3 + 16));
}

void *sub_216EB1AF0(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74DF38;
  __int16 v7 = 0;
  v6[0] = &unk_26C75E490;
  if (*(_DWORD *)(a1 + 784) == 1) {
    unint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C766FC8;
  }
  else {
    unint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76B820;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v5, (uint64_t)v6, **(double **)(a3 + 16));
}

uint64_t sub_216EB1BA0(uint64_t a1, void *a2)
{
  return 1;
}

uint64_t sub_216EB1BC8(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result = sub_216947714(a2);
  if (result)
  {
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 4) != 0) {
      __int16 v6 = (double *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8)
    }
                                                                                            + 168))(a2);
    else {
      __int16 v6 = *(double **)a2;
    }
    __int16 v7 = *(double **)(a1 + 8);
    return *v6 == *v7 && v6[1] == v7[1] && v6[2] == v7[2];
  }
  return result;
}

uint64_t sub_216EB1C54(uint64_t a1, void *a2)
{
  return 1;
}

uint64_t sub_216EB1C7C(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result = sub_2168FEEE8(a2);
  if (result)
  {
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 4) != 0) {
      __int16 v6 = (void *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8)
    }
                                                                                            + 168))(a2);
    else {
      __int16 v6 = *(void **)a2;
    }
    uint64_t v7 = *(void *)(a1 + 8);
    return sub_2168FF258(v6, v7);
  }
  return result;
}

uint64_t sub_216EB1CEC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  unint64_t v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216EB1D48(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = &stru_26C74C7A0;
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C75E4C8;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76B8C8;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v4, (uint64_t)v5, **(double **)(a3 + 8));
}

uint64_t sub_216EB1DD4(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  int v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92400, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92400))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B923F8, &dword_216758000);
    __cxa_guard_release(&qword_267B92400);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B923F8;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216EB357C((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216EB3710((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216EB3D2C((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216EB31F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216EB357C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216EB36E8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216EB3710(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216EB3C40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216EB3D2C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216EB425C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216EB4348(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C3F1B8(v8, a3, v9, a5);
}

void sub_216EB439C(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

uint64_t sub_216EB442C(pxrInternal__aapl__pxrReserved__::Usd_Clip **a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, uint64_t (**a3)(void, uint64_t))
{
  uint64_t v4 = *a1;
  uint64_t v5 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (a3)
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    return sub_216EB44F4(v4, a2, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v5 + 88), a3);
  }
  else
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    uint64_t v8 = sub_216C53204(v4, a2, (uint64_t)v5 + 88);
    if (sub_21677EC50(v8, MEMORY[0x263F8C288]))
    {
      return 0;
    }
    else if (sub_21677EC50(v8, (uint64_t)&stru_26C757FD0))
    {
      return 2;
    }
    else
    {
      return 1;
    }
  }
}

uint64_t sub_216EB44F4(pxrInternal__aapl__pxrReserved__::Usd_Clip *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_GetLayerForClip(a1, (uint64_t *)&v12);
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC((uint64_t *)&v12);
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_TranslatePathToClip(a1, a2, &v11);
  uint64_t v9 = sub_216EB45C0(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v11, a3, a4);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  sub_216ABB798(&v12);
  return v9;
}

void sub_216EB4598(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a10)
{
}

uint64_t sub_216EB45C0(pxrInternal__aapl__pxrReserved__::SdfLayer *a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(void, uint64_t))
{
  if (a4)
  {
    v6[1] = a4;
    v6[2] = (uint64_t (**)(void, uint64_t))&stru_26C74C7A0;
    __int16 v7 = 0;
    v6[0] = (uint64_t (**)(void, uint64_t))&unk_26C75E4C8;
    LODWORD(result) = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, v6);
    if ((_BYTE)v7) {
      return 0;
    }
    else {
      return result;
    }
  }
  else
  {
    return pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, 0);
  }
}

uint64_t sub_216EB4634(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  unint64_t v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216EB4690(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = &stru_26C74DE48;
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C75E500;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76B900;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v4, (uint64_t)v5, **(double **)(a3 + 8));
}

uint64_t sub_216EB471C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  uint64_t v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92410, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92410))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B92408, &dword_216758000);
    __cxa_guard_release(&qword_267B92410);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B92408;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216EB5EC4((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216EB6058((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216EB6674((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216EB5B3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216EB5EC4(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216EB6030(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216EB6058(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216EB6588(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216EB6674(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216EB6BA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216EB6C90(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C3F3B0(v8, a3, v9, a5);
}

void sub_216EB6CE4(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

uint64_t sub_216EB6D74(pxrInternal__aapl__pxrReserved__::Usd_Clip **a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, uint64_t (**a3)(void, uint64_t))
{
  uint64_t v4 = *a1;
  uint64_t v5 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (a3)
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    return sub_216EB6E3C(v4, a2, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v5 + 88), a3);
  }
  else
  {
    if (!v5) {
      uint64_t v5 = sub_21697E0E0(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    }
    uint64_t v8 = sub_216C53204(v4, a2, (uint64_t)v5 + 88);
    if (sub_21677EC50(v8, MEMORY[0x263F8C288]))
    {
      return 0;
    }
    else if (sub_21677EC50(v8, (uint64_t)&stru_26C757FD0))
    {
      return 2;
    }
    else
    {
      return 1;
    }
  }
}

uint64_t sub_216EB6E3C(pxrInternal__aapl__pxrReserved__::Usd_Clip *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_GetLayerForClip(a1, (uint64_t *)&v12);
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC((uint64_t *)&v12);
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_TranslatePathToClip(a1, a2, &v11);
  uint64_t v9 = sub_216EB6F08(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v11, a3, a4);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  sub_216ABB798(&v12);
  return v9;
}

void sub_216EB6EE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a10)
{
}

uint64_t sub_216EB6F08(pxrInternal__aapl__pxrReserved__::SdfLayer *a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(void, uint64_t))
{
  if (a4)
  {
    v6[1] = a4;
    v6[2] = (uint64_t (**)(void, uint64_t))&stru_26C74DE48;
    __int16 v7 = 0;
    v6[0] = (uint64_t (**)(void, uint64_t))&unk_26C75E500;
    LODWORD(result) = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, v6);
    if ((_BYTE)v7) {
      return 0;
    }
    else {
      return result;
    }
  }
  else
  {
    return pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, 0);
  }
}

void *sub_216EB6F7C(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = &stru_26C74C7A0;
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C75E4C8;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76B8C8;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v4, (uint64_t)v5, **(double **)(a3 + 16));
}

void *sub_216EB7008(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v5[1] = a2;
  v5[2] = &stru_26C74DE48;
  __int16 v6 = 0;
  v4[1] = a2;
  v5[0] = &unk_26C75E500;
  v4[0] = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76B900;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v4, (uint64_t)v5, **(double **)(a3 + 16));
}

uint64_t sub_216EB7094(uint64_t a1, unsigned int **a2)
{
  return 1;
}

uint64_t sub_216EB70BC(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result = sub_216B919BC(a2);
  if (result)
  {
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 4) != 0) {
      __int16 v6 = (_DWORD *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8)
    }
                                                                                            + 168))(a2);
    else {
      __int16 v6 = *(_DWORD **)a2;
    }
    __int16 v7 = *(_DWORD **)(a1 + 8);
    return *v6 == *v7 && v6[1] == v7[1] && v6[2] == v7[2] && v6[3] == v7[3];
  }
  return result;
}

uint64_t sub_216EB7158(uint64_t a1, void *a2)
{
  return 1;
}

uint64_t sub_216EB7180(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result = sub_216B91B74(a2);
  if (result)
  {
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 4) != 0) {
      __int16 v6 = (void *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8)
    }
                                                                                            + 168))(a2);
    else {
      __int16 v6 = *(void **)a2;
    }
    uint64_t v7 = *(void *)(a1 + 8);
    return sub_2169BD93C(v6, v7);
  }
  return result;
}

uint64_t sub_216EB71F0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  unint64_t v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216EB724C(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74C790;
  __int16 v7 = 0;
  v6[0] = &unk_26C75E538;
  if (*(_DWORD *)(a1 + 784) == 1) {
    unint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C7671C0;
  }
  else {
    unint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76B9A8;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v5, (uint64_t)v6, **(double **)(a3 + 8));
}

uint64_t sub_216EB72FC(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  uint64_t v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92420, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92420))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B92418, &dword_216758000);
    __cxa_guard_release(&qword_267B92420);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B92418;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216EB8AA4((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216EB8C38((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216EB9254((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216EB871C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216EB8AA4(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216EB8C10(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216EB8C38(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216EB9168(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216EB9254(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216EB9784(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216EB9870(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C3F5A8(v8, a3, v9, a5);
}

void sub_216EB98C4(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

uint64_t sub_216EB9954(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  unint64_t v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216EB99B0(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74DE90;
  __int16 v7 = 0;
  v6[0] = &unk_26C75E570;
  if (*(_DWORD *)(a1 + 784) == 1) {
    unint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C7671F8;
  }
  else {
    unint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76B9E0;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v5, (uint64_t)v6, **(double **)(a3 + 8));
}

uint64_t sub_216EB9A60(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  int v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92430, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92430))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B92428, &dword_216758000);
    __cxa_guard_release(&qword_267B92430);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B92428;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216EBB208((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216EBB39C((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216EBB9B8((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216EBAE80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216EBB208(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216EBB374(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216EBB39C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216EBB8CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216EBB9B8(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216EBBEE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216EBBFD4(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C3F7A0(v8, a3, v9, a5);
}

void sub_216EBC028(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

void *sub_216EBC0B8(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74C790;
  __int16 v7 = 0;
  v6[0] = &unk_26C75E538;
  if (*(_DWORD *)(a1 + 784) == 1) {
    unint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C7671C0;
  }
  else {
    unint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76B9A8;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v5, (uint64_t)v6, **(double **)(a3 + 16));
}

void *sub_216EBC168(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74DE90;
  __int16 v7 = 0;
  v6[0] = &unk_26C75E570;
  if (*(_DWORD *)(a1 + 784) == 1) {
    unint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C7671F8;
  }
  else {
    unint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76B9E0;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v5, (uint64_t)v6, **(double **)(a3 + 16));
}

uint64_t sub_216EBC218(uint64_t a1, void *a2)
{
  uint64_t v3 = **(void **)(a1 + 8);
  uint64_t v4 = a2[1];
  if (v4) {
    BOOL v5 = (a2[1] & 3) == 3;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5) {
    (*(void (**)(void *))((v4 & 0xFFFFFFFFFFFFFFF8) + 32))(a2);
  }
  *a2 = v3;
  a2[1] = (char *)&off_26C74E700 + 3;
  return 1;
}

uint64_t sub_216EBC278(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t v2 = (uint64_t)a2;
  uint64_t result = sub_216B91E5C(a2);
  if (result)
  {
    uint64_t v5 = *(void *)(v2 + 8);
    if ((v5 & 4) != 0) {
      uint64_t v2 = (*(uint64_t (**)(uint64_t))((v5 & 0xFFFFFFFFFFFFFFF8) + 168))(v2);
    }
    __int16 v6 = *(unsigned __int16 **)(a1 + 8);
    return sub_2168F552C((unsigned __int16 *)v2, v6);
  }
  return result;
}

uint64_t sub_216EBC2EC(uint64_t a1, void *a2)
{
  return 1;
}

uint64_t sub_216EBC314(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result = sub_2168FF9E8(a2);
  if (result)
  {
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 4) != 0) {
      __int16 v6 = (uint64_t *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8)
    }
                                                                                             + 168))(a2);
    else {
      __int16 v6 = *(uint64_t **)a2;
    }
    uint64_t v7 = *(void *)(a1 + 8);
    return sub_216900DE4(v6, v7);
  }
  return result;
}

uint64_t sub_216EBC384(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  uint64_t v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216EBC3E0(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74C780;
  __int16 v7 = 0;
  v6[0] = &unk_26C75E5A8;
  if (*(_DWORD *)(a1 + 784) == 1) {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C767150;
  }
  else {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76BA88;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v5, (uint64_t)v6, **(double **)(a3 + 8));
}

uint64_t sub_216EBC490(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  int v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92440, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92440))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B92438, &dword_216758000);
    __cxa_guard_release(&qword_267B92440);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B92438;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216EBDC38((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216EBDDCC((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216EBE3E8((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216EBD8B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216EBDC38(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216EBDDA4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216EBDDCC(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216EBE2FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216EBE3E8(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216EBE918(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216EBEA04(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C3F998(v8, a3, v9, a5);
}

void sub_216EBEA58(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

uint64_t sub_216EBEAE8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  uint64_t v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216EBEB44(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74DED8;
  __int16 v7 = 0;
  v6[0] = &unk_26C75E5E0;
  if (*(_DWORD *)(a1 + 784) == 1) {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C767188;
  }
  else {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76BAC0;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v5, (uint64_t)v6, **(double **)(a3 + 8));
}

uint64_t sub_216EBEBF4(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  int v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92450, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92450))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B92448, &dword_216758000);
    __cxa_guard_release(&qword_267B92450);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B92448;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216EC039C((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216EC0530((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216EC0B4C((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216EC0014(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216EC039C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216EC0508(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216EC0530(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216EC0A60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216EC0B4C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216EC107C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216EC1168(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C3FB90(v8, a3, v9, a5);
}

void sub_216EC11BC(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

void *sub_216EC124C(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74C780;
  __int16 v7 = 0;
  v6[0] = &unk_26C75E5A8;
  if (*(_DWORD *)(a1 + 784) == 1) {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C767150;
  }
  else {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76BA88;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v5, (uint64_t)v6, **(double **)(a3 + 16));
}

void *sub_216EC12FC(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74DED8;
  __int16 v7 = 0;
  v6[0] = &unk_26C75E5E0;
  if (*(_DWORD *)(a1 + 784) == 1) {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C767188;
  }
  else {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76BAC0;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v5, (uint64_t)v6, **(double **)(a3 + 16));
}

uint64_t sub_216EC13AC(uint64_t a1, unsigned int **a2)
{
  return 1;
}

uint64_t sub_216EC13D4(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result = sub_21694D72C(a2);
  if (result)
  {
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 4) != 0) {
      __int16 v6 = (float *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8)
    }
                                                                                           + 168))(a2);
    else {
      __int16 v6 = *(float **)a2;
    }
    __int16 v7 = *(float **)(a1 + 8);
    return *v6 == *v7 && v6[1] == v7[1] && v6[2] == v7[2] && v6[3] == v7[3];
  }
  return result;
}

uint64_t sub_216EC1470(uint64_t a1, void *a2)
{
  return 1;
}

uint64_t sub_216EC1498(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result = sub_2168FFE70(a2);
  if (result)
  {
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 4) != 0) {
      __int16 v6 = (void *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8)
    }
                                                                                            + 168))(a2);
    else {
      __int16 v6 = *(void **)a2;
    }
    uint64_t v7 = *(void *)(a1 + 8);
    return sub_216900268(v6, v7);
  }
  return result;
}

uint64_t sub_216EC1508(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  uint64_t v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216EC1564(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74C770;
  __int16 v7 = 0;
  v6[0] = &unk_26C75E618;
  if (*(_DWORD *)(a1 + 784) == 1) {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C7670E0;
  }
  else {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76BB68;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v5, (uint64_t)v6, **(double **)(a3 + 8));
}

uint64_t sub_216EC1614(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  int v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92460, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92460))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B92458, &dword_216758000);
    __cxa_guard_release(&qword_267B92460);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B92458;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216EC2DBC((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216EC2F50((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216EC356C((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216EC2A34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216EC2DBC(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216EC2F28(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216EC2F50(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216EC3480(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216EC356C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216EC3A9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216EC3B88(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C3FD88(v8, a3, v9, a5);
}

void sub_216EC3BDC(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

uint64_t sub_216EC3C6C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  uint64_t v3 = *(atomic_ullong **)(a1 + 16);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t sub_216EC3CC8(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74DF20;
  __int16 v7 = 0;
  v6[0] = &unk_26C75E650;
  if (*(_DWORD *)(a1 + 784) == 1) {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C767118;
  }
  else {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76BBA0;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E2DD0C(*(void *)a3, *(_DWORD **)(a3 + 16), v5, (uint64_t)v6, **(double **)(a3 + 8));
}

uint64_t sub_216EC3D78(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(void, uint64_t))
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  int v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92470, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92470))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B92468, &dword_216758000);
    __cxa_guard_release(&qword_267B92470);
  }
  if (*(int *)a1 < 2) {
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B92468;
  }
  else {
    uint64_t v9 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  if (!sub_216EC5520((uint64_t)v8, v9, a2, a3, (uint64_t)v18, a4)) {
    return 0;
  }
  uint64_t v11 = (uint64_t)(*a4)[2];
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755180))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C755190))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v23);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v24);
    if (v19 != v21 || v20 != v22)
    {
      sub_216E0E77C((uint64_t)v18, v9, &v28);
      sub_21697DE94(&v23, &v28);
      sub_21697DEEC(&v24, &v29);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551C0)) {
    sub_216EC56B4((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  if (sub_21677EC50(v11, (uint64_t)&stru_26C7551D0)) {
    sub_216EC5CD0((uint64_t)v8, v9, (uint64_t)a2, v18);
  }
  return 1;
}

void sub_216EC5198(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216EC5520(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(void, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (BOOL i = 1;
        *(void *)(a5 + 16) != *(void *)(a5 + 32) || *(void *)(a5 + 24) != *(void *)(a5 + 40);
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_216E0E77C(a5, a2, &v19);
      sub_21697DE94(&v21, &v19);
      sub_21697DEEC(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
    }
    if (sub_216E15820(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      char v17 = 1;
      *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = 1;
      goto LABEL_16;
    }
    if (*((unsigned char *)a6 + 40))
    {
      char v17 = 1;
      goto LABEL_16;
    }
  }
  uint64_t v14 = *(atomic_ullong **)(a1 + 24);
  uint64_t explicit = atomic_load_explicit(v14 + 7, memory_order_acquire);
  if (!explicit) {
    uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v14);
  }
  unsigned __int8 v16 = sub_216E156AC(explicit, a2, a3, a4, *a6);
  *((unsigned char *)a6 + 4sub_2168EBBB8(&a9, 0) = v16;
  char v17 = v16;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_21697C414(&v21);
  return v17 & 1;
}

void sub_216EC568C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

void sub_216EC56B4(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
}

void sub_216EC5BE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E183E4((uint64_t)&a36);
  sub_2169CBCC8((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E18898((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

void sub_216EC5CD0(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, void *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
  if (a4[2] != a4[4] || a4[3] != a4[5])
  {
    sub_216E0E77C((uint64_t)a4, a2, &v12);
    sub_21697DE94(&v7, &v12);
    sub_21697DEEC(&v8, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
    sub_21697C414(&v12);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
}

void sub_216EC6200(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,char a48)
{
  sub_216E18930((uint64_t)&a36);
  sub_2169E0B70((void **)(v48 - 248));
  sub_21697B754(&a46);
  *(void *)(v48 - 248) = &a48;
  sub_216E0CAB4((void ***)(v48 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216EC62EC(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  int v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_216AA5ECC(a2);
  uint64_t v9 = *(void *)(a1 + 8);

  return sub_216C3FF80(v8, a3, v9, a5);
}

void sub_216EC6340(double a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a4)
{
}

void *sub_216EC63D0(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74C770;
  __int16 v7 = 0;
  v6[0] = &unk_26C75E618;
  if (*(_DWORD *)(a1 + 784) == 1) {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C7670E0;
  }
  else {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76BB68;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v5, (uint64_t)v6, **(double **)(a3 + 16));
}

void *sub_216EC6480(uint64_t a1, uint64_t (**a2)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  v6[1] = a2;
  v6[2] = &stru_26C74DF20;
  __int16 v7 = 0;
  v6[0] = &unk_26C75E650;
  if (*(_DWORD *)(a1 + 784) == 1) {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C767118;
  }
  else {
    uint64_t v3 = (uint64_t (**)(void, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_26C76BBA0;
  }
  v5[0] = v3;
  v5[1] = a2;
  return sub_216E313A8(*(void *)a3, *(uint64_t **)(a3 + 8), *(void *)(a3 + 24), v5, (uint64_t)v6, **(double **)(a3 + 16));
}

uint64_t sub_216EC6530(uint64_t a1, void *a2)
{
  return 1;
}

uint64_t sub_216EC6558(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result = sub_21694B764(a2);
  if (result)
  {
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 4) != 0) {
      __int16 v6 = (double *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8)
    }
                                                                                            + 168))(a2);
    else {
      __int16 v6 = *(double **)a2;
    }
    __int16 v7 = *(double **)(a1 + 8);
    return *v6 == *v7 && v6[1] == v7[1] && v6[2] == v7[2] && v6[3] == v7[3];
  }
  return result;
}

uint64_t sub_216EC65F4(uint64_t a1, void *a2)
{
  return 1;
}

uint64_t sub_216EC661C(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result = sub_2169015F0(a2);
  if (result)
  {
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 4) != 0) {
      __int16 v6 = (void *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8)
    }
                                                                                            + 168))(a2);
    else {
      __int16 v6 = *(void **)a2;
    }
    uint64_t v7 = *(void *)(a1 + 8);
    return sub_2169019E8(v6, v7);
  }
  return result;
}

uint64_t sub_216EC668C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, int a4, uint64_t a5)
{
  uint64_t v36 = *MEMORY[0x263EF8340];
  uint64_t v10 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92480, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92480))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B92478, &dword_216758000);
    __cxa_guard_release(&qword_267B92480);
  }
  if (*(int *)a1 < 2) {
    uint64_t v11 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B92478;
  }
  else {
    uint64_t v11 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v10);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v21, PrimIndex, 1);
  if (!sub_216EC8078((uint64_t *)v10, v11, a2, a3, a4, (uint64_t)v21, a5)) {
    return 0;
  }
  uint64_t v13 = *(void *)(*(void *)a5 + 16);
  if (sub_21677EC50(v13, (uint64_t)&stru_26C755180))
  {
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v29);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v30);
    if (v22 != v24 || v23 != v25)
    {
      sub_216E0E77C((uint64_t)v21, v11, (int *)&v34);
      sub_21697DE94(&v29, (int *)&v34);
      sub_21697DEEC(&v30, (int *)&v34 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v34 + 1);
      sub_21697C414(&v34);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    if (a4) {
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    BOOL v15 = v31 != v32;
    if (v31 != v32)
    {
      uint64_t v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      uint64_t v35 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::ApplyOperations();
    }
LABEL_56:
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v30);
    sub_21697C414(&v29);
    char v34 = (void **)&v31;
    sub_216E16FC0(&v34);
    return v15;
  }
  if (sub_21677EC50(v13, (uint64_t)&stru_26C755190))
  {
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v29);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v30);
    if (v22 != v24 || v23 != v25)
    {
      sub_216E0E77C((uint64_t)v21, v11, (int *)&v34);
      sub_21697DE94(&v29, (int *)&v34);
      sub_21697DEEC(&v30, (int *)&v34 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v34 + 1);
      sub_21697C414(&v34);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    if (a4) {
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    BOOL v15 = v31 != v32;
    if (v31 != v32)
    {
      uint64_t v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      uint64_t v35 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::ApplyOperations();
    }
    goto LABEL_56;
  }
  if (sub_21677EC50(v13, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v29);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v30);
    if (v22 != v24 || v23 != v25)
    {
      sub_216E0E77C((uint64_t)v21, v11, (int *)&v34);
      sub_21697DE94(&v29, (int *)&v34);
      sub_21697DEEC(&v30, (int *)&v34 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v34 + 1);
      sub_21697C414(&v34);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    if (a4) {
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    BOOL v15 = v31 != v32;
    if (v31 != v32)
    {
      uint64_t v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      uint64_t v35 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::ApplyOperations();
    }
    goto LABEL_56;
  }
  if (sub_21677EC50(v13, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v29);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v30);
    if (v22 != v24 || v23 != v25)
    {
      sub_216E0E77C((uint64_t)v21, v11, (int *)&v34);
      sub_21697DE94(&v29, (int *)&v34);
      sub_21697DEEC(&v30, (int *)&v34 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v34 + 1);
      sub_21697C414(&v34);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    if (a4) {
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    BOOL v15 = v31 != v32;
    if (v31 != v32)
    {
      uint64_t v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      uint64_t v35 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::ApplyOperations();
    }
    goto LABEL_56;
  }
  if (sub_21677EC50(v13, (uint64_t)&stru_26C7551C0)) {
    return sub_216EC8220((uint64_t)v10, v11, (uint64_t)a2, a4, v21);
  }
  if (!sub_21677EC50(v13, (uint64_t)&stru_26C7551D0)) {
    return 1;
  }
  return sub_216EC884C((uint64_t)v10, v11, (uint64_t)a2, a4, v21);
}

void sub_216EC7AE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216EC7E6C(uint64_t a1, uint64_t a2, pxrInternal__aapl__pxrReserved__::PcpNodeRef *a3, uint64_t *a4, pxrInternal__aapl__pxrReserved__::SdfPath *a5, const pxrInternal__aapl__pxrReserved__::TfToken *a6, uint64_t *a7)
{
  uint64_t v12 = sub_216E15820((uint64_t (****)(void, uint64_t))a1, a4, a5, a6, a7);
  if (v12)
  {
    *(unsigned char *)(a1 + 4sub_2168EBBB8(&a9, 0) = 1;
    LayerStack = (uint64_t *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetLayerStack(a3);
    uint64_t v14 = (pxrInternal__aapl__pxrReserved__::PcpLayerStack *)sub_216BBBFA8(LayerStack);
    uint64_t Identifier = pxrInternal__aapl__pxrReserved__::PcpLayerStack::GetIdentifier(v14);
    unsigned __int8 v16 = *(uint64_t (****)(void, uint64_t))a1;
    char v17 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *)*a4;
    uint64_t v33 = a2;
    char v34 = v17;
    sub_2168BD80C((uint64_t *)&v34);
    sub_216981010(&v35, a5);
    sub_21698105C(&v36, (_DWORD *)a5 + 1);
    long long v37 = *(_OWORD *)a3;
    pxrInternal__aapl__pxrReserved__::SdfAssetPath::SdfAssetPath((pxrInternal__aapl__pxrReserved__::SdfAssetPath *)v38);
    long long v18 = v16[1];
    int v19 = v18[2];
    long long v20 = *(_OWORD *)v18;
    int v21 = v39;
    *(_OWORD *)long long v18 = *(_OWORD *)v38;
    void v18[2] = v21;
    *(_OWORD *)int v38 = v20;
    int v39 = v19;
    uint64_t v22 = v18[5];
    long long v23 = *(_OWORD *)(v18 + 3);
    uint64_t v24 = v41;
    *(_OWORD *)(v18 + 3) = *(_OWORD *)__p;
    v18[5] = v24;
    *(_OWORD *)long long __p = v23;
    int v41 = v22;
    sub_216DE5A00(&v33, (const pxrInternal__aapl__pxrReserved__::ArResolverContext *)(Identifier + 32), (uint64_t)v38, 1, 0);
    uint64_t v25 = v16[1];
    uint64_t v26 = v25[2];
    long long v27 = *(_OWORD *)v25;
    uint64_t v28 = v39;
    *(_OWORD *)uint64_t v25 = *(_OWORD *)v38;
    void v25[2] = v28;
    *(_OWORD *)int v38 = v27;
    int v39 = v26;
    int v29 = v25[5];
    long long v30 = *(_OWORD *)(v25 + 3);
    uint64_t v31 = v41;
    *(_OWORD *)(v25 + 3) = *(_OWORD *)__p;
    v25[5] = v31;
    *(_OWORD *)long long __p = v30;
    int v41 = v29;
    if (SHIBYTE(v29) < 0) {
      operator delete(__p[0]);
    }
    if (SHIBYTE(v39) < 0) {
      operator delete(v38[0]);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v36);
    sub_21697C414(&v35);
    sub_216ABB798(&v34);
  }
  return v12;
}

void sub_216EC8030(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  sub_217324650((uint64_t)&a15);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v25);
  sub_21697C414(v24);
  sub_216ABB798(v23);
  _Unwind_Resume(a1);
}

BOOL sub_216EC8078(uint64_t *a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, int a5, uint64_t a6, uint64_t a7)
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v26);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v27);
  char v14 = 0;
  for (BOOL i = 1;
        ;
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a6))
  {
    uint64_t v16 = *(void *)(a6 + 16);
    uint64_t v17 = *(void *)(a6 + 24);
    if (v16 == *(void *)(a6 + 32) && v17 == *(void *)(a6 + 40)) {
      break;
    }
    if (i)
    {
      sub_216E0E77C(a6, a2, (int *)v25);
      sub_21697DE94(&v26, (int *)v25);
      sub_21697DEEC(&v27, (int *)v25 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v25 + 1);
      sub_21697C414(v25);
      uint64_t v16 = *(void *)(a6 + 16);
      uint64_t v17 = *(void *)(a6 + 24);
    }
    uint64_t v19 = *a1;
    v25[0] = v16;
    v25[1] = v17;
    char v20 = sub_216EC7E6C(a7, v19, (pxrInternal__aapl__pxrReserved__::PcpNodeRef *)v25, *(uint64_t **)(a6 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v26, a3, a4);
    if (*(unsigned char *)(a7 + 40)) {
      goto LABEL_15;
    }
    v14 |= v20;
  }
  if (a5)
  {
    int v21 = (atomic_ullong *)a1[3];
    uint64_t explicit = atomic_load_explicit(v21 + 7, memory_order_acquire);
    if (!explicit) {
      uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v21);
    }
    *(unsigned char *)(a7 + 4sub_2168EBBB8(&a9, 0) = sub_216E156AC(explicit, a2, a3, a4, *(uint64_t (****)(void, uint64_t))a7);
  }
  if (v14)
  {
LABEL_15:
    BOOL v23 = 1;
    goto LABEL_17;
  }
  BOOL v23 = *(unsigned char *)(a7 + 40) != 0;
LABEL_17:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v27);
  sub_21697C414(&v26);
  return v23;
}

void sub_216EC81F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

BOOL sub_216EC8220(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, char a4, void *a5)
{
  v17[19] = *(void ***)MEMORY[0x263EF8340];
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v12);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v13);
  if (a5[2] != a5[4] || a5[3] != a5[5])
  {
    sub_216E0E77C((uint64_t)a5, a2, (int *)v17);
    sub_21697DE94(&v12, (int *)v17);
    sub_21697DEEC(&v13, (int *)v17 + 1);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v17 + 1);
    sub_21697C414(v17);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  if (a4) {
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  uint64_t v7 = v14;
  uint64_t v8 = v15;
  if (v14 != v15)
  {
    v17[3] = 0;
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::ApplyOperations();
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v13);
  sub_21697C414(&v12);
  v17[0] = (void **)&v14;
  sub_216E18898(v17);
  return v7 != v8;
}

void sub_216EC8760(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  sub_216E183E4((uint64_t)&a38);
  sub_2169CBCC8((void **)(v50 - 248));
  sub_21697B754(&a48);
  *(void *)(v50 - 248) = &a50;
  sub_216E18898((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

BOOL sub_216EC884C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, char a4, void *a5)
{
  v17[19] = *(void ***)MEMORY[0x263EF8340];
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v12);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v13);
  if (a5[2] != a5[4] || a5[3] != a5[5])
  {
    sub_216E0E77C((uint64_t)a5, a2, (int *)v17);
    sub_21697DE94(&v12, (int *)v17);
    sub_21697DEEC(&v13, (int *)v17 + 1);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v17 + 1);
    sub_21697C414(v17);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  if (a4) {
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  uint64_t v7 = v14;
  uint64_t v8 = v15;
  if (v14 != v15)
  {
    v17[3] = 0;
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::ApplyOperations();
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v13);
  sub_21697C414(&v12);
  v17[0] = (void **)&v14;
  sub_216E0CAB4(v17);
  return v7 != v8;
}

void sub_216EC8D8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  sub_216E18930((uint64_t)&a38);
  sub_2169E0B70((void **)(v50 - 248));
  sub_21697B754(&a48);
  *(void *)(v50 - 248) = &a50;
  sub_216E0CAB4((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216EC8E78(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, int a4, uint64_t a5)
{
  uint64_t v36 = *MEMORY[0x263EF8340];
  uint64_t v10 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92490, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92490))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B92488, &dword_216758000);
    __cxa_guard_release(&qword_267B92490);
  }
  if (*(int *)a1 < 2) {
    uint64_t v11 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B92488;
  }
  else {
    uint64_t v11 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v10);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v21, PrimIndex, 1);
  if (!sub_216ECA810((uint64_t *)v10, v11, a2, a3, a4, (uint64_t)v21, a5)) {
    return 0;
  }
  uint64_t v13 = *(void *)(*(void *)a5 + 16);
  if (sub_21677EC50(v13, (uint64_t)&stru_26C755180))
  {
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v29);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v30);
    if (v22 != v24 || v23 != v25)
    {
      sub_216E0E77C((uint64_t)v21, v11, (int *)&v34);
      sub_21697DE94(&v29, (int *)&v34);
      sub_21697DEEC(&v30, (int *)&v34 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v34 + 1);
      sub_21697C414(&v34);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    if (a4) {
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    BOOL v15 = v31 != v32;
    if (v31 != v32)
    {
      int v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      uint64_t v35 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::ApplyOperations();
    }
LABEL_56:
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v30);
    sub_21697C414(&v29);
    char v34 = (void **)&v31;
    sub_216E16FC0(&v34);
    return v15;
  }
  if (sub_21677EC50(v13, (uint64_t)&stru_26C755190))
  {
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v29);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v30);
    if (v22 != v24 || v23 != v25)
    {
      sub_216E0E77C((uint64_t)v21, v11, (int *)&v34);
      sub_21697DE94(&v29, (int *)&v34);
      sub_21697DEEC(&v30, (int *)&v34 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v34 + 1);
      sub_21697C414(&v34);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    if (a4) {
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    BOOL v15 = v31 != v32;
    if (v31 != v32)
    {
      int v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      uint64_t v35 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::ApplyOperations();
    }
    goto LABEL_56;
  }
  if (sub_21677EC50(v13, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v29);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v30);
    if (v22 != v24 || v23 != v25)
    {
      sub_216E0E77C((uint64_t)v21, v11, (int *)&v34);
      sub_21697DE94(&v29, (int *)&v34);
      sub_21697DEEC(&v30, (int *)&v34 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v34 + 1);
      sub_21697C414(&v34);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    if (a4) {
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    BOOL v15 = v31 != v32;
    if (v31 != v32)
    {
      int v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      uint64_t v35 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::ApplyOperations();
    }
    goto LABEL_56;
  }
  if (sub_21677EC50(v13, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v29);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v30);
    if (v22 != v24 || v23 != v25)
    {
      sub_216E0E77C((uint64_t)v21, v11, (int *)&v34);
      sub_21697DE94(&v29, (int *)&v34);
      sub_21697DEEC(&v30, (int *)&v34 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v34 + 1);
      sub_21697C414(&v34);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    if (a4) {
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    BOOL v15 = v31 != v32;
    if (v31 != v32)
    {
      int v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      uint64_t v35 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::ApplyOperations();
    }
    goto LABEL_56;
  }
  if (sub_21677EC50(v13, (uint64_t)&stru_26C7551C0)) {
    return sub_216ECA9B8((uint64_t)v10, v11, (uint64_t)a2, a4, v21);
  }
  if (!sub_21677EC50(v13, (uint64_t)&stru_26C7551D0)) {
    return 1;
  }
  return sub_216ECAFE4((uint64_t)v10, v11, (uint64_t)a2, a4, v21);
}

void sub_216ECA2D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216ECA658(uint64_t a1, uint64_t a2, pxrInternal__aapl__pxrReserved__::PcpNodeRef *a3, uint64_t *a4, pxrInternal__aapl__pxrReserved__::SdfPath *a5, const pxrInternal__aapl__pxrReserved__::TfToken *a6, uint64_t *a7)
{
  uint64_t v12 = sub_216E15820((uint64_t (****)(void, uint64_t))a1, a4, a5, a6, a7);
  if (v12)
  {
    *(unsigned char *)(a1 + 4sub_2168EBBB8(&a9, 0) = 1;
    LayerStack = (uint64_t *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetLayerStack(a3);
    uint64_t v14 = (pxrInternal__aapl__pxrReserved__::PcpLayerStack *)sub_216BBBFA8(LayerStack);
    uint64_t Identifier = pxrInternal__aapl__pxrReserved__::PcpLayerStack::GetIdentifier(v14);
    uint64_t v16 = *(uint64_t (****)(void, uint64_t))a1;
    uint64_t v17 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *)*a4;
    uint64_t v32 = a2;
    uint64_t v33 = v17;
    sub_2168BD80C((uint64_t *)&v33);
    sub_216981010(&v34, a5);
    sub_21698105C(&v35, (_DWORD *)a5 + 1);
    long long v36 = *(_OWORD *)a3;
    long long v18 = v16[1];
    uint64_t v19 = (uint64_t)v18[4];
    v18[4] = 0;
    uint64_t v40 = (uint64_t (*)(void, uint64_t))v19;
    long long v20 = *(_OWORD *)v18;
    *long long v18 = 0;
    v18[1] = 0;
    int v21 = v18[2];
    uint64_t v22 = v18[3];
    void v18[2] = 0;
    v18[3] = 0;
    long long v37 = v20;
    int v38 = v21;
    int v39 = v22;
    sub_2169B49FC((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v37, v23, v24);
    sub_216DE5A00(&v32, (const pxrInternal__aapl__pxrReserved__::ArResolverContext *)(Identifier + 32), (uint64_t)v40, v37, 0);
    uint64_t v25 = v16[1];
    uint64_t v26 = (uint64_t)v25[4];
    uint64_t v27 = v38;
    v25[4] = v40;
    uint64_t v40 = (uint64_t (*)(void, uint64_t))v26;
    long long v28 = *(_OWORD *)v25;
    *(_OWORD *)uint64_t v25 = v37;
    int v29 = v25[2];
    int v30 = v25[3];
    void v25[2] = v27;
    v25[3] = v39;
    long long v37 = v28;
    int v38 = v29;
    int v39 = v30;
    sub_2169B4408(&v37);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v35);
    sub_21697C414(&v34);
    sub_216ABB798(&v33);
  }
  return v12;
}

void sub_216ECA7DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  sub_2169B4408((uint64_t *)va);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v9);
  sub_21697C414(v8);
  sub_216ABB798(v7);
  _Unwind_Resume(a1);
}

BOOL sub_216ECA810(uint64_t *a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, int a5, uint64_t a6, uint64_t a7)
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v26);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v27);
  char v14 = 0;
  for (BOOL i = 1;
        ;
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a6))
  {
    uint64_t v16 = *(void *)(a6 + 16);
    uint64_t v17 = *(void *)(a6 + 24);
    if (v16 == *(void *)(a6 + 32) && v17 == *(void *)(a6 + 40)) {
      break;
    }
    if (i)
    {
      sub_216E0E77C(a6, a2, (int *)v25);
      sub_21697DE94(&v26, (int *)v25);
      sub_21697DEEC(&v27, (int *)v25 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v25 + 1);
      sub_21697C414(v25);
      uint64_t v16 = *(void *)(a6 + 16);
      uint64_t v17 = *(void *)(a6 + 24);
    }
    uint64_t v19 = *a1;
    v25[0] = v16;
    v25[1] = v17;
    char v20 = sub_216ECA658(a7, v19, (pxrInternal__aapl__pxrReserved__::PcpNodeRef *)v25, *(uint64_t **)(a6 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v26, a3, a4);
    if (*(unsigned char *)(a7 + 40)) {
      goto LABEL_15;
    }
    v14 |= v20;
  }
  if (a5)
  {
    int v21 = (atomic_ullong *)a1[3];
    uint64_t explicit = atomic_load_explicit(v21 + 7, memory_order_acquire);
    if (!explicit) {
      uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v21);
    }
    *(unsigned char *)(a7 + 4sub_2168EBBB8(&a9, 0) = sub_216E156AC(explicit, a2, a3, a4, *(uint64_t (****)(void, uint64_t))a7);
  }
  if (v14)
  {
LABEL_15:
    BOOL v23 = 1;
    goto LABEL_17;
  }
  BOOL v23 = *(unsigned char *)(a7 + 40) != 0;
LABEL_17:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v27);
  sub_21697C414(&v26);
  return v23;
}

void sub_216ECA990(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

BOOL sub_216ECA9B8(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, char a4, void *a5)
{
  v17[19] = *(void ***)MEMORY[0x263EF8340];
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v12);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v13);
  if (a5[2] != a5[4] || a5[3] != a5[5])
  {
    sub_216E0E77C((uint64_t)a5, a2, (int *)v17);
    sub_21697DE94(&v12, (int *)v17);
    sub_21697DEEC(&v13, (int *)v17 + 1);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v17 + 1);
    sub_21697C414(v17);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  if (a4) {
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  uint64_t v7 = v14;
  uint64_t v8 = v15;
  if (v14 != v15)
  {
    v17[3] = 0;
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::ApplyOperations();
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v13);
  sub_21697C414(&v12);
  v17[0] = (void **)&v14;
  sub_216E18898(v17);
  return v7 != v8;
}

void sub_216ECAEF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  sub_216E183E4((uint64_t)&a38);
  sub_2169CBCC8((void **)(v50 - 248));
  sub_21697B754(&a48);
  *(void *)(v50 - 248) = &a50;
  sub_216E18898((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

BOOL sub_216ECAFE4(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, char a4, void *a5)
{
  v17[19] = *(void ***)MEMORY[0x263EF8340];
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v12);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v13);
  if (a5[2] != a5[4] || a5[3] != a5[5])
  {
    sub_216E0E77C((uint64_t)a5, a2, (int *)v17);
    sub_21697DE94(&v12, (int *)v17);
    sub_21697DEEC(&v13, (int *)v17 + 1);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v17 + 1);
    sub_21697C414(v17);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  if (a4) {
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  uint64_t v7 = v14;
  uint64_t v8 = v15;
  if (v14 != v15)
  {
    v17[3] = 0;
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::ApplyOperations();
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v13);
  sub_21697C414(&v12);
  v17[0] = (void **)&v14;
  sub_216E0CAB4(v17);
  return v7 != v8;
}

void sub_216ECB524(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  sub_216E18930((uint64_t)&a38);
  sub_2169E0B70((void **)(v50 - 248));
  sub_21697B754(&a48);
  *(void *)(v50 - 248) = &a50;
  sub_216E0CAB4((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216ECB610(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, int a4, uint64_t a5)
{
  uint64_t v36 = *MEMORY[0x263EF8340];
  uint64_t v10 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B924A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B924A0))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B92498, &dword_216758000);
    __cxa_guard_release(&qword_267B924A0);
  }
  if (*(int *)a1 < 2) {
    uint64_t v11 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B92498;
  }
  else {
    uint64_t v11 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v10);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v21, PrimIndex, 1);
  if (!sub_216ECCE94((uint64_t)v10, v11, a2, a3, a4, (uint64_t)v21, a5)) {
    return 0;
  }
  uint64_t v13 = *(void *)(*(void *)a5 + 16);
  if (sub_21677EC50(v13, (uint64_t)&stru_26C755180))
  {
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v29);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v30);
    if (v22 != v24 || v23 != v25)
    {
      sub_216E0E77C((uint64_t)v21, v11, (int *)&v34);
      sub_21697DE94(&v29, (int *)&v34);
      sub_21697DEEC(&v30, (int *)&v34 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v34 + 1);
      sub_21697C414(&v34);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    if (a4) {
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    BOOL v15 = v31 != v32;
    if (v31 != v32)
    {
      int v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      uint64_t v35 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::ApplyOperations();
    }
LABEL_56:
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v30);
    sub_21697C414(&v29);
    int v34 = (void **)&v31;
    sub_216E16FC0(&v34);
    return v15;
  }
  if (sub_21677EC50(v13, (uint64_t)&stru_26C755190))
  {
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v29);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v30);
    if (v22 != v24 || v23 != v25)
    {
      sub_216E0E77C((uint64_t)v21, v11, (int *)&v34);
      sub_21697DE94(&v29, (int *)&v34);
      sub_21697DEEC(&v30, (int *)&v34 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v34 + 1);
      sub_21697C414(&v34);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    if (a4) {
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    BOOL v15 = v31 != v32;
    if (v31 != v32)
    {
      int v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      uint64_t v35 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::ApplyOperations();
    }
    goto LABEL_56;
  }
  if (sub_21677EC50(v13, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v29);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v30);
    if (v22 != v24 || v23 != v25)
    {
      sub_216E0E77C((uint64_t)v21, v11, (int *)&v34);
      sub_21697DE94(&v29, (int *)&v34);
      sub_21697DEEC(&v30, (int *)&v34 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v34 + 1);
      sub_21697C414(&v34);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    if (a4) {
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    BOOL v15 = v31 != v32;
    if (v31 != v32)
    {
      int v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      uint64_t v35 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::ApplyOperations();
    }
    goto LABEL_56;
  }
  if (sub_21677EC50(v13, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v29);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v30);
    if (v22 != v24 || v23 != v25)
    {
      sub_216E0E77C((uint64_t)v21, v11, (int *)&v34);
      sub_21697DE94(&v29, (int *)&v34);
      sub_21697DEEC(&v30, (int *)&v34 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v34 + 1);
      sub_21697C414(&v34);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    if (a4) {
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    BOOL v15 = v31 != v32;
    if (v31 != v32)
    {
      int v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      uint64_t v35 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::ApplyOperations();
    }
    goto LABEL_56;
  }
  if (sub_21677EC50(v13, (uint64_t)&stru_26C7551C0)) {
    return sub_216ECD038((uint64_t)v10, v11, (uint64_t)a2, a4, v21);
  }
  if (!sub_21677EC50(v13, (uint64_t)&stru_26C7551D0)) {
    return 1;
  }
  return sub_216ECD664((uint64_t)v10, v11, (uint64_t)a2, a4, v21);
}

void sub_216ECCA68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216ECCDF0(uint64_t a1, pxrInternal__aapl__pxrReserved__::PcpNodeRef *a2, uint64_t *a3, pxrInternal__aapl__pxrReserved__::SdfPath *a4, const pxrInternal__aapl__pxrReserved__::TfToken *a5, uint64_t *a6)
{
  uint64_t v9 = sub_216E15820((uint64_t (****)(void, uint64_t))a1, a3, a4, a5, a6);
  if (v9)
  {
    *(unsigned char *)(a1 + 4sub_2168EBBB8(&a9, 0) = 1;
    v15[0] = sub_216E06358(a2, a3);
    v15[1] = v10;
    uint64_t v11 = *(uint64_t (****)(void, uint64_t))a1;
    if (!pxrInternal__aapl__pxrReserved__::SdfLayerOffset::IsIdentity((pxrInternal__aapl__pxrReserved__::SdfLayerOffset *)v15))
    {
      int v12 = (uint64_t *)v11[1];
      uint64_t v13 = *v12;
      uint64_t *v12 = 0;
      uint64_t v16 = v13;
      *(double *)v11[1] = pxrInternal__aapl__pxrReserved__::SdfLayerOffset::operator*(v15, (double *)&v16);
    }
  }
  return v9;
}

BOOL sub_216ECCE94(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, int a5, uint64_t a6, uint64_t a7)
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v25);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v26);
  char v14 = 0;
  for (BOOL i = 1;
        ;
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a6))
  {
    uint64_t v16 = *(void *)(a6 + 16);
    uint64_t v17 = *(void *)(a6 + 24);
    if (v16 == *(void *)(a6 + 32) && v17 == *(void *)(a6 + 40)) {
      break;
    }
    if (i)
    {
      sub_216E0E77C(a6, a2, (int *)v24);
      sub_21697DE94(&v25, (int *)v24);
      sub_21697DEEC(&v26, (int *)v24 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v24 + 1);
      sub_21697C414(v24);
      uint64_t v16 = *(void *)(a6 + 16);
      uint64_t v17 = *(void *)(a6 + 24);
    }
    v24[0] = v16;
    v24[1] = v17;
    char v19 = sub_216ECCDF0(a7, (pxrInternal__aapl__pxrReserved__::PcpNodeRef *)v24, *(uint64_t **)(a6 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v25, a3, a4);
    if (*(unsigned char *)(a7 + 40)) {
      goto LABEL_15;
    }
    v14 |= v19;
  }
  if (a5)
  {
    char v20 = *(atomic_ullong **)(a1 + 24);
    uint64_t explicit = atomic_load_explicit(v20 + 7, memory_order_acquire);
    if (!explicit) {
      uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v20);
    }
    *(unsigned char *)(a7 + 4sub_2168EBBB8(&a9, 0) = sub_216E156AC(explicit, a2, a3, a4, *(uint64_t (****)(void, uint64_t))a7);
  }
  if (v14)
  {
LABEL_15:
    BOOL v22 = 1;
    goto LABEL_17;
  }
  BOOL v22 = *(unsigned char *)(a7 + 40) != 0;
LABEL_17:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v26);
  sub_21697C414(&v25);
  return v22;
}

void sub_216ECD010(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

BOOL sub_216ECD038(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, char a4, void *a5)
{
  v17[19] = *(void ***)MEMORY[0x263EF8340];
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v12);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v13);
  if (a5[2] != a5[4] || a5[3] != a5[5])
  {
    sub_216E0E77C((uint64_t)a5, a2, (int *)v17);
    sub_21697DE94(&v12, (int *)v17);
    sub_21697DEEC(&v13, (int *)v17 + 1);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v17 + 1);
    sub_21697C414(v17);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  if (a4) {
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  uint64_t v7 = v14;
  uint64_t v8 = v15;
  if (v14 != v15)
  {
    v17[3] = 0;
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::ApplyOperations();
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v13);
  sub_21697C414(&v12);
  v17[0] = (void **)&v14;
  sub_216E18898(v17);
  return v7 != v8;
}

void sub_216ECD578(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  sub_216E183E4((uint64_t)&a38);
  sub_2169CBCC8((void **)(v50 - 248));
  sub_21697B754(&a48);
  *(void *)(v50 - 248) = &a50;
  sub_216E18898((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

BOOL sub_216ECD664(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, char a4, void *a5)
{
  v17[19] = *(void ***)MEMORY[0x263EF8340];
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v12);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v13);
  if (a5[2] != a5[4] || a5[3] != a5[5])
  {
    sub_216E0E77C((uint64_t)a5, a2, (int *)v17);
    sub_21697DE94(&v12, (int *)v17);
    sub_21697DEEC(&v13, (int *)v17 + 1);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v17 + 1);
    sub_21697C414(v17);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  if (a4) {
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  uint64_t v7 = v14;
  uint64_t v8 = v15;
  if (v14 != v15)
  {
    v17[3] = 0;
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::ApplyOperations();
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v13);
  sub_21697C414(&v12);
  v17[0] = (void **)&v14;
  sub_216E0CAB4(v17);
  return v7 != v8;
}

void sub_216ECDBA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  sub_216E18930((uint64_t)&a38);
  sub_2169E0B70((void **)(v50 - 248));
  sub_21697B754(&a48);
  *(void *)(v50 - 248) = &a50;
  sub_216E0CAB4((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216ECDC90(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, int a4, uint64_t a5)
{
  uint64_t v36 = *MEMORY[0x263EF8340];
  double v10 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B924B0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B924B0))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B924A8, &dword_216758000);
    __cxa_guard_release(&qword_267B924B0);
  }
  if (*(int *)a1 < 2) {
    uint64_t v11 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B924A8;
  }
  else {
    uint64_t v11 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v10);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v21, PrimIndex, 1);
  if (!sub_216ECF5BC((uint64_t)v10, v11, a2, a3, a4, (uint64_t)v21, a5)) {
    return 0;
  }
  uint64_t v13 = *(void *)(*(void *)a5 + 16);
  if (sub_21677EC50(v13, (uint64_t)&stru_26C755180))
  {
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v29);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v30);
    if (v22 != v24 || v23 != v25)
    {
      sub_216E0E77C((uint64_t)v21, v11, (int *)&v34);
      sub_21697DE94(&v29, (int *)&v34);
      sub_21697DEEC(&v30, (int *)&v34 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v34 + 1);
      sub_21697C414(&v34);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    if (a4) {
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    BOOL v15 = v31 != v32;
    if (v31 != v32)
    {
      int v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      uint64_t v35 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::ApplyOperations();
    }
LABEL_56:
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v30);
    sub_21697C414(&v29);
    int v34 = (void **)&v31;
    sub_216E16FC0(&v34);
    return v15;
  }
  if (sub_21677EC50(v13, (uint64_t)&stru_26C755190))
  {
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v29);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v30);
    if (v22 != v24 || v23 != v25)
    {
      sub_216E0E77C((uint64_t)v21, v11, (int *)&v34);
      sub_21697DE94(&v29, (int *)&v34);
      sub_21697DEEC(&v30, (int *)&v34 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v34 + 1);
      sub_21697C414(&v34);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    if (a4) {
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    BOOL v15 = v31 != v32;
    if (v31 != v32)
    {
      int v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      uint64_t v35 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::ApplyOperations();
    }
    goto LABEL_56;
  }
  if (sub_21677EC50(v13, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v29);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v30);
    if (v22 != v24 || v23 != v25)
    {
      sub_216E0E77C((uint64_t)v21, v11, (int *)&v34);
      sub_21697DE94(&v29, (int *)&v34);
      sub_21697DEEC(&v30, (int *)&v34 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v34 + 1);
      sub_21697C414(&v34);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    if (a4) {
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    BOOL v15 = v31 != v32;
    if (v31 != v32)
    {
      int v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      uint64_t v35 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::ApplyOperations();
    }
    goto LABEL_56;
  }
  if (sub_21677EC50(v13, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v29);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v30);
    if (v22 != v24 || v23 != v25)
    {
      sub_216E0E77C((uint64_t)v21, v11, (int *)&v34);
      sub_21697DE94(&v29, (int *)&v34);
      sub_21697DEEC(&v30, (int *)&v34 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v34 + 1);
      sub_21697C414(&v34);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    if (a4) {
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    BOOL v15 = v31 != v32;
    if (v31 != v32)
    {
      int v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      uint64_t v35 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::ApplyOperations();
    }
    goto LABEL_56;
  }
  if (sub_21677EC50(v13, (uint64_t)&stru_26C7551C0)) {
    return sub_216ECF760((uint64_t)v10, v11, (uint64_t)a2, a4, v21);
  }
  if (!sub_21677EC50(v13, (uint64_t)&stru_26C7551D0)) {
    return 1;
  }
  return sub_216ECFD8C((uint64_t)v10, v11, (uint64_t)a2, a4, v21);
}

void sub_216ECF0E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216ECF470(uint64_t a1, pxrInternal__aapl__pxrReserved__::PcpNodeRef *a2, uint64_t *a3, pxrInternal__aapl__pxrReserved__::SdfPath *a4, const pxrInternal__aapl__pxrReserved__::TfToken *a5, uint64_t *a6)
{
  uint64_t v9 = sub_216E15820((uint64_t (****)(void, uint64_t))a1, a3, a4, a5, a6);
  if (v9)
  {
    *(unsigned char *)(a1 + 4sub_2168EBBB8(&a9, 0) = 1;
    v31[0] = sub_216E06358(a2, a3);
    v31[1] = v10;
    uint64_t v11 = *(uint64_t (****)(void, uint64_t))a1;
    if (!pxrInternal__aapl__pxrReserved__::SdfLayerOffset::IsIdentity((pxrInternal__aapl__pxrReserved__::SdfLayerOffset *)v31))
    {
      uint64_t v14 = v11[1];
      BOOL v15 = (double *)v14[4];
      v14[4] = 0;
      uint64_t v35 = v15;
      long long v16 = *(_OWORD *)v14;
      *uint64_t v14 = 0;
      v14[1] = 0;
      uint64_t v17 = v14[2];
      long long v18 = v14[3];
      void v14[2] = 0;
      v14[3] = 0;
      long long v32 = v16;
      uint64_t v33 = v17;
      int v34 = v18;
      sub_2169B1440((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v32, v12, v13);
      char v19 = v35;
      sub_2169B1440((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v32, v20, v21);
      uint64_t v22 = v35;
      uint64_t v23 = &v35[v32];
      if (v19 != v23)
      {
        do
        {
          *char v19 = pxrInternal__aapl__pxrReserved__::SdfLayerOffset::operator*(v31, v19);
          ++v19;
        }
        while (v19 != v23);
        uint64_t v22 = v35;
      }
      uint64_t v24 = v11[1];
      uint64_t v25 = (double *)v24[4];
      v24[4] = (uint64_t (*)(void, uint64_t))v22;
      uint64_t v35 = v25;
      long long v26 = *(_OWORD *)v24;
      uint64_t v27 = v33;
      *(_OWORD *)uint64_t v24 = v32;
      uint64_t v28 = v24[2];
      int v29 = v24[3];
      void v24[2] = v27;
      v24[3] = v34;
      long long v32 = v26;
      uint64_t v33 = v28;
      int v34 = v29;
      sub_2168F83DC((uint64_t)&v32);
    }
  }
  return v9;
}

void sub_216ECF5A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_2168F83DC((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL sub_216ECF5BC(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, int a5, uint64_t a6, uint64_t a7)
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v25);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v26);
  char v14 = 0;
  for (BOOL i = 1;
        ;
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a6))
  {
    uint64_t v16 = *(void *)(a6 + 16);
    uint64_t v17 = *(void *)(a6 + 24);
    if (v16 == *(void *)(a6 + 32) && v17 == *(void *)(a6 + 40)) {
      break;
    }
    if (i)
    {
      sub_216E0E77C(a6, a2, (int *)v24);
      sub_21697DE94(&v25, (int *)v24);
      sub_21697DEEC(&v26, (int *)v24 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v24 + 1);
      sub_21697C414(v24);
      uint64_t v16 = *(void *)(a6 + 16);
      uint64_t v17 = *(void *)(a6 + 24);
    }
    v24[0] = v16;
    v24[1] = v17;
    char v19 = sub_216ECF470(a7, (pxrInternal__aapl__pxrReserved__::PcpNodeRef *)v24, *(uint64_t **)(a6 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v25, a3, a4);
    if (*(unsigned char *)(a7 + 40)) {
      goto LABEL_15;
    }
    v14 |= v19;
  }
  if (a5)
  {
    uint64_t v20 = *(atomic_ullong **)(a1 + 24);
    uint64_t explicit = atomic_load_explicit(v20 + 7, memory_order_acquire);
    if (!explicit) {
      uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v20);
    }
    *(unsigned char *)(a7 + 4sub_2168EBBB8(&a9, 0) = sub_216E156AC(explicit, a2, a3, a4, *(uint64_t (****)(void, uint64_t))a7);
  }
  if (v14)
  {
LABEL_15:
    BOOL v22 = 1;
    goto LABEL_17;
  }
  BOOL v22 = *(unsigned char *)(a7 + 40) != 0;
LABEL_17:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v26);
  sub_21697C414(&v25);
  return v22;
}

void sub_216ECF738(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

BOOL sub_216ECF760(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, char a4, void *a5)
{
  v17[19] = *(void ***)MEMORY[0x263EF8340];
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v12);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v13);
  if (a5[2] != a5[4] || a5[3] != a5[5])
  {
    sub_216E0E77C((uint64_t)a5, a2, (int *)v17);
    sub_21697DE94(&v12, (int *)v17);
    sub_21697DEEC(&v13, (int *)v17 + 1);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v17 + 1);
    sub_21697C414(v17);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  if (a4) {
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  uint64_t v7 = v14;
  uint64_t v8 = v15;
  if (v14 != v15)
  {
    v17[3] = 0;
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::ApplyOperations();
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v13);
  sub_21697C414(&v12);
  v17[0] = (void **)&v14;
  sub_216E18898(v17);
  return v7 != v8;
}

void sub_216ECFCA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  sub_216E183E4((uint64_t)&a38);
  sub_2169CBCC8((void **)(v50 - 248));
  sub_21697B754(&a48);
  *(void *)(v50 - 248) = &a50;
  sub_216E18898((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

BOOL sub_216ECFD8C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, char a4, void *a5)
{
  v17[19] = *(void ***)MEMORY[0x263EF8340];
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v12);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v13);
  if (a5[2] != a5[4] || a5[3] != a5[5])
  {
    sub_216E0E77C((uint64_t)a5, a2, (int *)v17);
    sub_21697DE94(&v12, (int *)v17);
    sub_21697DEEC(&v13, (int *)v17 + 1);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v17 + 1);
    sub_21697C414(v17);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  if (a4) {
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  uint64_t v7 = v14;
  uint64_t v8 = v15;
  if (v14 != v15)
  {
    v17[3] = 0;
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::ApplyOperations();
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v13);
  sub_21697C414(&v12);
  v17[0] = (void **)&v14;
  sub_216E0CAB4(v17);
  return v7 != v8;
}

void sub_216ED02CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  sub_216E18930((uint64_t)&a38);
  sub_2169E0B70((void **)(v50 - 248));
  sub_21697B754(&a48);
  *(void *)(v50 - 248) = &a50;
  sub_216E0CAB4((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216ED03B8(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, int a4, uint64_t a5)
{
  uint64_t v36 = *MEMORY[0x263EF8340];
  double v10 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B924C0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B924C0))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B924B8, &dword_216758000);
    __cxa_guard_release(&qword_267B924C0);
  }
  if (*(int *)a1 < 2) {
    uint64_t v11 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B924B8;
  }
  else {
    uint64_t v11 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v10);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v21, PrimIndex, 1);
  if (!sub_216ED2A20((uint64_t)v10, v11, a2, a3, a4, (uint64_t)v21, a5)) {
    return 0;
  }
  uint64_t v13 = *(void *)(*(void *)a5 + 16);
  if (sub_21677EC50(v13, (uint64_t)&stru_26C755180))
  {
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v29);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v30);
    if (v22 != v24 || v23 != v25)
    {
      sub_216E0E77C((uint64_t)v21, v11, (int *)&v34);
      sub_21697DE94(&v29, (int *)&v34);
      sub_21697DEEC(&v30, (int *)&v34 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v34 + 1);
      sub_21697C414(&v34);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    if (a4) {
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    BOOL v15 = v31 != v32;
    if (v31 != v32)
    {
      int v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      uint64_t v35 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::ApplyOperations();
    }
LABEL_56:
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v30);
    sub_21697C414(&v29);
    int v34 = (void **)&v31;
    sub_216E16FC0(&v34);
    return v15;
  }
  if (sub_21677EC50(v13, (uint64_t)&stru_26C755190))
  {
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v29);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v30);
    if (v22 != v24 || v23 != v25)
    {
      sub_216E0E77C((uint64_t)v21, v11, (int *)&v34);
      sub_21697DE94(&v29, (int *)&v34);
      sub_21697DEEC(&v30, (int *)&v34 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v34 + 1);
      sub_21697C414(&v34);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    if (a4) {
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    BOOL v15 = v31 != v32;
    if (v31 != v32)
    {
      int v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      uint64_t v35 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::ApplyOperations();
    }
    goto LABEL_56;
  }
  if (sub_21677EC50(v13, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v29);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v30);
    if (v22 != v24 || v23 != v25)
    {
      sub_216E0E77C((uint64_t)v21, v11, (int *)&v34);
      sub_21697DE94(&v29, (int *)&v34);
      sub_21697DEEC(&v30, (int *)&v34 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v34 + 1);
      sub_21697C414(&v34);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    if (a4) {
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    BOOL v15 = v31 != v32;
    if (v31 != v32)
    {
      int v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      uint64_t v35 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::ApplyOperations();
    }
    goto LABEL_56;
  }
  if (sub_21677EC50(v13, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v29);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v30);
    if (v22 != v24 || v23 != v25)
    {
      sub_216E0E77C((uint64_t)v21, v11, (int *)&v34);
      sub_21697DE94(&v29, (int *)&v34);
      sub_21697DEEC(&v30, (int *)&v34 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v34 + 1);
      sub_21697C414(&v34);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    if (a4) {
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    BOOL v15 = v31 != v32;
    if (v31 != v32)
    {
      int v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      uint64_t v35 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::ApplyOperations();
    }
    goto LABEL_56;
  }
  if (sub_21677EC50(v13, (uint64_t)&stru_26C7551C0)) {
    return sub_216ED2BC0((uint64_t)v10, v11, (uint64_t)a2, a4, v21);
  }
  if (!sub_21677EC50(v13, (uint64_t)&stru_26C7551D0)) {
    return 1;
  }
  return sub_216ED31EC((uint64_t)v10, v11, (uint64_t)a2, a4, v21);
}

void sub_216ED1810(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

void sub_216ED1B98(unsigned char *a1, uint64_t a2, void *a3, const pxrInternal__aapl__pxrReserved__::TfToken *a4, void *a5)
{
  memset(v50, 0, sizeof(v50));
  *(_OWORD *)uint64_t v48 = 0u;
  memset(v49, 0, sizeof(v49));
  uint64_t v47 = 0;
  long long v45 = 0u;
  long long v46 = 0u;
  uint64_t v10 = *(void *)a1;
  int v11 = strcmp((const char *)(0x8000000217478EC2 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(void *)(*(void *)(*(void *)a1 + 16) + 8) & 0x7FFFFFFFFFFFFFFFLL));
  uint64_t v12 = *(void *)(v10 + 8);
  if (v11)
  {
    sub_216C45C64((uint64_t)&v45, (long long *)v12);
  }
  else
  {
    if (v48 != (void **)v12)
    {
      sub_216825D78((char *)v48, *(char **)v12, *(void *)(v12 + 8), (uint64_t)(*(void *)(v12 + 8) - *(void *)v12) >> 2);
      sub_216B01A9C((uint64_t)v49 + 8, *(void *)(v12 + 24), *(void *)(v12 + 32), (uint64_t)(*(void *)(v12 + 32) - *(void *)(v12 + 24)) >> 5);
      sub_216B01C6C((uint64_t)v50, *(void *)(v12 + 48), *(void *)(v12 + 56), (uint64_t)(*(void *)(v12 + 56) - *(void *)(v12 + 48)) >> 6);
    }
    std::string::operator=(&v50[1], (const std::string *)(v12 + 72));
  }
  if (sub_216E156AC(a2, a3, a4, a5, *(uint64_t (****)(void, uint64_t))a1))
  {
    a1[40] = 1;
    if (v11)
    {
      BOOL v15 = *(long long **)(*(void *)a1 + 8);
      long long v16 = v15[1];
      long long v42 = *v15;
      long long v43 = v16;
      uint64_t v17 = *((void *)v15 + 4);
      uint64_t v44 = v17;
      if (v17)
      {
        long long v18 = (atomic_ullong *)(v17 - 16);
        if (*((void *)&v43 + 1)) {
          long long v18 = (atomic_ullong *)*((void *)&v43 + 1);
        }
        atomic_fetch_add_explicit(v18, 1uLL, memory_order_relaxed);
      }
      if ((void)v42 == (void)v45)
      {
        sub_2169B8E9C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v45, v13, v14);
        uint64_t v19 = v47;
        sub_2169B8E9C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v45, v20, v21);
        uint64_t v22 = v47;
        uint64_t v23 = v45;
        sub_2169B8E9C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v42, v24, v25);
        uint64_t v26 = v44;
        sub_2169B8E9C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v45, v27, v28);
        uint64_t v29 = v22 + 96 * v23;
        if (v19 != v29)
        {
          uint64_t v30 = 0;
          uint64_t v31 = v47;
          do
          {
            sub_216E21C90(v19 + v30, (const std::string *)(v26 + v30), (uint64_t)__p);
            uint64_t v32 = *(void **)(v31 + v30);
            if (v32)
            {
              *(void *)(v31 + v30 + 8) = v32;
              operator delete(v32);
            }
            uint64_t v33 = v31 + v30;
            *(_OWORD *)uint64_t v33 = *(_OWORD *)__p;
            *(void *)(v33 + 16) = v52;
            __p[0] = 0;
            __p[1] = 0;
            unint64_t v52 = 0;
            sub_2169B59AC((void **)(v31 + v30 + 24));
            *(_OWORD *)(v33 + 24) = v53;
            *(void *)(v33 + 4sub_2168EBBB8(&a9, 0) = v54;
            long long v53 = 0uLL;
            uint64_t v54 = 0;
            sub_2169B5A6C((void **)(v31 + v30 + 48));
            *(std::string *)(v33 + 48) = v55;
            memset(&v55, 0, sizeof(v55));
            int v34 = (void **)(v31 + v30 + 72);
            if (*(char *)(v31 + v30 + 95) < 0) {
              operator delete(*v34);
            }
            long long v35 = *(_OWORD *)&v56.__r_.__value_.__l.__data_;
            *(void *)(v33 + 88) = *((void *)&v56.__r_.__value_.__l + 2);
            *(_OWORD *)int v34 = v35;
            *((unsigned char *)&v56.__r_.__value_.__s + 23) = 0;
            v56.__r_.__value_.__s.__data_[0] = 0;
            v57[0] = (void **)&v55;
            sub_2169B81EC(v57);
            v57[0] = (void **)&v53;
            sub_2169B74B8(v57);
            if (__p[0])
            {
              __p[1] = __p[0];
              operator delete(__p[0]);
            }
            v30 += 96;
          }
          while (v19 + v30 != v29);
        }
      }
      uint64_t v36 = *(long long **)(*(void *)a1 + 8);
      uint64_t v37 = *((void *)v36 + 4);
      unint64_t v38 = v46;
      *((void *)v36 + 4) = v47;
      uint64_t v47 = v37;
      long long v39 = *v36;
      long long *v36 = v45;
      uint64_t v40 = *((void *)v36 + 2);
      uint64_t v41 = *((void *)v36 + 3);
      v36[1] = __PAIR128__(*((unint64_t *)&v46 + 1), v38);
      long long v45 = v39;
      *(void *)&long long v46 = v40;
      *((void *)&v46 + 1) = v41;
      sub_2169B88CC(&v42);
    }
    else
    {
      pxrInternal__aapl__pxrReserved__::SdfPathExpression::ComposeOver((uint64_t)v48, *(const std::string **)(*(void *)a1 + 8), (uint64_t)__p);
      if (v48[0])
      {
        v48[1] = v48[0];
        operator delete(v48[0]);
      }
      *(_OWORD *)uint64_t v48 = *(_OWORD *)__p;
      *(void *)&v49[0] = v52;
      __p[1] = 0;
      unint64_t v52 = 0;
      __p[0] = 0;
      sub_2169B59AC((void **)v49 + 1);
      *(_OWORD *)((char *)v49 + 8) = v53;
      *((void *)&v49[1] + 1) = v54;
      uint64_t v54 = 0;
      long long v53 = 0uLL;
      sub_2169B5A6C((void **)&v50[0].__r_.__value_.__l.__data_);
      v50[0] = v55;
      memset(&v55, 0, sizeof(v55));
      if (SHIBYTE(v50[1].__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v50[1].__r_.__value_.__l.__data_);
      }
      v50[1] = v56;
      *((unsigned char *)&v56.__r_.__value_.__s + 23) = 0;
      v56.__r_.__value_.__s.__data_[0] = 0;
      *(void *)&long long v42 = &v55;
      sub_2169B81EC((void ***)&v42);
      *(void *)&long long v42 = &v53;
      sub_2169B74B8((void ***)&v42);
      if (__p[0])
      {
        __p[1] = __p[0];
        operator delete(__p[0]);
      }
      __p[0] = *(void **)(*(void *)a1 + 8);
      __p[1] = (char *)__p[0] + 24;
      unint64_t v52 = (char *)__p[0] + 48;
      *(void *)&long long v53 = (char *)__p[0] + 72;
      *(void *)&long long v42 = v48;
      *((void *)&v42 + 1) = (char *)v49 + 8;
      *(void *)&long long v43 = v50;
      *((void *)&v43 + 1) = &v50[1];
      sub_216B8EFE8((uint64_t **)__p, (uint64_t)&v42);
    }
  }
  sub_2169B88CC(&v45);
  if (SHIBYTE(v50[1].__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v50[1].__r_.__value_.__l.__data_);
  }
  __p[0] = v50;
  sub_2169B81EC((void ***)__p);
  __p[0] = (char *)v49 + 8;
  sub_2169B74B8((void ***)__p);
  if (v48[0])
  {
    v48[1] = v48[0];
    operator delete(v48[0]);
  }
}

void sub_216ED2014(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  sub_2169B88CC((uint64_t *)va);
  sub_2169B5940((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_216ED2058(uint64_t *a1, pxrInternal__aapl__pxrReserved__::PcpNodeRef *a2, uint64_t *a3, pxrInternal__aapl__pxrReserved__::SdfPath *a4, const pxrInternal__aapl__pxrReserved__::TfToken *a5, uint64_t *a6)
{
  memset(v87, 0, sizeof(v87));
  *(_OWORD *)long long v85 = 0u;
  memset(v86, 0, sizeof(v86));
  uint64_t v84 = 0;
  long long v82 = 0u;
  long long v83 = 0u;
  uint64_t v11 = *a1;
  int v12 = strcmp((const char *)(0x8000000217478EC2 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(void *)(*(void *)(*a1 + 16) + 8) & 0x7FFFFFFFFFFFFFFFLL));
  uint64_t v13 = *(const std::string **)(v11 + 8);
  if (v12)
  {
    sub_216C45C64((uint64_t)&v82, *(long long **)(v11 + 8));
  }
  else
  {
    if (v85 != (void **)v13)
    {
      sub_216825D78((char *)v85, v13->__r_.__value_.__l.__data_, v13->__r_.__value_.__l.__size_, (uint64_t)(v13->__r_.__value_.__l.__size_ - v13->__r_.__value_.__r.__words[0]) >> 2);
      sub_216B01A9C((uint64_t)v86 + 8, (uint64_t)v13[1].__r_.__value_.__l.__data_, v13[1].__r_.__value_.__l.__size_, (uint64_t)(v13[1].__r_.__value_.__l.__size_ - v13[1].__r_.__value_.__r.__words[0]) >> 5);
      sub_216B01C6C((uint64_t)v87, (uint64_t)v13[2].__r_.__value_.__l.__data_, v13[2].__r_.__value_.__l.__size_, (uint64_t)(v13[2].__r_.__value_.__l.__size_ - v13[2].__r_.__value_.__r.__words[0]) >> 6);
    }
    std::string::operator=(&v87[1], v13 + 3);
  }
  uint64_t v14 = sub_216E15820((uint64_t (****)(void, uint64_t))a1, a3, a4, a5, a6);
  if (v14)
  {
    uint64_t v15 = (uint64_t (***)(void, uint64_t))*a1;
    uint64_t v16 = (const char *)(*(void *)(*(void *)(*a1 + 16) + 8) & 0x7FFFFFFFFFFFFFFFLL);
    if (!strcmp((const char *)(0x8000000217478EC2 & 0x7FFFFFFFFFFFFFFFLL), v16))
    {
      unsigned int v80 = v14;
      memset(v101, 0, 48);
      long long v99 = 0u;
      memset(v100, 0, sizeof(v100));
      __p[0] = v15[1];
      __p[1] = (char *)__p[0] + 24;
      *(void *)uint64_t v90 = (char *)__p[0] + 48;
      *(void *)&v90[8] = (char *)__p[0] + 72;
      uint64_t v94 = (void **)&v99;
      long long v95 = (atomic_ullong *)v100 + 1;
      uint64_t v96 = v101;
      unint64_t v97 = (unint64_t)&v101[1];
      sub_216B8EFE8((uint64_t **)__p, (uint64_t)&v94);
      MapToRoot = (pxrInternal__aapl__pxrReserved__::PcpMapExpression::_Node **)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetMapToRoot(a2);
      uint64_t v50 = pxrInternal__aapl__pxrReserved__::PcpMapExpression::Evaluate(MapToRoot, v48, v49);
      sub_216D16CFC((uint64_t)&v94, a1 + 2, (_DWORD *)a1 + 6);
      pxrInternal__aapl__pxrReserved__::UsdPrim::_GetProtoToInstancePathMap((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v94, v51, (uint64_t *)v88);
      sub_216DE683C(&v99, (uint64_t)v50, (uint64_t)v88, (uint64_t)__p);
      if ((void)v99)
      {
        *((void *)&v99 + 1) = v99;
        operator delete((void *)v99);
      }
      long long v99 = *(_OWORD *)__p;
      *(void *)&v100[0] = *(void *)v90;
      __p[1] = 0;
      *(void *)uint64_t v90 = 0;
      __p[0] = 0;
      sub_2169B59AC((void **)v100 + 1);
      *(_OWORD *)((char *)v100 + 8) = *(_OWORD *)&v90[8];
      *((void *)&v100[1] + 1) = v91;
      *(void *)&v90[16] = 0;
      uint64_t v91 = 0;
      *(void *)&v90[8] = 0;
      sub_2169B5A6C((void **)&v101[0].__r_.__value_.__l.__data_);
      v101[0] = v92;
      memset(&v92, 0, sizeof(v92));
      if (SHIBYTE(v101[1].__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v101[1].__r_.__value_.__l.__data_);
      }
      v101[1] = v93;
      *((unsigned char *)&v93.__r_.__value_.__s + 23) = 0;
      v93.__r_.__value_.__s.__data_[0] = 0;
      v98[0] = (void **)&v92;
      sub_2169B81EC(v98);
      v98[0] = (void **)&v90[8];
      sub_2169B74B8(v98);
      if (__p[0])
      {
        __p[1] = __p[0];
        operator delete(__p[0]);
      }
      v98[0] = (void **)v88;
      sub_216BECE18(v98);
      if ((v97 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v97 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v96 + 1);
      sub_21697C414(&v96);
      if (v95) {
        sub_216D16E0C(v95);
      }
      __p[0] = v15[1];
      __p[1] = (char *)__p[0] + 24;
      *(void *)uint64_t v90 = (char *)__p[0] + 48;
      *(void *)&v90[8] = (char *)__p[0] + 72;
      uint64_t v94 = (void **)&v99;
      long long v95 = (atomic_ullong *)v100 + 1;
      uint64_t v96 = v101;
      unint64_t v97 = (unint64_t)&v101[1];
      sub_216B8EFE8((uint64_t **)__p, (uint64_t)&v94);
      if (SHIBYTE(v101[1].__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v101[1].__r_.__value_.__l.__data_);
      }
      __p[0] = v101;
      sub_2169B81EC((void ***)__p);
      __p[0] = (char *)v100 + 8;
      sub_2169B74B8((void ***)__p);
      if ((void)v99)
      {
        *((void *)&v99 + 1) = v99;
        operator delete((void *)v99);
      }
    }
    else
    {
      if (strcmp((const char *)(0x8000000217478EFALL & 0x7FFFFFFFFFFFFFFFLL), v16)) {
        goto LABEL_61;
      }
      *(void *)&v90[8] = 0;
      uint64_t v17 = v15[1];
      long long v18 = v17[4];
      v17[4] = 0;
      *(void *)&v90[16] = v18;
      long long v19 = *(_OWORD *)v17;
      uint64_t v20 = v17[2];
      int v21 = v17[3];
      v17[1] = 0;
      _OWORD v17[2] = 0;
      pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v17 = 0;
      v17[3] = *(uint64_t (**)(void, uint64_t))&v90[8];
      *(_OWORD *)long long __p = v19;
      *(void *)uint64_t v90 = v20;
      *(void *)&v90[8] = v21;
      uint64_t v22 = (pxrInternal__aapl__pxrReserved__::UsdPrim *)sub_216D16CFC((uint64_t)&v99, a1 + 2, (_DWORD *)a1 + 6);
      pxrInternal__aapl__pxrReserved__::UsdPrim::_GetProtoToInstancePathMap(v22, v23, (uint64_t *)&v94);
      if ((BYTE8(v100[0]) & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*((void *)&v100[0] + 1) & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v100 + 1);
      sub_21697C414(v100);
      if (*((void *)&v99 + 1)) {
        sub_216D16E0C(*((atomic_ullong **)&v99 + 1));
      }
      uint64_t v24 = (pxrInternal__aapl__pxrReserved__::PcpMapExpression::_Node **)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetMapToRoot(a2);
      uint64_t v27 = pxrInternal__aapl__pxrReserved__::PcpMapExpression::Evaluate(v24, v25, v26);
      sub_2169B8E9C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)__p, v28, v29);
      unsigned int v80 = v14;
      uint64_t v30 = *(void *)&v90[16];
      sub_2169B8E9C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)__p, v31, v32);
      uint64_t v33 = *(uint64_t (**)(void, uint64_t))&v90[16];
      uint64_t v34 = *(void *)&v90[16] + 96 * (uint64_t)__p[0];
      long long v35 = v15;
      if (v30 != v34)
      {
        do
        {
          sub_216DE683C((void *)v30, (uint64_t)v27, (uint64_t)&v94, (uint64_t)&v99);
          uint64_t v36 = *(void **)v30;
          if (*(void *)v30)
          {
            *(void *)(v30 + 8) = v36;
            operator delete(v36);
            *(void *)uint64_t v30 = 0;
            *(void *)(v30 + 8) = 0;
            *(void *)(v30 + 16) = 0;
          }
          *(_OWORD *)uint64_t v30 = v99;
          *(void *)(v30 + 16) = *(void *)&v100[0];
          long long v99 = 0uLL;
          *(void *)&v100[0] = 0;
          sub_2169B59AC((void **)(v30 + 24));
          *(_OWORD *)(v30 + 24) = *(_OWORD *)((char *)v100 + 8);
          *(void *)(v30 + 4sub_2168EBBB8(&a9, 0) = *((void *)&v100[1] + 1);
          memset((char *)v100 + 8, 0, 24);
          sub_2169B5A6C((void **)(v30 + 48));
          *(std::string *)(v30 + 48) = v101[0];
          memset(v101, 0, 24);
          uint64_t v37 = (void **)(v30 + 72);
          if (*(char *)(v30 + 95) < 0) {
            operator delete(*v37);
          }
          long long v38 = *(_OWORD *)&v101[1].__r_.__value_.__l.__data_;
          *(void *)(v30 + 88) = *((void *)&v101[1].__r_.__value_.__l + 2);
          *(_OWORD *)uint64_t v37 = v38;
          *((unsigned char *)&v101[1].__r_.__value_.__s + 23) = 0;
          v101[1].__r_.__value_.__s.__data_[0] = 0;
          v88[0] = (void **)v101;
          sub_2169B81EC(v88);
          v88[0] = (void **)v100 + 1;
          sub_2169B74B8(v88);
          if ((void)v99)
          {
            *((void *)&v99 + 1) = v99;
            operator delete((void *)v99);
          }
          v30 += 96;
        }
        while (v30 != v34);
        uint64_t v33 = *(uint64_t (**)(void, uint64_t))&v90[16];
      }
      long long v39 = v35[1];
      uint64_t v40 = v39[4];
      v39[4] = v33;
      *(void *)&v90[16] = v40;
      long long v41 = *(_OWORD *)v39;
      unint64_t v42 = *(void *)v90;
      *(_OWORD *)long long v39 = *(_OWORD *)__p;
      long long v43 = v39[2];
      uint64_t v44 = v39[3];
      *((_OWORD *)v39 + 1) = __PAIR128__(*(unint64_t *)&v90[8], v42);
      *(_OWORD *)long long __p = v41;
      *(void *)uint64_t v90 = v43;
      *(void *)&v90[8] = v44;
      *(void *)&long long v99 = &v94;
      sub_216BECE18((void ***)&v99);
      sub_2169B88CC(__p);
    }
    if (v12)
    {
      uint64_t v52 = *(void *)(*a1 + 8);
      long long v53 = *(_OWORD *)(v52 + 16);
      *(_OWORD *)long long __p = *(_OWORD *)v52;
      *(_OWORD *)uint64_t v90 = v53;
      uint64_t v54 = *(void *)(v52 + 32);
      *(void *)&v90[16] = v54;
      if (v54)
      {
        std::string v55 = (atomic_ullong *)(v54 - 16);
        if (*(void *)&v90[8]) {
          std::string v55 = *(atomic_ullong **)&v90[8];
        }
        atomic_fetch_add_explicit(v55, 1uLL, memory_order_relaxed);
      }
      if (__p[0] == (void *)v82)
      {
        sub_2169B8E9C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v82, v45, v46);
        uint64_t v56 = v84;
        sub_2169B8E9C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v82, v57, v58);
        uint64_t v59 = v84;
        uint64_t v60 = v82;
        sub_2169B8E9C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)__p, v61, v62);
        uint64_t v63 = *(void *)&v90[16];
        sub_2169B8E9C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v82, v64, v65);
        uint64_t v66 = v59 + 96 * v60;
        if (v56 != v66)
        {
          uint64_t v67 = 0;
          uint64_t v68 = v84;
          do
          {
            sub_216E21C90(v56 + v67, (const std::string *)(v63 + v67), (uint64_t)&v99);
            std::string v69 = *(void **)(v68 + v67);
            if (v69)
            {
              *(void *)(v68 + v67 + 8) = v69;
              operator delete(v69);
            }
            uint64_t v70 = v68 + v67;
            *(_OWORD *)uint64_t v70 = v99;
            *(void *)(v70 + 16) = *(void *)&v100[0];
            long long v99 = 0uLL;
            *(void *)&v100[0] = 0;
            sub_2169B59AC((void **)(v68 + v67 + 24));
            *(_OWORD *)(v70 + 24) = *(_OWORD *)((char *)v100 + 8);
            *(void *)(v70 + 4sub_2168EBBB8(&a9, 0) = *((void *)&v100[1] + 1);
            memset((char *)v100 + 8, 0, 24);
            sub_2169B5A6C((void **)(v68 + v67 + 48));
            *(std::string *)(v70 + 48) = v101[0];
            memset(v101, 0, 24);
            long long v71 = (void **)(v68 + v67 + 72);
            if (*(char *)(v68 + v67 + 95) < 0) {
              operator delete(*v71);
            }
            long long v72 = *(_OWORD *)&v101[1].__r_.__value_.__l.__data_;
            *(void *)(v70 + 88) = *((void *)&v101[1].__r_.__value_.__l + 2);
            *(_OWORD *)long long v71 = v72;
            *((unsigned char *)&v101[1].__r_.__value_.__s + 23) = 0;
            v101[1].__r_.__value_.__s.__data_[0] = 0;
            uint64_t v94 = (void **)v101;
            sub_2169B81EC(&v94);
            uint64_t v94 = (void **)v100 + 1;
            sub_2169B74B8(&v94);
            if ((void)v99)
            {
              *((void *)&v99 + 1) = v99;
              operator delete((void *)v99);
            }
            v67 += 96;
          }
          while (v56 + v67 != v66);
        }
      }
      uint64_t v73 = *(long long **)(*a1 + 8);
      uint64_t v74 = *((void *)v73 + 4);
      unint64_t v75 = v83;
      *((void *)v73 + 4) = v84;
      uint64_t v84 = v74;
      long long v76 = *v73;
      long long *v73 = v82;
      uint64_t v77 = *((void *)v73 + 2);
      uint64_t v78 = *((void *)v73 + 3);
      v73[1] = __PAIR128__(*((unint64_t *)&v83 + 1), v75);
      long long v82 = v76;
      *(void *)&long long v83 = v77;
      *((void *)&v83 + 1) = v78;
      sub_2169B88CC(__p);
    }
    else
    {
      pxrInternal__aapl__pxrReserved__::SdfPathExpression::ComposeOver((uint64_t)v85, *(const std::string **)(*a1 + 8), (uint64_t)&v99);
      if (v85[0])
      {
        v85[1] = v85[0];
        operator delete(v85[0]);
      }
      *(_OWORD *)long long v85 = v99;
      *(void *)&v86[0] = *(void *)&v100[0];
      *(void *)&v100[0] = 0;
      long long v99 = 0uLL;
      sub_2169B59AC((void **)v86 + 1);
      *(_OWORD *)((char *)v86 + 8) = *(_OWORD *)((char *)v100 + 8);
      *((void *)&v86[1] + 1) = *((void *)&v100[1] + 1);
      memset((char *)v100 + 8, 0, 24);
      sub_2169B5A6C((void **)&v87[0].__r_.__value_.__l.__data_);
      v87[0] = v101[0];
      memset(v101, 0, 24);
      if (SHIBYTE(v87[1].__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v87[1].__r_.__value_.__l.__data_);
      }
      v87[1] = v101[1];
      *((unsigned char *)&v101[1].__r_.__value_.__s + 23) = 0;
      v101[1].__r_.__value_.__s.__data_[0] = 0;
      __p[0] = v101;
      sub_2169B81EC((void ***)__p);
      __p[0] = (char *)v100 + 8;
      sub_2169B74B8((void ***)__p);
      if ((void)v99)
      {
        *((void *)&v99 + 1) = v99;
        operator delete((void *)v99);
      }
      *(void *)&long long v99 = *(void *)(*a1 + 8);
      *((void *)&v99 + 1) = v99 + 24;
      *(void *)&v100[0] = v99 + 48;
      *((void *)&v100[0] + 1) = v99 + 72;
      __p[0] = v85;
      __p[1] = (char *)v86 + 8;
      *(void *)uint64_t v90 = v87;
      *(void *)&v90[8] = &v87[1];
      sub_216B8EFE8((uint64_t **)&v99, (uint64_t)__p);
    }
    uint64_t v14 = v80;
  }
LABEL_61:
  sub_2169B88CC(&v82);
  if (SHIBYTE(v87[1].__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v87[1].__r_.__value_.__l.__data_);
  }
  *(void *)&long long v99 = v87;
  sub_2169B81EC((void ***)&v99);
  *(void *)&long long v99 = (char *)v86 + 8;
  sub_2169B74B8((void ***)&v99);
  if (v85[0])
  {
    v85[1] = v85[0];
    operator delete(v85[0]);
  }
  return v14;
}

void sub_216ED2950(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  sub_2169B88CC((uint64_t *)va);
  sub_2169B5940((uint64_t)va1);
  _Unwind_Resume(a1);
}

BOOL sub_216ED2A20(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, int a5, uint64_t a6, uint64_t a7)
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v25);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v26);
  char v14 = 0;
  for (BOOL i = 1;
        ;
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a6))
  {
    uint64_t v16 = *(void *)(a6 + 16);
    uint64_t v17 = *(void *)(a6 + 24);
    if (v16 == *(void *)(a6 + 32) && v17 == *(void *)(a6 + 40)) {
      break;
    }
    if (i)
    {
      sub_216E0E77C(a6, a2, (int *)v24);
      sub_21697DE94(&v25, (int *)v24);
      sub_21697DEEC(&v26, (int *)v24 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v24 + 1);
      sub_21697C414(v24);
      uint64_t v16 = *(void *)(a6 + 16);
      uint64_t v17 = *(void *)(a6 + 24);
    }
    v24[0] = v16;
    v24[1] = v17;
    char v19 = sub_216ED2058((uint64_t *)a7, (pxrInternal__aapl__pxrReserved__::PcpNodeRef *)v24, *(uint64_t **)(a6 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v25, a3, a4);
    if (*(unsigned char *)(a7 + 40)) {
      goto LABEL_15;
    }
    v14 |= v19;
  }
  if (a5)
  {
    uint64_t v20 = *(atomic_ullong **)(a1 + 24);
    uint64_t explicit = atomic_load_explicit(v20 + 7, memory_order_acquire);
    if (!explicit) {
      uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v20);
    }
    sub_216ED1B98((unsigned char *)a7, explicit, a2, a3, a4);
  }
  if (v14)
  {
LABEL_15:
    BOOL v22 = 1;
    goto LABEL_17;
  }
  BOOL v22 = *(unsigned char *)(a7 + 40) != 0;
LABEL_17:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v26);
  sub_21697C414(&v25);
  return v22;
}

void sub_216ED2B98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

BOOL sub_216ED2BC0(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, char a4, void *a5)
{
  v17[19] = *(void ***)MEMORY[0x263EF8340];
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v12);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v13);
  if (a5[2] != a5[4] || a5[3] != a5[5])
  {
    sub_216E0E77C((uint64_t)a5, a2, (int *)v17);
    sub_21697DE94(&v12, (int *)v17);
    sub_21697DEEC(&v13, (int *)v17 + 1);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v17 + 1);
    sub_21697C414(v17);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  if (a4) {
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  uint64_t v7 = v14;
  uint64_t v8 = v15;
  if (v14 != v15)
  {
    v17[3] = 0;
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::ApplyOperations();
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v13);
  sub_21697C414(&v12);
  v17[0] = (void **)&v14;
  sub_216E18898(v17);
  return v7 != v8;
}

void sub_216ED3100(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  sub_216E183E4((uint64_t)&a38);
  sub_2169CBCC8((void **)(v50 - 248));
  sub_21697B754(&a48);
  *(void *)(v50 - 248) = &a50;
  sub_216E18898((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

BOOL sub_216ED31EC(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, char a4, void *a5)
{
  v17[19] = *(void ***)MEMORY[0x263EF8340];
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v12);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v13);
  if (a5[2] != a5[4] || a5[3] != a5[5])
  {
    sub_216E0E77C((uint64_t)a5, a2, (int *)v17);
    sub_21697DE94(&v12, (int *)v17);
    sub_21697DEEC(&v13, (int *)v17 + 1);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v17 + 1);
    sub_21697C414(v17);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  if (a4) {
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  uint64_t v7 = v14;
  uint64_t v8 = v15;
  if (v14 != v15)
  {
    v17[3] = 0;
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::ApplyOperations();
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v13);
  sub_21697C414(&v12);
  v17[0] = (void **)&v14;
  sub_216E0CAB4(v17);
  return v7 != v8;
}

void sub_216ED372C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  sub_216E18930((uint64_t)&a38);
  sub_2169E0B70((void **)(v50 - 248));
  sub_21697B754(&a48);
  *(void *)(v50 - 248) = &a50;
  sub_216E0CAB4((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216ED3818(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, int a4, uint64_t a5)
{
  uint64_t v36 = *MEMORY[0x263EF8340];
  uint64_t v10 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B924D0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B924D0))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B924C8, &dword_216758000);
    __cxa_guard_release(&qword_267B924D0);
  }
  if (*(int *)a1 < 2) {
    uint64_t v11 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B924C8;
  }
  else {
    uint64_t v11 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v10);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v21, PrimIndex, 1);
  if (!sub_216ED4FF8((uint64_t)v10, v11, a2, a3, a4, (uint64_t)v21, a5)) {
    return 0;
  }
  uint64_t v13 = *(void *)(*(void *)a5 + 16);
  if (sub_21677EC50(v13, (uint64_t)&stru_26C755180))
  {
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v29);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v30);
    if (v22 != v24 || v23 != v25)
    {
      sub_216E0E77C((uint64_t)v21, v11, (int *)&v34);
      sub_21697DE94(&v29, (int *)&v34);
      sub_21697DEEC(&v30, (int *)&v34 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v34 + 1);
      sub_21697C414(&v34);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    if (a4) {
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    BOOL v15 = v31 != v32;
    if (v31 != v32)
    {
      int v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      uint64_t v35 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::ApplyOperations();
    }
LABEL_56:
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v30);
    sub_21697C414(&v29);
    uint64_t v34 = (void **)&v31;
    sub_216E16FC0(&v34);
    return v15;
  }
  if (sub_21677EC50(v13, (uint64_t)&stru_26C755190))
  {
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v29);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v30);
    if (v22 != v24 || v23 != v25)
    {
      sub_216E0E77C((uint64_t)v21, v11, (int *)&v34);
      sub_21697DE94(&v29, (int *)&v34);
      sub_21697DEEC(&v30, (int *)&v34 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v34 + 1);
      sub_21697C414(&v34);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    if (a4) {
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    BOOL v15 = v31 != v32;
    if (v31 != v32)
    {
      int v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      uint64_t v35 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::ApplyOperations();
    }
    goto LABEL_56;
  }
  if (sub_21677EC50(v13, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v29);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v30);
    if (v22 != v24 || v23 != v25)
    {
      sub_216E0E77C((uint64_t)v21, v11, (int *)&v34);
      sub_21697DE94(&v29, (int *)&v34);
      sub_21697DEEC(&v30, (int *)&v34 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v34 + 1);
      sub_21697C414(&v34);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    if (a4) {
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    BOOL v15 = v31 != v32;
    if (v31 != v32)
    {
      int v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      uint64_t v35 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::ApplyOperations();
    }
    goto LABEL_56;
  }
  if (sub_21677EC50(v13, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v29);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v30);
    if (v22 != v24 || v23 != v25)
    {
      sub_216E0E77C((uint64_t)v21, v11, (int *)&v34);
      sub_21697DE94(&v29, (int *)&v34);
      sub_21697DEEC(&v30, (int *)&v34 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v34 + 1);
      sub_21697C414(&v34);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    if (a4) {
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    BOOL v15 = v31 != v32;
    if (v31 != v32)
    {
      int v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      uint64_t v35 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::ApplyOperations();
    }
    goto LABEL_56;
  }
  if (sub_21677EC50(v13, (uint64_t)&stru_26C7551C0)) {
    return sub_216ED5198((uint64_t)v10, v11, (uint64_t)a2, a4, v21);
  }
  if (!sub_21677EC50(v13, (uint64_t)&stru_26C7551D0)) {
    return 1;
  }
  return sub_216ED57C4((uint64_t)v10, v11, (uint64_t)a2, a4, v21);
}

void sub_216ED4C70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

BOOL sub_216ED4FF8(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, int a5, uint64_t a6, uint64_t a7)
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v25);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v26);
  char v14 = 0;
  for (BOOL i = 1;
        ;
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a6))
  {
    uint64_t v16 = *(void *)(a6 + 16);
    uint64_t v17 = *(void *)(a6 + 24);
    if (v16 == *(void *)(a6 + 32) && v17 == *(void *)(a6 + 40)) {
      break;
    }
    if (i)
    {
      sub_216E0E77C(a6, a2, (int *)v24);
      sub_21697DE94(&v25, (int *)v24);
      sub_21697DEEC(&v26, (int *)v24 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v24 + 1);
      sub_21697C414(v24);
      uint64_t v16 = *(void *)(a6 + 16);
      uint64_t v17 = *(void *)(a6 + 24);
    }
    v24[0] = v16;
    v24[1] = v17;
    char v19 = sub_216ED2058((uint64_t *)a7, (pxrInternal__aapl__pxrReserved__::PcpNodeRef *)v24, *(uint64_t **)(a6 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v25, a3, a4);
    if (*(unsigned char *)(a7 + 40)) {
      goto LABEL_15;
    }
    v14 |= v19;
  }
  if (a5)
  {
    uint64_t v20 = *(atomic_ullong **)(a1 + 24);
    uint64_t explicit = atomic_load_explicit(v20 + 7, memory_order_acquire);
    if (!explicit) {
      uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v20);
    }
    sub_216ED1B98((unsigned char *)a7, explicit, a2, a3, a4);
  }
  if (v14)
  {
LABEL_15:
    BOOL v22 = 1;
    goto LABEL_17;
  }
  BOOL v22 = *(unsigned char *)(a7 + 40) != 0;
LABEL_17:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v26);
  sub_21697C414(&v25);
  return v22;
}

void sub_216ED5170(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

BOOL sub_216ED5198(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, char a4, void *a5)
{
  v17[19] = *(void ***)MEMORY[0x263EF8340];
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v12);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v13);
  if (a5[2] != a5[4] || a5[3] != a5[5])
  {
    sub_216E0E77C((uint64_t)a5, a2, (int *)v17);
    sub_21697DE94(&v12, (int *)v17);
    sub_21697DEEC(&v13, (int *)v17 + 1);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v17 + 1);
    sub_21697C414(v17);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  if (a4) {
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  uint64_t v7 = v14;
  uint64_t v8 = v15;
  if (v14 != v15)
  {
    v17[3] = 0;
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::ApplyOperations();
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v13);
  sub_21697C414(&v12);
  v17[0] = (void **)&v14;
  sub_216E18898(v17);
  return v7 != v8;
}

void sub_216ED56D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  sub_216E183E4((uint64_t)&a38);
  sub_2169CBCC8((void **)(v50 - 248));
  sub_21697B754(&a48);
  *(void *)(v50 - 248) = &a50;
  sub_216E18898((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

BOOL sub_216ED57C4(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, char a4, void *a5)
{
  v17[19] = *(void ***)MEMORY[0x263EF8340];
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v12);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v13);
  if (a5[2] != a5[4] || a5[3] != a5[5])
  {
    sub_216E0E77C((uint64_t)a5, a2, (int *)v17);
    sub_21697DE94(&v12, (int *)v17);
    sub_21697DEEC(&v13, (int *)v17 + 1);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v17 + 1);
    sub_21697C414(v17);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  if (a4) {
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  uint64_t v7 = v14;
  uint64_t v8 = v15;
  if (v14 != v15)
  {
    v17[3] = 0;
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::ApplyOperations();
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v13);
  sub_21697C414(&v12);
  v17[0] = (void **)&v14;
  sub_216E0CAB4(v17);
  return v7 != v8;
}

void sub_216ED5D04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  sub_216E18930((uint64_t)&a38);
  sub_2169E0B70((void **)(v50 - 248));
  sub_21697B754(&a48);
  *(void *)(v50 - 248) = &a50;
  sub_216E0CAB4((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216ED5DF0(uint64_t a1, void *a2)
{
  return 1;
}

uint64_t sub_216ED5E18(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result = sub_216995B54(a2);
  if (result)
  {
    uint64_t v6 = *((void *)a2 + 1);
    if ((v6 & 4) != 0) {
      uint64_t v7 = (void *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v6 & 0xFFFFFFFFFFFFFFF8)
    }
                                                                                            + 168))(a2);
    else {
      uint64_t v7 = *(void **)a2;
    }
    uint64_t v8 = *(void **)(a1 + 8);
    if (v7[2] == v8[2])
    {
      uint64_t v11 = (double *)*v7;
      uint64_t v9 = (double *)(v7 + 1);
      uint64_t v10 = v11;
      if (v11 == v9) {
        return 1;
      }
      int v12 = (void *)*v8;
      while (v10[4] == *((double *)v12 + 4))
      {
        uint64_t result = pxrInternal__aapl__pxrReserved__::SdfUnregisteredValue::operator==((pxrInternal__aapl__pxrReserved__::VtValue *)(v10 + 5), (std::type_info *)(v12 + 5), v5);
        if (!result) {
          return result;
        }
        int v13 = (double *)*((void *)v10 + 1);
        uint64_t v14 = v10;
        if (v13)
        {
          do
          {
            uint64_t v10 = v13;
            int v13 = *(double **)v13;
          }
          while (v13);
        }
        else
        {
          do
          {
            uint64_t v10 = (double *)*((void *)v14 + 2);
            BOOL v15 = *(void *)v10 == (void)v14;
            uint64_t v14 = v10;
          }
          while (!v15);
        }
        uint64_t v16 = (void *)v12[1];
        if (v16)
        {
          do
          {
            uint64_t v17 = v16;
            uint64_t v16 = (void *)*v16;
          }
          while (v16);
        }
        else
        {
          do
          {
            uint64_t v17 = (void *)v12[2];
            BOOL v15 = *v17 == (void)v12;
            int v12 = v17;
          }
          while (!v15);
        }
        int v12 = v17;
        if (v10 == v9) {
          return 1;
        }
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_216ED5F2C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, int a4, unsigned char *a5)
{
  uint64_t v36 = *MEMORY[0x263EF8340];
  uint64_t v10 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B924E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B924E0))
  {
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &unk_267B924D8, &dword_216758000);
    __cxa_guard_release(&qword_267B924E0);
  }
  if (*(int *)a1 < 2) {
    uint64_t v11 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_267B924D8;
  }
  else {
    uint64_t v11 = sub_216D563F8((_DWORD *)a1);
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v10);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v21, PrimIndex, 1);
  if (!sub_216ED7B10((uint64_t *)v10, v11, a2, a3, a4, (uint64_t)v21, a5)) {
    return 0;
  }
  uint64_t v13 = *(void *)(*(void *)a5 + 16);
  if (sub_21677EC50(v13, (uint64_t)&stru_26C755180))
  {
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v29);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v30);
    if (v22 != v24 || v23 != v25)
    {
      sub_216E0E77C((uint64_t)v21, v11, (int *)&v34);
      sub_21697DE94(&v29, (int *)&v34);
      sub_21697DEEC(&v30, (int *)&v34 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v34 + 1);
      sub_21697C414(&v34);
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    if (a4) {
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp();
    }
    BOOL v15 = v31 != v32;
    if (v31 != v32)
    {
      int v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      uint64_t v35 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::ApplyOperations();
    }
LABEL_56:
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v30);
    sub_21697C414(&v29);
    uint64_t v34 = (void **)&v31;
    sub_216E16FC0(&v34);
    return v15;
  }
  if (sub_21677EC50(v13, (uint64_t)&stru_26C755190))
  {
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v29);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v30);
    if (v22 != v24 || v23 != v25)
    {
      sub_216E0E77C((uint64_t)v21, v11, (int *)&v34);
      sub_21697DE94(&v29, (int *)&v34);
      sub_21697DEEC(&v30, (int *)&v34 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v34 + 1);
      sub_21697C414(&v34);
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    if (a4) {
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp();
    }
    BOOL v15 = v31 != v32;
    if (v31 != v32)
    {
      int v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      uint64_t v35 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::ApplyOperations();
    }
    goto LABEL_56;
  }
  if (sub_21677EC50(v13, (uint64_t)&stru_26C7551A0))
  {
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v29);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v30);
    if (v22 != v24 || v23 != v25)
    {
      sub_216E0E77C((uint64_t)v21, v11, (int *)&v34);
      sub_21697DE94(&v29, (int *)&v34);
      sub_21697DEEC(&v30, (int *)&v34 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v34 + 1);
      sub_21697C414(&v34);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    if (a4) {
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp();
    }
    BOOL v15 = v31 != v32;
    if (v31 != v32)
    {
      int v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      uint64_t v35 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::ApplyOperations();
    }
    goto LABEL_56;
  }
  if (sub_21677EC50(v13, (uint64_t)&stru_26C7551B0))
  {
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v29);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v30);
    if (v22 != v24 || v23 != v25)
    {
      sub_216E0E77C((uint64_t)v21, v11, (int *)&v34);
      sub_21697DE94(&v29, (int *)&v34);
      sub_21697DEEC(&v30, (int *)&v34 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v34 + 1);
      sub_21697C414(&v34);
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    if (a4) {
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp();
    }
    BOOL v15 = v31 != v32;
    if (v31 != v32)
    {
      int v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      uint64_t v35 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::ApplyOperations();
    }
    goto LABEL_56;
  }
  if (sub_21677EC50(v13, (uint64_t)&stru_26C7551C0)) {
    return sub_216ED7CB4((uint64_t)v10, v11, (uint64_t)a2, a4, v21);
  }
  if (!sub_21677EC50(v13, (uint64_t)&stru_26C7551D0)) {
    return 1;
  }
  return sub_216ED82E0((uint64_t)v10, v11, (uint64_t)a2, a4, v21);
}

void sub_216ED7384(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  sub_216E17D60((uint64_t)&a19);
  sub_2169DD2C4((void *)(v51 - 248));
  sub_21697B754(&a46);
  *(void *)(v51 - 248) = &a48;
  sub_216E16FC0((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

void sub_216ED770C(unsigned char *a1, uint64_t a2, void *a3, const pxrInternal__aapl__pxrReserved__::TfToken *a4, void *a5)
{
  pxrInternal__aapl__pxrReserved__::VtDictionary::VtDictionary((pxrInternal__aapl__pxrReserved__::VtDictionary *)&v11, *(const pxrInternal__aapl__pxrReserved__::VtDictionary **)(*(void *)a1 + 8));
  if (sub_216E156AC(a2, a3, a4, a5, *(uint64_t (****)(void, uint64_t))a1))
  {
    a1[40] = 1;
    uint64_t v10 = *(void *)a1;
    if (!strcmp((const char *)(0x8000000217473E6ALL & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(void *)(*(void *)(*(void *)a1 + 16) + 8) & 0x7FFFFFFFFFFFFFFFLL)))
    {
      pxrInternal__aapl__pxrReserved__::VtDictionaryOverRecursive((pxrInternal__aapl__pxrReserved__ *)&v11, *(const char ***)(v10 + 8), 0);
      pxrInternal__aapl__pxrReserved__::VtDictionary::swap(*(uint64_t **)(*(void *)a1 + 8), (pxrInternal__aapl__pxrReserved__::VtDictionary *)&v11);
    }
  }
  sub_2168EBBB8(&v11, 0);
}

void sub_216ED77E0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_2168EBBB8((void ***)va, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_216ED77F8(uint64_t a1, uint64_t a2, pxrInternal__aapl__pxrReserved__::PcpNodeRef *a3, uint64_t *a4, pxrInternal__aapl__pxrReserved__::SdfPath *a5, const pxrInternal__aapl__pxrReserved__::TfToken *a6, uint64_t *a7)
{
  pxrInternal__aapl__pxrReserved__::VtDictionary::VtDictionary((pxrInternal__aapl__pxrReserved__::VtDictionary *)&v32, *(const pxrInternal__aapl__pxrReserved__::VtDictionary **)(*(void *)a1 + 8));
  uint64_t v14 = sub_216E15820((uint64_t (****)(void, uint64_t))a1, a4, a5, a6, a7);
  if (v14)
  {
    LayerStack = (uint64_t *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetLayerStack(a3);
    uint64_t v16 = (pxrInternal__aapl__pxrReserved__::PcpLayerStack *)sub_216BBBFA8(LayerStack);
    uint64_t Identifier = pxrInternal__aapl__pxrReserved__::PcpLayerStack::GetIdentifier(v16);
    sub_216ABBA60(&v34, a4);
    sub_216E229B8((uint64_t)v30, a3, &v34);
    long long v18 = v35;
    if (v35 && atomic_fetch_add_explicit(v35 + 2, 0xFFFFFFFF, memory_order_release) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)v18 + 8))(v18);
    }
    char v19 = *(uint64_t (****)(void, uint64_t))a1;
    uint64_t v20 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *)*a4;
    uint64_t v25 = a2;
    int v26 = v20;
    sub_2168BD80C((uint64_t *)&v26);
    sub_216981010(&v27, a5);
    sub_21698105C(&v28, (_DWORD *)a5 + 1);
    long long v29 = *(_OWORD *)a3;
    char v21 = *(unsigned char *)(a1 + 41);
    int v22 = strcmp((const char *)(0x8000000217473E6ALL & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)v19[2][1] & 0x7FFFFFFFFFFFFFFFLL));
    if (!v22)
    {
      uint64_t v33 = 0;
      pxrInternal__aapl__pxrReserved__::VtDictionary::swap((uint64_t *)v19[1], (pxrInternal__aapl__pxrReserved__::VtDictionary *)&v33);
      uint64_t v40 = v30;
      char v39 = v21;
      uint64_t v34 = Identifier + 32;
      uint64_t v35 = (atomic_uint *)&v25;
      uint64_t v36 = &v39;
      uint64_t v37 = &v40;
      uint64_t v38 = a1 + 8;
      sub_216E22B44((pxrInternal__aapl__pxrReserved__::VtDictionary *)&v33, (uint64_t)&v34);
      pxrInternal__aapl__pxrReserved__::VtDictionary::swap((uint64_t *)v19[1], (pxrInternal__aapl__pxrReserved__::VtDictionary *)&v33);
      sub_2168EBBB8(&v33, 0);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v28);
    sub_21697C414(&v27);
    sub_216ABB798(&v26);
    if (!v22)
    {
      pxrInternal__aapl__pxrReserved__::VtDictionaryOverRecursive((pxrInternal__aapl__pxrReserved__ *)&v32, *(const char ***)(*(void *)a1 + 8), 0);
      pxrInternal__aapl__pxrReserved__::VtDictionary::swap(*(uint64_t **)(*(void *)a1 + 8), (pxrInternal__aapl__pxrReserved__::VtDictionary *)&v32);
    }
    uint64_t v23 = v31;
    if (v31 && atomic_fetch_add_explicit((atomic_uint *volatile)(v31 + 8), 0xFFFFFFFF, memory_order_release) == 1) {
      (*(void (**)(uint64_t))(*(void *)v23 + 8))(v23);
    }
  }
  sub_2168EBBB8(&v32, 0);
  return v14;
}

void sub_216ED7A60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, atomic_uint *a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  if (a10)
  {
    if (atomic_fetch_add_explicit(a10 + 2, 0xFFFFFFFF, memory_order_release) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a10 + 8))(a10);
    }
  }
  sub_2168EBBB8((void ***)va, 0);
  _Unwind_Resume(a1);
}

BOOL sub_216ED7B10(uint64_t *a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, int a5, uint64_t a6, unsigned char *a7)
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v26);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v27);
  char v14 = 0;
  for (BOOL i = 1;
        ;
        BOOL i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a6))
  {
    uint64_t v16 = *(void *)(a6 + 16);
    uint64_t v17 = *(void *)(a6 + 24);
    if (v16 == *(void *)(a6 + 32) && v17 == *(void *)(a6 + 40)) {
      break;
    }
    if (i)
    {
      sub_216E0E77C(a6, a2, (int *)v25);
      sub_21697DE94(&v26, (int *)v25);
      sub_21697DEEC(&v27, (int *)v25 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v25 + 1);
      sub_21697C414(v25);
      uint64_t v16 = *(void *)(a6 + 16);
      uint64_t v17 = *(void *)(a6 + 24);
    }
    uint64_t v19 = *a1;
    v25[0] = v16;
    v25[1] = v17;
    char v20 = sub_216ED77F8((uint64_t)a7, v19, (pxrInternal__aapl__pxrReserved__::PcpNodeRef *)v25, *(uint64_t **)(a6 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v26, a3, a4);
    if (a7[40]) {
      goto LABEL_15;
    }
    v14 |= v20;
  }
  if (a5)
  {
    char v21 = (atomic_ullong *)a1[3];
    uint64_t explicit = atomic_load_explicit(v21 + 7, memory_order_acquire);
    if (!explicit) {
      uint64_t explicit = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v21);
    }
    sub_216ED770C(a7, explicit, a2, a3, a4);
  }
  if (v14)
  {
LABEL_15:
    BOOL v23 = 1;
    goto LABEL_17;
  }
  BOOL v23 = a7[40] != 0;
LABEL_17:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v27);
  sub_21697C414(&v26);
  return v23;
}

void sub_216ED7C8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

BOOL sub_216ED7CB4(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, char a4, void *a5)
{
  v17[19] = *(void ***)MEMORY[0x263EF8340];
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v12);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v13);
  if (a5[2] != a5[4] || a5[3] != a5[5])
  {
    sub_216E0E77C((uint64_t)a5, a2, (int *)v17);
    sub_21697DE94(&v12, (int *)v17);
    sub_21697DEEC(&v13, (int *)v17 + 1);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v17 + 1);
    sub_21697C414(v17);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  if (a4) {
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp();
  }
  uint64_t v7 = v14;
  uint64_t v8 = v15;
  if (v14 != v15)
  {
    v17[3] = 0;
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::ApplyOperations();
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v13);
  sub_21697C414(&v12);
  v17[0] = (void **)&v14;
  sub_216E18898(v17);
  return v7 != v8;
}

void sub_216ED81F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  sub_216E183E4((uint64_t)&a38);
  sub_2169CBCC8((void **)(v50 - 248));
  sub_21697B754(&a48);
  *(void *)(v50 - 248) = &a50;
  sub_216E18898((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

BOOL sub_216ED82E0(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, char a4, void *a5)
{
  v17[19] = *(void ***)MEMORY[0x263EF8340];
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v12);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v13);
  if (a5[2] != a5[4] || a5[3] != a5[5])
  {
    sub_216E0E77C((uint64_t)a5, a2, (int *)v17);
    sub_21697DE94(&v12, (int *)v17);
    sub_21697DEEC(&v13, (int *)v17 + 1);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v17 + 1);
    sub_21697C414(v17);
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  if (a4) {
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp();
  }
  uint64_t v7 = v14;
  uint64_t v8 = v15;
  if (v14 != v15)
  {
    v17[3] = 0;
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::ApplyOperations();
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v13);
  sub_21697C414(&v12);
  v17[0] = (void **)&v14;
  sub_216E0CAB4(v17);
  return v7 != v8;
}

void sub_216ED8820(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  sub_216E18930((uint64_t)&a38);
  sub_2169E0B70((void **)(v50 - 248));
  sub_21697B754(&a48);
  *(void *)(v50 - 248) = &a50;
  sub_216E0CAB4((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_216ED890C(uint64_t a1, uint64_t a2)
{
  return 1;
}

uint64_t sub_216ED8934(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result = sub_2168EC434(a2);
  if (result)
  {
    uint64_t v6 = *((void *)a2 + 1);
    if ((v6 & 4) != 0) {
      uint64_t v7 = (void **)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v6 & 0xFFFFFFFFFFFFFFF8)
    }
                                                                                             + 168))(a2);
    else {
      uint64_t v7 = *(void ***)a2;
    }
    uint64_t v8 = *(uint64_t **)(a1 + 8);
    return pxrInternal__aapl__pxrReserved__::operator==(v7, v8, v5);
  }
  return result;
}

uint64_t sub_216ED89A4(uint64_t a1)
{
  return *(void *)a1;
}

void pxrInternal__aapl__pxrReserved__::UsdStageCacheRequest::_DataDeleter::operator()(int a1, void **__p)
{
  if (__p)
  {
    uint64_t v3 = *__p;
    if (*__p)
    {
      __p[1] = v3;
      operator delete(v3);
    }
    operator delete(__p);
  }
}

pxrInternal__aapl__pxrReserved__::UsdStageCache *pxrInternal__aapl__pxrReserved__::UsdStageCache::UsdStageCache(pxrInternal__aapl__pxrReserved__::UsdStageCache *this)
{
  uint64_t v2 = operator new(0xA8uLL);
  *uint64_t v2 = 0u;
  v2[1] = 0u;
  *((_DWORD *)v2 + 8) = 1065353216;
  *(_OWORD *)((char *)v2 + 4sub_2168EBBB8(&a9, 0) = 0u;
  *(_OWORD *)((char *)v2 + 56) = 0u;
  *((_DWORD *)v2 + 18) = 1065353216;
  v2[5] = 0u;
  v2[6] = 0u;
  *((_DWORD *)v2 + 28) = 1065353216;
  *(_OWORD *)((char *)v2 + 12sub_2168EBBB8(&a9, 0) = 0u;
  *(_OWORD *)((char *)v2 + 136) = 0u;
  *(_OWORD *)((char *)v2 + 152) = 0u;
  *(void *)this = v2;
  *((void *)this + 1) = 850045863;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((void *)this + 8) = 0;
  return this;
}

{
  _OWORD *v2;

  uint64_t v2 = operator new(0xA8uLL);
  *uint64_t v2 = 0u;
  v2[1] = 0u;
  *((_DWORD *)v2 + 8) = 1065353216;
  *(_OWORD *)((char *)v2 + 4sub_2168EBBB8(&a9, 0) = 0u;
  *(_OWORD *)((char *)v2 + 56) = 0u;
  *((_DWORD *)v2 + 18) = 1065353216;
  v2[5] = 0u;
  v2[6] = 0u;
  *((_DWORD *)v2 + 28) = 1065353216;
  *(_OWORD *)((char *)v2 + 12sub_2168EBBB8(&a9, 0) = 0u;
  *(_OWORD *)((char *)v2 + 136) = 0u;
  *(_OWORD *)((char *)v2 + 152) = 0u;
  *(void *)this = v2;
  *((void *)this + 1) = 850045863;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((void *)this + 8) = 0;
  return this;
}

pxrInternal__aapl__pxrReserved__::UsdStageCache *pxrInternal__aapl__pxrReserved__::UsdStageCache::UsdStageCache(pxrInternal__aapl__pxrReserved__::UsdStageCache *this, const pxrInternal__aapl__pxrReserved__::UsdStageCache *a2)
{
  *(void *)this = 0;
  *((void *)this + 1) = 850045863;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((void *)this + 8) = 0;
  uint64_t v4 = (std::mutex *)((char *)a2 + 8);
  std::mutex::lock((std::mutex *)((char *)a2 + 8));
  uint64_t v5 = operator new(0xA8uLL);
  sub_216EDC334(v5, *(void *)a2);
  uint64_t v6 = *(void *)this;
  *(void *)this = v5;
  if (v6) {
    sub_216EDE3E0((uint64_t)this, v6);
  }
  std::mutex::unlock(v4);
  return this;
}

void sub_216ED8B84(_Unwind_Exception *a1)
{
  operator delete(v4);
  std::mutex::unlock(v3);
  std::mutex::~mutex(v2);
  uint64_t v6 = *v1;
  *uint64_t v1 = 0;
  if (v6) {
    sub_216EDE3E0((uint64_t)v1, v6);
  }
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStageCache::~UsdStageCache(pxrInternal__aapl__pxrReserved__::UsdStageCache *this)
{
  std::mutex::~mutex((std::mutex *)((char *)this + 8));
  uint64_t v2 = *(void *)this;
  *(void *)this = 0;
  if (v2) {
    sub_216EDE3E0((uint64_t)this, v2);
  }
}

void pxrInternal__aapl__pxrReserved__::UsdStageCache::swap(pxrInternal__aapl__pxrReserved__::UsdStageCache *this, pxrInternal__aapl__pxrReserved__::UsdStageCache *a2)
{
  if (this != a2)
  {
    uint64_t v4 = (std::mutex *)((char *)this + 8);
    std::mutex::lock((std::mutex *)((char *)this + 8));
    std::mutex::lock((std::mutex *)((char *)a2 + 8));
    uint64_t v5 = *(void *)this;
    *(void *)this = *(void *)a2;
    *(void *)a2 = v5;
    std::mutex::unlock((std::mutex *)((char *)a2 + 8));
    std::mutex::unlock(v4);
    if (sub_216C4B19C(11))
    {
      pxrInternal__aapl__pxrReserved__::UsdDescribe(this, v6);
      pxrInternal__aapl__pxrReserved__::UsdDescribe(a2, v7);
      if (v15 >= 0) {
        uint64_t v10 = &v14;
      }
      else {
        uint64_t v10 = v14;
      }
      if (v13 >= 0) {
        p_p = &__p;
      }
      else {
        p_p = __p;
      }
      pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"swapped %s with %s\n", v8, v9, v10, p_p);
      if (v13 < 0) {
        operator delete(__p);
      }
      if (v15 < 0) {
        operator delete(v14);
      }
    }
  }
}

void sub_216ED8D0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdDescribe(pxrInternal__aapl__pxrReserved__ *this, const pxrInternal__aapl__pxrReserved__::UsdStageCache *a2)
{
  pxrInternal__aapl__pxrReserved__::UsdStageCache::GetDebugName(this, (uint64_t)v19);
  if ((v20 & 0x80u) == 0) {
    unint64_t v5 = v20;
  }
  else {
    unint64_t v5 = (unint64_t)v19[1];
  }
  if (v5)
  {
    pxrInternal__aapl__pxrReserved__::UsdStageCache::GetDebugName(this, (uint64_t)v15);
    if (v16 >= 0) {
      uint64_t v8 = v15;
    }
    else {
      uint64_t v8 = (void *)v15[0];
    }
    pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"\"%s\"", v6, v7, v8);
  }
  else
  {
    pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%p", v3, v4, this);
  }
  if (v18 >= 0) {
    p_p = &__p;
  }
  else {
    p_p = __p;
  }
  uint64_t v10 = (std::mutex *)((char *)this + 8);
  std::mutex::lock((std::mutex *)((char *)this + 8));
  uint64_t v11 = *(void *)(*(void *)this + 24);
  std::mutex::unlock(v10);
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"stage cache %s (size=%zu)", v12, v13, p_p, v11);
  if (!v5)
  {
    if ((v18 & 0x80000000) == 0) {
      goto LABEL_21;
    }
    uint64_t v14 = __p;
    goto LABEL_20;
  }
  if (v18 < 0) {
    operator delete(__p);
  }
  if (v16 < 0)
  {
    uint64_t v14 = (void *)v15[0];
LABEL_20:
    operator delete(v14);
  }
LABEL_21:
  if ((char)v20 < 0) {
    operator delete(v19[0]);
  }
}

void sub_216ED8E84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a29 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStageCache::operator=(uint64_t a1, pxrInternal__aapl__pxrReserved__ *a2)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  if ((pxrInternal__aapl__pxrReserved__ *)a1 != a2)
  {
    if (sub_216C4B19C(11))
    {
      pxrInternal__aapl__pxrReserved__::UsdDescribe((pxrInternal__aapl__pxrReserved__ *)a1, v4);
      pxrInternal__aapl__pxrReserved__::UsdDescribe(a2, v5);
      uint64_t v8 = v14;
      if (v15 < 0) {
        uint64_t v8 = (void **)v14[0];
      }
      if (v13 >= 0) {
        p_p = &__p;
      }
      else {
        p_p = __p;
      }
      pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"assigning %s from %s\n", v6, v7, v8, p_p);
      if (v13 < 0) {
        operator delete(__p);
      }
      if (v15 < 0) {
        operator delete(v14[0]);
      }
    }
    pxrInternal__aapl__pxrReserved__::UsdStageCache::UsdStageCache((pxrInternal__aapl__pxrReserved__::UsdStageCache *)v14, a2);
    std::mutex::lock((std::mutex *)(a1 + 8));
    uint64_t v10 = *(void **)a1;
    *(void **)a1 = v14[0];
    v14[0] = v10;
    std::mutex::unlock((std::mutex *)(a1 + 8));
    pxrInternal__aapl__pxrReserved__::UsdStageCache::~UsdStageCache((pxrInternal__aapl__pxrReserved__::UsdStageCache *)v14);
  }
  return a1;
}

void sub_216ED9010(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdStageCache::GetAllStages(pxrInternal__aapl__pxrReserved__::UsdStageCache *this@<X0>, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter ***a2@<X8>)
{
  uint64_t v4 = (std::mutex *)((char *)this + 8);
  std::mutex::lock((std::mutex *)((char *)this + 8));
  uint64_t v5 = *(void *)this;
  sub_216EDE450(a2, *(void *)(v5 + 24));
  uint64_t v6 = *(uint64_t ***)(v5 + 56);
  if (v6)
  {
    uint64_t v7 = *a2;
    do
    {
      v9[0] = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *)v6[2];
      sub_2168BD80C((uint64_t *)v9);
      uint64_t v8 = *v7;
      *uint64_t v7 = v9[0];
      v9[0] = 0;
      sub_2168BD378((int)v7, v8);
      sub_216E10FB8(v9);
      uint64_t v6 = (uint64_t **)*v6;
      ++v7;
    }
    while (v6);
  }
  std::mutex::unlock(v4);
}

void sub_216ED90FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  std::mutex::unlock(v10);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStageCache::Size(pxrInternal__aapl__pxrReserved__::UsdStageCache *this)
{
  uint64_t v2 = (std::mutex *)((char *)this + 8);
  std::mutex::lock((std::mutex *)((char *)this + 8));
  uint64_t v3 = *(void *)(*(void *)this + 24);
  std::mutex::unlock(v2);
  return v3;
}

pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **pxrInternal__aapl__pxrReserved__::UsdStageCache::RequestStage@<X0>(uint64_t a1@<X0>, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a2@<X1>, uint64_t a3@<X8>)
{
  unsigned int v52 = 0;
  uint64_t v6 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)&v53;
  uint64_t v53 = 0;
  uint64_t v7 = (std::mutex *)(a1 + 8);
  std::mutex::lock((std::mutex *)(a1 + 8));
  uint64_t v8 = (void *)(*(void *)a1 + 56);
  while (1)
  {
    uint64_t v8 = (void *)*v8;
    if (!v8) {
      break;
    }
    if ((*(unsigned int (**)(pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *, void *))(*(void *)a2 + 16))(a2, v8 + 2))
    {
      *(void *)a3 = v8[2];
      sub_2168BD80C((uint64_t *)a3);
      *(unsigned char *)(a3 + 8) = 0;
      std::mutex::unlock(v7);
      return sub_216E10FB8(v6);
    }
  }
  uint64_t v9 = *(uint64_t **)(*(void *)a1 + 120);
  uint64_t v10 = *(uint64_t **)(*(void *)a1 + 128);
  while (v9 != v10)
  {
    uint64_t v11 = *v9;
    if ((*(unsigned int (**)(pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *, uint64_t))(*(void *)a2 + 24))(a2, *v9))
    {
      pxrInternal__aapl__pxrReserved__::UsdStageCacheRequest::_Subscribe(v11, &v52);
      break;
    }
    ++v9;
  }
  int v12 = atomic_load(&v52);
  if (v12 <= 0)
  {
    char v13 = *(void **)a1;
    uint64_t v14 = *(pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter ***)(*(void *)a1 + 128);
    unint64_t v15 = *(void *)(*(void *)a1 + 136);
    if ((unint64_t)v14 >= v15)
    {
      uint64_t v17 = v13[15];
      uint64_t v18 = ((uint64_t)v14 - v17) >> 3;
      if ((unint64_t)(v18 + 1) >> 61) {
        sub_21677CB10();
      }
      uint64_t v19 = v15 - v17;
      uint64_t v20 = v19 >> 2;
      if (v19 >> 2 <= (unint64_t)(v18 + 1)) {
        uint64_t v20 = v18 + 1;
      }
      if ((unint64_t)v19 >= 0x7FFFFFFFFFFFFFF8) {
        unint64_t v21 = 0x1FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v21 = v20;
      }
      if (v21) {
        int v22 = (char *)sub_21677CB28(*(void *)a1 + 136, v21);
      }
      else {
        int v22 = 0;
      }
      BOOL v23 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)&v22[8 * v18];
      uint64_t v24 = &v22[8 * v21];
      const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v23 = a2;
      uint64_t v16 = v23 + 1;
      int v26 = (char *)v13[15];
      uint64_t v25 = (char *)v13[16];
      if (v25 != v26)
      {
        do
        {
          int v27 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *)*((void *)v25 - 1);
          v25 -= 8;
          *--BOOL v23 = v27;
        }
        while (v25 != v26);
        uint64_t v25 = (char *)v13[15];
      }
      v13[15] = v23;
      v13[16] = v16;
      v13[17] = v24;
      if (v25) {
        operator delete(v25);
      }
    }
    else
    {
      *uint64_t v14 = a2;
      uint64_t v16 = v14 + 1;
    }
    v13[16] = v16;
  }
  std::mutex::unlock(v7);
  int v28 = atomic_load(&v52);
  if (v28 < 1)
  {
    uint64_t v47 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)&v53;
    pxrInternal__aapl__pxrReserved__::TfErrorMark::TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v51);
    (*(void (**)(pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **__return_ptr, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *))(*(void *)a2 + 32))(&v50, a2);
    if (v50) {
      goto LABEL_37;
    }
    unint64_t v29 = atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
    if (!v29) {
      pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_CreateInstance();
    }
    unint64_t v30 = v51;
    unint64_t v31 = atomic_load((unint64_t *)(v29 + 144));
    if (v30 >= v31
      || pxrInternal__aapl__pxrReserved__::TfErrorMark::_IsCleanImpl((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v51, (atomic_ullong *)v29))
    {
      v48[0] = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *)"usd/stageCache.cpp";
      v48[1] = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *)"RequestStage";
      v48[2] = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *)420;
      v48[3] = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *)"std::pair<UsdStageRefPtr, BOOL> pxrIn"
                                                                                   "ternal__aapl__pxrReserved__::UsdStage"
                                                                                   "Cache::RequestStage(UsdStageCacheRequest &&)";
      char v49 = 0;
      pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v48, 3, (pxrInternal__aapl__pxrReserved__ *)"UsdStageCacheRequest failed to manufacture a valid stage.", &v53);
    }
    if (v50) {
LABEL_37:
    }
      pxrInternal__aapl__pxrReserved__::UsdStageCache::Insert(a1, (uint64_t *)&v50);
    std::mutex::lock(v7);
    uint64_t v32 = (unsigned int ***)*((void *)a2 + 1);
    if (v32)
    {
      uint64_t v33 = *v32;
      uint64_t v34 = v32[1];
      if (*v32 != v34)
      {
        do
        {
          uint64_t v35 = *v33;
          uint64_t v37 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)(*v33 + 2);
          uint64_t v36 = *v37;
          void *v37 = v50;
          sub_2168BD80C((uint64_t *)&v50);
          sub_2168BD378((int)v37, v36);
          atomic_store(2u, v35);
          ++v33;
        }
        while (v33 != v34);
      }
    }
    uint64_t v38 = *(void *)a1;
    char v39 = *(void **)(*(void *)a1 + 120);
    uint64_t v40 = *(void **)(*(void *)a1 + 128);
    v48[0] = a2;
    long long v41 = sub_216859D70(v39, v40, v48);
    unint64_t v42 = v41;
    uint64_t v6 = v47;
    if (*(void *)(*(void *)a1 + 128) != (void)v41)
    {
      long long v43 = *(unsigned char **)(*(void *)a1 + 128);
      uint64_t v44 = *(unsigned char **)(v38 + 128);
      int64_t v45 = v44 - v43;
      if (v44 != v43) {
        memmove(v41, v43, v44 - v43);
      }
      *(void *)(v38 + 128) = (char *)v42 + v45;
    }
    std::mutex::unlock(v7);
    *(void *)a3 = v50;
    sub_2168BD80C((uint64_t *)a3);
    *(unsigned char *)(a3 + 8) = 1;
    sub_216E10FB8(&v50);
    pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v51);
  }
  else
  {
    sub_216ED96DC((uint64_t)&v52, (uint64_t *)v48);
    *(pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)a3 = v48[0];
    v48[0] = 0;
    *(unsigned char *)(a3 + 8) = 0;
    sub_216E10FB8(v48);
  }
  return sub_216E10FB8(v6);
}

void sub_216ED9554(_Unwind_Exception *a1, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va1, a7);
  va_start(va, a7);
  uint64_t v8 = va_arg(va1, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *);
  sub_216E10FB8((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)va);
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)va1);
  sub_216E10FB8(a2);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStageCacheRequest::_Subscribe(uint64_t a1, unsigned int *a2)
{
  uint64_t v3 = *(void ***)(a1 + 8);
  if (!v3)
  {
    uint64_t v3 = (void **)operator new(0x18uLL);
    v3[1] = 0;
    v3[2] = 0;
    *uint64_t v3 = 0;
    *(void *)(a1 + 8) = v3;
  }
  unint64_t v5 = (unint64_t)v3[2];
  uint64_t v6 = (unsigned int **)v3[1];
  if ((unint64_t)v6 >= v5)
  {
    uint64_t v8 = ((char *)v6 - (unsigned char *)*v3) >> 3;
    if ((unint64_t)(v8 + 1) >> 61) {
      sub_21677CB10();
    }
    uint64_t v9 = v5 - (void)*v3;
    uint64_t v10 = v9 >> 2;
    if (v9 >> 2 <= (unint64_t)(v8 + 1)) {
      uint64_t v10 = v8 + 1;
    }
    if ((unint64_t)v9 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v11 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v10;
    }
    if (v11) {
      int v12 = (char *)sub_21677CB28((uint64_t)(v3 + 2), v11);
    }
    else {
      int v12 = 0;
    }
    char v13 = (unsigned int **)&v12[8 * v8];
    uint64_t v14 = &v12[8 * v11];
    *char v13 = a2;
    uint64_t v7 = v13 + 1;
    uint64_t v16 = (char *)*v3;
    unint64_t v15 = (char *)v3[1];
    if (v15 != *v3)
    {
      do
      {
        uint64_t v17 = (unsigned int *)*((void *)v15 - 1);
        v15 -= 8;
        *--char v13 = v17;
      }
      while (v15 != v16);
      unint64_t v15 = (char *)*v3;
    }
    *uint64_t v3 = v13;
    v3[1] = v7;
    v3[2] = v14;
    if (v15) {
      operator delete(v15);
    }
  }
  else
  {
    const char *v6 = a2;
    uint64_t v7 = v6 + 1;
  }
  v3[1] = v7;
  atomic_store(1u, a2);
}

uint64_t sub_216ED96DC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  while (1)
  {
    unsigned int v4 = atomic_load((unsigned int *)a1);
    if (v4 != 1) {
      break;
    }
    sched_yield();
  }
  *a2 = *(void *)(a1 + 8);

  return sub_2168BD80C(a2);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStageCache::Insert(uint64_t a1, uint64_t *a2)
{
  if (*a2)
  {
    sub_216EDB10C((uint64_t)v13, a1, (uint64_t)"inserted");
    unsigned int v4 = (std::mutex *)(a1 + 8);
    std::mutex::lock((std::mutex *)(a1 + 8));
    uint64_t v5 = *(void *)a1;
    uint64_t v6 = sub_2168503EC((void *)(v5 + 40), a2);
    if (v6)
    {
      uint64_t v7 = v6[3];
    }
    else
    {
      uint64_t v21 = atomic_fetch_add(&qword_26798CEE0, 1uLL) + 1;
      sub_216EDD6CC(v5 + 40, a2, a2, &v21);
      if ((v8 & 1) == 0)
      {
        uint64_t v16 = "usd/stageCache.cpp";
        uint64_t v17 = "Insert";
        uint64_t v18 = 102;
        uint64_t v19 = "std::pair<Id, BOOL> pxrInternal__aapl__pxrReserved__::(anonymous namespace)::StageContainer::Insert(const "
              "UsdStageRefPtr &)";
        char v20 = 0;
        pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v16, "_byStage.emplace(stage, id).second", 0);
      }
      sub_216EDD9B8(v5, &v21, &v21, a2);
      if ((v9 & 1) == 0)
      {
        uint64_t v16 = "usd/stageCache.cpp";
        uint64_t v17 = "Insert";
        uint64_t v18 = 103;
        uint64_t v19 = "std::pair<Id, BOOL> pxrInternal__aapl__pxrReserved__::(anonymous namespace)::StageContainer::Insert(const "
              "UsdStageRefPtr &)";
        char v20 = 0;
        pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v16, "_byId.emplace(id, stage).second", 0);
      }
      uint64_t v10 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_216D57D70(a2);
      pxrInternal__aapl__pxrReserved__::UsdStage::GetRootLayer(v10, (uint64_t *)&v16);
      sub_216EDDCA4((void *)(v5 + 80), (uint64_t)&v16, a2);
      unint64_t v11 = v17;
      if (v17 && atomic_fetch_add_explicit((atomic_uint *volatile)v17 + 2, 0xFFFFFFFF, memory_order_release) == 1) {
        (*(void (**)(const char *))(*(void *)v11 + 8))(v11);
      }
      uint64_t v7 = v21;
      if (v15) {
        sub_216EDB15C((uint64_t)v13, a2, v21);
      }
    }
    std::mutex::unlock(v4);
    sub_216EDB2A4((uint64_t)v13);
  }
  else
  {
    v13[0] = "usd/stageCache.cpp";
    v13[1] = "Insert";
    double v13[2] = 649;
    v13[3] = "UsdStageCache::Id pxrInternal__aapl__pxrReserved__::UsdStageCache::Insert(const UsdStageRefPtr &)";
    char v14 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v13, 1, (pxrInternal__aapl__pxrReserved__ *)"Inserted null stage in cache");
    return -1;
  }
  return v7;
}

void sub_216ED994C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  if (a16) {
    sub_217324208(a16);
  }
  std::mutex::unlock(v16);
  sub_216EDB2A4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStageCache::Find(pxrInternal__aapl__pxrReserved__ *a1@<X0>, void *a2@<X1>, pxrInternal__aapl__pxrReserved__ **a3@<X8>)
{
  int v27 = a2;
  *a3 = 0;
  uint64_t v5 = (std::mutex *)((char *)a1 + 8);
  std::mutex::lock((std::mutex *)((char *)a1 + 8));
  uint64_t v6 = (void **)sub_216EDE554(*(void **)a1, &v27);
  if (v6)
  {
    v25[0] = v6[3];
    sub_2168BD80C((uint64_t *)v25);
    uint64_t v7 = (pxrInternal__aapl__pxrReserved__ *)v25[0];
  }
  else
  {
    uint64_t v7 = 0;
    v25[0] = 0;
  }
  char v8 = *a3;
  *a3 = v7;
  sub_2168BD80C((uint64_t *)v25);
  sub_2168BD378((int)a3, v8);
  sub_216E10FB8((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)v25);
  std::mutex::unlock(v5);
  if (sub_216C4B19C(11))
  {
    char v9 = *a3;
    if (*a3)
    {
      pxrInternal__aapl__pxrReserved__::UsdDescribe(a3, v23);
      if (v24 >= 0) {
        int v12 = v23;
      }
      else {
        int v12 = (void **)v23[0];
      }
      char v13 = v25;
      pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"found %s", v10, v11, v12);
      if (v26 < 0) {
        char v13 = (void **)v25[0];
      }
    }
    else
    {
      char v13 = (void **)"failed to find stage";
    }
    long long __p = v27;
    sub_216EDD528();
    pxrInternal__aapl__pxrReserved__::UsdDescribe(a1, v14);
    uint64_t v17 = &v21;
    if (v22 < 0) {
      uint64_t v17 = v21;
    }
    if (v20 >= 0) {
      p_p = &__p;
    }
    else {
      p_p = __p;
    }
    pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"%s for id=%s in %s\n", v15, v16, v13, v17, p_p);
    if (v20 < 0) {
      operator delete(__p);
    }
    if (v22 < 0) {
      operator delete(v21);
    }
    if (v9)
    {
      if (v26 < 0) {
        operator delete(v25[0]);
      }
      if (v24 < 0) {
        operator delete(v23[0]);
      }
    }
  }
}

void sub_216ED9B40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  if (a29 < 0) {
    operator delete(__p);
  }
  sub_216E10FB8(v35);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStageCache::FindOneMatching(pxrInternal__aapl__pxrReserved__ *a1@<X0>, uint64_t *a2@<X1>, pxrInternal__aapl__pxrReserved__ **a3@<X8>)
{
  *a3 = 0;
  uint64_t v6 = (std::mutex *)((char *)a1 + 8);
  std::mutex::lock((std::mutex *)((char *)a1 + 8));
  uint64_t v7 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)sub_216BC1328((void *)(*(void *)a1 + 80), (uint64_t)a2);
  if (v7)
  {
    v32[0] = v7[4];
    sub_2168BD80C((uint64_t *)v32);
    char v8 = v32[0];
  }
  else
  {
    char v8 = 0;
    v32[0] = 0;
  }
  char v9 = *a3;
  *a3 = v8;
  sub_2168BD80C((uint64_t *)v32);
  sub_2168BD378((int)a3, v9);
  sub_216E10FB8(v32);
  std::mutex::unlock(v6);
  if (!sub_216C4B19C(11)) {
    return;
  }
  uint64_t v10 = *a3;
  if (*a3)
  {
    pxrInternal__aapl__pxrReserved__::UsdDescribe(a3, v30);
    if (v31 >= 0) {
      char v13 = v30;
    }
    else {
      char v13 = (void **)v30[0];
    }
    char v14 = (const char *)v32;
    pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"found %s", v11, v12, v13);
    if (v33 < 0) {
      char v14 = (const char *)v32[0];
    }
    if (*a3)
    {
      int v16 = 0;
      uint64_t v17 = "";
      goto LABEL_21;
    }
  }
  else
  {
    char v14 = "failed to find stage";
  }
  uint64_t v18 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a2);
  uint64_t Identifier = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v18);
  if (*(char *)(Identifier + 23) >= 0) {
    uint64_t v22 = Identifier;
  }
  else {
    uint64_t v22 = *(void *)Identifier;
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)" @%s@", v20, v21, v22);
  if (v29 >= 0) {
    uint64_t v17 = (const char *)&v28;
  }
  else {
    uint64_t v17 = (const char *)v28;
  }
  int v16 = 1;
LABEL_21:
  pxrInternal__aapl__pxrReserved__::UsdDescribe(a1, v15);
  if (v27 >= 0) {
    p_p = &__p;
  }
  else {
    p_p = __p;
  }
  pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"%s by rootLayer%s in %s\n", v23, v24, v14, v17, p_p);
  if (v27 < 0)
  {
    operator delete(__p);
    if (!v16) {
      goto LABEL_30;
    }
LABEL_28:
    if (v29 < 0) {
      operator delete(v28);
    }
    goto LABEL_30;
  }
  if (v16) {
    goto LABEL_28;
  }
LABEL_30:
  if (v10)
  {
    if (v33 < 0) {
      operator delete(v32[0]);
    }
    if (v31 < 0) {
      operator delete(v30[0]);
    }
  }
}

void sub_216ED9DE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a30 < 0) {
    operator delete(__p);
  }
  sub_216E10FB8(v30);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStageCache::FindOneMatching(pxrInternal__aapl__pxrReserved__ *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, pxrInternal__aapl__pxrReserved__ **a4@<X8>)
{
  *a4 = 0;
  uint64_t v7 = (std::mutex *)((char *)a1 + 8);
  std::mutex::lock((std::mutex *)((char *)a1 + 8));
  char v8 = sub_216EDE624((void *)(*(void *)a1 + 80), (uint64_t)a2);
  uint64_t v10 = v9;
  if (v8 != v9)
  {
    while (1)
    {
      unint64_t v11 = v8 + 4;
      int v12 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_216D57D70(v8 + 4);
      pxrInternal__aapl__pxrReserved__::UsdStage::GetSessionLayer(v12, (uint64_t *)&v50);
      uint64_t v13 = sub_216851B24((uint64_t)&v50);
      uint64_t v14 = sub_216851B24((uint64_t)a3);
      uint64_t v15 = v51;
      if (v51 && atomic_fetch_add_explicit((atomic_uint *volatile)(v51 + 8), 0xFFFFFFFF, memory_order_release) == 1) {
        (*(void (**)(uint64_t))(*(void *)v15 + 8))(v15);
      }
      if (v13 == v14) {
        break;
      }
      char v8 = (void *)*v8;
      if (v8 == v10) {
        goto LABEL_9;
      }
    }
    int v16 = *a4;
    *a4 = (pxrInternal__aapl__pxrReserved__ *)*v11;
    sub_2168BD80C(v11);
    sub_2168BD378((int)a4, v16);
  }
LABEL_9:
  std::mutex::unlock(v7);
  if (sub_216C4B19C(11))
  {
    uint64_t v17 = *a4;
    if (*a4)
    {
      pxrInternal__aapl__pxrReserved__::UsdDescribe(a4, v48);
      if (v49 >= 0) {
        char v20 = v48;
      }
      else {
        char v20 = (void **)v48[0];
      }
      pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"found %s", v18, v19, v20);
      if (v52 >= 0) {
        uint64_t v22 = (const char *)&v50;
      }
      else {
        uint64_t v22 = v50;
      }
      if (*a4)
      {
        int v23 = 0;
        int v24 = 0;
        uint64_t v25 = "";
        char v26 = "";
        goto LABEL_36;
      }
    }
    else
    {
      uint64_t v22 = "failed to find stage";
    }
    char v27 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a2);
    uint64_t Identifier = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v27);
    if (*(char *)(Identifier + 23) >= 0) {
      uint64_t v31 = Identifier;
    }
    else {
      uint64_t v31 = *(void *)Identifier;
    }
    pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)" @%s@", v29, v30, v31);
    if (v47 >= 0) {
      uint64_t v25 = (const char *)&v46;
    }
    else {
      uint64_t v25 = (const char *)v46;
    }
    if (*a4)
    {
      int v24 = 0;
      char v26 = "";
    }
    else
    {
      uint64_t v32 = sub_21697CF14(a3);
      if (v21 & 1 | (unint64_t)v32)
      {
        char v33 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a3);
        uint64_t v34 = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v33);
        if (*(char *)(v34 + 23) >= 0) {
          uint64_t v37 = v34;
        }
        else {
          uint64_t v37 = *(void *)v34;
        }
        char v26 = (const char *)&v44;
        pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)" @%s@", v35, v36, v37);
        if (v45 < 0) {
          char v26 = (const char *)v44;
        }
        int v23 = 1;
        int v24 = 1;
LABEL_36:
        pxrInternal__aapl__pxrReserved__::UsdDescribe(a1, v21);
        if (v43 >= 0) {
          p_p = &__p;
        }
        else {
          p_p = __p;
        }
        pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"%s by rootLayer%s, sessionLayer%s in %s\n", v38, v39, v22, v25, v26, p_p);
        if (v43 < 0)
        {
          operator delete(__p);
          if (!v24) {
            goto LABEL_45;
          }
        }
        else if (!v24)
        {
LABEL_45:
          if (v23 && v47 < 0) {
            operator delete(v46);
          }
          if (v17)
          {
            if (v52 < 0) {
              operator delete(v50);
            }
            if (v49 < 0) {
              operator delete(v48[0]);
            }
          }
          return;
        }
        if (v45 < 0) {
          operator delete(v44);
        }
        goto LABEL_45;
      }
      int v24 = 0;
      char v26 = " <null>";
    }
    int v23 = 1;
    goto LABEL_36;
  }
}

{
  std::mutex *v8;
  void *v9;
  void *v10;
  void *v11;
  pxrInternal__aapl__pxrReserved__::UsdStage *v12;
  int v13;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v14;
  pxrInternal__aapl__pxrReserved__ *v15;
  const char *v16;
  char *v17;
  void **v18;
  void **v19;
  const pxrInternal__aapl__pxrReserved__::UsdStageCache *v20;
  int v21;
  const char *v22;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v23;
  uint64_t Identifier;
  const char *v25;
  char *v26;
  uint64_t v27;
  const char *v28;
  char *v29;
  void *p_p;
  void *__p;
  char v32;
  void *v33;
  char v34;
  void *v35[2];
  char v36;
  void *v37[2];
  char v38;

  *a4 = 0;
  char v8 = (std::mutex *)((char *)a1 + 8);
  std::mutex::lock((std::mutex *)((char *)a1 + 8));
  char v9 = sub_216EDE624((void *)(*(void *)a1 + 80), (uint64_t)a2);
  unint64_t v11 = v10;
  if (v9 != v10)
  {
    while (1)
    {
      int v12 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_216D57D70(v9 + 4);
      pxrInternal__aapl__pxrReserved__::UsdStage::GetPathResolverContext(v12, v37);
      uint64_t v13 = pxrInternal__aapl__pxrReserved__::ArResolverContext::operator==((uint64_t *)v37, a3);
      v35[0] = v37;
      sub_216787968((void ***)v35);
      if (v13) {
        break;
      }
      char v9 = (void *)*v9;
      if (v9 == v11) {
        goto LABEL_6;
      }
    }
    uint64_t v14 = *a4;
    *a4 = (pxrInternal__aapl__pxrReserved__ *)v9[4];
    sub_2168BD80C(v9 + 4);
    sub_2168BD378((int)a4, v14);
  }
LABEL_6:
  std::mutex::unlock(v8);
  if (sub_216C4B19C(11))
  {
    uint64_t v15 = *a4;
    if (*a4)
    {
      pxrInternal__aapl__pxrReserved__::UsdDescribe(a4, v35);
      if (v36 >= 0) {
        uint64_t v18 = v35;
      }
      else {
        uint64_t v18 = (void **)v35[0];
      }
      uint64_t v19 = v37;
      pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"found %s", v16, v17, v18);
      if (v38 < 0) {
        uint64_t v19 = (void **)v37[0];
      }
      if (*a4)
      {
        uint64_t v21 = 0;
        uint64_t v22 = "";
        goto LABEL_23;
      }
    }
    else
    {
      uint64_t v19 = (void **)"failed to find stage";
    }
    int v23 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a2);
    uint64_t Identifier = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v23);
    if (*(char *)(Identifier + 23) >= 0) {
      char v27 = Identifier;
    }
    else {
      char v27 = *(void *)Identifier;
    }
    pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)" @%s@", v25, v26, v27);
    if (v34 >= 0) {
      uint64_t v22 = (const char *)&v33;
    }
    else {
      uint64_t v22 = (const char *)v33;
    }
    uint64_t v21 = 1;
LABEL_23:
    pxrInternal__aapl__pxrReserved__::UsdDescribe(a1, v20);
    if (v32 >= 0) {
      p_p = &__p;
    }
    else {
      p_p = __p;
    }
    pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"%s by rootLayer%s, pathResolverContext in %s\n", v28, v29, v19, v22, p_p);
    if (v32 < 0)
    {
      operator delete(__p);
      if (!v21) {
        goto LABEL_32;
      }
    }
    else if (!v21)
    {
LABEL_32:
      if (v15)
      {
        if (v38 < 0) {
          operator delete(v37[0]);
        }
        if (v36 < 0) {
          operator delete(v35[0]);
        }
      }
      return;
    }
    if (v34 < 0) {
      operator delete(v33);
    }
    goto LABEL_32;
  }
}

void sub_216EDA1B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38)
{
  if (a32 < 0) {
    operator delete(__p);
  }
  if (v38)
  {
    if (*(char *)(v39 - 89) < 0) {
      operator delete(*(void **)(v39 - 112));
    }
    if (a38 < 0) {
      operator delete(a33);
    }
  }
  sub_216E10FB8(a14);
  _Unwind_Resume(a1);
}

void sub_216EDA4F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30,void *a31,uint64_t a32,int a33,__int16 a34,char a35,char a36)
{
  if (a30 < 0) {
    operator delete(__p);
  }
  sub_216E10FB8(v36);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStageCache::FindOneMatching(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, pxrInternal__aapl__pxrReserved__ **a5@<X8>)
{
  *a5 = 0;
  char v9 = (std::mutex *)(a1 + 8);
  std::mutex::lock((std::mutex *)(a1 + 8));
  char v43 = (pxrInternal__aapl__pxrReserved__ *)a1;
  uint64_t v10 = sub_216EDE624((void *)(*(void *)a1 + 80), (uint64_t)a2);
  int v12 = v11;
  if (v10 != v11)
  {
    while (1)
    {
      uint64_t v13 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_216D57D70(v10 + 4);
      pxrInternal__aapl__pxrReserved__::UsdStage::GetSessionLayer(v13, (uint64_t *)&v51);
      uint64_t v14 = sub_216851B24((uint64_t)&v51);
      if (v14 == sub_216851B24((uint64_t)a3))
      {
        int v16 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_216D57D70(v10 + 4);
        pxrInternal__aapl__pxrReserved__::UsdStage::GetPathResolverContext(v16, v54);
        int v15 = pxrInternal__aapl__pxrReserved__::ArResolverContext::operator==((uint64_t *)v54, a4);
        v49[0] = v54;
        sub_216787968((void ***)v49);
      }
      else
      {
        int v15 = 0;
      }
      uint64_t v17 = v52;
      if (v52 && atomic_fetch_add_explicit((atomic_uint *volatile)(v52 + 8), 0xFFFFFFFF, memory_order_release) == 1) {
        (*(void (**)(uint64_t))(*(void *)v17 + 8))(v17);
      }
      if (v15) {
        break;
      }
      uint64_t v10 = (void *)*v10;
      if (v10 == v12) {
        goto LABEL_12;
      }
    }
    uint64_t v18 = *a5;
    *a5 = (pxrInternal__aapl__pxrReserved__ *)v10[4];
    sub_2168BD80C(v10 + 4);
    sub_2168BD378((int)a5, v18);
  }
LABEL_12:
  std::mutex::unlock(v9);
  if (sub_216C4B19C(11))
  {
    uint64_t v19 = *a5;
    if (*a5)
    {
      pxrInternal__aapl__pxrReserved__::UsdDescribe(a5, &v51);
      if (v53 >= 0) {
        uint64_t v22 = &v51;
      }
      else {
        uint64_t v22 = v51;
      }
      pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"found %s", v20, v21, v22);
      if (v55 >= 0) {
        int v24 = (const char *)v54;
      }
      else {
        int v24 = (const char *)v54[0];
      }
      if (*a5)
      {
        int v25 = 0;
        int v26 = 0;
        char v27 = (void **)"";
        int v28 = "";
        goto LABEL_40;
      }
    }
    else
    {
      int v24 = "failed to find stage";
    }
    char v29 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a2);
    uint64_t Identifier = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v29);
    if (*(char *)(Identifier + 23) >= 0) {
      uint64_t v33 = Identifier;
    }
    else {
      uint64_t v33 = *(void *)Identifier;
    }
    pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)" @%s@", v31, v32, v33);
    if (v50 >= 0) {
      char v27 = v49;
    }
    else {
      char v27 = (void **)v49[0];
    }
    if (*a5)
    {
      int v26 = 0;
      int v28 = "";
    }
    else
    {
      uint64_t v34 = sub_21697CF14(a3);
      if (v23 & 1 | (unint64_t)v34)
      {
        uint64_t v35 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(a3);
        uint64_t v36 = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v35);
        if (*(char *)(v36 + 23) >= 0) {
          uint64_t v39 = v36;
        }
        else {
          uint64_t v39 = *(void *)v36;
        }
        pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)" @%s@", v37, v38, v39);
        if (v48 >= 0) {
          int v28 = (const char *)&v47;
        }
        else {
          int v28 = (const char *)v47;
        }
        int v25 = 1;
        int v26 = 1;
LABEL_40:
        pxrInternal__aapl__pxrReserved__::UsdDescribe(v43, v23);
        if (v46 >= 0) {
          p_p = &__p;
        }
        else {
          p_p = __p;
        }
        pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"%s by rootLayer%s, sessionLayer%s, pathResolverContext in %s\n", v40, v41, v24, v27, v28, p_p);
        if (v46 < 0)
        {
          operator delete(__p);
          if (!v26) {
            goto LABEL_49;
          }
        }
        else if (!v26)
        {
LABEL_49:
          if (v25 && v50 < 0) {
            operator delete(v49[0]);
          }
          if (v19)
          {
            if (v55 < 0) {
              operator delete(v54[0]);
            }
            if (v53 < 0) {
              operator delete(v51);
            }
          }
          return;
        }
        if (v48 < 0) {
          operator delete(v47);
        }
        goto LABEL_49;
      }
      int v26 = 0;
      int v28 = " <null>";
    }
    int v25 = 1;
    goto LABEL_40;
  }
}

void sub_216EDA910(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38)
{
  if (a32 < 0) {
    operator delete(__p);
  }
  if (v38)
  {
    if (*(char *)(v39 - 89) < 0) {
      operator delete(*(void **)(v39 - 112));
    }
    if (a38 < 0) {
      operator delete(a33);
    }
  }
  sub_216E10FB8(a14);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStageCache::FindAllMatching(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = (std::mutex *)(a1 + 8);
  std::mutex::lock((std::mutex *)(a1 + 8));
  uint64_t v7 = (void *)(*(void *)a1 + 80);
  a3[1] = 0;
  a3[2] = 0;
  *a3 = 0;
  char v8 = sub_216EDE624(v7, a2);
  uint64_t v10 = v9;
  while (v8 != v10)
  {
    sub_216EDAAF0(a3, v8 + 4);
    char v8 = (void *)*v8;
  }

  std::mutex::unlock(v6);
}

void sub_216EDAACC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216EDE4D0((void ***)va);
  std::mutex::unlock(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_216EDAAF0(uint64_t *a1, uint64_t *a2)
{
  unint64_t v6 = a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  unint64_t v5 = v6;
  uint64_t v7 = *(uint64_t **)(v4 - 8);
  if ((unint64_t)v7 >= v6)
  {
    uint64_t v10 = ((uint64_t)v7 - *a1) >> 3;
    if ((unint64_t)(v10 + 1) >> 61) {
      sub_21677CB10();
    }
    uint64_t v11 = v5 - *a1;
    uint64_t v12 = v11 >> 2;
    if (v11 >> 2 <= (unint64_t)(v10 + 1)) {
      uint64_t v12 = v10 + 1;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v13 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v13 = v12;
    }
    uint64_t v19 = v4;
    if (v13) {
      uint64_t v14 = (uint64_t *)sub_21677CB28(v4, v13);
    }
    else {
      uint64_t v14 = 0;
    }
    int v15 = v14;
    int v16 = &v14[v10];
    uint64_t v17 = v16;
    uint64_t v18 = &v14[v13];
    uint64_t *v16 = *a2;
    sub_2168BD80C(&v14[v10]);
    ++v17;
    sub_216EDE690(a1, &v15);
    char v9 = (uint64_t *)a1[1];
    uint64_t result = sub_216EDE7A0((uint64_t)&v15);
  }
  else
  {
    *uint64_t v7 = *a2;
    uint64_t result = sub_2168BD80C(v7);
    char v9 = v7 + 1;
    a1[1] = (uint64_t)(v7 + 1);
  }
  a1[1] = (uint64_t)v9;
  return result;
}

void sub_216EDABEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  *(void *)(v10 + 8) = v11;
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdStageCache::FindAllMatching(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  char v8 = (std::mutex *)(a1 + 8);
  std::mutex::lock((std::mutex *)(a1 + 8));
  char v9 = (void *)(*(void *)a1 + 80);
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  uint64_t v10 = sub_216EDE624(v9, a2);
  for (i = v11; v10 != i; uint64_t v10 = (void *)*v10)
  {
    unint64_t v13 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_216D57D70(v10 + 4);
    pxrInternal__aapl__pxrReserved__::UsdStage::GetSessionLayer(v13, &v17);
    uint64_t v14 = sub_216851B24((uint64_t)&v17);
    uint64_t v15 = sub_216851B24(a3);
    uint64_t v16 = v18;
    if (v18 && atomic_fetch_add_explicit((atomic_uint *volatile)(v18 + 8), 0xFFFFFFFF, memory_order_release) == 1) {
      (*(void (**)(uint64_t))(*(void *)v16 + 8))(v16);
    }
    if (v14 == v15) {
      sub_216EDAAF0(a4, v10 + 4);
    }
  }
  std::mutex::unlock(v8);
}

void sub_216EDAD28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  sub_216EDE4D0(&a9);
  std::mutex::unlock(v9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStageCache::FindAllMatching(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X8>)
{
  char v8 = (std::mutex *)(a1 + 8);
  std::mutex::lock((std::mutex *)(a1 + 8));
  char v9 = (void *)(*(void *)a1 + 80);
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  uint64_t v10 = sub_216EDE624(v9, a2);
  for (i = v11; v10 != i; uint64_t v10 = (void *)*v10)
  {
    unint64_t v13 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_216D57D70(v10 + 4);
    pxrInternal__aapl__pxrReserved__::UsdStage::GetPathResolverContext(v13, v15);
    int v14 = pxrInternal__aapl__pxrReserved__::ArResolverContext::operator==(v15, a3);
    uint64_t v16 = (void **)v15;
    sub_216787968(&v16);
    if (v14) {
      sub_216EDAAF0(a4, v10 + 4);
    }
  }
  std::mutex::unlock(v8);
}

void sub_216EDAE70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  sub_216EDE4D0(&a9);
  std::mutex::unlock(v9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStageCache::FindAllMatching(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v10 = (std::mutex *)(a1 + 8);
  std::mutex::lock((std::mutex *)(a1 + 8));
  uint64_t v11 = (void *)(*(void *)a1 + 80);
  a5[1] = 0;
  a5[2] = 0;
  *a5 = 0;
  uint64_t v12 = sub_216EDE624(v11, a2);
  for (i = v13; v12 != i; uint64_t v12 = (void *)*v12)
  {
    uint64_t v15 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_216D57D70(v12 + 4);
    pxrInternal__aapl__pxrReserved__::UsdStage::GetSessionLayer(v15, &v21);
    uint64_t v16 = sub_216851B24((uint64_t)&v21);
    if (v16 == sub_216851B24(a3))
    {
      uint64_t v18 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_216D57D70(v12 + 4);
      pxrInternal__aapl__pxrReserved__::UsdStage::GetPathResolverContext(v18, v20);
      int v17 = pxrInternal__aapl__pxrReserved__::ArResolverContext::operator==(v20, a4);
      int v23 = (void **)v20;
      sub_216787968(&v23);
    }
    else
    {
      int v17 = 0;
    }
    uint64_t v19 = v22;
    if (v22 && atomic_fetch_add_explicit((atomic_uint *volatile)(v22 + 8), 0xFFFFFFFF, memory_order_release) == 1) {
      (*(void (**)(uint64_t))(*(void *)v19 + 8))(v19);
    }
    if (v17) {
      sub_216EDAAF0(a5, v12 + 4);
    }
  }
  std::mutex::unlock(v10);
}

void sub_216EDB008(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  sub_216EDE4D0(&a9);
  std::mutex::unlock(v9);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStageCache::GetId(uint64_t a1, void *a2)
{
  uint64_t v4 = (std::mutex *)(a1 + 8);
  std::mutex::lock((std::mutex *)(a1 + 8));
  unint64_t v5 = sub_216877FD4((void *)(*(void *)a1 + 40), a2);
  if (v5) {
    uint64_t v6 = v5[3];
  }
  else {
    uint64_t v6 = -1;
  }
  std::mutex::unlock(v4);
  return v6;
}

void sub_216EDB0F8(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_216EDB10C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = a2;
  *(void *)(a1 + 32) = a3;
  *(unsigned char *)(a1 + 4sub_2168EBBB8(&a9, 0) = sub_216C4B19C(11);
  return a1;
}

void sub_216EDB148(_Unwind_Exception *a1)
{
  sub_216EDD670(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_216EDB15C(uint64_t result, uint64_t *a2, uint64_t a3)
{
  if (*(unsigned char *)(result + 40))
  {
    unint64_t v5 = (uint64_t *)result;
    unint64_t v6 = *(void *)(result + 16);
    uint64_t v7 = *(uint64_t **)(result + 8);
    if ((unint64_t)v7 >= v6)
    {
      uint64_t v9 = ((uint64_t)v7 - *(void *)result) >> 4;
      if ((unint64_t)(v9 + 1) >> 60) {
        sub_21677CB10();
      }
      uint64_t v10 = v6 - *(void *)result;
      uint64_t v11 = v10 >> 3;
      if (v10 >> 3 <= (unint64_t)(v9 + 1)) {
        uint64_t v11 = v9 + 1;
      }
      if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFF0) {
        unint64_t v12 = 0xFFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v12 = v11;
      }
      uint64_t v18 = result + 16;
      if (v12)
      {
        if (v12 >> 60) {
          sub_21677CA1C();
        }
        unint64_t v13 = (char *)operator new(16 * v12);
      }
      else
      {
        unint64_t v13 = 0;
      }
      int v14 = (uint64_t *)&v13[16 * v9];
      v15[0] = v13;
      v15[1] = v14;
      uint64_t v16 = v14;
      int v17 = &v13[16 * v12];
      *int v14 = *a2;
      sub_2168BD80C(v14);
      v14[1] = a3;
      v16 += 2;
      sub_216EDDE08(v5, v15);
      char v8 = (uint64_t *)v5[1];
      uint64_t result = sub_216EDDEE4((uint64_t)v15);
    }
    else
    {
      *uint64_t v7 = *a2;
      uint64_t result = sub_2168BD80C(v7);
      v7[1] = a3;
      char v8 = v7 + 2;
      v5[1] = (uint64_t)(v7 + 2);
    }
    v5[1] = (uint64_t)v8;
  }
  return result;
}

void sub_216EDB284(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  *(void *)(v10 + 8) = v11;
  _Unwind_Resume(exception_object);
}

void **sub_216EDB2A4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40))
  {
    unint64_t v2 = *(void *)(a1 + 8) - *(void *)a1;
    if (v2 == 16)
    {
      if (sub_216C4B19C(11))
      {
        uint64_t v4 = v29;
        pxrInternal__aapl__pxrReserved__::UsdDescribe(*(pxrInternal__aapl__pxrReserved__ **)(a1 + 24), v3);
        if (v30 < 0) {
          uint64_t v4 = (void **)v29[0];
        }
        uint64_t v5 = *(void *)(a1 + 32);
        pxrInternal__aapl__pxrReserved__::UsdDescribe(*(pxrInternal__aapl__pxrReserved__ ***)a1, v27);
        int v6 = v28;
        uint64_t v7 = (void **)v27[0];
        uint64_t v31 = *(void *)(*(void *)a1 + 8);
        sub_216EDD528();
        uint64_t v10 = v27;
        if (v6 < 0) {
          uint64_t v10 = v7;
        }
        if (v26 >= 0) {
          p_p = &__p;
        }
        else {
          p_p = __p;
        }
        pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"%s %s %s (id=%s)\n", v8, v9, v4, v5, v10, p_p);
        if (v26 < 0) {
          operator delete(__p);
        }
        if (v28 < 0) {
          operator delete(v27[0]);
        }
        if (v30 < 0) {
          operator delete(v29[0]);
        }
      }
    }
    else if (v2 >= 0x11)
    {
      if (sub_216C4B19C(11))
      {
        pxrInternal__aapl__pxrReserved__::UsdDescribe(*(pxrInternal__aapl__pxrReserved__ **)(a1 + 24), v12);
        uint64_t v15 = v30 >= 0 ? v29 : (void **)v29[0];
        pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"%s %s %zu entries:\n", v13, v14, v15, *(void *)(a1 + 32), (uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 4);
        if (v30 < 0) {
          operator delete(v29[0]);
        }
      }
      uint64_t v16 = *(pxrInternal__aapl__pxrReserved__ ***)a1;
      int v17 = *(pxrInternal__aapl__pxrReserved__ ***)(a1 + 8);
      if (*(pxrInternal__aapl__pxrReserved__ ***)a1 != v17)
      {
        do
        {
          if (sub_216C4B19C(11))
          {
            pxrInternal__aapl__pxrReserved__::UsdDescribe(v16, v29);
            int v18 = v30;
            uint64_t v19 = (void **)v29[0];
            long long __p = v16[1];
            sub_216EDD528();
            if (v18 >= 0) {
              uint64_t v22 = v29;
            }
            else {
              uint64_t v22 = v19;
            }
            if (v28 >= 0) {
              int v23 = v27;
            }
            else {
              int v23 = (void **)v27[0];
            }
            pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"      %s (id=%s)\n", v20, v21, v22, v23);
            if (v28 < 0) {
              operator delete(v27[0]);
            }
            if (v30 < 0) {
              operator delete(v29[0]);
            }
          }
          v16 += 2;
        }
        while (v16 != v17);
      }
    }
  }
  return sub_216EDD670((void **)a1);
}

void sub_216EDB4D0(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a30 < 0) {
    operator delete(__p);
  }
  sub_21675DB74(a1);
}

BOOL pxrInternal__aapl__pxrReserved__::UsdStageCache::Erase(uint64_t a1, uint64_t a2)
{
  uint64_t v9 = a2;
  sub_216EDB10C((uint64_t)v8, a1, (uint64_t)"erased");
  uint64_t v3 = (std::mutex *)(a1 + 8);
  std::mutex::lock((std::mutex *)(a1 + 8));
  if (v8[40])
  {
    uint64_t v4 = sub_216EDE554(*(void **)a1, &v9);
    if (v4) {
      sub_216EDB15C((uint64_t)v8, v4 + 3, v4[2]);
    }
  }
  uint64_t v5 = *(void **)a1;
  uint64_t v12 = v9;
  int v6 = sub_216EDE0BC(v5, &v12);
  if (v6)
  {
    sub_216EDDF34((uint64_t)v5, v6 + 3);
    if (sub_216EDE1F8(v5 + 5, v6 + 3) != 1)
    {
      v10[0] = "usd/stageCache.cpp";
      v10[1] = "Erase";
      v10[2] = 127;
      void v10[3] = "BOOL pxrInternal__aapl__pxrReserved__::(anonymous namespace)::StageContainer::Erase(const Id)";
      char v11 = 0;
      pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v10, "_byStage.erase(it->second) == 1", 0);
    }
    sub_216851DB0(v5, v6, (uint64_t)v10);
    sub_216EDC7B4((uint64_t)v10, 0);
  }
  std::mutex::unlock(v3);
  sub_216EDB2A4((uint64_t)v8);
  return v6 != 0;
}

void sub_216EDB66C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::mutex::unlock(v10);
  sub_216EDB2A4((uint64_t)&a10);
  _Unwind_Resume(a1);
}

BOOL pxrInternal__aapl__pxrReserved__::UsdStageCache::Erase(uint64_t a1, uint64_t *a2)
{
  sub_216EDB10C((uint64_t)v10, a1, (uint64_t)"erased");
  uint64_t v4 = (std::mutex *)(a1 + 8);
  std::mutex::lock((std::mutex *)(a1 + 8));
  if (v10[40])
  {
    uint64_t v5 = sub_216877FD4((void *)(*(void *)a1 + 40), a2);
    if (v5) {
      sub_216EDB15C((uint64_t)v10, v5 + 2, v5[3]);
    }
  }
  int v6 = *(void **)a1;
  uint64_t v7 = (void *)(*(void *)a1 + 40);
  char v8 = sub_2168503EC(v7, a2);
  if (v8)
  {
    sub_216EDDF34((uint64_t)v6, a2);
    if (sub_216EDE248(v6, v8 + 3) != 1)
    {
      v11[0] = "usd/stageCache.cpp";
      v11[1] = "Erase";
      v11[2] = 115;
      v11[3] = "BOOL pxrInternal__aapl__pxrReserved__::(anonymous namespace)::StageContainer::Erase(const UsdStageRefPtr &)";
      char v12 = 0;
      pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v11, "_byId.erase(it->second) == 1", 0);
    }
    sub_216851DB0(v7, v8, (uint64_t)v11);
    sub_216EDCBEC((uint64_t)v11, 0);
  }
  std::mutex::unlock(v4);
  sub_216EDB2A4((uint64_t)v10);
  return v8 != 0;
}

void sub_216EDB7D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::mutex::unlock(v10);
  sub_216EDB2A4((uint64_t)&a10);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStageCache::EraseAll(uint64_t a1, uint64_t a2)
{
  sub_216EDB10C((uint64_t)v16, a1, (uint64_t)"erased");
  uint64_t v4 = (std::mutex *)(a1 + 8);
  std::mutex::lock((std::mutex *)(a1 + 8));
  uint64_t v5 = *(void **)a1;
  int v6 = v17;
  uint64_t v7 = (pxrInternal__aapl__pxrReserved__ **)sub_216EDE18C(v5 + 10, a2);
  uint64_t v9 = v8;
  if (v7 == v8)
  {
    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v10 = 0;
    do
    {
      char v11 = sub_2168503EC(v5 + 5, v7 + 4);
      char v12 = v11;
      if (v11)
      {
        if (v6) {
          sub_216EDE298(v16, v11 + 2, v11 + 3);
        }
        if (sub_216EDE248(v5, v12 + 3) != 1)
        {
          char v20 = "usd/stageCache.cpp";
          uint64_t v21 = "_EraseAllIf";
          uint64_t v22 = 215;
          int v23 = "size_t pxrInternal__aapl__pxrReserved__::(anonymous namespace)::StageContainer::_EraseAllIf(const SdfLay"
                "erHandle &, ConditionFn &&, vector<Entry> *) [ConditionFn = (lambda at /Library/Caches/com.apple.xbs/Sou"
                "rces/USDLib/USD/pxr/usd/usd/stageCache.cpp:135:28)]";
          char v24 = 0;
          pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v20, "_byId.erase(byStageIt->second) == 1", 0);
        }
        sub_216851DB0(v5 + 5, v12, (uint64_t)&v20);
        sub_216EDCBEC((uint64_t)&v20, 0);
        unint64_t v13 = *v7;
        sub_216851DB0(v5 + 10, v7, (uint64_t)&v20);
        sub_216EDD354((uint64_t)&v20, 0);
        ++v10;
        uint64_t v7 = (pxrInternal__aapl__pxrReserved__ **)v13;
      }
      else
      {
        char v20 = "usd/stageCache.cpp";
        uint64_t v21 = "_EraseAllIf";
        uint64_t v22 = 206;
        int v23 = "size_t pxrInternal__aapl__pxrReserved__::(anonymous namespace)::StageContainer::_EraseAllIf(const SdfLayer"
              "Handle &, ConditionFn &&, vector<Entry> *) [ConditionFn = (lambda at /Library/Caches/com.apple.xbs/Sources"
              "/USDLib/USD/pxr/usd/usd/stageCache.cpp:135:28)]";
        char v24 = 0;
        pxrInternal__aapl__pxrReserved__::UsdDescribe(v7 + 4, __p);
        int v14 = __p;
        if (v19 < 0) {
          int v14 = (void **)__p[0];
        }
        pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v20, 1, (pxrInternal__aapl__pxrReserved__ *)"Internal StageCache is out of sync. Cannot locate ID for stage '%s'.Skipping erase of incomplete element.", (const char *)v14);
        if (v19 < 0) {
          operator delete(__p[0]);
        }
        uint64_t v7 = (pxrInternal__aapl__pxrReserved__ **)*v7;
      }
    }
    while (v7 != v9);
  }
  std::mutex::unlock(v4);
  sub_216EDB2A4((uint64_t)v16);
  return v10;
}

void sub_216EDBA04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::mutex *a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStageCache::EraseAll(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_216EDB10C((uint64_t)v23, a1, (uint64_t)"erased");
  std::mutex::lock((std::mutex *)(a1 + 8));
  int v6 = *(void **)a1;
  int v22 = v24;
  char v20 = (std::mutex *)(a1 + 8);
  uint64_t v21 = (void *)(*(void *)a1 + 80);
  uint64_t v7 = (pxrInternal__aapl__pxrReserved__ *)sub_216EDE18C(v21, a2);
  uint64_t v9 = v8;
  if (v7 != v8)
  {
    uint64_t v10 = 0;
    while (1)
    {
      char v11 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_216D57D70((uint64_t *)v7 + 4);
      pxrInternal__aapl__pxrReserved__::UsdStage::GetSessionLayer(v11, (uint64_t *)&v27);
      uint64_t v12 = sub_216851B24((uint64_t)&v27);
      uint64_t v13 = sub_216851B24(a3);
      int v14 = v28;
      if (v28 && atomic_fetch_add_explicit((atomic_uint *volatile)v28 + 2, 0xFFFFFFFF, memory_order_release) == 1) {
        (*(void (**)(const char *))(*(void *)v14 + 8))(v14);
      }
      if (v12 == v13)
      {
        uint64_t v15 = sub_2168503EC(v6 + 5, (void *)v7 + 4);
        uint64_t v16 = v15;
        if (v15)
        {
          if (v22) {
            sub_216EDE298(v23, v15 + 2, v15 + 3);
          }
          if (sub_216EDE248(v6, v16 + 3) != 1)
          {
            char v27 = "usd/stageCache.cpp";
            char v28 = "_EraseAllIf";
            uint64_t v29 = 215;
            char v30 = "size_t pxrInternal__aapl__pxrReserved__::(anonymous namespace)::StageContainer::_EraseAllIf(const SdfL"
                  "ayerHandle &, ConditionFn &&, vector<Entry> *) [ConditionFn = (lambda at /Library/Caches/com.apple.xbs"
                  "/Sources/USDLib/USD/pxr/usd/usd/stageCache.cpp:143:27)]";
            char v31 = 0;
            pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v27, "_byId.erase(byStageIt->second) == 1", 0);
          }
          sub_216851DB0(v6 + 5, v16, (uint64_t)&v27);
          sub_216EDCBEC((uint64_t)&v27, 0);
          unsigned __int8 v17 = *(pxrInternal__aapl__pxrReserved__ **)v7;
          sub_216851DB0(v21, v7, (uint64_t)&v27);
          sub_216EDD354((uint64_t)&v27, 0);
          ++v10;
          uint64_t v7 = v17;
          goto LABEL_14;
        }
        char v27 = "usd/stageCache.cpp";
        char v28 = "_EraseAllIf";
        uint64_t v29 = 206;
        char v30 = "size_t pxrInternal__aapl__pxrReserved__::(anonymous namespace)::StageContainer::_EraseAllIf(const SdfLayer"
              "Handle &, ConditionFn &&, vector<Entry> *) [ConditionFn = (lambda at /Library/Caches/com.apple.xbs/Sources"
              "/USDLib/USD/pxr/usd/usd/stageCache.cpp:143:27)]";
        char v31 = 0;
        pxrInternal__aapl__pxrReserved__::UsdDescribe((pxrInternal__aapl__pxrReserved__ **)v7 + 4, __p);
        int v18 = __p;
        if (v26 < 0) {
          int v18 = (void **)__p[0];
        }
        pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v27, 1, (pxrInternal__aapl__pxrReserved__ *)"Internal StageCache is out of sync. Cannot locate ID for stage '%s'.Skipping erase of incomplete element.", (const char *)v18);
        if (v26 < 0) {
          operator delete(__p[0]);
        }
      }
      uint64_t v7 = *(pxrInternal__aapl__pxrReserved__ **)v7;
LABEL_14:
      if (v7 == v9) {
        goto LABEL_21;
      }
    }
  }
  uint64_t v10 = 0;
LABEL_21:
  std::mutex::unlock(v20);
  sub_216EDB2A4((uint64_t)v23);
  return v10;
}

void sub_216EDBCC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::mutex *a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,uint64_t a26)
{
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStageCache::EraseAll(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  sub_216EDB10C((uint64_t)v25, a1, (uint64_t)"erased");
  uint64_t v7 = (std::mutex *)(a1 + 8);
  std::mutex::lock((std::mutex *)(a1 + 8));
  char v8 = *(void **)a1;
  int v23 = v26;
  uint64_t v9 = (pxrInternal__aapl__pxrReserved__ *)sub_216EDE18C(v8 + 10, a2);
  char v11 = v10;
  if (v9 != v10)
  {
    uint64_t v12 = 0;
    while (1)
    {
      uint64_t v13 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_216D57D70((uint64_t *)v9 + 4);
      pxrInternal__aapl__pxrReserved__::UsdStage::GetSessionLayer(v13, (uint64_t *)&__p);
      uint64_t v14 = sub_216851B24((uint64_t)&__p);
      if (v14 == sub_216851B24(a3))
      {
        uint64_t v16 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_216D57D70((uint64_t *)v9 + 4);
        pxrInternal__aapl__pxrReserved__::UsdStage::GetPathResolverContext(v16, &v30);
        int v15 = pxrInternal__aapl__pxrReserved__::ArResolverContext::operator==((uint64_t *)&v30, a4);
        uint64_t v35 = &v30;
        sub_216787968((void ***)&v35);
      }
      else
      {
        int v15 = 0;
      }
      uint64_t v17 = v28;
      if (v28 && atomic_fetch_add_explicit((atomic_uint *volatile)(v28 + 8), 0xFFFFFFFF, memory_order_release) == 1) {
        (*(void (**)(uint64_t))(*(void *)v17 + 8))(v17);
      }
      if (v15)
      {
        int v18 = sub_2168503EC(v8 + 5, (void *)v9 + 4);
        char v19 = v18;
        if (v18)
        {
          if (v23) {
            sub_216EDE298(v25, v18 + 2, v18 + 3);
          }
          if (sub_216EDE248(v8, v19 + 3) != 1)
          {
            char v30 = "usd/stageCache.cpp";
            char v31 = "_EraseAllIf";
            uint64_t v32 = 215;
            uint64_t v33 = "size_t pxrInternal__aapl__pxrReserved__::(anonymous namespace)::StageContainer::_EraseAllIf(const SdfL"
                  "ayerHandle &, ConditionFn &&, vector<Entry> *) [ConditionFn = (lambda at /Library/Caches/com.apple.xbs"
                  "/Sources/USDLib/USD/pxr/usd/usd/stageCache.cpp:154:27)]";
            char v34 = 0;
            pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v30, "_byId.erase(byStageIt->second) == 1", 0);
          }
          sub_216851DB0(v8 + 5, v19, (uint64_t)&v30);
          sub_216EDCBEC((uint64_t)&v30, 0);
          char v20 = *(pxrInternal__aapl__pxrReserved__ **)v9;
          sub_216851DB0(v8 + 10, v9, (uint64_t)&v30);
          sub_216EDD354((uint64_t)&v30, 0);
          ++v12;
          uint64_t v9 = v20;
          goto LABEL_21;
        }
        char v30 = "usd/stageCache.cpp";
        char v31 = "_EraseAllIf";
        uint64_t v32 = 206;
        uint64_t v33 = "size_t pxrInternal__aapl__pxrReserved__::(anonymous namespace)::StageContainer::_EraseAllIf(const SdfLayer"
              "Handle &, ConditionFn &&, vector<Entry> *) [ConditionFn = (lambda at /Library/Caches/com.apple.xbs/Sources"
              "/USDLib/USD/pxr/usd/usd/stageCache.cpp:154:27)]";
        char v34 = 0;
        pxrInternal__aapl__pxrReserved__::UsdDescribe((pxrInternal__aapl__pxrReserved__ **)v9 + 4, &__p);
        p_p = (const char *)&__p;
        if (v29 < 0) {
          p_p = (const char *)__p;
        }
        pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v30, 1, (pxrInternal__aapl__pxrReserved__ *)"Internal StageCache is out of sync. Cannot locate ID for stage '%s'.Skipping erase of incomplete element.", p_p);
        if (v29 < 0) {
          operator delete(__p);
        }
      }
      uint64_t v9 = *(pxrInternal__aapl__pxrReserved__ **)v9;
LABEL_21:
      if (v9 == v11) {
        goto LABEL_24;
      }
    }
  }
  uint64_t v12 = 0;
LABEL_24:
  std::mutex::unlock(v7);
  sub_216EDB2A4((uint64_t)v25);
  return v12;
}

void sub_216EDBFDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24,char a25)
{
  std::mutex::unlock(v25);
  sub_216EDB2A4((uint64_t)&a13);
  _Unwind_Resume(a1);
}

void **pxrInternal__aapl__pxrReserved__::UsdStageCache::Clear(pxrInternal__aapl__pxrReserved__::UsdStageCache *this)
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  sub_216EDB10C((uint64_t)v6, (uint64_t)this, (uint64_t)"cleared");
  unint64_t v2 = operator new(0xA8uLL);
  *unint64_t v2 = 0u;
  v2[1] = 0u;
  *((_DWORD *)v2 + 8) = 1065353216;
  *(_OWORD *)((char *)v2 + 4sub_2168EBBB8(&a9, 0) = 0u;
  *(_OWORD *)((char *)v2 + 56) = 0u;
  *((_DWORD *)v2 + 18) = 1065353216;
  v2[5] = 0u;
  v2[6] = 0u;
  *((_DWORD *)v2 + 28) = 1065353216;
  *(_OWORD *)((char *)v2 + 12sub_2168EBBB8(&a9, 0) = 0u;
  *(_OWORD *)((char *)v2 + 136) = 0u;
  *(_OWORD *)((char *)v2 + 152) = 0u;
  v7[0] = v2;
  v7[1] = 850045863;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  uint64_t v11 = 0;
  std::mutex::lock((std::mutex *)((char *)this + 8));
  uint64_t v3 = *(void *)this;
  if (v6[40])
  {
    for (BOOL i = (void *)(v3 + 56); ; sub_216EDB15C((uint64_t)v6, i + 2, i[3]))
    {
      BOOL i = (void *)*i;
      if (!i) {
        break;
      }
    }
    uint64_t v3 = *(void *)this;
  }
  *(void *)this = v7[0];
  v7[0] = v3;
  std::mutex::unlock((std::mutex *)((char *)this + 8));
  pxrInternal__aapl__pxrReserved__::UsdStageCache::~UsdStageCache((pxrInternal__aapl__pxrReserved__::UsdStageCache *)v7);
  return sub_216EDB2A4((uint64_t)v6);
}

void sub_216EDC1A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
}

void pxrInternal__aapl__pxrReserved__::UsdStageCache::SetDebugName(uint64_t a1, const std::string *a2)
{
  uint64_t v4 = (std::mutex *)(a1 + 8);
  std::mutex::lock((std::mutex *)(a1 + 8));
  std::string::operator=((std::string *)(*(void *)a1 + 144), a2);

  std::mutex::unlock(v4);
}

void sub_216EDC240(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStageCache::GetDebugName(pxrInternal__aapl__pxrReserved__::UsdStageCache *this@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (std::mutex *)((char *)this + 8);
  std::mutex::lock((std::mutex *)((char *)this + 8));
  uint64_t v5 = *(void *)this;
  if (*(char *)(*(void *)this + 167) < 0)
  {
    sub_216778F24((unsigned char *)a2, *(void **)(v5 + 144), *(void *)(v5 + 152));
  }
  else
  {
    long long v6 = *(_OWORD *)(v5 + 144);
    *(void *)(a2 + 16) = *(void *)(v5 + 160);
    *(_OWORD *)a2 = v6;
  }

  std::mutex::unlock(v4);
}

void sub_216EDC2CC(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStageCacheRequest::~UsdStageCacheRequest(pxrInternal__aapl__pxrReserved__::UsdStageCacheRequest *this)
{
  uint64_t v1 = (void **)*((void *)this + 1);
  *(void *)this = &unk_26C76BCB8;
  *((void *)this + 1) = 0;
  if (v1) {
    pxrInternal__aapl__pxrReserved__::UsdStageCacheRequest::_DataDeleter::operator()((int)this, v1);
  }
}

void *sub_216EDC334(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_216EDC460((uint64_t)a1, a2);
  sub_216EDC88C(v4 + 40, a2 + 40);
  sub_216EDCCC4((uint64_t)(a1 + 10), a2 + 80);
  a1[15] = 0;
  a1[16] = 0;
  a1[17] = 0;
  sub_216EDD4AC(a1 + 15, *(const void **)(a2 + 120), *(void *)(a2 + 128), (uint64_t)(*(void *)(a2 + 128) - *(void *)(a2 + 120)) >> 3);
  uint64_t v5 = a1 + 18;
  if (*(char *)(a2 + 167) < 0)
  {
    sub_216778F24(v5, *(void **)(a2 + 144), *(void *)(a2 + 152));
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 144);
    a1[20] = *(void *)(a2 + 160);
    *(_OWORD *)uint64_t v5 = v6;
  }
  return a1;
}

void sub_216EDC3D0(_Unwind_Exception *a1)
{
  uint64_t v4 = *v2;
  if (*v2)
  {
    *(void *)(v1 + 128) = v4;
    operator delete(v4);
  }
  sub_216EDC41C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_216EDC41C(uint64_t a1)
{
  sub_216EDD42C(a1 + 80);
  sub_216EDCC44(a1 + 40);

  return sub_216EDC80C(a1);
}

uint64_t sub_216EDC460(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  sub_21678A04C(a1, *(void *)(a2 + 8));
  for (BOOL i = *(void **)(a2 + 16); i; BOOL i = (void *)*i)
    sub_216EDC4D8(a1, i + 2, i + 2);
  return a1;
}

void sub_216EDC4C0(_Unwind_Exception *a1)
{
  sub_216EDC80C(v1);
  _Unwind_Resume(a1);
}

void *sub_216EDC4D8(uint64_t a1, void *a2, void *a3)
{
  unint64_t v5 = bswap64(0x9E3779B97F4A7C55 * ~*a2);
  unint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    uint8x8_t v7 = (uint8x8_t)vcnt_s8((int8x8_t)v6);
    v7.i16[0] = vaddlv_u8(v7);
    if (v7.u32[0] > 1uLL)
    {
      unint64_t v3 = v5;
      if (v5 >= v6) {
        unint64_t v3 = v5 % v6;
      }
    }
    else
    {
      unint64_t v3 = (v6 - 1) & v5;
    }
    long long v8 = *(void **)(*(void *)a1 + 8 * v3);
    if (v8)
    {
      long long v9 = (void *)*v8;
      if (*v8)
      {
        do
        {
          unint64_t v10 = v9[1];
          if (v10 == v5)
          {
            if (v9[2] == *a2) {
              return v9;
            }
          }
          else
          {
            if (v7.u32[0] > 1uLL)
            {
              if (v10 >= v6) {
                v10 %= v6;
              }
            }
            else
            {
              v10 &= v6 - 1;
            }
            if (v10 != v3) {
              break;
            }
          }
          long long v9 = (void *)*v9;
        }
        while (v9);
      }
    }
  }
  sub_216EDC73C(a1, v5, a3, (uint64_t)v20);
  float v11 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v12 = *(float *)(a1 + 32);
  if (!v6 || (float)(v12 * (float)v6) < v11)
  {
    BOOL v13 = 1;
    if (v6 >= 3) {
      BOOL v13 = (v6 & (v6 - 1)) != 0;
    }
    unint64_t v14 = v13 | (2 * v6);
    unint64_t v15 = vcvtps_u32_f32(v11 / v12);
    if (v14 <= v15) {
      size_t v16 = v15;
    }
    else {
      size_t v16 = v14;
    }
    sub_21678A04C(a1, v16);
    unint64_t v6 = *(void *)(a1 + 8);
    if ((v6 & (v6 - 1)) != 0)
    {
      if (v5 >= v6) {
        unint64_t v3 = v5 % v6;
      }
      else {
        unint64_t v3 = v5;
      }
    }
    else
    {
      unint64_t v3 = (v6 - 1) & v5;
    }
  }
  uint64_t v17 = *(void **)(*(void *)a1 + 8 * v3);
  if (v17)
  {
    *(void *)v20[0] = *v17;
    void *v17 = v20[0];
  }
  else
  {
    *(void *)v20[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v20[0];
    *(void *)(*(void *)a1 + 8 * v3) = a1 + 16;
    if (*(void *)v20[0])
    {
      unint64_t v18 = *(void *)(*(void *)v20[0] + 8);
      if ((v6 & (v6 - 1)) != 0)
      {
        if (v18 >= v6) {
          v18 %= v6;
        }
      }
      else
      {
        v18 &= v6 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v18) = v20[0];
    }
  }
  long long v9 = (void *)v20[0];
  v20[0] = 0;
  ++*(void *)(a1 + 24);
  sub_216EDC7B4((uint64_t)v20, 0);
  return v9;
}

void sub_216EDC724(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216EDC7B4((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_216EDC73C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 16;
  long long v8 = operator new(0x20uLL);
  *(void *)a4 = v8;
  *(void *)(a4 + 8) = v7;
  *(unsigned char *)(a4 + 16) = 0;
  *long long v8 = 0;
  v8[1] = a2;
  uint64_t v9 = a3[1];
  v8[2] = *a3;
  v8[3] = v9;
  uint64_t result = sub_2168BD80C(v8 + 3);
  *(unsigned char *)(a4 + 16) = 1;
  return result;
}

void sub_216EDC79C(_Unwind_Exception *a1)
{
  sub_216EDC7B4(v1, 0);
  _Unwind_Resume(a1);
}

void sub_216EDC7B4(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter ***)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_216E10FB8(v2 + 3);
    }
    operator delete(v2);
  }
}

uint64_t sub_216EDC80C(uint64_t a1)
{
  sub_216EDC848(a1, *(pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter ***)(a1 + 16));
  unint64_t v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void sub_216EDC848(uint64_t a1, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **a2)
{
  if (a2)
  {
    unint64_t v2 = a2;
    do
    {
      unint64_t v3 = *v2;
      sub_216E10FB8(v2 + 3);
      operator delete(v2);
      unint64_t v2 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)v3;
    }
    while (v3);
  }
}

uint64_t sub_216EDC88C(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  sub_21678A04C(a1, *(void *)(a2 + 8));
  for (BOOL i = *(void **)(a2 + 16); i; BOOL i = (void *)*i)
    sub_216EDC904(a1, i + 2, i + 2);
  return a1;
}

void sub_216EDC8EC(_Unwind_Exception *a1)
{
  sub_216EDCC44(v1);
  _Unwind_Resume(a1);
}

void *sub_216EDC904(uint64_t a1, void *a2, void *a3)
{
  unint64_t v5 = bswap64(0x9E3779B97F4A7C55 * *a2);
  unint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    uint8x8_t v7 = (uint8x8_t)vcnt_s8((int8x8_t)v6);
    v7.i16[0] = vaddlv_u8(v7);
    if (v7.u32[0] > 1uLL)
    {
      unint64_t v3 = v5;
      if (v5 >= v6) {
        unint64_t v3 = v5 % v6;
      }
    }
    else
    {
      unint64_t v3 = v5 & (v6 - 1);
    }
    long long v8 = *(void **)(*(void *)a1 + 8 * v3);
    if (v8)
    {
      uint64_t v9 = (void *)*v8;
      if (*v8)
      {
        do
        {
          unint64_t v10 = v9[1];
          if (v10 == v5)
          {
            if (v9[2] == *a2) {
              return v9;
            }
          }
          else
          {
            if (v7.u32[0] > 1uLL)
            {
              if (v10 >= v6) {
                v10 %= v6;
              }
            }
            else
            {
              v10 &= v6 - 1;
            }
            if (v10 != v3) {
              break;
            }
          }
          uint64_t v9 = (void *)*v9;
        }
        while (v9);
      }
    }
  }
  sub_216EDCB64(a1, v5, a3, (uint64_t)v20);
  float v11 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v12 = *(float *)(a1 + 32);
  if (!v6 || (float)(v12 * (float)v6) < v11)
  {
    BOOL v13 = 1;
    if (v6 >= 3) {
      BOOL v13 = (v6 & (v6 - 1)) != 0;
    }
    unint64_t v14 = v13 | (2 * v6);
    unint64_t v15 = vcvtps_u32_f32(v11 / v12);
    if (v14 <= v15) {
      size_t v16 = v15;
    }
    else {
      size_t v16 = v14;
    }
    sub_21678A04C(a1, v16);
    unint64_t v6 = *(void *)(a1 + 8);
    if ((v6 & (v6 - 1)) != 0)
    {
      if (v5 >= v6) {
        unint64_t v3 = v5 % v6;
      }
      else {
        unint64_t v3 = v5;
      }
    }
    else
    {
      unint64_t v3 = (v6 - 1) & v5;
    }
  }
  uint64_t v17 = *(void **)(*(void *)a1 + 8 * v3);
  if (v17)
  {
    *(void *)v20[0] = *v17;
    void *v17 = v20[0];
  }
  else
  {
    *(void *)v20[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v20[0];
    *(void *)(*(void *)a1 + 8 * v3) = a1 + 16;
    if (*(void *)v20[0])
    {
      unint64_t v18 = *(void *)(*(void *)v20[0] + 8);
      if ((v6 & (v6 - 1)) != 0)
      {
        if (v18 >= v6) {
          v18 %= v6;
        }
      }
      else
      {
        v18 &= v6 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v18) = v20[0];
    }
  }
  uint64_t v9 = (void *)v20[0];
  v20[0] = 0;
  ++*(void *)(a1 + 24);
  sub_216EDCBEC((uint64_t)v20, 0);
  return v9;
}

void sub_216EDCB4C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216EDCBEC((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_216EDCB64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 16;
  long long v8 = operator new(0x20uLL);
  *(void *)a4 = v8;
  *(void *)(a4 + 8) = v7;
  *(unsigned char *)(a4 + 16) = 0;
  *long long v8 = 0;
  v8[1] = a2;
  v8[2] = *a3;
  uint64_t result = sub_2168BD80C(v8 + 2);
  v8[3] = a3[1];
  *(unsigned char *)(a4 + 16) = 1;
  return result;
}

void sub_216EDCBD4(_Unwind_Exception *a1)
{
  sub_216EDCBEC(v1, 0);
  _Unwind_Resume(a1);
}

void sub_216EDCBEC(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter ***)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_216E10FB8(v2 + 2);
    }
    operator delete(v2);
  }
}

uint64_t sub_216EDCC44(uint64_t a1)
{
  sub_216EDCC80(a1, *(pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter ***)(a1 + 16));
  unint64_t v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void sub_216EDCC80(uint64_t a1, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **a2)
{
  if (a2)
  {
    unint64_t v2 = a2;
    do
    {
      unint64_t v3 = *v2;
      sub_216E10FB8(v2 + 2);
      operator delete(v2);
      unint64_t v2 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)v3;
    }
    while (v3);
  }
}

uint64_t sub_216EDCCC4(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  sub_216EDCD38(a1, *(void *)(a2 + 8));
  for (BOOL i = *(void **)(a2 + 16); i; BOOL i = (void *)*i)
    sub_216EDD000((void *)a1, i + 2);
  return a1;
}

void sub_216EDCD20(_Unwind_Exception *a1)
{
  sub_216EDD42C(v1);
  _Unwind_Resume(a1);
}

void sub_216EDCD38(uint64_t a1, size_t __n)
{
  if (__n == 1)
  {
    size_t prime = 2;
  }
  else
  {
    size_t prime = __n;
    if ((__n & (__n - 1)) != 0) {
      size_t prime = std::__next_prime(__n);
    }
  }
  int8x8_t v4 = *(int8x8_t *)(a1 + 8);
  if (prime > *(void *)&v4) {
    goto LABEL_16;
  }
  if (prime < *(void *)&v4)
  {
    unint64_t v5 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(void *)&v4 < 3uLL || (uint8x8_t v6 = (uint8x8_t)vcnt_s8(v4), v6.i16[0] = vaddlv_u8(v6), v6.u32[0] > 1uLL))
    {
      unint64_t v5 = std::__next_prime(v5);
    }
    else
    {
      uint64_t v7 = 1 << -(char)__clz(v5 - 1);
      if (v5 >= 2) {
        unint64_t v5 = v7;
      }
    }
    if (prime <= v5) {
      size_t prime = v5;
    }
    if (prime < *(void *)&v4)
    {
LABEL_16:
      sub_216EDCE28(a1, prime);
    }
  }
}

void sub_216EDCE28(uint64_t a1, unint64_t a2)
{
  if (a2)
  {
    if (a2 >> 61) {
      sub_21677CA1C();
    }
    int8x8_t v4 = operator new(8 * a2);
    unint64_t v5 = *(void **)a1;
    *(void *)a1 = v4;
    if (v5) {
      operator delete(v5);
    }
    uint64_t v6 = 0;
    *(void *)(a1 + 8) = a2;
    do
      *(void *)(*(void *)a1 + 8 * v6++) = 0;
    while (a2 != v6);
    uint64_t v7 = *(void **)(a1 + 16);
    if (v7)
    {
      unint64_t v8 = v7[1];
      uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)a2);
      v9.i16[0] = vaddlv_u8(v9);
      unint64_t v10 = v9.u32[0];
      if (v9.u32[0] > 1uLL)
      {
        if (v8 >= a2) {
          v8 %= a2;
        }
      }
      else
      {
        v8 &= a2 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v8) = a1 + 16;
      float v12 = (void *)*v7;
      if (*v7)
      {
        unint64_t v13 = a2 - 1;
        unint64_t v21 = v9.u32[0];
        do
        {
          unint64_t v14 = v12[1];
          if (v10 > 1)
          {
            if (v14 >= a2) {
              v14 %= a2;
            }
          }
          else
          {
            v14 &= v13;
          }
          if (v14 == v8)
          {
            uint64_t v7 = v12;
          }
          else if (*(void *)(*(void *)a1 + 8 * v14))
          {
            unint64_t v15 = (void *)*v12;
            if (*v12)
            {
              size_t v16 = v12;
              while (1)
              {
                uint64_t v17 = (uint64_t)(v15 + 2);
                uint64_t v18 = sub_216851B24((uint64_t)(v12 + 2));
                uint64_t v19 = sub_216851B24(v17);
                char v20 = (void *)*v16;
                if (v18 != v19) {
                  break;
                }
                unint64_t v15 = (void *)*v20;
                size_t v16 = (void *)*v16;
                if (!*v20) {
                  goto LABEL_32;
                }
              }
              unint64_t v15 = (void *)*v16;
              char v20 = v16;
LABEL_32:
              unint64_t v13 = a2 - 1;
              unint64_t v10 = v21;
            }
            else
            {
              char v20 = v12;
            }
            *uint64_t v7 = v15;
            void *v20 = **(void **)(*(void *)a1 + 8 * v14);
            **(void **)(*(void *)a1 + 8 * v14) = v12;
          }
          else
          {
            *(void *)(*(void *)a1 + 8 * v14) = v7;
            uint64_t v7 = v12;
            unint64_t v8 = v14;
          }
          float v12 = (void *)*v7;
        }
        while (*v7);
      }
    }
  }
  else
  {
    float v11 = *(void **)a1;
    *(void *)a1 = 0;
    if (v11) {
      operator delete(v11);
    }
    *(void *)(a1 + 8) = 0;
  }
}

void *sub_216EDD000(void *a1, void *a2)
{
  sub_216EDD06C((uint64_t)a1, a2, (uint64_t)v5);
  unint64_t v3 = sub_216EDD100(a1, v5[0]);
  v5[0] = 0;
  sub_216EDD354((uint64_t)v5, 0);
  return v3;
}

void sub_216EDD054(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216EDD354((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_216EDD06C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 16;
  uint64_t v6 = operator new(0x28uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  void *v6 = 0;
  v6[1] = 0;
  uint64_t v7 = sub_216EDD174(v6 + 2, a2);
  *(unsigned char *)(a3 + 16) = 1;
  uint64_t result = sub_216851B24((uint64_t)v7);
  v6[1] = bswap64(0x9E3779B97F4A7C55 * result);
  return result;
}

void sub_216EDD0E8(_Unwind_Exception *a1)
{
  sub_216EDD354(v1, 0);
  _Unwind_Resume(a1);
}

void *sub_216EDD100(void *a1, void *a2)
{
  uint64_t v4 = (uint64_t)(a2 + 2);
  unint64_t v5 = bswap64(0x9E3779B97F4A7C55 * sub_216851B24((uint64_t)(a2 + 2)));
  a2[1] = v5;
  uint64_t v6 = sub_216EDD1D8((uint64_t)a1, v5, v4);
  sub_216862FF0(a1, a2, v6);
  return a2;
}

void *sub_216EDD174(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v3 + 8), 1u, memory_order_relaxed);
  }
  a1[2] = a2[2];
  sub_2168BD80C(a1 + 2);
  return a1;
}

void sub_216EDD1C0(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void *)(v1 + 8);
  if (v3) {
    sub_217324248(v3);
  }
  _Unwind_Resume(exception_object);
}

void *sub_216EDD1D8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  unint64_t v6 = *(void *)(a1 + 8);
  float v7 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v8 = *(float *)(a1 + 32);
  if (!v6 || (float)(v8 * (float)v6) < v7)
  {
    BOOL v9 = 1;
    if (v6 >= 3) {
      BOOL v9 = (v6 & (v6 - 1)) != 0;
    }
    unint64_t v10 = v9 | (2 * v6);
    unint64_t v11 = vcvtps_u32_f32(v7 / v8);
    if (v10 <= v11) {
      size_t v12 = v11;
    }
    else {
      size_t v12 = v10;
    }
    sub_216EDCD38(a1, v12);
    unint64_t v6 = *(void *)(a1 + 8);
  }
  uint8x8_t v13 = (uint8x8_t)vcnt_s8((int8x8_t)v6);
  v13.i16[0] = vaddlv_u8(v13);
  unint64_t v14 = v13.u32[0];
  if (v13.u32[0] > 1uLL)
  {
    unint64_t v15 = a2;
    if (v6 <= a2) {
      unint64_t v15 = a2 % v6;
    }
  }
  else
  {
    unint64_t v15 = (v6 - 1) & a2;
  }
  size_t v16 = *(void **)(*(void *)a1 + 8 * v15);
  if (v16)
  {
    uint64_t v17 = (void *)*v16;
    if (*v16)
    {
      int v18 = 0;
      do
      {
        unint64_t v19 = v17[1];
        if (v14 > 1)
        {
          unint64_t v20 = v17[1];
          if (v19 >= v6) {
            unint64_t v20 = v19 % v6;
          }
        }
        else
        {
          unint64_t v20 = v19 & (v6 - 1);
        }
        if (v20 != v15) {
          break;
        }
        if (v19 == a2)
        {
          uint64_t v21 = sub_216851B24((uint64_t)(v17 + 2));
          BOOL v22 = v21 == sub_216851B24(a3);
        }
        else
        {
          BOOL v22 = 0;
        }
        if (v18 & !v22) {
          break;
        }
        v18 |= v22;
        size_t v16 = (void *)*v16;
        uint64_t v17 = (void *)*v16;
      }
      while (*v16);
    }
  }
  return v16;
}

void sub_216EDD354(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_216EDD3AC((uint64_t)v2 + 16);
    }
    operator delete(v2);
  }
}

atomic_uint *sub_216EDD3AC(uint64_t a1)
{
  sub_216E10FB8((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)(a1 + 16));
  uint64_t result = *(atomic_uint **)(a1 + 8);
  if (result && atomic_fetch_add_explicit(result + 2, 0xFFFFFFFF, memory_order_release) == 1)
  {
    uint64_t v3 = *(uint64_t (**)(void))(*(void *)result + 8);
    return (atomic_uint *)v3();
  }
  return result;
}

uint64_t sub_216EDD42C(uint64_t a1)
{
  sub_216EDD468(a1, *(void **)(a1 + 16));
  unint64_t v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void sub_216EDD468(uint64_t a1, void *a2)
{
  if (a2)
  {
    unint64_t v2 = a2;
    do
    {
      uint64_t v3 = (void *)*v2;
      sub_216EDD3AC((uint64_t)(v2 + 2));
      operator delete(v2);
      unint64_t v2 = v3;
    }
    while (v3);
  }
}

void *sub_216EDD4AC(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    unint64_t v6 = result;
    uint64_t result = sub_21677CACC(result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      uint64_t result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_216EDD50C(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_216EDD528()
{
  sub_21677B834((uint64_t)v1);
  std::ostream::operator<<();
  std::stringbuf::str();
  v1[0] = *MEMORY[0x263F8C2C8];
  *(void *)((char *)v1 + *(void *)(v1[0] - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
  v1[1] = MEMORY[0x263F8C318] + 16;
  if (v2 < 0) {
    operator delete((void *)v1[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return MEMORY[0x21D447E60](&v3);
}

void sub_216EDD65C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21677B9CC((uint64_t)va);
  _Unwind_Resume(a1);
}

void **sub_216EDD670(void **a1)
{
  char v2 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)*a1;
  if (*a1)
  {
    uint64_t v3 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)a1[1];
    uint64_t v4 = v2;
    if (v3 != v2)
    {
      do
        uint64_t v3 = sub_216E10FB8(v3 - 2);
      while (v3 != v2);
      uint64_t v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

void *sub_216EDD6CC(uint64_t a1, void *a2, void *a3, void *a4)
{
  unint64_t v6 = bswap64(0x9E3779B97F4A7C55 * *a2);
  unint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    uint8x8_t v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      unint64_t v4 = v6;
      if (v6 >= v7) {
        unint64_t v4 = v6 % v7;
      }
    }
    else
    {
      unint64_t v4 = v6 & (v7 - 1);
    }
    BOOL v9 = *(void **)(*(void *)a1 + 8 * v4);
    if (v9)
    {
      unint64_t v10 = (void *)*v9;
      if (*v9)
      {
        do
        {
          unint64_t v11 = v10[1];
          if (v11 == v6)
          {
            if (v10[2] == *a2) {
              return v10;
            }
          }
          else
          {
            if (v8.u32[0] > 1uLL)
            {
              if (v11 >= v7) {
                v11 %= v7;
              }
            }
            else
            {
              v11 &= v7 - 1;
            }
            if (v11 != v4) {
              break;
            }
          }
          unint64_t v10 = (void *)*v10;
        }
        while (v10);
      }
    }
  }
  sub_216EDD92C(a1, v6, a3, a4, (uint64_t)v21);
  float v12 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v13 = *(float *)(a1 + 32);
  if (!v7 || (float)(v13 * (float)v7) < v12)
  {
    BOOL v14 = 1;
    if (v7 >= 3) {
      BOOL v14 = (v7 & (v7 - 1)) != 0;
    }
    unint64_t v15 = v14 | (2 * v7);
    unint64_t v16 = vcvtps_u32_f32(v12 / v13);
    if (v15 <= v16) {
      size_t v17 = v16;
    }
    else {
      size_t v17 = v15;
    }
    sub_21678A04C(a1, v17);
    unint64_t v7 = *(void *)(a1 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v6 >= v7) {
        unint64_t v4 = v6 % v7;
      }
      else {
        unint64_t v4 = v6;
      }
    }
    else
    {
      unint64_t v4 = (v7 - 1) & v6;
    }
  }
  int v18 = *(void **)(*(void *)a1 + 8 * v4);
  if (v18)
  {
    *(void *)v21[0] = *v18;
    *int v18 = v21[0];
  }
  else
  {
    *(void *)v21[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v21[0];
    *(void *)(*(void *)a1 + 8 * v4) = a1 + 16;
    if (*(void *)v21[0])
    {
      unint64_t v19 = *(void *)(*(void *)v21[0] + 8);
      if ((v7 & (v7 - 1)) != 0)
      {
        if (v19 >= v7) {
          v19 %= v7;
        }
      }
      else
      {
        v19 &= v7 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v19) = v21[0];
    }
  }
  unint64_t v10 = (void *)v21[0];
  v21[0] = 0;
  ++*(void *)(a1 + 24);
  sub_216EDCBEC((uint64_t)v21, 0);
  return v10;
}

void sub_216EDD914(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216EDCBEC((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_216EDD92C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9 = a1 + 16;
  unint64_t v10 = operator new(0x20uLL);
  *(void *)a5 = v10;
  *(void *)(a5 + 8) = v9;
  *(unsigned char *)(a5 + 16) = 0;
  *unint64_t v10 = 0;
  v10[1] = a2;
  v10[2] = *a3;
  uint64_t result = sub_2168BD80C(v10 + 2);
  void v10[3] = *a4;
  *(unsigned char *)(a5 + 16) = 1;
  return result;
}

void sub_216EDD9A0(_Unwind_Exception *a1)
{
  sub_216EDCBEC(v1, 0);
  _Unwind_Resume(a1);
}

void *sub_216EDD9B8(uint64_t a1, void *a2, void *a3, void *a4)
{
  unint64_t v6 = bswap64(0x9E3779B97F4A7C55 * ~*a2);
  unint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    uint8x8_t v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      unint64_t v4 = v6;
      if (v6 >= v7) {
        unint64_t v4 = v6 % v7;
      }
    }
    else
    {
      unint64_t v4 = (v7 - 1) & v6;
    }
    uint64_t v9 = *(void **)(*(void *)a1 + 8 * v4);
    if (v9)
    {
      unint64_t v10 = (void *)*v9;
      if (*v9)
      {
        do
        {
          unint64_t v11 = v10[1];
          if (v11 == v6)
          {
            if (v10[2] == *a2) {
              return v10;
            }
          }
          else
          {
            if (v8.u32[0] > 1uLL)
            {
              if (v11 >= v7) {
                v11 %= v7;
              }
            }
            else
            {
              v11 &= v7 - 1;
            }
            if (v11 != v4) {
              break;
            }
          }
          unint64_t v10 = (void *)*v10;
        }
        while (v10);
      }
    }
  }
  sub_216EDDC1C(a1, v6, a3, a4, (uint64_t)v21);
  float v12 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v13 = *(float *)(a1 + 32);
  if (!v7 || (float)(v13 * (float)v7) < v12)
  {
    BOOL v14 = 1;
    if (v7 >= 3) {
      BOOL v14 = (v7 & (v7 - 1)) != 0;
    }
    unint64_t v15 = v14 | (2 * v7);
    unint64_t v16 = vcvtps_u32_f32(v12 / v13);
    if (v15 <= v16) {
      size_t v17 = v16;
    }
    else {
      size_t v17 = v15;
    }
    sub_21678A04C(a1, v17);
    unint64_t v7 = *(void *)(a1 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v6 >= v7) {
        unint64_t v4 = v6 % v7;
      }
      else {
        unint64_t v4 = v6;
      }
    }
    else
    {
      unint64_t v4 = (v7 - 1) & v6;
    }
  }
  int v18 = *(void **)(*(void *)a1 + 8 * v4);
  if (v18)
  {
    *(void *)v21[0] = *v18;
    *int v18 = v21[0];
  }
  else
  {
    *(void *)v21[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v21[0];
    *(void *)(*(void *)a1 + 8 * v4) = a1 + 16;
    if (*(void *)v21[0])
    {
      unint64_t v19 = *(void *)(*(void *)v21[0] + 8);
      if ((v7 & (v7 - 1)) != 0)
      {
        if (v19 >= v7) {
          v19 %= v7;
        }
      }
      else
      {
        v19 &= v7 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v19) = v21[0];
    }
  }
  unint64_t v10 = (void *)v21[0];
  v21[0] = 0;
  ++*(void *)(a1 + 24);
  sub_216EDC7B4((uint64_t)v21, 0);
  return v10;
}

void sub_216EDDC04(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216EDC7B4((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_216EDDC1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9 = a1 + 16;
  unint64_t v10 = operator new(0x20uLL);
  *(void *)a5 = v10;
  *(void *)(a5 + 8) = v9;
  *(unsigned char *)(a5 + 16) = 0;
  *unint64_t v10 = 0;
  v10[1] = a2;
  v10[2] = *a3;
  void v10[3] = *a4;
  uint64_t result = sub_2168BD80C(v10 + 3);
  *(unsigned char *)(a5 + 16) = 1;
  return result;
}

void sub_216EDDC8C(_Unwind_Exception *a1)
{
  sub_216EDC7B4(v1, 0);
  _Unwind_Resume(a1);
}

void *sub_216EDDCA4(void *a1, uint64_t a2, void *a3)
{
  sub_216EDDD10((uint64_t)a1, a2, a3, (uint64_t)v6);
  unint64_t v4 = sub_216EDD100(a1, v6[0]);
  v6[0] = 0;
  sub_216EDD354((uint64_t)v6, 0);
  return v4;
}

void sub_216EDDCF8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216EDD354((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_216EDDD10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 16;
  uint8x8_t v8 = operator new(0x28uLL);
  *(void *)a4 = v8;
  *(void *)(a4 + 8) = v7;
  *(unsigned char *)(a4 + 16) = 0;
  *uint8x8_t v8 = 0;
  v8[1] = 0;
  uint64_t v9 = sub_216EDDDB4((uint64_t)(v8 + 2), a2, a3);
  *(unsigned char *)(a4 + 16) = 1;
  uint64_t result = sub_216851B24(v9);
  v8[1] = bswap64(0x9E3779B97F4A7C55 * result);
  return result;
}

void sub_216EDDD9C(_Unwind_Exception *a1)
{
  sub_216EDD354(v1, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_216EDDDB4(uint64_t a1, uint64_t a2, void *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a1 + 16) = *a3;
  sub_2168BD80C((uint64_t *)(a1 + 16));
  return a1;
}

void sub_216EDDDF0(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void *)(v1 + 8);
  if (v3) {
    sub_217324248(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_216EDDE08(uint64_t *result, void *a2)
{
  uint64_t v3 = result;
  uint64_t v5 = *result;
  uint64_t v4 = result[1];
  uint64_t v6 = a2[1];
  if (v4 != *result)
  {
    uint64_t v7 = 0;
    do
    {
      *(void *)(v6 + v7 - 16) = *(void *)(v4 + v7 - 16);
      uint64_t result = (uint64_t *)sub_2168BD80C((uint64_t *)(v6 + v7 - 16));
      *(void *)(v6 + v7 - 8) = *(void *)(v4 + v7 - 8);
      v7 -= 16;
    }
    while (v4 + v7 != v5);
    v6 += v7;
  }
  a2[1] = v6;
  uint64_t v8 = *v3;
  *uint64_t v3 = v6;
  a2[1] = v8;
  uint64_t v9 = v3[1];
  v3[1] = a2[2];
  a2[2] = v9;
  uint64_t v10 = v3[2];
  v3[2] = a2[3];
  a2[3] = v10;
  *a2 = a2[1];
  return result;
}

void sub_216EDDEC4(_Unwind_Exception *exception_object)
{
  for (; v2; v2 += 16)
    sub_216E10FB8((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)(v1 + v2));
  _Unwind_Resume(exception_object);
}

uint64_t sub_216EDDEE4(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 16;
    sub_216E10FB8((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)(i - 16));
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_216EDDF34(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = (void *)(a1 + 80);
  uint64_t v4 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_216D57D70(a2);
  pxrInternal__aapl__pxrReserved__::UsdStage::GetRootLayer(v4, (uint64_t *)&v12);
  uint64_t v5 = sub_216EDE18C(v3, (uint64_t)&v12);
  uint64_t v7 = v6;
  uint64_t v8 = v13;
  if (v13 && atomic_fetch_add_explicit((atomic_uint *volatile)v13 + 2, 0xFFFFFFFF, memory_order_release) == 1) {
    (*(void (**)(const char *))(*(void *)v8 + 8))(v8);
  }
  if (v5 != v7)
  {
    while (v5[4] != *a2)
    {
      uint64_t v5 = (void *)*v5;
      if (v5 == v7) {
        goto LABEL_10;
      }
    }
  }
  if (v5 == v7)
  {
LABEL_10:
    float v12 = "usd/stageCache.cpp";
    float v13 = "_EraseRootLayerEntry";
    uint64_t v14 = 186;
    unint64_t v15 = "void pxrInternal__aapl__pxrReserved__::(anonymous namespace)::StageContainer::_EraseRootLayerEntry(const UsdStageRefPtr &)";
    char v16 = 0;
    pxrInternal__aapl__pxrReserved__::UsdDescribe((pxrInternal__aapl__pxrReserved__ **)a2, __p);
    if (v11 >= 0) {
      uint64_t v9 = __p;
    }
    else {
      uint64_t v9 = (void **)__p[0];
    }
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v12, 1, (pxrInternal__aapl__pxrReserved__ *)"Internal StageCache is out of sync.Cannot find root layer entry for stage '%s'.Skipping erase of incomplete element.", (const char *)v9);
    if (v11 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    sub_216851DB0(v3, v5, (uint64_t)&v12);
    sub_216EDD354((uint64_t)&v12, 0);
  }
}

void sub_216EDE08C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_216EDE0BC(void *a1, void *a2)
{
  int8x8_t v2 = (int8x8_t)a1[1];
  if (!*(void *)&v2) {
    return 0;
  }
  unint64_t v3 = bswap64(0x9E3779B97F4A7C55 * ~*a2);
  uint8x8_t v4 = (uint8x8_t)vcnt_s8(v2);
  v4.i16[0] = vaddlv_u8(v4);
  if (v4.u32[0] > 1uLL)
  {
    unint64_t v5 = v3;
    if (v3 >= *(void *)&v2) {
      unint64_t v5 = v3 % *(void *)&v2;
    }
  }
  else
  {
    unint64_t v5 = (*(void *)&v2 - 1) & v3;
  }
  uint64_t v6 = *(void **)(*a1 + 8 * v5);
  if (!v6) {
    return 0;
  }
  uint64_t result = (void *)*v6;
  if (*v6)
  {
    do
    {
      unint64_t v8 = result[1];
      if (v8 == v3)
      {
        if (result[2] == *a2) {
          return result;
        }
      }
      else
      {
        if (v4.u32[0] > 1uLL)
        {
          if (v8 >= *(void *)&v2) {
            v8 %= *(void *)&v2;
          }
        }
        else
        {
          v8 &= *(void *)&v2 - 1;
        }
        if (v8 != v5) {
          return 0;
        }
      }
      uint64_t result = (void *)*result;
    }
    while (result);
  }
  return result;
}

void *sub_216EDE18C(void *a1, uint64_t a2)
{
  unint64_t v3 = sub_216851C48(a1, a2);
  uint8x8_t v4 = v3;
  if (v3)
  {
    unint64_t v5 = v3;
    do
    {
      unint64_t v5 = (void *)*v5;
      if (!v5) {
        break;
      }
      uint64_t v6 = sub_216851B24((uint64_t)(v5 + 2));
    }
    while (v6 == sub_216851B24(a2));
  }
  return v4;
}

uint64_t sub_216EDE1F8(void *a1, void *a2)
{
  uint64_t result = (uint64_t)sub_2168503EC(a1, a2);
  if (result)
  {
    sub_216851DB0(a1, (void *)result, (uint64_t)v4);
    sub_216EDCBEC((uint64_t)v4, 0);
    return 1;
  }
  return result;
}

uint64_t sub_216EDE248(void *a1, void *a2)
{
  uint64_t result = (uint64_t)sub_216EDE0BC(a1, a2);
  if (result)
  {
    sub_216851DB0(a1, (void *)result, (uint64_t)v4);
    sub_216EDC7B4((uint64_t)v4, 0);
    return 1;
  }
  return result;
}

uint64_t sub_216EDE298(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  unint64_t v6 = a1[2];
  uint64_t v7 = (uint64_t *)a1[1];
  if ((unint64_t)v7 >= v6)
  {
    uint64_t v11 = ((uint64_t)v7 - *a1) >> 4;
    if ((unint64_t)(v11 + 1) >> 60) {
      sub_21677CB10();
    }
    uint64_t v12 = v6 - *a1;
    uint64_t v13 = v12 >> 3;
    if (v12 >> 3 <= (unint64_t)(v11 + 1)) {
      uint64_t v13 = v11 + 1;
    }
    if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v14 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v14 = v13;
    }
    uint64_t v21 = a1 + 2;
    if (v14)
    {
      if (v14 >> 60) {
        sub_21677CA1C();
      }
      unint64_t v15 = (char *)operator new(16 * v14);
    }
    else
    {
      unint64_t v15 = 0;
    }
    char v16 = (uint64_t *)&v15[16 * v11];
    v18[0] = v15;
    v18[1] = v16;
    unint64_t v19 = v16;
    unint64_t v20 = &v15[16 * v14];
    uint64_t v17 = *a3;
    uint64_t *v16 = *a2;
    sub_2168BD80C(v16);
    v16[1] = v17;
    v19 += 2;
    sub_216EDDE08(a1, v18);
    uint64_t v10 = (uint64_t *)a1[1];
    uint64_t result = sub_216EDDEE4((uint64_t)v18);
  }
  else
  {
    uint64_t v8 = *a3;
    *uint64_t v7 = *a2;
    uint64_t result = sub_2168BD80C(v7);
    v7[1] = v8;
    uint64_t v10 = v7 + 2;
    a1[1] = (uint64_t)(v7 + 2);
  }
  a1[1] = (uint64_t)v10;
  return result;
}

void sub_216EDE3C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  *(void *)(v10 + 8) = v11;
  _Unwind_Resume(exception_object);
}

void sub_216EDE3E0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    if (*(char *)(a2 + 167) < 0) {
      operator delete(*(void **)(a2 + 144));
    }
    unint64_t v3 = *(void **)(a2 + 120);
    if (v3)
    {
      *(void *)(a2 + 128) = v3;
      operator delete(v3);
    }
    sub_216EDD42C(a2 + 80);
    sub_216EDCC44(a2 + 40);
    uint8x8_t v4 = (void *)sub_216EDC80C(a2);
    operator delete(v4);
  }
}

void *sub_216EDE450(void *a1, unint64_t a2)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_21677CACC(a1, a2);
    uint8x8_t v4 = (char *)a1[1];
    bzero(v4, 8 * a2);
    a1[1] = &v4[8 * a2];
  }
  return a1;
}

void sub_216EDE4BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

void sub_216EDE4D0(void ***a1)
{
  uint64_t v1 = *a1;
  int8x8_t v2 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)**a1;
  if (v2)
  {
    uint8x8_t v4 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)v1[1];
    unint64_t v5 = v2;
    if (v4 != v2)
    {
      do
        uint8x8_t v4 = sub_216E10FB8(v4 - 1);
      while (v4 != v2);
      unint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void *sub_216EDE554(void *a1, void *a2)
{
  int8x8_t v2 = (int8x8_t)a1[1];
  if (!*(void *)&v2) {
    return 0;
  }
  unint64_t v3 = bswap64(0x9E3779B97F4A7C55 * ~*a2);
  uint8x8_t v4 = (uint8x8_t)vcnt_s8(v2);
  v4.i16[0] = vaddlv_u8(v4);
  if (v4.u32[0] > 1uLL)
  {
    unint64_t v5 = v3;
    if (v3 >= *(void *)&v2) {
      unint64_t v5 = v3 % *(void *)&v2;
    }
  }
  else
  {
    unint64_t v5 = (*(void *)&v2 - 1) & v3;
  }
  unint64_t v6 = *(void **)(*a1 + 8 * v5);
  if (!v6) {
    return 0;
  }
  uint64_t result = (void *)*v6;
  if (*v6)
  {
    do
    {
      unint64_t v8 = result[1];
      if (v3 == v8)
      {
        if (result[2] == *a2) {
          return result;
        }
      }
      else
      {
        if (v4.u32[0] > 1uLL)
        {
          if (v8 >= *(void *)&v2) {
            v8 %= *(void *)&v2;
          }
        }
        else
        {
          v8 &= *(void *)&v2 - 1;
        }
        if (v8 != v5) {
          return 0;
        }
      }
      uint64_t result = (void *)*result;
    }
    while (result);
  }
  return result;
}

void *sub_216EDE624(void *a1, uint64_t a2)
{
  unint64_t v3 = sub_216BC1328(a1, a2);
  uint8x8_t v4 = v3;
  if (v3)
  {
    unint64_t v5 = v3;
    do
    {
      unint64_t v5 = (void *)*v5;
      if (!v5) {
        break;
      }
      uint64_t v6 = sub_216851B24((uint64_t)(v5 + 2));
    }
    while (v6 == sub_216851B24(a2));
  }
  return v4;
}

uint64_t sub_216EDE690(uint64_t *a1, void *a2)
{
  uint64_t result = sub_216EDE708((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_216EDE708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10 = 0;
  uint64_t v11 = a7 - 8;
  while (a3 + v10 != a5)
  {
    uint64_t v12 = (uint64_t *)(v11 + v10);
    uint64_t *v12 = *(void *)(a3 + v10 - 8);
    v10 -= 8;
    sub_2168BD80C(v12);
  }
  return a6;
}

uint64_t sub_216EDE7A0(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 8;
    sub_216E10FB8((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)(i - 8));
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_216EDE7F0()
{
  sub_216779094(v3, "UsdBlockStageCaches");
  long long __p = 0;
  uint64_t v1 = 0;
  uint64_t v2 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((uint64_t)&unk_26C76BCF0, 0, (uint64_t)v3, (uint64_t)&__p);
  if (SHIBYTE(v2) < 0) {
    operator delete(__p);
  }
  if (v4 < 0) {
    operator delete(v3[0]);
  }
  sub_216779094(v3, "UsdBlockStageCachePopulation");
  long long __p = 0;
  uint64_t v1 = 0;
  uint64_t v2 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((uint64_t)&unk_26C76BCF0, 1, (uint64_t)v3, (uint64_t)&__p);
  if (SHIBYTE(v2) < 0) {
    operator delete(__p);
  }
  if (v4 < 0) {
    operator delete(v3[0]);
  }
  sub_216779094(v3, "Usd_NoBlock");
  long long __p = 0;
  uint64_t v1 = 0;
  uint64_t v2 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((uint64_t)&unk_26C76BCF0, 2, (uint64_t)v3, (uint64_t)&__p);
  if (SHIBYTE(v2) < 0) {
    operator delete(__p);
  }
  if (v4 < 0) {
    operator delete(v3[0]);
  }
}

void sub_216EDE904(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdStageCacheContext::_GetReadOnlyCaches(char **a1@<X8>)
{
  uint64_t v3 = (uint64_t *)sub_216EDED88();
  a1[1] = 0;
  a1[2] = 0;
  *a1 = 0;
  sub_2168265D4((void **)a1, (v3[1] - *v3) >> 3);
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v5 != *v3)
  {
    do
    {
      uint64_t v7 = *(void *)(v5 - 8);
      v5 -= 8;
      uint64_t v6 = v7;
      int v8 = *(_DWORD *)(v7 + 12);
      if (v8 != 1)
      {
        if (!v8) {
          return;
        }
        if (*(unsigned char *)(v6 + 8))
        {
          uint64_t v10 = a1[1];
          unint64_t v9 = (unint64_t)a1[2];
          if ((unint64_t)v10 >= v9)
          {
            uint64_t v12 = (v10 - *a1) >> 3;
            if ((unint64_t)(v12 + 1) >> 61) {
              sub_21677CB10();
            }
            uint64_t v13 = v9 - (void)*a1;
            uint64_t v14 = v13 >> 2;
            if (v13 >> 2 <= (unint64_t)(v12 + 1)) {
              uint64_t v14 = v12 + 1;
            }
            if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF8) {
              unint64_t v15 = 0x1FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v15 = v14;
            }
            if (v15) {
              char v16 = (char *)sub_21677CB28((uint64_t)(a1 + 2), v15);
            }
            else {
              char v16 = 0;
            }
            uint64_t v17 = &v16[8 * v12];
            *(void *)uint64_t v17 = *(void *)v6;
            uint64_t v11 = v17 + 8;
            unint64_t v19 = *a1;
            int v18 = a1[1];
            if (v18 != *a1)
            {
              do
              {
                uint64_t v20 = *((void *)v18 - 1);
                v18 -= 8;
                *((void *)v17 - 1) = v20;
                v17 -= 8;
              }
              while (v18 != v19);
              int v18 = *a1;
            }
            *a1 = v17;
            a1[1] = v11;
            a1[2] = &v16[8 * v15];
            if (v18) {
              operator delete(v18);
            }
          }
          else
          {
            *(void *)uint64_t v10 = *(void *)v6;
            uint64_t v11 = v10 + 8;
          }
          a1[1] = v11;
          uint64_t v4 = *v3;
        }
      }
    }
    while (v5 != v4);
  }
}

void sub_216EDEA88(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdStageCacheContext::_GetReadableCaches(char **a1@<X8>)
{
  uint64_t v3 = (uint64_t *)sub_216EDED88();
  a1[1] = 0;
  a1[2] = 0;
  *a1 = 0;
  sub_2168265D4((void **)a1, (v3[1] - *v3) >> 3);
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v5 != *v3)
  {
    do
    {
      uint64_t v7 = *(void *)(v5 - 8);
      v5 -= 8;
      uint64_t v6 = (void *)v7;
      int v8 = *(_DWORD *)(v7 + 12);
      if (v8 != 1)
      {
        if (!v8) {
          return;
        }
        uint64_t v10 = a1[1];
        unint64_t v9 = (unint64_t)a1[2];
        if ((unint64_t)v10 >= v9)
        {
          uint64_t v12 = (v10 - *a1) >> 3;
          if ((unint64_t)(v12 + 1) >> 61) {
            sub_21677CB10();
          }
          uint64_t v13 = v9 - (void)*a1;
          uint64_t v14 = v13 >> 2;
          if (v13 >> 2 <= (unint64_t)(v12 + 1)) {
            uint64_t v14 = v12 + 1;
          }
          if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v15 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v15 = v14;
          }
          if (v15) {
            char v16 = (char *)sub_21677CB28((uint64_t)(a1 + 2), v15);
          }
          else {
            char v16 = 0;
          }
          uint64_t v17 = &v16[8 * v12];
          *(void *)uint64_t v17 = *v6;
          uint64_t v11 = v17 + 8;
          unint64_t v19 = *a1;
          int v18 = a1[1];
          if (v18 != *a1)
          {
            do
            {
              uint64_t v20 = *((void *)v18 - 1);
              v18 -= 8;
              *((void *)v17 - 1) = v20;
              v17 -= 8;
            }
            while (v18 != v19);
            int v18 = *a1;
          }
          *a1 = v17;
          a1[1] = v11;
          a1[2] = &v16[8 * v15];
          if (v18) {
            operator delete(v18);
          }
        }
        else
        {
          *(void *)uint64_t v10 = *v6;
          uint64_t v11 = v10 + 8;
        }
        a1[1] = v11;
        uint64_t v4 = *v3;
      }
    }
    while (v5 != v4);
  }
}

void sub_216EDEBF4(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdStageCacheContext::_GetWritableCaches(char **a1@<X8>)
{
  uint64_t v3 = (uint64_t *)sub_216EDED88();
  a1[1] = 0;
  a1[2] = 0;
  *a1 = 0;
  sub_2168265D4((void **)a1, (v3[1] - *v3) >> 3);
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v5 != *v3)
  {
    do
    {
      uint64_t v7 = *(void *)(v5 - 8);
      v5 -= 8;
      uint64_t v6 = v7;
      if (*(_DWORD *)(v7 + 12) < 2u) {
        break;
      }
      if (!*(unsigned char *)(v6 + 8))
      {
        unint64_t v9 = a1[1];
        unint64_t v8 = (unint64_t)a1[2];
        if ((unint64_t)v9 >= v8)
        {
          uint64_t v11 = (v9 - *a1) >> 3;
          if ((unint64_t)(v11 + 1) >> 61) {
            sub_21677CB10();
          }
          uint64_t v12 = v8 - (void)*a1;
          uint64_t v13 = v12 >> 2;
          if (v12 >> 2 <= (unint64_t)(v11 + 1)) {
            uint64_t v13 = v11 + 1;
          }
          if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v14 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v14 = v13;
          }
          if (v14) {
            unint64_t v15 = (char *)sub_21677CB28((uint64_t)(a1 + 2), v14);
          }
          else {
            unint64_t v15 = 0;
          }
          char v16 = &v15[8 * v11];
          *(void *)char v16 = *(void *)v6;
          uint64_t v10 = v16 + 8;
          int v18 = *a1;
          uint64_t v17 = a1[1];
          if (v17 != *a1)
          {
            do
            {
              uint64_t v19 = *((void *)v17 - 1);
              v17 -= 8;
              *((void *)v16 - 1) = v19;
              v16 -= 8;
            }
            while (v17 != v18);
            uint64_t v17 = *a1;
          }
          *a1 = v16;
          a1[1] = v10;
          a1[2] = &v15[8 * v14];
          if (v17) {
            operator delete(v17);
          }
        }
        else
        {
          *(void *)unint64_t v9 = *(void *)v6;
          uint64_t v10 = v9 + 8;
        }
        a1[1] = v10;
        uint64_t v4 = *v3;
      }
    }
    while (v5 != v4);
  }
}

void sub_216EDED64(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_216EDED88()
{
  if (!atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::Tf_ExportedStackedStorage<pxrInternal__aapl__pxrReserved__::UsdStageCacheContext,true>::value))
  {
    uint64_t v2 = operator new(0x60uLL);
    sub_216EDEE24(v2);
    uint64_t v3 = 0;
    atomic_compare_exchange_strong(&pxrInternal__aapl__pxrReserved__::Tf_ExportedStackedStorage<pxrInternal__aapl__pxrReserved__::UsdStageCacheContext,true>::value, (unint64_t *)&v3, (unint64_t)v2);
    if (v3)
    {
      uint64_t v4 = sub_216EDF0B0(v2);
      operator delete(v4);
    }
  }
  char v5 = 0;
  uint64_t result = sub_2168520EC((atomic_ullong *)pxrInternal__aapl__pxrReserved__::Tf_ExportedStackedStorage<pxrInternal__aapl__pxrReserved__::UsdStageCacheContext,true>::value, &v5);
  if (!*(unsigned char *)(result + 24)) {
    *(unsigned char *)(result + 24) = 1;
  }
  return result;
}

void sub_216EDEE10(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_216EDEE24(void *a1)
{
  *a1 = &unk_26C74B518;
  __dmb(0xBu);
  a1[1] = 0;
  __dmb(0xBu);
  a1[2] = 0;
  *a1 = &unk_26C76BD10;
  uint64_t v2 = (void *)tbb::internal::allocate_via_handler_v3((tbb::internal *)8);
  *uint64_t v2 = &unk_26C76BD70;
  a1[3] = v2;
  for (uint64_t i = 9; i != 12; ++i)
    a1[i] = 0;
  a1[7] = 0;
  a1[6] = 0;
  a1[8] = a1 + 9;
  a1[5] = sub_216EDF090;
  return a1;
}

void sub_216EDEEF0(_Unwind_Exception *a1)
{
  *uint64_t v1 = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_216EDEEF8(uint64_t a1)
{
  uint64_t v2 = tbb::internal::concurrent_vector_base_v3::internal_grow_by((atomic_ullong *)(a1 + 40), 1uLL, (void *)0x80, (void (*)(void *, const void *, unint64_t))tbb::concurrent_vector<tbb::internal::padded<tbb::interface6::internal::ets_element<pxrInternal__aapl__pxrReserved__::Tf_StackedStorageType<pxrInternal__aapl__pxrReserved__::UsdStageCacheContext,true>::_StackHolder>,128ul>,tbb::cache_aligned_allocator<tbb::internal::padded<tbb::interface6::internal::ets_element<pxrInternal__aapl__pxrReserved__::Tf_StackedStorageType<pxrInternal__aapl__pxrReserved__::UsdStageCacheContext,true>::_StackHolder>,128ul>>>::initialize_array, 0);
  unint64_t v3 = sub_216851020((unint64_t)v2);
  uint64_t v4 = *(void *)(a1 + 64);
  __dmb(0xBu);
  uint64_t v5 = *(void *)(v4 + 8 * v3) + (((void)v2 - ((1 << v3) & 0x1FFFFFFFFFFFFFELL)) << 7);
  (*(void (**)(void, uint64_t))(**(void **)(a1 + 24) + 32))(*(void *)(a1 + 24), v5);
  *(unsigned char *)(v5 + 32) = 1;
  return v5;
}

uint64_t sub_216EDEFA0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return tbb::internal::NFS_Allocate((unint64_t)(a2 + 7) >> 3, 8, 0, a4);
}

uint64_t sub_216EDEFB4(int a1, tbb::internal *this)
{
  return tbb::internal::NFS_Free(this, this);
}

void sub_216EDEFC0(void *a1)
{
  uint64_t v1 = sub_216EDF0B0(a1);

  operator delete(v1);
}

void *sub_216EDEFE8()
{
  uint64_t result = (void *)tbb::internal::allocate_via_handler_v3((tbb::internal *)8);
  *uint64_t result = &unk_26C76BD70;
  return result;
}

uint64_t sub_216EDF020(uint64_t a1)
{
  (*(void (**)(uint64_t))(*(void *)a1 + 16))(a1);

  return tbb::internal::deallocate_via_handler_v3(a1, v2);
}

void sub_216EDF080(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 24) = 0;
  *(void *)(a2 + 16) = 0;
}

uint64_t sub_216EDF090(int a1, tbb::internal *this, uint64_t a3, void *a4)
{
  return tbb::internal::NFS_Allocate((unint64_t)this, 128, 0, a4);
}

void tbb::concurrent_vector<tbb::internal::padded<tbb::interface6::internal::ets_element<pxrInternal__aapl__pxrReserved__::Tf_StackedStorageType<pxrInternal__aapl__pxrReserved__::UsdStageCacheContext,true>::_StackHolder>,128ul>,tbb::cache_aligned_allocator<tbb::internal::padded<tbb::interface6::internal::ets_element<pxrInternal__aapl__pxrReserved__::Tf_StackedStorageType<pxrInternal__aapl__pxrReserved__::UsdStageCacheContext,true>::_StackHolder>,128ul>>>::initialize_array(void *a1, uint64_t a2, uint64_t a3)
{
  if (a3) {
    bzero(a1, a3 << 7);
  }
}

void *sub_216EDF0B0(void *a1)
{
  *a1 = &unk_26C76BD10;
  uint64_t v2 = a1[3];
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  sub_216850D6C((uint64_t)a1);
  sub_216EDF14C(a1 + 4);
  *a1 = &unk_26C74B518;
  return a1;
}

unint64_t *sub_216EDF14C(unint64_t *a1)
{
  uint64_t v2 = (tbb::internal::concurrent_vector_base_v3 *)(a1 + 1);
  unint64_t v3 = (void *)a1[4];
  unint64_t v4 = tbb::internal::concurrent_vector_base_v3::internal_clear((tbb::internal::concurrent_vector_base_v3 *)(a1 + 1), (void (*)(void *, unint64_t))tbb::concurrent_vector<tbb::internal::padded<tbb::interface6::internal::ets_element<pxrInternal__aapl__pxrReserved__::Tf_StackedStorageType<pxrInternal__aapl__pxrReserved__::UsdStageCacheContext,true>::_StackHolder>,128ul>,tbb::cache_aligned_allocator<tbb::internal::padded<tbb::interface6::internal::ets_element<pxrInternal__aapl__pxrReserved__::Tf_StackedStorageType<pxrInternal__aapl__pxrReserved__::UsdStageCacheContext,true>::_StackHolder>,128ul>>>::destroy_array);
  sub_216850F48((uint64_t)a1, v3, v4, a1[2]);
  tbb::internal::concurrent_vector_base_v3::~concurrent_vector_base_v3(v2, v5);
  return a1;
}

void tbb::concurrent_vector<tbb::internal::padded<tbb::interface6::internal::ets_element<pxrInternal__aapl__pxrReserved__::Tf_StackedStorageType<pxrInternal__aapl__pxrReserved__::UsdStageCacheContext,true>::_StackHolder>,128ul>,tbb::cache_aligned_allocator<tbb::internal::padded<tbb::interface6::internal::ets_element<pxrInternal__aapl__pxrReserved__::Tf_StackedStorageType<pxrInternal__aapl__pxrReserved__::UsdStageCacheContext,true>::_StackHolder>,128ul>>>::destroy_array(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v2 = a2;
    uint64_t v3 = a1 + (a2 << 7) - 128;
    do
    {
      if (*(unsigned char *)(v3 + 32))
      {
        unint64_t v4 = *(void **)v3;
        if (*(void *)v3)
        {
          *(void *)(v3 + 8) = v4;
          operator delete(v4);
        }
        *(unsigned char *)(v3 + 32) = 0;
      }
      v3 -= 128;
      --v2;
    }
    while (v2);
  }
}

void sub_216EDF210()
{
  sub_216779094(v3, "UsdStageLoadRules::AllRule");
  long long __p = 0;
  uint64_t v1 = 0;
  uint64_t v2 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((uint64_t)&unk_26C76BDF8, 0, (uint64_t)v3, (uint64_t)&__p);
  if (SHIBYTE(v2) < 0) {
    operator delete(__p);
  }
  if (v4 < 0) {
    operator delete(v3[0]);
  }
  sub_216779094(v3, "UsdStageLoadRules::OnlyRule");
  long long __p = 0;
  uint64_t v1 = 0;
  uint64_t v2 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((uint64_t)&unk_26C76BDF8, 1, (uint64_t)v3, (uint64_t)&__p);
  if (SHIBYTE(v2) < 0) {
    operator delete(__p);
  }
  if (v4 < 0) {
    operator delete(v3[0]);
  }
  sub_216779094(v3, "UsdStageLoadRules::NoneRule");
  long long __p = 0;
  uint64_t v1 = 0;
  uint64_t v2 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((uint64_t)&unk_26C76BDF8, 2, (uint64_t)v3, (uint64_t)&__p);
  if (SHIBYTE(v2) < 0) {
    operator delete(__p);
  }
  if (v4 < 0) {
    operator delete(v3[0]);
  }
}

void sub_216EDF324(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStageLoadRules::LoadNone@<X0>(pxrInternal__aapl__pxrReserved__::UsdStageLoadRules *this@<X0>, uint64_t *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  uint64_t v3 = (_DWORD *)pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath(this);
  v6[0] = 2;
  unint64_t v4 = a2[1];
  if (v4 >= a2[2])
  {
    uint64_t result = sub_216EE03D8(a2, v3, v6);
  }
  else
  {
    sub_216981010((_DWORD *)a2[1], v3);
    sub_21698105C((_DWORD *)(v4 + 4), v3 + 1);
    *(_DWORD *)(v4 + 8) = 2;
    uint64_t result = v4 + 12;
  }
  a2[1] = result;
  return result;
}

void sub_216EDF3E4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216CF4B9C((void ***)va);
  _Unwind_Resume(a1);
}

_DWORD *pxrInternal__aapl__pxrReserved__::UsdStageLoadRules::LoadWithDescendants(char **this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  unint64_t v4 = (int *)sub_216EDF4C0(*this, this[1], a2);
  uint64_t v6 = sub_216CF8AC8((uint64_t)this, v4, v5);
  sub_216981010(&v8, a2);
  sub_21698105C(v9, (_DWORD *)a2 + 1);
  v9[1] = 0;
  sub_216EDF5BC((uint64_t *)this, v6, &v8);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v9);
  return sub_21697C414(&v8);
}

void sub_216EDF4AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
}

char *sub_216EDF4C0(char *a1, char *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3)
{
  uint64_t v3 = a2;
  if (a2 != a1)
  {
    uint64_t v5 = a1;
    unint64_t v6 = 0xAAAAAAAAAAAAAAABLL * ((a2 - a1) >> 2);
    do
    {
      uint64_t v7 = (pxrInternal__aapl__pxrReserved__::SdfPath *)&v5[12 * (v6 >> 1)];
      int v8 = sub_2169817E8(v7, a3);
      if (v8) {
        v6 += ~(v6 >> 1);
      }
      else {
        v6 >>= 1;
      }
      if (v8) {
        uint64_t v5 = (char *)v7 + 12;
      }
    }
    while (v6);
    if (v5 != v3)
    {
      unint64_t v9 = 0xAAAAAAAAAAAAAAABLL * ((v3 - v5) >> 2);
      uint64_t v10 = v5;
      do
      {
        if (pxrInternal__aapl__pxrReserved__::SdfPath::HasPrefix((pxrInternal__aapl__pxrReserved__::SdfPath *)&v10[12 * (v9 >> 1)], a3))
        {
          v10 += 12 * (v9 >> 1) + 12;
          v9 += ~(v9 >> 1);
        }
        else
        {
          v9 >>= 1;
        }
      }
      while (v9);
      return v5;
    }
  }
  return v3;
}

int *sub_216EDF5BC(uint64_t *a1, int *a2, int *a3)
{
  unint64_t v4 = a2;
  uint64_t v7 = *a1;
  unint64_t v6 = a1[1];
  unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)a2 - *a1) >> 2);
  unint64_t v11 = a1[2];
  uint64_t v9 = (uint64_t)(a1 + 2);
  unint64_t v10 = v11;
  if (v6 >= v11)
  {
    unint64_t v12 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v6 - v7) >> 2) + 1;
    if (v12 > 0x1555555555555555) {
      sub_21677CB10();
    }
    unint64_t v13 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v10 - v7) >> 2);
    if (2 * v13 > v12) {
      unint64_t v12 = 2 * v13;
    }
    if (v13 >= 0xAAAAAAAAAAAAAAALL) {
      unint64_t v14 = 0x1555555555555555;
    }
    else {
      unint64_t v14 = v12;
    }
    uint64_t v21 = v9;
    if (v14) {
      unint64_t v15 = (char *)sub_216B0D05C(v9, v14);
    }
    else {
      unint64_t v15 = 0;
    }
    uint64_t v17 = v15;
    int v18 = &v15[12 * v8];
    uint64_t v19 = v18;
    uint64_t v20 = &v15[12 * v14];
    sub_216EE056C(&v17, a3);
    unint64_t v4 = (int *)sub_216CF8FF8((uint64_t)a1, &v17, v4);
    sub_216CF93B0(&v17);
  }
  else if (a2 == (int *)v6)
  {
    sub_21697D878(a2, a3);
    sub_21697D8B4(v4 + 1, a3 + 1);
    *(_DWORD *)(v7 + 12 * v8 + 8) = a3[2];
    a1[1] = (uint64_t)(v4 + 3);
  }
  else
  {
    sub_216CF8DCC((uint64_t)a1, (uint64_t)a2, v6, (uint64_t)(a2 + 3));
    sub_21697DE94(v4, a3);
    sub_21697DEEC(v4 + 1, a3 + 1);
    *(_DWORD *)(v7 + 12 * v8 + 8) = a3[2];
  }
  return v4;
}

void sub_216EDF744(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216CF93B0((void **)va);
  _Unwind_Resume(a1);
}

_DWORD *sub_216EDF758(_DWORD *a1)
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(a1 + 1);

  return sub_21697C414(a1);
}

_DWORD *pxrInternal__aapl__pxrReserved__::UsdStageLoadRules::LoadWithoutDescendants(char **this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  unint64_t v4 = (int *)sub_216EDF4C0(*this, this[1], a2);
  unint64_t v6 = sub_216CF8AC8((uint64_t)this, v4, v5);
  sub_216981010(&v8, a2);
  sub_21698105C(v9, (_DWORD *)a2 + 1);
  v9[1] = 1;
  sub_216EDF5BC((uint64_t *)this, v6, &v8);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v9);
  return sub_21697C414(&v8);
}

void sub_216EDF848(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
}

int *pxrInternal__aapl__pxrReserved__::UsdStageLoadRules::Unload(char **this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  unint64_t v4 = (int *)sub_216EDF4C0(*this, this[1], a2);
  unint64_t v6 = sub_216CF8AC8((uint64_t)this, v4, v5);
  int v8 = 2;
  return sub_216CF8B58((uint64_t *)this, v6, a2, &v8);
}

int *pxrInternal__aapl__pxrReserved__::UsdStageLoadRules::LoadAndUnload(int *this, void *a2, void *a3, int a4)
{
  unint64_t v6 = (char **)this;
  uint64_t v7 = a3 + 1;
  int v8 = (void *)*a3;
  if ((void *)*a3 != a3 + 1)
  {
    do
    {
      this = pxrInternal__aapl__pxrReserved__::UsdStageLoadRules::Unload(v6, (const pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v8 + 28));
      uint64_t v9 = (void *)v8[1];
      if (v9)
      {
        do
        {
          unint64_t v10 = v9;
          uint64_t v9 = (void *)*v9;
        }
        while (v9);
      }
      else
      {
        do
        {
          unint64_t v10 = (void *)v8[2];
          BOOL v11 = *v10 == (void)v8;
          int v8 = v10;
        }
        while (!v11);
      }
      int v8 = v10;
    }
    while (v10 != v7);
  }
  unint64_t v14 = (void *)*a2;
  unint64_t v12 = a2 + 1;
  unint64_t v13 = v14;
  if (v14 != v12)
  {
    do
    {
      unint64_t v15 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v13 + 28);
      if (a4 == 1)
      {
        this = pxrInternal__aapl__pxrReserved__::UsdStageLoadRules::LoadWithoutDescendants(v6, v15);
      }
      else if (!a4)
      {
        this = pxrInternal__aapl__pxrReserved__::UsdStageLoadRules::LoadWithDescendants(v6, v15);
      }
      char v16 = (void *)v13[1];
      if (v16)
      {
        do
        {
          uint64_t v17 = v16;
          char v16 = (void *)*v16;
        }
        while (v16);
      }
      else
      {
        do
        {
          uint64_t v17 = (void *)v13[2];
          BOOL v11 = *v17 == (void)v13;
          unint64_t v13 = v17;
        }
        while (!v11);
      }
      unint64_t v13 = v17;
    }
    while (v17 != v12);
  }
  return this;
}

int *pxrInternal__aapl__pxrReserved__::UsdStageLoadRules::AddRule(uint64_t a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, int a3)
{
  int v7 = a3;
  uint64_t result = (int *)pxrInternal__aapl__pxrReserved__::UsdStageLoadRules::_LowerBound((char **)a1, a2);
  if (*(int **)(a1 + 8) == result || *(void *)result != *(void *)a2) {
    return sub_216CF8B58((uint64_t *)a1, result, a2, &v7);
  }
  result[2] = a3;
  return result;
}

char *pxrInternal__aapl__pxrReserved__::UsdStageLoadRules::_LowerBound(char **this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  uint64_t v3 = *this;
  uint64_t result = this[1];
  if (result != v3)
  {
    unint64_t v5 = 0xAAAAAAAAAAAAAAABLL * ((result - v3) >> 2);
    do
    {
      unint64_t v6 = (pxrInternal__aapl__pxrReserved__::SdfPath *)&v3[12 * (v5 >> 1)];
      int v7 = sub_2169817E8(v6, a2);
      if (v7) {
        v5 += ~(v5 >> 1);
      }
      else {
        v5 >>= 1;
      }
      if (v7) {
        uint64_t v3 = (char *)v6 + 12;
      }
    }
    while (v5);
    return v3;
  }
  return result;
}

{
  char *result;
  char *v3;
  unint64_t v5;
  pxrInternal__aapl__pxrReserved__::SdfPath *v6;
  int v7;

  uint64_t v3 = *this;
  uint64_t result = this[1];
  if (result != v3)
  {
    unint64_t v5 = 0xAAAAAAAAAAAAAAABLL * ((result - v3) >> 2);
    do
    {
      unint64_t v6 = (pxrInternal__aapl__pxrReserved__::SdfPath *)&v3[12 * (v5 >> 1)];
      int v7 = sub_2169817E8(v6, a2);
      if (v7) {
        v5 += ~(v5 >> 1);
      }
      else {
        v5 >>= 1;
      }
      if (v7) {
        uint64_t v3 = (char *)v6 + 12;
      }
    }
    while (v5);
    return v3;
  }
  return result;
}

_DWORD *pxrInternal__aapl__pxrReserved__::UsdStageLoadRules::SetRules(_DWORD *result, _DWORD **a2)
{
  if (result != (_DWORD *)a2) {
    return sub_216CF5EB0((uint64_t)result, *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * (a2[1] - *a2));
  }
  return result;
}

void pxrInternal__aapl__pxrReserved__::UsdStageLoadRules::Minimize(pxrInternal__aapl__pxrReserved__::UsdStageLoadRules *this)
{
  uint64_t v2 = *(_DWORD **)this;
  uint64_t v1 = (_DWORD *)*((void *)this + 1);
  if (*(_DWORD **)this != v1)
  {
    if (!v2[2])
    {
      unint64_t v4 = (void *)pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath(this);
      uint64_t v5 = *(void *)v2;
      uint64_t v2 = *(_DWORD **)this;
      uint64_t v1 = (_DWORD *)*((void *)this + 1);
      if (v5 == *v4)
      {
        sub_216CF8D54((uint64_t)&__p, v2 + 3, *((int **)this + 1), *(int **)this);
        uint64_t v1 = v6;
        int v7 = (_DWORD *)*((void *)this + 1);
        if (v7 != v6)
        {
          do
          {
            v7 -= 3;
            sub_216CF4C34((uint64_t)this + 16, v7);
          }
          while (v7 != v1);
        }
        *((void *)this + 1) = v1;
        uint64_t v2 = *(_DWORD **)this;
      }
    }
    if (0xAAAAAAAAAAAAAAABLL * (v1 - v2) >= 2)
    {
      long long __p = 0;
      char v29 = 0;
      char v30 = 0;
      sub_216981010(&v26, v2);
      sub_21698105C(&v27, v2 + 1);
      uint64_t v8 = *(void *)this;
      if (*((void *)this + 1) != *(void *)this)
      {
        uint64_t v9 = 0;
        do
        {
          unint64_t v10 = (char *)__p;
          BOOL v11 = v29;
          if (__p == v29)
          {
LABEL_13:
            int v14 = 0;
            unint64_t v13 = v10;
          }
          else
          {
            while (1)
            {
              BOOL HasPrefix = pxrInternal__aapl__pxrReserved__::SdfPath::HasPrefix((pxrInternal__aapl__pxrReserved__::SdfPath *)(v8 + 12 * v9), (const pxrInternal__aapl__pxrReserved__::SdfPath *)(*(void *)this+ 12 * *((void *)v11 - 1)));
              unint64_t v10 = (char *)__p;
              unint64_t v13 = v29;
              if (HasPrefix) {
                break;
              }
              BOOL v11 = v29 - 8;
              v29 -= 8;
              if (__p == v13 - 8) {
                goto LABEL_13;
              }
            }
            if (__p == v29) {
              int v14 = 0;
            }
            else {
              int v14 = *(_DWORD *)(*(void *)this + 12 * *((void *)v29 - 1) + 8);
            }
          }
          if (*(_DWORD *)(v8 + 12 * v9 + 8) == v14)
          {
            sub_216CF8D54((uint64_t)&v31, (int *)(*(void *)this + 12 * v9 + 12), *((int **)this + 1), (int *)(*(void *)this + 12 * v9));
            char v16 = v15;
            for (uint64_t i = (_DWORD *)*((void *)this + 1); i != v16; sub_216CF4C34((uint64_t)this + 16, i))
              i -= 3;
            *((void *)this + 1) = v16;
            --v9;
          }
          else
          {
            if (v13 >= v30)
            {
              uint64_t v19 = (v13 - v10) >> 3;
              unint64_t v20 = v19 + 1;
              if ((unint64_t)(v19 + 1) >> 61) {
                sub_21677CB10();
              }
              uint64_t v21 = v30 - v10;
              if ((v30 - v10) >> 2 > v20) {
                unint64_t v20 = v21 >> 2;
              }
              if ((unint64_t)v21 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v22 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v22 = v20;
              }
              if (v22)
              {
                int v23 = (char *)sub_21677CB28((uint64_t)&v30, v22);
                unint64_t v10 = (char *)__p;
                unint64_t v13 = v29;
              }
              else
              {
                int v23 = 0;
              }
              unsigned __int8 v24 = &v23[8 * v19];
              *(void *)unsigned __int8 v24 = v9;
              int v18 = v24 + 8;
              while (v13 != v10)
              {
                uint64_t v25 = *((void *)v13 - 1);
                v13 -= 8;
                *((void *)v24 - 1) = v25;
                v24 -= 8;
              }
              long long __p = v24;
              char v29 = v18;
              char v30 = &v23[8 * v22];
              if (v10) {
                operator delete(v10);
              }
            }
            else
            {
              *(void *)unint64_t v13 = v9;
              int v18 = v13 + 8;
            }
            char v29 = v18;
            char v16 = (_DWORD *)*((void *)this + 1);
          }
          ++v9;
          uint64_t v8 = *(void *)this;
        }
        while (v9 != 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v16 - *(void *)this) >> 2));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v27);
      sub_21697C414(&v26);
      if (__p)
      {
        char v29 = (char *)__p;
        operator delete(__p);
      }
    }
  }
}

void sub_216EDFDD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, void *__p, uint64_t a12)
{
  if (__p)
  {
    a12 = (uint64_t)__p;
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

BOOL pxrInternal__aapl__pxrReserved__::UsdStageLoadRules::IsLoaded(char **this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  return pxrInternal__aapl__pxrReserved__::UsdStageLoadRules::GetEffectiveRuleForPath(this, a2) != 2;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStageLoadRules::GetEffectiveRuleForPath(char **this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  unint64_t v4 = *this;
  uint64_t v5 = this[1];
  if (v4 != v5)
  {
    unint64_t v6 = sub_216EE06BC(v4, v5, a2, 0);
    int v7 = this[1];
    if (v7 != (char *)v6)
    {
      int v8 = *((_DWORD *)v6 + 2);
      if (v8)
      {
        if (v8 != 1 || *(void *)v6 != *(void *)a2)
        {
          unint64_t v10 = sub_216EDF4C0((char *)v6 + 12, v7, a2);
          if (v10 == v11) {
            return 2;
          }
          unint64_t v12 = v10;
          unint64_t v13 = v11;
LABEL_10:
          if (*((_DWORD *)v12 + 2) >= 2u)
          {
            int v14 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)v12;
            while (1)
            {
              v12 += 12;
              if (v12 == v13) {
                return 2;
              }
              if (!pxrInternal__aapl__pxrReserved__::SdfPath::HasPrefix((pxrInternal__aapl__pxrReserved__::SdfPath *)v12, v14))goto LABEL_10; {
            }
              }
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

BOOL pxrInternal__aapl__pxrReserved__::UsdStageLoadRules::IsLoadedWithAllDescendants(char **this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  unint64_t v4 = *this;
  uint64_t v5 = this[1];
  if (v4 == v5) {
    return 1;
  }
  unint64_t v6 = sub_216EE06BC(v4, v5, a2, 0);
  int v7 = this[1];
  if (v7 != (char *)v6 && *((_DWORD *)v6 + 2)) {
    return 0;
  }
  uint64_t v9 = sub_216EDF4C0(*this, v7, a2);
  if (v9 == v10) {
    return 1;
  }
  BOOL v11 = v9 + 12;
  do
  {
    int v12 = *((_DWORD *)v11 - 1);
    BOOL result = v12 == 0;
    if (v12) {
      BOOL v13 = 1;
    }
    else {
      BOOL v13 = v11 == v10;
    }
    v11 += 12;
  }
  while (!v13);
  return result;
}

BOOL pxrInternal__aapl__pxrReserved__::UsdStageLoadRules::IsLoadedWithNoDescendants(char **this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  uint64_t v3 = *this;
  uint64_t v2 = this[1];
  if (*this == v2) {
    return 0;
  }
  unint64_t v6 = 0xAAAAAAAAAAAAAAABLL * ((v2 - v3) >> 2);
  do
  {
    int v7 = (pxrInternal__aapl__pxrReserved__::SdfPath *)&v3[12 * (v6 >> 1)];
    int v8 = sub_2169817E8(v7, a2);
    if (v8) {
      v6 += ~(v6 >> 1);
    }
    else {
      v6 >>= 1;
    }
    if (v8) {
      uint64_t v3 = (char *)v7 + 12;
    }
  }
  while (v6);
  uint64_t v9 = this[1];
  if (v3 == v9 || *(void *)v3 != *(void *)a2 || *((_DWORD *)v3 + 2) != 1) {
    return 0;
  }
  unint64_t v10 = v3 + 12;
  while (v10 != v9)
  {
    int v11 = *((_DWORD *)v10 + 2);
    v10 += 12;
    if (v11 != 2) {
      return !pxrInternal__aapl__pxrReserved__::SdfPath::HasPrefix((pxrInternal__aapl__pxrReserved__::SdfPath *)(v10 - 12), a2);
    }
  }
  return 1;
}

BOOL pxrInternal__aapl__pxrReserved__::UsdStageLoadRules::operator==(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = *a2;
  if (v2 - *a1 != a2[1] - *a2) {
    return 0;
  }
  if (v3 == v2) {
    return 1;
  }
  do
  {
    BOOL result = *(void *)v3 == *(void *)v4 && *(_DWORD *)(v3 + 8) == *(_DWORD *)(v4 + 8);
    v3 += 12;
    v4 += 12;
  }
  while (result && v3 != v2);
  return result;
}

void *pxrInternal__aapl__pxrReserved__::operator<<(void *a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  uint64_t v3 = sub_216779180(a1, (uint64_t)"(<", 2);
  uint64_t v4 = pxrInternal__aapl__pxrReserved__::operator<<(v3, a2);
  uint64_t v5 = sub_216779180(v4, (uint64_t)">, ", 3);
  int v6 = *((_DWORD *)a2 + 2);
  int v7 = "OnlyRule";
  int v8 = "<invalid value>";
  if (v6 == 2) {
    int v8 = "NoneRule";
  }
  if (v6 != 1) {
    int v7 = v8;
  }
  if (v6) {
    uint64_t v9 = v7;
  }
  else {
    uint64_t v9 = "AllRule";
  }
  size_t v10 = strlen(v9);
  int v11 = sub_216779180(v5, (uint64_t)v9, v10);

  return sub_216779180(v11, (uint64_t)")", 1);
}

{
  void *v3;
  void *v4;
  uint64_t vars8;

  uint64_t v3 = sub_216779180(a1, (uint64_t)"HdPrimOriginSchema::OriginPath(", 31);
  uint64_t v4 = pxrInternal__aapl__pxrReserved__::operator<<(v3, a2);

  return sub_216779180(v4, (uint64_t)")", 1);
}

{
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  uint64_t v4 = sub_216779180(a1, (uint64_t)"RenderVar \n", 11);
  uint64_t v5 = sub_216779180(v4, (uint64_t)"    varPath : ", 14);
  int v6 = pxrInternal__aapl__pxrReserved__::operator<<(v5, a2);
  int v7 = sub_216779180(v6, (uint64_t)"    namespacedSettings", 22);
  pxrInternal__aapl__pxrReserved__::operator<<(v7, (void **)a2 + 6);
  return a1;
}

void *pxrInternal__aapl__pxrReserved__::operator<<(void *a1, pxrInternal__aapl__pxrReserved__::SdfPath **a2)
{
  uint64_t v3 = sub_216779180(a1, (uint64_t)"UsdStageLoadRules(", 18);
  uint64_t v4 = sub_216EE02A0(v3, a2);

  return sub_216779180(v4, (uint64_t)")", 1);
}

void *sub_216EE02A0(void *a1, pxrInternal__aapl__pxrReserved__::SdfPath **a2)
{
  sub_216779180(a1, (uint64_t)"[ ", 2);
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  if (*a2 != v5)
  {
    do
    {
      int v6 = pxrInternal__aapl__pxrReserved__::operator<<(a1, v4);
      sub_216779180(v6, (uint64_t)" ", 1);
      uint64_t v4 = (pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v4 + 12);
    }
    while (v4 != v5);
  }
  sub_216779180(a1, (uint64_t)"]", 1);
  return a1;
}

unint64_t sub_216EE0354(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v3 = *(unsigned int **)a2;
  int64_t v4 = *(void *)(a2 + 8) - (void)v3;
  if (v4)
  {
    unint64_t v5 = 0xAAAAAAAAAAAAAAABLL * (v4 >> 2);
    do
    {
      --v5;
      int v6 = v3 + 3;
      sub_216EE08F0((uint64_t)&v8, v3);
      uint64_t v3 = v6;
    }
    while (v5);
    int64_t v4 = 0x9E3779B97F4A7C55 * v8;
  }
  return bswap64(v4);
}

uint64_t sub_216EE03D8(uint64_t *a1, _DWORD *a2, _DWORD *a3)
{
  uint64_t v4 = *a1;
  unint64_t v5 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 2);
  unint64_t v6 = v5 + 1;
  if (v5 + 1 > 0x1555555555555555) {
    sub_21677CB10();
  }
  uint64_t v9 = (uint64_t)(a1 + 2);
  unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v4) >> 2);
  if (2 * v10 > v6) {
    unint64_t v6 = 2 * v10;
  }
  if (v10 >= 0xAAAAAAAAAAAAAAALL) {
    unint64_t v11 = 0x1555555555555555;
  }
  else {
    unint64_t v11 = v6;
  }
  v16[4] = a1 + 2;
  if (v11) {
    int v12 = (char *)sub_216B0D05C(v9, v11);
  }
  else {
    int v12 = 0;
  }
  BOOL v13 = &v12[12 * v5];
  v16[0] = v12;
  v16[1] = v13;
  v16[3] = &v12[12 * v11];
  sub_216981010(v13, a2);
  sub_21698105C((_DWORD *)v13 + 1, a2 + 1);
  *((_DWORD *)v13 + 2) = *a3;
  v16[2] = v13 + 12;
  sub_216EE04F4(a1, v16);
  uint64_t v14 = a1[1];
  sub_216CF93B0(v16);
  return v14;
}

void sub_216EE04E0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216CF93B0((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_216EE04F4(uint64_t *a1, void *a2)
{
  uint64_t result = sub_216CF91C0((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

_DWORD *sub_216EE056C(void *a1, _DWORD *a2)
{
  uint64_t v4 = (int *)a1[2];
  if (v4 == (int *)a1[3])
  {
    uint64_t v5 = (int *)a1[1];
    if ((unint64_t)v5 <= *a1)
    {
      if (v4 == (int *)*a1) {
        unint64_t v10 = 1;
      }
      else {
        unint64_t v10 = 0x5555555555555556 * (((uint64_t)v4 - *a1) >> 2);
      }
      unint64_t v11 = v10 >> 2;
      uint64_t v12 = a1[4];
      uint64_t v20 = a1[4];
      *(void *)&long long v18 = sub_216B0D05C(v12, v10);
      *((void *)&v18 + 1) = v18 + 12 * v11;
      *(void *)&long long v19 = *((void *)&v18 + 1);
      *((void *)&v19 + 1) = v18 + 12 * v13;
      sub_216CF9134(&v18, a1[1], 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a1[2] - a1[1]) >> 2));
      long long v14 = v19;
      long long v15 = *(_OWORD *)a1;
      long long v16 = *((_OWORD *)a1 + 1);
      *(_OWORD *)a1 = v18;
      *((_OWORD *)a1 + 1) = v14;
      long long v18 = v15;
      long long v19 = v16;
      sub_216CF93B0((void **)&v18);
      uint64_t v4 = (int *)a1[2];
    }
    else
    {
      int64_t v6 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v5 - *a1) >> 2);
      if (v6 >= -1) {
        uint64_t v7 = v6 + 1;
      }
      else {
        uint64_t v7 = v6 + 2;
      }
      uint64_t v8 = -3 * (v7 >> 1);
      sub_216CF8D54((uint64_t)&v18, v5, v4, &v5[-3 * (v7 >> 1)]);
      uint64_t v4 = v9;
      a1[1] += 4 * v8;
      a1[2] = v9;
    }
  }
  sub_21697D878(v4, a2);
  uint64_t result = sub_21697D8B4(v4 + 1, a2 + 1);
  v4[2] = a2[2];
  a1[2] += 12;
  return result;
}

void sub_216EE06A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
}

const pxrInternal__aapl__pxrReserved__::SdfPath *sub_216EE06BC(char *a1, char *a2, pxrInternal__aapl__pxrReserved__::SdfPath *this, char a4)
{
  if (a1 == a2) {
    return (const pxrInternal__aapl__pxrReserved__::SdfPath *)a1;
  }
  unint64_t v9 = 0xAAAAAAAAAAAAAAABLL * ((a2 - a1) >> 2);
  unint64_t v10 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)a1;
  do
  {
    unint64_t v11 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v10 + 12 * (v9 >> 1));
    int v12 = sub_2169817E8(v11, this);
    if (v12) {
      v9 += ~(v9 >> 1);
    }
    else {
      v9 >>= 1;
    }
    if (v12) {
      unint64_t v10 = (pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v11 + 12);
    }
  }
  while (v9);
  if ((a4 & 1) != 0
    || v10 == (const pxrInternal__aapl__pxrReserved__::SdfPath *)a2
    || *(void *)v10 != *(void *)this)
  {
    if (v10 == (const pxrInternal__aapl__pxrReserved__::SdfPath *)a1)
    {
      return (const pxrInternal__aapl__pxrReserved__::SdfPath *)a2;
    }
    else
    {
      uint64_t v7 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v10 - 12);
      if (pxrInternal__aapl__pxrReserved__::SdfPath::HasPrefix(this, (const pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v10 - 12)))
      {
        return (const pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v10 - 12);
      }
      else
      {
        pxrInternal__aapl__pxrReserved__::SdfPath::GetCommonPrefix(this, v7, (int *)&v19);
        while (1)
        {
          if (v7 == (const pxrInternal__aapl__pxrReserved__::SdfPath *)a1)
          {
            unint64_t v10 = v7;
          }
          else
          {
            unint64_t v13 = 0xAAAAAAAAAAAAAAABLL * ((v7 - (const pxrInternal__aapl__pxrReserved__::SdfPath *)a1) >> 2);
            unint64_t v10 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)a1;
            do
            {
              long long v14 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v10 + 12 * (v13 >> 1));
              int v15 = sub_2169817E8(v14, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v19);
              if (v15) {
                v13 += ~(v13 >> 1);
              }
              else {
                v13 >>= 1;
              }
              if (v15) {
                unint64_t v10 = (pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v14 + 12);
              }
            }
            while (v13);
            if (v10 != v7 && *(void *)v10 == v19) {
              goto LABEL_35;
            }
          }
          if (v10 == (const pxrInternal__aapl__pxrReserved__::SdfPath *)a1)
          {
            unint64_t v10 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)a2;
            goto LABEL_35;
          }
          uint64_t v7 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v10 - 12);
          if (pxrInternal__aapl__pxrReserved__::SdfPath::HasPrefix((pxrInternal__aapl__pxrReserved__::SdfPath *)&v19, (const pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v10 - 12)))
          {
            break;
          }
          pxrInternal__aapl__pxrReserved__::SdfPath::GetCommonPrefix((pxrInternal__aapl__pxrReserved__::SdfPath *)&v19, (const pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v10 - 12), &v17);
          sub_21697DE94((int *)&v19, &v17);
          sub_21697DEEC((int *)&v19 + 1, &v18);
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v18);
          sub_21697C414(&v17);
        }
        unint64_t v10 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v10 - 12);
LABEL_35:
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v19 + 1);
        sub_21697C414(&v19);
      }
    }
  }
  return v10;
}

void sub_216EE08D4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_216EE08F0(uint64_t a1, unsigned int *a2)
{
  uint64_t result = sub_2169827F8(a1, a2);
  uint64_t v5 = a2[2];
  if (*(unsigned char *)(a1 + 8)) {
    v5 += (unint64_t)(*(void *)a1 + v5 + (*(void *)a1 + v5) * (*(void *)a1 + v5)) >> 1;
  }
  else {
    *(unsigned char *)(a1 + 8) = 1;
  }
  *(void *)a1 = v5;
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask::UsdStagePopulationMask(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask::_ValidateAndNormalize((pxrInternal__aapl__pxrReserved__::SdfPath **)a1);
  return a1;
}

void sub_216EE0994(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216981168((void ***)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask::_ValidateAndNormalize(pxrInternal__aapl__pxrReserved__::SdfPath **this)
{
  uint64_t v2 = *this;
  uint64_t v3 = this[1];
  while (v2 != v3)
  {
    if (!pxrInternal__aapl__pxrReserved__::SdfPath::IsAbsolutePath(v2)
      || !pxrInternal__aapl__pxrReserved__::SdfPath::IsAbsoluteRootOrPrimPath(v2))
    {
      v5[0] = "usd/stagePopulationMask.cpp";
      v5[1] = "_ValidateAndNormalize";
      v5[2] = 258;
      void v5[3] = "void pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask::_ValidateAndNormalize()";
      char v6 = 0;
      Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText(v2);
      pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v5, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid path <%s>; must be an absolute prim path or the absolute root path",
        Text);
      return;
    }
    uint64_t v2 = (pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v2 + 8);
  }

  pxrInternal__aapl__pxrReserved__::SdfPath::RemoveDescendentPaths((uint64_t)this);
}

unint64_t pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask::Union@<X0>(pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask *this@<X0>, const pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask *a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  uint64_t v7 = *((void *)this + 1) - *(void *)this;
  if ((uint64_t)(*((void *)a2 + 1) - *(void *)a2) >> 3 >= (unint64_t)(v7 >> 3)) {
    unint64_t v8 = v7 >> 3;
  }
  else {
    unint64_t v8 = (uint64_t)(*((void *)a2 + 1) - *(void *)a2) >> 3;
  }
  unint64_t result = (unint64_t)sub_216A6E72C((uint64_t *)a3, v8);
  unint64_t v11 = *(char **)this;
  unint64_t v10 = (char *)*((void *)this + 1);
  unint64_t v13 = *(pxrInternal__aapl__pxrReserved__::SdfPath **)a2;
  int v12 = (pxrInternal__aapl__pxrReserved__::SdfPath *)*((void *)a2 + 1);
  while (v11 != v10)
  {
    if (v13 == v12) {
      return (unint64_t)sub_2169DC954((uint64_t *)a3, *(int **)(a3 + 8), v11, v10, (v10 - v11) >> 3);
    }
    if (pxrInternal__aapl__pxrReserved__::SdfPath::HasPrefix(v13, (const pxrInternal__aapl__pxrReserved__::SdfPath *)v11))
    {
      unint64_t v14 = *(void *)(a3 + 8);
      if (v14 >= *(void *)(a3 + 16))
      {
        unint64_t result = sub_216981B30((uint64_t *)a3, v11);
      }
      else
      {
        sub_216981010(*(_DWORD **)(a3 + 8), v11);
        sub_21698105C((_DWORD *)(v14 + 4), (_DWORD *)v11 + 1);
        unint64_t result = v14 + 8;
      }
      *(void *)(a3 + 8) = result;
      while (1)
      {
        unint64_t v13 = (pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v13 + 8);
        if (v13 == v12) {
          break;
        }
        unint64_t result = pxrInternal__aapl__pxrReserved__::SdfPath::HasPrefix(v13, (const pxrInternal__aapl__pxrReserved__::SdfPath *)v11);
        if ((result & 1) == 0) {
          goto LABEL_19;
        }
      }
      unint64_t v13 = v12;
LABEL_19:
      v11 += 8;
    }
    else if (pxrInternal__aapl__pxrReserved__::SdfPath::HasPrefix((pxrInternal__aapl__pxrReserved__::SdfPath *)v11, v13))
    {
      unint64_t v15 = *(void *)(a3 + 8);
      if (v15 >= *(void *)(a3 + 16))
      {
        unint64_t result = sub_216981B30((uint64_t *)a3, v13);
      }
      else
      {
        sub_216981010(*(_DWORD **)(a3 + 8), v13);
        sub_21698105C((_DWORD *)(v15 + 4), (_DWORD *)v13 + 1);
        unint64_t result = v15 + 8;
      }
      *(void *)(a3 + 8) = result;
      while (1)
      {
        v11 += 8;
        if (v11 == v10) {
          break;
        }
        unint64_t result = pxrInternal__aapl__pxrReserved__::SdfPath::HasPrefix((pxrInternal__aapl__pxrReserved__::SdfPath *)v11, v13);
        if ((result & 1) == 0) {
          goto LABEL_29;
        }
      }
      unint64_t v11 = v10;
LABEL_29:
      unint64_t v13 = (pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v13 + 8);
    }
    else
    {
      int v16 = sub_2169817E8((pxrInternal__aapl__pxrReserved__::SdfPath *)v11, v13);
      unint64_t v18 = *(void *)(a3 + 8);
      unint64_t v17 = *(void *)(a3 + 16);
      if (v16)
      {
        if (v18 >= v17)
        {
          unint64_t result = sub_216981B30((uint64_t *)a3, v11);
        }
        else
        {
          sub_216981010(*(_DWORD **)(a3 + 8), v11);
          sub_21698105C((_DWORD *)(v18 + 4), (_DWORD *)v11 + 1);
          unint64_t result = v18 + 8;
        }
        v11 += 8;
      }
      else
      {
        if (v18 >= v17)
        {
          unint64_t result = sub_216981B30((uint64_t *)a3, v13);
        }
        else
        {
          sub_216981010(*(_DWORD **)(a3 + 8), v13);
          sub_21698105C((_DWORD *)(v18 + 4), (_DWORD *)v13 + 1);
          unint64_t result = v18 + 8;
        }
        unint64_t v13 = (pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v13 + 8);
      }
      *(void *)(a3 + 8) = result;
    }
  }
  if (v13 != v12) {
    return (unint64_t)sub_2169DC954((uint64_t *)a3, *(int **)(a3 + 8), v13, v12, (v12 - v13) >> 3);
  }
  return result;
}

void sub_216EE0CC4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216981168((void ***)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask::GetUnion(pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask *this@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, uint64_t a3@<X8>)
{
  if (!pxrInternal__aapl__pxrReserved__::SdfPath::IsAbsolutePath(a2)
    || !pxrInternal__aapl__pxrReserved__::SdfPath::IsAbsoluteRootOrPrimPath(a2))
  {
    uint64_t v7 = "usd/stagePopulationMask.cpp";
    unint64_t v8 = "GetUnion";
    uint64_t v9 = 95;
    unint64_t v10 = "UsdStagePopulationMask pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask::GetUnion(const SdfPath &) const";
    char v11 = 0;
    Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText(a2);
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v7, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid path <%s>; must be an absolute prim path or the absolute root path",
      Text);
  }
  uint64_t v7 = 0;
  unint64_t v8 = 0;
  uint64_t v9 = 0;
  unint64_t v8 = (const char *)sub_216981B30((uint64_t *)&v7, a2);
  pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask::Union(this, (const pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask *)&v7, a3);
  int v12 = &v7;
  sub_216981168((void ***)&v12);
}

void sub_216EE0DD0(_Unwind_Exception *a1)
{
  *(void *)(v2 - 4sub_2168EBBB8(&a9, 0) = v1;
  sub_216981168((void ***)(v2 - 40));
  _Unwind_Resume(a1);
}

unint64_t pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask::Intersection@<X0>(pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask *this@<X0>, const pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask *a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t v7 = *((void *)this + 1) - *(void *)this;
  if ((uint64_t)(*((void *)a2 + 1) - *(void *)a2) >> 3 >= (unint64_t)(v7 >> 3)) {
    unint64_t v8 = v7 >> 3;
  }
  else {
    unint64_t v8 = (uint64_t)(*((void *)a2 + 1) - *(void *)a2) >> 3;
  }
  unint64_t result = (unint64_t)sub_216A6E72C(a3, v8);
  unint64_t v10 = *(const pxrInternal__aapl__pxrReserved__::SdfPath **)this;
  char v11 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)*((void *)this + 1);
  if (*(const pxrInternal__aapl__pxrReserved__::SdfPath **)this != v11)
  {
    int v12 = *(pxrInternal__aapl__pxrReserved__::SdfPath **)a2;
    unint64_t v13 = (pxrInternal__aapl__pxrReserved__::SdfPath *)*((void *)a2 + 1);
    do
    {
      if (v12 == v13) {
        break;
      }
      if (pxrInternal__aapl__pxrReserved__::SdfPath::HasPrefix(v12, v10))
      {
        while (1)
        {
          unint64_t v14 = a3[1];
          if (v14 >= a3[2])
          {
            unint64_t result = sub_216981B30(a3, v12);
          }
          else
          {
            sub_216981010((_DWORD *)a3[1], v12);
            sub_21698105C((_DWORD *)(v14 + 4), (_DWORD *)v12 + 1);
            unint64_t result = v14 + 8;
          }
          int v12 = (pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v12 + 8);
          a3[1] = result;
          if (v12 == v13) {
            break;
          }
          unint64_t result = pxrInternal__aapl__pxrReserved__::SdfPath::HasPrefix(v12, v10);
          if ((result & 1) == 0) {
            goto LABEL_22;
          }
        }
        int v12 = v13;
LABEL_22:
        unint64_t v10 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v10 + 8);
      }
      else if (pxrInternal__aapl__pxrReserved__::SdfPath::HasPrefix(v10, v12))
      {
        while (1)
        {
          unint64_t v15 = a3[1];
          if (v15 >= a3[2])
          {
            unint64_t result = sub_216981B30(a3, v10);
          }
          else
          {
            sub_216981010((_DWORD *)a3[1], v10);
            sub_21698105C((_DWORD *)(v15 + 4), (_DWORD *)v10 + 1);
            unint64_t result = v15 + 8;
          }
          unint64_t v10 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v10 + 8);
          a3[1] = result;
          if (v10 == v11) {
            break;
          }
          unint64_t result = pxrInternal__aapl__pxrReserved__::SdfPath::HasPrefix(v10, v12);
          if ((result & 1) == 0) {
            goto LABEL_27;
          }
        }
        unint64_t v10 = v11;
LABEL_27:
        int v12 = (pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v12 + 8);
      }
      else
      {
        unint64_t result = sub_2169817E8(v10, v12);
        if (result) {
          unint64_t v10 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v10 + 8);
        }
        else {
          int v12 = (pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v12 + 8);
        }
      }
    }
    while (v10 != v11);
  }
  return result;
}

void sub_216EE0F88(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216981168((void ***)va);
  _Unwind_Resume(a1);
}

BOOL pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask::Includes(pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask *this, const pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask *a2)
{
  pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask::Union(this, a2, (uint64_t)&v9);
  uint64_t v3 = *(uint64_t **)this;
  if (v10 - v9 == *((void *)this + 1) - *(void *)this)
  {
    if (v9 == v10)
    {
      BOOL v6 = 1;
    }
    else
    {
      uint64_t v4 = v9 + 8;
      do
      {
        uint64_t v5 = *v3++;
        BOOL v6 = *(void *)(v4 - 8) == v5;
        BOOL v7 = *(void *)(v4 - 8) != v5 || v4 == v10;
        v4 += 8;
      }
      while (!v7);
    }
  }
  else
  {
    BOOL v6 = 0;
  }
  char v11 = (void **)&v9;
  sub_216981168(&v11);
  return v6;
}

BOOL pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask::Includes(pxrInternal__aapl__pxrReserved__::SdfPath **this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  uint64_t v3 = *this;
  uint64_t v2 = this[1];
  if (*this == v2) {
    return 0;
  }
  unint64_t v6 = (v2 - v3) >> 3;
  do
  {
    BOOL v7 = (pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v3 + 8 * (v6 >> 1));
    int v8 = sub_2169817E8(v7, a2);
    if (v8) {
      v6 += ~(v6 >> 1);
    }
    else {
      v6 >>= 1;
    }
    if (v8) {
      uint64_t v3 = (pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v7 + 8);
    }
  }
  while (v6);
  uint64_t v9 = *this;
  if (v3 == this[1]) {
    uint64_t v10 = 0;
  }
  else {
    uint64_t v10 = v3;
  }
  if (v3 != v9
    && pxrInternal__aapl__pxrReserved__::SdfPath::HasPrefix(a2, (pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v3 - 8)))
  {
    return 1;
  }
  if (!v10) {
    return 0;
  }

  return pxrInternal__aapl__pxrReserved__::SdfPath::HasPrefix(v10, a2);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask::IncludesSubtree(pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask *this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  return sub_216EE1150((uint64_t)this, a2) & 1;
}

uint64_t sub_216EE1150(uint64_t a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  if (*(void *)a1 == v2)
  {
LABEL_18:
    LODWORD(result) = 0;
    return result;
  }
  unint64_t v6 = (v2 - (uint64_t)v3) >> 3;
  do
  {
    BOOL v7 = (pxrInternal__aapl__pxrReserved__::SdfPath *)&v3[v6 >> 1];
    int v8 = sub_2169817E8(v7, a2);
    if (v8) {
      v6 += ~(v6 >> 1);
    }
    else {
      v6 >>= 1;
    }
    if (v8) {
      uint64_t v3 = (void *)((char *)v7 + 8);
    }
  }
  while (v6);
  uint64_t v9 = *(void **)a1;
  if (v3 == *(void **)a1) {
    uint64_t v10 = 0;
  }
  else {
    uint64_t v10 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)(v3 - 1);
  }
  if (v3) {
    BOOL v11 = v3 == *(void **)(a1 + 8);
  }
  else {
    BOOL v11 = 1;
  }
  if (v11)
  {
    if (v3 != v9)
    {
LABEL_23:
      LODWORD(result) = pxrInternal__aapl__pxrReserved__::SdfPath::HasPrefix(a2, v10);
      return result;
    }
    goto LABEL_18;
  }
  LODWORD(result) = *v3 == *(void *)a2;
  if (*v3 != *(void *)a2 && v3 != v9) {
    goto LABEL_23;
  }
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask::GetIncludedChildNames(uint64_t a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, uint64_t a3)
{
  unint64_t v6 = *(char **)a3;
  BOOL v7 = *(char **)(a3 + 8);
  if (v7 != *(char **)a3)
  {
    do
    {
      uint64_t v9 = *((void *)v7 - 1);
      v7 -= 8;
      uint64_t v8 = v9;
      if ((v9 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
    }
    while (v7 != v6);
  }
  *(void *)(a3 + 8) = v6;
  if (sub_216EE1150(a1, a2)) {
    return 1;
  }
  for (uint64_t i = v10;
        i != *(pxrInternal__aapl__pxrReserved__::SdfPath **)(a1 + 8);
        uint64_t i = (pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)i + 8))
  {
    if (!pxrInternal__aapl__pxrReserved__::SdfPath::HasPrefix(i, a2)) {
      return *(void *)a3 != *(void *)(a3 + 8);
    }
    sub_216981010(v22, i);
    sub_21698105C((_DWORD *)v22 + 1, (_DWORD *)i + 1);
    while (1)
    {
      BOOL v12 = pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator BOOL(v22);
      BOOL v13 = v12;
      if (!v12) {
        break;
      }
      pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath((pxrInternal__aapl__pxrReserved__::SdfPath *)v22, &v25);
      uint64_t v14 = v25;
      uint64_t v15 = *(void *)a2;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v25 + 1);
      sub_21697C414(&v25);
      if (v14 == v15)
      {
        uint64_t v16 = *(void *)pxrInternal__aapl__pxrReserved__::SdfPath::GetNameToken((pxrInternal__aapl__pxrReserved__::SdfPath *)v22);
        uint64_t v24 = v16;
        if ((v16 & 7) != 0)
        {
          unint64_t v17 = (atomic_uint *)(v16 & 0xFFFFFFFFFFFFFFF8);
          if ((atomic_fetch_add_explicit(v17, 2u, memory_order_relaxed) & 1) == 0) {
            uint64_t v24 = (uint64_t)v17;
          }
        }
        break;
      }
      pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath((pxrInternal__aapl__pxrReserved__::SdfPath *)v22, &v25);
      sub_21697DE94((int *)v22, (int *)&v25);
      sub_21697DEEC((int *)v22 + 1, (int *)&v25 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v25 + 1);
      sub_21697C414(&v25);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v22 + 1);
    sub_21697C414(v22);
    if (v13)
    {
      if (v24) {
        goto LABEL_20;
      }
    }
    else
    {
      uint64_t v24 = 0;
    }
    v22[0] = "usd/stagePopulationMask.cpp";
    v22[1] = "GetIncludedChildNames";
    void v22[2] = 228;
    v22[3] = "BOOL pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask::GetIncludedChildNames(const SdfPath &, std::"
             "vector<TfToken> *) const";
    char v23 = 0;
    if (pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v22, "!childName.IsEmpty()", 0))
    {
LABEL_20:
      unint64_t v18 = *(void **)(a3 + 8);
      if (*(void **)a3 == v18 || (*(v18 - 1) & 0xFFFFFFFFFFFFFFF8) != (v24 & 0xFFFFFFFFFFFFFFF8))
      {
        if ((unint64_t)v18 >= *(void *)(a3 + 16))
        {
          uint64_t v20 = sub_216973984((char **)a3, &v24);
        }
        else
        {
          uint64_t v19 = v24;
          *unint64_t v18 = v24;
          if ((v19 & 7) != 0
            && (atomic_fetch_add_explicit((atomic_uint *volatile)(v19 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
          {
            *v18 &= 0xFFFFFFFFFFFFFFF8;
          }
          uint64_t v20 = (char *)(v18 + 1);
        }
        *(void *)(a3 + 8) = v20;
      }
    }
    if ((v24 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v24 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  return *(void *)a3 != *(void *)(a3 + 8);
}

void sub_216EE14BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  if ((a15 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(a15 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  _Unwind_Resume(exception_object);
}

void *pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask::GetPaths@<X0>(pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask *this@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  return sub_216980EEC(a2, *(_DWORD **)this, *((_DWORD **)this + 1), (uint64_t)(*((void *)this + 1) - *(void *)this) >> 3);
}

void *pxrInternal__aapl__pxrReserved__::operator<<(void *a1, _DWORD **a2)
{
  uint64_t v3 = sub_216779180(a1, (uint64_t)"UsdStagePopulationMask(", 23);
  memset(v7, 0, sizeof(v7));
  sub_216980EEC(v7, *a2, a2[1], ((char *)a2[1] - (char *)*a2) >> 3);
  uint64_t v4 = sub_216A8E654(v3, v7);
  char v8 = 41;
  uint64_t v5 = sub_216779180(v4, (uint64_t)&v8, 1);
  uint64_t v9 = v7;
  sub_216981168((void ***)&v9);
  return v5;
}

void sub_216EE15C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  sub_216981168((void ***)va);
  _Unwind_Resume(a1);
}

unint64_t pxrInternal__aapl__pxrReserved__::hash_value(unsigned int **a1)
{
  return sub_2169DC438((uint64_t)&v2, a1);
}

void pxrInternal__aapl__pxrReserved__::UsdTimeCodeTokens_StaticTokenType::~UsdTimeCodeTokens_StaticTokenType(pxrInternal__aapl__pxrReserved__::UsdTimeCodeTokens_StaticTokenType *this)
{
  uint64_t v3 = (void **)((char *)this + 16);
  sub_216889A04(&v3);
  uint64_t v2 = *((void *)this + 1);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  if ((*(void *)this & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(*(void *)this & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
}

pxrInternal__aapl__pxrReserved__::UsdTimeCodeTokens_StaticTokenType *pxrInternal__aapl__pxrReserved__::UsdTimeCodeTokens_StaticTokenType::UsdTimeCodeTokens_StaticTokenType(atomic_uint **this)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  uint64_t v2 = (atomic_uint **)(pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this, "DEFAULT", 0) + 8);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(v2, "EARLIEST", 0);
  uint64_t v3 = *this;
  BOOL v13 = v3;
  if ((v3 & 7) != 0)
  {
    uint64_t v4 = (atomic_uint *)((unint64_t)v3 & 0xFFFFFFFFFFFFFFF8);
    if ((atomic_fetch_add_explicit(v4, 2u, memory_order_relaxed) & 1) == 0) {
      BOOL v13 = v4;
    }
  }
  uint64_t v5 = *v2;
  uint64_t v14 = v5;
  if ((v5 & 7) != 0)
  {
    unint64_t v6 = (atomic_uint *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    if ((atomic_fetch_add_explicit(v6, 2u, memory_order_relaxed) & 1) == 0) {
      uint64_t v14 = v6;
    }
  }
  this[2] = 0;
  this[3] = 0;
  this[4] = 0;
  BOOL v7 = (atomic_uint *)operator new(0x10uLL);
  unint64_t v8 = 0;
  this[2] = v7;
  this[3] = v7;
  this[4] = v7 + 4;
  do
  {
    uint64_t v9 = (&v13)[v8 / 2];
    *(void *)&v7[v8] = v9;
    if ((v9 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)((unint64_t)v9 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      *(void *)&v7[v8] &= 0xFFFFFFFFFFFFFFF8;
    }
    v8 += 2;
  }
  while (v8 != 4);
  this[3] = v7 + 4;
  for (uint64_t i = 1; i != -1; --i)
  {
    BOOL v11 = (&v13)[i];
    if ((v11 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)((unint64_t)v11 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  return (pxrInternal__aapl__pxrReserved__::UsdTimeCodeTokens_StaticTokenType *)this;
}

void sub_216EE17E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10, uint64_t a11, char a12)
{
  sub_216889A04(&a10);
  uint64_t v15 = 8;
  while (1)
  {
    uint64_t v16 = *(void *)(&a12 + v15);
    if ((v16 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v16 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    v15 -= 8;
    if (v15 == -8)
    {
      if ((*v13 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*v13 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*v12 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      _Unwind_Resume(a1);
    }
  }
}

uint64_t *pxrInternal__aapl__pxrReserved__::operator>>(uint64_t *a1, double *a2)
{
  memset(&__str, 0, sizeof(__str));
  sub_216EE1A64(a1, (uint64_t)&__str);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(&v9);
  uint64_t v4 = (atomic_uint **)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdTimeCodeTokens);
  if (!v4) {
    uint64_t v4 = sub_216EE1D34(&pxrInternal__aapl__pxrReserved__::UsdTimeCodeTokens);
  }
  if ((v9 & 0xFFFFFFFFFFFFFFF8) == ((unint64_t)*v4 & 0xFFFFFFFFFFFFFFF8))
  {
    unint64_t v7 = 0x7FF8000000000000;
  }
  else
  {
    uint64_t v5 = (atomic_uint **)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdTimeCodeTokens);
    if (!v5) {
      uint64_t v5 = sub_216EE1D34(&pxrInternal__aapl__pxrReserved__::UsdTimeCodeTokens);
    }
    if ((v9 & 0xFFFFFFFFFFFFFFF8) != ((unint64_t)v5[1] & 0xFFFFFFFFFFFFFFF8))
    {
      double v6 = std::stod(&__str, 0);
      goto LABEL_11;
    }
    unint64_t v7 = 0xFFEFFFFFFFFFFFFFLL;
  }
  double v6 = *(double *)&v7;
LABEL_11:
  *a2 = v6;
  if ((v9 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v9 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
  return a1;
}

void sub_216EE1A04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if ((a9 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(a9 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_216EE1A64(uint64_t *a1, uint64_t a2)
{
  MEMORY[0x21D447960](&v20, a1, 0);
  if (!v20) {
    return a1;
  }
  if (*(char *)(a2 + 23) < 0)
  {
    **(unsigned char **)a2 = 0;
    *(void *)(a2 + 8) = 0;
  }
  else
  {
    *(unsigned char *)a2 = 0;
    *(unsigned char *)(a2 + 23) = 0;
  }
  uint64_t v4 = *(void *)(*a1 - 24);
  uint64_t v5 = *(uint64_t *)((char *)a1 + v4 + 24);
  if (v5 <= 1) {
    uint64_t v6 = 1;
  }
  else {
    uint64_t v6 = *(uint64_t *)((char *)a1 + v4 + 24);
  }
  std::ios_base::getloc((const std::ios_base *)((char *)a1 + v4));
  unint64_t v7 = std::locale::use_facet(&v19, MEMORY[0x263F8C108]);
  std::locale::~locale(&v19);
  uint64_t v8 = 0;
  uint64_t v9 = a1 + 5;
  if (v5 >= 1) {
    uint64_t v10 = v6;
  }
  else {
    uint64_t v10 = 0x7FFFFFFFFFFFFFF7;
  }
  while (1)
  {
    BOOL v11 = *(void **)((char *)v9 + *(void *)(*a1 - 24));
    BOOL v12 = (unsigned char *)v11[3];
    if (v12 == (unsigned char *)v11[4]) {
      break;
    }
    LOBYTE(v13) = *v12;
LABEL_14:
    if ((v13 & 0x80) == 0 && (*((_DWORD *)&v7[1].~facet + v13) & 0x4000) != 0)
    {
      int v16 = 0;
      goto LABEL_23;
    }
    std::string::push_back((std::string *)a2, v13);
    uint64_t v14 = *(void **)((char *)v9 + *(void *)(*a1 - 24));
    uint64_t v15 = v14[3];
    if (v15 == v14[4]) {
      (*(void (**)(void *))(*v14 + 80))(v14);
    }
    else {
      v14[3] = v15 + 1;
    }
    if (v10 == ++v8)
    {
      int v16 = 0;
      uint64_t v8 = 1;
      goto LABEL_23;
    }
  }
  int v13 = (*(uint64_t (**)(void *))(*v11 + 72))(v11);
  if (v13 != -1) {
    goto LABEL_14;
  }
  int v16 = 2;
LABEL_23:
  uint64_t v17 = *a1;
  *(uint64_t *)((char *)a1 + *(void *)(*a1 - 24) + 24) = 0;
  if (!v8) {
    v16 |= 4u;
  }
  std::ios_base::clear((std::ios_base *)((char *)a1 + *(void *)(v17 - 24)), *(_DWORD *)((char *)a1 + *(void *)(v17 - 24) + 32) | v16);
  return a1;
}

void sub_216EE1C84(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::locale a9)
{
  std::locale::~locale(&a9);
  __cxa_begin_catch(a1);
  uint64_t v11 = *v9;
  *(_DWORD *)((char *)v9 + *(void *)(*v9 - 24) + 32) |= 1u;
  if ((*((unsigned char *)v9 + *(void *)(v11 - 24) + 36) & 1) == 0)
  {
    __cxa_end_catch();
    JUMPOUT(0x216EE1C40);
  }
  __cxa_rethrow();
}

void sub_216EE1D20(_Unwind_Exception *a1)
{
}

atomic_uint **sub_216EE1D34(atomic_ullong *a1)
{
  uint64_t result = sub_216EE1D7C();
  uint64_t v3 = 0;
  atomic_compare_exchange_strong(a1, (unint64_t *)&v3, (unint64_t)result);
  if (v3)
  {
    if (result)
    {
      pxrInternal__aapl__pxrReserved__::UsdTimeCodeTokens_StaticTokenType::~UsdTimeCodeTokens_StaticTokenType((pxrInternal__aapl__pxrReserved__::UsdTimeCodeTokens_StaticTokenType *)result);
      operator delete(v4);
    }
    return (atomic_uint **)atomic_load((unint64_t *)a1);
  }
  return result;
}

atomic_uint **sub_216EE1D7C()
{
  v0 = (atomic_uint **)operator new(0x28uLL);
  pxrInternal__aapl__pxrReserved__::UsdTimeCodeTokens_StaticTokenType::UsdTimeCodeTokens_StaticTokenType(v0);
  return v0;
}

void sub_216EE1DAC(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::UsdTokensType *pxrInternal__aapl__pxrReserved__::UsdTokensType::UsdTokensType(pxrInternal__aapl__pxrReserved__::UsdTokensType *this)
{
  uint64_t v49 = *MEMORY[0x263EF8340];
  uint64_t v28 = (uint64_t *)(pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this, "apiSchemas", 0) + 8);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(v28, "clips", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 16, "clipSets", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 24, "collection", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 32, "collection:__INSTANCE_NAME__", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 40, "collection:__INSTANCE_NAME__:excludes", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 48, "collection:__INSTANCE_NAME__:expansionRule", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 56, "collection:__INSTANCE_NAME__:includeRoot", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 64, "collection:__INSTANCE_NAME__:includes", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 72, "collection:__INSTANCE_NAME__:membershipExpression", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 80, "exclude", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 88, "expandPrims", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 96, "expandPrimsAndProperties", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 104, "explicitOnly", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 112, "fallbackPrimTypes", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 120, "APISchemaBase", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 128, "ClipsAPI", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 136, "CollectionAPI", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 144, "ModelAPI", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 152, "Typed", 0);
  uint64_t v2 = *(void *)this;
  uint64_t v29 = v2;
  if ((v2 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v29 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v3 = *v28;
  uint64_t v30 = v3;
  if ((v3 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v3 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v30 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v4 = *((void *)this + 2);
  uint64_t v31 = v4;
  if ((v4 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v4 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v31 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v5 = *((void *)this + 3);
  uint64_t v32 = v5;
  if ((v5 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v5 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v32 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v6 = *((void *)this + 4);
  uint64_t v33 = v6;
  if ((v6 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v6 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v33 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v7 = *((void *)this + 5);
  uint64_t v34 = v7;
  if ((v7 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v7 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v34 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v8 = *((void *)this + 6);
  uint64_t v35 = v8;
  if ((v8 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v35 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v9 = *((void *)this + 7);
  uint64_t v36 = v9;
  if ((v9 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v9 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v36 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v10 = *((void *)this + 8);
  uint64_t v37 = v10;
  if ((v10 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v10 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v37 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v11 = *((void *)this + 9);
  uint64_t v38 = v11;
  if ((v11 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v11 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v38 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v12 = *((void *)this + 10);
  uint64_t v39 = v12;
  if ((v12 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v39 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v13 = *((void *)this + 11);
  uint64_t v40 = v13;
  if ((v13 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v13 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v40 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v14 = *((void *)this + 12);
  uint64_t v41 = v14;
  if ((v14 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v14 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v41 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v15 = *((void *)this + 13);
  uint64_t v42 = v15;
  if ((v15 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v15 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v42 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v16 = *((void *)this + 14);
  uint64_t v43 = v16;
  if ((v16 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v16 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v43 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v17 = *((void *)this + 15);
  uint64_t v44 = v17;
  if ((v17 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v17 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v44 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v18 = *((void *)this + 16);
  uint64_t v45 = v18;
  if ((v18 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v18 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v45 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v19 = *((void *)this + 17);
  uint64_t v46 = v19;
  if ((v19 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v19 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v46 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v20 = *((void *)this + 18);
  uint64_t v47 = v20;
  if ((v20 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v20 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v47 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v21 = *((void *)this + 19);
  uint64_t v48 = v21;
  if ((v21 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v21 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v48 &= 0xFFFFFFFFFFFFFFF8;
  }
  *((void *)this + 2sub_2168EBBB8(&a9, 0) = 0;
  *((void *)this + 21) = 0;
  *((void *)this + 22) = 0;
  unint64_t v22 = (char *)operator new(0xA0uLL);
  uint64_t v23 = 0;
  *((void *)this + 2sub_2168EBBB8(&a9, 0) = v22;
  *((void *)this + 21) = v22;
  *((void *)this + 22) = v22 + 160;
  do
  {
    uint64_t v24 = *(uint64_t *)((char *)&v29 + v23);
    *(void *)&v22[v23] = v24;
    if ((v24 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v24 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      *(void *)&v22[v23] &= 0xFFFFFFFFFFFFFFF8;
    }
    v23 += 8;
  }
  while (v23 != 160);
  *((void *)this + 21) = v22 + 160;
  for (uint64_t i = 152; i != -8; i -= 8)
  {
    uint64_t v26 = *(uint64_t *)((char *)&v29 + i);
    if ((v26 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v26 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  return this;
}

void sub_216EE2444(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_object, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17, void *a18, void *a19, void *a20,void **a21,uint64_t a22,char a23)
{
  sub_216889A04(&a21);
  uint64_t v33 = 152;
  while (1)
  {
    uint64_t v34 = *(void *)(&a23 + v33);
    if ((v34 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v34 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    v33 -= 8;
    if (v33 == -8)
    {
      if ((*v24 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*v24 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*v32 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*v32 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*v31 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*v31 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*v30 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*v30 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*v29 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*v29 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*v28 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*v28 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*v27 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*v27 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*v26 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*v26 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*v25 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*v25 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a11 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a11 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a12 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a13 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a13 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a14 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a14 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a15 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a15 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a16 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a16 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a17 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a17 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a18 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a18 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a19 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a19 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a20 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a20 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*v23 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*v23 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      _Unwind_Resume(a1);
    }
  }
}

void sub_216EE26CC()
{
}

void sub_216EE26D4()
{
}

void sub_216EE26DC()
{
}

void sub_216EE26E4()
{
}

void sub_216EE26EC()
{
}

void sub_216EE26F4()
{
}

void sub_216EE26FC()
{
}

void sub_216EE2704()
{
}

void sub_216EE270C()
{
}

void sub_216EE2714()
{
}

void sub_216EE271C()
{
}

void pxrInternal__aapl__pxrReserved__::UsdTyped::~UsdTyped(pxrInternal__aapl__pxrReserved__::UsdTyped *this)
{
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::~UsdSchemaBase(this);

  operator delete(v1);
}

void pxrInternal__aapl__pxrReserved__::UsdTyped::Get(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  uint64_t v6 = sub_216D24140(a1);
  if (v7 & 1 | (unint64_t)v6)
  {
    uint64_t v8 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_216D01530(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(v8, a2, (uint64_t)&v9);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76BE18;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  else
  {
    uint64_t v9 = "usd/typed.cpp";
    uint64_t v10 = (atomic_ullong *)"Get";
    uint64_t v11 = 51;
    unint64_t v12 = (unint64_t)"static UsdTyped pxrInternal__aapl__pxrReserved__::UsdTyped::Get(const UsdStagePtr &, const SdfPath &)";
    char v13 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v9, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v9) = 1;
    uint64_t v10 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v11);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v11 + 1);
    unint64_t v12 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76BE18;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  if (v10) {
    sub_216D16E0C(v10);
  }
}

void sub_216EE28DC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216D16AD8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdTyped::_GetSchemaKind(pxrInternal__aapl__pxrReserved__::UsdTyped *this)
{
  return 1;
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdTyped::_GetStaticTfType(pxrInternal__aapl__pxrReserved__::UsdTyped *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B924F0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B924F0))
  {
    __cxa_guard_release(&qword_267B924F0);
  }
  return &qword_267B924E8;
}

void sub_216EE296C(_Unwind_Exception *a1)
{
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdTyped::_IsTypedSchema(pxrInternal__aapl__pxrReserved__::UsdTyped *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92500, memory_order_acquire) & 1) == 0)
  {
    uint64_t v2 = (pxrInternal__aapl__pxrReserved__::UsdTyped *)__cxa_guard_acquire(&qword_267B92500);
    if (v2)
    {
      pxrInternal__aapl__pxrReserved__::UsdTyped::_GetStaticTfType(v2);
      byte_267B924F8 = sub_216D16508((char *)&qword_267B924E8, v3, v4);
      __cxa_guard_release(&qword_267B92500);
    }
  }
  return byte_267B924F8;
}

void sub_216EE29EC(_Unwind_Exception *a1)
{
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdTyped::_GetTfType(pxrInternal__aapl__pxrReserved__::UsdTyped *this)
{
  return &qword_267B924E8;
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdTyped::GetSchemaAttributeNames(pxrInternal__aapl__pxrReserved__::UsdTyped *this)
{
  int v1 = (int)this;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92520, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92520))
  {
    qword_267B92508 = 0;
    unk_267B92510 = 0;
    qword_267B92518 = 0;
    __cxa_atexit((void (*)(void *))sub_216B554D0, &qword_267B92508, &dword_216758000);
    __cxa_guard_release(&qword_267B92520);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92540, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92540))
  {
    uint64_t v3 = (uint64_t **)sub_216D16694();
    qword_267B92528 = 0;
    unk_267B92530 = 0;
    qword_267B92538 = 0;
    sub_21698FA28(&qword_267B92528, *v3, v3[1], v3[1] - *v3);
    __cxa_atexit((void (*)(void *))sub_216B554D0, &qword_267B92528, &dword_216758000);
    __cxa_guard_release(&qword_267B92540);
  }
  if (v1) {
    return &qword_267B92528;
  }
  else {
    return &qword_267B92508;
  }
}

void sub_216EE2B34(_Unwind_Exception *a1)
{
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdTyped::_IsCompatible(pxrInternal__aapl__pxrReserved__::UsdTyped *this)
{
  if (!pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_IsCompatible(this)) {
    return 0;
  }
  sub_216D16CFC((uint64_t)&v5, (uint64_t *)this + 1, (_DWORD *)this + 4);
  uint64_t v2 = (const pxrInternal__aapl__pxrReserved__::TfType *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::UsdTyped *))(*(void *)this + 40))(this);
  uint64_t IsA = pxrInternal__aapl__pxrReserved__::UsdPrim::IsA((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v5, v2);
  if ((v9 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v9 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v8);
  sub_21697C414(&v7);
  if (v6) {
    sub_216D16E0C(v6);
  }
  return IsA;
}

void sub_216EE2C0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t *sub_216EE2C20()
{
  sub_216851EE4((uint64_t)&v6, "Tf", "TfType::Define");
  sub_216D16C68((unint64_t **)v5);
  v0 = pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p, (char **)v5, 0);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  if (v5[0])
  {
    v5[1] = v5[0];
    operator delete(v5[0]);
  }
  while (v7--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v6);
  return v0;
}

void sub_216EE2D00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a15) {
    operator delete(a15);
  }
  sub_21684E6B8(v16 - 32);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType::~UsdUsdFileFormatTokens_StaticTokenType(pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType *this)
{
  uint64_t v5 = (void **)((char *)this + 32);
  sub_216889A04(&v5);
  uint64_t v2 = *((void *)this + 3);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v3 = *((void *)this + 2);
  if ((v3 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v3 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v4 = *((void *)this + 1);
  if ((v4 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v4 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  if ((*(void *)this & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(*(void *)this & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
}

pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType *pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType::UsdUsdFileFormatTokens_StaticTokenType(atomic_uint **this)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  uint64_t v2 = (atomic_uint **)(pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this, "usd", 0) + 8);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(v2, "1.0", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this + 2, "usd", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this + 3, "format", 0);
  uint64_t v3 = *this;
  uint64_t v17 = v3;
  if ((v3 & 7) != 0)
  {
    uint64_t v4 = (atomic_uint *)((unint64_t)v3 & 0xFFFFFFFFFFFFFFF8);
    if ((atomic_fetch_add_explicit(v4, 2u, memory_order_relaxed) & 1) == 0) {
      uint64_t v17 = v4;
    }
  }
  uint64_t v5 = *v2;
  uint64_t v18 = v5;
  if ((v5 & 7) != 0)
  {
    uint64_t v6 = (atomic_uint *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    if ((atomic_fetch_add_explicit(v6, 2u, memory_order_relaxed) & 1) == 0) {
      uint64_t v18 = v6;
    }
  }
  int v7 = this[2];
  uint64_t v19 = v7;
  if ((v7 & 7) != 0)
  {
    int v8 = (atomic_uint *)((unint64_t)v7 & 0xFFFFFFFFFFFFFFF8);
    if ((atomic_fetch_add_explicit(v8, 2u, memory_order_relaxed) & 1) == 0) {
      uint64_t v19 = v8;
    }
  }
  uint64_t v9 = this[3];
  uint64_t v20 = v9;
  if ((v9 & 7) != 0)
  {
    uint64_t v10 = (atomic_uint *)((unint64_t)v9 & 0xFFFFFFFFFFFFFFF8);
    if ((atomic_fetch_add_explicit(v10, 2u, memory_order_relaxed) & 1) == 0) {
      uint64_t v20 = v10;
    }
  }
  this[4] = 0;
  this[5] = 0;
  this[6] = 0;
  uint64_t v11 = (atomic_uint *)operator new(0x20uLL);
  unint64_t v12 = 0;
  this[4] = v11;
  this[5] = v11;
  this[6] = v11 + 8;
  do
  {
    char v13 = (&v17)[v12 / 2];
    *(void *)&v11[v12] = v13;
    if ((v13 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)((unint64_t)v13 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      *(void *)&v11[v12] &= 0xFFFFFFFFFFFFFFF8;
    }
    v12 += 2;
  }
  while (v12 != 8);
  this[5] = v11 + 8;
  for (uint64_t i = 3; i != -1; --i)
  {
    uint64_t v15 = (&v17)[i];
    if ((v15 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)((unint64_t)v15 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  return (pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType *)this;
}

void sub_216EE2FDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10, uint64_t a11, char a12)
{
  sub_216889A04(&a10);
  uint64_t v17 = 24;
  while (1)
  {
    uint64_t v18 = *(void *)(&a12 + v17);
    if ((v18 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v18 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    v17 -= 8;
    if (v17 == -8)
    {
      if ((*v15 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*v15 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*v14 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*v14 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*v13 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*v13 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*v12 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      _Unwind_Resume(a1);
    }
  }
}

void sub_216EE3098()
{
  if (!atomic_load((unint64_t *)pxrInternal__aapl__pxrReserved__::USD_DEFAULT_FILE_FORMAT)) {
    pxrInternal__aapl__pxrReserved__::Tf_InitializeEnvSetting<std::string>();
  }
}

uint64_t sub_216EE30E0()
{
  v0 = sub_216EE5134();

  return sub_216EE5260(v0);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat::UsdUsdFileFormat(pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat *this)
{
  uint64_t v2 = (uint64_t *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens);
  if (!v2) {
    uint64_t v2 = (uint64_t *)sub_216E11CD8(&pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens);
  }
  uint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens);
  if (!v3) {
    uint64_t v3 = sub_216E11CD8(&pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens);
  }
  uint64_t v4 = (pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens);
  if (!v4) {
    uint64_t v4 = sub_216E11CD8(&pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens);
  }
  uint64_t v5 = (pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens);
  if (!v5) {
    uint64_t v5 = sub_216E11CD8(&pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens);
  }
  if ((*(void *)v5 & 0xFFFFFFFFFFFFFFF8) != 0) {
    EmptyString = (uint64_t *)((*(void *)v5 & 0xFFFFFFFFFFFFFFF8) + 16);
  }
  else {
    EmptyString = pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(v5);
  }
  uint64_t result = pxrInternal__aapl__pxrReserved__::SdfFileFormat::SdfFileFormat((uint64_t)this, v2, (uint64_t *)v3 + 1, (uint64_t *)v4 + 2, (uint64_t)EmptyString);
  *(void *)this = &unk_26C76BE70;
  return result;
}

void pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat::~UsdUsdFileFormat(pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat *this)
{
  pxrInternal__aapl__pxrReserved__::SdfFileFormat::~SdfFileFormat(this);

  operator delete(v1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat::InitData(uint64_t a1, uint64_t a2)
{
  sub_216EE33D4(a2, (uint64_t *)&v10);
  uint64_t v3 = sub_216AA0AEC(&v10);
  if (!(v4 & 1 | (unint64_t)v3))
  {
    sub_216EE3730((uint64_t *)&v9);
    uint64_t v5 = (atomic_uint *)*((void *)&v10 + 1);
    long long v10 = v9;
    *((void *)&v9 + 1) = 0;
    if (v5)
    {
      if (atomic_fetch_add_explicit(v5 + 2, 0xFFFFFFFF, memory_order_release) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v5 + 8))(v5);
      }
      uint64_t v6 = *((void *)&v9 + 1);
      *(void *)&long long v9 = 0;
      if (*((void *)&v9 + 1)
        && atomic_fetch_add_explicit((atomic_uint *volatile)(*((void *)&v9 + 1) + 8), 0xFFFFFFFF, memory_order_release) == 1)
      {
        (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
      }
    }
  }
  uint64_t v7 = sub_216979288((uint64_t *)&v10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)v7 + 40))(v7, a2);
  uint64_t result = *((void *)&v10 + 1);
  if (*((void *)&v10 + 1))
  {
    if (atomic_fetch_add_explicit((atomic_uint *volatile)(*((void *)&v10 + 1) + 8), 0xFFFFFFFF, memory_order_release) == 1)return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result); {
  }
    }
  return result;
}

void sub_216EE3384(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, atomic_uint *a12)
{
  if (a12)
  {
    if (atomic_fetch_add_explicit(a12 + 2, 0xFFFFFFFF, memory_order_release) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a12 + 8))(a12);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_216EE33D4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  char v4 = (pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens);
  if (!v4) {
    char v4 = sub_216E11CD8(&pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens);
  }
  if ((*((void *)v4 + 3) & 0xFFFFFFFFFFFFFFF8) != 0) {
    EmptyString = (uint64_t *)((*((void *)v4 + 3) & 0xFFFFFFFFFFFFFFF8) + 16);
  }
  else {
    EmptyString = pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(v4);
  }
  uint64_t result = sub_21678C2D8(a1, (const void **)EmptyString);
  if (a1 + 8 == result) {
    goto LABEL_49;
  }
  uint64_t v7 = result;
  int v8 = (unsigned __int8 *)(result + 56);
  long long v9 = (pxrInternal__aapl__pxrReserved__::TfToken *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
  if (!v9) {
    long long v9 = sub_216C42AE0(&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
  }
  if (!pxrInternal__aapl__pxrReserved__::TfToken::operator==(v9, v8))
  {
    uint64_t v11 = (pxrInternal__aapl__pxrReserved__::TfToken *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens);
    if (!v11) {
      uint64_t v11 = sub_216EE5494(&pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens);
    }
    if (pxrInternal__aapl__pxrReserved__::TfToken::operator==(v11, v8))
    {
      long long v10 = (pxrInternal__aapl__pxrReserved__::SdfFileFormat *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens);
      if (!v10) {
        long long v10 = sub_216EE5494(&pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens);
      }
      goto LABEL_17;
    }
    v27[0] = "usd/usdFileFormat.cpp";
    v27[1] = "_GetFileFormatForArguments";
    v27[2] = 158;
    v27[3] = "SdfFileFormatConstPtr pxrInternal__aapl__pxrReserved__::_GetFileFormatForArguments(const SdfFileFormat::Fil"
             "eFormatArguments &)";
    char v28 = 0;
    unint64_t v12 = (pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens);
    if (!v12) {
      unint64_t v12 = sub_216E11CD8(&pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens);
    }
    unint64_t v13 = *((void *)v12 + 3) & 0xFFFFFFFFFFFFFFF8;
    if (v13)
    {
      uint64_t v14 = (const char *)(v13 + 16);
      if (*(char *)(v13 + 39) < 0) {
        uint64_t v14 = *(const char **)v14;
      }
    }
    else
    {
      uint64_t v14 = "";
    }
    if (*(char *)(v7 + 79) < 0) {
      int v8 = *(unsigned __int8 **)v8;
    }
    uint64_t v15 = (pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
    if (!v15) {
      uint64_t v15 = sub_216C42AE0(&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
    }
    unint64_t v16 = *(void *)v15 & 0xFFFFFFFFFFFFFFF8;
    if (v16)
    {
      uint64_t v17 = (const char *)(v16 + 16);
      if (*(char *)(v16 + 39) < 0) {
        uint64_t v17 = *(const char **)v17;
      }
    }
    else
    {
      uint64_t v17 = "";
    }
    uint64_t v18 = (pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens);
    if (!v18) {
      uint64_t v18 = sub_216EE5494(&pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens);
    }
    unint64_t v19 = *(void *)v18 & 0xFFFFFFFFFFFFFFF8;
    if (v19)
    {
      uint64_t v20 = (const char *)(v19 + 16);
      if (*(char *)(v19 + 39) < 0) {
        uint64_t v20 = *(const char **)v20;
      }
    }
    else
    {
      uint64_t v20 = "";
    }
    sub_216EE3730(&v24);
    sub_216EE4898(&v24, &v26);
    char v21 = v26;
    unint64_t v22 = v26 & 0xFFFFFFFFFFFFFFF8;
    if ((v26 & 0xFFFFFFFFFFFFFFF8) != 0)
    {
      uint64_t v23 = (const char *)(v22 + 16);
      if (*(char *)(v22 + 39) < 0) {
        uint64_t v23 = *(const char **)v23;
      }
    }
    else
    {
      uint64_t v23 = "";
    }
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v27, 1, (pxrInternal__aapl__pxrReserved__ *)"'%s' argument was '%s', must be '%s' or '%s'. Defaulting to '%s'.", v14, (const char *)v8, v17, v20, v23);
    if ((v21 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)v22, 0xFFFFFFFE, memory_order_release);
    }
    uint64_t result = v25;
    if (v25 && atomic_fetch_add_explicit((atomic_uint *volatile)(v25 + 8), 0xFFFFFFFF, memory_order_release) == 1) {
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
    }
LABEL_49:
    *a2 = 0;
    a2[1] = 0;
    return result;
  }
  long long v10 = (pxrInternal__aapl__pxrReserved__::SdfFileFormat *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
  if (!v10) {
    long long v10 = sub_216C42AE0(&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
  }
LABEL_17:

  return sub_216EE53C4(v10, a2);
}

uint64_t sub_216EE3730@<X0>(uint64_t *a1@<X8>)
{
  if (!atomic_load((unint64_t *)pxrInternal__aapl__pxrReserved__::USD_DEFAULT_FILE_FORMAT)) {
    pxrInternal__aapl__pxrReserved__::Tf_InitializeEnvSetting<std::string>();
  }
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(&v16);
  char v4 = (pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
  if (!v4) {
    char v4 = sub_216C42AE0(&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
  }
  if ((v16 & 0xFFFFFFFFFFFFFFF8) != (*(void *)v4 & 0xFFFFFFFFFFFFFFF8))
  {
    uint64_t v5 = (pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens);
    if (!v5) {
      uint64_t v5 = sub_216EE5494(&pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens);
    }
    unint64_t v6 = v16 & 0xFFFFFFFFFFFFFFF8;
    if ((v16 & 0xFFFFFFFFFFFFFFF8) != (*(void *)v5 & 0xFFFFFFFFFFFFFFF8))
    {
      uint64_t v11 = "usd/usdFileFormat.cpp";
      unint64_t v12 = "_GetDefaultFileFormat";
      uint64_t v13 = 114;
      uint64_t v14 = "SdfFileFormatConstPtr pxrInternal__aapl__pxrReserved__::_GetDefaultFileFormat()";
      char v15 = 0;
      if (v6)
      {
        uint64_t v7 = (const char *)(v6 + 16);
        if (*(char *)(v6 + 39) < 0) {
          uint64_t v7 = *(const char **)v7;
        }
      }
      else
      {
        uint64_t v7 = "";
      }
      pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v11, (pxrInternal__aapl__pxrReserved__ *)"Default file format '%s' set in USD_DEFAULT_FILE_FORMAT must be either 'usda' or 'usdc'. Falling back to 'usdc'", v3, v7);
      int v8 = (pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens);
      if (!v8) {
        int v8 = sub_216EE5494(&pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens);
      }
      sub_2168D2318(&v16, v8);
    }
  }
  sub_216EE53C4((pxrInternal__aapl__pxrReserved__::SdfFileFormat *)&v16, a1);
  uint64_t result = (uint64_t)sub_216AA0AEC(a1);
  if (!(v10 & 1 | (unint64_t)result))
  {
    uint64_t v11 = "usd/usdFileFormat.cpp";
    unint64_t v12 = "_GetDefaultFileFormat";
    uint64_t v13 = 119;
    uint64_t v14 = "SdfFileFormatConstPtr pxrInternal__aapl__pxrReserved__::_GetDefaultFileFormat()";
    char v15 = 0;
    uint64_t result = pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v11, "defaultFormat", 0);
  }
  if ((v16 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v16 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  return result;
}

void sub_216EE38F4(_Unwind_Exception *exception_object)
{
  char v4 = *(atomic_uint **)(v1 + 8);
  if (v4 && atomic_fetch_add_explicit(v4 + 2, 0xFFFFFFFF, memory_order_release) == 1) {
    (*(void (**)(atomic_uint *))(*(void *)v4 + 8))(v4);
  }
  uint64_t v5 = *(void *)(v2 - 24);
  if ((v5 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v5 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat::_InitDetachedData@<X0>(uint64_t a1@<X1>, char **a2@<X8>)
{
  sub_216EE33D4(a1, (uint64_t *)&v10);
  uint64_t v3 = sub_216AA0AEC(&v10);
  if (!(v4 & 1 | (unint64_t)v3))
  {
    sub_216EE3730((uint64_t *)&v9);
    uint64_t v5 = (atomic_uint *)*((void *)&v10 + 1);
    long long v10 = v9;
    *((void *)&v9 + 1) = 0;
    if (v5)
    {
      if (atomic_fetch_add_explicit(v5 + 2, 0xFFFFFFFF, memory_order_release) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v5 + 8))(v5);
      }
      uint64_t v6 = *((void *)&v9 + 1);
      *(void *)&long long v9 = 0;
      if (*((void *)&v9 + 1)
        && atomic_fetch_add_explicit((atomic_uint *volatile)(*((void *)&v9 + 1) + 8), 0xFFFFFFFF, memory_order_release) == 1)
      {
        (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
      }
    }
  }
  uint64_t v7 = sub_216979288((uint64_t *)&v10);
  pxrInternal__aapl__pxrReserved__::SdfFileFormat::InitDetachedData(v7, a2);
  uint64_t result = *((void *)&v10 + 1);
  if (*((void *)&v10 + 1))
  {
    if (atomic_fetch_add_explicit((atomic_uint *volatile)(*((void *)&v10 + 1) + 8), 0xFFFFFFFF, memory_order_release) == 1)return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result); {
  }
    }
  return result;
}

void sub_216EE3AA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, atomic_uint *a12)
{
  if (a12)
  {
    if (atomic_fetch_add_explicit(a12 + 2, 0xFFFFFFFF, memory_order_release) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a12 + 8))(a12);
    }
  }
  _Unwind_Resume(exception_object);
}

BOOL pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat::CanRead(pxrInternal__aapl__pxrReserved__ *a1, uint64_t a2)
{
  Resolver = pxrInternal__aapl__pxrReserved__::ArGetResolver(a1);
  if (*(char *)(a2 + 23) < 0)
  {
    sub_216778F24(__p, *(void **)a2, *(void *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)long long __p = *(_OWORD *)a2;
    uint64_t v9 = *(void *)(a2 + 16);
  }
  pxrInternal__aapl__pxrReserved__::ArResolver::OpenAsset((uint64_t)Resolver);
  if (SHIBYTE(v9) < 0) {
    operator delete(__p[0]);
  }
  if (v10)
  {
    sub_216EE3C00();
    uint64_t v4 = sub_216EE3D50(qword_267B92548);
    if (pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat::_CanReadFromAsset(v4, a2, (uint64_t)&v10))
    {
      BOOL CanReadFromAsset = 1;
    }
    else
    {
      sub_216EE3DF8();
      uint64_t v6 = (pxrInternal__aapl__pxrReserved__::SdfFileFormat *)sub_216EE3F48(qword_267B92560);
      BOOL CanReadFromAsset = pxrInternal__aapl__pxrReserved__::SdfTextFileFormat::_CanReadFromAsset(v6, a2, &v10);
    }
  }
  else
  {
    BOOL CanReadFromAsset = 0;
  }
  if (v11) {
    sub_216784EC4(v11);
  }
  return CanReadFromAsset;
}

void sub_216EE3BD0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216EE3C00()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92558, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92558))
  {
    v0 = (pxrInternal__aapl__pxrReserved__::SdfFileFormat *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens);
    if (!v0) {
      v0 = sub_216EE5494(&pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens);
    }
    sub_216EE53C4(v0, &v2);
    sub_216EE5520((uint64_t)&v2, qword_267B92548);
    uint64_t v1 = v3;
    if (v3)
    {
      if (atomic_fetch_add_explicit((atomic_uint *volatile)(v3 + 8), 0xFFFFFFFF, memory_order_release) == 1) {
        (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
      }
    }
    __cxa_atexit((void (*)(void *))sub_216EE55C8, qword_267B92548, &dword_216758000);
    __cxa_guard_release(&qword_267B92558);
  }
}

void sub_216EE3CF0(_Unwind_Exception *a1)
{
}

uint64_t sub_216EE3D50(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t v2 = a1 + 1;
  if (!v3
    || ((int v4 = *(unsigned __int8 *)(sub_216850B68(v2) + 14), result = *a1, v4) ? (v6 = result == 0) : (v6 = 1), v6))
  {
    uint64_t v7 = j__strrchr("/Library/Caches/com.apple.xbs/Sources/USDLib/USD/pxr/base/tf/weakPtrFacade.h", 47);
    v8[0] = sub_21684E5D4((unint64_t)"/Library/Caches/com.apple.xbs/Sources/USDLib/USD/pxr/base/tf/weakPtrFacade.h", (uint64_t)v7, 0x2Fu);
    v8[1] = "operator->";
    v8[2] = 216;
    v8[3] = "DataType *pxrInternal__aapl__pxrReserved__::TfWeakPtrFacade<pxrInternal__aapl__pxrReserved__::TfWeakPtr, con"
            "st pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat>::operator->() const [PtrTemplate = pxrInternal__aapl"
            "__pxrReserved__::TfWeakPtr, Type = const pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat]";
    char v9 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostNullSmartPtrDereferenceFatalError((uint64_t)v8, (pxrInternal__aapl__pxrReserved__ *)(0x80000002174A2747 & 0x7FFFFFFFFFFFFFFFLL));
  }
  return result;
}

void sub_216EE3DF8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92570, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92570))
  {
    v0 = (pxrInternal__aapl__pxrReserved__::SdfFileFormat *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
    if (!v0) {
      v0 = sub_216C42AE0(&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
    }
    sub_216EE53C4(v0, &v2);
    sub_216EE5710((uint64_t)&v2, qword_267B92560);
    uint64_t v1 = v3;
    if (v3)
    {
      if (atomic_fetch_add_explicit((atomic_uint *volatile)(v3 + 8), 0xFFFFFFFF, memory_order_release) == 1) {
        (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
      }
    }
    __cxa_atexit((void (*)(void *))sub_216EE57B8, qword_267B92560, &dword_216758000);
    __cxa_guard_release(&qword_267B92570);
  }
}

void sub_216EE3EE8(_Unwind_Exception *a1)
{
}

uint64_t sub_216EE3F48(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t v2 = a1 + 1;
  if (!v3
    || ((int v4 = *(unsigned __int8 *)(sub_216850B68(v2) + 14), result = *a1, v4) ? (v6 = result == 0) : (v6 = 1), v6))
  {
    uint64_t v7 = j__strrchr("/Library/Caches/com.apple.xbs/Sources/USDLib/USD/pxr/base/tf/weakPtrFacade.h", 47);
    v8[0] = sub_21684E5D4((unint64_t)"/Library/Caches/com.apple.xbs/Sources/USDLib/USD/pxr/base/tf/weakPtrFacade.h", (uint64_t)v7, 0x2Fu);
    v8[1] = "operator->";
    v8[2] = 216;
    v8[3] = "DataType *pxrInternal__aapl__pxrReserved__::TfWeakPtrFacade<pxrInternal__aapl__pxrReserved__::TfWeakPtr, con"
            "st pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormat>::operator->() const [PtrTemplate = pxrInternal__aapl"
            "__pxrReserved__::TfWeakPtr, Type = const pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormat]";
    char v9 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostNullSmartPtrDereferenceFatalError((uint64_t)v8, (pxrInternal__aapl__pxrReserved__ *)(0x80000002174A2790 & 0x7FFFFFFFFFFFFFFFLL));
  }
  return result;
}

uint64_t sub_216EE3FF4(pxrInternal__aapl__pxrReserved__ *a1, pxrInternal__aapl__pxrReserved__::SdfLayer *a2, uint64_t a3, uint64_t a4)
{
  Resolver = pxrInternal__aapl__pxrReserved__::ArGetResolver(a1);
  if (*(char *)(a3 + 23) < 0)
  {
    sub_216778F24(__p, *(void **)a3, *(void *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)long long __p = *(_OWORD *)a3;
    uint64_t v24 = *(void *)(a3 + 16);
  }
  pxrInternal__aapl__pxrReserved__::ArResolver::OpenAsset((uint64_t)Resolver);
  if (SHIBYTE(v24) < 0) {
    operator delete(__p[0]);
  }
  if (v25)
  {
    sub_216EE3C00();
    sub_216EE3DF8();
    pxrInternal__aapl__pxrReserved__::TfErrorMark::TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)__p);
    uint64_t v8 = sub_216EE3D50(qword_267B92548);
    if (pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat::_ReadFromAsset(v8, a2, a3, (char *)&v25, a4, 0)) {
      goto LABEL_13;
    }
    char v9 = (atomic_ullong *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
    if (!v9) {
      pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_CreateInstance();
    }
    uint64_t v10 = sub_216862604((unint64_t *)__p, 0);
    char v27 = 0;
    uint64_t v11 = (void *)sub_2168520EC(v9 + 19, &v27);
    if (v11 != v10) {
      pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr::EraseRange(v9, v10, v11);
    }
    unint64_t v12 = (pxrInternal__aapl__pxrReserved__::SdfFileFormat *)sub_216EE3F48(qword_267B92560);
    if (pxrInternal__aapl__pxrReserved__::SdfTextFileFormat::_ReadFromAsset(v12, a2, (const std::string *)a3, &v25, a4))
    {
LABEL_13:
      pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)__p);
      uint64_t v13 = 1;
      goto LABEL_24;
    }
    uint64_t v14 = (atomic_ullong *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
    if (!v14) {
      pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_CreateInstance();
    }
    char v15 = sub_216862604((unint64_t *)__p, 0);
    char v27 = 0;
    uint64_t v16 = (void *)sub_2168520EC(v14 + 19, &v27);
    if (v16 != v15) {
      pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr::EraseRange(v14, v15, v16);
    }
    pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)__p);
    uint64_t v17 = sub_216EE3D50(qword_267B92548);
    if (pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat::_CanReadFromAsset(v17, a3, (uint64_t)&v25))
    {
      uint64_t v18 = sub_216EE3D50(qword_267B92548);
      uint64_t v19 = pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat::_ReadFromAsset(v18, a2, a3, (char *)&v25, a4, 0);
LABEL_22:
      uint64_t v13 = v19;
      goto LABEL_24;
    }
    uint64_t v20 = (pxrInternal__aapl__pxrReserved__::SdfFileFormat *)sub_216EE3F48(qword_267B92560);
    if (pxrInternal__aapl__pxrReserved__::SdfTextFileFormat::_CanReadFromAsset(v20, a3, &v25))
    {
      char v21 = (pxrInternal__aapl__pxrReserved__::SdfFileFormat *)sub_216EE3F48(qword_267B92560);
      uint64_t v19 = pxrInternal__aapl__pxrReserved__::SdfTextFileFormat::_ReadFromAsset(v21, a2, (const std::string *)a3, &v25, a4);
      goto LABEL_22;
    }
  }
  uint64_t v13 = 0;
LABEL_24:
  if (v26) {
    sub_216784EC4(v26);
  }
  return v13;
}

void sub_216EE4244(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, std::__shared_weak_count *a16)
{
  if (a16) {
    sub_216784EC4(a16);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_216EE4290(pxrInternal__aapl__pxrReserved__ *a1, pxrInternal__aapl__pxrReserved__::SdfLayer *a2, uint64_t a3, uint64_t a4)
{
  Resolver = pxrInternal__aapl__pxrReserved__::ArGetResolver(a1);
  if (*(char *)(a3 + 23) < 0)
  {
    sub_216778F24(__p, *(void **)a3, *(void *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)long long __p = *(_OWORD *)a3;
    uint64_t v24 = *(void *)(a3 + 16);
  }
  pxrInternal__aapl__pxrReserved__::ArResolver::OpenAsset((uint64_t)Resolver);
  if (SHIBYTE(v24) < 0) {
    operator delete(__p[0]);
  }
  if (v25)
  {
    sub_216EE3C00();
    sub_216EE3DF8();
    pxrInternal__aapl__pxrReserved__::TfErrorMark::TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)__p);
    uint64_t v8 = sub_216EE3D50(qword_267B92548);
    if (pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat::_ReadFromAsset(v8, a2, a3, (char *)&v25, a4, 1u)) {
      goto LABEL_13;
    }
    char v9 = (atomic_ullong *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
    if (!v9) {
      pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_CreateInstance();
    }
    uint64_t v10 = sub_216862604((unint64_t *)__p, 0);
    char v27 = 0;
    uint64_t v11 = (void *)sub_2168520EC(v9 + 19, &v27);
    if (v11 != v10) {
      pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr::EraseRange(v9, v10, v11);
    }
    unint64_t v12 = (pxrInternal__aapl__pxrReserved__::SdfFileFormat *)sub_216EE3F48(qword_267B92560);
    if (pxrInternal__aapl__pxrReserved__::SdfTextFileFormat::_ReadFromAsset(v12, a2, (const std::string *)a3, &v25, a4))
    {
LABEL_13:
      pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)__p);
      uint64_t v13 = 1;
      goto LABEL_24;
    }
    uint64_t v14 = (atomic_ullong *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
    if (!v14) {
      pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_CreateInstance();
    }
    char v15 = sub_216862604((unint64_t *)__p, 0);
    char v27 = 0;
    uint64_t v16 = (void *)sub_2168520EC(v14 + 19, &v27);
    if (v16 != v15) {
      pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr::EraseRange(v14, v15, v16);
    }
    pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)__p);
    uint64_t v17 = sub_216EE3D50(qword_267B92548);
    if (pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat::_CanReadFromAsset(v17, a3, (uint64_t)&v25))
    {
      uint64_t v18 = sub_216EE3D50(qword_267B92548);
      uint64_t v19 = pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat::_ReadFromAsset(v18, a2, a3, (char *)&v25, a4, 1u);
LABEL_22:
      uint64_t v13 = v19;
      goto LABEL_24;
    }
    uint64_t v20 = (pxrInternal__aapl__pxrReserved__::SdfFileFormat *)sub_216EE3F48(qword_267B92560);
    if (pxrInternal__aapl__pxrReserved__::SdfTextFileFormat::_CanReadFromAsset(v20, a3, &v25))
    {
      char v21 = (pxrInternal__aapl__pxrReserved__::SdfFileFormat *)sub_216EE3F48(qword_267B92560);
      uint64_t v19 = pxrInternal__aapl__pxrReserved__::SdfTextFileFormat::_ReadFromAsset(v21, a2, (const std::string *)a3, &v25, a4);
      goto LABEL_22;
    }
  }
  uint64_t v13 = 0;
LABEL_24:
  if (v26) {
    sub_216784EC4(v26);
  }
  return v13;
}

void sub_216EE44E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, std::__shared_weak_count *a16)
{
  if (a16) {
    sub_216784EC4(a16);
  }
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat::_GetUnderlyingFileFormatForLayer@<X0>(pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat *this@<X0>, const pxrInternal__aapl__pxrReserved__::SdfLayer *a2@<X1>, uint64_t *a3@<X8>)
{
  pxrInternal__aapl__pxrReserved__::SdfFileFormat::_GetLayerData(&v18, this, a2);
  sub_216EE5900((uint64_t)&v18, &v22);
  int v4 = sub_216EE59A8(&v22);
  unint64_t v6 = v5 & 1 | (unint64_t)v4;
  uint64_t v7 = v23;
  if (v23 && atomic_fetch_add_explicit((atomic_uint *volatile)(v23 + 8), 0xFFFFFFFF, memory_order_release) == 1) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
  }
  if (v6)
  {
    uint64_t v8 = (pxrInternal__aapl__pxrReserved__::SdfFileFormat *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens);
    if (!v8) {
      uint64_t v8 = sub_216EE5494(&pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens);
    }
  }
  else
  {
    sub_216EE5A08((uint64_t)&v18, &v22);
    char v9 = sub_216EE5AB0(&v22);
    unint64_t v11 = v10 & 1 | (unint64_t)v9;
    uint64_t v12 = v23;
    if (v23 && atomic_fetch_add_explicit((atomic_uint *volatile)(v23 + 8), 0xFFFFFFFF, memory_order_release) == 1) {
      (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
    }
    if (!v11)
    {
      uint64_t v20 = 0;
      uint64_t v21 = 0;
      goto LABEL_14;
    }
    uint64_t v8 = (pxrInternal__aapl__pxrReserved__::SdfFileFormat *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
    if (!v8) {
      uint64_t v8 = sub_216C42AE0(&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
    }
  }
  sub_216EE53C4(v8, &v20);
LABEL_14:
  uint64_t v13 = v19;
  if (v19 && atomic_fetch_add_explicit((atomic_uint *volatile)(v19 + 8), 0xFFFFFFFF, memory_order_release) == 1) {
    (*(void (**)(uint64_t))(*(void *)v13 + 8))(v13);
  }
  uint64_t v14 = sub_216AA0AEC(&v20);
  if (v15 & 1 | (unint64_t)v14)
  {
    uint64_t v16 = v21;
    *a3 = v20;
    a3[1] = v16;
    if (v16) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v16 + 8), 1u, memory_order_relaxed);
    }
  }
  else
  {
    sub_216EE3730(a3);
  }
  uint64_t result = v21;
  if (v21)
  {
    if (atomic_fetch_add_explicit((atomic_uint *volatile)(v21 + 8), 0xFFFFFFFF, memory_order_release) == 1) {
      return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
    }
  }
  return result;
}

void sub_216EE4720(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, atomic_uint *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if (a14) {
    sub_217324208(a14);
  }
  if (a10)
  {
    if (atomic_fetch_add_explicit(a10 + 2, 0xFFFFFFFF, memory_order_release) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a10 + 8))(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType *pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat::GetUnderlyingFormatForLayer@<X0>(pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat *this@<X0>, void *a2@<X8>)
{
  FileFormat = (uint64_t *)pxrInternal__aapl__pxrReserved__::SdfLayer::GetFileFormat(this);
  unint64_t v6 = (pxrInternal__aapl__pxrReserved__::SdfFileFormat *)sub_216979288(FileFormat);
  FormatId = (void *)pxrInternal__aapl__pxrReserved__::SdfFileFormat::GetFormatId(v6);
  uint64_t result = (pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens);
  if (!result) {
    uint64_t result = sub_216E11CD8(&pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens);
  }
  if ((*FormatId & 0xFFFFFFFFFFFFFFF8) == (*(void *)result & 0xFFFFFFFFFFFFFFF8))
  {
    pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat::_GetUnderlyingFileFormatForLayer(this, v7, &v10);
    sub_216EE4898(&v10, a2);
    uint64_t result = v11;
    if (v11)
    {
      if (atomic_fetch_add_explicit((atomic_uint *volatile)v11 + 2, 0xFFFFFFFF, memory_order_release) == 1) {
        return (pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType *))(*(void *)result + 8))(result);
      }
    }
  }
  else
  {
    *a2 = 0;
  }
  return result;
}

void sub_216EE4880(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10) {
    sub_217324208(a10);
  }
  _Unwind_Resume(exception_object);
}

pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens_StaticTokenType *sub_216EE4898@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  int v4 = sub_216AA0AEC(a1);
  unint64_t v6 = (atomic_uint *)(v5 & 1 | (unint64_t)v4);
  if (!v6
    || (uint64_t v7 = (pxrInternal__aapl__pxrReserved__::SdfFileFormat *)sub_216979288(a1),
        FormatId = (uint64_t *)pxrInternal__aapl__pxrReserved__::SdfFileFormat::GetFormatId(v7),
        uint64_t v9 = *FormatId,
        *a2 = *FormatId,
        (v9 & 7) != 0)
    && (unint64_t v6 = (atomic_uint *)(v9 & 0xFFFFFFFFFFFFFFF8),
        (atomic_fetch_add_explicit(v6, 2u, memory_order_relaxed) & 1) == 0))
  {
    *a2 = v6;
  }
  uint64_t result = (pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
  if (!result) {
    uint64_t result = sub_216C42AE0(&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
  }
  if ((*a2 & 0xFFFFFFFFFFFFFFF8) != (*(void *)result & 0xFFFFFFFFFFFFFFF8))
  {
    uint64_t result = (pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens);
    if (!result) {
      uint64_t result = sub_216EE5494(&pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens);
    }
    unint64_t v11 = *a2 & 0xFFFFFFFFFFFFFFF8;
    if (v11 != (*(void *)result & 0xFFFFFFFFFFFFFFF8))
    {
      uint64_t v17 = "usd/usdFileFormat.cpp";
      uint64_t v18 = "_GetFormatArgumentForFileFormat";
      uint64_t v19 = 133;
      uint64_t v20 = "TfToken pxrInternal__aapl__pxrReserved__::_GetFormatArgumentForFileFormat(const SdfFileFormatConstPtr &)";
      LOBYTE(v21) = 0;
      uint64_t v12 = sub_216AA0AEC(a1);
      if (v13 & 1 | (unint64_t)v12)
      {
        if (v11)
        {
          char v15 = (const char *)(v11 + 16);
          if (*(char *)(v11 + 39) < 0) {
            char v15 = *(const char **)v15;
          }
        }
        else
        {
          char v15 = "";
        }
      }
      else
      {
        char v15 = "<null>";
      }
      uint64_t v16 = pxrInternal__aapl__pxrReserved__::Tf_VerifyStringFormat((pxrInternal__aapl__pxrReserved__ *)"Unhandled file format '%s'", v13, v14, v15, v17, v18, v19, v20, v21);
      return (pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens_StaticTokenType *)pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v17, "formatArg == UsdUsdaFileFormatTokens->Id || formatArg == UsdUsdcFileFormatTokens->Id", v16);
    }
  }
  return result;
}

void sub_216EE4A0C(_Unwind_Exception *a1)
{
  uint64_t v2 = *v1;
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat::WriteToFile(uint64_t a1, pxrInternal__aapl__pxrReserved__::SdfLayer *a2, std::string *a3, uint64_t a4, uint64_t a5)
{
  sub_216EE33D4(a5, (uint64_t *)&v30);
  uint64_t v8 = sub_216AA0AEC(&v30);
  if (v9 & 1 | (unint64_t)v8) {
    goto LABEL_29;
  }
  RealPath = (std::string *)pxrInternal__aapl__pxrReserved__::SdfLayer::GetRealPath(a2);
  pxrInternal__aapl__pxrReserved__::TfRealPath(RealPath, 1, 0, &__s1);
  pxrInternal__aapl__pxrReserved__::TfRealPath(a3, 1, 0, &__p);
  uint64_t v11 = HIBYTE(__s1.__r_.__value_.__r.__words[2]);
  if ((__s1.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__s1.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __s1.__r_.__value_.__l.__size_;
  }
  std::string::size_type v13 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  char v14 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type v13 = __p.__r_.__value_.__l.__size_;
  }
  if (size == v13)
  {
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = (const pxrInternal__aapl__pxrReserved__::SdfLayer *)&__p;
    }
    else {
      p_p = (const pxrInternal__aapl__pxrReserved__::SdfLayer *)__p.__r_.__value_.__r.__words[0];
    }
    if ((*((unsigned char *)&__s1.__r_.__value_.__s + 23) & 0x80) == 0)
    {
      if (*((unsigned char *)&__s1.__r_.__value_.__s + 23))
      {
        p_s1 = &__s1;
        while (p_s1->__r_.__value_.__s.__data_[0] == *(unsigned __int8 *)p_p)
        {
          p_s1 = (std::string *)((char *)p_s1 + 1);
          p_p = (const pxrInternal__aapl__pxrReserved__::SdfLayer *)((char *)p_p + 1);
          if (!--v11) {
            goto LABEL_18;
          }
        }
        goto LABEL_25;
      }
      goto LABEL_18;
    }
    if (!memcmp(__s1.__r_.__value_.__l.__data_, p_p, __s1.__r_.__value_.__l.__size_))
    {
LABEL_18:
      pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat::_GetUnderlyingFileFormatForLayer(a2, p_p, v27);
      uint64_t v17 = (atomic_uint *)*((void *)&v30 + 1);
      long long v30 = *(_OWORD *)v27;
      v27[1] = 0;
      if (v17)
      {
        if (atomic_fetch_add_explicit(v17 + 2, 0xFFFFFFFF, memory_order_release) == 1) {
          (*(void (**)(atomic_uint *))(*(void *)v17 + 8))(v17);
        }
        uint64_t v18 = v27[1];
        v27[0] = 0;
        if (v27[1]
          && atomic_fetch_add_explicit((atomic_uint *volatile)(v27[1] + 8), 0xFFFFFFFF, memory_order_release) == 1)
        {
          (*(void (**)(uint64_t))(*(void *)v18 + 8))(v18);
        }
      }
      char v14 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
  }
LABEL_25:
  if (v14 < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__s1.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__s1.__r_.__value_.__l.__data_);
  }
LABEL_29:
  uint64_t v19 = sub_216AA0AEC(&v30);
  if (!(v20 & 1 | (unint64_t)v19))
  {
    sub_216EE3730((uint64_t *)&__s1);
    uint64_t v21 = (atomic_uint *)*((void *)&v30 + 1);
    long long v30 = *(_OWORD *)&__s1.__r_.__value_.__l.__data_;
    __s1.__r_.__value_.__l.__size_ = 0;
    if (v21)
    {
      if (atomic_fetch_add_explicit(v21 + 2, 0xFFFFFFFF, memory_order_release) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v21 + 8))(v21);
      }
      std::string::size_type v22 = __s1.__r_.__value_.__l.__size_;
      __s1.__r_.__value_.__r.__words[0] = 0;
      if (__s1.__r_.__value_.__l.__size_
        && atomic_fetch_add_explicit((atomic_uint *volatile)(__s1.__r_.__value_.__l.__size_ + 8), 0xFFFFFFFF, memory_order_release) == 1)
      {
        (*(void (**)(std::string::size_type))(*(void *)v22 + 8))(v22);
      }
    }
  }
  uint64_t v23 = sub_216979288((uint64_t *)&v30);
  *(_OWORD *)&__s1.__r_.__value_.__r.__words[1] = 0uLL;
  __s1.__r_.__value_.__r.__words[0] = (std::string::size_type)&__s1.__r_.__value_.__l.__size_;
  uint64_t v24 = (*(uint64_t (**)(uint64_t, pxrInternal__aapl__pxrReserved__::SdfLayer *, std::string *, uint64_t, std::string *))(*(void *)v23 + 64))(v23, a2, a3, a4, &__s1);
  sub_2167877AC((uint64_t)&__s1, (void *)__s1.__r_.__value_.__l.__size_);
  uint64_t v25 = *((void *)&v30 + 1);
  if (*((void *)&v30 + 1)
    && atomic_fetch_add_explicit((atomic_uint *volatile)(*((void *)&v30 + 1) + 8), 0xFFFFFFFF, memory_order_release) == 1)
  {
    (*(void (**)(uint64_t))(*(void *)v25 + 8))(v25);
  }
  return v24;
}

void sub_216EE4D34(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  uint64_t v25 = *(atomic_uint **)(v23 - 40);
  if (v25)
  {
    if (atomic_fetch_add_explicit(v25 + 2, 0xFFFFFFFF, memory_order_release) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)v25 + 8))(v25);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat::ReadFromString(int a1, pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat *this, uint64_t a3)
{
  pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat::_GetUnderlyingFileFormatForLayer(this, this, &v9);
  uint64_t v5 = sub_216979288(&v9);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat *, uint64_t))(*(void *)v5 + 72))(v5, this, a3);
  uint64_t v7 = v10;
  if (v10 && atomic_fetch_add_explicit((atomic_uint *volatile)(v10 + 8), 0xFFFFFFFF, memory_order_release) == 1) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
  }
  return v6;
}

void sub_216EE4E80(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10) {
    sub_217324208(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat::WriteToString(int a1, pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat *this, uint64_t a3, uint64_t a4)
{
  pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat::_GetUnderlyingFileFormatForLayer(this, this, &v11);
  uint64_t v7 = sub_216979288(&v11);
  uint64_t v8 = (*(uint64_t (**)(uint64_t, pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat *, uint64_t, uint64_t))(*(void *)v7 + 88))(v7, this, a3, a4);
  uint64_t v9 = v12;
  if (v12 && atomic_fetch_add_explicit((atomic_uint *volatile)(v12 + 8), 0xFFFFFFFF, memory_order_release) == 1) {
    (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
  }
  return v8;
}

void sub_216EE4F5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10) {
    sub_217324208(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat::WriteToStream(uint64_t a1, pxrInternal__aapl__pxrReserved__::Sdf_Identity **a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (uint64_t **)sub_21697F2E0(a2);
  pxrInternal__aapl__pxrReserved__::SdfSpec::GetLayer(v7, (uint64_t *)&v15);
  if (*(unsigned char *)(sub_216850B68(&v16) + 14)) {
    uint64_t v9 = v15;
  }
  else {
    uint64_t v9 = 0;
  }
  pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat::_GetUnderlyingFileFormatForLayer(v9, v8, &v17);
  uint64_t v10 = sub_216979288(&v17);
  uint64_t v11 = (*(uint64_t (**)(uint64_t, pxrInternal__aapl__pxrReserved__::Sdf_Identity **, uint64_t, uint64_t))(*(void *)v10 + 80))(v10, a2, a3, a4);
  uint64_t v12 = v18;
  if (v18 && atomic_fetch_add_explicit((atomic_uint *volatile)(v18 + 8), 0xFFFFFFFF, memory_order_release) == 1) {
    (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
  }
  uint64_t v13 = v16;
  if (v16 && atomic_fetch_add_explicit((atomic_uint *volatile)(v16 + 8), 0xFFFFFFFF, memory_order_release) == 1) {
    (*(void (**)(uint64_t))(*(void *)v13 + 8))(v13);
  }
  return v11;
}

void sub_216EE50A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, atomic_uint *a10, uint64_t a11, atomic_uint *a12)
{
  if (a12 && atomic_fetch_add_explicit(a12 + 2, 0xFFFFFFFF, memory_order_release) == 1) {
    (*(void (**)(atomic_uint *))(*(void *)a12 + 8))(a12);
  }
  if (a10)
  {
    if (atomic_fetch_add_explicit(a10 + 2, 0xFFFFFFFF, memory_order_release) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a10 + 8))(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_216EE5134()
{
  sub_216851EE4((uint64_t)&v6, "Tf", "TfType::Define");
  sub_216B76D4C((unint64_t **)v5);
  v0 = pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p, (char **)v5, 0);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  if (v5[0])
  {
    v5[1] = v5[0];
    operator delete(v5[0]);
  }
  while (v7--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v6);
  return v0;
}

void sub_216EE5214(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a15) {
    operator delete(a15);
  }
  sub_21684E6B8(v16 - 32);
  _Unwind_Resume(a1);
}

uint64_t sub_216EE5260(uint64_t *a1)
{
  uint64_t v2 = operator new(8uLL);
  *uint64_t v2 = &unk_26C76BF28;
  uint64_t v5 = v2;
  pxrInternal__aapl__pxrReserved__::TfType::SetFactory(a1, (uint64_t *)&v5, v3);
  uint64_t result = (uint64_t)v5;
  uint64_t v5 = 0;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  return result;
}

void sub_216EE52EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10) {
    sub_217324398(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_216EE5310(pxrInternal__aapl__pxrReserved__::Sdf_FileFormatFactoryBase *a1)
{
  pxrInternal__aapl__pxrReserved__::Sdf_FileFormatFactoryBase::~Sdf_FileFormatFactoryBase(a1);

  operator delete(v1);
}

pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **sub_216EE5338@<X0>(pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat **a1@<X8>)
{
  uint64_t v2 = (pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat *)operator new(0x70uLL);
  pxrInternal__aapl__pxrReserved__::UsdUsdFileFormat::UsdUsdFileFormat(v2);
  *a1 = v2;
  char v4 = 0;
  return sub_216EE5394(&v4);
}

void sub_216EE5380(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **sub_216EE5394(pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **a1)
{
  return a1;
}

uint64_t sub_216EE53C4@<X0>(pxrInternal__aapl__pxrReserved__::SdfFileFormat *a1@<X0>, uint64_t *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::SdfFileFormat::FindById(a1, a2);
  uint64_t result = (uint64_t)sub_216AA0AEC(a2);
  if (!(v4 & 1 | (unint64_t)result))
  {
    v5[0] = "usd/usdFileFormat.cpp";
    v5[1] = "_GetFileFormat";
    v5[2] = 62;
    void v5[3] = "SdfFileFormatConstPtr pxrInternal__aapl__pxrReserved__::_GetFileFormat(const TfToken &)";
    char v6 = 0;
    return pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v5, "fileFormat", 0);
  }
  return result;
}

void sub_216EE5444(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(atomic_uint **)(v1 + 8);
  if (v3)
  {
    if (atomic_fetch_add_explicit(v3 + 2, 0xFFFFFFFF, memory_order_release) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)v3 + 8))(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens_StaticTokenType *sub_216EE5494(atomic_ullong *a1)
{
  uint64_t result = sub_216EE54DC();
  uint64_t v3 = 0;
  atomic_compare_exchange_strong(a1, (unint64_t *)&v3, (unint64_t)result);
  if (v3)
  {
    if (result)
    {
      pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens_StaticTokenType::~UsdUsdcFileFormatTokens_StaticTokenType(result);
      operator delete(v4);
    }
    return (pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens_StaticTokenType *)atomic_load((unint64_t *)a1);
  }
  return result;
}

pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens_StaticTokenType *sub_216EE54DC()
{
  v0 = (pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens_StaticTokenType *)operator new(0x20uLL);
  pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens_StaticTokenType::UsdUsdcFileFormatTokens_StaticTokenType(v0);
  return v0;
}

void sub_216EE550C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_216EE5520@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  char v4 = (uint64_t *)(a1 + 8);
  if (!v5
    || ((v6 = *(unsigned __int8 *)(sub_216850B68(v4) + 14), int v7 = *(const void **)a1, v6) ? (v8 = v7 == 0) : (v8 = 1),
        v8))
  {
    uint64_t v9 = 0;
  }
  else
  {
  }

  return sub_216EE562C(a2, (uint64_t)v9);
}

uint64_t sub_216EE55C8(uint64_t a1)
{
  uint64_t v2 = *(atomic_uint **)(a1 + 8);
  if (v2 && atomic_fetch_add_explicit(v2 + 2, 0xFFFFFFFF, memory_order_release) == 1) {
    (*(void (**)(atomic_uint *))(*(void *)v2 + 8))(v2);
  }
  return a1;
}

void *sub_216EE562C(void *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = 0;
  if (a2)
  {
    sub_21685203C((unint64_t *)(a2 + 16), &v6);
    uint64_t v3 = (atomic_uint *)a1[1];
    a1[1] = v6;
    uint64_t v6 = 0;
    if (v3)
    {
      if (atomic_fetch_add_explicit(v3 + 2, 0xFFFFFFFF, memory_order_release) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v3 + 8))(v3);
      }
      uint64_t v4 = v6;
      if (v6 && atomic_fetch_add_explicit((atomic_uint *volatile)(v6 + 8), 0xFFFFFFFF, memory_order_release) == 1) {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
      }
    }
  }
  return a1;
}

void sub_216EE56F8(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void *)(v1 + 8);
  if (v3) {
    sub_217324208(v3);
  }
  _Unwind_Resume(exception_object);
}

void *sub_216EE5710@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v4 = (uint64_t *)(a1 + 8);
  if (!v5
    || ((v6 = *(unsigned __int8 *)(sub_216850B68(v4) + 14), int v7 = *(const void **)a1, v6) ? (v8 = v7 == 0) : (v8 = 1),
        v8))
  {
    uint64_t v9 = 0;
  }
  else
  {
  }

  return sub_216EE581C(a2, (uint64_t)v9);
}

uint64_t sub_216EE57B8(uint64_t a1)
{
  uint64_t v2 = *(atomic_uint **)(a1 + 8);
  if (v2 && atomic_fetch_add_explicit(v2 + 2, 0xFFFFFFFF, memory_order_release) == 1) {
    (*(void (**)(atomic_uint *))(*(void *)v2 + 8))(v2);
  }
  return a1;
}

void *sub_216EE581C(void *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = 0;
  if (a2)
  {
    sub_21685203C((unint64_t *)(a2 + 16), &v6);
    uint64_t v3 = (atomic_uint *)a1[1];
    a1[1] = v6;
    uint64_t v6 = 0;
    if (v3)
    {
      if (atomic_fetch_add_explicit(v3 + 2, 0xFFFFFFFF, memory_order_release) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v3 + 8))(v3);
      }
      uint64_t v4 = v6;
      if (v6 && atomic_fetch_add_explicit((atomic_uint *volatile)(v6 + 8), 0xFFFFFFFF, memory_order_release) == 1) {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
      }
    }
  }
  return a1;
}

void sub_216EE58E8(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void *)(v1 + 8);
  if (v3) {
    sub_217324208(v3);
  }
  _Unwind_Resume(exception_object);
}

void *sub_216EE5900@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v4 = (uint64_t *)(a1 + 8);
  if (!v5
    || ((v6 = *(unsigned __int8 *)(sub_216850B68(v4) + 14), int v7 = *(const void **)a1, v6) ? (v8 = v7 == 0) : (v8 = 1),
        v8))
  {
    uint64_t v9 = 0;
  }
  else
  {
  }

  return sub_216EE5B10(a2, (uint64_t)v9);
}

uint64_t (*sub_216EE59A8(void *a1))(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t v2 = a1 + 1;
  if (!v3) {
    return 0;
  }
  int v4 = *(unsigned __int8 *)(sub_216850B68(v2) + 14);
  if (*a1) {
    BOOL v5 = v4 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (v5) {
    return 0;
  }
  else {
    return sub_216EE5BF4;
  }
}

void *sub_216EE5A08@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  int v4 = (uint64_t *)(a1 + 8);
  if (!v5
    || ((v6 = *(unsigned __int8 *)(sub_216850B68(v4) + 14), int v7 = *(const void **)a1, v6) ? (v8 = v7 == 0) : (v8 = 1),
        v8))
  {
    uint64_t v9 = 0;
  }
  else
  {
  }

  return sub_216EE5C38(a2, (uint64_t)v9);
}

uint64_t (*sub_216EE5AB0(void *a1))(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t v2 = a1 + 1;
  if (!v3) {
    return 0;
  }
  int v4 = *(unsigned __int8 *)(sub_216850B68(v2) + 14);
  if (*a1) {
    BOOL v5 = v4 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (v5) {
    return 0;
  }
  else {
    return sub_216EE5D1C;
  }
}

void *sub_216EE5B10(void *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = 0;
  if (a2)
  {
    sub_21685203C((unint64_t *)(a2 + 16), &v6);
    uint64_t v3 = (atomic_uint *)a1[1];
    a1[1] = v6;
    uint64_t v6 = 0;
    if (v3)
    {
      if (atomic_fetch_add_explicit(v3 + 2, 0xFFFFFFFF, memory_order_release) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v3 + 8))(v3);
      }
      uint64_t v4 = v6;
      if (v6 && atomic_fetch_add_explicit((atomic_uint *volatile)(v6 + 8), 0xFFFFFFFF, memory_order_release) == 1) {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
      }
    }
  }
  return a1;
}

void sub_216EE5BDC(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void *)(v1 + 8);
  if (v3) {
    sub_217324208(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_216EE5BF4(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t v2 = a1 + 1;
  if (!v3) {
    return 0;
  }
  if (*(unsigned char *)(sub_216850B68(v2) + 14)) {
    return *a1;
  }
  return 0;
}

void *sub_216EE5C38(void *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = 0;
  if (a2)
  {
    sub_21685203C((unint64_t *)(a2 + 16), &v6);
    uint64_t v3 = (atomic_uint *)a1[1];
    a1[1] = v6;
    uint64_t v6 = 0;
    if (v3)
    {
      if (atomic_fetch_add_explicit(v3 + 2, 0xFFFFFFFF, memory_order_release) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v3 + 8))(v3);
      }
      uint64_t v4 = v6;
      if (v6 && atomic_fetch_add_explicit((atomic_uint *volatile)(v6 + 8), 0xFFFFFFFF, memory_order_release) == 1) {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
      }
    }
  }
  return a1;
}

void sub_216EE5D04(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void *)(v1 + 8);
  if (v3) {
    sub_217324208(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_216EE5D1C(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t v2 = a1 + 1;
  if (!v3) {
    return 0;
  }
  if (*(unsigned char *)(sub_216850B68(v2) + 14)) {
    return *a1;
  }
  return 0;
}

void pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens_StaticTokenType::~UsdUsdaFileFormatTokens_StaticTokenType(pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens_StaticTokenType *this)
{
  uint64_t v3 = (void **)((char *)this + 16);
  sub_216889A04(&v3);
  uint64_t v2 = *((void *)this + 1);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  if ((*(void *)this & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(*(void *)this & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
}

pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens_StaticTokenType *pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens_StaticTokenType::UsdUsdaFileFormatTokens_StaticTokenType(atomic_uint **this)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  uint64_t v2 = (atomic_uint **)(pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this, "usda", 0) + 8);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(v2, "1.0", 0);
  uint64_t v3 = *this;
  uint64_t v13 = v3;
  if ((v3 & 7) != 0)
  {
    uint64_t v4 = (atomic_uint *)((unint64_t)v3 & 0xFFFFFFFFFFFFFFF8);
    if ((atomic_fetch_add_explicit(v4, 2u, memory_order_relaxed) & 1) == 0) {
      uint64_t v13 = v4;
    }
  }
  BOOL v5 = *v2;
  char v14 = v5;
  if ((v5 & 7) != 0)
  {
    uint64_t v6 = (atomic_uint *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    if ((atomic_fetch_add_explicit(v6, 2u, memory_order_relaxed) & 1) == 0) {
      char v14 = v6;
    }
  }
  this[2] = 0;
  this[3] = 0;
  this[4] = 0;
  int v7 = (atomic_uint *)operator new(0x10uLL);
  unint64_t v8 = 0;
  this[2] = v7;
  this[3] = v7;
  this[4] = v7 + 4;
  do
  {
    uint64_t v9 = (&v13)[v8 / 2];
    *(void *)&v7[v8] = v9;
    if ((v9 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)((unint64_t)v9 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      *(void *)&v7[v8] &= 0xFFFFFFFFFFFFFFF8;
    }
    v8 += 2;
  }
  while (v8 != 4);
  this[3] = v7 + 4;
  for (uint64_t i = 1; i != -1; --i)
  {
    uint64_t v11 = (&v13)[i];
    if ((v11 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)((unint64_t)v11 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  return (pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens_StaticTokenType *)this;
}

void sub_216EE5F3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10, uint64_t a11, char a12)
{
  sub_216889A04(&a10);
  uint64_t v15 = 8;
  while (1)
  {
    uint64_t v16 = *(void *)(&a12 + v15);
    if ((v16 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v16 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    v15 -= 8;
    if (v15 == -8)
    {
      if ((*v13 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*v13 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*v12 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      _Unwind_Resume(a1);
    }
  }
}

uint64_t sub_216EE5FB8()
{
  v0 = sub_216EE60CC();

  return sub_216EE61F8(v0);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormat::UsdUsdaFileFormat(pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormat *this)
{
  uint64_t v2 = (pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
  if (!v2) {
    uint64_t v2 = sub_216C42AE0(&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
  }
  uint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
  if (!v3) {
    uint64_t v3 = sub_216C42AE0(&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
  }
  uint64_t v4 = (pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens);
  if (!v4) {
    uint64_t v4 = sub_216E11CD8(&pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens);
  }
  uint64_t result = pxrInternal__aapl__pxrReserved__::SdfTextFileFormat::SdfTextFileFormat(this, v2, (pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens_StaticTokenType *)((char *)v3 + 8), (pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType *)((char *)v4 + 16));
  *(void *)this = &unk_26C76BF68;
  return result;
}

void pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormat::~UsdUsdaFileFormat(pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormat *this)
{
  pxrInternal__aapl__pxrReserved__::SdfTextFileFormat::~SdfTextFileFormat(this);

  operator delete(v1);
}

uint64_t *sub_216EE60CC()
{
  sub_216851EE4((uint64_t)&v6, "Tf", "TfType::Define");
  sub_216EE62A0((unint64_t **)v5);
  v0 = pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p, (char **)v5, 0);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  if (v5[0])
  {
    v5[1] = v5[0];
    operator delete(v5[0]);
  }
  while (v7--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v6);
  return v0;
}

void sub_216EE61AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a15) {
    operator delete(a15);
  }
  sub_21684E6B8(v16 - 32);
  _Unwind_Resume(a1);
}

uint64_t sub_216EE61F8(uint64_t *a1)
{
  uint64_t v2 = operator new(8uLL);
  *uint64_t v2 = &unk_26C76C020;
  BOOL v5 = v2;
  pxrInternal__aapl__pxrReserved__::TfType::SetFactory(a1, (uint64_t *)&v5, v3);
  uint64_t result = (uint64_t)v5;
  BOOL v5 = 0;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  return result;
}

void sub_216EE6284(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10) {
    sub_217324398(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_216EE62A0(unint64_t **a1@<X8>)
{
  unint64_t v2 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p);
  a1[1] = 0;
  a1[2] = 0;
  *a1 = 0;
  uint64_t v3 = (unint64_t *)operator new(8uLL);
  *a1 = v3;
  *v3++ = v2;
  a1[1] = v3;
  a1[2] = v3;
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216EE6310(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216EE6338(pxrInternal__aapl__pxrReserved__::Sdf_FileFormatFactoryBase *a1)
{
  pxrInternal__aapl__pxrReserved__::Sdf_FileFormatFactoryBase::~Sdf_FileFormatFactoryBase(a1);

  operator delete(v1);
}

pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **sub_216EE6360@<X0>(pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormat **a1@<X8>)
{
  unint64_t v2 = (pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormat *)operator new(0x70uLL);
  pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormat::UsdUsdaFileFormat(v2);
  *a1 = v2;
  char v4 = 0;
  return sub_216EE63BC(&v4);
}

void sub_216EE63A8(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **sub_216EE63BC(pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **a1)
{
  return a1;
}

void pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens_StaticTokenType::~UsdUsdcFileFormatTokens_StaticTokenType(pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens_StaticTokenType *this)
{
  unint64_t v2 = (void **)((char *)this + 8);
  sub_216889A04(&v2);
  if ((*(void *)this & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(*(void *)this & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
}

{
  void **v2;

  unint64_t v2 = (void **)((char *)this + 8);
  sub_216889A04(&v2);
  if ((*(void *)this & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(*(void *)this & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
}

pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens_StaticTokenType *pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens_StaticTokenType::UsdUsdcFileFormatTokens_StaticTokenType(pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens_StaticTokenType *this)
{
  unint64_t v2 = (uint64_t *)pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this, "usdc", 0);
  uint64_t v3 = *v2;
  if ((*v2 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v3 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v3 &= 0xFFFFFFFFFFFFFFF8;
  }
  v2[1] = 0;
  v2[2] = 0;
  v2[3] = 0;
  char v4 = operator new(8uLL);
  *((void *)this + 1) = v4;
  *((void *)this + 2) = v4;
  void *v4 = v3;
  char v5 = v4 + 1;
  *((void *)this + 3) = v4 + 1;
  if ((v3 & 7) != 0)
  {
    if ((atomic_fetch_add_explicit((atomic_uint *volatile)(v3 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0) {
      *v4 &= 0xFFFFFFFFFFFFFFF8;
    }
    *((void *)this + 2) = v5;
    atomic_fetch_add_explicit((atomic_uint *volatile)(v3 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  else
  {
    *((void *)this + 2) = v5;
  }
  return this;
}

void sub_216EE655C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  uint64_t v11 = v10;
  sub_216889A04(&a9);
  if ((v11 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v11 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  sub_2173242CC(v9);
  _Unwind_Resume(a1);
}

uint64_t sub_216EE6598()
{
  v0 = sub_216EE7110();

  return sub_216EE723C(v0);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat::UsdUsdcFileFormat(pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat *this)
{
  uint64_t v1 = this;
  unint64_t v2 = (uint64_t *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens);
  if (!v2)
  {
    this = sub_216EE5494(&pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens);
    unint64_t v2 = (uint64_t *)this;
  }
  SoftwareVersionToken = (uint64_t *)pxrInternal__aapl__pxrReserved__::Usd_CrateData::GetSoftwareVersionToken(this);
  char v4 = (pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens);
  if (!v4) {
    char v4 = sub_216E11CD8(&pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens);
  }
  char v5 = (pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens_StaticTokenType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens);
  if (!v5) {
    char v5 = sub_216EE5494(&pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormatTokens);
  }
  if ((*(void *)v5 & 0xFFFFFFFFFFFFFFF8) != 0) {
    EmptyString = (uint64_t *)((*(void *)v5 & 0xFFFFFFFFFFFFFFF8) + 16);
  }
  else {
    EmptyString = pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(v5);
  }
  uint64_t result = pxrInternal__aapl__pxrReserved__::SdfFileFormat::SdfFileFormat((uint64_t)v1, v2, SoftwareVersionToken, (uint64_t *)v4 + 2, (uint64_t)EmptyString);
  *(void *)uint64_t v1 = &unk_26C76C060;
  return result;
}

void pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat::~UsdUsdcFileFormat(pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat *this)
{
  pxrInternal__aapl__pxrReserved__::SdfFileFormat::~SdfFileFormat(this);

  operator delete(v1);
}

pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat::InitData@<X0>(pxrInternal__aapl__pxrReserved__::Usd_CrateData **a1@<X8>)
{
  unint64_t v2 = (pxrInternal__aapl__pxrReserved__::Usd_CrateData *)operator new(0x20uLL);
  uint64_t v3 = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::Usd_CrateData::Usd_CrateData(v2, 0);
  uint64_t v4 = pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath(v3);
  (*(void (**)(pxrInternal__aapl__pxrReserved__::Usd_CrateData *, uint64_t, uint64_t))(*(void *)v2 + 64))(v2, v4, 7);
  *a1 = v2;
  uint64_t v6 = 0;
  return sub_216EE73A0(&v6);
}

void sub_216EE6758(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat::_InitDetachedData@<X0>(pxrInternal__aapl__pxrReserved__::Usd_CrateData **a1@<X8>)
{
  unint64_t v2 = (pxrInternal__aapl__pxrReserved__::Usd_CrateData *)operator new(0x20uLL);
  uint64_t v3 = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::Usd_CrateData::Usd_CrateData(v2, 1);
  uint64_t v4 = pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath(v3);
  (*(void (**)(pxrInternal__aapl__pxrReserved__::Usd_CrateData *, uint64_t, uint64_t))(*(void *)v2 + 64))(v2, v4, 7);
  *a1 = v2;
  uint64_t v6 = 0;
  return sub_216EE73A0(&v6);
}

void sub_216EE67EC(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat::CanRead(uint64_t a1, uint64_t a2)
{
  return pxrInternal__aapl__pxrReserved__::Usd_CrateData::CanRead(a2);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat::_CanReadFromAsset(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return pxrInternal__aapl__pxrReserved__::Usd_CrateData::CanRead(a2, a3);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat::Read(uint64_t a1, pxrInternal__aapl__pxrReserved__::SdfLayer *a2, char *a3, uint64_t a4)
{
  char v5 = 0;
  return sub_216EE683C(a1, a2, a3, a4, &v5);
}

uint64_t sub_216EE683C(uint64_t a1, pxrInternal__aapl__pxrReserved__::SdfLayer *this, char *a3, uint64_t a4, char *a5)
{
  uint64_t FileFormatArguments = pxrInternal__aapl__pxrReserved__::SdfLayer::GetFileFormatArguments(this);
  (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(*(void *)a1 + 40))(&lpsrc, a1, FileFormatArguments);
  uint64_t v10 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *)lpsrc;
  if (lpsrc) {
  char v14 = v10;
  }
  sub_2168BD80C((uint64_t *)&v14);
  if (v14
    && (uint64_t v11 = sub_216EE6DAC((uint64_t *)&v14),
        (pxrInternal__aapl__pxrReserved__::Usd_CrateData::Open(v11, a3, *a5) & 1) != 0))
  {
    pxrInternal__aapl__pxrReserved__::SdfFileFormat::_SetLayerData(this, (uint64_t *)&lpsrc);
    uint64_t v12 = 1;
  }
  else
  {
    uint64_t v12 = 0;
  }
  sub_216EE73A0(&v14);
  sub_216AA10A8((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)&lpsrc);
  return v12;
}

void sub_216EE6950(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216AA10A8((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat::_ReadDetached(uint64_t a1, pxrInternal__aapl__pxrReserved__::SdfLayer *a2, char *a3, uint64_t a4)
{
  char v5 = 1;
  return sub_216EE683C(a1, a2, a3, a4, &v5);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat::_ReadFromAsset(uint64_t a1, pxrInternal__aapl__pxrReserved__::SdfLayer *a2, uint64_t a3, char *a4, uint64_t a5, unsigned __int8 a6)
{
  unsigned __int8 v7 = a6;
  return sub_216EE69D4(a1, a2, a3, a5, a4, &v7);
}

uint64_t sub_216EE69D4(uint64_t a1, pxrInternal__aapl__pxrReserved__::SdfLayer *this, uint64_t a3, uint64_t a4, char *a5, unsigned __int8 *a6)
{
  uint64_t FileFormatArguments = pxrInternal__aapl__pxrReserved__::SdfLayer::GetFileFormatArguments(this);
  (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(*(void *)a1 + 40))(&lpsrc, a1, FileFormatArguments);
  uint64_t v12 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *)lpsrc;
  if (lpsrc) {
  uint64_t v16 = v12;
  }
  sub_2168BD80C((uint64_t *)&v16);
  if (v16
    && (uint64_t v13 = sub_216EE6DAC((uint64_t *)&v16),
        (pxrInternal__aapl__pxrReserved__::Usd_CrateData::Open(v13, a3, a5, *a6) & 1) != 0))
  {
    pxrInternal__aapl__pxrReserved__::SdfFileFormat::_SetLayerData(this, (uint64_t *)&lpsrc);
    uint64_t v14 = 1;
  }
  else
  {
    uint64_t v14 = 0;
  }
  sub_216EE73A0(&v16);
  sub_216AA10A8((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)&lpsrc);
  return v14;
}

void sub_216EE6AF8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216AA10A8((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat::WriteToFile(uint64_t a1, pxrInternal__aapl__pxrReserved__::SdfFileFormat *this, uint64_t a3)
{
  pxrInternal__aapl__pxrReserved__::SdfFileFormat::_GetLayerData((uint64_t *)&lpsrc, this, this);
  if (v19 {
    && (*(unsigned char *)(sub_216850B68(&v19) + 14) ? (BOOL v5 = lpsrc == 0) : (BOOL v5 = 1),
  }
        !v5
  {
    uint64_t v7 = pxrInternal__aapl__pxrReserved__::Usd_CrateData::Save((uint64_t)v6, a3);
  }
  else
  {
    v15[0] = 0;
    v15[1] = 0;
    uint64_t v14 = v15;
    (*(void (**)(void **__return_ptr, uint64_t, void ***))(*(void *)a1 + 40))(&v16, a1, &v14);
    unint64_t v8 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *)v16;
    if (v16) {
    uint64_t v17 = v8;
    }
    sub_2168BD80C((uint64_t *)&v17);
    sub_216AA10A8((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)&v16);
    sub_2167877AC((uint64_t)&v14, v15[0]);
    uint64_t v9 = v17;
    if (v17)
    {
      uint64_t v10 = sub_216EE6DAC((uint64_t *)&v17);
      (*(void (**)(uint64_t, void **))(*(void *)v10 + 16))(v10, &lpsrc);
      uint64_t v11 = sub_216EE6DAC((uint64_t *)&v17);
      LOBYTE(a3) = pxrInternal__aapl__pxrReserved__::Usd_CrateData::Save(v11, a3);
    }
    sub_216EE73A0(&v17);
    uint64_t v7 = (v9 != 0) & a3;
  }
  uint64_t v12 = v19;
  if (v19 && atomic_fetch_add_explicit((atomic_uint *volatile)(v19 + 8), 0xFFFFFFFF, memory_order_release) == 1) {
    (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
  }
  return v7;
}

void sub_216EE6D28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, char a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, atomic_uint *a19)
{
  if (a19)
  {
    if (atomic_fetch_add_explicit(a19 + 2, 0xFFFFFFFF, memory_order_release) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a19 + 8))(a19);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_216EE6DAC(uint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    unint64_t v2 = j__strrchr("/Library/Caches/com.apple.xbs/Sources/USDLib/USD/pxr/base/tf/refPtr.h", 47);
    v3[0] = sub_21684E5D4((unint64_t)"/Library/Caches/com.apple.xbs/Sources/USDLib/USD/pxr/base/tf/refPtr.h", (uint64_t)v2, 0x2Fu);
    v3[1] = "operator->";
    v3[2] = 953;
    v3[3] = "T *pxrInternal__aapl__pxrReserved__::TfRefPtr<pxrInternal__aapl__pxrReserved__::Usd_CrateData>::operator->()"
            " const [U = pxrInternal__aapl__pxrReserved__::Usd_CrateData]";
    char v4 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostNullSmartPtrDereferenceFatalError((uint64_t)v3, (pxrInternal__aapl__pxrReserved__ *)(0x80000002174A28F3 & 0x7FFFFFFFFFFFFFFFLL));
  }
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat::ReadFromString(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v5 = (pxrInternal__aapl__pxrReserved__::SdfFileFormat *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
  if (!v5) {
    BOOL v5 = sub_216C42AE0(&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
  }
  pxrInternal__aapl__pxrReserved__::SdfFileFormat::FindById(v5, &v10);
  uint64_t v6 = sub_216979288(&v10);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v6 + 72))(v6, a2, a3);
  uint64_t v8 = v11;
  if (v11 && atomic_fetch_add_explicit((atomic_uint *volatile)(v11 + 8), 0xFFFFFFFF, memory_order_release) == 1) {
    (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
  }
  return v7;
}

void sub_216EE6F08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10) {
    sub_217324208(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat::WriteToString(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (pxrInternal__aapl__pxrReserved__::SdfFileFormat *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
  if (!v7) {
    uint64_t v7 = sub_216C42AE0(&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
  }
  pxrInternal__aapl__pxrReserved__::SdfFileFormat::FindById(v7, &v12);
  uint64_t v8 = sub_216979288(&v12);
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)v8 + 88))(v8, a2, a3, a4);
  uint64_t v10 = v13;
  if (v13 && atomic_fetch_add_explicit((atomic_uint *volatile)(v13 + 8), 0xFFFFFFFF, memory_order_release) == 1) {
    (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
  }
  return v9;
}

void sub_216EE7000(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10) {
    sub_217324208(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat::WriteToStream(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (pxrInternal__aapl__pxrReserved__::SdfFileFormat *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
  if (!v7) {
    uint64_t v7 = sub_216C42AE0(&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
  }
  pxrInternal__aapl__pxrReserved__::SdfFileFormat::FindById(v7, &v12);
  uint64_t v8 = sub_216979288(&v12);
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)v8 + 80))(v8, a2, a3, a4);
  uint64_t v10 = v13;
  if (v13 && atomic_fetch_add_explicit((atomic_uint *volatile)(v13 + 8), 0xFFFFFFFF, memory_order_release) == 1) {
    (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
  }
  return v9;
}

void sub_216EE70F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10) {
    sub_217324208(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_216EE7110()
{
  sub_216851EE4((uint64_t)&v6, "Tf", "TfType::Define");
  sub_216B76D4C((unint64_t **)v5);
  v0 = pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p, (char **)v5, 0);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  if (v5[0])
  {
    v5[1] = v5[0];
    operator delete(v5[0]);
  }
  while (v7--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v6);
  return v0;
}

void sub_216EE71F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a15) {
    operator delete(a15);
  }
  sub_21684E6B8(v16 - 32);
  _Unwind_Resume(a1);
}

uint64_t sub_216EE723C(uint64_t *a1)
{
  unint64_t v2 = operator new(8uLL);
  *unint64_t v2 = &unk_26C76C118;
  BOOL v5 = v2;
  pxrInternal__aapl__pxrReserved__::TfType::SetFactory(a1, (uint64_t *)&v5, v3);
  uint64_t result = (uint64_t)v5;
  BOOL v5 = 0;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  return result;
}

void sub_216EE72C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10) {
    sub_217324398(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_216EE72EC(pxrInternal__aapl__pxrReserved__::Sdf_FileFormatFactoryBase *a1)
{
  pxrInternal__aapl__pxrReserved__::Sdf_FileFormatFactoryBase::~Sdf_FileFormatFactoryBase(a1);

  operator delete(v1);
}

pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **sub_216EE7314@<X0>(pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat **a1@<X8>)
{
  unint64_t v2 = (pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat *)operator new(0x70uLL);
  pxrInternal__aapl__pxrReserved__::UsdUsdcFileFormat::UsdUsdcFileFormat(v2);
  *a1 = v2;
  char v4 = 0;
  return sub_216EE7370(&v4);
}

void sub_216EE735C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **sub_216EE7370(pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **a1)
{
  return a1;
}

pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **sub_216EE73A0(pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **a1)
{
  return a1;
}

void pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormatTokens_StaticTokenType::~UsdUsdzFileFormatTokens_StaticTokenType(pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormatTokens_StaticTokenType *this)
{
  char v4 = (void **)((char *)this + 24);
  sub_216889A04(&v4);
  uint64_t v2 = *((void *)this + 2);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v3 = *((void *)this + 1);
  if ((v3 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v3 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  if ((*(void *)this & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(*(void *)this & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
}

pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormatTokens_StaticTokenType *pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormatTokens_StaticTokenType::UsdUsdzFileFormatTokens_StaticTokenType(atomic_uint **this)
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  uint64_t v2 = (atomic_uint **)(pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this, "usdz", 0) + 8);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(v2, "1.0", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this + 2, "usd", 0);
  uint64_t v3 = *this;
  uint64_t v15 = v3;
  if ((v3 & 7) != 0)
  {
    char v4 = (atomic_uint *)((unint64_t)v3 & 0xFFFFFFFFFFFFFFF8);
    if ((atomic_fetch_add_explicit(v4, 2u, memory_order_relaxed) & 1) == 0) {
      uint64_t v15 = v4;
    }
  }
  BOOL v5 = *v2;
  uint64_t v16 = v5;
  if ((v5 & 7) != 0)
  {
    uint64_t v6 = (atomic_uint *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    if ((atomic_fetch_add_explicit(v6, 2u, memory_order_relaxed) & 1) == 0) {
      uint64_t v16 = v6;
    }
  }
  int v7 = this[2];
  uint64_t v17 = v7;
  if ((v7 & 7) != 0)
  {
    uint64_t v8 = (atomic_uint *)((unint64_t)v7 & 0xFFFFFFFFFFFFFFF8);
    if ((atomic_fetch_add_explicit(v8, 2u, memory_order_relaxed) & 1) == 0) {
      uint64_t v17 = v8;
    }
  }
  this[3] = 0;
  this[4] = 0;
  this[5] = 0;
  uint64_t v9 = (atomic_uint *)operator new(0x18uLL);
  unint64_t v10 = 0;
  this[3] = v9;
  this[4] = v9;
  this[5] = v9 + 6;
  do
  {
    uint64_t v11 = (&v15)[v10 / 2];
    *(void *)&v9[v10] = v11;
    if ((v11 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)((unint64_t)v11 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      *(void *)&v9[v10] &= 0xFFFFFFFFFFFFFFF8;
    }
    v10 += 2;
  }
  while (v10 != 6);
  this[4] = v9 + 6;
  for (uint64_t i = 2; i != -1; --i)
  {
    uint64_t v13 = (&v15)[i];
    if ((v13 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)((unint64_t)v13 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  return (pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormatTokens_StaticTokenType *)this;
}

void sub_216EE7600(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9, uint64_t a10, char a11)
{
  sub_216889A04(&a9);
  uint64_t v15 = 16;
  while (1)
  {
    uint64_t v16 = *(void *)(&a11 + v15);
    if ((v16 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v16 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    v15 -= 8;
    if (v15 == -8)
    {
      if ((*v13 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*v13 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*v12 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*v11 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*v11 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      _Unwind_Resume(a1);
    }
  }
}

uint64_t sub_216EE769C()
{
  v0 = sub_216EE827C();

  return sub_216EE83A8(v0);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormat::UsdUsdzFileFormat(pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormat *this)
{
  uint64_t v2 = (uint64_t *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormatTokens);
  if (!v2) {
    uint64_t v2 = (uint64_t *)sub_216EE850C(&pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormatTokens);
  }
  uint64_t v3 = (atomic_uint **)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormatTokens);
  if (!v3) {
    uint64_t v3 = sub_216EE850C(&pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormatTokens);
  }
  char v4 = (atomic_uint **)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormatTokens);
  if (!v4) {
    char v4 = sub_216EE850C(&pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormatTokens);
  }
  BOOL v5 = (pxrInternal__aapl__pxrReserved__::TfToken *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormatTokens);
  if (!v5) {
    BOOL v5 = (pxrInternal__aapl__pxrReserved__::TfToken *)sub_216EE850C(&pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormatTokens);
  }
  if ((*(void *)v5 & 0xFFFFFFFFFFFFFFF8) != 0) {
    EmptyString = (uint64_t *)((*(void *)v5 & 0xFFFFFFFFFFFFFFF8) + 16);
  }
  else {
    EmptyString = pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(v5);
  }
  uint64_t result = pxrInternal__aapl__pxrReserved__::SdfFileFormat::SdfFileFormat((uint64_t)this, v2, (uint64_t *)v3 + 1, (uint64_t *)v4 + 2, (uint64_t)EmptyString);
  *(void *)this = &unk_26C76C158;
  return result;
}

void pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormat::~UsdUsdzFileFormat(pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormat *this)
{
  pxrInternal__aapl__pxrReserved__::SdfFileFormat::~SdfFileFormat(this);

  operator delete(v1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormat::IsPackage(pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormat *this)
{
  return 1;
}

void pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormat::GetPackageRootLayerPath(pxrInternal__aapl__pxrReserved__::Usd_UsdzResolverCache *a1@<X1>, void *a2@<X8>)
{
}

void sub_216EE77F8(pxrInternal__aapl__pxrReserved__::Usd_UsdzResolverCache *a1@<X0>, void *a2@<X8>)
{
  Instance = (atomic_ullong *)pxrInternal__aapl__pxrReserved__::Usd_UsdzResolverCache::GetInstance(a1);
  pxrInternal__aapl__pxrReserved__::Usd_UsdzResolverCache::FindOrOpenZipFile(Instance, (long long *)a1, (uint64_t *)&v7);
  uint64_t v5 = v9;
  v11[0] = v9;
  v11[1] = v10;
  if (v10) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v10 + 8), 1uLL, memory_order_relaxed);
  }
  pxrInternal__aapl__pxrReserved__::UsdZipFile::~UsdZipFile((pxrInternal__aapl__pxrReserved__::UsdZipFile *)&v9);
  if (v8) {
    sub_216784EC4(v8);
  }
  if (v5)
  {
    pxrInternal__aapl__pxrReserved__::UsdZipFile::begin((pxrInternal__aapl__pxrReserved__::UsdZipFile *)v11, &v7);
    pxrInternal__aapl__pxrReserved__::UsdZipFile::end(&v6);
    if (pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator::operator==((void **)&v7, (void **)&v6))
    {
      *a2 = 0;
      a2[1] = 0;
      a2[2] = 0;
    }
    else
    {
      pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator::operator*(&v7, a2);
    }
    pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator::~Iterator(&v6);
    pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator::~Iterator(&v7);
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
  }
  pxrInternal__aapl__pxrReserved__::UsdZipFile::~UsdZipFile((pxrInternal__aapl__pxrReserved__::UsdZipFile *)v11);
}

void sub_216EE78D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  char v4 = va_arg(va1, void *);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator::~Iterator((void **)va);
  pxrInternal__aapl__pxrReserved__::UsdZipFile::~UsdZipFile((pxrInternal__aapl__pxrReserved__::UsdZipFile *)va1);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormat::CanRead(uint64_t a1, pxrInternal__aapl__pxrReserved__::Usd_UsdzResolverCache *a2)
{
  sub_216EE77F8(a2, v13);
  unint64_t v3 = v14;
  if ((v14 & 0x80u) != 0) {
    unint64_t v3 = (unint64_t)v13[1];
  }
  if (v3)
  {
    memset(&__p, 0, sizeof(__p));
    pxrInternal__aapl__pxrReserved__::SdfFileFormat::FindByExtension((uint64_t)v13, (uint64_t)&__p, &v11);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    char v4 = sub_216AA0AEC(&v11);
    if (v5 & 1 | (unint64_t)v4)
    {
      pxrInternal__aapl__pxrReserved__::ArJoinPackageRelativePath((uint64_t)a2, (uint64_t)v13, &__p);
      uint64_t v6 = sub_216979288(&v11);
      uint64_t v7 = (*(uint64_t (**)(uint64_t, std::string *))(*(void *)v6 + 48))(v6, &__p);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
    }
    else
    {
      uint64_t v7 = 0;
    }
    uint64_t v8 = v12;
    if (v12 && atomic_fetch_add_explicit((atomic_uint *volatile)(v12 + 8), 0xFFFFFFFF, memory_order_release) == 1) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    }
    if ((v14 & 0x80) != 0) {
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v7 = 0;
    if ((v14 & 0x80) != 0) {
LABEL_16:
    }
      operator delete(v13[0]);
  }
  return v7;
}

void sub_216EE7A50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, atomic_uint *a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a16 && atomic_fetch_add_explicit(a16 + 2, 0xFFFFFFFF, memory_order_release) == 1) {
    (*(void (**)(atomic_uint *))(*(void *)a16 + 8))(a16);
  }
  if (a22 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_216EE7AE4(uint64_t a1, uint64_t a2, pxrInternal__aapl__pxrReserved__::Usd_UsdzResolverCache *a3, uint64_t a4)
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  pxrInternal__aapl__pxrReserved__::ArResolverScopedCache::ArResolverScopedCache((pxrInternal__aapl__pxrReserved__::ArResolverScopedCache *)v19);
  sub_216EE77F8(a3, v17);
  unint64_t v7 = v18;
  if ((v18 & 0x80u) != 0) {
    unint64_t v7 = (unint64_t)v17[1];
  }
  if (v7)
  {
    memset(&__p, 0, sizeof(__p));
    pxrInternal__aapl__pxrReserved__::SdfFileFormat::FindByExtension((uint64_t)v17, (uint64_t)&__p, &v15);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    uint64_t v8 = sub_216AA0AEC(&v15);
    if (v9 & 1 | (unint64_t)v8)
    {
      pxrInternal__aapl__pxrReserved__::ArJoinPackageRelativePath((uint64_t)a3, (uint64_t)v17, &__p);
      uint64_t v10 = sub_216979288(&v15);
      uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t, std::string *, uint64_t))(*(void *)v10 + 56))(v10, a2, &__p, a4);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
    }
    else
    {
      uint64_t v11 = 0;
    }
    uint64_t v12 = v16;
    if (v16 && atomic_fetch_add_explicit((atomic_uint *volatile)(v16 + 8), 0xFFFFFFFF, memory_order_release) == 1) {
      (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
    }
    if ((v18 & 0x80) != 0) {
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v11 = 0;
    if ((v18 & 0x80) != 0) {
LABEL_16:
    }
      operator delete(v17[0]);
  }
  pxrInternal__aapl__pxrReserved__::ArResolverScopedCache::~ArResolverScopedCache((pxrInternal__aapl__pxrReserved__::ArResolverScopedCache *)v19);
  return v11;
}

void sub_216EE7C7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, atomic_uint *a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a17 && atomic_fetch_add_explicit(a17 + 2, 0xFFFFFFFF, memory_order_release) == 1) {
    (*(void (**)(atomic_uint *))(*(void *)a17 + 8))(a17);
  }
  if (a23 < 0) {
    operator delete(__p);
  }
  pxrInternal__aapl__pxrReserved__::ArResolverScopedCache::~ArResolverScopedCache((pxrInternal__aapl__pxrReserved__::ArResolverScopedCache *)(v23 - 56));
  _Unwind_Resume(a1);
}

uint64_t sub_216EE7D28(uint64_t a1, pxrInternal__aapl__pxrReserved__::SdfLayer *a2, pxrInternal__aapl__pxrReserved__::Usd_UsdzResolverCache *a3)
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  pxrInternal__aapl__pxrReserved__::ArResolverScopedCache::ArResolverScopedCache((pxrInternal__aapl__pxrReserved__::ArResolverScopedCache *)v17);
  sub_216EE77F8(a3, v15);
  unint64_t v5 = v16;
  if ((v16 & 0x80u) != 0) {
    unint64_t v5 = (unint64_t)v15[1];
  }
  if (v5)
  {
    memset(&__p, 0, sizeof(__p));
    pxrInternal__aapl__pxrReserved__::SdfFileFormat::FindByExtension((uint64_t)v15, (uint64_t)&__p, &v13);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    uint64_t v6 = sub_216AA0AEC(&v13);
    if (v7 & 1 | (unint64_t)v6)
    {
      pxrInternal__aapl__pxrReserved__::ArJoinPackageRelativePath((uint64_t)a3, (uint64_t)v15, &__p);
      uint64_t v8 = sub_216979288(&v13);
      uint64_t Detached = pxrInternal__aapl__pxrReserved__::SdfFileFormat::ReadDetached(v8, a2, (unsigned __int8 *)&__p);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
    }
    else
    {
      uint64_t Detached = 0;
    }
    uint64_t v10 = v14;
    if (v14 && atomic_fetch_add_explicit((atomic_uint *volatile)(v14 + 8), 0xFFFFFFFF, memory_order_release) == 1) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
    }
    if ((v16 & 0x80) != 0) {
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t Detached = 0;
    if ((v16 & 0x80) != 0) {
LABEL_16:
    }
      operator delete(v15[0]);
  }
  pxrInternal__aapl__pxrReserved__::ArResolverScopedCache::~ArResolverScopedCache((pxrInternal__aapl__pxrReserved__::ArResolverScopedCache *)v17);
  return Detached;
}

void sub_216EE7EA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, atomic_uint *a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a17 && atomic_fetch_add_explicit(a17 + 2, 0xFFFFFFFF, memory_order_release) == 1) {
    (*(void (**)(atomic_uint *))(*(void *)a17 + 8))(a17);
  }
  if (a23 < 0) {
    operator delete(__p);
  }
  pxrInternal__aapl__pxrReserved__::ArResolverScopedCache::~ArResolverScopedCache((pxrInternal__aapl__pxrReserved__::ArResolverScopedCache *)(v23 - 56));
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormat::WriteToFile()
{
  v1[0] = "usd/usdzFileFormat.cpp";
  v1[1] = "WriteToFile";
  v1[2] = 188;
  v1[3] = "virtual BOOL pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormat::WriteToFile(const SdfLayer &, const std::str"
          "ing &, const std::string &, const FileFormatArguments &) const";
  char v2 = 0;
  pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v1, 1, (pxrInternal__aapl__pxrReserved__ *)"Writing usdz layers is not allowed via this API.");
  return 0;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormat::ReadFromString(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = (pxrInternal__aapl__pxrReserved__::SdfFileFormat *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
  if (!v5) {
    unint64_t v5 = sub_216C42AE0(&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
  }
  pxrInternal__aapl__pxrReserved__::SdfFileFormat::FindById(v5, &v10);
  uint64_t v6 = sub_216979288(&v10);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v6 + 72))(v6, a2, a3);
  uint64_t v8 = v11;
  if (v11 && atomic_fetch_add_explicit((atomic_uint *volatile)(v11 + 8), 0xFFFFFFFF, memory_order_release) == 1) {
    (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
  }
  return v7;
}

void sub_216EE8074(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10) {
    sub_217324208(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormat::WriteToString(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (pxrInternal__aapl__pxrReserved__::SdfFileFormat *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
  if (!v7) {
    uint64_t v7 = sub_216C42AE0(&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
  }
  pxrInternal__aapl__pxrReserved__::SdfFileFormat::FindById(v7, &v12);
  uint64_t v8 = sub_216979288(&v12);
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)v8 + 88))(v8, a2, a3, a4);
  uint64_t v10 = v13;
  if (v13 && atomic_fetch_add_explicit((atomic_uint *volatile)(v13 + 8), 0xFFFFFFFF, memory_order_release) == 1) {
    (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
  }
  return v9;
}

void sub_216EE816C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10) {
    sub_217324208(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormat::WriteToStream(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (pxrInternal__aapl__pxrReserved__::SdfFileFormat *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
  if (!v7) {
    uint64_t v7 = sub_216C42AE0(&pxrInternal__aapl__pxrReserved__::UsdUsdaFileFormatTokens);
  }
  pxrInternal__aapl__pxrReserved__::SdfFileFormat::FindById(v7, &v12);
  uint64_t v8 = sub_216979288(&v12);
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)v8 + 80))(v8, a2, a3, a4);
  uint64_t v10 = v13;
  if (v13 && atomic_fetch_add_explicit((atomic_uint *volatile)(v13 + 8), 0xFFFFFFFF, memory_order_release) == 1) {
    (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
  }
  return v9;
}

void sub_216EE8264(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10) {
    sub_217324208(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_216EE827C()
{
  sub_216851EE4((uint64_t)&v6, "Tf", "TfType::Define");
  sub_216B76D4C((unint64_t **)v5);
  v0 = pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p, (char **)v5, 0);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  if (v5[0])
  {
    v5[1] = v5[0];
    operator delete(v5[0]);
  }
  while (v7--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v6);
  return v0;
}

void sub_216EE835C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a15) {
    operator delete(a15);
  }
  sub_21684E6B8(v16 - 32);
  _Unwind_Resume(a1);
}

uint64_t sub_216EE83A8(uint64_t *a1)
{
  char v2 = operator new(8uLL);
  *char v2 = &unk_26C76C210;
  unint64_t v5 = v2;
  pxrInternal__aapl__pxrReserved__::TfType::SetFactory(a1, (uint64_t *)&v5, v3);
  uint64_t result = (uint64_t)v5;
  unint64_t v5 = 0;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  return result;
}

void sub_216EE8434(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10) {
    sub_217324398(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_216EE8458(pxrInternal__aapl__pxrReserved__::Sdf_FileFormatFactoryBase *a1)
{
  pxrInternal__aapl__pxrReserved__::Sdf_FileFormatFactoryBase::~Sdf_FileFormatFactoryBase(a1);

  operator delete(v1);
}

pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **sub_216EE8480@<X0>(pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormat **a1@<X8>)
{
  char v2 = (pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormat *)operator new(0x70uLL);
  pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormat::UsdUsdzFileFormat(v2);
  *a1 = v2;
  char v4 = 0;
  return sub_216EE84DC(&v4);
}

void sub_216EE84C8(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **sub_216EE84DC(pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **a1)
{
  return a1;
}

atomic_uint **sub_216EE850C(atomic_ullong *a1)
{
  uint64_t result = sub_216EE8554();
  uint64_t v3 = 0;
  atomic_compare_exchange_strong(a1, (unint64_t *)&v3, (unint64_t)result);
  if (v3)
  {
    if (result)
    {
      pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormatTokens_StaticTokenType::~UsdUsdzFileFormatTokens_StaticTokenType((pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormatTokens_StaticTokenType *)result);
      operator delete(v4);
    }
    return (atomic_uint **)atomic_load((unint64_t *)a1);
  }
  return result;
}

atomic_uint **sub_216EE8554()
{
  v0 = (atomic_uint **)operator new(0x30uLL);
  pxrInternal__aapl__pxrReserved__::UsdUsdzFileFormatTokens_StaticTokenType::UsdUsdzFileFormatTokens_StaticTokenType(v0);
  return v0;
}

void sub_216EE8584(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdVariantSet::AddVariant(pxrInternal__aapl__pxrReserved__::UsdVariantSet *a1, uint64_t a2, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a3)
{
  pxrInternal__aapl__pxrReserved__::UsdVariantSet::_AddVariantSet(a1, a3, &v8);
  int IsDormant = pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&v8);
  if ((IsDormant & 1) == 0)
  {
    uint64_t v6 = (uint64_t **)sub_216A694A0((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&v8);
    pxrInternal__aapl__pxrReserved__::SdfVariantSetSpec::GetVariants(v6);
  }
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v4, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v8);
  return (IsDormant ^ 1) & v3;
}

void sub_216EE8760(_Unwind_Exception *a1@<X0>, void *a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(a2, (pxrInternal__aapl__pxrReserved__::SdfSpec *)va);
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v9, (pxrInternal__aapl__pxrReserved__::SdfSpec *)(v7 - 72));
  _Unwind_Resume(a1);
}

void *pxrInternal__aapl__pxrReserved__::UsdVariantSet::_AddVariantSet@<X0>(pxrInternal__aapl__pxrReserved__::UsdVariantSet *a1@<X0>, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2@<X1>, atomic_uint **a3@<X8>)
{
  *a3 = 0;
  pxrInternal__aapl__pxrReserved__::UsdVariantSet::_CreatePrimSpecForEditing(a1, a2, &v22);
  if ((pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant(&v22) & 1) == 0)
  {
    uint64_t v6 = sub_216A663FC(&v22);
    pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v6, &v23);
    uint64_t v7 = (uint64_t)a1 + 32;
    __p[0] = 0;
    __p[1] = 0;
    uint64_t v19 = 0;
    pxrInternal__aapl__pxrReserved__::SdfPath::AppendVariantSelection(&v23, v7, (uint64_t)__p, &v20);
    if (SHIBYTE(v19) < 0) {
      operator delete(__p[0]);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v23 + 1);
    sub_21697C414(&v23);
    if (pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator BOOL(&v20))
    {
      uint64_t v8 = (uint64_t **)sub_216A663FC(&v22);
      pxrInternal__aapl__pxrReserved__::SdfSpec::GetLayer(v8, (uint64_t *)__p);
      uint64_t v9 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0((uint64_t *)__p);
      pxrInternal__aapl__pxrReserved__::SdfLayer::GetObjectAtPath(v9, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v20, &v17);
      if (pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&v17))
      {
        pxrInternal__aapl__pxrReserved__::SdfVariantSetSpec::New(&v22, v7, &v23);
        pxrInternal__aapl__pxrReserved__::SdfSpec::operator=(a3, &v23);
        uint64_t v12 = &v23;
      }
      else
      {
        if (pxrInternal__aapl__pxrReserved__::Sdf_CanCastToType((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&v17, (const pxrInternal__aapl__pxrReserved__::SdfSpec *)&stru_26C7580F0, v10))
        {
          uint64_t v23 = v17;
          if (v17)
          {
            uint64_t add = 1;
            atomic_fetch_add(v17, 1u);
            uint64_t v16 = v23;
            if (v23) {
              uint64_t add = atomic_fetch_add(v23, 1u);
            }
          }
          else
          {
            uint64_t v16 = 0;
          }
          pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec((void *)add, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v23);
        }
        else
        {
          uint64_t v16 = 0;
        }
        pxrInternal__aapl__pxrReserved__::SdfSpec::operator=(a3, &v16);
        uint64_t v12 = &v16;
      }
      pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v11, (pxrInternal__aapl__pxrReserved__::SdfSpec *)v12);
      pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec((pxrInternal__aapl__pxrReserved__::SdfSpec *)&v17);
      uint64_t v14 = (atomic_uint **)sub_216A663FC(&v22);
      pxrInternal__aapl__pxrReserved__::SdfPrimSpec::GetVariantSetNameList(v14);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v21);
    sub_21697C414(&v20);
  }
  return pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v5, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v22);
}

void sub_216EE89BC(_Unwind_Exception *a1@<X0>, void *a2@<X8>, uint64_t a3, uint64_t a4, char a5, int a6, __int16 a7, char a8, char a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, int a16)
{
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(a2, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&a5);
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec((pxrInternal__aapl__pxrReserved__::SdfSpec *)&a7);
  uint64_t v19 = a11;
  if (a11)
  {
    if (atomic_fetch_add_explicit((atomic_uint *volatile)(a11 + 8), 0xFFFFFFFF, memory_order_release) == 1) {
      (*(void (**)(uint64_t))(*(void *)v19 + 8))(v19);
    }
  }
  sub_21697B754(&a16);
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v20, (pxrInternal__aapl__pxrReserved__::SdfSpec *)(v17 - 48));
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v21, v16);
  _Unwind_Resume(a1);
}

void sub_216EE8AAC()
{
}

void pxrInternal__aapl__pxrReserved__::UsdVariantSet::GetVariantNames(pxrInternal__aapl__pxrReserved__::UsdVariantSet *this@<X0>, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2@<X1>, void *a3@<X8>)
{
  v27[0] = 0;
  v27[1] = 0;
  uint64_t v26 = v27;
  unint64_t v5 = (uint64_t *)sub_216D240F8((uint64_t)this, a2);
  pxrInternal__aapl__pxrReserved__::PcpPrimIndex::GetNodeRange(v5, 6u, (uint64_t *)&v18);
  long long v25 = v19;
  long long v24 = v18;
  long long v20 = v19;
  long long v21 = v19;
  long long v22 = v18;
  long long v23 = v18;
  uint64_t v8 = (char *)this + 32;
  while ((void)v21 != (void)v23 || *((void *)&v21 + 1) != *((void *)&v23 + 1))
  {
    uint64_t v10 = sub_216DFFC94(&v20, v6, v7);
    uint64_t v11 = v10[3] - 1;
    *(void *)&long long v18 = v10[2];
    *((void *)&v18 + 1) = v11;
    Path = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v18);
    if (pxrInternal__aapl__pxrReserved__::SdfPath::IsPrimOrPrimVariantSelectionPath(Path))
    {
      *(void *)&long long v18 = sub_216E15794(&v20, v13, v14);
      *((void *)&v18 + 1) = v15;
      LayerStack = (uint64_t *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetLayerStack((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v18);
      uint64_t v17 = (_DWORD *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v18);
      pxrInternal__aapl__pxrReserved__::PcpComposeSiteVariantSetOptions(LayerStack, v17, (uint64_t)v8, (uint64_t **)&v26);
    }
    sub_216DFFD8C(&v20);
  }
  sub_216BE2434(a3, v26, v27);
  sub_21678A498((uint64_t)&v26, v27[0]);
}

void sub_216EE8BC8(_Unwind_Exception *a1)
{
  sub_21678A498(v1 - 56, *(char **)(v1 - 48));
  _Unwind_Resume(a1);
}

BOOL pxrInternal__aapl__pxrReserved__::UsdVariantSet::HasAuthoredVariant(pxrInternal__aapl__pxrReserved__::UsdVariantSet *a1, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2)
{
  pxrInternal__aapl__pxrReserved__::UsdVariantSet::GetVariantNames(a1, a2, &v6);
  uint64_t v3 = sub_2169CAFD0(v6, v7, (unsigned __int8 **)a2);
  BOOL v4 = v3 != v7;
  uint64_t v8 = (void **)&v6;
  sub_216782F20(&v8);
  return v4;
}

void pxrInternal__aapl__pxrReserved__::UsdVariantSet::GetVariantSelection(pxrInternal__aapl__pxrReserved__::UsdVariantSet *this@<X0>, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v5 = (uint64_t *)sub_216D240F8((uint64_t)this, a2);
  pxrInternal__aapl__pxrReserved__::PcpPrimIndex::GetNodeRange(v5, 6u, (uint64_t *)&__s1);
  uint64_t v6 = __s1;
  size_t v7 = __n;
  uint64_t v9 = (uint64_t *)sub_216D240F8((uint64_t)this, v8);
  pxrInternal__aapl__pxrReserved__::PcpPrimIndex::GetNodeRange(v9, 6u, (uint64_t *)&__s1);
  if (v6 == v26 && v7 == (void)__p)
  {
LABEL_32:
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    *(void *)(a3 + 16) = 0;
    return;
  }
  while (1)
  {
    std::string __s1 = v6;
    size_t __n = v7;
    if (pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetArcType((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&__s1) != 2) {
      goto LABEL_24;
    }
    v20[0] = v6;
    v20[1] = v7;
    pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetSite((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)v20, (uint64_t)&v21);
    pxrInternal__aapl__pxrReserved__::SdfPath::GetVariantSelection((pxrInternal__aapl__pxrReserved__::SdfPath *)&v22, (uint64_t)&__s1);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v23);
    sub_21697C414(&v22);
    sub_216BBEEA4(&v21);
    uint64_t v12 = HIBYTE(v26);
    char v13 = HIBYTE(v26);
    if (SHIBYTE(v26) >= 0) {
      size_t v14 = HIBYTE(v26);
    }
    else {
      size_t v14 = __n;
    }
    uint64_t v15 = *((unsigned __int8 *)this + 55);
    int v16 = (char)v15;
    if ((v15 & 0x80u) != 0) {
      uint64_t v15 = *((void *)this + 5);
    }
    if (v14 == v15) {
      break;
    }
LABEL_22:
    if (SHIBYTE(v28) < 0)
    {
      operator delete((void *)__p);
      if ((HIBYTE(v26) & 0x80) != 0) {
LABEL_31:
      }
        operator delete(__s1);
    }
    else if (v13 < 0)
    {
      goto LABEL_31;
    }
LABEL_24:
    ++v7;
    long long v18 = (uint64_t *)sub_216D240F8((uint64_t)this, v11);
    pxrInternal__aapl__pxrReserved__::PcpPrimIndex::GetNodeRange(v18, 6u, (uint64_t *)&__s1);
    if (v6 == v26 && v7 == (void)__p) {
      goto LABEL_32;
    }
  }
  if (v16 >= 0) {
    uint64_t v11 = (pxrInternal__aapl__pxrReserved__::UsdVariantSet *)((char *)this + 32);
  }
  else {
    uint64_t v11 = (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)*((void *)this + 4);
  }
  if ((SHIBYTE(v26) & 0x80000000) == 0)
  {
    if (!HIBYTE(v26)) {
      goto LABEL_33;
    }
    p_s1 = &__s1;
    while (*(unsigned __int8 *)p_s1 == *(unsigned __int8 *)v11)
    {
      p_s1 = (void **)((char *)p_s1 + 1);
      uint64_t v11 = (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)((char *)v11 + 1);
      if (!--v12) {
        goto LABEL_33;
      }
    }
    goto LABEL_22;
  }
  if (memcmp(__s1, v11, __n)) {
    goto LABEL_22;
  }
LABEL_33:
  if (SHIBYTE(v28) < 0)
  {
    sub_216778F24((unsigned char *)a3, (void *)__p, *((unint64_t *)&__p + 1));
    if (SHIBYTE(v28) < 0) {
      operator delete((void *)__p);
    }
  }
  else
  {
    *(_OWORD *)a3 = __p;
    *(void *)(a3 + 16) = v28;
  }
  if (SHIBYTE(v26) < 0) {
    operator delete(__s1);
  }
}

void sub_216EE8E54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_21682E578((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdVariantSet::HasAuthoredVariantSelection(uint64_t a1, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2)
{
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v19 = 0;
  if (a2) {
    uint64_t v3 = (void **)a2;
  }
  else {
    uint64_t v3 = __p;
  }
  BOOL v4 = (uint64_t *)sub_216D240F8(a1, a2);
  pxrInternal__aapl__pxrReserved__::PcpPrimIndex::GetNodeRange(v4, 6u, &v14);
  uint64_t v6 = v14;
  uint64_t v7 = v15;
  do
  {
    uint64_t v8 = (uint64_t *)sub_216D240F8(a1, v5);
    pxrInternal__aapl__pxrReserved__::PcpPrimIndex::GetNodeRange(v8, 6u, &v14);
    BOOL v9 = v6 == v16 && v7 == v17;
    uint64_t v10 = !v9;
    if (v9) {
      break;
    }
    uint64_t v14 = v6;
    uint64_t v15 = v7;
    LayerStack = (uint64_t *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetLayerStack((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v14);
    Path = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v14);
    ++v7;
  }
  while ((pxrInternal__aapl__pxrReserved__::PcpComposeSiteVariantSelection(LayerStack, Path, (const void **)(a1 + 32), (uint64_t)v3, 0, 0) & 1) == 0);
  if (SHIBYTE(v19) < 0) {
    operator delete(__p[0]);
  }
  return v10;
}

void sub_216EE8F60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdVariantSet::SetVariantSelection(pxrInternal__aapl__pxrReserved__::UsdVariantSet *a1, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2)
{
  pxrInternal__aapl__pxrReserved__::UsdVariantSet::_CreatePrimSpecForEditing(a1, a2, &v8);
  int IsDormant = pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant(&v8);
  if ((IsDormant & 1) == 0)
  {
    uint64_t v6 = sub_216A663FC(&v8);
    pxrInternal__aapl__pxrReserved__::SdfPrimSpec::SetVariantSelection(v6, (uint64_t)a1 + 32, (uint64_t)a2);
  }
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v4, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v8);
  return IsDormant ^ 1u;
}

void sub_216EE8FF4(_Unwind_Exception *a1@<X0>, void *a2@<X8>, uint64_t a3, ...)
{
  va_start(va, a3);
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(a2, (pxrInternal__aapl__pxrReserved__::SdfSpec *)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdVariantSet::_CreatePrimSpecForEditing@<X0>(pxrInternal__aapl__pxrReserved__::UsdVariantSet *this@<X0>, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2@<X1>, void *a3@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdObject::GetStage(this, a2, &v7);
  unint64_t v5 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_216D01530(&v7);
  pxrInternal__aapl__pxrReserved__::UsdStage::_CreatePrimSpecForEditing(v5, this, a3);
  uint64_t result = v8;
  if (v8)
  {
    if (atomic_fetch_add_explicit((atomic_uint *volatile)(v8 + 8), 0xFFFFFFFF, memory_order_release) == 1) {
      return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
    }
  }
  return result;
}

void sub_216EE9090(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, atomic_uint *a10)
{
  if (a10) {
    sub_217323F90(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdVariantSet::ClearVariantSelection(pxrInternal__aapl__pxrReserved__::UsdVariantSet *this)
{
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v4 = 0;
  uint64_t v1 = pxrInternal__aapl__pxrReserved__::UsdVariantSet::SetVariantSelection(this, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)__p);
  if (SHIBYTE(v4) < 0) {
    operator delete(__p[0]);
  }
  return v1;
}

void sub_216EE90F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdVariantSet::BlockVariantSelection(pxrInternal__aapl__pxrReserved__::UsdVariantSet *this, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2)
{
  pxrInternal__aapl__pxrReserved__::UsdVariantSet::_CreatePrimSpecForEditing(this, a2, &v7);
  int IsDormant = pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant(&v7);
  if ((IsDormant & 1) == 0)
  {
    unint64_t v5 = sub_216A663FC(&v7);
    pxrInternal__aapl__pxrReserved__::SdfPrimSpec::BlockVariantSelection(v5, (uint64_t)this + 32);
  }
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v3, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v7);
  return IsDormant ^ 1u;
}

void sub_216EE9170(_Unwind_Exception *a1@<X0>, void *a2@<X8>, uint64_t a3, ...)
{
  va_start(va, a3);
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(a2, (pxrInternal__aapl__pxrReserved__::SdfSpec *)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdVariantSet::GetVariantEditTarget@<X0>(uint64_t a1@<X0>, uint64_t *EditTarget@<X1>, uint64_t a3@<X8>)
{
  uint64_t v43 = *MEMORY[0x263EF8340];
  pxrInternal__aapl__pxrReserved__::UsdEditTarget::UsdEditTarget((pxrInternal__aapl__pxrReserved__::UsdEditTarget *)&v40);
  pxrInternal__aapl__pxrReserved__::UsdVariantSet::GetVariantSelection((pxrInternal__aapl__pxrReserved__::UsdVariantSet *)a1, v6, (uint64_t)&v30);
  if (*(char *)(a1 + 55) < 0)
  {
    sub_216778F24(__dst, *(void **)(a1 + 32), *(void *)(a1 + 40));
  }
  else
  {
    *(_OWORD *)__dst = *(_OWORD *)(a1 + 32);
    uint64_t v37 = *(void *)(a1 + 48);
  }
  *(_OWORD *)long long __p = v30;
  uint64_t v39 = v31;
  uint64_t v8 = *((void *)&v30 + 1);
  if (v31 >= 0) {
    uint64_t v8 = HIBYTE(v31);
  }
  if (v8)
  {
    pxrInternal__aapl__pxrReserved__::UsdObject::GetStage((pxrInternal__aapl__pxrReserved__::UsdObject *)a1, v7, &v34);
    BOOL v9 = sub_21697CF14(EditTarget);
    if (!(v10 & 1 | (unint64_t)v9))
    {
      pxrInternal__aapl__pxrReserved__::UsdObject::GetStage((pxrInternal__aapl__pxrReserved__::UsdObject *)a1, v10, &v30);
      uint64_t v11 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_216D01530((uint64_t *)&v30);
      EditTarget = (uint64_t *)pxrInternal__aapl__pxrReserved__::UsdStage::GetEditTarget(v11);
      uint64_t v12 = *((void *)&v30 + 1);
      if (*((void *)&v30 + 1))
      {
        if (atomic_fetch_add_explicit((atomic_uint *volatile)(*((void *)&v30 + 1) + 8), 0xFFFFFFFF, memory_order_release) == 1)(*(void (**)(uint64_t))(*(void *)v12 + 8))(v12); {
      }
        }
    }
    uint64_t v13 = sub_216D01530(&v34);
    if (pxrInternal__aapl__pxrReserved__::UsdStage::HasLocalLayer(v13, EditTarget))
    {
      uint64_t v14 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_216D01530(&v34);
      uint64_t v15 = (pxrInternal__aapl__pxrReserved__::UsdEditTarget *)pxrInternal__aapl__pxrReserved__::UsdStage::GetEditTarget(v14);
      sub_216D0162C(a1, &v26);
      pxrInternal__aapl__pxrReserved__::UsdEditTarget::MapToSpecPath(v15, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v26, &v28);
      pxrInternal__aapl__pxrReserved__::SdfPath::AppendVariantSelection(&v28, (uint64_t)__dst, (uint64_t)__p, &v30);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v28 + 1);
      sub_21697C414(&v28);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v27);
      sub_21697C414(&v26);
      pxrInternal__aapl__pxrReserved__::UsdEditTarget::ForLocalDirectVariant((pxrInternal__aapl__pxrReserved__::SdfPath *)&v30, EditTarget, (pxrInternal__aapl__pxrReserved__::UsdEditTarget *)a3);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v30 + 1);
      sub_21697C414(&v30);
    }
    else
    {
      *(void *)&long long v30 = "usd/variantSets.cpp";
      *((void *)&v30 + 1) = "GetVariantEditTarget";
      uint64_t v31 = 181;
      uint64_t v32 = "UsdEditTarget pxrInternal__aapl__pxrReserved__::UsdVariantSet::GetVariantEditTarget(const SdfLayerHandle &) const";
      char v33 = 0;
      uint64_t v16 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(EditTarget);
      uint64_t Identifier = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v16);
      if (*(char *)(Identifier + 23) >= 0) {
        long long v18 = (const char *)Identifier;
      }
      else {
        long long v18 = *(const char **)Identifier;
      }
      uint64_t v19 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_216D01530(&v34);
      pxrInternal__aapl__pxrReserved__::UsdStage::GetRootLayer(v19, &v28);
      long long v20 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(&v28);
      uint64_t v21 = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v20);
      if (*(char *)(v21 + 23) >= 0) {
        int v22 = (const char *)v21;
      }
      else {
        int v22 = *(const char **)v21;
      }
      pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v30, 1, (pxrInternal__aapl__pxrReserved__ *)"Layer %s is not a local layer of stage rooted at layer %s", v18, v22);
      uint64_t v23 = v29;
      if (v29 && atomic_fetch_add_explicit((atomic_uint *volatile)(v29 + 8), 0xFFFFFFFF, memory_order_release) == 1) {
        (*(void (**)(uint64_t))(*(void *)v23 + 8))(v23);
      }
      *(_OWORD *)a3 = v40;
      long long v40 = 0uLL;
      sub_216BBFB70((_DWORD *)(a3 + 16), (uint64_t)v41);
      *(_OWORD *)(a3 + 56) = v42;
    }
    uint64_t v24 = v35;
    if (v35 && atomic_fetch_add_explicit((atomic_uint *volatile)(v35 + 8), 0xFFFFFFFF, memory_order_release) == 1) {
      (*(void (**)(uint64_t))(*(void *)v24 + 8))(v24);
    }
  }
  else
  {
    *(_OWORD *)a3 = v40;
    long long v40 = 0uLL;
    sub_216BBFB70((_DWORD *)(a3 + 16), (uint64_t)v41);
    *(_OWORD *)(a3 + 56) = v42;
  }
  if (SHIBYTE(v39) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v37) < 0) {
    operator delete(__dst[0]);
  }
  sub_216BBED8C((uint64_t)v41);
  uint64_t result = *((void *)&v40 + 1);
  if (*((void *)&v40 + 1))
  {
    if (atomic_fetch_add_explicit((atomic_uint *volatile)(*((void *)&v40 + 1) + 8), 0xFFFFFFFF, memory_order_release) == 1)return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result); {
  }
    }
  return result;
}

void sub_216EE9540(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,atomic_uint *a26,char a27)
{
  if (a26)
  {
    if (atomic_fetch_add_explicit(a26 + 2, 0xFFFFFFFF, memory_order_release) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a26 + 8))(a26);
    }
  }
  sub_21682E578((uint64_t)&a27);
  sub_216D483F4(v27 - 128);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdVariantSet::GetVariantEditContext@<X0>(pxrInternal__aapl__pxrReserved__::UsdObject *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  v12[7] = *MEMORY[0x263EF8340];
  pxrInternal__aapl__pxrReserved__::UsdVariantSet::GetVariantEditTarget((uint64_t)a1, a2, (uint64_t)v10);
  pxrInternal__aapl__pxrReserved__::UsdObject::GetStage(a1, v5, &v8);
  sub_216EEA1BC(a3, (uint64_t)&v8, (uint64_t)v10);
  uint64_t v6 = v9;
  if (v9 && atomic_fetch_add_explicit((atomic_uint *volatile)(v9 + 8), 0xFFFFFFFF, memory_order_release) == 1) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  sub_216BBED8C((uint64_t)v12);
  uint64_t result = v11;
  if (v11)
  {
    if (atomic_fetch_add_explicit((atomic_uint *volatile)(v11 + 8), 0xFFFFFFFF, memory_order_release) == 1) {
      return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
    }
  }
  return result;
}

void sub_216EE9784(_Unwind_Exception *a1, uint64_t a2, atomic_uint *a3, ...)
{
  va_start(va, a3);
  if (a3)
  {
    if (atomic_fetch_add_explicit(a3 + 2, 0xFFFFFFFF, memory_order_release) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a3 + 8))(a3);
    }
  }
  sub_216D483F4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_216EE97E8(void *a1, long long *a2, int a3)
{
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  int v18 = 0;
  switch(a3)
  {
    case 0:
      uint64_t v5 = *a1;
      uint64_t v6 = (std::__shared_weak_count *)a1[1];
      if (v6) {
        atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      uint64_t v16 = v5;
      int v7 = 1;
      goto LABEL_9;
    case 1:
      uint64_t v8 = *a1;
      uint64_t v6 = (std::__shared_weak_count *)a1[1];
      if (v6) {
        atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      int v7 = 0;
      uint64_t v16 = v8;
LABEL_9:
      int v9 = 4;
      goto LABEL_17;
    case 2:
      uint64_t v10 = *a1;
      uint64_t v6 = (std::__shared_weak_count *)a1[1];
      if (v6) {
        atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      uint64_t v16 = v10;
      int v7 = 1;
      goto LABEL_16;
    case 3:
      uint64_t v11 = *a1;
      uint64_t v6 = (std::__shared_weak_count *)a1[1];
      if (v6) {
        atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      int v7 = 0;
      uint64_t v16 = v11;
LABEL_16:
      int v9 = 5;
LABEL_17:
      uint64_t v17 = v6;
      int v18 = v9;
      break;
    default:
      uint64_t v6 = 0;
      int v7 = 0;
      break;
  }
  if (!sub_21698EA64((uint64_t)a1) || (*(unsigned int (**)(void))(*(void *)*a1 + 16))())
  {
    uint64_t v13 = *a1;
    uint64_t v12 = (std::__shared_weak_count *)a1[1];
    if (v12) {
      atomic_fetch_add_explicit(&v12->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    uint64_t v16 = v13;
    uint64_t v17 = v12;
    if (v6) {
      sub_216784EC4(v6);
    }
    int v18 = 0;
  }
  if (!sub_21698EADC((uint64_t)&v16))
  {
    sub_216EEA248((unsigned int *)&v16, -1, a2);
    goto LABEL_34;
  }
  unint64_t v14 = sub_216B48514((uint64_t)&v16, (unsigned __int8 **)a2);
  if (v14 == -1) {
    goto LABEL_33;
  }
  if (v7) {
    unint64_t v15 = 0;
  }
  else {
    unint64_t v15 = sub_21698EADC((uint64_t)&v16) - 1;
  }
  if (v14 != v15)
  {
    sub_216B4856C((unsigned int *)&v16, v14);
LABEL_33:
    sub_216EEA248((unsigned int *)&v16, v7 - 1, a2);
  }
LABEL_34:
  if (v17) {
    sub_216784EC4(v17);
  }
}

void sub_216EE99C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11)
{
  if (a11) {
    sub_216784EC4(a11);
  }
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdVariantSets::GetVariantSet(pxrInternal__aapl__pxrReserved__::UsdProperty *a1@<X0>, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2@<X1>, uint64_t a3@<X8>)
{
  if (pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined(a1, a2))
  {
    uint64_t v5 = (pxrInternal__aapl__pxrReserved__::TfToken *)pxrInternal__aapl__pxrReserved__::TfToken::TfToken(&v9);
    if ((v9 & 0xFFFFFFFFFFFFFFF8) != 0) {
      EmptyString = (uint64_t *)((v9 & 0xFFFFFFFFFFFFFFF8) + 16);
    }
    else {
      EmptyString = pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(v5);
    }
    pxrInternal__aapl__pxrReserved__::UsdPrim::GetVariantSet((uint64_t)a1, (long long *)EmptyString, a3);
    if ((v9 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v9 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  else
  {
    unint64_t v9 = (unint64_t)"usd/variantSets.cpp";
    uint64_t v10 = (atomic_ullong *)"GetVariantSet";
    uint64_t v11 = 237;
    unint64_t v12 = (unint64_t)"UsdVariantSet pxrInternal__aapl__pxrReserved__::UsdVariantSets::GetVariantSet(const std::string &) const";
    char v13 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v9, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid prim");
    LODWORD(v9) = 1;
    uint64_t v10 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v11);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v11 + 1);
    unint64_t v12 = 0;
    long long __p = 0uLL;
    uint64_t v8 = 0;
    sub_216D6BDA0(a3, (uint64_t)&v9, &__p);
    if (SHIBYTE(v8) < 0) {
      operator delete((void *)__p);
    }
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
    sub_21697C414(&v11);
    if (v10) {
      sub_216D16E0C(v10);
    }
  }
}

void sub_216EE9B58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  sub_216D16AD8((uint64_t)&a15);
  _Unwind_Resume(a1);
}

void *pxrInternal__aapl__pxrReserved__::UsdVariantSets::AddVariantSet@<X0>(pxrInternal__aapl__pxrReserved__::UsdProperty *a1@<X0>, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2@<X1>, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a3@<X2>, pxrInternal__aapl__pxrReserved__::UsdVariantSet *a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdVariantSets::GetVariantSet(a1, a2, (uint64_t)a4);
  pxrInternal__aapl__pxrReserved__::UsdVariantSet::_AddVariantSet(a4, a3, &v8);
  return pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v6, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v8);
}

void sub_216EE9BE4(_Unwind_Exception *a1)
{
  sub_216EE9BF8(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_216EE9BF8(uint64_t a1)
{
  if (*(char *)(a1 + 55) < 0) {
    operator delete(*(void **)(a1 + 32));
  }
  uint64_t v2 = *(void *)(a1 + 24);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 20));
  sub_21697C414((_DWORD *)(a1 + 16));
  uint64_t v3 = *(atomic_ullong **)(a1 + 8);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

BOOL pxrInternal__aapl__pxrReserved__::UsdVariantSets::HasVariantSet(pxrInternal__aapl__pxrReserved__::UsdVariantSets *a1, unsigned __int8 **a2)
{
  pxrInternal__aapl__pxrReserved__::UsdVariantSets::GetNames(a1, &v6);
  uint64_t v3 = sub_2169CAFD0(v6, v7, a2);
  BOOL v4 = v3 != v7;
  uint64_t v8 = (void **)&v6;
  sub_216782F20(&v8);
  return v4;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdVariantSets::GetNames@<X0>(pxrInternal__aapl__pxrReserved__::UsdVariantSets *this@<X0>, uint64_t *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  return pxrInternal__aapl__pxrReserved__::UsdVariantSets::GetNames((uint64_t)this, a2);
}

void sub_216EE9CFC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216782F20((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdVariantSets::GetNames(uint64_t a1, uint64_t *a2)
{
  sub_216782F74(a2);
  v18[0] = 0;
  v18[1] = 0;
  uint64_t v16 = 0;
  uint64_t v17 = v18;
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  BOOL v4 = (uint64_t *)sub_216D240F8(a1, v3);
  pxrInternal__aapl__pxrReserved__::PcpPrimIndex::GetNodeRange(v4, 6u, &v10);
  if (v10 != v12 || v11 != v13)
  {
    v9[0] = v10;
    v9[1] = v11;
    uint64_t v6 = v14;
    for (uint64_t i = v15; i != v6; i -= 24)
    {
      if (*(char *)(i - 1) < 0) {
        operator delete(*(void **)(i - 24));
      }
    }
    uint64_t v15 = v6;
    pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetLayerStack((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)v9);
    pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)v9);
    pxrInternal__aapl__pxrReserved__::PcpComposeSiteVariantSets();
  }
  uint64_t v19 = (void **)&v14;
  sub_216782F20(&v19);
  sub_21678A498((uint64_t)&v17, v18[0]);
  return 1;
}

void sub_216EE9F5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void **a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,char a22,char *a23)
{
  a13 = (void **)&a19;
  sub_216782F20(&a13);
  sub_21678A498((uint64_t)&a22, a23);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdVariantSets::GetVariantSelection(pxrInternal__aapl__pxrReserved__::UsdProperty *a1@<X0>, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2@<X1>, uint64_t a3@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdVariantSets::GetVariantSet(a1, a2, (uint64_t)v5);
  pxrInternal__aapl__pxrReserved__::UsdVariantSet::GetVariantSelection((pxrInternal__aapl__pxrReserved__::UsdVariantSet *)v5, v4, a3);
  if (v11 < 0) {
    operator delete(__p);
  }
  if ((v9 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v9 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v8);
  sub_21697C414(&v7);
  if (v6) {
    sub_216D16E0C(v6);
  }
}

void sub_216EEA02C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216EE9BF8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdVariantSets::SetSelection(uint64_t a1, long long *a2, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a3)
{
  sub_216D6BDA0((uint64_t)v6, a1, a2);
  uint64_t v4 = pxrInternal__aapl__pxrReserved__::UsdVariantSet::SetVariantSelection((pxrInternal__aapl__pxrReserved__::UsdVariantSet *)v6, a3);
  if (v12 < 0) {
    operator delete(__p);
  }
  if ((v10 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v10 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_21697C414(&v8);
  if (v7) {
    sub_216D16E0C(v7);
  }
  return v4;
}

void sub_216EEA0D8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216EE9BF8((uint64_t)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdVariantSets::GetAllVariantSelections(pxrInternal__aapl__pxrReserved__::UsdVariantSets *this@<X0>, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2@<X1>, uint64_t *a3@<X8>)
{
  a3[2] = 0;
  a3[1] = 0;
  *a3 = (uint64_t)(a3 + 1);
  uint64_t v4 = (uint64_t *)sub_216D240F8((uint64_t)this, a2);
  pxrInternal__aapl__pxrReserved__::PcpPrimIndex::GetNodeRange(v4, 6u, &v14);
  uint64_t v6 = v14;
  uint64_t v5 = v15;
  uint64_t v7 = v16;
  if (v14 != v16 || v15 != v17)
  {
    uint64_t v9 = v17 - 1;
    do
    {
      do
      {
        uint64_t v10 = v5;
        v13[0] = v6;
        v13[1] = v5;
        LayerStack = (uint64_t *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetLayerStack((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)v13);
        Path = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)v13);
        pxrInternal__aapl__pxrReserved__::PcpComposeSiteVariantSelections(LayerStack, Path, a3, 0, 0);
        uint64_t v5 = v10 + 1;
      }
      while (v6 != v7);
    }
    while (v9 != v10);
  }
}

void sub_216EEA1A0(_Unwind_Exception *a1)
{
  sub_2167877AC(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t sub_216EEA1BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  uint64_t v5 = *(void *)(a3 + 8);
  *(void *)(a1 + 16) = *(void *)a3;
  *(void *)(a1 + 24) = v5;
  if (v5) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v5 + 8), 1u, memory_order_relaxed);
  }
  sub_216BBEE18((_DWORD *)(a1 + 32), a3 + 16);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a3 + 56);
  return a1;
}

void sub_216EEA228(_Unwind_Exception *a1)
{
  uint64_t v4 = *(atomic_uint **)(v2 + 24);
  if (v4) {
    sub_217324328(v4);
  }
  sub_217324C90(v1);
  _Unwind_Resume(a1);
}

void sub_216EEA248(unsigned int *a1, int a2, long long *a3)
{
  if (a2 == -1)
  {
    uint64_t v5 = *(void *)a1;
    if (*(void *)a1)
    {
      uint64_t v6 = (void *)(*(uint64_t (**)(uint64_t, void))(*(void *)v5 + 112))(v5, a1[4]);
      a2 = -1431655765 * ((v6[1] - *v6) >> 3);
    }
    else
    {
      a2 = 0;
    }
  }
  uint64_t v7 = a2;
  sub_2168758C4(v8, 1uLL, a3);
  sub_216B486FC(a1, v7, 0, v8);
  uint64_t v9 = (void **)v8;
  sub_216782F20(&v9);
}

void sub_216EEA30C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_216782F20((void ***)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdZipFile::Open(uint64_t a1@<X0>, void *a2@<X8>)
{
  Resolver = pxrInternal__aapl__pxrReserved__::ArGetResolver((pxrInternal__aapl__pxrReserved__ *)a1);
  if (*(char *)(a1 + 23) < 0)
  {
    sub_216778F24(__p, *(void **)a1, *(void *)(a1 + 8));
  }
  else
  {
    *(_OWORD *)long long __p = *(_OWORD *)a1;
    uint64_t v6 = *(void *)(a1 + 16);
  }
  pxrInternal__aapl__pxrReserved__::ArResolver::OpenAsset((uint64_t)Resolver);
  if (SHIBYTE(v6) < 0) {
    operator delete(__p[0]);
  }
  if (v7)
  {
    pxrInternal__aapl__pxrReserved__::UsdZipFile::Open(&v7, (uint64_t)a2);
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
  if (v8) {
    sub_216784EC4(v8);
  }
}

void sub_216EEA3D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, std::__shared_weak_count *a17)
{
  if (a17) {
    sub_216784EC4(a17);
  }
  _Unwind_Resume(exception_object);
}

void *pxrInternal__aapl__pxrReserved__::UsdZipFile::UsdZipFile(void *this)
{
  *this = 0;
  this[1] = 0;
  return this;
}

{
  *this = 0;
  this[1] = 0;
  return this;
}

void pxrInternal__aapl__pxrReserved__::UsdZipFile::Open(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *a1;
  if (v4)
  {
    (*(void (**)(uint64_t *__return_ptr))(*(void *)v4 + 24))(&v7);
    if (v7)
    {
      uint64_t v5 = operator new(0x100uLL);
      uint64_t v6 = (*(uint64_t (**)(void))(*(void *)*a1 + 16))();
      sub_216EEC260((uint64_t)v5, (uint64_t)&v7, v6);
      sub_216EECB9C(&v9, (uint64_t)v5);
      *(_OWORD *)a2 = v9;
    }
    else
    {
      *(void *)&long long v9 = "usd/zipFile.cpp";
      *((void *)&v9 + 1) = "Open";
      uint64_t v10 = 598;
      char v11 = "static UsdZipFile pxrInternal__aapl__pxrReserved__::UsdZipFile::Open(const std::shared_ptr<ArAsset> &)";
      char v12 = 0;
      pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v9, 3, (pxrInternal__aapl__pxrReserved__ *)"Could not retrieve buffer from asset");
      *(void *)a2 = 0;
      *(void *)(a2 + 8) = 0;
    }
    if (v8) {
      sub_216784EC4(v8);
    }
  }
  else
  {
    *(void *)&long long v9 = "usd/zipFile.cpp";
    *((void *)&v9 + 1) = "Open";
    uint64_t v10 = 592;
    char v11 = "static UsdZipFile pxrInternal__aapl__pxrReserved__::UsdZipFile::Open(const std::shared_ptr<ArAsset> &)";
    char v12 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v9, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid asset");
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
  }
}

void sub_216EEA560(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_216784EC4(a10);
  }
  _Unwind_Resume(exception_object);
}

__n128 pxrInternal__aapl__pxrReserved__::UsdZipFile::UsdZipFile(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  a2->n128_u64[0] = 0;
  a2->n128_u64[1] = 0;
  return result;
}

{
  __n128 result;

  __n128 result = *a2;
  *a1 = *a2;
  a2->n128_u64[0] = 0;
  a2->n128_u64[1] = 0;
  return result;
}

void pxrInternal__aapl__pxrReserved__::UsdZipFile::~UsdZipFile(pxrInternal__aapl__pxrReserved__::UsdZipFile *this)
{
  uint64_t v1 = (std::__shared_weak_count *)*((void *)this + 1);
  if (v1) {
    sub_216784EC4(v1);
  }
}

{
  std::__shared_weak_count *v1;

  uint64_t v1 = (std::__shared_weak_count *)*((void *)this + 1);
  if (v1) {
    sub_216784EC4(v1);
  }
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdZipFile::DumpContents(pxrInternal__aapl__pxrReserved__::UsdZipFile *this)
{
  puts("    Offset\t      Comp\t    Uncomp\tName");
  puts("    ------\t      ----\t    ------\t----");
  if (*(void *)this && (sub_216EEAC2C(*(void *)this, &v12), (uint64_t v2 = v12) != 0))
  {
    uint64_t v3 = 0;
    do
    {
      uint64_t v4 = *(void *)(v2 + 64);
      uint64_t v5 = *(void *)(*(void *)v2 + 240);
      uint64_t v6 = *(unsigned int *)(v2 + 36);
      uint64_t v7 = *(unsigned int *)(v2 + 40);
      pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator::operator->((uint64_t)&v12, (uint64_t)__p);
      if (v11 >= 0) {
        int v8 = __p;
      }
      else {
        int v8 = (void **)__p[0];
      }
      printf("%10zu\t%10zu\t%10zu\t%s\n", v4 - v5, v6, v7, (const char *)v8);
      if (v11 < 0) {
        operator delete(__p[0]);
      }
      pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator::operator++((uint64_t)&v12);
      ++v3;
      uint64_t v2 = v12;
    }
    while (v12);
  }
  else
  {
    uint64_t v3 = 0;
  }
  puts("----------");
  return printf("%zu files total\n", v3);
}

void sub_216EEA71C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdZipFile::begin@<X0>(pxrInternal__aapl__pxrReserved__::UsdZipFile *this@<X0>, void *a2@<X8>)
{
  uint64_t result = *(void *)this;
  if (result) {
    return sub_216EEAC2C(result, a2);
  }
  *a2 = 0;
  return result;
}

void pxrInternal__aapl__pxrReserved__::UsdZipFile::end(void *a1@<X8>)
{
  *a1 = 0;
}

BOOL pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator::operator!=(void **a1, void **a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  BOOL v4 = ((unint64_t)*a1 | (unint64_t)*a2) == 0;
  if (*a1) {
    BOOL v5 = v3 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5) {
    BOOL v4 = *v2 == *v3 && v2[1] == v3[1];
  }
  return !v4;
}

float pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator::GetFileInfo@<S0>(pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator *this@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)(a2 + 31) = 0;
  LODWORD(v2) = 0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  uint64_t v3 = *(void *)this;
  if (*(void *)this)
  {
    *(void *)a2 = *(void *)(v3 + 64) - *(void *)(*(void *)v3 + 240);
    uint64_t v2 = *(void *)(v3 + 36);
    *(void *)&long long v4 = v2;
    *((void *)&v4 + 1) = HIDWORD(v2);
    *(_OWORD *)(a2 + 8) = v4;
    *(void *)(a2 + 24) = *(unsigned int *)(v3 + 32);
    *(_WORD *)(a2 + 32) = *(_WORD *)(v3 + 24);
    *(unsigned char *)(a2 + 34) = *(unsigned char *)(v3 + 22) & 1;
  }
  return *(float *)&v2;
}

double pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator::operator->@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (!*(void *)a1)
  {
    __p[0] = 0;
    __p[1] = 0;
    uint64_t v5 = 0;
    goto LABEL_6;
  }
  sub_216799F58(__p, *(void **)(*(void *)a1 + 48), *(unsigned __int16 *)(*(void *)a1 + 44));
  if ((SHIBYTE(v5) & 0x80000000) == 0)
  {
LABEL_6:
    double result = *(double *)__p;
    *(_OWORD *)a2 = *(_OWORD *)__p;
    *(void *)(a2 + 16) = v5;
    return result;
  }
  sub_216778F24((unsigned char *)a2, __p[0], (unint64_t)__p[1]);
  if (SHIBYTE(v5) < 0) {
    operator delete(__p[0]);
  }
  return result;
}

void sub_216EEA87C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator::operator++(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  if (*(void *)a1)
  {
    uint64_t v4 = *(void *)(*v2 + 240);
    uint64_t v3 = *(void *)(*v2 + 248);
    v10[0] = v4 + v2[9];
    v10[1] = v3;
    uint64_t v11 = v4;
    sub_216EEAE50(v10, (uint64_t)v8);
    uint64_t v5 = *(void **)a1;
    if (LODWORD(v8[0]) == 67324752)
    {
      v5[1] = v5[9];
      long long v6 = v8[1];
      *((_OWORD *)v5 + 1) = v8[0];
      *((_OWORD *)v5 + 2) = v6;
      *((_OWORD *)v5 + 3) = v8[2];
      unsigned char v5[8] = v9;
      *(void *)(*(void *)a1 + 72) = v10[0] - v11;
    }
    else
    {
      *(void *)a1 = 0;
      if (v5) {
        operator delete(v5);
      }
    }
  }
  return a1;
}

void pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator::~Iterator(void **this)
{
  uint64_t v2 = *this;
  *this = 0;
  if (v2) {
    operator delete(v2);
  }
}

{
  void *v2;

  uint64_t v2 = *this;
  *this = 0;
  if (v2) {
    operator delete(v2);
  }
}

void *pxrInternal__aapl__pxrReserved__::UsdZipFile::Find@<X0>(void **a1@<X0>, unsigned __int8 *a2@<X1>, void *a3@<X8>)
{
  double result = *a1;
  if (result) {
    return (void *)sub_216EEA994(result, a2, a3);
  }
  *a3 = 0;
  return result;
}

uint64_t sub_216EEA994@<X0>(void *a1@<X0>, unsigned __int8 *a2@<X1>, void *a3@<X8>)
{
  long long v6 = a1 + 9;
  __p[0] = a1 + 9;
  LOBYTE(__p[1]) = 1;
  MEMORY[0x21D447BF0](a1 + 9);
  uint64_t v7 = a1 + 2;
  int v8 = sub_216EEC518(a1 + 2, a2);
  if (!v8)
  {
    uint64_t v14 = (void *)a1[7];
    if (!v14 || *v14)
    {
      sub_216EEC61C((uint64_t)__p);
      uint64_t v32 = v6;
      char v33 = 1;
      MEMORY[0x21D447C10](v6);
      uint64_t v15 = (_OWORD **)a1[7];
      if (!v15)
      {
        sub_216EEC434((uint64_t)a1);
        uint64_t v15 = (_OWORD **)a1[7];
      }
      while (*v15)
      {
        sub_216799F58(__p, *((void **)*v15 + 6), *((unsigned __int16 *)*v15 + 22));
        uint64_t v16 = sub_216EEC654((uint64_t)v7, (unsigned __int8 *)__p, (long long *)__p, v15);
        if (v31 < 0) {
          operator delete(__p[0]);
        }
        pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator::operator++((uint64_t)v15);
        uint64_t v17 = a2[23];
        if ((v17 & 0x80u) == 0) {
          uint64_t v18 = a2[23];
        }
        else {
          uint64_t v18 = *((void *)a2 + 1);
        }
        uint64_t v19 = v16[39];
        int v20 = (char)v19;
        if ((v19 & 0x80u) != 0) {
          uint64_t v19 = *((void *)v16 + 3);
        }
        if (v18 == v19)
        {
          if (v20 >= 0) {
            uint64_t v21 = v16 + 16;
          }
          else {
            uint64_t v21 = (unsigned __int8 *)*((void *)v16 + 2);
          }
          if ((v17 & 0x80) != 0)
          {
            if (!memcmp(*(const void **)a2, v21, *((void *)a2 + 1)))
            {
LABEL_28:
              uint64_t v23 = (_OWORD *)*((void *)v16 + 5);
              if (v23)
              {
                uint64_t v24 = operator new(0x50uLL);
                *uint64_t v24 = *v23;
                long long v25 = v23[1];
                long long v26 = v23[2];
                long long v27 = v23[4];
                v24[3] = v23[3];
                v24[4] = v27;
                v24[1] = v25;
                void v24[2] = v26;
              }
              else
              {
                uint64_t v24 = 0;
              }
              *a3 = v24;
              return sub_216EECA4C((uint64_t)&v32);
            }
          }
          else
          {
            if (!a2[23]) {
              goto LABEL_28;
            }
            int v22 = a2;
            while (*v22 == *v21)
            {
              ++v22;
              ++v21;
              if (!--v17) {
                goto LABEL_28;
              }
            }
          }
        }
      }
      sub_216EECA4C((uint64_t)&v32);
      __p[0] = v6;
      LOBYTE(__p[1]) = 1;
      MEMORY[0x21D447BF0](v6);
      uint64_t v28 = sub_216EEC518(v7, a2);
      if (!v28)
      {
        uint64_t result = sub_216EEC61C((uint64_t)__p);
        *a3 = 0;
        return result;
      }
      uint64_t v9 = (_OWORD *)*((void *)v28 + 5);
      if (!v9) {
        goto LABEL_33;
      }
      uint64_t v10 = operator new(0x50uLL);
      goto LABEL_4;
    }
LABEL_33:
    uint64_t v10 = 0;
    goto LABEL_34;
  }
  uint64_t v9 = (_OWORD *)*((void *)v8 + 5);
  if (!v9) {
    goto LABEL_33;
  }
  uint64_t v10 = operator new(0x50uLL);
LABEL_4:
  *uint64_t v10 = *v9;
  long long v11 = v9[1];
  long long v12 = v9[2];
  long long v13 = v9[4];
  void v10[3] = v9[3];
  void v10[4] = v13;
  v10[1] = v11;
  uint64_t v10[2] = v12;
LABEL_34:
  *a3 = v10;
  return sub_216EEC61C((uint64_t)__p);
}

void sub_216EEABD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
}

uint64_t sub_216EEAC2C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = a1 + 72;
  uint64_t v17 = a1 + 72;
  char v18 = 1;
  MEMORY[0x21D447BF0](a1 + 72);
  uint64_t v5 = *(_OWORD ***)(a1 + 64);
  if (v5)
  {
    long long v6 = *v5;
    if (*v5)
    {
      uint64_t v7 = operator new(0x50uLL);
      *uint64_t v7 = *v6;
      long long v8 = v6[1];
      long long v9 = v6[2];
      long long v10 = v6[4];
      v7[3] = v6[3];
      void v7[4] = v10;
      v7[1] = v8;
      void v7[2] = v9;
    }
    else
    {
      uint64_t v7 = 0;
    }
    *a2 = v7;
    return sub_216EEC61C((uint64_t)&v17);
  }
  else
  {
    sub_216EEC61C((uint64_t)&v17);
    uint64_t v17 = v4;
    char v18 = 1;
    MEMORY[0x21D447C10](v4);
    sub_216EEC434(a1);
    long long v11 = **(_OWORD ***)(a1 + 64);
    if (v11)
    {
      long long v12 = operator new(0x50uLL);
      _OWORD *v12 = *v11;
      long long v13 = v11[1];
      long long v14 = v11[2];
      long long v15 = v11[4];
      void v12[3] = v11[3];
      v12[4] = v15;
      v12[1] = v13;
      void v12[2] = v14;
    }
    else
    {
      long long v12 = 0;
    }
    *a2 = v12;
    return sub_216EECA4C((uint64_t)&v17);
  }
}

void sub_216EEAD20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator::Iterator(void *this)
{
  *this = 0;
  return this;
}

{
  *this = 0;
  return this;
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator::Iterator(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  *a1 = 0;
  uint64_t v6 = *(void *)(a2 + 240);
  uint64_t v7 = *(void *)(a2 + 248);
  v15[0] = v6 + a3;
  v15[1] = v7;
  uint64_t v16 = v6;
  sub_216EEAE50(v15, (uint64_t)v13);
  if (LODWORD(v13[0]) == 67324752)
  {
    long long v8 = operator new(0x50uLL);
    *long long v8 = 0;
    v8[1] = 0;
    *(void *)((char *)v8 + 22) = 0;
    v8[2] = 0;
    *((_OWORD *)v8 + 2) = 0u;
    *((_OWORD *)v8 + 3) = 0u;
    *((_OWORD *)v8 + 4) = 0u;
    long long v9 = (void *)*a1;
    *a1 = (uint64_t)v8;
    if (v9)
    {
      operator delete(v9);
      long long v8 = (void *)*a1;
    }
    *long long v8 = a2;
    long long v10 = (void *)*a1;
    v10[1] = a3;
    long long v11 = v13[1];
    *((_OWORD *)v10 + 1) = v13[0];
    *((_OWORD *)v10 + 2) = v11;
    *((_OWORD *)v10 + 3) = v13[2];
    unsigned char v10[8] = v14;
    *(void *)(*a1 + 72) = v15[0] - v16;
  }
  return a1;
}

void sub_216EEAE34(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *v1;
  *uint64_t v1 = 0;
  if (v3) {
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

double sub_216EEAE50@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[2];
  if ((unint64_t)(a1[1] - *a1 + v4) <= 0x1D) {
    goto LABEL_2;
  }
  *(void *)((char *)&v14 + 6) = 0;
  *(void *)&long long v14 = 0;
  long long v15 = 0u;
  long long v16 = 0u;
  uint64_t v17 = 0;
  sub_216EECA84((uint64_t)a1, &v14);
  if (v14 == 67324752)
  {
    sub_216EECB10((uint64_t)a1, (_WORD *)&v14 + 2);
    sub_216EECB10((uint64_t)a1, (_WORD *)&v14 + 3);
    sub_216EECB10((uint64_t)a1, (_WORD *)&v14 + 4);
    sub_216EECB10((uint64_t)a1, (_WORD *)&v14 + 5);
    sub_216EECB10((uint64_t)a1, (_WORD *)&v14 + 6);
    sub_216EECA84((uint64_t)a1, &v15);
    sub_216EECA84((uint64_t)a1, (_DWORD *)&v15 + 1);
    sub_216EECA84((uint64_t)a1, (_DWORD *)&v15 + 2);
    sub_216EECB10((uint64_t)a1, (_WORD *)&v15 + 6);
    sub_216EECB10((uint64_t)a1, (_WORD *)&v15 + 7);
    uint64_t v8 = *a1;
    uint64_t v7 = a1[1];
    uint64_t v9 = a1[2];
    if (v7 - *a1 + v9 < (unint64_t)WORD6(v15)
      || (*(void *)&long long v16 = *a1,
          uint64_t v10 = v8 + WORD6(v15),
          *a1 = v10,
          uint64_t v11 = v7 + v9,
          v11 - v10 < (unint64_t)HIWORD(v15))
      || (*((void *)&v16 + 1) = v10, uint64_t v12 = v10 + HIWORD(v15), *a1 = v12, v11 - v12 < (unint64_t)DWORD1(v15)))
    {
LABEL_2:
      *(void *)(a2 + 48) = 0;
      double result = 0.0;
      *(_OWORD *)(a2 + 16) = 0u;
      *(_OWORD *)(a2 + 32) = 0u;
      *(_OWORD *)a2 = 0u;
      return result;
    }
    *a1 = v12 + DWORD1(v15);
    long long v13 = v15;
    *(_OWORD *)a2 = v14;
    *(_OWORD *)(a2 + 16) = v13;
    double result = *(double *)&v16;
    *(_OWORD *)(a2 + 32) = v16;
    *(void *)(a2 + 48) = v12;
  }
  else
  {
    *a1 = a1[2] + v3 - v4;
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(void *)(a2 + 48) = 0;
  }
  return result;
}

pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator *pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator::Iterator(pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator *this, const pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator *a2)
{
  uint64_t v3 = *(_OWORD **)a2;
  if (*(void *)a2)
  {
    uint64_t v4 = operator new(0x50uLL);
    _OWORD *v4 = *v3;
    long long v5 = v3[4];
    long long v7 = v3[1];
    long long v6 = v3[2];
    v4[3] = v3[3];
    v4[4] = v5;
    v4[1] = v7;
    v4[2] = v6;
  }
  else
  {
    uint64_t v4 = 0;
  }
  *(void *)this = v4;
  return this;
}

{
  _OWORD *v3;
  _OWORD *v4;
  long long v5;
  long long v6;
  long long v7;

  uint64_t v3 = *(_OWORD **)a2;
  if (*(void *)a2)
  {
    uint64_t v4 = operator new(0x50uLL);
    _OWORD *v4 = *v3;
    long long v5 = v3[4];
    long long v7 = v3[1];
    long long v6 = v3[2];
    v4[3] = v3[3];
    v4[4] = v5;
    v4[1] = v7;
    v4[2] = v6;
  }
  else
  {
    uint64_t v4 = 0;
  }
  *(void *)this = v4;
  return this;
}

void *pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator::Iterator(void *result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a2 = 0;
  *double result = v2;
  return result;
}

{
  uint64_t v2;

  uint64_t v2 = *a2;
  *a2 = 0;
  *double result = v2;
  return result;
}

void **pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator::operator=(void **a1, _OWORD **a2)
{
  uint64_t v3 = *a2;
  if (*a2)
  {
    uint64_t v4 = operator new(0x50uLL);
    _OWORD *v4 = *v3;
    long long v5 = v3[4];
    long long v7 = v3[1];
    long long v6 = v3[2];
    v4[3] = v3[3];
    v4[4] = v5;
    v4[1] = v7;
    v4[2] = v6;
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v8 = *a1;
  *a1 = v4;
  if (v8) {
    operator delete(v8);
  }
  return a1;
}

void **pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator::operator=(void **a1, void **a2)
{
  uint64_t v3 = *a2;
  *a2 = 0;
  uint64_t v4 = *a1;
  *a1 = v3;
  if (v4) {
    operator delete(v4);
  }
  return a1;
}

void *pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator::operator*@<X0>(void *result@<X0>, void *a2@<X8>)
{
  if (*result) {
    return sub_216799F58(a2, *(void **)(*result + 48), *(unsigned __int16 *)(*result + 44));
  }
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator::operator++@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = (_OWORD *)*a1;
  if (*a1)
  {
    long long v5 = operator new(0x50uLL);
    *long long v5 = *v4;
    long long v6 = v4[4];
    long long v8 = v4[1];
    long long v7 = v4[2];
    void v5[3] = v4[3];
    void v5[4] = v6;
    v5[1] = v8;
    v5[2] = v7;
  }
  else
  {
    long long v5 = 0;
  }
  *a2 = v5;
  return pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator::operator++((uint64_t)a1);
}

void sub_216EEB244(_Unwind_Exception *exception_object)
{
  *uint64_t v1 = 0;
  if (v2) {
    operator delete(v2);
  }
  _Unwind_Resume(exception_object);
}

BOOL pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator::operator==(void **a1, void **a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  BOOL result = ((unint64_t)*a1 | (unint64_t)*a2) == 0;
  if (v2) {
    BOOL v5 = v3 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5) {
    return *v2 == *v3 && v2[1] == v3[1];
  }
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator::GetFile(pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator *this)
{
  if (*(void *)this) {
    return *(void *)(*(void *)this + 64);
  }
  else {
    return 0;
  }
}

void pxrInternal__aapl__pxrReserved__::UsdZipFileWriter::CreateNew(uint64_t a1@<X0>, void *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::TfErrorMark::TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v14);
  pxrInternal__aapl__pxrReserved__::TfSafeOutputFile::Replace(a1, (uint64_t)&v9);
  unint64_t v4 = atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
  if (!v4) {
    pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_CreateInstance();
  }
  unint64_t v5 = v14;
  unint64_t v6 = atomic_load((unint64_t *)(v4 + 144));
  if (v5 >= v6
    || pxrInternal__aapl__pxrReserved__::TfErrorMark::_IsCleanImpl((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v14, (atomic_ullong *)v4))
  {
    long long v7 = (char *)operator new(0x50uLL);
    *(void *)long long v7 = v9;
    *(_OWORD *)(v7 + 8) = v10;
    *((void *)v7 + 3) = v11;
    *((void *)&v10 + 1) = 0;
    uint64_t v11 = 0;
    *((_OWORD *)v7 + 2) = v12;
    uint64_t v8 = v13;
    long long v12 = 0uLL;
    uint64_t v13 = 0;
    uint64_t v9 = 0;
    *(void *)&long long v10 = 0;
    *((void *)v7 + 6) = v8;
    *((void *)v7 + 7) = 0;
    *((void *)v7 + 8) = 0;
    *((void *)v7 + 9) = 0;
  }
  else
  {
    long long v7 = 0;
  }
  *a2 = v7;
  pxrInternal__aapl__pxrReserved__::TfSafeOutputFile::~TfSafeOutputFile((pxrInternal__aapl__pxrReserved__::TfSafeOutputFile *)&v9);
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v14);
}

void sub_216EEB3A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  pxrInternal__aapl__pxrReserved__::TfSafeOutputFile::~TfSafeOutputFile((pxrInternal__aapl__pxrReserved__::TfSafeOutputFile *)&a9);
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)(v9 - 24));
  _Unwind_Resume(a1);
}

void *pxrInternal__aapl__pxrReserved__::UsdZipFileWriter::UsdZipFileWriter(void *this)
{
  *this = 0;
  return this;
}

{
  *this = 0;
  return this;
}

void *pxrInternal__aapl__pxrReserved__::UsdZipFileWriter::UsdZipFileWriter(void *result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a2 = 0;
  *BOOL result = v2;
  return result;
}

{
  uint64_t v2;

  uint64_t v2 = *a2;
  *a2 = 0;
  *BOOL result = v2;
  return result;
}

{
  uint64_t v2;

  uint64_t v2 = *a2;
  *a2 = 0;
  *BOOL result = v2;
  return result;
}

{
  uint64_t v2;

  uint64_t v2 = *a2;
  *a2 = 0;
  *BOOL result = v2;
  return result;
}

pxrInternal__aapl__pxrReserved__::TfSafeOutputFile **pxrInternal__aapl__pxrReserved__::UsdZipFileWriter::operator=(pxrInternal__aapl__pxrReserved__::TfSafeOutputFile **a1, pxrInternal__aapl__pxrReserved__::TfSafeOutputFile **a2)
{
  if (a1 != a2)
  {
    uint64_t v3 = *a2;
    *a2 = 0;
    unint64_t v4 = *a1;
    *a1 = v3;
    if (v4) {
      sub_216EECD8C((int)a1, v4);
    }
  }
  return a1;
}

void pxrInternal__aapl__pxrReserved__::UsdZipFileWriter::~UsdZipFileWriter(pxrInternal__aapl__pxrReserved__::TfSafeOutputFile **this)
{
  if (*this)
  {
    pxrInternal__aapl__pxrReserved__::UsdZipFileWriter::Save(this);
    uint64_t v2 = *this;
    *this = 0;
    if (v2) {
      sub_216EECD8C((int)this, v2);
    }
  }
  else
  {
    *this = 0;
  }
}

BOOL pxrInternal__aapl__pxrReserved__::UsdZipFileWriter::Save(pxrInternal__aapl__pxrReserved__::TfSafeOutputFile **this)
{
  uint64_t v27 = *MEMORY[0x263EF8340];
  uint64_t v1 = (FILE **)*this;
  if (*this)
  {
    uint64_t v13 = *this;
    uint64_t v3 = *v1;
    int v12 = MEMORY[0x21D448510](*v1);
    unint64_t v4 = (_DWORD *)*((void *)*this + 7);
    unint64_t v14 = (_DWORD *)*((void *)*this + 8);
    if (v4 != v14)
    {
      unint64_t v5 = v4 + 14;
      do
      {
        unint64_t v6 = v5 - 14;
        int v7 = *v5;
        int v22 = 0;
        uint64_t v23 = 0;
        uint64_t v24 = 0;
        LODWORD(__ptr) = 33639248;
        WORD2(__ptr) = 0;
        *(void *)((char *)&__ptr + 6) = *(void *)(v5 - 7);
        HIWORD(__ptr) = *((_WORD *)v5 - 10);
        size_t v16 = *((void *)v5 - 2);
        LODWORD(__nitems) = *(v5 - 2);
        WORD2(__nitems) = *((_WORD *)v5 - 2);
        unsigned int v8 = *((unsigned __int16 *)v5 - 1);
        HIWORD(__nitems) = *((_WORD *)v5 - 1);
        int v18 = 0;
        __int16 v19 = 0;
        int v20 = 0;
        int v21 = v7;
        if (*((char *)v5 - 33) < 0) {
          unint64_t v6 = (void *)*v6;
        }
        v5 += 16;
        int v22 = v6;
        int v26 = 0;
        memset(v25, 0, sizeof(v25));
        uint64_t v23 = sub_216EEC0F0(v25, v8);
        uint64_t v24 = 0;
        fwrite(&__ptr, 4uLL, 1uLL, v3);
        fwrite((char *)&__ptr + 4, 2uLL, 1uLL, v3);
        fwrite((char *)&__ptr + 6, 2uLL, 1uLL, v3);
        fwrite((char *)&__ptr + 8, 2uLL, 1uLL, v3);
        fwrite((char *)&__ptr + 10, 2uLL, 1uLL, v3);
        fwrite((char *)&__ptr + 12, 2uLL, 1uLL, v3);
        fwrite((char *)&__ptr + 14, 2uLL, 1uLL, v3);
        fwrite(&v16, 4uLL, 1uLL, v3);
        fwrite((char *)&v16 + 4, 4uLL, 1uLL, v3);
        fwrite(&__nitems, 4uLL, 1uLL, v3);
        fwrite((char *)&__nitems + 4, 2uLL, 1uLL, v3);
        fwrite((char *)&__nitems + 6, 2uLL, 1uLL, v3);
        fwrite(&v18, 2uLL, 1uLL, v3);
        fwrite((char *)&v18 + 2, 2uLL, 1uLL, v3);
        fwrite(&v19, 2uLL, 1uLL, v3);
        fwrite(&v20, 4uLL, 1uLL, v3);
        fwrite(&v21, 4uLL, 1uLL, v3);
        fwrite(v22, 1uLL, WORD2(__nitems), v3);
        fwrite(v23, 1uLL, HIWORD(__nitems), v3);
        fwrite(v24, 1uLL, (unsigned __int16)v18, v3);
      }
      while (v5 - 14 != v14);
    }
    int v9 = MEMORY[0x21D448510](v3);
    *(void *)&long long __ptr = 101010256;
    WORD4(__ptr) = (*((_DWORD *)*this + 16) - *((_DWORD *)*this + 14)) >> 6;
    WORD5(__ptr) = WORD4(__ptr);
    HIDWORD(__ptr) = v9 - v12;
    LODWORD(v16) = v12;
    WORD2(v16) = 0;
    size_t __nitems = 0;
    fwrite(&__ptr, 4uLL, 1uLL, v3);
    fwrite((char *)&__ptr + 4, 2uLL, 1uLL, v3);
    fwrite((char *)&__ptr + 6, 2uLL, 1uLL, v3);
    fwrite((char *)&__ptr + 8, 2uLL, 1uLL, v3);
    fwrite((char *)&__ptr + 10, 2uLL, 1uLL, v3);
    fwrite((char *)&__ptr + 12, 4uLL, 1uLL, v3);
    fwrite(&v16, 4uLL, 1uLL, v3);
    fwrite((char *)&v16 + 4, 2uLL, 1uLL, v3);
    fwrite((const void *)__nitems, 1uLL, WORD2(v16), v3);
    pxrInternal__aapl__pxrReserved__::TfSafeOutputFile::Close(*this);
    long long v10 = *this;
    *this = 0;
    uint64_t v1 = (FILE **)v13;
    if (v10) {
      sub_216EECD8C((int)this, v10);
    }
  }
  else
  {
    *(void *)&long long __ptr = "usd/zipFile.cpp";
    *((void *)&__ptr + 1) = "Save";
    size_t v16 = 1031;
    size_t __nitems = (size_t)"BOOL pxrInternal__aapl__pxrReserved__::UsdZipFileWriter::Save()";
    LOBYTE(v18) = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&__ptr, 1, (pxrInternal__aapl__pxrReserved__ *)"File is not open for writing");
  }
  return v1 != 0;
}

void pxrInternal__aapl__pxrReserved__::UsdZipFileWriter::AddFile(FILE ***a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v73 = *MEMORY[0x263EF8340];
  if (!*a1)
  {
    *(void *)uint64_t v68 = "usd/zipFile.cpp";
    *(void *)&v68[8] = "AddFile";
    *(void *)&long long v69 = 965;
    *((void *)&v69 + 1) = "std::string pxrInternal__aapl__pxrReserved__::UsdZipFileWriter::AddFile(const std::string &,"
                            " const std::string &)";
    LOBYTE(v7sub_2168EBBB8(&a9, 0) = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v68, 1, (pxrInternal__aapl__pxrReserved__ *)"File is not open for writing");
    *(void *)a4 = 0;
    *(void *)(a4 + 8) = 0;
    *(void *)(a4 + 16) = 0;
    return;
  }
  uint64_t v7 = *(unsigned __int8 *)(a3 + 23);
  if ((v7 & 0x80u) != 0) {
    uint64_t v7 = *(void *)(a3 + 8);
  }
  if (v7) {
    uint64_t v8 = a3;
  }
  else {
    uint64_t v8 = a2;
  }
  pxrInternal__aapl__pxrReserved__::TfNormPath(&__p, v8, 1);
  pxrInternal__aapl__pxrReserved__::TfStringTrimLeft("/", &__p, (std::string *)v68);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  *(_OWORD *)&__p.__r_.__value_.__l.__data_ = *(_OWORD *)v68;
  __p.__r_.__value_.__r.__words[2] = v69;
  int v9 = *a1;
  long long v10 = (*a1)[7];
  uint64_t v11 = (*a1)[8];
  if (v10 == v11)
  {
LABEL_29:
    if (v10 != v11)
    {
      if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
        *(std::string *)a4 = __p;
        return;
      }
      sub_216778F24((unsigned char *)a4, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
      goto LABEL_87;
    }
  }
  else
  {
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    do
    {
      uint64_t v14 = *((unsigned __int8 *)&v10->_file + 5);
      if ((v14 & 0x80u) == 0) {
        uint64_t v15 = *((unsigned __int8 *)&v10->_file + 5);
      }
      else {
        uint64_t v15 = *(void *)&v10->_r;
      }
      if (v15 == size)
      {
        if ((v14 & 0x80) != 0)
        {
          if (!memcmp(v10->_p, p_p, *(void *)&v10->_r)) {
            goto LABEL_29;
          }
        }
        else
        {
          if (!*((unsigned char *)&v10->_file + 5)) {
            goto LABEL_29;
          }
          uint64_t v16 = 0;
          while (*((unsigned __int8 *)&v10->_p + v16) == p_p->__r_.__value_.__s.__data_[v16])
          {
            if (v14 == ++v16) {
              goto LABEL_29;
            }
          }
        }
      }
      long long v10 = (FILE *)((char *)v10 + 64);
    }
    while (v10 != v11);
  }
  uint64_t v17 = *v9;
  v61[0] = 0;
  v61[1] = 0;
  uint64_t v62 = 0;
  pxrInternal__aapl__pxrReserved__::ArchMapFileReadOnly((const char *)a2, (uint64_t)v61, &v59);
  if (v59)
  {
    *((_WORD *)&__ptr._size + 2) = 0;
    __ptr._std::string::size_type size = 0;
    *(_OWORD *)size_t __nitems = 0u;
    *(_OWORD *)uint64_t v57 = 0u;
    uint64_t v58 = 0;
    __ptr._base = (unsigned __int8 *)0xA04034B50;
    *(void *)uint64_t v68 = 0;
    if (*(char *)(a2 + 23) >= 0) {
      __int16 v19 = (pxrInternal__aapl__pxrReserved__ *)a2;
    }
    else {
      __int16 v19 = *(pxrInternal__aapl__pxrReserved__ **)a2;
    }
    pxrInternal__aapl__pxrReserved__::ArchGetModificationTime(v19, (double *)v68, v18);
    time_t v64 = (uint64_t)*(double *)v68;
    int v20 = localtime(&v64);
    int v21 = v20->tm_mday | ((v20->tm_year << 9) + 24576) | (32 * v20->tm_mon + 32);
    HIWORD(__ptr._size) = (32 * LOWORD(v20->tm_min)) | (LOWORD(v20->tm_hour) << 11) | (v20->tm_sec / 2);
    *((_WORD *)&__ptr._size + 2) = v21;
    if (v60)
    {
      int v22 = v59;
      unsigned int v23 = -1;
      uint64_t v24 = v60;
      do
      {
        unsigned int v25 = *v22++;
        unsigned int v23 = dword_2174A29C4[v23 ^ v25] ^ (v23 >> 8);
        --v24;
      }
      while (v24);
      int v26 = ~v23;
    }
    else
    {
      int v26 = 0;
    }
    __nitems[0] = __PAIR64__(v60, v26);
    LODWORD(__nitems[1]) = v60;
    __int16 v29 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      __int16 v29 = __p.__r_.__value_.__r.__words[1];
    }
    WORD2(__nitems[1]) = v29;
    int v30 = MEMORY[0x21D448510](v17);
    char v31 = v30 + BYTE4(__nitems[1]) + 30;
    if ((v31 & 0x3Fu) <= 0x3C) {
      __int16 v32 = 64;
    }
    else {
      __int16 v32 = 128;
    }
    if ((((_BYTE)v30 + BYTE4(__nitems[1]) + 30) & 0x3F) != 0) {
      unsigned __int16 v33 = v32 - (v31 & 0x3F);
    }
    else {
      unsigned __int16 v33 = 0;
    }
    HIWORD(__nitems[1]) = v33;
    uint64_t v34 = &__p;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      uint64_t v34 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    v57[0] = v34;
    int v72 = 0;
    long long v70 = 0u;
    long long v71 = 0u;
    *(_OWORD *)uint64_t v68 = 0u;
    long long v69 = 0u;
    v57[1] = sub_216EEC0F0(v68, v33);
    uint64_t v58 = v59;
    fwrite(&__ptr, 4uLL, 1uLL, v17);
    fwrite((char *)&__ptr._base + 4, 2uLL, 1uLL, v17);
    fwrite((char *)&__ptr._base + 6, 2uLL, 1uLL, v17);
    fwrite(&__ptr._size, 2uLL, 1uLL, v17);
    fwrite((char *)&__ptr._size + 2, 2uLL, 1uLL, v17);
    fwrite(&__ptr._size + 1, 2uLL, 1uLL, v17);
    fwrite(__nitems, 4uLL, 1uLL, v17);
    fwrite((char *)__nitems + 4, 4uLL, 1uLL, v17);
    fwrite(&__nitems[1], 4uLL, 1uLL, v17);
    fwrite((char *)&__nitems[1] + 4, 2uLL, 1uLL, v17);
    fwrite((char *)&__nitems[1] + 6, 2uLL, 1uLL, v17);
    fwrite(v57[0], 1uLL, WORD2(__nitems[1]), v17);
    fwrite(v57[1], 1uLL, HIWORD(__nitems[1]), v17);
    fwrite(v58, 1uLL, HIDWORD(__nitems[0]), v17);
    uint64_t v35 = *a1;
    uint64_t v36 = (*a1)[8];
    uint64_t v37 = v35[9];
    if (v36 >= v37)
    {
      unint64_t v39 = (unint64_t)v35[7];
      uint64_t v40 = (uint64_t)((uint64_t)v36 - v39) >> 6;
      unint64_t v41 = v40 + 1;
      if ((unint64_t)(v40 + 1) >> 58) {
        sub_21677CB10();
      }
      uint64_t v42 = (uint64_t)v37 - v39;
      if (v42 >> 5 > v41) {
        unint64_t v41 = v42 >> 5;
      }
      if ((unint64_t)v42 >= 0x7FFFFFFFFFFFFFC0) {
        unint64_t v43 = 0x3FFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v43 = v41;
      }
      uint64_t v67 = v35 + 9;
      if (v43)
      {
        if (v43 >> 58) {
          sub_21677CA1C();
        }
        uint64_t v44 = (char *)operator new(v43 << 6);
      }
      else
      {
        uint64_t v44 = 0;
      }
      uint64_t v47 = &v44[64 * v40];
      time_t v64 = (time_t)v44;
      v65.i64[0] = (uint64_t)v47;
      v65.i64[1] = (uint64_t)v47;
      uint64_t v66 = (FILE *)&v44[64 * v43];
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      {
        sub_216778F24(v47, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
        unint64_t v39 = (unint64_t)v35[7];
        uint64_t v36 = v35[8];
        uint64_t v49 = (char *)v65.i64[1];
        uint64_t v48 = (FILE *)v65.i64[0];
      }
      else
      {
        *(std::string *)uint64_t v47 = __p;
        uint64_t v48 = (FILE *)v47;
        uint64_t v49 = v47;
      }
      long long v50 = *(_OWORD *)__nitems;
      *(__sbuf *)(v47 + 24) = __ptr;
      *(_OWORD *)(v47 + 4sub_2168EBBB8(&a9, 0) = v50;
      *((_DWORD *)v47 + 14) = v30;
      if (v36 == (FILE *)v39)
      {
        int64x2_t v53 = vdupq_n_s64(v39);
      }
      else
      {
        do
        {
          __sbuf ub = v36[-1]._ub;
          v48[-1]._extra = v36[-1]._extra;
          v48[-1].___sbuf ub = ub;
          *(void *)&v36[-1]._ub._std::string::size_type size = 0;
          v36[-1]._extra = 0;
          v36[-1]._ub._base = 0;
          long long v52 = *(_OWORD *)&v36[-1]._ur;
          *(_OWORD *)&v48[-1]._lb._std::string::size_type size = *(_OWORD *)&v36[-1]._lb._size;
          *(_OWORD *)&v48[-1]._ur = v52;
          LODWORD(v48[-1]._offset) = v36[-1]._offset;
          uint64_t v48 = (FILE *)((char *)v48 - 64);
          uint64_t v36 = (FILE *)((char *)v36 - 64);
        }
        while (v36 != (FILE *)v39);
        int64x2_t v53 = *(int64x2_t *)(v35 + 7);
      }
      p_read = (FILE *)(v49 + 64);
      v35[7] = v48;
      v35[8] = (FILE *)(v49 + 64);
      int64x2_t v65 = v53;
      uint64_t v54 = v35[9];
      v35[9] = v66;
      uint64_t v66 = v54;
      time_t v64 = v53.i64[0];
      sub_216EECD28((uint64_t)&v64);
    }
    else
    {
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      {
        sub_216778F24(v36, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
      }
      else
      {
        long long v38 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
        *(void *)&v36->_flags = *((void *)&__p.__r_.__value_.__l + 2);
        *(_OWORD *)&v36->_p = v38;
      }
      long long v45 = *(_OWORD *)__nitems;
      v36->_bf = __ptr;
      *(_OWORD *)&v36->_lbfstd::string::size_type size = v45;
      LODWORD(v36->_close) = v30;
      p_read = (FILE *)&v36->_read;
      v35[8] = p_read;
    }
    v35[8] = p_read;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      sub_216778F24((unsigned char *)a4, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    }
    else {
      *(std::string *)a4 = __p;
    }
  }
  else
  {
    *(void *)uint64_t v68 = "usd/zipFile.cpp";
    *(void *)&v68[8] = "AddFile";
    *(void *)&long long v69 = 992;
    *((void *)&v69 + 1) = "std::string pxrInternal__aapl__pxrReserved__::UsdZipFileWriter::AddFile(const std::string &,"
                            " const std::string &)";
    LOBYTE(v7sub_2168EBBB8(&a9, 0) = 0;
    if (*(char *)(a2 + 23) >= 0) {
      uint64_t v27 = (const char *)a2;
    }
    else {
      uint64_t v27 = *(const char **)a2;
    }
    uint64_t v28 = v61;
    if (v62 < 0) {
      uint64_t v28 = (void **)v61[0];
    }
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v68, 3, (pxrInternal__aapl__pxrReserved__ *)"Failed to map '%s': %s", v27, (const char *)v28);
    *(void *)a4 = 0;
    *(void *)(a4 + 8) = 0;
    *(void *)(a4 + 16) = 0;
  }
  sub_2168351F0((uint64_t)&v59, 0);
  if (SHIBYTE(v62) < 0) {
    operator delete(v61[0]);
  }
LABEL_87:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_216EEC078(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,char a32)
{
  if (a25 < 0) {
    operator delete(__p);
  }
  if (a31 < 0) {
    operator delete(a26);
  }
  _Unwind_Resume(a1);
}

_WORD *sub_216EEC0F0(_WORD *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  __int16 v2 = a2;
  if (a2 <= 3)
  {
    unint64_t v6 = "usd/zipFile.cpp";
    uint64_t v7 = "_PrepareExtraFieldPadding";
    uint64_t v8 = 462;
    int v9 = "const char *pxrInternal__aapl__pxrReserved__::(anonymous namespace)::_PrepareExtraFieldPadding(char (&)[68], uint16_t)";
    char v10 = 0;
    unint64_t v5 = "numPaddingBytes >= _HeaderSize";
LABEL_9:
    pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v6, v5, 0);
    goto LABEL_4;
  }
  if (a2 >= 0x45)
  {
    unint64_t v6 = "usd/zipFile.cpp";
    uint64_t v7 = "_PrepareExtraFieldPadding";
    uint64_t v8 = 463;
    int v9 = "const char *pxrInternal__aapl__pxrReserved__::(anonymous namespace)::_PrepareExtraFieldPadding(char (&)[68], uint16_t)";
    char v10 = 0;
    unint64_t v5 = "numPaddingBytes <= sizeof(extraFieldBuffer)";
    goto LABEL_9;
  }
LABEL_4:
  *a1 = 6534;
  a1[1] = v2 - 4;
  return a1;
}

void pxrInternal__aapl__pxrReserved__::UsdZipFileWriter::Discard(pxrInternal__aapl__pxrReserved__::TfSafeOutputFile **this)
{
  __int16 v2 = *this;
  if (v2)
  {
    pxrInternal__aapl__pxrReserved__::TfSafeOutputFile::Discard(v2);
    uint64_t v3 = *this;
    *this = 0;
    if (v3)
    {
      sub_216EECD8C((int)this, v3);
    }
  }
  else
  {
    v4[0] = "usd/zipFile.cpp";
    v4[1] = "Discard";
    v4[2] = 1102;
    v4[3] = "void pxrInternal__aapl__pxrReserved__::UsdZipFileWriter::Discard()";
    char v5 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v4, 1, (pxrInternal__aapl__pxrReserved__ *)"File is not open for writing");
  }
}

uint64_t sub_216EEC260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a1 + 64) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_DWORD *)(a1 + 48) = 1065353216;
  *(void *)(a1 + 56) = 0;
  std::shared_timed_mutex::shared_timed_mutex((std::shared_timed_mutex *)(a1 + 72));
  *(void *)(a1 + 24sub_2168EBBB8(&a9, 0) = *(void *)a1;
  *(void *)(a1 + 248) = a3;
  return a1;
}

void sub_216EEC2E0(_Unwind_Exception *a1)
{
  unint64_t v6 = *v3;
  *uint64_t v3 = 0;
  if (v6) {
    sub_216EEC310((int)v3, v6);
  }
  sub_2173250B0(v4, v2, v1);
  _Unwind_Resume(a1);
}

void sub_216EEC310(int a1, void **__p)
{
  if (__p)
  {
    uint64_t v3 = *__p;
    void *__p = 0;
    if (v3) {
      operator delete(v3);
    }
    operator delete(__p);
  }
}

uint64_t sub_216EEC35C(uint64_t a1)
{
  sub_216EEC398(a1, *(void **)(a1 + 16));
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void sub_216EEC398(uint64_t a1, void *a2)
{
  if (a2)
  {
    uint64_t v2 = a2;
    do
    {
      uint64_t v3 = (void *)*v2;
      sub_216EEC3DC((uint64_t)(v2 + 2));
      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
}

void sub_216EEC3DC(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = 0;
  if (v2) {
    operator delete(v2);
  }
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v3 = *(void **)a1;
    operator delete(v3);
  }
}

void sub_216EEC434(uint64_t a1)
{
  uint64_t v2 = (uint64_t *)operator new(8uLL);
  pxrInternal__aapl__pxrReserved__::UsdZipFile::Iterator::Iterator(v2, a1, 0);
  uint64_t v3 = *(void ***)(a1 + 64);
  *(void *)(a1 + 64) = v2;
  if (v3) {
    sub_216EEC310(a1 + 64, v3);
  }
  unint64_t v4 = operator new(8uLL);
  char v5 = **(_OWORD ***)(a1 + 64);
  if (v5)
  {
    unint64_t v6 = operator new(0x50uLL);
    _OWORD *v6 = *v5;
    long long v7 = v5[1];
    long long v8 = v5[2];
    long long v9 = v5[4];
    int v6[3] = v5[3];
    v6[4] = v9;
    v6[1] = v7;
    v6[2] = v8;
  }
  else
  {
    unint64_t v6 = 0;
  }
  void *v4 = v6;
  int v12 = *(void ***)(a1 + 56);
  uint64_t v11 = (void *)(a1 + 56);
  char v10 = v12;
  *uint64_t v11 = v4;
  if (v12)
  {
    sub_216EEC310((int)v11, v10);
  }
}

void sub_216EEC500(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

unsigned __int8 *sub_216EEC518(void *a1, unsigned __int8 *a2)
{
  unint64_t v4 = sub_216891D24((uint64_t)(a1 + 3), (uint64_t)a2);
  int8x8_t v5 = (int8x8_t)a1[1];
  if (!*(void *)&v5) {
    return 0;
  }
  unint64_t v6 = v4;
  uint8x8_t v7 = (uint8x8_t)vcnt_s8(v5);
  v7.i16[0] = vaddlv_u8(v7);
  unint64_t v8 = v7.u32[0];
  if (v7.u32[0] > 1uLL)
  {
    unint64_t v9 = v4;
    if (v4 >= *(void *)&v5) {
      unint64_t v9 = v4 % *(void *)&v5;
    }
  }
  else
  {
    unint64_t v9 = (*(void *)&v5 - 1) & v4;
  }
  char v10 = *(unsigned __int8 ***)(*a1 + 8 * v9);
  if (!v10) {
    return 0;
  }
  uint64_t v11 = *v10;
  if (*v10)
  {
    uint64_t v12 = (uint64_t)(a1 + 4);
    do
    {
      unint64_t v13 = *((void *)v11 + 1);
      if (v13 == v6)
      {
        if (sub_2168513F8(v12, v11 + 16, a2)) {
          return v11;
        }
      }
      else
      {
        if (v8 > 1)
        {
          if (v13 >= *(void *)&v5) {
            v13 %= *(void *)&v5;
          }
        }
        else
        {
          v13 &= *(void *)&v5 - 1;
        }
        if (v13 != v9) {
          return 0;
        }
      }
      uint64_t v11 = *(unsigned __int8 **)v11;
    }
    while (v11);
  }
  return v11;
}

uint64_t sub_216EEC61C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    MEMORY[0x21D447C00](*(void *)a1);
  }
  return a1;
}

unsigned __int8 *sub_216EEC654(uint64_t a1, unsigned __int8 *a2, long long *a3, _OWORD **a4)
{
  unint64_t v9 = (void *)(a1 + 24);
  unint64_t v10 = sub_216891D24(a1 + 24, (uint64_t)a2);
  unint64_t v11 = v10;
  unint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    uint8x8_t v13 = (uint8x8_t)vcnt_s8((int8x8_t)v12);
    v13.i16[0] = vaddlv_u8(v13);
    unint64_t v14 = v13.u32[0];
    if (v13.u32[0] > 1uLL)
    {
      unint64_t v4 = v10;
      if (v10 >= v12) {
        unint64_t v4 = v10 % v12;
      }
    }
    else
    {
      unint64_t v4 = (v12 - 1) & v10;
    }
    uint64_t v15 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v4);
    if (v15)
    {
      for (uint64_t i = *v15; i; uint64_t i = *(unsigned __int8 **)i)
      {
        unint64_t v17 = *((void *)i + 1);
        if (v17 == v11)
        {
          if (sub_2168513F8(a1 + 32, i + 16, a2)) {
            return i;
          }
        }
        else
        {
          if (v14 > 1)
          {
            if (v17 >= v12) {
              v17 %= v12;
            }
          }
          else
          {
            v17 &= v12 - 1;
          }
          if (v17 != v4) {
            break;
          }
        }
      }
    }
  }
  sub_216EEC8E0(a1, v11, a3, a4, (uint64_t)v27);
  float v18 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v19 = *(float *)(a1 + 32);
  if (!v12 || (float)(v19 * (float)v12) < v18)
  {
    BOOL v20 = 1;
    if (v12 >= 3) {
      BOOL v20 = (v12 & (v12 - 1)) != 0;
    }
    unint64_t v21 = v20 | (2 * v12);
    unint64_t v22 = vcvtps_u32_f32(v18 / v19);
    if (v21 <= v22) {
      size_t v23 = v22;
    }
    else {
      size_t v23 = v21;
    }
    sub_21678A04C(a1, v23);
    unint64_t v12 = *(void *)(a1 + 8);
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v11 >= v12) {
        unint64_t v4 = v11 % v12;
      }
      else {
        unint64_t v4 = v11;
      }
    }
    else
    {
      unint64_t v4 = (v12 - 1) & v11;
    }
  }
  uint64_t v24 = *(void **)(*(void *)a1 + 8 * v4);
  if (v24)
  {
    *(void *)v27[0] = *v24;
    *uint64_t v24 = v27[0];
  }
  else
  {
    *(void *)v27[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v27[0];
    *(void *)(*(void *)a1 + 8 * v4) = a1 + 16;
    if (*(void *)v27[0])
    {
      unint64_t v25 = *(void *)(*(void *)v27[0] + 8);
      if ((v12 & (v12 - 1)) != 0)
      {
        if (v25 >= v12) {
          v25 %= v12;
        }
      }
      else
      {
        v25 &= v12 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v25) = v27[0];
    }
  }
  uint64_t i = (unsigned __int8 *)v27[0];
  v27[0] = 0;
  ++*v9;
  sub_216EEC9F4((uint64_t)v27, 0);
  return i;
}

void sub_216EEC8C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_216EEC9F4((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_216EEC8E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, _OWORD **a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9 = a1 + 16;
  unint64_t v10 = operator new(0x30uLL);
  *(void *)a5 = v10;
  *(void *)(a5 + 8) = v9;
  *(unsigned char *)(a5 + 16) = 0;
  *unint64_t v10 = 0;
  v10[1] = a2;
  uint64_t result = sub_216EEC968((uint64_t)(v10 + 2), a3, a4);
  *(unsigned char *)(a5 + 16) = 1;
  return result;
}

void sub_216EEC950(_Unwind_Exception *a1)
{
  sub_216EEC9F4(v1, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_216EEC968(uint64_t a1, long long *a2, _OWORD **a3)
{
  long long v4 = *a2;
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(_OWORD *)a1 = v4;
  *((void *)a2 + 1) = 0;
  *((void *)a2 + 2) = 0;
  *(void *)a2 = 0;
  int8x8_t v5 = *a3;
  if (*a3)
  {
    unint64_t v6 = operator new(0x50uLL);
    _OWORD *v6 = *v5;
    long long v7 = v5[1];
    long long v8 = v5[2];
    long long v9 = v5[4];
    int v6[3] = v5[3];
    v6[4] = v9;
    v6[1] = v7;
    v6[2] = v8;
  }
  else
  {
    unint64_t v6 = 0;
  }
  *(void *)(a1 + 24) = v6;
  return a1;
}

void sub_216EEC9D8(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_216EEC9F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_216EEC3DC((uint64_t)v2 + 16);
    }
    operator delete(v2);
  }
}

uint64_t sub_216EECA4C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    MEMORY[0x21D447C20](*(void *)a1);
  }
  return a1;
}

void sub_216EECA84(uint64_t a1, _DWORD *a2)
{
  unint64_t v2 = *(void *)(a1 + 8);
  unint64_t v3 = v2 - *(void *)a1 + *(void *)(a1 + 16);
  if (v3 < 4 || v3 > v2)
  {
    v5[0] = "usd/zipFile.cpp";
    v5[1] = "Read";
    v5[2] = 80;
    void v5[3] = "void pxrInternal__aapl__pxrReserved__::(anonymous namespace)::_InputStream::Read(T *) [T = unsigned int]";
    char v6 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v5, 3, (pxrInternal__aapl__pxrReserved__ *)"Failed to read from zip input stream. Corrupt data.");
  }
  else
  {
    *a2 = **(_DWORD **)a1;
    *(void *)a1 += 4;
  }
}

void sub_216EECB10(uint64_t a1, _WORD *a2)
{
  unint64_t v2 = *(void *)(a1 + 8);
  unint64_t v3 = v2 - *(void *)a1 + *(void *)(a1 + 16);
  if (v3 < 2 || v3 > v2)
  {
    v5[0] = "usd/zipFile.cpp";
    v5[1] = "Read";
    v5[2] = 80;
    void v5[3] = "void pxrInternal__aapl__pxrReserved__::(anonymous namespace)::_InputStream::Read(T *) [T = unsigned short]";
    char v6 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v5, 3, (pxrInternal__aapl__pxrReserved__ *)"Failed to read from zip input stream. Corrupt data.");
  }
  else
  {
    *a2 = **(_WORD **)a1;
    *(void *)a1 += 2;
  }
}

void *sub_216EECB9C(void *a1, uint64_t a2)
{
  *a1 = a2;
  long long v4 = operator new(0x20uLL);
  void *v4 = &unk_26C76C250;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_216EECBFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  a10 = 0;
  if (v10) {
    sub_216EECC94((uint64_t)&a10, v10);
  }
  _Unwind_Resume(exception_object);
}

void sub_216EECC20(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete(v1);
}

void sub_216EECC48(uint64_t a1)
{
}

uint64_t sub_216EECC50(uint64_t a1, uint64_t a2)
{
  if (sub_21677EC50(a2, (uint64_t)&unk_26C76C2A0)) {
    return a1 + 24;
  }
  else {
    return 0;
  }
}

void sub_216EECC94(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    unint64_t v3 = (std::mutex *)(a2 + 72);
    std::condition_variable::~condition_variable((std::condition_variable *)(a2 + 184));
    std::condition_variable::~condition_variable((std::condition_variable *)(a2 + 136));
    std::mutex::~mutex(v3);
    long long v4 = *(void ***)(a2 + 64);
    *(void *)(a2 + 64) = 0;
    if (v4) {
      sub_216EEC310(a2 + 64, v4);
    }
    int8x8_t v5 = *(void ***)(a2 + 56);
    *(void *)(a2 + 56) = 0;
    if (v5) {
      sub_216EEC310(a2 + 56, v5);
    }
    sub_216EEC35C(a2 + 16);
    char v6 = *(std::__shared_weak_count **)(a2 + 8);
    if (v6) {
      sub_216784EC4(v6);
    }
    operator delete((void *)a2);
  }
}

uint64_t sub_216EECD28(uint64_t a1)
{
  unint64_t v3 = *(void ***)(a1 + 8);
  unint64_t v2 = *(void ***)(a1 + 16);
  if (v2 != v3)
  {
    do
    {
      long long v4 = v2 - 8;
      *(void *)(a1 + 16) = v2 - 8;
      if (*((char *)v2 - 41) < 0)
      {
        operator delete(*v4);
        long long v4 = *(void ***)(a1 + 16);
      }
      unint64_t v2 = v4;
    }
    while (v4 != v3);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_216EECD8C(int a1, pxrInternal__aapl__pxrReserved__::TfSafeOutputFile *this)
{
  if (this)
  {
    uint64_t v3 = *((void *)this + 7);
    if (v3)
    {
      uint64_t v4 = *((void *)this + 8);
      int8x8_t v5 = (void *)*((void *)this + 7);
      if (v4 != v3)
      {
        do
        {
          if (*(char *)(v4 - 41) < 0) {
            operator delete(*(void **)(v4 - 64));
          }
          v4 -= 64;
        }
        while (v4 != v3);
        int8x8_t v5 = (void *)*((void *)this + 7);
      }
      *((void *)this + 8) = v3;
      operator delete(v5);
    }
    pxrInternal__aapl__pxrReserved__::TfSafeOutputFile::~TfSafeOutputFile(this);
    operator delete(v6);
  }
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeom_GetPositionsVelocitiesAndAccelerations(pxrInternal__aapl__pxrReserved__::UsdAttribute *a1, double a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::UsdAttribute *a4, uint64_t a5, uint64_t *a6, void *a7, double *a8, void *a9, uint64_t a10)
{
  v58[2] = *MEMORY[0x263EF8340];
  double v55 = 0.0;
  double v56 = 0.0;
  double v54 = 0.0;
  char v53 = 0;
  if ((sub_216EED3B8(a1, a2) & 1) == 0)
  {
    uint64_t v48 = "usdGeom/samplingUtils.cpp";
    uint64_t v49 = "UsdGeom_GetPositionsVelocitiesAndAccelerations";
    uint64_t v50 = 184;
    uint64_t v51 = "BOOL pxrInternal__aapl__pxrReserved__::UsdGeom_GetPositionsVelocitiesAndAccelerations(const UsdAttribute &, co"
          "nst UsdAttribute &, const UsdAttribute &, UsdTimeCode, size_t, VtVec3fArray *, VtVec3fArray *, UsdTimeCode *, "
          "VtVec3fArray *, const UsdPrim &)";
    char v52 = 0;
    sub_216D0162C(a10, (int *)&v47);
    Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v47);
    pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v48, (pxrInternal__aapl__pxrReserved__ *)"%s -- no positions", v21, Text);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v47 + 1);
    goto LABEL_6;
  }
  uint64_t v17 = *a6;
  if (a5 && v17 != a5)
  {
    uint64_t v48 = "usdGeom/samplingUtils.cpp";
    uint64_t v49 = "UsdGeom_GetPositionsVelocitiesAndAccelerations";
    uint64_t v50 = 195;
    uint64_t v51 = "BOOL pxrInternal__aapl__pxrReserved__::UsdGeom_GetPositionsVelocitiesAndAccelerations(const UsdAttribute &, co"
          "nst UsdAttribute &, const UsdAttribute &, UsdTimeCode, size_t, VtVec3fArray *, VtVec3fArray *, UsdTimeCode *, "
          "VtVec3fArray *, const UsdPrim &)";
    char v52 = 0;
    sub_216D0162C(a10, (int *)&v47);
    float v18 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v47);
    pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v48, (pxrInternal__aapl__pxrReserved__ *)"%s -- found [%zu] positions, but expected [%zu]", v19, v18, *a6, a5);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v47 + 1);
LABEL_6:
    sub_21697C414(&v47);
    return 0;
  }
  uint64_t v46 = 0;
  uint64_t v47 = 0;
  v45[1] = 1;
  v45[0] = 0;
  char v44 = 0;
  sub_2168F845C(a7);
  double v23 = *a8;
  v58[1] = off_26C74F110;
  sub_2168F8DBC(v58, (uint64_t)a7);
  BOOL v24 = sub_216EED550(1, (pxrInternal__aapl__pxrReserved__::VtValue *)v58, v17, v45, &v44, v55, v54, v56, 0.0, 0.0, v23);
  sub_2168EE084((uint64_t)v58);
  if (!v24)
  {
    if (!*a7 || v45[0])
    {
      if (!*a7 || !v45[0] || v44) {
        goto LABEL_16;
      }
      uint64_t v48 = "usdGeom/samplingUtils.cpp";
      uint64_t v49 = "UsdGeom_GetPositionsVelocitiesAndAccelerations";
      uint64_t v50 = 241;
      uint64_t v51 = "BOOL pxrInternal__aapl__pxrReserved__::UsdGeom_GetPositionsVelocitiesAndAccelerations(const UsdAttribute &, "
            "const UsdAttribute &, const UsdAttribute &, UsdTimeCode, size_t, VtVec3fArray *, VtVec3fArray *, UsdTimeCode"
            " *, VtVec3fArray *, const UsdPrim &)";
      char v52 = 0;
      sub_216D0162C(a10, (int *)&v43);
      uint64_t v27 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v43);
      pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v48, (pxrInternal__aapl__pxrReserved__ *)"%s -- found [%zu] velocities, but expected [%zu]", v28, v27, *a7, v17);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v43 + 1);
    }
    else
    {
      uint64_t v48 = "usdGeom/samplingUtils.cpp";
      uint64_t v49 = "UsdGeom_GetPositionsVelocitiesAndAccelerations";
      uint64_t v50 = 233;
      uint64_t v51 = "BOOL pxrInternal__aapl__pxrReserved__::UsdGeom_GetPositionsVelocitiesAndAccelerations(const UsdAttribute &, "
            "const UsdAttribute &, const UsdAttribute &, UsdTimeCode, size_t, VtVec3fArray *, VtVec3fArray *, UsdTimeCode"
            " *, VtVec3fArray *, const UsdPrim &)";
      char v52 = 0;
      sub_216D0162C(a10, (int *)&v43);
      unint64_t v25 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v43);
      pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v48, (pxrInternal__aapl__pxrReserved__ *)"%s -- velocity samples are not aligned with position samples", v26, v25);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v43 + 1);
    }
    sub_21697C414(&v43);
LABEL_16:
    sub_2168F845C(a7);
  }
  double v42 = 0.0;
  double v43 = 0.0;
  double v41 = 0.0;
  char v40 = 1;
  char v39 = 0;
  char v38 = 0;
  if (!*a7 || (sub_216EED3B8(a4, a2) & 1) == 0) {
    sub_2168F845C(a9);
  }
  double v29 = *a8;
  double v30 = v43;
  v57[1] = off_26C74F110;
  sub_2168F8DBC(v57, (uint64_t)a9);
  BOOL v31 = sub_216EED550(v40 != 0, (pxrInternal__aapl__pxrReserved__::VtValue *)v57, v17, &v39, &v38, 0.0, 0.0, v29, v42, v41, v30);
  sub_2168EE084((uint64_t)v57);
  if (v31) {
    return 1;
  }
  if (!*a9 || v39)
  {
    if (!*a9 || !v39 || v38) {
      goto LABEL_29;
    }
    uint64_t v48 = "usdGeom/samplingUtils.cpp";
    uint64_t v49 = "UsdGeom_GetPositionsVelocitiesAndAccelerations";
    uint64_t v50 = 290;
    uint64_t v51 = "BOOL pxrInternal__aapl__pxrReserved__::UsdGeom_GetPositionsVelocitiesAndAccelerations(const UsdAttribute &, co"
          "nst UsdAttribute &, const UsdAttribute &, UsdTimeCode, size_t, VtVec3fArray *, VtVec3fArray *, UsdTimeCode *, "
          "VtVec3fArray *, const UsdPrim &)";
    char v52 = 0;
    sub_216D0162C(a10, &v36);
    uint64_t v34 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v36);
    pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v48, (pxrInternal__aapl__pxrReserved__ *)"%s -- found [%zu] accelerations, but expected [%zu]", v35, v34, *a9, v17);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v37);
  }
  else
  {
    uint64_t v48 = "usdGeom/samplingUtils.cpp";
    uint64_t v49 = "UsdGeom_GetPositionsVelocitiesAndAccelerations";
    uint64_t v50 = 282;
    uint64_t v51 = "BOOL pxrInternal__aapl__pxrReserved__::UsdGeom_GetPositionsVelocitiesAndAccelerations(const UsdAttribute &, co"
          "nst UsdAttribute &, const UsdAttribute &, UsdTimeCode, size_t, VtVec3fArray *, VtVec3fArray *, UsdTimeCode *, "
          "VtVec3fArray *, const UsdPrim &)";
    char v52 = 0;
    sub_216D0162C(a10, &v36);
    __int16 v32 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v36);
    pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v48, (pxrInternal__aapl__pxrReserved__ *)"%s -- acceleration samples are not aligned with velocity samples", v33, v32);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v37);
  }
  sub_21697C414(&v36);
LABEL_29:
  sub_2168F845C(a9);
  return 1;
}

void sub_216EED338(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30,uint64_t a31,char a32)
{
  if (a2) {
    sub_21675DB74(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_216EED3B8(pxrInternal__aapl__pxrReserved__::UsdAttribute *this, double a2)
{
  v5[1] = a2;
  double v4 = 0.0;
  v5[0] = 0.0;
  BOOL v3 = 0;
  if (pxrInternal__aapl__pxrReserved__::UsdAttribute::GetBracketingTimeSamples(this, a2, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v5, &v4, &v3))
  {
    pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::VtArray<pxrInternal__aapl__pxrReserved__::GfVec3f>>();
  }
  return 0;
}

BOOL sub_216EED550(int a1, pxrInternal__aapl__pxrReserved__::VtValue *this, uint64_t a3, unsigned char *a4, unsigned char *a5, double a6, double a7, double a8, double a9, double a10, double a11)
{
  if (!a1 || vabdd_f64(a6, a9) >= 2.22044605e-16)
  {
    *a5 = 1;
LABEL_7:
    *a4 = 0;
    goto LABEL_8;
  }
  *a4 = 1;
  *a5 = 1;
  if (vabdd_f64(a7, a10) >= 2.22044605e-16 || vabdd_f64(a8, a11) >= 2.22044605e-16) {
    goto LABEL_7;
  }
LABEL_8:
  if (pxrInternal__aapl__pxrReserved__::VtValue::_GetNumElements(this) != a3) {
    *a5 = 0;
  }
  return *a4 && *a5 != 0;
}

uint64_t sub_216EED66C(pxrInternal__aapl__pxrReserved__::UsdAttribute *this, double a2)
{
  void v5[3] = *(double *)MEMORY[0x263EF8340];
  double v4 = 0.0;
  v5[0] = 0.0;
  BOOL v3 = 0;
  if (pxrInternal__aapl__pxrReserved__::UsdAttribute::GetBracketingTimeSamples(this, a2, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v5, &v4, &v3))
  {
    pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::VtArray<pxrInternal__aapl__pxrReserved__::GfQuatf>>();
  }
  return 0;
}

void sub_216EEDA5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,char a21,int a22,__int16 a23,char a24,char a25)
{
  if (a2) {
    sub_21675DB74(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_216EEDAB4(pxrInternal__aapl__pxrReserved__::UsdAttribute *this, double a2)
{
  void v5[3] = *(double *)MEMORY[0x263EF8340];
  double v4 = 0.0;
  v5[0] = 0.0;
  BOOL v3 = 0;
  if (pxrInternal__aapl__pxrReserved__::UsdAttribute::GetBracketingTimeSamples(this, a2, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v5, &v4, &v3))
  {
    pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::VtArray<pxrInternal__aapl__pxrReserved__::GfQuath>>();
  }
  return 0;
}

void sub_216EEDEA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,char a21,int a22,__int16 a23,char a24,char a25)
{
  if (a2) {
    sub_21675DB74(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeom_GetScales(pxrInternal__aapl__pxrReserved__::UsdAttribute *a1, uint64_t a2, void *a3, uint64_t a4, double a5)
{
  uint64_t v19 = 0;
  char v18 = 0;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v8 = sub_216EED3B8(a1, a5);
  if (v8 && *a3 != a2)
  {
    v14[0] = "usdGeom/samplingUtils.cpp";
    v14[1] = "UsdGeom_GetScales";
    void v14[2] = 473;
    v14[3] = "BOOL pxrInternal__aapl__pxrReserved__::UsdGeom_GetScales(const UsdAttribute &, const UsdTimeCode, size_t, V"
             "tVec3fArray *, const UsdPrim &)";
    char v15 = 0;
    sub_216D0162C(a4, &v12);
    Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v12);
    pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)v14, (pxrInternal__aapl__pxrReserved__ *)"%s -- found [%zu] scales, but expected [%zu]", v10, Text, *a3, a2);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v13);
    sub_21697C414(&v12);
  }
  return v8;
}

void sub_216EEDFDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

double pxrInternal__aapl__pxrReserved__::UsdGeom_CalculateTimeDelta(double a1, double a2, double a3)
{
  return (a1 - a2) / a3;
}

void sub_216EEE064()
{
  sub_216779094(v5, "USDGEOM_EXTENT");
  std::string __p = 0;
  uint64_t v3 = 0;
  uint64_t v4 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((uint64_t)&unk_26C76C2B8, 0, (uint64_t)v5, (uint64_t)&__p);
  if (SHIBYTE(v4) < 0) {
    operator delete(__p);
  }
  if (v6 < 0) {
    operator delete(v5[0]);
  }
  uint64_t v0 = sub_216EEE18C();
  pxrInternal__aapl__pxrReserved__::TfDebug::_RegisterDebugSymbolImpl(v0, "USDGEOM_EXTENT", "Reports when Boundable extents are computed dynamically because no cached authored attribute is present in the scene.");
  sub_216779094(v5, "USDGEOM_BBOX");
  std::string __p = 0;
  uint64_t v3 = 0;
  uint64_t v4 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((uint64_t)&unk_26C76C2B8, 1, (uint64_t)v5, (uint64_t)&__p);
  if (SHIBYTE(v4) < 0) {
    operator delete(__p);
  }
  if (v6 < 0) {
    operator delete(v5[0]);
  }
  uint64_t v1 = sub_216EEE18C();
  pxrInternal__aapl__pxrReserved__::TfDebug::_RegisterDebugSymbolImpl(v1 + 4, "USDGEOM_BBOX", "UsdGeom bounding box computation");
}

void sub_216EEE15C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_216EEE18C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26798CF10, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26798CF10))
  {
    uint64_t v1 = operator new(0xCuLL);
    v1[2] = 0;
    *(void *)uint64_t v1 = 0;
    qword_26798CF08 = (uint64_t)v1;
    __cxa_guard_release(&qword_26798CF10);
  }
  return qword_26798CF08;
}

void sub_216EEE1F4(_Unwind_Exception *a1)
{
}

pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *pxrInternal__aapl__pxrReserved__::UsdGeomTokensType::UsdGeomTokensType(pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *this)
{
  uint64_t v411 = *MEMORY[0x263EF8340];
  v209 = (uint64_t *)(pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this, "accelerations", 0) + 8);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(v209, "all", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 16, "angularVelocities", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 24, "axis", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 32, "basis", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 40, "bezier", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 48, "bilinear", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 56, "boundaries", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 64, "bounds", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 72, "box", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 80, "bspline", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 88, "cards", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 96, "catmullClark", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 104, "catmullRom", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 112, "clippingPlanes", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 120, "clippingRange", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 128, "closed", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 136, "constant", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 144, "cornerIndices", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 152, "cornerSharpnesses", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 160, "cornersOnly", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 168, "cornersPlus1", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 176, "cornersPlus2", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 184, "creaseIndices", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 192, "creaseLengths", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 200, "creaseSharpnesses", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 208, "cross", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 216, "cubic", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 224, "curveVertexCounts", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 232, "default", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 240, "doubleSided", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 248, "edge", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 256, "edgeAndCorner", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 264, "edgeOnly", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 272, "elementSize", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 280, "elementType", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 288, "exposure", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 296, "extent", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 304, "extentsHint", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 312, "face", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 320, "faceVarying", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 328, "faceVaryingLinearInterpolation", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 336, "faceVertexCounts", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 344, "faceVertexIndices", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 352, "familyName", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 360, "focalLength", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 368, "focusDistance", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 376, "fromTexture", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 384, "fStop", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 392, "guide", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 400, "guideVisibility", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 408, "height", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 416, "hermite", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 424, "holeIndices", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 432, "horizontalAperture", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 440, "horizontalApertureOffset", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 448, "ids", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 456, "inactiveIds", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 464, "indices", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 472, "inherited", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 480, "interpolateBoundary", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 488, "interpolation", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 496, "invisible", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 504, "invisibleIds", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 512, "knots", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 520, "left", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 528, "leftHanded", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 536, "length", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 544, "linear", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 552, "loop", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 560, "metersPerUnit", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 568, "model:applyDrawMode", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 576, "model:cardGeometry", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 584, "model:cardTextureXNeg", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 592, "model:cardTextureXPos", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 600, "model:cardTextureYNeg", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 608, "model:cardTextureYPos", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 616, "model:cardTextureZNeg", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 624, "model:cardTextureZPos", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 632, "model:drawMode", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 640, "model:drawModeColor", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 648, "mono", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 656, "motion:blurScale", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 664, "motion:nonlinearSampleCount", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 672, "motion:velocityScale", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 680, "none", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 688, "nonOverlapping", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 696, "nonperiodic", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 704, "normals", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 712, "open", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 720, "order", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 728, "orientation", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 736, "orientations", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 744, "orientationsf", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 752, "origin", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 760, "orthographic", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 768, "partition", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 776, "periodic", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 784, "perspective", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 792, "pinned", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 800, "pivot", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 808, "point", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 816, "points", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 824, "pointWeights", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 832, "positions", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 840, "power", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 848, "primvars:displayColor", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 856, "primvars:displayOpacity", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 864, "projection", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 872, "protoIndices", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 880, "prototypes", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 888, "proxy", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 896, "proxyPrim", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 904, "proxyVisibility", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 912, "purpose", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 920, "radius", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 928, "radiusBottom", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 936, "radiusTop", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 944, "ranges", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 952, "render", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 960, "renderVisibility", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 968, "right", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 976, "rightHanded", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 984, "scales", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 992, "shutter:close", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1000, "shutter:open", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1008, "size", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1016, "smooth", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1024, "stereoRole", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1032, "subdivisionScheme", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1040, "surfaceFaceVertexIndices", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1048, "tangents", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1056, "tetrahedron", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1064, "tetVertexIndices", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1072, "triangleSubdivisionRule", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1080, "trimCurve:counts", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1088, "trimCurve:knots", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1096, "trimCurve:orders", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1104, "trimCurve:points", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1112, "trimCurve:ranges", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1120, "trimCurve:vertexCounts", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1128, "type", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1136, "uForm", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1144, "uKnots", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1152, "unauthoredValuesIndex", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1160, "uniform", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1168, "unrestricted", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1176, "uOrder", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1184, "upAxis", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1192, "uRange", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1200, "uVertexCount", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1208, "varying", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1216, "velocities", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1224, "vertex", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1232, "verticalAperture", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1240, "verticalApertureOffset", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1248, "vForm", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1256, "visibility", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1264, "visible", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1272, "vKnots", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1280, "vOrder", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1288, "vRange", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1296, "vVertexCount", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1304, "width", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1312, "widths", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1320, "wrap", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1328, "X", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1336, "xformOpOrder", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1344, "Y", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1352, "Z", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1360, "BasisCurves", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1368, "Boundable", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1376, "Camera", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1384, "Capsule", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1392, "Capsule_1", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1400, "Cone", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1408, "Cube", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1416, "Curves", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1424, "Cylinder", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1432, "Cylinder_1", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1440, "GeomModelAPI", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1448, "GeomSubset", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1456, "Gprim", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1464, "HermiteCurves", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1472, "Imageable", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1480, "Mesh", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1488, "MotionAPI", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1496, "NurbsCurves", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1504, "NurbsPatch", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1512, "Plane", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1520, "PointBased", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1528, "PointInstancer", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1536, "Points", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1544, "PrimvarsAPI", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1552, "Scope", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1560, "Sphere", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1568, "TetMesh", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1576, "VisibilityAPI", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1584, "Xform", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1592, "Xformable", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 1600, "XformCommonAPI", 0);
  uint64_t v2 = *(void *)this;
  uint64_t v210 = v2;
  if ((v2 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v210 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v3 = *v209;
  uint64_t v211 = v3;
  if ((v3 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v3 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v211 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v4 = *((void *)this + 2);
  uint64_t v212 = v4;
  if ((v4 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v4 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v212 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v5 = *((void *)this + 3);
  uint64_t v213 = v5;
  if ((v5 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v5 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v213 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v6 = *((void *)this + 4);
  uint64_t v214 = v6;
  if ((v6 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v6 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v214 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v7 = *((void *)this + 5);
  uint64_t v215 = v7;
  if ((v7 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v7 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v215 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v8 = *((void *)this + 6);
  uint64_t v216 = v8;
  if ((v8 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v216 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v9 = *((void *)this + 7);
  uint64_t v217 = v9;
  if ((v9 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v9 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v217 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v10 = *((void *)this + 8);
  uint64_t v218 = v10;
  if ((v10 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v10 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v218 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v11 = *((void *)this + 9);
  uint64_t v219 = v11;
  if ((v11 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v11 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v219 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v12 = *((void *)this + 10);
  uint64_t v220 = v12;
  if ((v12 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v220 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v13 = *((void *)this + 11);
  uint64_t v221 = v13;
  if ((v13 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v13 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v221 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v14 = *((void *)this + 12);
  uint64_t v222 = v14;
  if ((v14 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v14 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v222 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v15 = *((void *)this + 13);
  uint64_t v223 = v15;
  if ((v15 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v15 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v223 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v16 = *((void *)this + 14);
  uint64_t v224 = v16;
  if ((v16 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v16 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v224 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v17 = *((void *)this + 15);
  uint64_t v225 = v17;
  if ((v17 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v17 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v225 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v18 = *((void *)this + 16);
  uint64_t v226 = v18;
  if ((v18 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v18 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v226 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v19 = *((void *)this + 17);
  uint64_t v227 = v19;
  if ((v19 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v19 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v227 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v20 = *((void *)this + 18);
  uint64_t v228 = v20;
  if ((v20 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v20 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v228 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v21 = *((void *)this + 19);
  uint64_t v229 = v21;
  if ((v21 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v21 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v229 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v22 = *((void *)this + 20);
  uint64_t v230 = v22;
  if ((v22 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v22 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v230 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v23 = *((void *)this + 21);
  uint64_t v231 = v23;
  if ((v23 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v23 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v231 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v24 = *((void *)this + 22);
  uint64_t v232 = v24;
  if ((v24 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v24 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v232 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v25 = *((void *)this + 23);
  uint64_t v233 = v25;
  if ((v25 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v25 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v233 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v26 = *((void *)this + 24);
  uint64_t v234 = v26;
  if ((v26 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v26 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v234 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v27 = *((void *)this + 25);
  uint64_t v235 = v27;
  if ((v27 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v27 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v235 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v28 = *((void *)this + 26);
  uint64_t v236 = v28;
  if ((v28 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v28 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v236 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v29 = *((void *)this + 27);
  uint64_t v237 = v29;
  if ((v29 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v29 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v237 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v30 = *((void *)this + 28);
  uint64_t v238 = v30;
  if ((v30 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v30 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v238 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v31 = *((void *)this + 29);
  uint64_t v239 = v31;
  if ((v31 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v31 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v239 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v32 = *((void *)this + 30);
  uint64_t v240 = v32;
  if ((v32 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v32 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v240 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v33 = *((void *)this + 31);
  uint64_t v241 = v33;
  if ((v33 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v33 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v241 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v34 = *((void *)this + 32);
  uint64_t v242 = v34;
  if ((v34 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v34 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v242 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v35 = *((void *)this + 33);
  uint64_t v243 = v35;
  if ((v35 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v35 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v243 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v36 = *((void *)this + 34);
  uint64_t v244 = v36;
  if ((v36 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v36 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v244 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v37 = *((void *)this + 35);
  uint64_t v245 = v37;
  if ((v37 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v37 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v245 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v38 = *((void *)this + 36);
  uint64_t v246 = v38;
  if ((v38 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v38 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v246 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v39 = *((void *)this + 37);
  uint64_t v247 = v39;
  if ((v39 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v39 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v247 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v40 = *((void *)this + 38);
  uint64_t v248 = v40;
  if ((v40 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v40 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v248 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v41 = *((void *)this + 39);
  uint64_t v249 = v41;
  if ((v41 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v41 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v249 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v42 = *((void *)this + 40);
  uint64_t v250 = v42;
  if ((v42 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v42 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v250 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v43 = *((void *)this + 41);
  uint64_t v251 = v43;
  if ((v43 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v43 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v251 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v44 = *((void *)this + 42);
  uint64_t v252 = v44;
  if ((v44 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v44 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v252 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v45 = *((void *)this + 43);
  uint64_t v253 = v45;
  if ((v45 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v45 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v253 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v46 = *((void *)this + 44);
  uint64_t v254 = v46;
  if ((v46 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v46 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v254 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v47 = *((void *)this + 45);
  uint64_t v255 = v47;
  if ((v47 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v47 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v255 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v48 = *((void *)this + 46);
  uint64_t v256 = v48;
  if ((v48 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v48 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v256 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v49 = *((void *)this + 47);
  uint64_t v257 = v49;
  if ((v49 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v49 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v257 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v50 = *((void *)this + 48);
  uint64_t v258 = v50;
  if ((v50 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v50 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v258 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v51 = *((void *)this + 49);
  uint64_t v259 = v51;
  if ((v51 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v51 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v259 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v52 = *((void *)this + 50);
  uint64_t v260 = v52;
  if ((v52 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v52 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v260 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v53 = *((void *)this + 51);
  uint64_t v261 = v53;
  if ((v53 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v53 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v261 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v54 = *((void *)this + 52);
  uint64_t v262 = v54;
  if ((v54 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v54 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v262 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v55 = *((void *)this + 53);
  uint64_t v263 = v55;
  if ((v55 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v55 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v263 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v56 = *((void *)this + 54);
  uint64_t v264 = v56;
  if ((v56 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v56 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v264 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v57 = *((void *)this + 55);
  uint64_t v265 = v57;
  if ((v57 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v57 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v265 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v58 = *((void *)this + 56);
  uint64_t v266 = v58;
  if ((v58 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v58 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v266 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v59 = *((void *)this + 57);
  uint64_t v267 = v59;
  if ((v59 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v59 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v267 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v60 = *((void *)this + 58);
  uint64_t v268 = v60;
  if ((v60 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v60 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v268 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v61 = *((void *)this + 59);
  uint64_t v269 = v61;
  if ((v61 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v61 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v269 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v62 = *((void *)this + 60);
  uint64_t v270 = v62;
  if ((v62 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v62 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v270 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v63 = *((void *)this + 61);
  uint64_t v271 = v63;
  if ((v63 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v63 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v271 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v64 = *((void *)this + 62);
  uint64_t v272 = v64;
  if ((v64 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v64 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v272 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v65 = *((void *)this + 63);
  uint64_t v273 = v65;
  if ((v65 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v65 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v273 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v66 = *((void *)this + 64);
  uint64_t v274 = v66;
  if ((v66 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v66 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v274 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v67 = *((void *)this + 65);
  uint64_t v275 = v67;
  if ((v67 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v67 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v275 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v68 = *((void *)this + 66);
  uint64_t v276 = v68;
  if ((v68 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v68 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v276 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v69 = *((void *)this + 67);
  uint64_t v277 = v69;
  if ((v69 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v69 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v277 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v70 = *((void *)this + 68);
  uint64_t v278 = v70;
  if ((v70 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v70 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v278 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v71 = *((void *)this + 69);
  uint64_t v279 = v71;
  if ((v71 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v71 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v279 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v72 = *((void *)this + 70);
  uint64_t v280 = v72;
  if ((v72 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v72 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v280 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v73 = *((void *)this + 71);
  uint64_t v281 = v73;
  if ((v73 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v73 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v281 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v74 = *((void *)this + 72);
  uint64_t v282 = v74;
  if ((v74 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v74 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v282 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v75 = *((void *)this + 73);
  uint64_t v283 = v75;
  if ((v75 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v75 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v283 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v76 = *((void *)this + 74);
  uint64_t v284 = v76;
  if ((v76 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v76 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v284 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v77 = *((void *)this + 75);
  uint64_t v285 = v77;
  if ((v77 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v77 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v285 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v78 = *((void *)this + 76);
  uint64_t v286 = v78;
  if ((v78 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v78 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v286 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v79 = *((void *)this + 77);
  uint64_t v287 = v79;
  if ((v79 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v79 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v287 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v80 = *((void *)this + 78);
  uint64_t v288 = v80;
  if ((v80 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v80 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v288 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v81 = *((void *)this + 79);
  uint64_t v289 = v81;
  if ((v81 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v81 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v289 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v82 = *((void *)this + 80);
  uint64_t v290 = v82;
  if ((v82 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v82 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v290 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v83 = *((void *)this + 81);
  uint64_t v291 = v83;
  if ((v83 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v83 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v291 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v84 = *((void *)this + 82);
  uint64_t v292 = v84;
  if ((v84 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v84 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v292 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v85 = *((void *)this + 83);
  uint64_t v293 = v85;
  if ((v85 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v85 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v293 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v86 = *((void *)this + 84);
  uint64_t v294 = v86;
  if ((v86 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v86 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v294 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v87 = *((void *)this + 85);
  uint64_t v295 = v87;
  if ((v87 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v87 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v295 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v88 = *((void *)this + 86);
  uint64_t v296 = v88;
  if ((v88 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v88 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v296 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v89 = *((void *)this + 87);
  uint64_t v297 = v89;
  if ((v89 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v89 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v297 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v90 = *((void *)this + 88);
  uint64_t v298 = v90;
  if ((v90 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v90 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v298 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v91 = *((void *)this + 89);
  uint64_t v299 = v91;
  if ((v91 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v91 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v299 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v92 = *((void *)this + 90);
  uint64_t v300 = v92;
  if ((v92 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v92 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v300 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v93 = *((void *)this + 91);
  uint64_t v301 = v93;
  if ((v93 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v93 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v301 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v94 = *((void *)this + 92);
  uint64_t v302 = v94;
  if ((v94 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v94 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v302 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v95 = *((void *)this + 93);
  uint64_t v303 = v95;
  if ((v95 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v95 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v303 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v96 = *((void *)this + 94);
  uint64_t v304 = v96;
  if ((v96 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v96 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v304 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v97 = *((void *)this + 95);
  uint64_t v305 = v97;
  if ((v97 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v97 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v305 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v98 = *((void *)this + 96);
  uint64_t v306 = v98;
  if ((v98 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v98 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v306 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v99 = *((void *)this + 97);
  uint64_t v307 = v99;
  if ((v99 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v99 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v307 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v100 = *((void *)this + 98);
  uint64_t v308 = v100;
  if ((v100 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v100 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v308 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v101 = *((void *)this + 99);
  uint64_t v309 = v101;
  if ((v101 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v101 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v309 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v102 = *((void *)this + 100);
  uint64_t v310 = v102;
  if ((v102 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v102 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v310 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v103 = *((void *)this + 101);
  uint64_t v311 = v103;
  if ((v103 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v103 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v311 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v104 = *((void *)this + 102);
  uint64_t v312 = v104;
  if ((v104 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v104 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v312 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v105 = *((void *)this + 103);
  uint64_t v313 = v105;
  if ((v105 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v105 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v313 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v106 = *((void *)this + 104);
  uint64_t v314 = v106;
  if ((v106 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v106 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v314 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v107 = *((void *)this + 105);
  uint64_t v315 = v107;
  if ((v107 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v107 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v315 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v108 = *((void *)this + 106);
  uint64_t v316 = v108;
  if ((v108 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v108 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v316 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v109 = *((void *)this + 107);
  uint64_t v317 = v109;
  if ((v109 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v109 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v317 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v110 = *((void *)this + 108);
  uint64_t v318 = v110;
  if ((v110 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v110 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v318 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v111 = *((void *)this + 109);
  uint64_t v319 = v111;
  if ((v111 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v111 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v319 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v112 = *((void *)this + 110);
  uint64_t v320 = v112;
  if ((v112 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v112 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v320 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v113 = *((void *)this + 111);
  uint64_t v321 = v113;
  if ((v113 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v113 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v321 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v114 = *((void *)this + 112);
  uint64_t v322 = v114;
  if ((v114 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v114 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v322 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v115 = *((void *)this + 113);
  uint64_t v323 = v115;
  if ((v115 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v115 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v323 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v116 = *((void *)this + 114);
  uint64_t v324 = v116;
  if ((v116 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v116 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v324 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v117 = *((void *)this + 115);
  uint64_t v325 = v117;
  if ((v117 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v117 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v325 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v118 = *((void *)this + 116);
  uint64_t v326 = v118;
  if ((v118 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v118 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v326 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v119 = *((void *)this + 117);
  uint64_t v327 = v119;
  if ((v119 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v119 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v327 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v120 = *((void *)this + 118);
  uint64_t v328 = v120;
  if ((v120 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v120 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v328 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v121 = *((void *)this + 119);
  uint64_t v329 = v121;
  if ((v121 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v121 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v329 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v122 = *((void *)this + 120);
  uint64_t v330 = v122;
  if ((v122 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v122 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v330 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v123 = *((void *)this + 121);
  uint64_t v331 = v123;
  if ((v123 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v123 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v331 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v124 = *((void *)this + 122);
  uint64_t v332 = v124;
  if ((v124 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v124 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v332 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v125 = *((void *)this + 123);
  uint64_t v333 = v125;
  if ((v125 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v125 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v333 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v126 = *((void *)this + 124);
  uint64_t v334 = v126;
  if ((v126 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v126 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v334 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v127 = *((void *)this + 125);
  uint64_t v335 = v127;
  if ((v127 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v127 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v335 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v128 = *((void *)this + 126);
  uint64_t v336 = v128;
  if ((v128 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v128 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v336 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v129 = *((void *)this + 127);
  uint64_t v337 = v129;
  if ((v129 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v129 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v337 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v130 = *((void *)this + 128);
  uint64_t v338 = v130;
  if ((v130 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v130 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v338 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v131 = *((void *)this + 129);
  uint64_t v339 = v131;
  if ((v131 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v131 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v339 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v132 = *((void *)this + 130);
  uint64_t v340 = v132;
  if ((v132 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v132 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v340 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v133 = *((void *)this + 131);
  uint64_t v341 = v133;
  if ((v133 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v133 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v341 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v134 = *((void *)this + 132);
  uint64_t v342 = v134;
  if ((v134 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v134 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v342 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v135 = *((void *)this + 133);
  uint64_t v343 = v135;
  if ((v135 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v135 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v343 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v136 = *((void *)this + 134);
  uint64_t v344 = v136;
  if ((v136 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v136 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v344 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v137 = *((void *)this + 135);
  uint64_t v345 = v137;
  if ((v137 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v137 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v345 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v138 = *((void *)this + 136);
  uint64_t v346 = v138;
  if ((v138 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v138 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v346 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v139 = *((void *)this + 137);
  uint64_t v347 = v139;
  if ((v139 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v139 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v347 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v140 = *((void *)this + 138);
  uint64_t v348 = v140;
  if ((v140 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v140 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v348 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v141 = *((void *)this + 139);
  uint64_t v349 = v141;
  if ((v141 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v141 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v349 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v142 = *((void *)this + 140);
  uint64_t v350 = v142;
  if ((v142 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v142 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v350 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v143 = *((void *)this + 141);
  uint64_t v351 = v143;
  if ((v143 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v143 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v351 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v144 = *((void *)this + 142);
  uint64_t v352 = v144;
  if ((v144 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v144 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v352 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v145 = *((void *)this + 143);
  uint64_t v353 = v145;
  if ((v145 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v145 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v353 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v146 = *((void *)this + 144);
  uint64_t v354 = v146;
  if ((v146 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v146 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v354 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v147 = *((void *)this + 145);
  uint64_t v355 = v147;
  if ((v147 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v147 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v355 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v148 = *((void *)this + 146);
  uint64_t v356 = v148;
  if ((v148 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v148 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v356 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v149 = *((void *)this + 147);
  uint64_t v357 = v149;
  if ((v149 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v149 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v357 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v150 = *((void *)this + 148);
  uint64_t v358 = v150;
  if ((v150 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v150 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v358 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v151 = *((void *)this + 149);
  uint64_t v359 = v151;
  if ((v151 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v151 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v359 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v152 = *((void *)this + 150);
  uint64_t v360 = v152;
  if ((v152 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v152 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v360 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v153 = *((void *)this + 151);
  uint64_t v361 = v153;
  if ((v153 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v153 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v361 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v154 = *((void *)this + 152);
  uint64_t v362 = v154;
  if ((v154 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v154 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v362 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v155 = *((void *)this + 153);
  uint64_t v363 = v155;
  if ((v155 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v155 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v363 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v156 = *((void *)this + 154);
  uint64_t v364 = v156;
  if ((v156 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v156 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v364 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v157 = *((void *)this + 155);
  uint64_t v365 = v157;
  if ((v157 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v157 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v365 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v158 = *((void *)this + 156);
  uint64_t v366 = v158;
  if ((v158 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v158 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v366 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v159 = *((void *)this + 157);
  uint64_t v367 = v159;
  if ((v159 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v159 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v367 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v160 = *((void *)this + 158);
  uint64_t v368 = v160;
  if ((v160 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v160 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v368 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v161 = *((void *)this + 159);
  uint64_t v369 = v161;
  if ((v161 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v161 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v369 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v162 = *((void *)this + 160);
  uint64_t v370 = v162;
  if ((v162 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v162 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v370 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v163 = *((void *)this + 161);
  uint64_t v371 = v163;
  if ((v163 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v163 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v371 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v164 = *((void *)this + 162);
  uint64_t v372 = v164;
  if ((v164 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v164 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v372 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v165 = *((void *)this + 163);
  uint64_t v373 = v165;
  if ((v165 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v165 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v373 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v166 = *((void *)this + 164);
  uint64_t v374 = v166;
  if ((v166 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v166 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v374 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v167 = *((void *)this + 165);
  uint64_t v375 = v167;
  if ((v167 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v167 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v375 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v168 = *((void *)this + 166);
  uint64_t v376 = v168;
  if ((v168 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v168 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v376 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v169 = *((void *)this + 167);
  uint64_t v377 = v169;
  if ((v169 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v169 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v377 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v170 = *((void *)this + 168);
  uint64_t v378 = v170;
  if ((v170 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v170 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v378 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v171 = *((void *)this + 169);
  uint64_t v379 = v171;
  if ((v171 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v171 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v379 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v172 = *((void *)this + 170);
  uint64_t v380 = v172;
  if ((v172 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v172 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v380 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v173 = *((void *)this + 171);
  uint64_t v381 = v173;
  if ((v173 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v173 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v381 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v174 = *((void *)this + 172);
  uint64_t v382 = v174;
  if ((v174 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v174 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v382 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v175 = *((void *)this + 173);
  uint64_t v383 = v175;
  if ((v175 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v175 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v383 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v176 = *((void *)this + 174);
  uint64_t v384 = v176;
  if ((v176 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v176 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v384 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v177 = *((void *)this + 175);
  uint64_t v385 = v177;
  if ((v177 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v177 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v385 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v178 = *((void *)this + 176);
  uint64_t v386 = v178;
  if ((v178 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v178 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v386 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v179 = *((void *)this + 177);
  uint64_t v387 = v179;
  if ((v179 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v179 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v387 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v180 = *((void *)this + 178);
  uint64_t v388 = v180;
  if ((v180 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v180 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v388 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v181 = *((void *)this + 179);
  uint64_t v389 = v181;
  if ((v181 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v181 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v389 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v182 = *((void *)this + 180);
  uint64_t v390 = v182;
  if ((v182 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v182 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v390 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v183 = *((void *)this + 181);
  uint64_t v391 = v183;
  if ((v183 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v183 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v391 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v184 = *((void *)this + 182);
  uint64_t v392 = v184;
  if ((v184 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v184 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v392 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v185 = *((void *)this + 183);
  uint64_t v393 = v185;
  if ((v185 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v185 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v393 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v186 = *((void *)this + 184);
  uint64_t v394 = v186;
  if ((v186 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v186 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v394 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v187 = *((void *)this + 185);
  uint64_t v395 = v187;
  if ((v187 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v187 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v395 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v188 = *((void *)this + 186);
  uint64_t v396 = v188;
  if ((v188 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v188 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v396 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v189 = *((void *)this + 187);
  uint64_t v397 = v189;
  if ((v189 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v189 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v397 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v190 = *((void *)this + 188);
  uint64_t v398 = v190;
  if ((v190 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v190 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v398 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v191 = *((void *)this + 189);
  uint64_t v399 = v191;
  if ((v191 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v191 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v399 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v192 = *((void *)this + 190);
  uint64_t v400 = v192;
  if ((v192 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v192 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v400 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v193 = *((void *)this + 191);
  uint64_t v401 = v193;
  if ((v193 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v193 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v401 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v194 = *((void *)this + 192);
  uint64_t v402 = v194;
  if ((v194 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v194 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v402 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v195 = *((void *)this + 193);
  uint64_t v403 = v195;
  if ((v195 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v195 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v403 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v196 = *((void *)this + 194);
  uint64_t v404 = v196;
  if ((v196 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v196 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v404 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v197 = *((void *)this + 195);
  uint64_t v405 = v197;
  if ((v197 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v197 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v405 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v198 = *((void *)this + 196);
  uint64_t v406 = v198;
  if ((v198 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v198 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v406 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v199 = *((void *)this + 197);
  uint64_t v407 = v199;
  if ((v199 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v199 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v407 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v200 = *((void *)this + 198);
  uint64_t v408 = v200;
  if ((v200 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v200 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v408 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v201 = *((void *)this + 199);
  uint64_t v409 = v201;
  if ((v201 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v201 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v409 &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v202 = *((void *)this + 200);
  uint64_t v410 = v202;
  if ((v202 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v202 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v410 &= 0xFFFFFFFFFFFFFFF8;
  }
  *((void *)this + 201) = 0;
  *((void *)this + 202) = 0;
  *((void *)this + 203) = 0;
  v203 = (char *)operator new(0x648uLL);
  uint64_t v204 = 0;
  *((void *)this + 201) = v203;
  *((void *)this + 202) = v203;
  *((void *)this + 203) = v203 + 1608;
  do
  {
    uint64_t v205 = *(uint64_t *)((char *)&v210 + v204);
    *(void *)&v203[v204] = v205;
    if ((v205 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v205 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      *(void *)&v203[v204] &= 0xFFFFFFFFFFFFFFF8;
    }
    v204 += 8;
  }
  while (v204 != 1608);
  *((void *)this + 202) = v203 + 1608;
  for (uint64_t i = 1600; i != -8; i -= 8)
  {
    uint64_t v207 = *(uint64_t *)((char *)&v210 + i);
    if ((v207 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v207 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  return this;
}

void sub_216EF1B7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _Unwind_Exception *exception_objecta, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17, void *a18, void *a19, void *a20,void *a21,void *a22,void *a23,void *a24,void *a25,void *a26,void *a27,void *a28,void *a29,void *a30,void *a31,void *a32,void *a33,void *a34,void *a35,void *a36,void *a37,void *a38,void *a39,void *a40,void *a41,void *a42,void *a43,void *a44,void *a45,void *a46,void *a47,void *a48,void *a49,void *a50,void *a51,void *a52,void *a53,void *a54,void *a55,void *a56,void *a57,void *a58,void *a59,void *a60,void *a61,void *a62,void *a63)
{
  sub_216889A04((void ***)&STACK[0x608]);
  uint64_t v82 = 1600;
  while (1)
  {
    uint64_t v83 = *(unint64_t *)((char *)&STACK[0x618] + v82);
    if ((v83 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v83 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    v82 -= 8;
    if (v82 == -8)
    {
      if ((*v74 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*v74 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*v73 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*v73 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*v81 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*v81 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*v80 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*v80 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*v79 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*v79 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*v78 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*v78 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*v77 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*v77 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*v76 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*v76 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*v75 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*v75 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a11 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a11 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a12 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a13 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a13 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a14 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a14 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a15 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a15 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a16 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a16 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a17 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a17 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a18 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a18 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a19 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a19 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a20 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a20 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a21 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a21 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a22 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a22 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a23 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a23 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a24 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a24 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a25 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a25 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a26 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a26 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a27 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a27 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a28 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a28 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a29 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a29 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a30 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a30 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a31 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a31 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a32 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a32 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a33 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a33 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a34 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a34 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a35 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a35 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a36 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a36 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a37 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a37 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a38 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a38 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a39 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a39 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a40 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a40 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a41 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a41 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a42 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a42 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a43 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a43 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a44 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a44 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a45 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a45 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a46 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a46 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a47 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a47 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a48 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a48 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a49 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a49 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a50 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a50 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a51 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a51 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a52 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a52 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a53 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a53 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a54 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a54 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a55 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a55 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a56 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a56 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a57 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a57 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a58 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a58 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a59 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a59 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a60 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a60 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a61 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a61 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a62 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a62 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a63 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a63 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a64 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a64 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a65 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a65 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a66 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a66 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a67 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a67 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a68 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a68 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a69 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a69 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a70 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a70 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a71 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a71 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*a72 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*a72 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v84 = *(void *)STACK[0x200];
      if ((v84 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v84 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v85 = *(void *)STACK[0x208];
      if ((v85 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v85 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v86 = *(void *)STACK[0x210];
      if ((v86 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v86 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v87 = *(void *)STACK[0x218];
      if ((v87 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v87 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v88 = *(void *)STACK[0x220];
      if ((v88 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v88 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v89 = *(void *)STACK[0x228];
      if ((v89 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v89 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v90 = *(void *)STACK[0x230];
      if ((v90 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v90 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v91 = *(void *)STACK[0x238];
      if ((v91 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v91 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v92 = *(void *)STACK[0x240];
      if ((v92 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v92 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v93 = *(void *)STACK[0x248];
      if ((v93 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v93 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v94 = *(void *)STACK[0x250];
      if ((v94 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v94 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v95 = *(void *)STACK[0x258];
      if ((v95 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v95 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v96 = *(void *)STACK[0x260];
      if ((v96 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v96 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v97 = *(void *)STACK[0x268];
      if ((v97 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v97 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v98 = *(void *)STACK[0x270];
      if ((v98 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v98 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v99 = *(void *)STACK[0x278];
      if ((v99 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v99 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v100 = *(void *)STACK[0x280];
      if ((v100 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v100 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v101 = *(void *)STACK[0x288];
      if ((v101 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v101 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v102 = *(void *)STACK[0x290];
      if ((v102 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v102 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v103 = *(void *)STACK[0x298];
      if ((v103 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v103 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v104 = *(void *)STACK[0x2A0];
      if ((v104 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v104 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v105 = *(void *)STACK[0x2A8];
      if ((v105 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v105 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v106 = *(void *)STACK[0x2B0];
      if ((v106 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v106 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v107 = *(void *)STACK[0x2B8];
      if ((v107 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v107 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v108 = *(void *)STACK[0x2C0];
      if ((v108 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v108 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v109 = *(void *)STACK[0x2C8];
      if ((v109 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v109 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v110 = *(void *)STACK[0x2D0];
      if ((v110 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v110 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v111 = *(void *)STACK[0x2D8];
      if ((v111 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v111 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v112 = *(void *)STACK[0x2E0];
      if ((v112 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v112 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v113 = *(void *)STACK[0x2E8];
      if ((v113 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v113 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v114 = *(void *)STACK[0x2F0];
      if ((v114 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v114 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v115 = *(void *)STACK[0x2F8];
      if ((v115 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v115 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v116 = *(void *)STACK[0x300];
      if ((v116 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v116 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v117 = *(void *)STACK[0x308];
      if ((v117 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v117 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v118 = *(void *)STACK[0x310];
      if ((v118 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v118 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v119 = *(void *)STACK[0x318];
      if ((v119 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v119 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v120 = *(void *)STACK[0x320];
      if ((v120 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v120 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v121 = *(void *)STACK[0x328];
      if ((v121 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v121 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v122 = *(void *)STACK[0x330];
      if ((v122 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v122 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v123 = *(void *)STACK[0x338];
      if ((v123 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v123 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v124 = *(void *)STACK[0x340];
      if ((v124 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v124 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v125 = *(void *)STACK[0x348];
      if ((v125 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v125 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v126 = *(void *)STACK[0x350];
      if ((v126 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v126 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v127 = *(void *)STACK[0x358];
      if ((v127 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v127 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v128 = *(void *)STACK[0x360];
      if ((v128 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v128 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v129 = *(void *)STACK[0x368];
      if ((v129 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v129 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v130 = *(void *)STACK[0x370];
      if ((v130 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v130 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v131 = *(void *)STACK[0x378];
      if ((v131 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v131 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v132 = *(void *)STACK[0x380];
      if ((v132 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v132 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v133 = *(void *)STACK[0x388];
      if ((v133 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v133 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v134 = *(void *)STACK[0x390];
      if ((v134 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v134 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v135 = *(void *)STACK[0x398];
      if ((v135 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v135 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v136 = *(void *)STACK[0x3A0];
      if ((v136 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v136 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v137 = *(void *)STACK[0x3A8];
      if ((v137 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v137 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v138 = *(void *)STACK[0x3B0];
      if ((v138 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v138 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v139 = *(void *)STACK[0x3B8];
      if ((v139 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v139 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v140 = *(void *)STACK[0x3C0];
      if ((v140 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v140 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v141 = *(void *)STACK[0x3C8];
      if ((v141 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v141 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v142 = *(void *)STACK[0x3D0];
      if ((v142 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v142 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v143 = *(void *)STACK[0x3D8];
      if ((v143 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v143 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v144 = *(void *)STACK[0x3E0];
      if ((v144 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v144 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v145 = *(void *)STACK[0x3E8];
      if ((v145 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v145 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v146 = *(void *)STACK[0x3F0];
      if ((v146 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v146 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v147 = *(void *)STACK[0x3F8];
      if ((v147 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v147 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v148 = *(void *)STACK[0x400];
      if ((v148 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v148 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v149 = *(void *)STACK[0x408];
      if ((v149 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v149 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v150 = *(void *)STACK[0x410];
      if ((v150 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v150 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v151 = *(void *)STACK[0x418];
      if ((v151 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v151 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v152 = *(void *)STACK[0x420];
      if ((v152 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v152 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v153 = *(void *)STACK[0x428];
      if ((v153 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v153 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v154 = *(void *)STACK[0x430];
      if ((v154 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v154 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v155 = *(void *)STACK[0x438];
      if ((v155 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v155 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v156 = *(void *)STACK[0x440];
      if ((v156 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v156 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v157 = *(void *)STACK[0x448];
      if ((v157 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v157 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v158 = *(void *)STACK[0x450];
      if ((v158 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v158 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v159 = *(void *)STACK[0x458];
      if ((v159 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v159 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v160 = *(void *)STACK[0x460];
      if ((v160 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v160 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v161 = *(void *)STACK[0x468];
      if ((v161 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v161 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v162 = *(void *)STACK[0x470];
      if ((v162 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v162 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v163 = *(void *)STACK[0x478];
      if ((v163 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v163 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v164 = *(void *)STACK[0x480];
      if ((v164 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v164 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v165 = *(void *)STACK[0x488];
      if ((v165 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v165 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v166 = *(void *)STACK[0x490];
      if ((v166 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v166 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v167 = *(void *)STACK[0x498];
      if ((v167 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v167 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v168 = *(void *)STACK[0x4A0];
      if ((v168 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v168 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v169 = *(void *)STACK[0x4A8];
      if ((v169 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v169 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v170 = *(void *)STACK[0x4B0];
      if ((v170 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v170 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v171 = *(void *)STACK[0x4B8];
      if ((v171 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v171 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v172 = *(void *)STACK[0x4C0];
      if ((v172 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v172 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v173 = *(void *)STACK[0x4C8];
      if ((v173 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v173 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v174 = *(void *)STACK[0x4D0];
      if ((v174 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v174 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v175 = *(void *)STACK[0x4D8];
      if ((v175 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v175 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v176 = *(void *)STACK[0x4E0];
      if ((v176 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v176 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v177 = *(void *)STACK[0x4E8];
      if ((v177 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v177 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v178 = *(void *)STACK[0x4F0];
      if ((v178 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v178 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v179 = *(void *)STACK[0x4F8];
      if ((v179 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v179 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v180 = *(void *)STACK[0x500];
      if ((v180 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v180 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v181 = *(void *)STACK[0x508];
      if ((v181 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v181 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v182 = *(void *)STACK[0x510];
      if ((v182 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v182 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v183 = *(void *)STACK[0x518];
      if ((v183 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v183 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v184 = *(void *)STACK[0x520];
      if ((v184 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v184 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v185 = *(void *)STACK[0x528];
      if ((v185 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v185 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v186 = *(void *)STACK[0x530];
      if ((v186 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v186 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v187 = *(void *)STACK[0x538];
      if ((v187 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v187 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v188 = *(void *)STACK[0x540];
      if ((v188 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v188 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v189 = *(void *)STACK[0x548];
      if ((v189 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v189 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v190 = *(void *)STACK[0x550];
      if ((v190 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v190 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v191 = *(void *)STACK[0x558];
      if ((v191 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v191 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v192 = *(void *)STACK[0x560];
      if ((v192 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v192 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v193 = *(void *)STACK[0x568];
      if ((v193 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v193 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v194 = *(void *)STACK[0x570];
      if ((v194 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v194 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v195 = *(void *)STACK[0x578];
      if ((v195 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v195 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v196 = *(void *)STACK[0x580];
      if ((v196 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v196 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v197 = *(void *)STACK[0x588];
      if ((v197 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v197 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v198 = *(void *)STACK[0x590];
      if ((v198 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v198 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v199 = *(void *)STACK[0x598];
      if ((v199 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v199 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v200 = *(void *)STACK[0x5A0];
      if ((v200 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v200 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v201 = *(void *)STACK[0x5A8];
      if ((v201 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v201 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v202 = *(void *)STACK[0x5B0];
      if ((v202 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v202 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v203 = *(void *)STACK[0x5B8];
      if ((v203 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v203 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v204 = *(void *)STACK[0x5C0];
      if ((v204 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v204 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v205 = *(void *)STACK[0x5C8];
      if ((v205 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v205 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v206 = *(void *)STACK[0x5D0];
      if ((v206 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v206 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v207 = *(void *)STACK[0x5D8];
      if ((v207 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v207 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v208 = *(void *)STACK[0x5E0];
      if ((v208 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v208 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v209 = *(void *)STACK[0x5E8];
      if ((v209 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v209 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v210 = *(void *)STACK[0x5F0];
      if ((v210 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v210 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v211 = *(void *)STACK[0x5F8];
      if ((v211 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v211 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v212 = *(void *)STACK[0x600];
      if ((v212 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v212 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*v72 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*v72 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      _Unwind_Resume(a1);
    }
  }
}

void sub_216EF31D0()
{
}

void sub_216EF31D8()
{
}

void sub_216EF31E0()
{
}

void sub_216EF31E8()
{
}

void sub_216EF31F0()
{
}

void sub_216EF31F8()
{
}

void sub_216EF3200()
{
}

void sub_216EF3208()
{
}

void sub_216EF3210()
{
}

void sub_216EF3218()
{
}

void sub_216EF3220()
{
}

void sub_216EF3228()
{
}

void sub_216EF3230()
{
}

void sub_216EF3238()
{
}

void sub_216EF3240()
{
}

void sub_216EF3248()
{
}

void sub_216EF3250()
{
}

void sub_216EF3258()
{
}

void sub_216EF3260()
{
}

void sub_216EF3268()
{
}

void sub_216EF3270()
{
}

void sub_216EF3278()
{
}

void sub_216EF3280()
{
}

void sub_216EF3288()
{
}

void sub_216EF3290()
{
}

void sub_216EF3298()
{
}

void sub_216EF32A0()
{
}

void sub_216EF32A8()
{
}

void sub_216EF32B0()
{
}

void sub_216EF32B8()
{
}

void sub_216EF32C0()
{
}

void sub_216EF32C8()
{
}

void sub_216EF32D0()
{
}

void sub_216EF32D8()
{
}

void sub_216EF32E0()
{
}

void sub_216EF32E8()
{
}

void sub_216EF32F0()
{
}

void sub_216EF32F8()
{
}

void sub_216EF3300()
{
}

void sub_216EF3308()
{
}

void sub_216EF3310()
{
}

void sub_216EF3318()
{
}

void sub_216EF3320()
{
}

void sub_216EF3328()
{
}

void sub_216EF3330()
{
}

void sub_216EF3338()
{
}

void sub_216EF3340()
{
}

void sub_216EF3348()
{
}

void sub_216EF3350()
{
}

void sub_216EF3358()
{
}

void sub_216EF3360()
{
}

void sub_216EF3368()
{
}

void sub_216EF3370()
{
}

void sub_216EF3378()
{
}

void sub_216EF3380()
{
}

void sub_216EF3388()
{
}

void sub_216EF3390()
{
}

void sub_216EF3398()
{
}

void sub_216EF33A0()
{
}

void sub_216EF33A8()
{
}

void sub_216EF33B0()
{
}

void sub_216EF33B8()
{
}

void sub_216EF33C0()
{
}

void sub_216EF33C8()
{
}

void sub_216EF33D0()
{
}

void sub_216EF33D8()
{
}

void sub_216EF33E0()
{
}

void sub_216EF33E8()
{
}

void sub_216EF33F0()
{
}

void sub_216EF33F8()
{
}

void sub_216EF3400()
{
}

void sub_216EF3408()
{
}

void sub_216EF3410()
{
}

void sub_216EF3418()
{
}

void sub_216EF3420()
{
}

void sub_216EF3428()
{
}

void sub_216EF3430()
{
}

void sub_216EF3438()
{
}

void sub_216EF3440()
{
}

void sub_216EF3448()
{
}

void sub_216EF3450()
{
}

void sub_216EF3458()
{
}

void sub_216EF3460()
{
}

void sub_216EF3468()
{
}

void sub_216EF3470()
{
}

void sub_216EF3478()
{
}

void sub_216EF3480()
{
}

void sub_216EF3488()
{
}

void sub_216EF3490()
{
}

void sub_216EF3498()
{
}

void sub_216EF34A0()
{
}

void sub_216EF34A8()
{
}

void sub_216EF34B0()
{
}

void sub_216EF34B8()
{
}

void sub_216EF34C0()
{
}

void sub_216EF34C8()
{
}

void sub_216EF34D0()
{
}

void sub_216EF34D8()
{
}

void sub_216EF34E0()
{
}

void sub_216EF34E8()
{
}

void sub_216EF34F0()
{
}

void sub_216EF34F8()
{
}

void sub_216EF3500()
{
}

void sub_216EF3508()
{
}

void sub_216EF3510()
{
}

void sub_216EF3518()
{
}

void sub_216EF3520()
{
}

void sub_216EF3528()
{
}

void sub_216EF3530()
{
}

void sub_216EF3538()
{
}

void sub_216EF3540()
{
}

void sub_216EF3548()
{
}

void sub_216EF3550()
{
}

void sub_216EF3558()
{
}

void sub_216EF3560()
{
}

void sub_216EF3568()
{
}

void sub_216EF3570()
{
}

void sub_216EF3578()
{
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::UsdGeomBBoxCache(uint64_t a1, uint64_t **a2, char a3, char a4, double a5)
{
  uint64_t v10 = pxrInternal__aapl__pxrReserved__::WorkDispatcher::WorkDispatcher((pxrInternal__aapl__pxrReserved__::WorkDispatcher *)a1);
  *(double *)(v10 + 336) = a5;
  *(unsigned char *)(v10 + 344) = 0;
  *(unsigned char *)(v10 + 352) = 0;
  *(void *)(v10 + 368) = 0;
  *(void *)(v10 + 376) = 0;
  *(void *)(v10 + 36sub_2168EBBB8(&a9, 0) = 0;
  sub_21698FA28((void *)(v10 + 360), *a2, a2[1], a2[1] - *a2);
  pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::UsdGeomXformCache(a1 + 384, a5);
  *(_OWORD *)(a1 + 432) = 0u;
  *(_OWORD *)(a1 + 448) = 0u;
  *(_DWORD *)(a1 + 464) = 1065353216;
  *(unsigned char *)(a1 + 472) = a3;
  *(unsigned char *)(a1 + 473) = a4;
  return a1;
}

void sub_216EF3754(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216889A04((void ***)va);
  pxrInternal__aapl__pxrReserved__::WorkDispatcher::~WorkDispatcher(v2);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::UsdGeomBBoxCache(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = pxrInternal__aapl__pxrReserved__::WorkDispatcher::WorkDispatcher((pxrInternal__aapl__pxrReserved__::WorkDispatcher *)a1);
  *(void *)(v4 + 336) = *(void *)(a2 + 336);
  *(_OWORD *)(v4 + 344) = *(_OWORD *)(a2 + 344);
  *(void *)(v4 + 368) = 0;
  *(void *)(v4 + 376) = 0;
  *(void *)(v4 + 36sub_2168EBBB8(&a9, 0) = 0;
  sub_21698FA28((void *)(v4 + 360), *(uint64_t **)(a2 + 360), *(uint64_t **)(a2 + 368), (uint64_t)(*(void *)(a2 + 368) - *(void *)(a2 + 360)) >> 3);
  sub_216EF9E94(a1 + 384, a2 + 384);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  sub_216EFF1C0(a1 + 432, a2 + 432);
  *(unsigned char *)(a1 + 472) = *(unsigned char *)(a2 + 472);
  return a1;
}

void sub_216EF3820(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216EF9C4C(v3);
  sub_216889A04((void ***)va);
  pxrInternal__aapl__pxrReserved__::WorkDispatcher::~WorkDispatcher(v2);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::operator=(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    *(void *)(a1 + 336) = *(void *)(a2 + 336);
    uint64_t v4 = *(void *)(a2 + 344);
    *(unsigned char *)(a1 + 352) = *(unsigned char *)(a2 + 352);
    *(void *)(a1 + 344) = v4;
    sub_216ABF1B0((void *)(a1 + 360), *(uint64_t **)(a2 + 360), *(uint64_t **)(a2 + 368), (uint64_t)(*(void *)(a2 + 368) - *(void *)(a2 + 360)) >> 3);
    *(_DWORD *)(a1 + 416) = *(_DWORD *)(a2 + 416);
    sub_216EFA610((void *)(a1 + 384), *(void **)(a2 + 400), 0);
    *(void *)(a1 + 424) = *(void *)(a2 + 424);
    *(_DWORD *)(a1 + 464) = *(_DWORD *)(a2 + 464);
    sub_216EFF6F4((void *)(a1 + 432), *(void **)(a2 + 448), 0);
    *(unsigned char *)(a1 + 472) = *(unsigned char *)(a2 + 472);
  }
  return a1;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::ComputeWorldBound(pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *this@<X0>, const pxrInternal__aapl__pxrReserved__::UsdPrim *a2@<X1>, _OWORD *a3@<X8>)
{
  sub_216893518((uint64_t)a3);
  if (pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined(a2, v6))
  {
    v23[0] = 0;
    v23[1] = 0;
    uint64_t v22 = v23;
    if (pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_Resolve(this, (uint64_t)a2, (uint64_t)&v22))
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_GetCombinedBBoxForIncludedPurposes((uint64_t)this, (uint64_t)&v22, (pxrInternal__aapl__pxrReserved__::GfBBox3d *)__src);
      memcpy(a3, __src, 0x132uLL);
      long long v19 = 0u;
      long long v20 = 0u;
      long long v17 = 0u;
      long long v18 = 0u;
      long long v15 = 0u;
      long long v16 = 0u;
      *(_OWORD *)std::string __p = 0u;
      long long v14 = 0u;
      pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::GetLocalToWorldTransform((pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *)((char *)this + 384), a2, (uint64_t)__p);
      long long v8 = a3[8];
      *(_OWORD *)&__src[64] = a3[7];
      *(_OWORD *)&__src[80] = v8;
      long long v9 = a3[10];
      *(_OWORD *)&__src[96] = a3[9];
      *(_OWORD *)&__src[112] = v9;
      long long v10 = a3[4];
      *(_OWORD *)__src = a3[3];
      *(_OWORD *)&__src[16] = v10;
      long long v11 = a3[6];
      *(_OWORD *)&__src[32] = a3[5];
      *(_OWORD *)&__src[48] = v11;
      pxrInternal__aapl__pxrReserved__::GfMatrix4d::operator*=((double *)__src, (double *)__p);
      pxrInternal__aapl__pxrReserved__::GfBBox3d::_SetMatrices((pxrInternal__aapl__pxrReserved__::GfBBox3d *)a3, (const pxrInternal__aapl__pxrReserved__::GfMatrix4d *)__src);
    }
    sub_2168CB05C((uint64_t)&v22, v23[0]);
  }
  else
  {
    *(void *)__src = "usdGeom/bboxCache.cpp";
    *(void *)&__src[8] = "ComputeWorldBound";
    *(void *)&__src[16] = 331;
    *(void *)&__src[24] = "GfBBox3d pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::ComputeWorldBound(const UsdPrim &)";
    __src[32] = 0;
    pxrInternal__aapl__pxrReserved__::UsdDescribe((uint64_t *)__p, a2, v7);
    if ((SBYTE7(v14) & 0x80u) == 0) {
      uint64_t v12 = __p;
    }
    else {
      uint64_t v12 = (void **)__p[0];
    }
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)__src, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid prim: %s", (const char *)v12);
    if (SBYTE7(v14) < 0) {
      operator delete(__p[0]);
    }
  }
}

void sub_216EF3A68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  sub_2168CB05C(v16 - 56, *(void **)(v16 - 48));
  _Unwind_Resume(a1);
}

BOOL pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_Resolve(pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *a1, uint64_t a2, uint64_t a3)
{
  memset(v19, 0, sizeof(v19));
  v12[0] = 0;
  sub_216EFBA18((uint64_t)&v13, a2, v12);
  if ((v12[0] & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v12[0] & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t EntriesForPrim = pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_FindOrCreateEntriesForPrim(a1, (uint64_t *)&v13, v19);
  if (*(unsigned char *)(EntriesForPrim + 56))
  {
    if (EntriesForPrim != a3)
    {
      uint64_t v7 = (void *)(EntriesForPrim + 8);
LABEL_9:
      sub_216F01D34((uint64_t **)a3, *(void **)EntriesForPrim, v7);
      goto LABEL_10;
    }
    goto LABEL_10;
  }
  v12[0] = (uint64_t)v19;
  v12[1] = (uint64_t)a1;
  void v12[2] = a2;
  void v12[3] = (uint64_t)&v13;
  v20[0] = (uint64_t (**)(void))&unk_26C76C308;
  v20[1] = (uint64_t (**)(void))v12;
  tbb::interface7::internal::isolate_within_arena(v20, 0);
  long long v8 = sub_216EFDC2C((void *)a1 + 54, (uint64_t)&v13);
  long long v9 = v8;
  if (v8)
  {
    uint64_t EntriesForPrim = (uint64_t)(v8 + 7);
    if (v9 + 7 != (void *)a3)
    {
      uint64_t v7 = v9 + 8;
      goto LABEL_9;
    }
LABEL_10:
    BOOL v10 = *(void *)(a3 + 16) != 0;
    goto LABEL_11;
  }
  BOOL v10 = 0;
LABEL_11:
  if ((v18 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v18 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  if ((v17 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v17 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v16);
  sub_21697C414(&v15);
  if (v14) {
    sub_216D16E0C(v14);
  }
  uint64_t v13 = (void **)v19;
  sub_216EFCF78(&v13);
  return v10;
}

void sub_216EF3C18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void **a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  a13 = (void **)&a18;
  sub_216EFCF78(&a13);
  _Unwind_Resume(a1);
}

double *pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_GetCombinedBBoxForIncludedPurposes@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, pxrInternal__aapl__pxrReserved__::GfBBox3d *a3@<X8>)
{
  uint64_t result = (double *)sub_216893518((uint64_t)a3);
  uint64_t v7 = *(void **)(a1 + 360);
  for (uint64_t i = *(void **)(a1 + 368); v7 != i; ++v7)
  {
    uint64_t result = (double *)sub_216AE2F1C(a2, v7);
    if ((double *)(a2 + 8) != result && result[5] <= result[8] && result[6] <= result[9] && result[7] <= result[10])
    {
      pxrInternal__aapl__pxrReserved__::GfBBox3d::Combine(a3, (const pxrInternal__aapl__pxrReserved__::GfBBox3d *)(result + 5), (uint64_t)__src);
      uint64_t result = (double *)memcpy(a3, __src, 0x132uLL);
    }
  }
  return result;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::ComputeRelativeBound(pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *this@<X0>, const pxrInternal__aapl__pxrReserved__::UsdPrim *a2@<X1>, const pxrInternal__aapl__pxrReserved__::UsdPrim *a3@<X2>, _OWORD *a4@<X8>)
{
  sub_216893518((uint64_t)a4);
  if (pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined(a2, v8))
  {
    v28[0] = 0;
    v28[1] = 0;
    uint64_t v27 = v28;
    if (pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_Resolve(this, (uint64_t)a2, (uint64_t)&v27))
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_GetCombinedBBoxForIncludedPurposes((uint64_t)this, (uint64_t)&v27, (pxrInternal__aapl__pxrReserved__::GfBBox3d *)__src);
      memcpy(a4, __src, 0x132uLL);
      long long v24 = 0u;
      long long v25 = 0u;
      long long v22 = 0u;
      long long v23 = 0u;
      long long v20 = 0u;
      long long v21 = 0u;
      BOOL v10 = (pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *)((char *)this + 384);
      *(_OWORD *)std::string __p = 0u;
      long long v19 = 0u;
      pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::GetLocalToWorldTransform(v10, a2, (uint64_t)__p);
      memset(v17, 0, sizeof(v17));
      pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::GetLocalToWorldTransform(v10, a3, (uint64_t)v17);
      pxrInternal__aapl__pxrReserved__::GfMatrix4d::GetInverse((double *)v17, 0, 0.0, (uint64_t)__src);
      v16[4] = v22;
      uint64_t v16[5] = v23;
      v16[6] = v24;
      v16[7] = v25;
      v16[0] = *(_OWORD *)__p;
      v16[1] = v19;
      v16[2] = v20;
      v16[3] = v21;
      pxrInternal__aapl__pxrReserved__::GfMatrix4d::operator*=((double *)v16, (double *)__src);
      long long v11 = a4[8];
      *(_OWORD *)&__src[64] = a4[7];
      *(_OWORD *)&__src[80] = v11;
      long long v12 = a4[10];
      *(_OWORD *)&__src[96] = a4[9];
      *(_OWORD *)&__src[112] = v12;
      long long v13 = a4[4];
      *(_OWORD *)__src = a4[3];
      *(_OWORD *)&__src[16] = v13;
      long long v14 = a4[6];
      *(_OWORD *)&__src[32] = a4[5];
      *(_OWORD *)&__src[48] = v14;
      pxrInternal__aapl__pxrReserved__::GfMatrix4d::operator*=((double *)__src, (double *)v16);
      pxrInternal__aapl__pxrReserved__::GfBBox3d::_SetMatrices((pxrInternal__aapl__pxrReserved__::GfBBox3d *)a4, (const pxrInternal__aapl__pxrReserved__::GfMatrix4d *)__src);
    }
    sub_2168CB05C((uint64_t)&v27, v28[0]);
  }
  else
  {
    *(void *)__src = "usdGeom/bboxCache.cpp";
    *(void *)&__src[8] = "ComputeRelativeBound";
    *(void *)&__src[16] = 353;
    *(void *)&__src[24] = "GfBBox3d pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::ComputeRelativeBound(const UsdP"
                            "rim &, const UsdPrim &)";
    __src[32] = 0;
    pxrInternal__aapl__pxrReserved__::UsdDescribe((uint64_t *)__p, a2, v9);
    if ((SBYTE7(v19) & 0x80u) == 0) {
      int v15 = __p;
    }
    else {
      int v15 = (void **)__p[0];
    }
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)__src, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid prim: %s", (const char *)v15);
    if (SBYTE7(v19) < 0) {
      operator delete(__p[0]);
    }
  }
}

void sub_216EF3F0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,void *__p,uint64_t a44,int a45,__int16 a46,char a47,char a48)
{
  sub_2168CB05C(v48 - 72, *(void **)(v48 - 64));
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::ComputeLocalBound(pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *this@<X0>, const pxrInternal__aapl__pxrReserved__::UsdPrim *a2@<X1>, _OWORD *a3@<X8>)
{
  sub_216893518((uint64_t)a3);
  if (pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined(a2, v6))
  {
    v18[0] = 0;
    v18[1] = 0;
    uint64_t v17 = v18;
    if (pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_Resolve(this, (uint64_t)a2, (uint64_t)&v17))
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_GetCombinedBBoxForIncludedPurposes((uint64_t)this, (uint64_t)&v17, (pxrInternal__aapl__pxrReserved__::GfBBox3d *)__src);
      memcpy(a3, __src, 0x132uLL);
      BOOL v15 = 0;
      pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::GetLocalTransformation((pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *)((char *)this + 384), a2, &v15, __p);
      long long v8 = a3[8];
      *(_OWORD *)&__src[64] = a3[7];
      *(_OWORD *)&__src[80] = v8;
      long long v9 = a3[10];
      *(_OWORD *)&__src[96] = a3[9];
      *(_OWORD *)&__src[112] = v9;
      long long v10 = a3[4];
      *(_OWORD *)__src = a3[3];
      *(_OWORD *)&__src[16] = v10;
      long long v11 = a3[6];
      *(_OWORD *)&__src[32] = a3[5];
      *(_OWORD *)&__src[48] = v11;
      pxrInternal__aapl__pxrReserved__::GfMatrix4d::operator*=((double *)__src, (double *)__p);
      pxrInternal__aapl__pxrReserved__::GfBBox3d::_SetMatrices((pxrInternal__aapl__pxrReserved__::GfBBox3d *)a3, (const pxrInternal__aapl__pxrReserved__::GfMatrix4d *)__src);
    }
    sub_2168CB05C((uint64_t)&v17, v18[0]);
  }
  else
  {
    *(void *)__src = "usdGeom/bboxCache.cpp";
    *(void *)&__src[8] = "ComputeLocalBound";
    *(void *)&__src[16] = 379;
    *(void *)&__src[24] = "GfBBox3d pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::ComputeLocalBound(const UsdPrim &)";
    __src[32] = 0;
    pxrInternal__aapl__pxrReserved__::UsdDescribe((uint64_t *)__p, a2, v7);
    if (v14 >= 0) {
      long long v12 = __p;
    }
    else {
      long long v12 = (void **)__p[0];
    }
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)__src, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid prim: %s", (const char *)v12);
    if (v14 < 0) {
      operator delete(__p[0]);
    }
  }
}

void sub_216EF40B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  sub_2168CB05C(v15 - 56, *(void **)(v15 - 48));
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::ComputeUntransformedBound(pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *this@<X0>, const pxrInternal__aapl__pxrReserved__::UsdPrim *a2@<X1>, pxrInternal__aapl__pxrReserved__::GfBBox3d *a3@<X8>)
{
  sub_216893518((uint64_t)__src);
  if (pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined(a2, v6))
  {
    long long v12 = 0;
    uint64_t v13 = 0;
    long long v11 = (char *)&v12;
    if (pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_Resolve(this, (uint64_t)a2, (uint64_t)&v11)) {
      pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_GetCombinedBBoxForIncludedPurposes((uint64_t)this, (uint64_t)&v11, a3);
    }
    else {
      memcpy(a3, __src, 0x138uLL);
    }
    sub_2168CB05C((uint64_t)&v11, v12);
  }
  else
  {
    long long v11 = "usdGeom/bboxCache.cpp";
    long long v12 = "ComputeUntransformedBound";
    uint64_t v13 = 402;
    char v14 = "GfBBox3d pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::ComputeUntransformedBound(const UsdPrim &)";
    char v15 = 0;
    pxrInternal__aapl__pxrReserved__::UsdDescribe((uint64_t *)__p, a2, v7);
    if (v10 >= 0) {
      long long v8 = __p;
    }
    else {
      long long v8 = (void **)__p[0];
    }
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v11, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid prim: %s", (const char *)v8);
    if (v10 < 0) {
      operator delete(__p[0]);
    }
    memcpy(a3, __src, 0x138uLL);
  }
}

void sub_216EF4210(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::ComputeUntransformedBound@<X0>(pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *a1@<X0>, const pxrInternal__aapl__pxrReserved__::UsdPrim *a2@<X1>, void *a3@<X2>, void *a4@<X3>, pxrInternal__aapl__pxrReserved__::GfBBox3d *a5@<X8>)
{
  sub_216893518((uint64_t)v56);
  if (pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined(a2, v8))
  {
    uint64_t v55 = 0;
    memset(v54, 0, sizeof(v54));
    char v10 = (void *)*a3;
    if ((void *)*a3 != a3 + 1)
    {
      do
      {
        pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath((pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v10 + 28), __dst);
        *sub_216EFFEB4((uint64_t)v54, __dst) = 1;
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&__dst[4]);
        sub_21697C414(__dst);
        long long v11 = (void *)v10[1];
        if (v11)
        {
          do
          {
            long long v12 = v11;
            long long v11 = (void *)*v11;
          }
          while (v11);
        }
        else
        {
          do
          {
            long long v12 = (void *)v10[2];
            BOOL v13 = *v12 == (void)v10;
            char v10 = v12;
          }
          while (!v13);
        }
        char v10 = v12;
      }
      while (v12 != a3 + 1);
    }
    uint64_t v53 = 0;
    memset(v52, 0, sizeof(v52));
    for (uint64_t i = (void *)a4[2]; i; uint64_t i = (void *)*i)
    {
      pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath((pxrInternal__aapl__pxrReserved__::SdfPath *)(i + 2), __dst);
      *sub_216EFFEB4((uint64_t)v52, __dst) = 1;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&__dst[4]);
      sub_21697C414(__dst);
    }
    sub_216893518((uint64_t)a5);
    sub_216F00438((uint64_t)v49, (uint64_t)a2);
    long long v24 = a5;
    sub_216D3ADBC(v49, (uint64_t)v44);
    while (1)
    {
      *(void *)__dst = v49[1];
      *(void *)&__dst[8] = v49;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&__dst[16]);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&__dst[20]);
      *(_DWORD *)&__dst[24] = 0;
      *(_WORD *)&__dst[28] = 0;
      if (v44[1] == *(void *)&__dst[8] && v44[0] == *(void *)__dst)
      {
        BOOL v15 = 1;
        if (v45 == *(void *)&__dst[16] && !v46 && !v47) {
          BOOL v15 = v48 != 0;
        }
      }
      else
      {
        BOOL v15 = 1;
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&__dst[20]);
      sub_21697C414(&__dst[16]);
      if (!v15) {
        break;
      }
      sub_216D3AE90((uint64_t)v44, (uint64_t)v39);
      sub_216D0162C((uint64_t)v39, &v37);
      if (sub_216BE2740((uint64_t)a3, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v37))
      {
        pxrInternal__aapl__pxrReserved__::UsdPrimRange::iterator::PruneChildren((pxrInternal__aapl__pxrReserved__::UsdPrimRange::iterator *)v44);
      }
      else if (!sub_216C94418(v54, (unsigned int *)&v37) && !sub_216C94418(v52, (unsigned int *)&v37))
      {
        sub_216981010(&v36, &v37);
        sub_21698105C((_DWORD *)&v36 + 1, &v38);
        while (1)
        {
          sub_216D0162C((uint64_t)a2, (int *)__dst);
          uint64_t v16 = v36;
          uint64_t v17 = *(void *)__dst;
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&__dst[4]);
          sub_21697C414(__dst);
          if (v16 == v17) {
            break;
          }
          uint64_t v18 = (double *)sub_216A9DB14(a4, (unsigned int *)&v36);
          if (v18) {
            goto LABEL_29;
          }
          pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath((pxrInternal__aapl__pxrReserved__::SdfPath *)&v36, __dst);
          sub_21697DE94((int *)&v36, (int *)__dst);
          sub_21697DEEC((int *)&v36 + 1, (int *)&__dst[4]);
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&__dst[4]);
          sub_21697C414(__dst);
        }
        uint64_t v18 = 0;
LABEL_29:
        sub_216893518((uint64_t)__dst);
        if (v16 == v17)
        {
          pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::ComputeRelativeBound(a1, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)v39, a2, __src);
          memcpy(__dst, __src, sizeof(__dst));
        }
        else
        {
          pxrInternal__aapl__pxrReserved__::UsdObject::GetStage(a2, v19, &v27);
          long long v20 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_216D01530(&v27);
          pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(v20, (const pxrInternal__aapl__pxrReserved__::SdfPath *)(v18 + 2), (uint64_t)v29);
          pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::ComputeRelativeBound(a1, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)v39, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)v29, __src);
          memcpy(__dst, __src, sizeof(__dst));
          if ((v33 & 7) != 0) {
            atomic_fetch_add_explicit((atomic_uint *volatile)(v33 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
          }
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v32);
          sub_21697C414(&v31);
          if (v30) {
            sub_216D16E0C(v30);
          }
          uint64_t v21 = v28;
          if (v28 && atomic_fetch_add_explicit((atomic_uint *volatile)(v28 + 8), 0xFFFFFFFF, memory_order_release) == 1) {
            (*(void (**)(uint64_t))(*(void *)v21 + 8))(v21);
          }
          __src[4] = *(_OWORD *)&__dst[112];
          __src[5] = *(_OWORD *)&__dst[128];
          __src[6] = *(_OWORD *)&__dst[144];
          __src[7] = *(_OWORD *)&__dst[160];
          __src[0] = *(_OWORD *)&__dst[48];
          __src[1] = *(_OWORD *)&__dst[64];
          __src[2] = *(_OWORD *)&__dst[80];
          __src[3] = *(_OWORD *)&__dst[96];
          pxrInternal__aapl__pxrReserved__::GfMatrix4d::operator*=((double *)__src, v18 + 3);
          pxrInternal__aapl__pxrReserved__::GfBBox3d::_SetMatrices((pxrInternal__aapl__pxrReserved__::GfBBox3d *)__dst, (const pxrInternal__aapl__pxrReserved__::GfMatrix4d *)__src);
        }
        pxrInternal__aapl__pxrReserved__::GfBBox3d::Combine(v24, (const pxrInternal__aapl__pxrReserved__::GfBBox3d *)__dst, (uint64_t)__src);
        memcpy(v24, __src, 0x132uLL);
        pxrInternal__aapl__pxrReserved__::UsdPrimRange::iterator::PruneChildren((pxrInternal__aapl__pxrReserved__::UsdPrimRange::iterator *)v44);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v36 + 1);
        sub_21697C414(&v36);
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v38);
      sub_21697C414(&v37);
      if ((v43 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v43 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v42);
      sub_21697C414(&v41);
      if (v40) {
        sub_216D16E0C(v40);
      }
      pxrInternal__aapl__pxrReserved__::UsdPrimRange::iterator::increment((uint64_t)v44);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v45 + 1);
    sub_21697C414(&v45);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v51);
    sub_21697C414(&v50);
    sub_216F00518((uint64_t *)v52);
    return sub_216F00518((uint64_t *)v54);
  }
  else
  {
    *(void *)__dst = "usdGeom/bboxCache.cpp";
    *(void *)&__dst[8] = "_ComputeBoundWithOverridesHelper";
    *(void *)&__dst[16] = 424;
    *(void *)&__dst[24] = "GfBBox3d pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_ComputeBoundWithOverridesHelpe"
                            "r(const UsdPrim &, const SdfPathSet &, const TransformType &, const TfHashMap<SdfPath, GfMat"
                            "rix4d, SdfPath::Hash> &) [TransformType = pxrInternal__aapl__pxrReserved__::(anonymous names"
                            "pace)::_IdentityTransform]";
    __dst[32] = 0;
    pxrInternal__aapl__pxrReserved__::UsdDescribe((uint64_t *)__src, a2, v9);
    if ((SBYTE7(__src[1]) & 0x80u) == 0) {
      long long v22 = (const char *)__src;
    }
    else {
      long long v22 = *(const char **)&__src[0];
    }
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)__dst, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid prim: %s", v22);
    if (SBYTE7(__src[1]) < 0) {
      operator delete(*(void **)&__src[0]);
    }
    return (uint64_t *)memcpy(a5, v56, 0x138uLL);
  }
}

void sub_216EF4800(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, _DWORD *a12, _DWORD *a13, _DWORD *a14, uint64_t a15, uint64_t a16, uint64_t a17, _DWORD *a18, _DWORD *a19, _DWORD *a20,uint64_t a21,atomic_uint *a22,uint64_t a23,atomic_ullong *a24,uint64_t a25,uint64_t a26)
{
  if ((a26 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(a26 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(a13);
  sub_21697C414(a12);
  if (a24) {
    sub_216D16E0C(a24);
  }
  if (a22 && atomic_fetch_add_explicit(a22 + 2, 0xFFFFFFFF, memory_order_release) == 1) {
    (*(void (**)(atomic_uint *))(*(void *)a22 + 8))(a22);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(a18);
  sub_21697C414(&STACK[0x308]);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v26);
  sub_21697C414(&STACK[0x310]);
  if ((STACK[0x330] & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(STACK[0x330] & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(a20);
  sub_21697C414(a19);
  if (STACK[0x320]) {
    sub_216D16E0C((atomic_ullong *)STACK[0x320]);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&STACK[0x34C]);
  sub_21697C414(a14);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&STACK[0x36C]);
  sub_21697C414(&STACK[0x368]);
  sub_216F00518((uint64_t *)&STACK[0x390]);
  sub_216F00518((uint64_t *)&STACK[0x3C0]);
  _Unwind_Resume(a1);
}

uint64_t *sub_216EF4A0C@<X0>(pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *a1@<X0>, const pxrInternal__aapl__pxrReserved__::UsdPrim *a2@<X1>, void *a3@<X2>, double *a4@<X3>, void *a5@<X4>, pxrInternal__aapl__pxrReserved__::GfBBox3d *a6@<X8>)
{
  sub_216893518((uint64_t)v58);
  if (pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined(a2, v10))
  {
    uint64_t v57 = 0;
    memset(v56, 0, sizeof(v56));
    long long v12 = (void *)*a3;
    if ((void *)*a3 != a3 + 1)
    {
      do
      {
        pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath((pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v12 + 28), __dst);
        *sub_216EFFEB4((uint64_t)v56, __dst) = 1;
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&__dst[4]);
        sub_21697C414(__dst);
        BOOL v13 = (void *)v12[1];
        if (v13)
        {
          do
          {
            char v14 = v13;
            BOOL v13 = (void *)*v13;
          }
          while (v13);
        }
        else
        {
          do
          {
            char v14 = (void *)v12[2];
            BOOL v15 = *v14 == (void)v12;
            long long v12 = v14;
          }
          while (!v15);
        }
        long long v12 = v14;
      }
      while (v14 != a3 + 1);
    }
    uint64_t v55 = 0;
    memset(v54, 0, sizeof(v54));
    for (uint64_t i = (void *)a5[2]; i; uint64_t i = (void *)*i)
    {
      pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath((pxrInternal__aapl__pxrReserved__::SdfPath *)(i + 2), __dst);
      *sub_216EFFEB4((uint64_t)v54, __dst) = 1;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&__dst[4]);
      sub_21697C414(__dst);
    }
    sub_216893518((uint64_t)a6);
    sub_216F00438((uint64_t)v51, (uint64_t)a2);
    uint64_t v26 = a6;
    sub_216D3ADBC(v51, (uint64_t)v46);
    while (1)
    {
      *(void *)__dst = v51[1];
      *(void *)&__dst[8] = v51;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&__dst[16]);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&__dst[20]);
      *(_DWORD *)&__dst[24] = 0;
      *(_WORD *)&__dst[28] = 0;
      if (v46[1] == *(void *)&__dst[8] && v46[0] == *(void *)__dst)
      {
        BOOL v17 = 1;
        if (v47 == *(void *)&__dst[16] && !v48 && !v49) {
          BOOL v17 = v50 != 0;
        }
      }
      else
      {
        BOOL v17 = 1;
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&__dst[20]);
      sub_21697C414(&__dst[16]);
      if (!v17) {
        break;
      }
      sub_216D3AE90((uint64_t)v46, (uint64_t)v41);
      sub_216D0162C((uint64_t)v41, &v39);
      if (sub_216BE2740((uint64_t)a3, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v39))
      {
        pxrInternal__aapl__pxrReserved__::UsdPrimRange::iterator::PruneChildren((pxrInternal__aapl__pxrReserved__::UsdPrimRange::iterator *)v46);
      }
      else if (!sub_216C94418(v56, (unsigned int *)&v39) && !sub_216C94418(v54, (unsigned int *)&v39))
      {
        sub_216981010(&v38, &v39);
        sub_21698105C((_DWORD *)&v38 + 1, &v40);
        while (1)
        {
          sub_216D0162C((uint64_t)a2, (int *)__dst);
          uint64_t v18 = v38;
          uint64_t v19 = *(void *)__dst;
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&__dst[4]);
          sub_21697C414(__dst);
          if (v18 == v19) {
            break;
          }
          long long v20 = (double *)sub_216A9DB14(a5, (unsigned int *)&v38);
          if (v20) {
            goto LABEL_29;
          }
          pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath((pxrInternal__aapl__pxrReserved__::SdfPath *)&v38, __dst);
          sub_21697DE94((int *)&v38, (int *)__dst);
          sub_21697DEEC((int *)&v38 + 1, (int *)&__dst[4]);
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&__dst[4]);
          sub_21697C414(__dst);
        }
        long long v20 = 0;
LABEL_29:
        sub_216893518((uint64_t)__dst);
        if (v18 == v19)
        {
          pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::ComputeRelativeBound(a1, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)v41, a2, __src);
          memcpy(__dst, __src, sizeof(__dst));
          __src[4] = *(_OWORD *)&__dst[112];
          __src[5] = *(_OWORD *)&__dst[128];
          __src[6] = *(_OWORD *)&__dst[144];
          __src[7] = *(_OWORD *)&__dst[160];
          __src[0] = *(_OWORD *)&__dst[48];
          __src[1] = *(_OWORD *)&__dst[64];
          __src[2] = *(_OWORD *)&__dst[80];
          __src[3] = *(_OWORD *)&__dst[96];
          pxrInternal__aapl__pxrReserved__::GfMatrix4d::operator*=((double *)__src, a4);
          pxrInternal__aapl__pxrReserved__::GfBBox3d::_SetMatrices((pxrInternal__aapl__pxrReserved__::GfBBox3d *)__dst, (const pxrInternal__aapl__pxrReserved__::GfMatrix4d *)__src);
        }
        else
        {
          pxrInternal__aapl__pxrReserved__::UsdObject::GetStage(a2, v21, &v29);
          long long v22 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_216D01530(&v29);
          pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(v22, (const pxrInternal__aapl__pxrReserved__::SdfPath *)(v20 + 2), (uint64_t)v31);
          pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::ComputeRelativeBound(a1, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)v41, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)v31, __src);
          memcpy(__dst, __src, sizeof(__dst));
          if ((v35 & 7) != 0) {
            atomic_fetch_add_explicit((atomic_uint *volatile)(v35 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
          }
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v34);
          sub_21697C414(&v33);
          if (v32) {
            sub_216D16E0C(v32);
          }
          uint64_t v23 = v30;
          if (v30 && atomic_fetch_add_explicit((atomic_uint *volatile)(v30 + 8), 0xFFFFFFFF, memory_order_release) == 1) {
            (*(void (**)(uint64_t))(*(void *)v23 + 8))(v23);
          }
          __src[4] = *(_OWORD *)&__dst[112];
          __src[5] = *(_OWORD *)&__dst[128];
          __src[6] = *(_OWORD *)&__dst[144];
          __src[7] = *(_OWORD *)&__dst[160];
          __src[0] = *(_OWORD *)&__dst[48];
          __src[1] = *(_OWORD *)&__dst[64];
          __src[2] = *(_OWORD *)&__dst[80];
          __src[3] = *(_OWORD *)&__dst[96];
          pxrInternal__aapl__pxrReserved__::GfMatrix4d::operator*=((double *)__src, v20 + 3);
          pxrInternal__aapl__pxrReserved__::GfBBox3d::_SetMatrices((pxrInternal__aapl__pxrReserved__::GfBBox3d *)__dst, (const pxrInternal__aapl__pxrReserved__::GfMatrix4d *)__src);
        }
        pxrInternal__aapl__pxrReserved__::GfBBox3d::Combine(v26, (const pxrInternal__aapl__pxrReserved__::GfBBox3d *)__dst, (uint64_t)__src);
        memcpy(v26, __src, 0x132uLL);
        pxrInternal__aapl__pxrReserved__::UsdPrimRange::iterator::PruneChildren((pxrInternal__aapl__pxrReserved__::UsdPrimRange::iterator *)v46);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v38 + 1);
        sub_21697C414(&v38);
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v40);
      sub_21697C414(&v39);
      if ((v45 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v45 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v44);
      sub_21697C414(&v43);
      if (v42) {
        sub_216D16E0C(v42);
      }
      pxrInternal__aapl__pxrReserved__::UsdPrimRange::iterator::increment((uint64_t)v46);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v47 + 1);
    sub_21697C414(&v47);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v53);
    sub_21697C414(&v52);
    sub_216F00518((uint64_t *)v54);
    return sub_216F00518((uint64_t *)v56);
  }
  else
  {
    *(void *)__dst = "usdGeom/bboxCache.cpp";
    *(void *)&__dst[8] = "_ComputeBoundWithOverridesHelper";
    *(void *)&__dst[16] = 424;
    *(void *)&__dst[24] = "GfBBox3d pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_ComputeBoundWithOverridesHelpe"
                            "r(const UsdPrim &, const SdfPathSet &, const TransformType &, const TfHashMap<SdfPath, GfMat"
                            "rix4d, SdfPath::Hash> &) [TransformType = pxrInternal__aapl__pxrReserved__::GfMatrix4d]";
    __dst[32] = 0;
    pxrInternal__aapl__pxrReserved__::UsdDescribe((uint64_t *)__src, a2, v11);
    if ((SBYTE7(__src[1]) & 0x80u) == 0) {
      long long v24 = (const char *)__src;
    }
    else {
      long long v24 = *(const char **)&__src[0];
    }
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)__dst, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid prim: %s", v24);
    if (SBYTE7(__src[1]) < 0) {
      operator delete(*(void **)&__src[0]);
    }
    return (uint64_t *)memcpy(a6, v58, 0x138uLL);
  }
}

void sub_216EF501C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, atomic_uint *a15, ...)
{
  va_start(va, a15);
  sub_216D16AD8((uint64_t)va);
  if (a15)
  {
    if (atomic_fetch_add_explicit(a15 + 2, 0xFFFFFFFF, memory_order_release) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a15 + 8))(a15);
    }
  }
  sub_21697B754(&STACK[0x308]);
  sub_21697B754(&STACK[0x310]);
  sub_216D16AD8((uint64_t)&STACK[0x318]);
  sub_216D3AE58((uint64_t)&STACK[0x338]);
  sub_216D3AF04((uint64_t)&STACK[0x358]);
  sub_216F00518((uint64_t *)&STACK[0x390]);
  sub_216F00518((uint64_t *)&STACK[0x3C0]);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_ComputePointInstanceBoundsHelper(pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *this, const pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *a2, const uint64_t *a3, unint64_t a4, const pxrInternal__aapl__pxrReserved__::GfMatrix4d *a5, pxrInternal__aapl__pxrReserved__::GfBBox3d *a6)
{
  uint64_t v7 = 0;
  memset(&__src[29], 0, 32);
  pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer::GetProtoIndicesAttr(a2, (uint64_t)__src);
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::VtArray<int>>();
}

void sub_216EF57BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void **a13)
{
  sub_216D16AD8((uint64_t)&a13);
  a13 = (void **)(v13 - 200);
  sub_216981168(&a13);
  sub_216D33F64(v13 - 176);
  sub_2168F83DC(v13 - 144);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::ComputePointInstanceWorldBounds(pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *this, const pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *a2, const uint64_t *a3, unint64_t a4, pxrInternal__aapl__pxrReserved__::GfBBox3d *a5)
{
  char v10 = (pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *)((char *)this + 384);
  sub_216D16CFC((uint64_t)&v11, (uint64_t *)a2 + 1, (_DWORD *)a2 + 4);
  pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::GetLocalToWorldTransform(v10, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v11, (uint64_t)v12);
  pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_ComputePointInstanceBoundsHelper(this, a2, a3, a4, (const pxrInternal__aapl__pxrReserved__::GfMatrix4d *)v12, a5);
}

void sub_216EF59FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::ComputePointInstanceRelativeBounds(pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *this, const pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *a2, const uint64_t *a3, unint64_t a4, const pxrInternal__aapl__pxrReserved__::UsdPrim *a5, pxrInternal__aapl__pxrReserved__::GfBBox3d *a6)
{
  long long v12 = (pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *)((char *)this + 384);
  memset(v17, 0, sizeof(v17));
  sub_216D16CFC((uint64_t)&v15, (uint64_t *)a2 + 1, (_DWORD *)a2 + 4);
  pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::GetLocalToWorldTransform(v12, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v15, (uint64_t)v17);
  if ((BYTE8(v16[0]) & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(*((void *)&v16[0] + 1) & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v16 + 1);
  sub_21697C414(v16);
  if (*((void *)&v15 + 1)) {
    sub_216D16E0C(*((atomic_ullong **)&v15 + 1));
  }
  long long v15 = 0u;
  memset(v16, 0, sizeof(v16));
  pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::GetLocalToWorldTransform(v12, a5, (uint64_t)&v15);
  pxrInternal__aapl__pxrReserved__::GfMatrix4d::GetInverse((double *)&v15, 0, 0.0, (uint64_t)v13);
  void v14[4] = v13[4];
  v14[5] = v13[5];
  v14[6] = v13[6];
  v14[7] = v13[7];
  v14[0] = v13[0];
  v14[1] = v13[1];
  void v14[2] = v13[2];
  v14[3] = v13[3];
  pxrInternal__aapl__pxrReserved__::GfMatrix4d::operator*=((double *)v14, (double *)v17);
  pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_ComputePointInstanceBoundsHelper(this, a2, a3, a4, (const pxrInternal__aapl__pxrReserved__::GfMatrix4d *)v14, a6);
}

void sub_216EF5B60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::ComputePointInstanceLocalBounds(pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *this, const pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *a2, const uint64_t *a3, unint64_t a4, pxrInternal__aapl__pxrReserved__::GfBBox3d *a5)
{
  BOOL v13 = 0;
  char v10 = (pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *)((char *)this + 384);
  sub_216D16CFC((uint64_t)v11, (uint64_t *)a2 + 1, (_DWORD *)a2 + 4);
  pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::GetLocalTransformation(v10, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)v11, &v13, v12);
  pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_ComputePointInstanceBoundsHelper(this, a2, a3, a4, (const pxrInternal__aapl__pxrReserved__::GfMatrix4d *)v12, a5);
}

void sub_216EF5C48(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216D16AD8((uint64_t)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::ComputePointInstanceUntransformedBounds(pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *this, const pxrInternal__aapl__pxrReserved__::UsdGeomPointInstancer *a2, const uint64_t *a3, unint64_t a4, pxrInternal__aapl__pxrReserved__::GfBBox3d *a5)
{
  pxrInternal__aapl__pxrReserved__::GfMatrix4d::SetDiagonal((uint64_t)v10, 1.0);
  pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_ComputePointInstanceBoundsHelper(this, a2, a3, a4, (const pxrInternal__aapl__pxrReserved__::GfMatrix4d *)v10, a5);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::Clear(pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *this)
{
  if (sub_216EF5D20(1)) {
    pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"[BBox Cache] CLEARED\n", v2, v3);
  }
  pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::Clear((pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *)((char *)this + 384));

  sub_216F005DC((uint64_t)this + 432);
}

BOOL sub_216EF5D20(int a1)
{
  uint64_t v2 = sub_216EEE18C();
  unsigned int v3 = atomic_load((unsigned int *)(v2 + 4 * a1));
  if (!v3)
  {
    uint64_t v5 = v2;
    uint64_t v6 = sub_216EEE18C();
    pxrInternal__aapl__pxrReserved__::TfDebug::_InitializeNode((void *)(v6 + 4 * a1), off_264294640[a1]);
    unsigned int v3 = atomic_load((unsigned int *)(v5 + 4 * a1));
  }
  return v3 == 2;
}

uint64_t **pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::SetIncludedPurposes(uint64_t a1, uint64_t **a2)
{
  uint64_t result = (uint64_t **)(a1 + 360);
  if (result != a2) {
    return (uint64_t **)sub_216ABF1B0(result, *a2, a2[1], a2[1] - *a2);
  }
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::SetTime(uint64_t result, double a2)
{
  uint64_t v3 = result;
  double v14 = a2;
  if (a2 != *(double *)(result + 336))
  {
    if (sub_216EF5D20(1)) {
      pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"[BBox Cache] Setting time: %f  clearUnvarying: %s\n", v4, v5, *(void *)&a2, "false");
    }
    for (uint64_t i = *(uint64_t **)(v3 + 448); i; uint64_t i = (uint64_t *)*i)
    {
      if (*((unsigned char *)i + 113))
      {
        uint64_t v7 = (void *)i[8];
        *((unsigned char *)i + 112) = 0;
        sub_2168CB05C((uint64_t)(i + 7), v7);
        i[7] = (uint64_t)(i + 8);
        i[8] = 0;
        i[9] = 0;
        if (sub_216EF5D20(1))
        {
          pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_PrimContext::ToString((pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_PrimContext *)(i + 2), (uint64_t)__p);
          if (v13 >= 0) {
            char v10 = __p;
          }
          else {
            char v10 = (void **)__p[0];
          }
          pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"[BBox Cache] invalidating %s for time change\n", v8, v9, v10);
          if (v13 < 0) {
            operator delete(__p[0]);
          }
        }
      }
    }
    double v11 = v14;
    *(double *)(v3 + 336) = v14;
    return pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::SetTime(v3 + 384, (uint64_t)v4, v5, v11);
  }
  return result;
}

void sub_216EF5F30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

_DWORD *pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_PrimContext::ToString@<X0>(pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_PrimContext *this@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *((void *)this + 4);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFF8;
    if (v4)
    {
      uint64_t v5 = (const char *)(v4 + 16);
      if (*(char *)(v4 + 39) < 0) {
        uint64_t v5 = *(const char **)v5;
      }
    }
    else
    {
      uint64_t v5 = "";
    }
    sub_216D0162C((uint64_t)this, &v12);
    Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v12);
    pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"[%s]%s", v9, v10, v5, Text);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v13);
  }
  else
  {
    sub_216D0162C((uint64_t)this, &v12);
    String = pxrInternal__aapl__pxrReserved__::SdfPath::GetString((pxrInternal__aapl__pxrReserved__::SdfPath *)&v12);
    if (*((char *)String + 23) < 0)
    {
      sub_216778F24((unsigned char *)a2, (void *)*String, String[1]);
    }
    else
    {
      long long v7 = *(_OWORD *)String;
      *(void *)(a2 + 16) = String[2];
      *(_OWORD *)a2 = v7;
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v13);
  }
  return sub_21697C414(&v12);
}

void sub_216EF6024(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_21697B754((int *)va);
  _Unwind_Resume(a1);
}

BOOL pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_ShouldIncludePrim(pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *this, const pxrInternal__aapl__pxrReserved__::UsdPrim *a2)
{
  StaticTfType = pxrInternal__aapl__pxrReserved__::UsdTyped::_GetStaticTfType(this);
  SchemaInfo = (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry::FindSchemaInfo((pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry *)StaticTfType, v5);
  uint64_t IsA = (pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)pxrInternal__aapl__pxrReserved__::UsdPrim::_IsA((uint64_t)a2, SchemaInfo, v7);
  if (!IsA) {
    return 1;
  }
  long long v9 = pxrInternal__aapl__pxrReserved__::UsdGeomImageable::_GetStaticTfType(IsA);
  double v11 = (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry::FindSchemaInfo((pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry *)v9, v10);
  if (pxrInternal__aapl__pxrReserved__::UsdPrim::_IsA((uint64_t)a2, v11, v12))
  {
    if (!*((unsigned char *)this + 473))
    {
      pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)v21, a2);
      __p[4] = 0;
      v21[0] = &unk_26C76CA38;
      pxrInternal__aapl__pxrReserved__::UsdGeomImageable::GetVisibilityAttr((pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)v21, (uint64_t)__p);
      pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::TfToken>();
    }
    return 1;
  }
  BOOL result = sub_216EF5D20(1);
  if (result)
  {
    sub_216D0162C((uint64_t)a2, (int *)__p);
    Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)__p);
    uint64_t v17 = *((void *)a2 + 1);
    if (!v17 || (*(unsigned char *)(v17 + 57) & 8) != 0) {
      pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError((pxrInternal__aapl__pxrReserved__ *)v17, v14);
    }
    unint64_t v18 = **(void **)(v17 + 24) & 0xFFFFFFFFFFFFFFF8;
    if (v18)
    {
      uint64_t v19 = (const char *)(v18 + 16);
      if (*(char *)(v18 + 39) < 0) {
        uint64_t v19 = *(const char **)v19;
      }
    }
    else
    {
      uint64_t v19 = "";
    }
    pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"[BBox Cache] excluded, not IMAGEABLE type. prim: %s, primType: %s\n", (const char *)v14, v15, Text, v19);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)__p + 1);
    sub_21697C414(__p);
    return 0;
  }
  return result;
}

void sub_216EF6308(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,char a21)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  sub_21697B754(&a12);
  if ((a20 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(a20 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::UsdGeomImageable::~UsdGeomImageable((pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)&a21);
  _Unwind_Resume(a1);
}

uint64_t sub_216EF6394(double *a1)
{
  sub_21677B834((uint64_t)v3);
  pxrInternal__aapl__pxrReserved__::operator<<(v3, a1);
  std::stringbuf::str();
  v3[0] = *MEMORY[0x263F8C2C8];
  *(void *)((char *)v3 + *(void *)(v3[0] - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
  v3[1] = MEMORY[0x263F8C318] + 16;
  if (v4 < 0) {
    operator delete((void *)v3[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return MEMORY[0x21D447E60](&v5);
}

void sub_216EF64C8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21677B9CC((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_IsVarying(pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *this, const pxrInternal__aapl__pxrReserved__::UsdAttribute *a2)
{
  double v3 = *((double *)this + 42);
  double v7 = 0.0;
  double v8 = 0.0;
  BOOL v6 = 0;
  BOOL v4 = !pxrInternal__aapl__pxrReserved__::UsdAttribute::GetBracketingTimeSamples(a2, v3 + 0.000001, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v8, &v7, &v6)|| !v6;
  BOOL result = 0;
  if (!v4)
  {
    if (v8 != v7) {
      return 1;
    }
    pxrInternal__aapl__pxrReserved__::UsdAttribute::GetBracketingTimeSamples(a2, v8 + 0.000001, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v8, &v7, &v6);
    if (v8 != v7) {
      return 1;
    }
    pxrInternal__aapl__pxrReserved__::UsdAttribute::GetBracketingTimeSamples(a2, v8 + -0.000001, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v8, &v7, &v6);
    if (v8 != v7) {
      return 1;
    }
  }
  return result;
}

BOOL pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_IsVarying(pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *this, const pxrInternal__aapl__pxrReserved__::UsdAttributeQuery *a2)
{
  double v3 = *((double *)this + 42);
  double v7 = 0.0;
  double v8 = 0.0;
  BOOL v6 = 0;
  BOOL v4 = !pxrInternal__aapl__pxrReserved__::UsdAttributeQuery::GetBracketingTimeSamples(a2, v3 + 0.000001, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v8, &v7, &v6)|| !v6;
  BOOL result = 0;
  if (!v4)
  {
    if (v8 != v7) {
      return 1;
    }
    pxrInternal__aapl__pxrReserved__::UsdAttributeQuery::GetBracketingTimeSamples(a2, v8 + 0.000001, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v8, &v7, &v6);
    if (v8 != v7) {
      return 1;
    }
    pxrInternal__aapl__pxrReserved__::UsdAttributeQuery::GetBracketingTimeSamples(a2, v8 + -0.000001, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v8, &v7, &v6);
    if (v8 != v7) {
      return 1;
    }
  }
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_ShouldPruneChildren(pxrInternal__aapl__pxrReserved__::UsdGeomBoundable *a1, const pxrInternal__aapl__pxrReserved__::UsdPrim *a2, uint64_t a3)
{
  if (*(unsigned char *)(a3 + 56)) {
    return 1;
  }
  StaticTfType = pxrInternal__aapl__pxrReserved__::UsdGeomBoundable::_GetStaticTfType(a1);
  SchemaInfo = (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry::FindSchemaInfo((pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry *)StaticTfType, v6);
  if (pxrInternal__aapl__pxrReserved__::UsdPrim::_IsA((uint64_t)a2, SchemaInfo, v8)) {
    return 1;
  }
  if (!*((unsigned char *)a1 + 472)) {
    return 0;
  }
  if (!sub_216EFB408((uint64_t)a2, v9)) {
    return 0;
  }
  sub_216D0162C((uint64_t)a2, (int *)&v17);
  int v13 = (uint64_t *)pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath(v12);
  uint64_t v14 = v17;
  uint64_t v15 = *v13;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v17 + 1);
  sub_21697C414(&v17);
  if (v14 == v15) {
    return 0;
  }
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)&v17, a2);
  *((void *)&v18 + 1) = 0;
  *(void *)&long long v17 = &unk_26C76CB40;
  pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::GetExtentsHintAttr((pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *)&v17, (uint64_t)v20);
  pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::~UsdGeomModelAPI((pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *)&v17);
  uint64_t v19 = 0;
  long long v17 = 0u;
  long long v18 = 0u;
  if (pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)v20, v16))pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::VtArray<pxrInternal__aapl__pxrReserved__::GfVec3f>>(); {
  uint64_t v10 = 0;
  }
  sub_2168F83DC((uint64_t)&v17);
  if ((v24 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v24 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v23);
  sub_21697C414(&v22);
  if (v21) {
    sub_216D16E0C(v21);
  }
  return v10;
}

void sub_216EF6828(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_FindOrCreateEntriesForPrim(pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v5 = (uint64_t)a1 + 432;
  v58[0] = a2;
  BOOL v6 = sub_216EFB444((uint64_t)a1 + 432, (uint64_t)a2, (uint64_t)&unk_2174BFD90, (uint64_t *)v58);
  uint64_t v35 = (uint64_t)(v6 + 7);
  int v7 = *((unsigned __int8 *)v6 + 112);
  BOOL v8 = sub_216EF5D20(1);
  if (v7)
  {
    if (v8)
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_PrimContext::ToString((pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_PrimContext *)a2, (uint64_t)v55);
      if ((SBYTE7(v56) & 0x80u) == 0) {
        long long v9 = v55;
      }
      else {
        long long v9 = (void **)v55[0];
      }
      pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_GetCombinedBBoxForIncludedPurposes((uint64_t)a1, v35, (pxrInternal__aapl__pxrReserved__::GfBBox3d *)v58);
      sub_216EF6F7C((uint64_t)v58);
      if (v47 >= 0) {
        int v12 = __p;
      }
      else {
        int v12 = (void **)__p[0];
      }
      pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"[BBox Cache] hit: %s %s\n", v10, v11, v9, v12);
      if (SHIBYTE(v47) < 0) {
        operator delete(__p[0]);
      }
      if (SBYTE7(v56) < 0) {
        operator delete(v55[0]);
      }
    }
  }
  else
  {
    if (v8)
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_PrimContext::ToString((pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_PrimContext *)a2, (uint64_t)v58);
      uint64_t v15 = v60 >= 0 ? v58 : (void **)v58[0];
      pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"[BBox Cache] miss: %s\n", v13, v14, v15);
      if (SHIBYTE(v60) < 0) {
        operator delete(v58[0]);
      }
    }
    *((unsigned char *)v6 + 114) = pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_ShouldIncludePrim(a1, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)a2);
    *(_OWORD *)uint64_t v55 = 0u;
    long long v56 = 0u;
    int v57 = 1065353216;
    __p[0] = 0;
    __p[1] = 0;
    LOBYTE(v47) = 0;
    uint64_t v16 = sub_216D805CC((uint64_t)__p, 0);
    *(_OWORD *)int v39 = *(_OWORD *)v16;
    uint64_t v40 = *(void *)(v16 + 16);
    *(_OWORD *)std::string __p = *(_OWORD *)v39;
    LOBYTE(v47) = v40;
    uint64_t v17 = sub_216D805CC((uint64_t)__p, 6);
    long long v43 = *(_OWORD *)v17;
    uint64_t v44 = *(void *)(v17 + 16);
    *(_OWORD *)std::string __p = v43;
    LOBYTE(v47) = v44;
    uint64_t v18 = sub_216D805CC((uint64_t)__p, 0x100000005);
    long long v19 = *(_OWORD *)v18;
    uint64_t v51 = *(void *)(v18 + 16);
    long long v50 = v19;
    sub_216D3B730((uint64_t)v58, (uint64_t)a2, &v50);
    uint64_t v36 = a3;
    sub_216D3ADBC((uint64_t *)v58, (uint64_t)&v50);
    int v37 = a2 + 4;
    uint64_t v34 = (uint64_t)(a3 + 2);
    while (1)
    {
      __p[0] = v58[1];
      __p[1] = v58;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v47);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v47 + 1);
      LODWORD(v48) = 0;
      WORD2(v48) = 0;
      if (v50 == *(_OWORD *)__p)
      {
        BOOL v20 = 1;
        if (v51 == v47 && !v52 && !v53) {
          BOOL v20 = v54 != 0;
        }
      }
      else
      {
        BOOL v20 = 1;
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v47 + 1);
      sub_21697C414(&v47);
      if (!v20) {
        break;
      }
      sub_216D3AE90((uint64_t)&v50, (uint64_t)v39);
      sub_216EFBA18((uint64_t)__p, (uint64_t)v39, v37);
      if ((v41 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v41 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v40 + 1);
      sub_21697C414(&v40);
      if (v39[1]) {
        sub_216D16E0C((atomic_ullong *)v39[1]);
      }
      v39[0] = (pxrInternal__aapl__pxrReserved__ *)__p;
      uint64_t v21 = v5;
      int v22 = sub_216EFB444(v5, (uint64_t)__p, (uint64_t)&unk_2174BFD90, (uint64_t *)v39);
      sub_216D3AE90((uint64_t)&v50, (uint64_t)v39);
      int ShouldPruneChildren = pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_ShouldPruneChildren(a1, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)v39, (uint64_t)(v22 + 7));
      if ((v41 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v41 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v40 + 1);
      sub_21697C414(&v40);
      if (v39[1]) {
        sub_216D16E0C((atomic_ullong *)v39[1]);
      }
      if (ShouldPruneChildren)
      {
        pxrInternal__aapl__pxrReserved__::UsdPrimRange::iterator::PruneChildren((pxrInternal__aapl__pxrReserved__::UsdPrimRange::iterator *)&v50);
      }
      else
      {
        sub_216D3B00C((uint64_t)&v50, (uint64_t)v39);
        long long v25 = v39[1];
        if (!v39[1] || (uint64_t v26 = *((void *)v39[1] + 7), (v26 & 0x800) != 0))
        {
          pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(v39[1], v24);
          uint64_t v26 = *((void *)v25 + 7);
        }
        if ((v41 & 7) != 0) {
          atomic_fetch_add_explicit((atomic_uint *volatile)(v41 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
        }
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v40 + 1);
        sub_21697C414(&v40);
        if (v39[1]) {
          sub_216D16E0C((atomic_ullong *)v39[1]);
        }
        if ((v26 & 0x100) != 0)
        {
          sub_216D3B00C((uint64_t)&v50, (uint64_t)v39);
          pxrInternal__aapl__pxrReserved__::UsdPrim::GetPrototype((pxrInternal__aapl__pxrReserved__::UsdPrim *)v39, v27, (uint64_t)&v43);
          if ((v41 & 7) != 0) {
            atomic_fetch_add_explicit((atomic_uint *volatile)(v41 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
          }
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v40 + 1);
          sub_21697C414(&v40);
          if (v39[1]) {
            sub_216D16E0C((atomic_ullong *)v39[1]);
          }
          sub_216EF70C4((uint64_t)a1, (uint64_t)(v22 + 7), (uint64_t *)__p);
          uint64_t v28 = (uint64_t *)sub_216EF7528((uint64_t)(v22 + 12));
          sub_216EFBA18((uint64_t)v39, (uint64_t)&v43, v28);
          sub_216F019D4((uint64_t)v55, (uint64_t)v39, (uint64_t)v39);
          if (v29)
          {
            unint64_t v30 = v36[1];
            if (v30 >= v36[2])
            {
              uint64_t v31 = sub_216EFEE10(v36, (uint64_t)v39);
              int v32 = v36;
            }
            else
            {
              sub_216EFCDB0(v34, v36[1], (uint64_t)v39);
              uint64_t v31 = v30 + 40;
              int v32 = v36;
              v36[1] = v30 + 40;
            }
            v32[1] = v31;
          }
          pxrInternal__aapl__pxrReserved__::UsdPrimRange::iterator::PruneChildren((pxrInternal__aapl__pxrReserved__::UsdPrimRange::iterator *)&v50);
          if ((v42 & 7) != 0) {
            atomic_fetch_add_explicit((atomic_uint *volatile)(v42 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
          }
          if ((v41 & 7) != 0) {
            atomic_fetch_add_explicit((atomic_uint *volatile)(v41 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
          }
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v40 + 1);
          sub_21697C414(&v40);
          if (v39[1]) {
            sub_216D16E0C((atomic_ullong *)v39[1]);
          }
          if ((v45 & 7) != 0) {
            atomic_fetch_add_explicit((atomic_uint *volatile)(v45 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
          }
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v44 + 1);
          sub_21697C414(&v44);
          if (*((void *)&v43 + 1)) {
            sub_216D16E0C(*((atomic_ullong **)&v43 + 1));
          }
        }
      }
      if ((v49 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v49 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((v48 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v48 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v47 + 1);
      sub_21697C414(&v47);
      uint64_t v5 = v21;
      if (__p[1]) {
        sub_216D16E0C((atomic_ullong *)__p[1]);
      }
      pxrInternal__aapl__pxrReserved__::UsdPrimRange::iterator::increment((uint64_t)&v50);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v51 + 1);
    sub_21697C414(&v51);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v60);
    sub_21697C414(&v59);
    sub_216EFBADC((uint64_t)v55);
  }
  return v35;
}

void sub_216EF6E54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,uint64_t a48,uint64_t a49,uint64_t a50,void *__p,uint64_t a52,int a53,__int16 a54,char a55,char a56)
{
  if (a56 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_216EF6F7C(uint64_t a1)
{
  sub_21677B834((uint64_t)v3);
  pxrInternal__aapl__pxrReserved__::operator<<(v3, a1);
  std::stringbuf::str();
  v3[0] = *MEMORY[0x263F8C2C8];
  *(void *)((char *)v3 + *(void *)(v3[0] - 24)) = *(void *)(MEMORY[0x263F8C2C8] + 24);
  v3[1] = MEMORY[0x263F8C318] + 16;
  if (v4 < 0) {
    operator delete((void *)v3[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return MEMORY[0x21D447E60](&v5);
}

void sub_216EF70B0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21677B9CC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_216EF70C4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  double v3 = (uint64_t *)(a2 + 40);
  if (*(void *)(a2 + 40)) {
    return;
  }
  if (sub_216D6B2D0((uint64_t)a3, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)a2))
  {
    uint64_t v7 = a3[4];
    if (v7)
    {
      if ((v7 & 7) != 0
        && (atomic_fetch_add_explicit((atomic_uint *volatile)(v7 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
      {
        v7 &= 0xFFFFFFFFFFFFFFF8;
      }
      if ((*v3 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*v3 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      *(void *)(a2 + 4sub_2168EBBB8(&a9, 0) = v7;
      *(unsigned char *)(a2 + 48) = 1;
    }
    else
    {
      uint64_t v16 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      if (!v16) {
        uint64_t v16 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      }
      uint64_t v17 = *((void *)v16 + 29);
      if ((v17 & 7) != 0
        && (atomic_fetch_add_explicit((atomic_uint *volatile)(v17 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
      {
        v17 &= 0xFFFFFFFFFFFFFFF8;
      }
      if ((*v3 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*v3 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      *(void *)(a2 + 4sub_2168EBBB8(&a9, 0) = v17;
      *(unsigned char *)(a2 + 48) = 0;
    }
    return;
  }
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)v35, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)a3);
  v35[0] = &unk_26C76CA38;
  sub_216D6B1F8((uint64_t)a3, (uint64_t)v30);
  if (pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)v30, v8))
  {
    sub_216D0162C((uint64_t)v30, (int *)&__p);
    uint64_t v10 = (void **)pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath(v9);
    double v11 = __p;
    int v12 = *v10;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&__p + 1);
    sub_21697C414(&__p);
    if (v11 != v12)
    {
      sub_216EFBA18((uint64_t)&__p, (uint64_t)v30, a3 + 4);
      long long v19 = sub_216EFDC2C((void *)(a1 + 432), (uint64_t)&__p);
      BOOL v20 = v19;
      if (v19)
      {
        sub_216EF70C4(a1, v19 + 7, &__p);
        pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputePurposeInfo((pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)v35, v20 + 12, (uint64_t)&v22);
        if (&v22 == v3)
        {
          uint64_t v21 = v22;
          *(unsigned char *)(a2 + 48) = v23;
          if ((v21 & 7) != 0) {
            atomic_fetch_add_explicit((atomic_uint *volatile)(v21 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
          }
        }
        else
        {
          if ((*v3 & 7) != 0) {
            atomic_fetch_add_explicit((atomic_uint *volatile)(*v3 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
          }
          *(void *)(a2 + 4sub_2168EBBB8(&a9, 0) = v22;
          uint64_t v22 = 0;
          *(unsigned char *)(a2 + 48) = v23;
        }
        if ((v29 & 7) != 0) {
          atomic_fetch_add_explicit((atomic_uint *volatile)(v29 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
        }
        if ((v28 & 7) != 0) {
          atomic_fetch_add_explicit((atomic_uint *volatile)(v28 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
        }
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v27);
        sub_21697C414(&v26);
        if (v25) {
          sub_216D16E0C(v25);
        }
        if ((v34 & 7) != 0) {
          atomic_fetch_add_explicit((atomic_uint *volatile)(v34 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
        }
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v33);
        goto LABEL_35;
      }
      if ((v29 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v29 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((v28 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v28 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v27);
      sub_21697C414(&v26);
      if (v25) {
        sub_216D16E0C(v25);
      }
    }
  }
  if (sub_216EF5D20(1))
  {
    pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_PrimContext::ToString((pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_PrimContext *)a3, (uint64_t)&__p);
    uint64_t v15 = v27 >= 0 ? &__p : (void **)__p;
    pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"[BBox Cache] Computing purpose without cached parent for <%s>\n", v13, v14, v15);
    if (SHIBYTE(v27) < 0) {
      operator delete(__p);
    }
  }
  pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputePurposeInfo((pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)v35, (uint64_t)&__p);
  if (&__p == (void **)v3)
  {
    unint64_t v18 = (unint64_t)__p;
    *(unsigned char *)(a2 + 48) = (_BYTE)v25;
    if ((v18 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v18 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  else
  {
    if ((*v3 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(*v3 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    *(void *)(a2 + 4sub_2168EBBB8(&a9, 0) = __p;
    std::string __p = 0;
    *(unsigned char *)(a2 + 48) = (_BYTE)v25;
  }
  if ((v34 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v34 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v33);
LABEL_35:
  sub_21697C414(&v32);
  if (v31) {
    sub_216D16E0C(v31);
  }
  pxrInternal__aapl__pxrReserved__::UsdGeomImageable::~UsdGeomImageable((pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)v35);
}

void sub_216EF74B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,char a21)
{
  sub_216EF75B4((uint64_t)&__p);
  sub_216D16AD8((uint64_t)&a21);
  pxrInternal__aapl__pxrReserved__::UsdGeomImageable::~UsdGeomImageable((pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)(v21 - 72));
  _Unwind_Resume(a1);
}

uint64_t sub_216EF7528(uint64_t a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26798CF20, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26798CF20))
  {
    double v3 = operator new(8uLL);
    *double v3 = 0;
    qword_26798CF18 = (uint64_t)v3;
    __cxa_guard_release(&qword_26798CF20);
  }
  if (*(unsigned char *)(a1 + 8)) {
    return a1;
  }
  else {
    return qword_26798CF18;
  }
}

void sub_216EF759C(_Unwind_Exception *a1)
{
}

uint64_t sub_216EF75B4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v3 = *(void *)(a1 + 24);
  if ((v3 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v3 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 20));
  sub_21697C414((_DWORD *)(a1 + 16));
  char v4 = *(atomic_ullong **)(a1 + 8);
  if (v4) {
    sub_216D16E0C(v4);
  }
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_GetBBoxFromExtentsHint(int a1, uint64_t a2, pxrInternal__aapl__pxrReserved__::UsdAttributeQuery *this)
{
  uint64_t v20 = 0;
  memset(v19, 0, sizeof(v19));
  Attribute = (pxrInternal__aapl__pxrReserved__::UsdProperty *)pxrInternal__aapl__pxrReserved__::UsdAttributeQuery::GetAttribute(this);
  if (pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined(Attribute, v5)) {
    pxrInternal__aapl__pxrReserved__::UsdAttributeQuery::_Get<pxrInternal__aapl__pxrReserved__::VtArray<pxrInternal__aapl__pxrReserved__::GfVec3f>>();
  }
  if (sub_216EF5D20(1))
  {
    BOOL v6 = (uint64_t *)(a2 + 8);
    uint64_t v7 = (_DWORD *)(a2 + 16);
    sub_216D16CFC((uint64_t)&__src, v6, v7);
    uint64_t v9 = *((void *)&__src + 1);
    if (!*((void *)&__src + 1) || (uint64_t v10 = *(void *)(*((void *)&__src + 1) + 56), (v10 & 0x800) != 0))
    {
      pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(*((pxrInternal__aapl__pxrReserved__ **)&__src + 1), v8);
      uint64_t v10 = *(void *)(v9 + 56);
    }
    if ((v18 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v18 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v17 + 1);
    sub_21697C414(&v17);
    if (*((void *)&__src + 1)) {
      sub_216D16E0C(*((atomic_ullong **)&__src + 1));
    }
    if ((v10 & 2) == 0 && sub_216EF5D20(1))
    {
      sub_216D16CFC((uint64_t)&__src, v6, v7);
      sub_216D0162C((uint64_t)&__src, (int *)&v21);
      String = pxrInternal__aapl__pxrReserved__::SdfPath::GetString((pxrInternal__aapl__pxrReserved__::SdfPath *)&v21);
      if (*((char *)String + 23) >= 0) {
        uint64_t v14 = (uint64_t)String;
      }
      else {
        uint64_t v14 = *String;
      }
      pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"[BBox Cache] MISSING extentsHint for UNLOADED model %s.\n", v12, v13, v14);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v21 + 1);
      sub_21697C414(&v21);
      if ((v18 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v18 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v17 + 1);
      sub_21697C414(&v17);
      if (*((void *)&__src + 1)) {
        sub_216D16E0C(*((atomic_ullong **)&__src + 1));
      }
    }
  }
  sub_2168F83DC((uint64_t)v19);
  return 0;
}

void sub_216EF7988(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_216D16AD8((uint64_t)va);
  sub_2168F83DC(v3 - 160);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_ResolvePrim(uint64_t a1, uint64_t a2, uint64_t a3, long long *a4)
{
  uint64_t v140 = (void *)(a1 + 432);
  uint64_t v5 = sub_216EFDC2C((void *)(a1 + 432), a3);
  BOOL v6 = v5 + 7;
  if (!v5) {
    BOOL v6 = 0;
  }
  uint64_t v134 = (uint64_t)v6;
  if (!v5)
  {
    __p[0].i64[0] = (uint64_t)"usdGeom/bboxCache.cpp";
    __p[0].i64[1] = (uint64_t)"_ResolvePrim";
    __p[1].i64[0] = 1181;
    __p[1].i64[1] = (uint64_t)"void pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_ResolvePrim(_BBoxTask *, const _P"
                             "rimContext &, const GfMatrix4d &)";
    __p[2].i8[0] = 0;
    if ((pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)__p, "entry != NULL", 0) & 1) == 0) {
      return;
    }
  }
  int v7 = *(unsigned __int8 *)(v134 + 56);
  BOOL v8 = sub_216EF5D20(1);
  if (v7)
  {
    if (v8)
    {
      uint64_t v9 = v150;
      pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_PrimContext::ToString((pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_PrimContext *)a3, (uint64_t)v150);
      if (v151.i8[7] < 0) {
        uint64_t v9 = (void **)v150[0];
      }
      pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_GetCombinedBBoxForIncludedPurposes(a1, v134, (pxrInternal__aapl__pxrReserved__::GfBBox3d *)__p);
      sub_216EF6F7C((uint64_t)__p);
      if ((SBYTE7(v188[0]) & 0x80u) == 0) {
        int v12 = v187;
      }
      else {
        int v12 = (void **)v187[0];
      }
      pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"[BBox Cache] Dependent cache hit: %s %s\n", v10, v11, v9, v12);
      goto LABEL_206;
    }
    return;
  }
  if (v8)
  {
    pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_PrimContext::ToString((pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_PrimContext *)a3, (uint64_t)__p);
    uint64_t v15 = __p[1].i8[7] >= 0 ? __p : (int8x16_t *)__p[0].i64[0];
    pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"[BBox Cache] Dependent cache miss: %s\n", v13, v14, v15);
    if (__p[1].i8[7] < 0) {
      operator delete((void *)__p[0].i64[0]);
    }
  }
  uint64_t v16 = *(atomic_ullong **)(a2 + 176);
  __p[0].i8[0] = 0;
  uint64_t v131 = (pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *)sub_2168520EC(v16, __p);
  pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::SetTime((uint64_t)v131, v17, v18, *(double *)(a1 + 336));
  sub_216EF9434(a1, v134, (uint64_t *)a3);
  if (*(unsigned char *)(a1 + 472) && sub_216EFB408(a3, v19))
  {
    sub_216D0162C(a3, __p[0].i32);
    uint64_t v21 = (uint64_t *)pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath(v20);
    uint64_t v22 = __p[0].i64[0];
    uint64_t v23 = *v21;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&__p[0].i32[1]);
    int v24 = v22 != v23;
    sub_21697C414(__p);
  }
  else
  {
    int v24 = 0;
  }
  long long v25 = (pxrInternal__aapl__pxrReserved__::UsdAttributeQuery **)(v134 + 24);
  if (!*(void *)(v134 + 24))
  {
    if (v24) {
      uint64_t v26 = 2;
    }
    else {
      uint64_t v26 = 1;
    }
    int v27 = operator new[]((120 << v24) + 16);
    unint64_t v28 = 0;
    void *v27 = 120;
    v27[1] = v26;
    uint64_t v29 = 120 * v26;
    do
    {
      pxrInternal__aapl__pxrReserved__::UsdAttributeQuery::UsdAttributeQuery((pxrInternal__aapl__pxrReserved__::UsdAttributeQuery *)&v27[v28 / 8 + 2]);
      v28 += 120;
    }
    while (v29 != v28);
    sub_216EF9938(v25, (uint64_t)(v27 + 2));
    if (!v24) {
      goto LABEL_41;
    }
LABEL_31:
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)v187, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)a3);
    *((void *)&v188[0] + 1) = 0;
    v187[0] = &unk_26C76CB40;
    unint64_t v30 = (pxrInternal__aapl__pxrReserved__::UsdAttributeQuery *)((char *)*v25 + 120);
    Attribute = (pxrInternal__aapl__pxrReserved__::UsdProperty *)pxrInternal__aapl__pxrReserved__::UsdAttributeQuery::GetAttribute(v30);
    if ((pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined(Attribute, v32) & 1) == 0)
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::GetExtentsHintAttr((pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *)v187, (uint64_t)v150);
      if (pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)v150, v33))
      {
        pxrInternal__aapl__pxrReserved__::UsdAttributeQuery::UsdAttributeQuery((pxrInternal__aapl__pxrReserved__::UsdAttributeQuery *)__p, (const pxrInternal__aapl__pxrReserved__::UsdAttribute *)v150);
        sub_216EFE730((uint64_t)v30, (uint64_t)__p);
        sub_216D2FE74((uint64_t)__p);
      }
      if ((v151.i8[8] & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v151.i64[1] & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v151.i32[1]);
      sub_21697C414(&v151);
      if (v150[1]) {
        sub_216D16E0C((atomic_ullong *)v150[1]);
      }
    }
    if (pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_GetBBoxFromExtentsHint(a1, (uint64_t)v187, v30))
    {
      *(unsigned char *)(v134 + 56) = 1;
      *(unsigned char *)(v134 + 57) = pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_IsVarying((pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *)a1, v30);
      *(unsigned char *)(v134 + 58) = pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_ShouldIncludePrim((pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *)a1, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)a3);
      pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::~UsdGeomModelAPI((pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *)v187);
      return;
    }
    pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::~UsdGeomModelAPI((pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *)v187);
    goto LABEL_41;
  }
  if (v24) {
    goto LABEL_31;
  }
LABEL_41:
  if (!*(unsigned char *)(v134 + 57))
  {
    pxrInternal__aapl__pxrReserved__::UsdAttributeQuery::UsdAttributeQuery((pxrInternal__aapl__pxrReserved__::UsdAttributeQuery *)v150);
    if (!*(unsigned char *)(a1 + 473))
    {
      uint64_t v34 = (pxrInternal__aapl__pxrReserved__::UsdProperty *)pxrInternal__aapl__pxrReserved__::UsdAttributeQuery::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdAttributeQuery *)v150);
      if ((pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined(v34, v35) & 1) == 0)
      {
        pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)v186, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)a3);
        *(void *)&v186[0] = &unk_26C76CA38;
        if (*((void *)&v186[0] + 1)
          && (*(unsigned char *)(*((void *)&v186[0] + 1) + 57) & 8) == 0
          && off_26C76CA58((pxrInternal__aapl__pxrReserved__::UsdTyped *)v186))
        {
          pxrInternal__aapl__pxrReserved__::UsdGeomImageable::GetVisibilityAttr((pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)v186, (uint64_t)v187);
          if (pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)v187, v36))goto LABEL_48; {
          __p[0].i64[0] = (uint64_t)"usdGeom/bboxCache.cpp";
          }
          __p[0].i64[1] = (uint64_t)"_GetOrCreateVisibilityQuery";
          __p[1].i64[0] = 269;
          __p[1].i64[1] = (uint64_t)"const UsdAttributeQuery &pxrInternal__aapl__pxrReserved__::_GetOrCreateVisibilityQuer"
                                   "y(const UsdPrim &, UsdAttributeQuery *)";
          __p[2].i8[0] = 0;
          sub_216D0162C(a3, v142.i32);
          Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v142);
          uint64_t v127 = pxrInternal__aapl__pxrReserved__::Tf_VerifyStringFormat((pxrInternal__aapl__pxrReserved__ *)"Unable to get attribute '%s' on prim at path <%s>", v125, v126, "Visibility", Text);
          int v128 = pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)__p, "attr", v127);
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v142.i32[1]);
          sub_21697C414(&v142);
          if (v128)
          {
LABEL_48:
            pxrInternal__aapl__pxrReserved__::UsdAttributeQuery::UsdAttributeQuery((pxrInternal__aapl__pxrReserved__::UsdAttributeQuery *)__p, (const pxrInternal__aapl__pxrReserved__::UsdAttribute *)v187);
            sub_216EFE730((uint64_t)v150, (uint64_t)__p);
            sub_216D2FE74((uint64_t)__p);
          }
          if ((BYTE8(v188[0]) & 7) != 0) {
            atomic_fetch_add_explicit((atomic_uint *volatile)(*((void *)&v188[0] + 1) & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
          }
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v188 + 1);
          sub_21697C414(v188);
          if (v187[1]) {
            sub_216D16E0C((atomic_ullong *)v187[1]);
          }
        }
        pxrInternal__aapl__pxrReserved__::UsdGeomImageable::~UsdGeomImageable((pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)v186);
      }
    }
    int v37 = *v25;
    uint64_t v38 = (pxrInternal__aapl__pxrReserved__::UsdProperty *)pxrInternal__aapl__pxrReserved__::UsdAttributeQuery::GetAttribute(v37);
    if ((pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined(v38, v39) & 1) == 0)
    {
      pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)v186, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)a3);
      *(void *)&v186[0] = &unk_26C76C628;
      if (*((void *)&v186[0] + 1)
        && (*(unsigned char *)(*((void *)&v186[0] + 1) + 57) & 8) == 0
        && off_26C76C648((pxrInternal__aapl__pxrReserved__::UsdTyped *)v186))
      {
        pxrInternal__aapl__pxrReserved__::UsdGeomBoundable::GetExtentAttr((pxrInternal__aapl__pxrReserved__::UsdGeomBoundable *)v186, (uint64_t)v187);
        if (pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)v187, v40))goto LABEL_59; {
        __p[0].i64[0] = (uint64_t)"usdGeom/bboxCache.cpp";
        }
        __p[0].i64[1] = (uint64_t)"_GetOrCreateExtentQuery";
        __p[1].i64[0] = 268;
        __p[1].i64[1] = (uint64_t)"const UsdAttributeQuery &pxrInternal__aapl__pxrReserved__::_GetOrCreateExtentQuery(cons"
                                 "t UsdPrim &, UsdAttributeQuery *)";
        __p[2].i8[0] = 0;
        sub_216D0162C(a3, v142.i32);
        uint64_t v119 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v142);
        uint64_t v122 = pxrInternal__aapl__pxrReserved__::Tf_VerifyStringFormat((pxrInternal__aapl__pxrReserved__ *)"Unable to get attribute '%s' on prim at path <%s>", v120, v121, "Extent", v119);
        int v123 = pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)__p, "attr", v122);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v142.i32[1]);
        sub_21697C414(&v142);
        if (v123)
        {
LABEL_59:
          pxrInternal__aapl__pxrReserved__::UsdAttributeQuery::UsdAttributeQuery((pxrInternal__aapl__pxrReserved__::UsdAttributeQuery *)__p, (const pxrInternal__aapl__pxrReserved__::UsdAttribute *)v187);
          sub_216EFE730((uint64_t)v37, (uint64_t)__p);
          sub_216D2FE74((uint64_t)__p);
        }
        if ((BYTE8(v188[0]) & 7) != 0) {
          atomic_fetch_add_explicit((atomic_uint *volatile)(*((void *)&v188[0] + 1) & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
        }
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v188 + 1);
        sub_21697C414(v188);
        if (v187[1]) {
          sub_216D16E0C((atomic_ullong *)v187[1]);
        }
      }
      pxrInternal__aapl__pxrReserved__::UsdGeomBoundable::~UsdGeomBoundable((pxrInternal__aapl__pxrReserved__::UsdGeomBoundable *)v186);
    }
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)__p, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)a3);
    __p[0].i64[0] = (uint64_t)&unk_26C76D390;
    if (__p[0].i64[1]
      && (*(unsigned char *)(__p[0].i64[1] + 57) & 8) == 0
      && off_26C76D3B0((pxrInternal__aapl__pxrReserved__::UsdTyped *)__p)
      && (pxrInternal__aapl__pxrReserved__::UsdGeomXformable::TransformMightBeTimeVarying((pxrInternal__aapl__pxrReserved__::UsdGeomXformable *)__p) & 1) != 0
      || (uint64_t v41 = (pxrInternal__aapl__pxrReserved__::UsdProperty *)pxrInternal__aapl__pxrReserved__::UsdAttributeQuery::GetAttribute(v37),
          pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined(v41, v42))
      && pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_IsVarying((pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *)a1, v37))
    {
      LOBYTE(IsDefined) = 1;
    }
    else
    {
      uint64_t v44 = (pxrInternal__aapl__pxrReserved__::UsdProperty *)pxrInternal__aapl__pxrReserved__::UsdAttributeQuery::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdAttributeQuery *)v150);
      int IsDefined = pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined(v44, v45);
      if (IsDefined) {
        LOBYTE(IsDefined) = pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_IsVarying((pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *)a1, (const pxrInternal__aapl__pxrReserved__::UsdAttributeQuery *)v150);
      }
    }
    *(unsigned char *)(v134 + 57) = IsDefined;
    pxrInternal__aapl__pxrReserved__::UsdGeomXformable::~UsdGeomXformable((pxrInternal__aapl__pxrReserved__::UsdGeomXformable *)__p);
    sub_216D2FE74((uint64_t)v150);
  }
  uint64_t v130 = (double *)(a1 + 336);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)&v189, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)a3);
  uint64_t v189 = &unk_26C76C628;
  if (v190
    && (*(unsigned char *)(v190 + 57) & 8) == 0
    && off_26C76C648((pxrInternal__aapl__pxrReserved__::UsdTyped *)&v189))
  {
    memset(__p, 0, 40);
    if (pxrInternal__aapl__pxrReserved__::UsdGeomBoundable::ComputeExtent((pxrInternal__aapl__pxrReserved__::UsdGeomBoundable *)&v189, (uint64_t)v130, (uint64_t)__p))
    {
      v150[0] = (void *)(v134 + 40);
      int v46 = sub_216F020C4(v134, (void *)(v134 + 40), (uint64_t)&unk_2174BFD90, (uint64_t **)v150);
      sub_2168FD54C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)__p, v47, v48);
      float32x2_t v49 = *(float32x2_t *)__p[2].i64[0];
      float v50 = *(float *)(__p[2].i64[0] + 8);
      sub_2168FD54C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)__p, v51, v52);
      double v53 = *(float *)(__p[2].i64[0] + 20);
      float64x2_t v54 = vcvtq_f64_f32(*(float32x2_t *)(__p[2].i64[0] + 12));
      *(float64x2_t *)(v46 + 5) = vcvtq_f64_f32(v49);
      *((double *)v46 + 7) = v50;
      *((float64x2_t *)v46 + 4) = v54;
      *((double *)v46 + 1sub_2168EBBB8(&a9, 0) = v53;
    }
    sub_2168F83DC((uint64_t)__p);
    goto LABEL_196;
  }
  pxrInternal__aapl__pxrReserved__::GfMatrix4d::SetDiagonal((uint64_t)v187, 1.0);
  if (sub_216EF9980((pxrInternal__aapl__pxrReserved__::UsdPrim *)a3))
  {
    pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::GetLocalToWorldTransform(v131, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)a3, (uint64_t)__p);
    pxrInternal__aapl__pxrReserved__::GfMatrix4d::GetInverse((double *)__p[0].i64, 0, 0.0, (uint64_t)v186);
  }
  else
  {
    long long v55 = a4[5];
    v186[4] = a4[4];
    v186[5] = v55;
    long long v56 = a4[7];
    v186[6] = a4[6];
    v186[7] = v56;
    long long v57 = a4[1];
    v186[0] = *a4;
    v186[1] = v57;
    long long v58 = a4[3];
    v186[2] = a4[2];
    v186[3] = v58;
  }
  unint64_t v184 = 0;
  uint64_t v183 = 0;
  unint64_t v185 = 0;
  sub_216EFE814((uint64_t)&v173);
  uint64_t v172 = 0;
  int v139 = sub_216E0D4E4(a3, v59);
  if (v139)
  {
    pxrInternal__aapl__pxrReserved__::UsdPrim::GetPrototype((pxrInternal__aapl__pxrReserved__::UsdPrim *)a3, v60, (uint64_t)v150);
    int8x16_t v142 = 0uLL;
    v143.i8[0] = 0;
    uint64_t v61 = sub_216D805CC((uint64_t)&v142, 0);
    int8x16_t v169 = *(int8x16_t *)v61;
    *(void *)&long long v170 = *(void *)(v61 + 16);
    int8x16_t v142 = v169;
    v143.i8[0] = v170;
    uint64_t v62 = sub_216D805CC((uint64_t)&v142, 6);
    *(_OWORD *)uint64_t v160 = *(_OWORD *)v62;
    uint64_t v161 = *(void *)(v62 + 16);
    int8x16_t v142 = *(int8x16_t *)v160;
    v143.i8[0] = v161;
    uint64_t v63 = (uint64_t *)sub_216D805CC((uint64_t)&v142, 0x100000005);
    uint64_t v65 = *v63;
    uint64_t v64 = v63[1];
    uint64_t v66 = v63[2];
    if (!pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator BOOL(&v151)
      && ((v65 & 0x2000) != 0 || (v64 & 0x2000) == 0))
    {
      v65 |= 0x2000uLL;
      v64 &= ~0x2000uLL;
    }
    v142.i64[0] = v65;
    v142.i64[1] = v64;
    v143.i64[0] = v66;
    sub_216D6BF84((uint64_t)v150, v142.i64, (uint64_t)__p);
    uint64_t v173 = __p[0].i64[0];
    sub_21697DE94(&v174, &__p[0].i32[2]);
    sub_21697DEEC(&v175, &__p[0].i32[3]);
    int8x16_t v176 = __p[1];
    LOBYTE(v177) = __p[2].i8[0];
    uint64_t v178 = __p[2].i64[1];
    sub_21697DE94(&v179, __p[3].i32);
    sub_21697DEEC(&v180, &__p[3].i32[1]);
    long long v181 = *(long long *)((char *)&__p[3] + 8);
    LOBYTE(v182) = __p[4].i8[8];
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&__p[3].i32[1]);
    sub_21697C414((int8x16_t *)__p[3].i32);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&__p[0].i32[3]);
    sub_21697C414(&__p[0].i32[2]);
    uint64_t v67 = (void *)sub_216EF7528(v134 + 40);
    sub_2168D2318(&v172, v67);
    if ((v151.i8[8] & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v151.i64[1] & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v151.i32[1]);
    sub_21697C414(&v151);
    if (v150[1]) {
      sub_216D16E0C((atomic_ullong *)v150[1]);
    }
  }
  else
  {
    v150[0] = 0;
    v150[1] = 0;
    v151.i8[0] = 0;
    uint64_t v68 = sub_216D805CC((uint64_t)v150, 0);
    int8x16_t v142 = *(int8x16_t *)v68;
    v143.i64[0] = *(void *)(v68 + 16);
    *(int8x16_t *)uint64_t v150 = v142;
    v151.i8[0] = v143.i8[0];
    uint64_t v69 = sub_216D805CC((uint64_t)v150, 6);
    int8x16_t v169 = *(int8x16_t *)v69;
    *(void *)&long long v170 = *(void *)(v69 + 16);
    *(int8x16_t *)uint64_t v150 = v169;
    v151.i8[0] = v170;
    uint64_t v70 = sub_216D805CC((uint64_t)v150, 0x100000005);
    unint64_t v72 = *(void *)v70;
    unint64_t v71 = *(void *)(v70 + 8);
    uint64_t v73 = *(void *)(v70 + 16);
    if (!pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a3 + 16))
      && ((v72 & 0x2000) != 0 || (v71 & 0x2000) == 0))
    {
      v72 |= 0x2000uLL;
      v71 &= ~0x2000uLL;
    }
    v150[0] = (void *)v72;
    v150[1] = (void *)v71;
    v151.i64[0] = v73;
    sub_216D6BF84(a3, (uint64_t *)v150, (uint64_t)__p);
    uint64_t v173 = __p[0].i64[0];
    sub_21697DE94(&v174, &__p[0].i32[2]);
    sub_21697DEEC(&v175, &__p[0].i32[3]);
    int8x16_t v176 = __p[1];
    LOBYTE(v177) = __p[2].i8[0];
    uint64_t v178 = __p[2].i64[1];
    sub_21697DE94(&v179, __p[3].i32);
    sub_21697DEEC(&v180, &__p[3].i32[1]);
    long long v181 = *(long long *)((char *)&__p[3] + 8);
    LOBYTE(v182) = __p[4].i8[8];
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&__p[3].i32[1]);
    sub_21697C414((int8x16_t *)__p[3].i32);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&__p[0].i32[3]);
    sub_21697C414(&__p[0].i32[2]);
    sub_2168D2318(&v172, (void *)(a3 + 32));
  }
  v142.i64[0] = v173;
  sub_216981010(&v142.i32[2], &v174);
  sub_21698105C(&v142.i32[3], &v175);
  int8x16_t v143 = v176;
  v144.i64[0] = v177;
  v169.i64[0] = v178;
  sub_216981010(&v169.i32[2], &v179);
  sub_21698105C(&v169.i32[3], &v180);
  long long v170 = v181;
  uint64_t v171 = v182;
  uint64_t v132 = (unsigned int (*)(pxrInternal__aapl__pxrReserved__::UsdTyped *))off_26C76CA58;
  while (*(_OWORD *)&v142 != *(_OWORD *)&v169 || !sub_216D5D158((uint64_t)&v143, (uint64_t)&v170))
  {
    sub_216D6BE74((uint64_t)&v142, (uint64_t)v164);
    sub_216EFBA18((uint64_t)v160, (uint64_t)v164, &v172);
    uint64_t v74 = sub_216EFDC2C(v140, (uint64_t)v160);
    if (v74) {
      uint64_t v75 = v74 + 7;
    }
    else {
      uint64_t v75 = 0;
    }
    if (v74) {
      goto LABEL_219;
    }
    __p[0].i64[0] = (uint64_t)"usdGeom/bboxCache.cpp";
    __p[0].i64[1] = (uint64_t)"_ResolvePrim";
    __p[1].i64[0] = 1359;
    __p[1].i64[1] = (uint64_t)"void pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_ResolvePrim(_BBoxTask *, const _P"
                             "rimContext &, const GfMatrix4d &)";
    __p[2].i8[0] = 0;
    pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_PrimContext::ToString((pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_PrimContext *)v160, (uint64_t)v150);
    uint64_t v81 = v150;
    if (v151.i8[7] < 0) {
      uint64_t v81 = (void **)v150[0];
    }
    uint64_t v82 = pxrInternal__aapl__pxrReserved__::Tf_VerifyStringFormat((pxrInternal__aapl__pxrReserved__ *)"Could not find prim <%s>in the bboxCache.", v79, v80, v81);
    char v83 = pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)__p, "childEntry", v82);
    if (v151.i8[7] < 0)
    {
      char v129 = v83;
      operator delete(v150[0]);
      char v83 = v129;
    }
    if (v83)
    {
LABEL_219:
      if (!*((unsigned char *)v75 + 56)) {
        *((unsigned char *)v75 + 58) = pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_ShouldIncludePrim((pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *)a1, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)v164);
      }
      if (*(unsigned char *)(a1 + 473) || *((unsigned char *)v75 + 58))
      {
        if (v139)
        {
          LODWORD(v150[0]) = 1;
          v150[1] = 0;
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v151);
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v151.i32[1]);
          v151.i64[1] = 0;
          v152.i64[0] = 0;
          uint64_t v158 = 0;
          uint64_t v159 = 0;
          sub_216EFE87C((uint64_t)__p, (uint64_t)v160, (uint64_t)v150);
          sub_216EF9A9C((uint64_t *)&v183, (uint64_t)__p);
          sub_216EFE9BC((uint64_t)__p);
          if ((v152.i8[0] & 7) != 0) {
            atomic_fetch_add_explicit((atomic_uint *volatile)(v152.i64[0] & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
          }
          if ((v151.i8[8] & 7) != 0) {
            atomic_fetch_add_explicit((atomic_uint *volatile)(v151.i64[1] & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
          }
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v151.i32[1]);
          sub_21697C414(&v151);
          uint64_t v76 = (atomic_ullong *)v150[1];
          if (v150[1]) {
            goto LABEL_124;
          }
        }
        else
        {
          sub_216EFEA80((uint64_t)__p, (uint64_t)v160, v186, a1, *(void *)(a2 + 176));
          unint64_t v77 = v184;
          if (v184 >= v185)
          {
            uint64_t v78 = sub_216F0263C((uint64_t *)&v183, (uint64_t)v160, (uint64_t)__p);
          }
          else
          {
            sub_216EFE87C(v184, (uint64_t)v160, (uint64_t)__p);
            uint64_t v78 = v77 + 224;
          }
          unint64_t v184 = v78;
          if ((__p[2].i8[0] & 7) != 0) {
            atomic_fetch_add_explicit((atomic_uint *volatile)(__p[2].i64[0] & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
          }
          if ((__p[1].i8[8] & 7) != 0) {
            atomic_fetch_add_explicit((atomic_uint *volatile)(__p[1].i64[1] & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
          }
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&__p[1].i32[1]);
          sub_21697C414((int8x16_t *)__p[1].i32);
          uint64_t v76 = (atomic_ullong *)__p[0].i64[1];
          if (__p[0].i64[1]) {
LABEL_124:
          }
            sub_216D16E0C(v76);
        }
      }
      else
      {
        pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)v150, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)v164);
        v150[0] = &unk_26C76CA38;
        if (v150[1] && (*((unsigned char *)v150[1] + 57) & 8) == 0 && v132((pxrInternal__aapl__pxrReserved__::UsdTyped *)v150))
        {
          pxrInternal__aapl__pxrReserved__::UsdGeomImageable::GetVisibilityAttr((pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)v150, (uint64_t)__p);
          *(unsigned char *)(v134 + 57) |= pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_IsVarying((pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *)a1, (const pxrInternal__aapl__pxrReserved__::UsdAttribute *)__p);
          if ((__p[1].i8[8] & 7) != 0) {
            atomic_fetch_add_explicit((atomic_uint *volatile)(__p[1].i64[1] & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
          }
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&__p[1].i32[1]);
          sub_21697C414((int8x16_t *)__p[1].i32);
          if (__p[0].i64[1]) {
            sub_216D16E0C((atomic_ullong *)__p[0].i64[1]);
          }
        }
        pxrInternal__aapl__pxrReserved__::UsdGeomImageable::~UsdGeomImageable((pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)v150);
      }
    }
    if ((v163 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v163 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    if ((v162 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v162 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v161 + 1);
    sub_21697C414(&v161);
    if (*(void *)&v160[8]) {
      sub_216D16E0C(*(atomic_ullong **)&v160[8]);
    }
    if ((v168 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v168 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v167);
    sub_21697C414(&v166);
    if (v165) {
      sub_216D16E0C(v165);
    }
    sub_216D6BEE8((uint64_t)&v142);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v169.i32[3]);
  sub_21697C414(&v169.i32[2]);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v142.i32[3]);
  sub_21697C414(&v142.i32[2]);
  if ((v139 & 1) == 0)
  {
    v150[0] = &v183;
    __p[0].i64[0] = (uint64_t)&unk_26C76C518;
    __p[0].i64[1] = (uint64_t)v150;
    tbb::interface7::internal::isolate_within_arena(__p, 0);
    uint64_t v84 = *(atomic_ullong **)(a2 + 176);
    __p[0].i8[0] = 0;
    uint64_t v85 = sub_2168520EC(v84, __p);
    uint64_t v88 = v85;
    if (v131 != (pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *)v85)
    {
      *((_DWORD *)v131 + 8) = *(_DWORD *)(v85 + 32);
      sub_216EFA610(v131, *(void **)(v85 + 16), 0);
    }
    *((void *)v131 + 5) = *(void *)(v88 + 40);
    pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::SetTime((uint64_t)v131, v86, v87, *v130);
  }
  uint64_t v89 = v183;
  unint64_t v90 = v184;
  if (v183 != (const pxrInternal__aapl__pxrReserved__::UsdPrim *)v184)
  {
    char v91 = 0;
    uint64_t v92 = (void *)(v134 + 8);
    do
    {
      while (1)
      {
        uint64_t v93 = sub_216EFDC2C(v140, (uint64_t)v89);
        uint64_t v94 = v93 ? (uint64_t)(v93 + 7) : 0;
        if (!*(unsigned char *)(v94 + 56))
        {
          __p[0].i64[0] = (uint64_t)"usdGeom/bboxCache.cpp";
          __p[0].i64[1] = (uint64_t)"_ResolvePrim";
          __p[1].i64[0] = 1430;
          __p[1].i64[1] = (uint64_t)"void pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_ResolvePrim(_BBoxTask *, co"
                                   "nst _PrimContext &, const GfMatrix4d &)";
          __p[2].i8[0] = 0;
          if ((pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)__p, "childEntry->isComplete", 0) & 1) == 0) {
            break;
          }
        }
        *(unsigned char *)(v134 + 57) |= *(unsigned char *)(v94 + 57);
        if (!*(void *)(v94 + 16)) {
          break;
        }
        if ((v91 & 1) == 0)
        {
          pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::GetLocalToWorldTransform(v131, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)a3, (uint64_t)v150);
          __p[4] = v154;
          __p[5] = v155;
          __p[6] = v156;
          __p[7] = v157;
          __p[0] = *(int8x16_t *)v150;
          __p[1] = v151;
          __p[2] = v152;
          __p[3] = v153;
          pxrInternal__aapl__pxrReserved__::GfMatrix4d::operator*=((double *)__p[0].i64, (double *)v186);
          v188[3] = __p[4];
          v188[4] = __p[5];
          v188[5] = __p[6];
          v188[6] = __p[7];
          *(int8x16_t *)uint64_t v187 = __p[0];
          v188[0] = __p[1];
          v188[1] = __p[2];
          v188[2] = __p[3];
          uint64_t v95 = *(void **)v134;
          if (*(void **)v134 != v92)
          {
            do
            {
              pxrInternal__aapl__pxrReserved__::GfBBox3d::_SetMatrices((pxrInternal__aapl__pxrReserved__::GfBBox3d *)(v95 + 5), (const pxrInternal__aapl__pxrReserved__::GfMatrix4d *)v187);
              pxrInternal__aapl__pxrReserved__::GfBBox3d::ComputeAlignedRange((pxrInternal__aapl__pxrReserved__::GfBBox3d *)(v95 + 5), (uint64_t)v150);
              __p[0] = *(int8x16_t *)v150;
              __p[1] = v151;
              __p[2] = v152;
              pxrInternal__aapl__pxrReserved__::GfMatrix4d::SetDiagonal((uint64_t)__p[3].i64, 1.0);
              pxrInternal__aapl__pxrReserved__::GfMatrix4d::SetDiagonal((uint64_t)__p[11].i64, 1.0);
              __p[19].i16[0] = 0;
              memcpy(v95 + 5, __p, 0x132uLL);
              uint64_t v96 = (void *)v95[1];
              if (v96)
              {
                do
                {
                  uint64_t v97 = v96;
                  uint64_t v96 = (void *)*v96;
                }
                while (v96);
              }
              else
              {
                do
                {
                  uint64_t v97 = (void *)v95[2];
                  BOOL v98 = *v97 == (void)v95;
                  uint64_t v95 = v97;
                }
                while (!v98);
              }
              uint64_t v95 = v97;
            }
            while (v97 != v92);
          }
        }
        sub_216F02764(v169.i64, v94);
        if (v139)
        {
          v160[0] = 0;
          pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::GetLocalTransformation(v131, v89, v160, &v142);
          __p[4] = v146;
          __p[5] = v147;
          __p[6] = v148;
          __p[7] = v149;
          __p[0] = v142;
          __p[1] = v143;
          __p[2] = v144;
          __p[3] = v145;
          pxrInternal__aapl__pxrReserved__::GfMatrix4d::operator*=((double *)__p[0].i64, (double *)v187);
        }
        else
        {
          pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::GetLocalToWorldTransform(v131, v89, (uint64_t)&v142);
          __p[4] = v146;
          __p[5] = v147;
          __p[6] = v148;
          __p[7] = v149;
          __p[0] = v142;
          __p[1] = v143;
          __p[2] = v144;
          __p[3] = v145;
          pxrInternal__aapl__pxrReserved__::GfMatrix4d::operator*=((double *)__p[0].i64, (double *)v186);
        }
        int8x16_t v154 = __p[4];
        int8x16_t v155 = __p[5];
        int8x16_t v156 = __p[6];
        int8x16_t v157 = __p[7];
        *(int8x16_t *)uint64_t v150 = __p[0];
        int8x16_t v151 = __p[1];
        int8x16_t v152 = __p[2];
        int8x16_t v153 = __p[3];
        uint64_t v99 = (unint64_t *)v169.i64[0];
        if ((unint64_t *)v169.i64[0] != &v169.u64[1])
        {
          do
          {
            int8x16_t v100 = *(int8x16_t *)(v99 + 21);
            __p[4] = *(int8x16_t *)(v99 + 19);
            __p[5] = v100;
            int8x16_t v101 = *(int8x16_t *)(v99 + 25);
            __p[6] = *(int8x16_t *)(v99 + 23);
            __p[7] = v101;
            int8x16_t v102 = *(int8x16_t *)(v99 + 13);
            __p[0] = *(int8x16_t *)(v99 + 11);
            __p[1] = v102;
            int8x16_t v103 = *(int8x16_t *)(v99 + 17);
            __p[2] = *(int8x16_t *)(v99 + 15);
            __p[3] = v103;
            pxrInternal__aapl__pxrReserved__::GfMatrix4d::operator*=((double *)__p[0].i64, (double *)v150);
            pxrInternal__aapl__pxrReserved__::GfBBox3d::_SetMatrices((pxrInternal__aapl__pxrReserved__::GfBBox3d *)(v99 + 5), (const pxrInternal__aapl__pxrReserved__::GfMatrix4d *)__p);
            __p[0].i64[0] = (uint64_t)(v99 + 4);
            uint64_t v104 = sub_216F020C4(v134, v99 + 4, (uint64_t)&unk_2174BFD90, (uint64_t **)__p);
            float64x2_t v135 = *(float64x2_t *)(v104 + 5);
            int8x16_t v136 = *(int8x16_t *)(v104 + 7);
            float64x2_t v138 = *(float64x2_t *)(v104 + 9);
            pxrInternal__aapl__pxrReserved__::GfBBox3d::ComputeAlignedRange((pxrInternal__aapl__pxrReserved__::GfBBox3d *)(v99 + 5), (uint64_t)__p);
            int8x16_t v105 = vbslq_s8((int8x16_t)vcgtq_f64(v135, (float64x2_t)__p[0]), __p[0], (int8x16_t)v135);
            *(void *)&v106.f64[0] = __p[1].i64[0];
            *(void *)&v106.f64[1] = v136.i64[1];
            *(void *)&v107.f64[0] = v136.i64[0];
            *(void *)&v107.f64[1] = __p[1].i64[1];
            *(int8x16_t *)(v104 + 7) = vbslq_s8((int8x16_t)vcgtq_f64(v107, v106), __p[1], v136);
            int8x16_t v108 = vbslq_s8((int8x16_t)vcgtq_f64((float64x2_t)__p[2], v138), __p[2], (int8x16_t)v138);
            *(int8x16_t *)(v104 + 5) = v105;
            *(int8x16_t *)(v104 + 9) = v108;
            uint64_t v109 = (unint64_t *)v99[1];
            if (v109)
            {
              do
              {
                uint64_t v110 = v109;
                uint64_t v109 = (unint64_t *)*v109;
              }
              while (v109);
            }
            else
            {
              do
              {
                uint64_t v110 = (unint64_t *)v99[2];
                BOOL v98 = *v110 == (void)v99;
                uint64_t v99 = v110;
              }
              while (!v98);
            }
            uint64_t v99 = v110;
          }
          while (v110 != &v169.u64[1]);
        }
        sub_2168CB05C((uint64_t)&v169, (void *)v169.i64[1]);
        uint64_t v89 = (const pxrInternal__aapl__pxrReserved__::UsdPrim *)((char *)v89 + 224);
        char v91 = 1;
        if (v89 == (const pxrInternal__aapl__pxrReserved__::UsdPrim *)v90) {
          goto LABEL_186;
        }
      }
      uint64_t v89 = (const pxrInternal__aapl__pxrReserved__::UsdPrim *)((char *)v89 + 224);
    }
    while (v89 != (const pxrInternal__aapl__pxrReserved__::UsdPrim *)v90);
    if ((v91 & 1) == 0) {
      goto LABEL_193;
    }
LABEL_186:
    memset(__p, 0, 128);
    pxrInternal__aapl__pxrReserved__::GfMatrix4d::GetInverse((double *)v187, 0, 0.0, (uint64_t)__p);
    uint64_t v111 = *(void **)v134;
    if (*(void **)v134 != v92)
    {
      do
      {
        pxrInternal__aapl__pxrReserved__::GfBBox3d::_SetMatrices((pxrInternal__aapl__pxrReserved__::GfBBox3d *)(v111 + 5), (const pxrInternal__aapl__pxrReserved__::GfMatrix4d *)__p);
        uint64_t v112 = (void *)v111[1];
        if (v112)
        {
          do
          {
            uint64_t v113 = v112;
            uint64_t v112 = (void *)*v112;
          }
          while (v112);
        }
        else
        {
          do
          {
            uint64_t v113 = (void *)v111[2];
            BOOL v98 = *v113 == (void)v111;
            uint64_t v111 = v113;
          }
          while (!v98);
        }
        uint64_t v111 = v113;
      }
      while (v113 != v92);
    }
  }
LABEL_193:
  if ((v172 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v172 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v180);
  sub_21697C414(&v179);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v175);
  sub_21697C414(&v174);
  __p[0].i64[0] = (uint64_t)&v183;
  sub_216F023BC((void ***)__p);
LABEL_196:
  pxrInternal__aapl__pxrReserved__::UsdGeomBoundable::~UsdGeomBoundable((pxrInternal__aapl__pxrReserved__::UsdGeomBoundable *)&v189);
  *(unsigned char *)(v134 + 56) = 1;
  if (sub_216EF5D20(1))
  {
    uint64_t v114 = v150;
    pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_PrimContext::ToString((pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_PrimContext *)a3, (uint64_t)v150);
    if (v151.i8[7] < 0) {
      uint64_t v114 = (void **)v150[0];
    }
    pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_GetCombinedBBoxForIncludedPurposes(a1, v134, (pxrInternal__aapl__pxrReserved__::GfBBox3d *)__p);
    sub_216EF6F7C((uint64_t)__p);
    if ((SBYTE7(v188[0]) & 0x80u) == 0) {
      uint64_t v117 = v187;
    }
    else {
      uint64_t v117 = (void **)v187[0];
    }
    if (*(unsigned char *)(v134 + 57)) {
      uint64_t v118 = "true";
    }
    else {
      uint64_t v118 = "false";
    }
    pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"[BBox Cache] resolved value: %s %s (varying: %s)\n", v115, v116, v114, v117, v118);
LABEL_206:
    if (SBYTE7(v188[0]) < 0) {
      operator delete(v187[0]);
    }
    if (v151.i8[7] < 0) {
      operator delete(v150[0]);
    }
  }
}

void sub_216EF90F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,void *__p)
{
}

void sub_216EF9434(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = (void **)(a2 + 40);
  if (*(void *)(a2 + 40)) {
    return;
  }
  if (sub_216D6B2D0((uint64_t)a3, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)a2))
  {
    uint64_t v7 = a3[4];
    if (v7)
    {
      if ((v7 & 7) != 0
        && (atomic_fetch_add_explicit((atomic_uint *volatile)(v7 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
      {
        v7 &= 0xFFFFFFFFFFFFFFF8;
      }
      if (((unint64_t)*v3 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)((unint64_t)*v3 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      *(void *)(a2 + 4sub_2168EBBB8(&a9, 0) = v7;
      *(unsigned char *)(a2 + 48) = 1;
    }
    else
    {
      uint64_t v14 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      if (!v14) {
        uint64_t v14 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      }
      uint64_t v15 = *((void *)v14 + 29);
      if ((v15 & 7) != 0
        && (atomic_fetch_add_explicit((atomic_uint *volatile)(v15 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
      {
        v15 &= 0xFFFFFFFFFFFFFFF8;
      }
      if (((unint64_t)*v3 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)((unint64_t)*v3 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      *(void *)(a2 + 4sub_2168EBBB8(&a9, 0) = v15;
      *(unsigned char *)(a2 + 48) = 0;
    }
    return;
  }
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)v43, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)a3);
  v43[0] = &unk_26C76CA38;
  sub_216D6B1F8((uint64_t)a3, (uint64_t)v38);
  if (!pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)v38, v8))goto LABEL_42; {
  sub_216D0162C((uint64_t)v38, (int *)&v32);
  }
  uint64_t v10 = (void **)pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath(v9);
  double v11 = v32;
  int v12 = *v10;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v32 + 1);
  sub_21697C414(&v32);
  if (v11 == v12) {
    goto LABEL_42;
  }
  sub_216EFBA18((uint64_t)&v32, (uint64_t)v38, a3 + 4);
  int v13 = sub_216EFDC2C((void *)(a1 + 432), (uint64_t)&v32);
  if (!v13)
  {
LABEL_36:
    if ((v37 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v37 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    if ((v36 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v36 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v35);
    sub_21697C414(&v34);
    if (v33) {
      sub_216D16E0C(v33);
    }
LABEL_42:
    if (sub_216EF5D20(1))
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_PrimContext::ToString((pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_PrimContext *)a3, (uint64_t)&v32);
      int v24 = v35 >= 0 ? &v32 : (void **)v32;
      pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"[BBox Cache] Computing purpose without cached parent for <%s>\n", v22, v23, v24);
      if (SHIBYTE(v35) < 0) {
        operator delete(v32);
      }
    }
    pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputePurposeInfo((pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)v43, (uint64_t)&v32);
    if (&v32 == v3)
    {
      unint64_t v25 = (unint64_t)v32;
      *(unsigned char *)(a2 + 48) = (_BYTE)v33;
      if ((v25 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v25 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
    }
    else
    {
      if (((unint64_t)*v3 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)((unint64_t)*v3 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      *(void *)(a2 + 4sub_2168EBBB8(&a9, 0) = v32;
      int v32 = 0;
      *(unsigned char *)(a2 + 48) = (_BYTE)v33;
    }
    if ((v42 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v42 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v41);
    goto LABEL_57;
  }
  if (!v13[12])
  {
    if (sub_216EF5D20(1))
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_PrimContext::ToString((pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_PrimContext *)a3, (uint64_t)&v29);
      int v16 = v31;
      uint64_t v17 = (void **)v29;
      pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_PrimContext::ToString((pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_PrimContext *)&v32, (uint64_t)__p);
      uint64_t v20 = &v29;
      if (v16 < 0) {
        uint64_t v20 = v17;
      }
      if (v28 >= 0) {
        uint64_t v21 = __p;
      }
      else {
        uint64_t v21 = (void **)__p[0];
      }
      pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"[BBox Cache] Computing purpose for <%s> before purposeof parent <%s> is cached\n", v18, v19, v20, v21);
      if (v28 < 0) {
        operator delete(__p[0]);
      }
      if (v31 < 0) {
        operator delete(v29);
      }
    }
    goto LABEL_36;
  }
  pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputePurposeInfo((pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)v43, v13 + 12, (uint64_t)&v29);
  if (&v29 == v3)
  {
    unint64_t v26 = (unint64_t)v29;
    *(unsigned char *)(a2 + 48) = v30;
    if ((v26 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v26 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  else
  {
    if (((unint64_t)*v3 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)((unint64_t)*v3 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    *(void *)(a2 + 4sub_2168EBBB8(&a9, 0) = v29;
    uint64_t v29 = 0;
    *(unsigned char *)(a2 + 48) = v30;
  }
  if ((v37 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v37 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  if ((v36 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v36 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v35);
  sub_21697C414(&v34);
  if (v33) {
    sub_216D16E0C(v33);
  }
  if ((v42 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v42 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v41);
LABEL_57:
  sub_21697C414(&v40);
  if (v39) {
    sub_216D16E0C(v39);
  }
  pxrInternal__aapl__pxrReserved__::UsdGeomImageable::~UsdGeomImageable((pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)v43);
}

void sub_216EF9880(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,uint64_t a30,char a31)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  sub_216EF75B4((uint64_t)&a23);
  sub_216D16AD8((uint64_t)&a31);
  pxrInternal__aapl__pxrReserved__::UsdGeomImageable::~UsdGeomImageable((pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)(v31 - 72));
  _Unwind_Resume(a1);
}

void sub_216EF9938(void *a1, uint64_t a2)
{
  sub_216F02268(&v5, a2);
  uint64_t v3 = (std::__shared_weak_count *)a1[1];
  long long v4 = v5;
  *(void *)&long long v5 = *a1;
  *((void *)&v5 + 1) = v3;
  *(_OWORD *)a1 = v4;
  if (v3) {
    sub_216784EC4(v3);
  }
}

BOOL sub_216EF9980(pxrInternal__aapl__pxrReserved__::UsdPrim *a1)
{
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)v8, a1);
  _OWORD v8[3] = 0;
  uint64_t v7 = 0;
  v8[0] = &unk_26C768810;
  if (pxrInternal__aapl__pxrReserved__::UsdModelAPI::GetKind((pxrInternal__aapl__pxrReserved__::UsdModelAPI *)v8, (pxrInternal__aapl__pxrReserved__::TfToken *)&v7))
  {
    uint64_t v2 = (atomic_uint **)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::KindTokens);
    if (!v2) {
      uint64_t v2 = sub_2169738F8(&pxrInternal__aapl__pxrReserved__::KindTokens);
    }
    if (pxrInternal__aapl__pxrReserved__::KindRegistry::IsA((pxrInternal__aapl__pxrReserved__::KindRegistry *)&v7, (const pxrInternal__aapl__pxrReserved__::TfToken *)(v2 + 1), v1))
    {
      BOOL IsA = 1;
    }
    else
    {
      long long v5 = (atomic_uint **)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::KindTokens);
      if (!v5) {
        long long v5 = sub_2169738F8(&pxrInternal__aapl__pxrReserved__::KindTokens);
      }
      BOOL IsA = pxrInternal__aapl__pxrReserved__::KindRegistry::IsA((pxrInternal__aapl__pxrReserved__::KindRegistry *)&v7, (const pxrInternal__aapl__pxrReserved__::TfToken *)(v5 + 4), v3);
    }
  }
  else
  {
    BOOL IsA = 0;
  }
  if ((v7 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v7 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::UsdModelAPI::~UsdModelAPI((pxrInternal__aapl__pxrReserved__::UsdModelAPI *)v8);
  return IsA;
}

void sub_216EF9A70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  if ((a3 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(a3 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::UsdModelAPI::~UsdModelAPI((pxrInternal__aapl__pxrReserved__::UsdModelAPI *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_216EF9A9C(uint64_t *a1, uint64_t a2)
{
  unint64_t v6 = a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  unint64_t v5 = v6;
  unint64_t v7 = *(void *)(v4 - 8);
  if (v7 >= v6)
  {
    uint64_t v10 = 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(v7 - *a1) >> 5);
    if ((unint64_t)(v10 + 1) > 0x124924924924924) {
      sub_21677CB10();
    }
    unint64_t v11 = 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(v5 - *a1) >> 5);
    uint64_t v12 = 2 * v11;
    if (2 * v11 <= v10 + 1) {
      uint64_t v12 = v10 + 1;
    }
    if (v11 >= 0x92492492492492) {
      unint64_t v13 = 0x124924924924924;
    }
    else {
      unint64_t v13 = v12;
    }
    uint64_t v19 = v4;
    if (v13) {
      uint64_t v14 = (char *)sub_216F025A0(v4, v13);
    }
    else {
      uint64_t v14 = 0;
    }
    uint64_t v15 = v14;
    int v16 = &v14[224 * v10];
    long long v18 = &v14[224 * v13];
    sub_216F02440((uint64_t)v16, a2);
    uint64_t v17 = v16 + 224;
    sub_216F02518(a1, &v15);
    uint64_t v9 = a1[1];
    uint64_t result = sub_216F025EC((uint64_t)&v15);
  }
  else
  {
    uint64_t result = sub_216F02440(*(void *)(v4 - 8), a2);
    uint64_t v9 = v7 + 224;
    a1[1] = v7 + 224;
  }
  a1[1] = v9;
  return result;
}

void sub_216EF9BC4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216F025EC((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_216EF9BD8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v3 = *(void *)(a1 + 24);
  if ((v3 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v3 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 20));
  sub_21697C414((_DWORD *)(a1 + 16));
  uint64_t v4 = *(atomic_ullong **)(a1 + 8);
  if (v4) {
    sub_216D16E0C(v4);
  }
  return a1;
}

uint64_t sub_216EF9C4C(uint64_t a1)
{
  sub_216EF9C88(a1, *(void **)(a1 + 16));
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void sub_216EF9C88(uint64_t a1, void *a2)
{
  if (a2)
  {
    uint64_t v2 = a2;
    do
    {
      uint64_t v3 = (void *)*v2;
      sub_216EF9CCC((uint64_t)(v2 + 2));
      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
}

void sub_216EF9CCC(uint64_t a1)
{
  uint64_t v4 = (void **)(a1 + 32);
  sub_216EF9D3C(&v4);
  uint64_t v2 = *(void *)(a1 + 24);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 20));
  sub_21697C414((_DWORD *)(a1 + 16));
  uint64_t v3 = *(atomic_ullong **)(a1 + 8);
  if (v3) {
    sub_216D16E0C(v3);
  }
}

void sub_216EF9D3C(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    unint64_t v5 = v2;
    if ((void *)v4 != v2)
    {
      do
        uint64_t v4 = sub_216EF9DC0(v4 - 136);
      while ((void *)v4 != v2);
      unint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t sub_216EF9DC0(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 120);
  if (v2 != -1) {
    ((void (*)(char *, uint64_t))off_26C76C2C8[v2])(&v4, a1);
  }
  *(_DWORD *)(a1 + 12sub_2168EBBB8(&a9, 0) = -1;
  return a1;
}

void sub_216EF9E1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if ((v3 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v3 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a2 + 20));
  sub_21697C414((_DWORD *)(a2 + 16));
  char v4 = *(atomic_ullong **)(a2 + 8);
  if (v4)
  {
    sub_216D16E0C(v4);
  }
}

uint64_t sub_216EF9E8C(uint64_t a1, uint64_t a2)
{
  return sub_216D2FE74(a2);
}

uint64_t sub_216EF9E94(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  sub_21678A04C(a1, *(void *)(a2 + 8));
  for (uint64_t i = *(void **)(a2 + 16); i; uint64_t i = (void *)*i)
    sub_216EF9F0C(a1, (uint64_t)(i + 2), (uint64_t)(i + 2));
  return a1;
}

void sub_216EF9EF4(_Unwind_Exception *a1)
{
  sub_216EF9C4C(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_216EF9F0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v22 = 0;
  char v23 = 0;
  sub_216D6EF4C((uint64_t)&v22, (unsigned int *)a2, (void *)(a2 + 8), (unsigned int *)(a2 + 16), (void *)(a2 + 24));
  unint64_t v7 = bswap64(0x9E3779B97F4A7C55 * (void)v22);
  unint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      unint64_t v3 = v7;
      if (v7 >= v8) {
        unint64_t v3 = v7 % v8;
      }
    }
    else
    {
      unint64_t v3 = (v8 - 1) & v7;
    }
    uint64_t v10 = *(uint64_t ***)(*(void *)a1 + 8 * v3);
    if (v10)
    {
      for (uint64_t i = *v10; i; uint64_t i = (uint64_t *)*i)
      {
        unint64_t v12 = i[1];
        if (v12 == v7)
        {
          if (*((_DWORD *)i + 4) == *(_DWORD *)a2
            && i[3] == *(void *)(a2 + 8)
            && i[4] == *(void *)(a2 + 16)
            && (i[5] & 0xFFFFFFFFFFFFFFF8) == (*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFF8))
          {
            return i;
          }
        }
        else
        {
          if (v9.u32[0] > 1uLL)
          {
            if (v12 >= v8) {
              v12 %= v8;
            }
          }
          else
          {
            v12 &= v8 - 1;
          }
          if (v12 != v3) {
            break;
          }
        }
      }
    }
  }
  sub_216EFA1D4(a1, v7, a3, (uint64_t)&v22);
  float v13 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v14 = *(float *)(a1 + 32);
  if (!v8 || (float)(v14 * (float)v8) < v13)
  {
    BOOL v15 = 1;
    if (v8 >= 3) {
      BOOL v15 = (v8 & (v8 - 1)) != 0;
    }
    unint64_t v16 = v15 | (2 * v8);
    unint64_t v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17) {
      size_t v18 = v17;
    }
    else {
      size_t v18 = v16;
    }
    sub_21678A04C(a1, v18);
    unint64_t v8 = *(void *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v7 >= v8) {
        unint64_t v3 = v7 % v8;
      }
      else {
        unint64_t v3 = v7;
      }
    }
    else
    {
      unint64_t v3 = (v8 - 1) & v7;
    }
  }
  uint64_t v19 = *(uint64_t **)(*(void *)a1 + 8 * v3);
  if (v19)
  {
    uint64_t *v22 = *v19;
    *uint64_t v19 = (uint64_t)v22;
  }
  else
  {
    uint64_t *v22 = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v22;
    *(void *)(*(void *)a1 + 8 * v3) = a1 + 16;
    if (*v22)
    {
      unint64_t v20 = *(void *)(*v22 + 8);
      if ((v8 & (v8 - 1)) != 0)
      {
        if (v20 >= v8) {
          v20 %= v8;
        }
      }
      else
      {
        v20 &= v8 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v2sub_2168EBBB8(&a9, 0) = v22;
    }
  }
  uint64_t i = v22;
  uint64_t v22 = 0;
  ++*(void *)(a1 + 24);
  sub_216EFA5B8((uint64_t)&v22, 0);
  return i;
}

void sub_216EFA1BC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216EFA5B8((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_216EFA1D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 16;
  unint64_t v8 = operator new(0xD8uLL);
  *(void *)a4 = v8;
  *(void *)(a4 + 8) = v7;
  *(unsigned char *)(a4 + 16) = 0;
  *unint64_t v8 = 0;
  v8[1] = a2;
  uint64_t result = sub_216EFA24C((uint64_t)(v8 + 2), a3);
  *(unsigned char *)(a4 + 16) = 1;
  return result;
}

void sub_216EFA234(_Unwind_Exception *a1)
{
  sub_216EFA5B8(v1, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_216EFA24C(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)(a1 + 8) = v4;
  if (v4) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 48), 1uLL, memory_order_relaxed);
  }
  sub_216981010((_DWORD *)(a1 + 16), (_DWORD *)(a2 + 16));
  sub_21698105C((_DWORD *)(a1 + 20), (_DWORD *)(a2 + 20));
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 24) = v5;
  if ((v5 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v5 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    *(void *)(a1 + 24) &= 0xFFFFFFFFFFFFFFF8;
  }
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 4sub_2168EBBB8(&a9, 0) = 0;
  *(void *)(a1 + 48) = 0;
  sub_216EFA34C((void *)(a1 + 32), *(void *)(a2 + 32), *(void *)(a2 + 40), 0xF0F0F0F0F0F0F0F1 * ((uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 3));
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  long long v6 = *(_OWORD *)(a2 + 80);
  long long v7 = *(_OWORD *)(a2 + 96);
  long long v8 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 8sub_2168EBBB8(&a9, 0) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  long long v9 = *(_OWORD *)(a2 + 144);
  long long v10 = *(_OWORD *)(a2 + 160);
  long long v11 = *(_OWORD *)(a2 + 176);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(_OWORD *)(a1 + 16sub_2168EBBB8(&a9, 0) = v10;
  *(_OWORD *)(a1 + 176) = v11;
  *(_OWORD *)(a1 + 144) = v9;
  return a1;
}

void sub_216EFA338(_Unwind_Exception *a1)
{
  sub_216D16AD8(v1);
  _Unwind_Resume(a1);
}

void *sub_216EFA34C(void *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    long long v6 = result;
    sub_216EFA3D4(result, a4);
    uint64_t result = (void *)sub_216EFA428((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_216EFA3B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  sub_216EF9D3C(&a9);
  _Unwind_Resume(a1);
}

char *sub_216EFA3D4(void *a1, unint64_t a2)
{
  if (a2 >= 0x1E1E1E1E1E1E1E2) {
    sub_21677CB10();
  }
  uint64_t result = (char *)sub_216D3D750((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[136 * v4];
  return result;
}

uint64_t sub_216EFA428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 != a3)
  {
    uint64_t v7 = 0;
    do
    {
      uint64_t v8 = sub_216EFA4C8(a4 + v7, a2 + v7);
      int v9 = *(_DWORD *)(a2 + v7 + 128);
      *(unsigned char *)(v8 + 132) = *(unsigned char *)(a2 + v7 + 132);
      *(_DWORD *)(v8 + 128) = v9;
      v7 += 136;
    }
    while (a2 + v7 != a3);
    a4 += v7;
  }
  return a4;
}

void sub_216EFA4A4(_Unwind_Exception *exception_object)
{
  if (v2)
  {
    uint64_t v4 = v1 - 136;
    do
    {
      sub_216EF9DC0(v4 + v2);
      v2 -= 136;
    }
    while (v2);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_216EFA4C8(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = 0;
  *(_DWORD *)(a1 + 12sub_2168EBBB8(&a9, 0) = -1;
  sub_216EFA510(a1, a2);
  return a1;
}

void sub_216EFA4FC(_Unwind_Exception *a1)
{
  sub_216EF9DC0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_216EFA510(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  uint64_t v4 = *(unsigned int *)(result + 120);
  if (v4 != -1) {
    uint64_t result = ((uint64_t (*)(char *, uint64_t))off_26C76C2C8[v4])(&v7, result);
  }
  *(_DWORD *)(v3 + 12sub_2168EBBB8(&a9, 0) = -1;
  uint64_t v5 = *(unsigned int *)(a2 + 120);
  if (v5 != -1)
  {
    uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))*(&off_26C76C2D8 + v5))(&v6, v3, a2);
    *(_DWORD *)(v3 + 12sub_2168EBBB8(&a9, 0) = v5;
  }
  return result;
}

uint64_t sub_216EFA5A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_216D3C05C(a2, a3);
}

uint64_t sub_216EFA5AC(int a1, pxrInternal__aapl__pxrReserved__::UsdAttributeQuery *this, pxrInternal__aapl__pxrReserved__::UsdAttributeQuery *a3)
{
  return pxrInternal__aapl__pxrReserved__::UsdAttributeQuery::UsdAttributeQuery(this, a3);
}

void sub_216EFA5B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_216EF9CCC((uint64_t)v2 + 16);
    }
    operator delete(v2);
  }
}

void sub_216EFA610(void *a1, void *a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v6 = a1[1];
  if (v6)
  {
    for (uint64_t i = 0; i != v6; ++i)
      *(void *)(*a1 + 8 * i) = 0;
    uint64_t v8 = (void *)a1[2];
    a1[2] = 0;
    a1[3] = 0;
    if (v8) {
      BOOL v9 = a2 == a3;
    }
    else {
      BOOL v9 = 1;
    }
    if (v9)
    {
      uint64_t v10 = v8;
    }
    else
    {
      do
      {
        v12[0] = v8 + 2;
        v12[1] = v8 + 6;
        sub_216EFA7B8(v12, (uint64_t)(v4 + 2));
        uint64_t v10 = (void *)*v8;
        sub_216EFA720(a1, (uint64_t)v8);
        uint64_t v4 = (void *)*v4;
        if (v10) {
          BOOL v11 = v4 == a3;
        }
        else {
          BOOL v11 = 1;
        }
        uint64_t v8 = v10;
      }
      while (!v11);
    }
    sub_216EF9C88((uint64_t)a1, v10);
  }
  while (v4 != a3)
  {
    sub_216EFB2DC(a1, (uint64_t)(v4 + 2));
    uint64_t v4 = (void *)*v4;
  }
}

void sub_216EFA6F0(void *a1)
{
  __cxa_begin_catch(a1);
  sub_216EF9C88(v1, v2);
  __cxa_rethrow();
}

void sub_216EFA70C(_Unwind_Exception *a1)
{
}

uint64_t sub_216EFA720(void *a1, uint64_t a2)
{
  uint64_t v4 = a2 + 16;
  uint64_t v8 = 0;
  char v9 = 0;
  sub_216D6EF4C((uint64_t)&v8, (unsigned int *)(a2 + 16), (void *)(a2 + 24), (unsigned int *)(a2 + 32), (void *)(a2 + 40));
  unint64_t v5 = bswap64(0x9E3779B97F4A7C55 * v8);
  *(void *)(a2 + 8) = v5;
  uint64_t v6 = (void *)sub_216EFAEB4((uint64_t)a1, v5, v4);
  sub_216862FF0(a1, (void *)a2, v6);
  return a2;
}

void *sub_216EFA7B8(void *a1, uint64_t a2)
{
  uint64_t v4 = (_DWORD *)*a1;
  *(_DWORD *)*a1 = *(_DWORD *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 48), 1uLL, memory_order_relaxed);
  }
  uint64_t v6 = (atomic_ullong *)*((void *)v4 + 1);
  *((void *)v4 + 1) = v5;
  if (v6) {
    sub_216D16E0C(v6);
  }
  sub_2169C487C(v4 + 4, (_DWORD *)(a2 + 16));
  sub_2169C48D4(v4 + 5, (_DWORD *)(a2 + 20));
  sub_2168D2318((void *)v4 + 3, (void *)(a2 + 24));
  uint64_t v7 = a1[1];
  if (v7 != a2 + 32) {
    sub_216EFA8A4(a1[1], *(void *)(a2 + 32), *(void *)(a2 + 40), 0xF0F0F0F0F0F0F0F1 * ((uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 3));
  }
  *(unsigned char *)(v7 + 24) = *(unsigned char *)(a2 + 56);
  *(_OWORD *)(v7 + 32) = *(_OWORD *)(a2 + 64);
  long long v8 = *(_OWORD *)(a2 + 80);
  long long v9 = *(_OWORD *)(a2 + 96);
  long long v10 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(v7 + 8sub_2168EBBB8(&a9, 0) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(v7 + 96) = v10;
  *(_OWORD *)(v7 + 48) = v8;
  *(_OWORD *)(v7 + 64) = v9;
  long long v11 = *(_OWORD *)(a2 + 144);
  long long v12 = *(_OWORD *)(a2 + 160);
  long long v13 = *(_OWORD *)(a2 + 176);
  *(unsigned char *)(v7 + 16sub_2168EBBB8(&a9, 0) = *(unsigned char *)(a2 + 192);
  *(_OWORD *)(v7 + 128) = v12;
  *(_OWORD *)(v7 + 144) = v13;
  *(_OWORD *)(v7 + 112) = v11;
  return a1;
}

uint64_t sub_216EFA8A4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = a1 + 16;
  long long v9 = *(void **)a1;
  if (0xF0F0F0F0F0F0F0F1 * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 3) < a4)
  {
    sub_216EFAA10((void **)a1);
    if (a4 > 0x1E1E1E1E1E1E1E1) {
      sub_21677CB10();
    }
    unint64_t v10 = 0xE1E1E1E1E1E1E1E2 * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 3);
    if (v10 <= a4) {
      unint64_t v10 = a4;
    }
    if (0xF0F0F0F0F0F0F0F1 * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 3) >= 0xF0F0F0F0F0F0F0) {
      unint64_t v11 = 0x1E1E1E1E1E1E1E1;
    }
    else {
      unint64_t v11 = v10;
    }
    sub_216EFA3D4((void *)a1, v11);
    uint64_t result = sub_216EFA428(v8, a2, a3, *(void *)(a1 + 8));
    goto LABEL_11;
  }
  if (0xF0F0F0F0F0F0F0F1 * ((uint64_t)(*(void *)(a1 + 8) - (void)v9) >> 3) < a4)
  {
    uint64_t v13 = a2 + 8 * ((uint64_t)(*(void *)(a1 + 8) - (void)v9) >> 3);
    sub_216EFAA70(a2, v13, (uint64_t)v9);
    uint64_t result = sub_216EFA428(v8, v13, a3, *(void *)(a1 + 8));
LABEL_11:
    *(void *)(a1 + 8) = result;
    return result;
  }
  sub_216EFAA70(a2, a3, (uint64_t)v9);
  uint64_t v15 = v14;
  uint64_t result = *(void *)(a1 + 8);
  if (result != v14)
  {
    do
      uint64_t result = sub_216EF9DC0(result - 136);
    while (result != v15);
  }
  *(void *)(a1 + 8) = v15;
  return result;
}

void sub_216EFAA00(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_216EFAA08(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_216EFAA10(void **a1)
{
  uint64_t v1 = *a1;
  if (*a1)
  {
    uint64_t v3 = (uint64_t)a1[1];
    uint64_t v4 = v1;
    if ((void *)v3 != v1)
    {
      do
        uint64_t v3 = sub_216EF9DC0(v3 - 136);
      while ((void *)v3 != v1);
      uint64_t v4 = *a1;
    }
    a1[1] = v1;
    operator delete(v4);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

uint64_t sub_216EFAA70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1;
  if (a1 == a2) {
    return a1;
  }
  uint64_t v5 = a2;
  do
  {
    sub_216EFAAE4(a3, v4);
    int v6 = *(_DWORD *)(v4 + 128);
    *(unsigned char *)(a3 + 132) = *(unsigned char *)(v4 + 132);
    *(_DWORD *)(a3 + 128) = v6;
    a3 += 136;
    v4 += 136;
  }
  while (v4 != v5);
  return v5;
}

uint64_t sub_216EFAAE4(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  uint64_t v3 = *(unsigned int *)(result + 120);
  uint64_t v4 = *(unsigned int *)(a2 + 120);
  if (v3 == -1)
  {
    if (v4 == -1) {
      return result;
    }
  }
  else if (v4 == -1)
  {
    uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))off_26C76C2C8[v3])(&v6, result, a2);
    *(_DWORD *)(v2 + 12sub_2168EBBB8(&a9, 0) = -1;
    return result;
  }
  uint64_t v5 = result;
  return ((uint64_t (*)(uint64_t *, uint64_t, uint64_t))off_26C76C2E8[v4])(&v5, result, a2);
}

void sub_216EFAB74(uint64_t *a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_216EFAB7C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_216EFAD94(*a1, a2, a3);
}

void sub_216EFAB84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(_DWORD *)(a1 + 120))
  {
    v7[0] = a1;
    v7[1] = a3;
    sub_216EFAC30(v7);
  }
  else
  {
    *(_DWORD *)a2 = *(_DWORD *)a3;
    uint64_t v5 = *(void *)(a3 + 8);
    if (v5) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 48), 1uLL, memory_order_relaxed);
    }
    char v6 = *(atomic_ullong **)(a2 + 8);
    *(void *)(a2 + 8) = v5;
    if (v6) {
      sub_216D16E0C(v6);
    }
    sub_2169C487C((int *)(a2 + 16), (_DWORD *)(a3 + 16));
    sub_2169C48D4((int *)(a2 + 20), (_DWORD *)(a3 + 20));
    sub_2168D2318((void *)(a2 + 24), (void *)(a3 + 24));
  }
}

void sub_216EFAC30(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  int v5 = *(_DWORD *)v2;
  uint64_t v3 = *(atomic_ullong **)(v2 + 8);
  char v6 = v3;
  if (v3) {
    atomic_fetch_add_explicit(v3 + 6, 1uLL, memory_order_relaxed);
  }
  sub_216981010(&v7, (_DWORD *)(v2 + 16));
  sub_21698105C(&v8, (_DWORD *)(v2 + 20));
  uint64_t v4 = *(void *)(v2 + 24);
  uint64_t v9 = v4;
  if ((v4 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v4 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v9 &= 0xFFFFFFFFFFFFFFF8;
  }
  sub_216EFAD28(v1, (uint64_t)&v5);
  if ((v9 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v9 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v8);
  sub_21697C414(&v7);
  if (v6) {
    sub_216D16E0C(v6);
  }
}

void sub_216EFAD14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_216EFAD28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(unsigned int *)(a1 + 120);
  if (v4 != -1) {
    ((void (*)(char *, uint64_t))off_26C76C2C8[v4])(&v6, a1);
  }
  *(_DWORD *)(a1 + 12sub_2168EBBB8(&a9, 0) = -1;
  uint64_t result = sub_216D41CB0(a1, a2);
  *(_DWORD *)(a1 + 12sub_2168EBBB8(&a9, 0) = 0;
  return result;
}

uint64_t sub_216EFAD94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(_DWORD *)(a1 + 120) == 1)
  {
    return pxrInternal__aapl__pxrReserved__::UsdAttributeQuery::operator=(a2, a3);
  }
  else
  {
    v4[0] = a1;
    v4[1] = a3;
    return sub_216EFADEC((uint64_t)v4);
  }
}

uint64_t sub_216EFADEC(uint64_t a1)
{
  uint64_t v1 = *(void *)a1;
  pxrInternal__aapl__pxrReserved__::UsdAttributeQuery::UsdAttributeQuery((pxrInternal__aapl__pxrReserved__::UsdAttributeQuery *)v3, *(const pxrInternal__aapl__pxrReserved__::UsdAttributeQuery **)(a1 + 8));
  sub_216EFAE44(v1, (uint64_t)v3);
  return sub_216D2FE74((uint64_t)v3);
}

void sub_216EFAE30(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216D2FE74((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_216EFAE44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(unsigned int *)(a1 + 120);
  if (v4 != -1) {
    ((void (*)(char *, uint64_t))off_26C76C2C8[v4])(&v6, a1);
  }
  *(_DWORD *)(a1 + 12sub_2168EBBB8(&a9, 0) = -1;
  uint64_t result = sub_216D300C4(a1, a2);
  *(_DWORD *)(a1 + 12sub_2168EBBB8(&a9, 0) = 1;
  return result;
}

uint64_t sub_216EFAEB4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  unint64_t v6 = *(void *)(a1 + 8);
  float v7 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v8 = *(float *)(a1 + 32);
  if (!v6 || (float)(v8 * (float)v6) < v7)
  {
    uint64_t v9 = 2 * v6;
    BOOL v10 = v6 < 3 || (v6 & (v6 - 1)) != 0;
    size_t v11 = v10 | v9;
    unint64_t v12 = vcvtps_u32_f32(v7 / v8);
    if (v11 <= v12) {
      size_t v13 = v12;
    }
    else {
      size_t v13 = v11;
    }
    sub_216EFB040(a1, v13);
    unint64_t v6 = *(void *)(a1 + 8);
  }
  uint8x8_t v14 = (uint8x8_t)vcnt_s8((int8x8_t)v6);
  v14.i16[0] = vaddlv_u8(v14);
  if (v14.u32[0] > 1uLL)
  {
    unint64_t v15 = a2;
    if (v6 <= a2) {
      unint64_t v15 = a2 % v6;
    }
  }
  else
  {
    unint64_t v15 = (v6 - 1) & a2;
  }
  uint64_t v16 = *(void *)(*(void *)a1 + 8 * v15);
  if (!v16) {
    return 0;
  }
  int v17 = 0;
  do
  {
    uint64_t result = v16;
    uint64_t v16 = *(void *)v16;
    if (!v16) {
      break;
    }
    unint64_t v19 = *(void *)(v16 + 8);
    if (v14.u32[0] > 1uLL)
    {
      unint64_t v20 = *(void *)(v16 + 8);
      if (v19 >= v6) {
        unint64_t v20 = v19 % v6;
      }
    }
    else
    {
      unint64_t v20 = v19 & (v6 - 1);
    }
    if (v20 != v15) {
      break;
    }
    BOOL v21 = v19 == a2
       && *(_DWORD *)(v16 + 16) == *(_DWORD *)a3
       && *(void *)(v16 + 24) == *(void *)(a3 + 8)
       && *(void *)(v16 + 32) == *(void *)(a3 + 16)
       && (*(void *)(v16 + 40) & 0xFFFFFFFFFFFFFFF8) == (*(void *)(a3 + 24) & 0xFFFFFFFFFFFFFFF8);
    int v22 = v17 & !v21;
    v17 |= v21;
  }
  while (v22 != 1);
  return result;
}

void sub_216EFB040(uint64_t a1, size_t __n)
{
  if (__n == 1)
  {
    size_t prime = 2;
  }
  else
  {
    size_t prime = __n;
    if ((__n & (__n - 1)) != 0) {
      size_t prime = std::__next_prime(__n);
    }
  }
  int8x8_t v4 = *(int8x8_t *)(a1 + 8);
  if (prime > *(void *)&v4) {
    goto LABEL_16;
  }
  if (prime < *(void *)&v4)
  {
    unint64_t v5 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(void *)&v4 < 3uLL || (uint8x8_t v6 = (uint8x8_t)vcnt_s8(v4), v6.i16[0] = vaddlv_u8(v6), v6.u32[0] > 1uLL))
    {
      unint64_t v5 = std::__next_prime(v5);
    }
    else
    {
      uint64_t v7 = 1 << -(char)__clz(v5 - 1);
      if (v5 >= 2) {
        unint64_t v5 = v7;
      }
    }
    if (prime <= v5) {
      size_t prime = v5;
    }
    if (prime < *(void *)&v4)
    {
LABEL_16:
      sub_216EFB130(a1, prime);
    }
  }
}

void sub_216EFB130(uint64_t a1, unint64_t a2)
{
  if (a2)
  {
    if (a2 >> 61) {
      sub_21677CA1C();
    }
    int8x8_t v4 = operator new(8 * a2);
    unint64_t v5 = *(void **)a1;
    *(void *)a1 = v4;
    if (v5) {
      operator delete(v5);
    }
    uint64_t v6 = 0;
    *(void *)(a1 + 8) = a2;
    do
      *(void *)(*(void *)a1 + 8 * v6++) = 0;
    while (a2 != v6);
    uint64_t v7 = *(uint64_t ***)(a1 + 16);
    if (v7)
    {
      unint64_t v8 = (unint64_t)v7[1];
      uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)a2);
      v9.i16[0] = vaddlv_u8(v9);
      if (v9.u32[0] > 1uLL)
      {
        if (v8 >= a2) {
          v8 %= a2;
        }
      }
      else
      {
        v8 &= a2 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v8) = a1 + 16;
      for (uint64_t i = *v7; *v7; uint64_t i = *v7)
      {
        unint64_t v12 = i[1];
        if (v9.u32[0] > 1uLL)
        {
          if (v12 >= a2) {
            v12 %= a2;
          }
        }
        else
        {
          v12 &= a2 - 1;
        }
        if (v12 == v8)
        {
          uint64_t v7 = (uint64_t **)i;
        }
        else
        {
          size_t v13 = i;
          if (*(void *)(*(void *)a1 + 8 * v12))
          {
            do
            {
              uint8x8_t v14 = v13;
              size_t v13 = (uint64_t *)*v13;
            }
            while (v13
                 && *((_DWORD *)i + 4) == *((_DWORD *)v13 + 4)
                 && i[3] == v13[3]
                 && i[4] == v13[4]
                 && (i[5] & 0xFFFFFFFFFFFFFFF8) == (v13[5] & 0xFFFFFFFFFFFFFFF8));
            *uint64_t v7 = v13;
            *uint8x8_t v14 = **(void **)(*(void *)a1 + 8 * v12);
            **(void **)(*(void *)a1 + 8 * v12) = i;
          }
          else
          {
            *(void *)(*(void *)a1 + 8 * v12) = v7;
            uint64_t v7 = (uint64_t **)i;
            unint64_t v8 = v12;
          }
        }
      }
    }
  }
  else
  {
    BOOL v10 = *(void **)a1;
    *(void *)a1 = 0;
    if (v10) {
      operator delete(v10);
    }
    *(void *)(a1 + 8) = 0;
  }
}

uint64_t sub_216EFB2DC(void *a1, uint64_t a2)
{
  sub_216EFB348((uint64_t)a1, a2, (uint64_t)v5);
  uint64_t v3 = sub_216EFA720(a1, v5[0]);
  v5[0] = 0;
  sub_216EFA5B8((uint64_t)v5, 0);
  return v3;
}

void sub_216EFB330(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216EFA5B8((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_216EFB348@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 16;
  uint64_t v6 = operator new(0xD8uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  *(void *)uint64_t v6 = 0;
  *((void *)v6 + 1) = 0;
  sub_216EFA24C((uint64_t)v6 + 16, a2);
  *(unsigned char *)(a3 + 16) = 1;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t result = sub_216D6EF4C((uint64_t)&v8, (unsigned int *)v6 + 4, (void *)v6 + 3, (unsigned int *)v6 + 8, (void *)v6 + 5);
  *((void *)v6 + 1) = bswap64(0x9E3779B97F4A7C55 * v8);
  return result;
}

void sub_216EFB3F0(_Unwind_Exception *a1)
{
  sub_216EFA5B8(v1, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_216EFB408(uint64_t a1, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  if (!v2 || (unint64_t v3 = *(void *)(v2 + 56), (v3 & 0x800) != 0))
  {
    pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(*(pxrInternal__aapl__pxrReserved__ **)(a1 + 8), a2);
    unint64_t v3 = *(void *)(v2 + 56);
  }
  return (v3 >> 2) & 1;
}

void *sub_216EFB444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  int v24 = 0;
  char v25 = 0;
  sub_216EFB75C((uint64_t)&v24, a2);
  unint64_t v8 = bswap64(0x9E3779B97F4A7C55 * (void)v24);
  unint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    uint8x8_t v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    unint64_t v11 = v10.u32[0];
    if (v10.u32[0] > 1uLL)
    {
      unint64_t v4 = v8;
      if (v8 >= v9) {
        unint64_t v4 = v8 % v9;
      }
    }
    else
    {
      unint64_t v4 = (v9 - 1) & v8;
    }
    unint64_t v12 = *(void **)(*(void *)a1 + 8 * v4);
    if (v12)
    {
      size_t v13 = (void *)*v12;
      if (*v12)
      {
        do
        {
          unint64_t v14 = v13[1];
          if (v14 == v8)
          {
            if (sub_216EFB7C0((uint64_t)(v13 + 2), a2)) {
              return v13;
            }
          }
          else
          {
            if (v11 > 1)
            {
              if (v14 >= v9) {
                v14 %= v9;
              }
            }
            else
            {
              v14 &= v9 - 1;
            }
            if (v14 != v4) {
              break;
            }
          }
          size_t v13 = (void *)*v13;
        }
        while (v13);
      }
    }
  }
  sub_216EFB6EC(a1, v8, a4, (uint64_t)&v24);
  float v15 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v16 = *(float *)(a1 + 32);
  if (!v9 || (float)(v16 * (float)v9) < v15)
  {
    BOOL v17 = 1;
    if (v9 >= 3) {
      BOOL v17 = (v9 & (v9 - 1)) != 0;
    }
    unint64_t v18 = v17 | (2 * v9);
    unint64_t v19 = vcvtps_u32_f32(v15 / v16);
    if (v18 <= v19) {
      size_t v20 = v19;
    }
    else {
      size_t v20 = v18;
    }
    sub_21678A04C(a1, v20);
    unint64_t v9 = *(void *)(a1 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9) {
        unint64_t v4 = v8 % v9;
      }
      else {
        unint64_t v4 = v8;
      }
    }
    else
    {
      unint64_t v4 = (v9 - 1) & v8;
    }
  }
  BOOL v21 = *(void **)(*(void *)a1 + 8 * v4);
  if (v21)
  {
    *int v24 = *v21;
    *BOOL v21 = v24;
  }
  else
  {
    *int v24 = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v24;
    *(void *)(*(void *)a1 + 8 * v4) = a1 + 16;
    if (*v24)
    {
      unint64_t v22 = *(void *)(*v24 + 8);
      if ((v9 & (v9 - 1)) != 0)
      {
        if (v22 >= v9) {
          v22 %= v9;
        }
      }
      else
      {
        v22 &= v9 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v22) = v24;
    }
  }
  size_t v13 = v24;
  int v24 = 0;
  ++*(void *)(a1 + 24);
  sub_216EFB904((uint64_t)&v24, 0);
  return v13;
}

void sub_216EFB6D4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216EFB904((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_216EFB6EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 16;
  unint64_t v8 = operator new(0x78uLL);
  *(void *)a4 = v8;
  *(void *)(a4 + 8) = v7;
  *(unsigned char *)(a4 + 16) = 0;
  *unint64_t v8 = 0;
  v8[1] = a2;
  uint64_t result = sub_216EFB82C((uint64_t)(v8 + 2), *a3);
  *(unsigned char *)(a4 + 16) = 1;
  return result;
}

void sub_216EFB744(_Unwind_Exception *a1)
{
  sub_216EFB904(v1, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_216EFB75C(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_216D6EF4C(a1, (unsigned int *)a2, (void *)(a2 + 8), (unsigned int *)(a2 + 16), (void *)(a2 + 24));
  unint64_t v5 = *(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFF8;
  if (*(unsigned char *)(a1 + 8)) {
    v5 += (*(void *)a1 + v5 + (*(void *)a1 + v5) * (*(void *)a1 + v5)) >> 1;
  }
  else {
    *(unsigned char *)(a1 + 8) = 1;
  }
  *(void *)a1 = v5;
  return result;
}

BOOL sub_216EFB7C0(uint64_t a1, uint64_t a2)
{
  return *(_DWORD *)a1 == *(_DWORD *)a2
      && *(void *)(a1 + 8) == *(void *)(a2 + 8)
      && *(void *)(a1 + 16) == *(void *)(a2 + 16)
      && (*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFF8) == (*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFF8)
      && (*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFF8) == (*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFF8);
}

uint64_t sub_216EFB82C(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)(a1 + 8) = v4;
  if (v4) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 48), 1uLL, memory_order_relaxed);
  }
  sub_216981010((_DWORD *)(a1 + 16), (_DWORD *)(a2 + 16));
  sub_21698105C((_DWORD *)(a1 + 20), (_DWORD *)(a2 + 20));
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 24) = v5;
  if ((v5 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v5 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    *(void *)(a1 + 24) &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 32) = v6;
  if ((v6 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v6 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    *(void *)(a1 + 32) &= 0xFFFFFFFFFFFFFFF8;
  }
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 4sub_2168EBBB8(&a9, 0) = a1 + 48;
  *(_WORD *)(a1 + 96) = 0;
  *(unsigned char *)(a1 + 98) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 8sub_2168EBBB8(&a9, 0) = 0;
  *(unsigned char *)(a1 + 88) = 0;
  return a1;
}

void sub_216EFB904(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_216EFB95C((uint64_t)v2 + 16);
    }
    operator delete(v2);
  }
}

void sub_216EFB95C(uint64_t a1)
{
  uint64_t v2 = a1 + 40;
  uint64_t v3 = *(void *)(a1 + 80);
  if ((v3 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v3 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v4 = *(std::__shared_weak_count **)(a1 + 72);
  if (v4) {
    sub_216784EC4(v4);
  }
  sub_2168CB05C(v2, *(void **)(a1 + 48));
  uint64_t v5 = *(void *)(a1 + 32);
  if ((v5 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v5 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v6 = *(void *)(a1 + 24);
  if ((v6 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v6 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 20));
  sub_21697C414((_DWORD *)(a1 + 16));
  uint64_t v7 = *(atomic_ullong **)(a1 + 8);
  if (v7)
  {
    sub_216D16E0C(v7);
  }
}

uint64_t sub_216EFBA18(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)(a1 + 8) = v6;
  if (v6) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v6 + 48), 1uLL, memory_order_relaxed);
  }
  sub_216981010((_DWORD *)(a1 + 16), (_DWORD *)(a2 + 16));
  sub_21698105C((_DWORD *)(a1 + 20), (_DWORD *)(a2 + 20));
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 24) = v7;
  if ((v7 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v7 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    *(void *)(a1 + 24) &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v8 = *a3;
  *(void *)(a1 + 32) = *a3;
  if ((v8 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    *(void *)(a1 + 32) &= 0xFFFFFFFFFFFFFFF8;
  }
  return a1;
}

uint64_t sub_216EFBADC(uint64_t a1)
{
  sub_216EFBB18(a1, *(void **)(a1 + 16));
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void sub_216EFBB18(uint64_t a1, void *a2)
{
  if (a2)
  {
    uint64_t v2 = a2;
    do
    {
      uint64_t v3 = (void *)*v2;
      sub_216EFBB5C((uint64_t)(v2 + 2));
      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
}

void sub_216EFBB5C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v3 = *(void *)(a1 + 24);
  if ((v3 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v3 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 20));
  sub_21697C414((_DWORD *)(a1 + 16));
  uint64_t v4 = *(atomic_ullong **)(a1 + 8);
  if (v4)
  {
    sub_216D16E0C(v4);
  }
}

void *sub_216EFBBE8(uint64_t a1)
{
  uint64_t v1 = *(uint64_t ****)(a1 + 8);
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  if (**v1 != (*v1)[1])
  {
    size_t v20 = v1[1];
    sub_216EFC128((pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache **)&v20, v2);
  }
  uint64_t v4 = sub_216EFE0A4(v33);
  LOBYTE(v2sub_2168EBBB8(&a9, 0) = 0;
  uint64_t v5 = (pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *)sub_2168520EC(v4, &v20);
  pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::Swap(v5, (pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *)(v3 + 48));
  uint64_t v6 = v1[2];
  LODWORD(v2sub_2168EBBB8(&a9, 0) = *(_DWORD *)v6;
  uint64_t v7 = v6[1];
  BOOL v21 = v7;
  if (v7) {
    atomic_fetch_add_explicit(v7 + 6, 1uLL, memory_order_relaxed);
  }
  sub_216981010(&v22, (_DWORD *)v6 + 4);
  sub_21698105C(&v23, (_DWORD *)v6 + 5);
  unint64_t v9 = v6[3];
  int v24 = v9;
  if ((v9 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)((unint64_t)v9 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    int v24 = (uint64_t *)((unint64_t)v24 & 0xFFFFFFFFFFFFFFF8);
  }
  while (pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)&v20, v8))
  {
    if (sub_216EF9980((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v20))
    {
      int v28 = (int)v20;
      uint64_t v29 = v21;
      BOOL v21 = 0;
      int v30 = v22;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator=(&v22);
      int v31 = v23;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator=(&v23);
      int v32 = v24;
      int v24 = 0;
      goto LABEL_22;
    }
    sub_216D6B1F8((uint64_t)&v20, (uint64_t)&v26);
    LODWORD(v2sub_2168EBBB8(&a9, 0) = v26;
    unint64_t v11 = (atomic_ullong *)*((void *)&v26 + 1);
    *((void *)&v26 + 1) = 0;
    unint64_t v12 = v21;
    BOOL v21 = v11;
    if (v12) {
      sub_216D16E0C(v12);
    }
    sub_21697DE94(&v22, (int *)v27);
    sub_21697DEEC(&v23, (int *)v27 + 1);
    if ((v24 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)((unint64_t)v24 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    int v24 = (uint64_t *)v27[1];
    v27[1] = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v27 + 1);
    sub_21697C414(v27);
    if (*((void *)&v26 + 1)) {
      sub_216D16E0C(*((atomic_ullong **)&v26 + 1));
    }
  }
  pxrInternal__aapl__pxrReserved__::UsdObject::GetStage((pxrInternal__aapl__pxrReserved__::UsdObject *)v6, v10, &v26);
  size_t v13 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_216D01530((uint64_t *)&v26);
  pxrInternal__aapl__pxrReserved__::UsdStage::GetPseudoRoot(v13, (uint64_t)&v28);
  uint64_t v14 = *((void *)&v26 + 1);
  if (*((void *)&v26 + 1)
    && atomic_fetch_add_explicit((atomic_uint *volatile)(*((void *)&v26 + 1) + 8), 0xFFFFFFFF, memory_order_release) == 1)
  {
    (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
  }
  if ((v24 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)((unint64_t)v24 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
LABEL_22:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v23);
  sub_21697C414(&v22);
  if (v21) {
    sub_216D16E0C(v21);
  }
  long long v26 = 0u;
  memset(v27, 0, sizeof(v27));
  pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::GetLocalToWorldTransform((pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *)(v3 + 48), (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v28, (uint64_t)&v20);
  pxrInternal__aapl__pxrReserved__::GfMatrix4d::GetInverse((double *)&v20, 0, 0.0, (uint64_t)&v26);
  sub_216EFEA80((uint64_t)&v20, (uint64_t)v1[3], &v26, (uint64_t)v3, (uint64_t)v33);
  float v15 = v3[32];
  v34[0] = 0;
  v34[1] = v15;
  uint64_t v16 = tbb::internal::allocate_additional_child_of_proxy::allocate((tbb::internal::allocate_additional_child_of_proxy *)v34, 0xC8uLL);
  BOOL v17 = **(void (****)(void))(sub_216EFE324(v16, (uint64_t)&v20, (uint64_t)(v3 + 33)) - 40);
  (*v17)();
  if ((v25 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v25 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  if ((v24 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)((unint64_t)v24 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v23);
  sub_21697C414(&v22);
  if (v21) {
    sub_216D16E0C(v21);
  }
  pxrInternal__aapl__pxrReserved__::WorkDispatcher::Wait((pxrInternal__aapl__pxrReserved__::WorkDispatcher *)v3);
  LOBYTE(v2sub_2168EBBB8(&a9, 0) = 0;
  unint64_t v18 = (pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *)sub_2168520EC(v33, &v20);
  pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::Swap(v18, (pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *)(v3 + 48));
  if ((v32 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)((unint64_t)v32 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v31);
  sub_21697C414(&v30);
  if (v29) {
    sub_216D16E0C(v29);
  }
  return sub_216EFE5DC(v33);
}

void sub_216EFBFDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, atomic_ullong *a11, uint64_t a12, uint64_t a13)
{
  if ((a13 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(a13 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v14);
  sub_21697C414(v13);
  if (a11) {
    sub_216D16E0C(a11);
  }
  sub_216EFE5DC((void *)(v15 - 208));
  _Unwind_Resume(a1);
}

uint64_t sub_216EFC128(pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache **a1, uint64_t **a2)
{
  long long v15 = 0u;
  long long v16 = 0u;
  int v17 = 1065353216;
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  while (v3 != v4)
  {
    sub_216EFC23C(a1, v3, (uint64_t)&v15);
    v3 += 5;
  }
  sub_216EFE0A4(v14);
  for (uint64_t i = (void *)v16; i; uint64_t i = (void *)*i)
  {
    uint64_t v6 = i[7];
    __dmb(0xBu);
    if (!v6)
    {
      uint64_t v7 = *a1;
      *(void *)&long long v13 = sub_216EFC5F8;
      *((void *)&v13 + 1) = 0;
      unint64_t v11 = &v15;
      unint64_t v12 = a1;
      unint64_t v9 = v7;
      uint8x8_t v10 = v14;
      sub_216EFC4E4((uint64_t)v7, &v13, (uint64_t *)&v12, (uint64_t)(i + 2), (uint64_t *)&v11, (uint64_t *)&v10, (uint64_t *)&v9);
    }
  }
  pxrInternal__aapl__pxrReserved__::WorkDispatcher::Wait(*a1);
  sub_216EFE5DC(v14);
  return sub_216EFE024((uint64_t)&v15);
}

void sub_216EFC20C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  sub_216EFE5DC((uint64_t *)va);
  sub_216EFE024(v7 - 80);
  _Unwind_Resume(a1);
}

void sub_216EFC23C(pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache **a1, uint64_t *a2, uint64_t a3)
{
  memset(v15, 0, sizeof(v15));
  sub_216EFD0F0((uint64_t)&v16, (uint64_t)a2, (uint64_t)v15);
  sub_216EFD1D8((uint64_t)&v23, (uint64_t)&v16);
  uint64_t v6 = sub_216EFC878(a3, (uint64_t)&v23, (uint64_t)&v23);
  char v8 = v7;
  uint64_t v29 = (void **)&v28;
  sub_216EFCF78(&v29);
  if ((v27 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v27 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  if ((v26 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v26 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v25 + 1);
  sub_21697C414(&v25);
  if (v24) {
    sub_216D16E0C(v24);
  }
  uint64_t v29 = (void **)&v22;
  sub_216EFCF78(&v29);
  if ((v21 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v21 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  if ((v20 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v20 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v19);
  sub_21697C414(&v18);
  if (v17) {
    sub_216D16E0C(v17);
  }
  uint64_t v29 = (void **)v15 + 1;
  sub_216EFCF78(&v29);
  if (v8)
  {
    uint64_t v23 = 0;
    int v24 = 0;
    uint64_t v25 = 0;
    pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_FindOrCreateEntriesForPrim(*a1, a2, &v23);
    unint64_t v9 = 0xCCCCCCCCCCCCCCCDLL * (((uint64_t)v24 - v23) >> 3);
    __dmb(0xBu);
    v6[7] = v9;
    uint64_t v10 = v23;
    for (uint64_t i = v24; (atomic_ullong *)v10 != i; v10 += 40)
    {
      sub_216EFC23C(a1, v10, a3);
      *(void *)&v15[0] = v10;
      unint64_t v12 = sub_216EFD268(a3, v10, (uint64_t)&unk_2174BFD90, (uint64_t *)v15);
      unint64_t v13 = v12[9];
      if (v13 >= v12[10])
      {
        uint64_t v14 = sub_216EFEE10(v12 + 8, (uint64_t)a2);
      }
      else
      {
        sub_216EFCDB0((uint64_t)(v12 + 10), v13, (uint64_t)a2);
        uint64_t v14 = v13 + 40;
        v12[9] = v13 + 40;
      }
      v12[9] = v14;
    }
    long long v16 = (void **)&v23;
    sub_216EFCF78(&v16);
  }
}

void sub_216EFC478(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void **a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  a14 = (void **)&a23;
  sub_216EFCF78(&a14);
  _Unwind_Resume(a1);
}

void sub_216EFC4E4(uint64_t a1, long long *a2, uint64_t *a3, uint64_t a4, uint64_t *a5, uint64_t *a6, uint64_t *a7)
{
  long long v13 = *a2;
  uint64_t v14 = *a3;
  sub_216EFDA34((uint64_t)&v15, a4);
  uint64_t v11 = *a6;
  uint64_t v21 = *a5;
  uint64_t v22 = v11;
  uint64_t v23 = *a7;
  uint64_t v12 = sub_216EFD6B8(a1, (uint64_t)&v13);
  (***(void (****)(void, uint64_t, uint64_t))(v12 - 40))(*(void *)(v12 - 40), v12, v12 - 8);
  if ((v20 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v20 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  if ((v19 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v19 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v18);
  sub_21697C414(&v17);
  if (v16) {
    sub_216D16E0C(v16);
  }
}

void sub_216EFC5E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_216EFC5F8(uint64_t *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v20 = a4;
  uint64_t v21 = a3;
  uint64_t v19 = a5;
  pxrInternal__aapl__pxrReserved__::GfMatrix4d::SetDiagonal((uint64_t)v11, 1.0);
  sub_216EFEA80((uint64_t)&v12, a2, v11, *a1, a4);
  pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_ResolvePrim(v18, (uint64_t)&v12, (uint64_t)&v12, v17);
  if ((v16 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v16 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  if ((v15 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v15 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v14);
  sub_21697C414(&v13);
  if (*((void *)&v12 + 1)) {
    sub_216D16E0C(*((atomic_ullong **)&v12 + 1));
  }
  char v8 = sub_216EFDC2C(v21, a2);
  uint64_t v9 = v8[8];
  for (uint64_t i = v8[9]; v9 != i; v9 += 40)
  {
    if (atomic_fetch_add(sub_216EFDC2C(v21, v9) + 7, 0xFFFFFFFFFFFFFFFFLL) == 1)
    {
      *(void *)&long long v12 = sub_216EFC5F8;
      *((void *)&v12 + 1) = 0;
      *(void *)&v11[0] = a1;
      sub_216EFDAEC(v19, &v12, (uint64_t *)v11, v9, (uint64_t *)&v21, &v20, &v19);
    }
  }
}

void sub_216EFC74C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  sub_216EF9BD8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_216EFC760(uint64_t a1)
{
  uint64_t v6 = (void **)(a1 + 48);
  sub_216EFCF78(&v6);
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v3 = *(void *)(a1 + 24);
  if ((v3 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v3 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 20));
  sub_21697C414((_DWORD *)(a1 + 16));
  uint64_t v4 = *(atomic_ullong **)(a1 + 8);
  if (v4) {
    sub_216D16E0C(v4);
  }
  return a1;
}

uint64_t sub_216EFC7EC(uint64_t a1)
{
  uint64_t v6 = (void **)(a1 + 48);
  sub_216EFCF78(&v6);
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v3 = *(void *)(a1 + 24);
  if ((v3 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v3 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 20));
  sub_21697C414((_DWORD *)(a1 + 16));
  uint64_t v4 = *(atomic_ullong **)(a1 + 8);
  if (v4) {
    sub_216D16E0C(v4);
  }
  return a1;
}

void *sub_216EFC878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v23 = 0;
  char v24 = 0;
  sub_216EFB75C((uint64_t)&v23, a2);
  unint64_t v7 = bswap64(0x9E3779B97F4A7C55 * (void)v23);
  unint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    unint64_t v10 = v9.u32[0];
    if (v9.u32[0] > 1uLL)
    {
      unint64_t v3 = v7;
      if (v7 >= v8) {
        unint64_t v3 = v7 % v8;
      }
    }
    else
    {
      unint64_t v3 = (v8 - 1) & v7;
    }
    uint64_t v11 = *(void **)(*(void *)a1 + 8 * v3);
    if (v11)
    {
      long long v12 = (void *)*v11;
      if (*v11)
      {
        do
        {
          unint64_t v13 = v12[1];
          if (v13 == v7)
          {
            if (sub_216EFB7C0((uint64_t)(v12 + 2), a2)) {
              return v12;
            }
          }
          else
          {
            if (v10 > 1)
            {
              if (v13 >= v8) {
                v13 %= v8;
              }
            }
            else
            {
              v13 &= v8 - 1;
            }
            if (v13 != v3) {
              break;
            }
          }
          long long v12 = (void *)*v12;
        }
        while (v12);
      }
    }
  }
  sub_216EFCB08(a1, v7, a3, (uint64_t)&v23);
  float v14 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v15 = *(float *)(a1 + 32);
  if (!v8 || (float)(v15 * (float)v8) < v14)
  {
    BOOL v16 = 1;
    if (v8 >= 3) {
      BOOL v16 = (v8 & (v8 - 1)) != 0;
    }
    unint64_t v17 = v16 | (2 * v8);
    unint64_t v18 = vcvtps_u32_f32(v14 / v15);
    if (v17 <= v18) {
      size_t v19 = v18;
    }
    else {
      size_t v19 = v17;
    }
    sub_21678A04C(a1, v19);
    unint64_t v8 = *(void *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v7 >= v8) {
        unint64_t v3 = v7 % v8;
      }
      else {
        unint64_t v3 = v7;
      }
    }
    else
    {
      unint64_t v3 = (v8 - 1) & v7;
    }
  }
  uint64_t v20 = *(void **)(*(void *)a1 + 8 * v3);
  if (v20)
  {
    void *v23 = *v20;
    void *v20 = v23;
  }
  else
  {
    void *v23 = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v23;
    *(void *)(*(void *)a1 + 8 * v3) = a1 + 16;
    if (*v23)
    {
      unint64_t v21 = *(void *)(*v23 + 8);
      if ((v8 & (v8 - 1)) != 0)
      {
        if (v21 >= v8) {
          v21 %= v8;
        }
      }
      else
      {
        v21 &= v8 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v21) = v23;
    }
  }
  long long v12 = v23;
  uint64_t v23 = 0;
  ++*(void *)(a1 + 24);
  sub_216EFD010((uint64_t)&v23, 0);
  return v12;
}

void sub_216EFCAF0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216EFD010((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_216EFCB08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 16;
  unint64_t v8 = operator new(0x58uLL);
  *(void *)a4 = v8;
  *(void *)(a4 + 8) = v7;
  *(unsigned char *)(a4 + 16) = 0;
  *unint64_t v8 = 0;
  v8[1] = a2;
  uint64_t result = sub_216EFCB80((uint64_t)(v8 + 2), a3);
  *(unsigned char *)(a4 + 16) = 1;
  return result;
}

void sub_216EFCB68(_Unwind_Exception *a1)
{
  sub_216EFD010(v1, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_216EFCB80(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)(a1 + 8) = v4;
  if (v4) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 48), 1uLL, memory_order_relaxed);
  }
  sub_216981010((_DWORD *)(a1 + 16), (_DWORD *)(a2 + 16));
  sub_21698105C((_DWORD *)(a1 + 20), (_DWORD *)(a2 + 20));
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 24) = v5;
  if ((v5 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v5 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    *(void *)(a1 + 24) &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 32) = v6;
  if ((v6 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v6 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    *(void *)(a1 + 32) &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 4sub_2168EBBB8(&a9, 0) = v7;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  sub_216EFCC7C((void *)(a1 + 48), *(void *)(a2 + 48), *(void *)(a2 + 56), 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(void *)(a2 + 56) - *(void *)(a2 + 48)) >> 3));
  return a1;
}

void sub_216EFCC68(_Unwind_Exception *a1)
{
  sub_216EF75B4(v1);
  _Unwind_Resume(a1);
}

void *sub_216EFCC7C(void *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    sub_2168724E8(result, a4);
    uint64_t result = (void *)sub_216EFCD04((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_216EFCCE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  sub_216EFCF78(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_216EFCD04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v11 = a4;
  uint64_t v12 = a4;
  v9[0] = a1;
  v9[1] = &v11;
  void v9[2] = &v12;
  char v10 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      sub_216EFCDB0(a1, v4, v6);
      v6 += 40;
      uint64_t v4 = v12 + 40;
      v12 += 40;
    }
    while (v6 != a3);
  }
  char v10 = 1;
  sub_216EFCE64((uint64_t)v9);
  return v4;
}

void sub_216EFCD9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

_DWORD *sub_216EFCDB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a2 = *(_DWORD *)a3;
  uint64_t v5 = *(void *)(a3 + 8);
  *(void *)(a2 + 8) = v5;
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 48), 1uLL, memory_order_relaxed);
  }
  sub_216981010((_DWORD *)(a2 + 16), (_DWORD *)(a3 + 16));
  uint64_t result = sub_21698105C((_DWORD *)(a2 + 20), (_DWORD *)(a3 + 20));
  uint64_t v7 = *(void *)(a3 + 24);
  *(void *)(a2 + 24) = v7;
  if ((v7 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v7 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    *(void *)(a2 + 24) &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v8 = *(void *)(a3 + 32);
  *(void *)(a2 + 32) = v8;
  if ((v8 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    *(void *)(a2 + 32) &= 0xFFFFFFFFFFFFFFF8;
  }
  return result;
}

uint64_t sub_216EFCE64(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_216EFCE9C((uint64_t *)a1);
  }
  return a1;
}

void sub_216EFCE9C(uint64_t *a1)
{
  uint64_t v2 = (uint64_t *)a1[1];
  uint64_t v1 = (uint64_t *)a1[2];
  uint64_t v3 = *v1;
  uint64_t v4 = *v2;
  if (*v1 != *v2)
  {
    uint64_t v5 = *a1;
    do
    {
      v3 -= 40;
      sub_216EFCEF0(v5, v3);
    }
    while (v3 != v4);
  }
}

void sub_216EFCEF0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  if ((v3 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v3 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v4 = *(void *)(a2 + 24);
  if ((v4 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v4 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a2 + 20));
  sub_21697C414((_DWORD *)(a2 + 16));
  uint64_t v5 = *(atomic_ullong **)(a2 + 8);
  if (v5)
  {
    sub_216D16E0C(v5);
  }
}

void sub_216EFCF78(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    uint64_t v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 40;
        sub_216EFCEF0((uint64_t)(v1 + 2), v4);
      }
      while ((void *)v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_216EFD010(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_216EFD068((uint64_t)v2 + 16);
    }
    operator delete(v2);
  }
}

void sub_216EFD068(uint64_t a1)
{
  uint64_t v5 = (void **)(a1 + 48);
  sub_216EFCF78(&v5);
  uint64_t v2 = *(void *)(a1 + 32);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v3 = *(void *)(a1 + 24);
  if ((v3 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v3 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 20));
  sub_21697C414((_DWORD *)(a1 + 16));
  uint64_t v4 = *(atomic_ullong **)(a1 + 8);
  if (v4) {
    sub_216D16E0C(v4);
  }
}

uint64_t sub_216EFD0F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)(a1 + 8) = v6;
  if (v6) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v6 + 48), 1uLL, memory_order_relaxed);
  }
  sub_216981010((_DWORD *)(a1 + 16), (_DWORD *)(a2 + 16));
  sub_21698105C((_DWORD *)(a1 + 20), (_DWORD *)(a2 + 20));
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 24) = v7;
  if ((v7 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v7 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    *(void *)(a1 + 24) &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v8 = *(void *)(a2 + 32);
  *(void *)(a1 + 32) = v8;
  if ((v8 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    *(void *)(a1 + 32) &= 0xFFFFFFFFFFFFFFF8;
  }
  *(void *)(a1 + 4sub_2168EBBB8(&a9, 0) = *(void *)a3;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a3 + 8);
  *(void *)(a1 + 64) = *(void *)(a3 + 24);
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = 0;
  return a1;
}

uint64_t sub_216EFD1D8(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = 0;
  sub_21697D878((_DWORD *)(a1 + 16), (_DWORD *)(a2 + 16));
  sub_21697D8B4((_DWORD *)(a1 + 20), (_DWORD *)(a2 + 20));
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a2 + 24) = 0;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a2 + 32) = 0;
  *(void *)(a1 + 4sub_2168EBBB8(&a9, 0) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a2 + 48) = 0;
  *(void *)(a2 + 56) = 0;
  *(void *)(a2 + 64) = 0;
  return a1;
}

void *sub_216EFD268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  char v24 = 0;
  char v25 = 0;
  sub_216EFB75C((uint64_t)&v24, a2);
  unint64_t v8 = bswap64(0x9E3779B97F4A7C55 * (void)v24);
  unint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    uint8x8_t v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    unint64_t v11 = v10.u32[0];
    if (v10.u32[0] > 1uLL)
    {
      unint64_t v4 = v8;
      if (v8 >= v9) {
        unint64_t v4 = v8 % v9;
      }
    }
    else
    {
      unint64_t v4 = (v9 - 1) & v8;
    }
    uint64_t v12 = *(void **)(*(void *)a1 + 8 * v4);
    if (v12)
    {
      unint64_t v13 = (void *)*v12;
      if (*v12)
      {
        do
        {
          unint64_t v14 = v13[1];
          if (v14 == v8)
          {
            if (sub_216EFB7C0((uint64_t)(v13 + 2), a2)) {
              return v13;
            }
          }
          else
          {
            if (v11 > 1)
            {
              if (v14 >= v9) {
                v14 %= v9;
              }
            }
            else
            {
              v14 &= v9 - 1;
            }
            if (v14 != v4) {
              break;
            }
          }
          unint64_t v13 = (void *)*v13;
        }
        while (v13);
      }
    }
  }
  sub_216EFD510(a1, v8, a4, (uint64_t)&v24);
  float v15 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v16 = *(float *)(a1 + 32);
  if (!v9 || (float)(v16 * (float)v9) < v15)
  {
    BOOL v17 = 1;
    if (v9 >= 3) {
      BOOL v17 = (v9 & (v9 - 1)) != 0;
    }
    unint64_t v18 = v17 | (2 * v9);
    unint64_t v19 = vcvtps_u32_f32(v15 / v16);
    if (v18 <= v19) {
      size_t v20 = v19;
    }
    else {
      size_t v20 = v18;
    }
    sub_21678A04C(a1, v20);
    unint64_t v9 = *(void *)(a1 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9) {
        unint64_t v4 = v8 % v9;
      }
      else {
        unint64_t v4 = v8;
      }
    }
    else
    {
      unint64_t v4 = (v9 - 1) & v8;
    }
  }
  unint64_t v21 = *(void **)(*(void *)a1 + 8 * v4);
  if (v21)
  {
    *char v24 = *v21;
    *unint64_t v21 = v24;
  }
  else
  {
    *char v24 = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v24;
    *(void *)(*(void *)a1 + 8 * v4) = a1 + 16;
    if (*v24)
    {
      unint64_t v22 = *(void *)(*v24 + 8);
      if ((v9 & (v9 - 1)) != 0)
      {
        if (v22 >= v9) {
          v22 %= v9;
        }
      }
      else
      {
        v22 &= v9 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v22) = v24;
    }
  }
  unint64_t v13 = v24;
  char v24 = 0;
  ++*(void *)(a1 + 24);
  sub_216EFD010((uint64_t)&v24, 0);
  return v13;
}

void sub_216EFD4F8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216EFD010((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_216EFD510@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 16;
  unint64_t v8 = operator new(0x58uLL);
  *(void *)a4 = v8;
  *(void *)(a4 + 8) = v7;
  *(unsigned char *)(a4 + 16) = 0;
  *unint64_t v8 = 0;
  v8[1] = a2;
  uint64_t result = sub_216EFD580((uint64_t)(v8 + 2), *a3);
  *(unsigned char *)(a4 + 16) = 1;
  return result;
}

void sub_216EFD568(_Unwind_Exception *a1)
{
  sub_216EFD010(v1, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_216EFD580(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)(a1 + 8) = v4;
  if (v4) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 48), 1uLL, memory_order_relaxed);
  }
  sub_216981010((_DWORD *)(a1 + 16), (_DWORD *)(a2 + 16));
  sub_21698105C((_DWORD *)(a1 + 20), (_DWORD *)(a2 + 20));
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 24) = v5;
  if ((v5 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v5 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    *(void *)(a1 + 24) &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 32) = v6;
  if ((v6 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v6 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    *(void *)(a1 + 32) &= 0xFFFFFFFFFFFFFFF8;
  }
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 4sub_2168EBBB8(&a9, 0) = 0u;
  return a1;
}

uint64_t sub_216EFD644(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v3 = *(void *)(a1 + 48);
  if ((v3 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v3 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 44));
  sub_21697C414((_DWORD *)(a1 + 40));
  uint64_t v4 = *(atomic_ullong **)(a1 + 32);
  if (v4) {
    sub_216D16E0C(v4);
  }
  return a1;
}

uint64_t sub_216EFD6B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 256);
  v7[0] = 0;
  v7[1] = v4;
  uint64_t v5 = tbb::internal::allocate_additional_child_of_proxy::allocate((tbb::internal::allocate_additional_child_of_proxy *)v7, 0x68uLL);
  sub_216EFD730(v5, a2, a1 + 264);
  return v5;
}

void sub_216EFD714(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  tbb::internal::allocate_additional_child_of_proxy::free((tbb::internal::allocate_additional_child_of_proxy *)&a9, v9);
  _Unwind_Resume(a1);
}

uint64_t sub_216EFD730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)(a1 - 11) = 1;
  *(void *)a1 = &unk_26C76C348;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)a2;
  *(void *)(a1 + 24) = *(void *)(a2 + 16);
  sub_216EFD990(a1 + 32, a2 + 24);
  *(void *)(a1 + 72) = *(void *)(a2 + 64);
  *(void *)(a1 + 8sub_2168EBBB8(&a9, 0) = *(void *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 80);
  *(void *)(a1 + 96) = a3;
  return a1;
}

uint64_t sub_216EFD7BC(uint64_t a1)
{
  *(void *)a1 = &unk_26C76C348;
  uint64_t v2 = *(void *)(a1 + 64);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v3 = *(void *)(a1 + 56);
  if ((v3 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v3 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 52));
  sub_21697C414((_DWORD *)(a1 + 48));
  uint64_t v4 = *(atomic_ullong **)(a1 + 40);
  if (v4) {
    sub_216D16E0C(v4);
  }
  return a1;
}

void sub_216EFD84C(void *a1)
{
  *(void *)a1 = &unk_26C76C348;
  uint64_t v2 = *((void *)a1 + 8);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v3 = *((void *)a1 + 7);
  if ((v3 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v3 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)a1 + 13);
  sub_21697C414((_DWORD *)a1 + 12);
  uint64_t v4 = (atomic_ullong *)*((void *)a1 + 5);
  if (v4) {
    sub_216D16E0C(v4);
  }

  operator delete(a1);
}

uint64_t sub_216EFD8EC(uint64_t a1)
{
  pxrInternal__aapl__pxrReserved__::TfErrorMark::TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v6);
  sub_216EFD9FC(a1 + 8);
  unint64_t v2 = atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
  if (!v2) {
    pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_CreateInstance();
  }
  unint64_t v3 = v6;
  unint64_t v4 = atomic_load((unint64_t *)(v2 + 144));
  if (v3 < v4
    && !pxrInternal__aapl__pxrReserved__::TfErrorMark::_IsCleanImpl((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v6, (atomic_ullong *)v2))
  {
    pxrInternal__aapl__pxrReserved__::WorkDispatcher::_TransportErrors(&v6, *(void *)(a1 + 96));
  }
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v6);
  return 0;
}

void sub_216EFD97C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_216EFD990(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = 0;
  sub_21697D878((_DWORD *)(a1 + 16), (_DWORD *)(a2 + 16));
  sub_21697D8B4((_DWORD *)(a1 + 20), (_DWORD *)(a2 + 20));
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a2 + 24) = 0;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a2 + 32) = 0;
  return a1;
}

uint64_t sub_216EFD9FC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  unint64_t v2 = *(uint64_t (**)(void *, uint64_t, void, void, void))a1;
  unint64_t v3 = (void *)(*(void *)(a1 + 16) + (v1 >> 1));
  if (v1) {
    unint64_t v2 = *(uint64_t (**)(void *, uint64_t, void, void, void))(*v3 + v2);
  }
  return v2(v3, a1 + 24, *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80));
}

uint64_t sub_216EFDA34(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)(a1 + 8) = v4;
  if (v4) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 48), 1uLL, memory_order_relaxed);
  }
  sub_216981010((_DWORD *)(a1 + 16), (_DWORD *)(a2 + 16));
  sub_21698105C((_DWORD *)(a1 + 20), (_DWORD *)(a2 + 20));
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 24) = v5;
  if ((v5 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v5 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    *(void *)(a1 + 24) &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 32) = v6;
  if ((v6 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v6 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    *(void *)(a1 + 32) &= 0xFFFFFFFFFFFFFFF8;
  }
  return a1;
}

void sub_216EFDAEC(uint64_t a1, long long *a2, uint64_t *a3, uint64_t a4, uint64_t *a5, uint64_t *a6, uint64_t *a7)
{
  long long v15 = *a2;
  uint64_t v16 = *a3;
  sub_216EFDA34((uint64_t)&v17, a4);
  uint64_t v11 = *a6;
  uint64_t v23 = *a5;
  uint64_t v24 = v11;
  uint64_t v25 = *a7;
  uint64_t v12 = *(void *)(a1 + 256);
  v26[0] = 0;
  v26[1] = v12;
  uint64_t v13 = tbb::internal::allocate_additional_child_of_proxy::allocate((tbb::internal::allocate_additional_child_of_proxy *)v26, 0x68uLL);
  unint64_t v14 = *(void (****)(void, uint64_t, uint64_t))(sub_216EFDDC4(v13, (uint64_t)&v15, a1 + 264) - 40);
  (**v14)(v14, v13, v13 - 8);
  if ((v22 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v22 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  if ((v21 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v21 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
  sub_21697C414(&v19);
  if (v18) {
    sub_216D16E0C(v18);
  }
}

void sub_216EFDC18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_216EFDC2C(void *a1, uint64_t a2)
{
  uint64_t v13 = 0;
  char v14 = 0;
  sub_216EFB75C((uint64_t)&v13, a2);
  int8x8_t v4 = (int8x8_t)a1[1];
  if (!*(void *)&v4) {
    return 0;
  }
  unint64_t v5 = bswap64(0x9E3779B97F4A7C55 * v13);
  uint8x8_t v6 = (uint8x8_t)vcnt_s8(v4);
  v6.i16[0] = vaddlv_u8(v6);
  unint64_t v7 = v6.u32[0];
  if (v6.u32[0] > 1uLL)
  {
    unint64_t v8 = v5;
    if (v5 >= *(void *)&v4) {
      unint64_t v8 = v5 % *(void *)&v4;
    }
  }
  else
  {
    unint64_t v8 = (*(void *)&v4 - 1) & v5;
  }
  unint64_t v9 = *(void **)(*a1 + 8 * v8);
  if (!v9) {
    return 0;
  }
  uint8x8_t v10 = (void *)*v9;
  if (*v9)
  {
    do
    {
      unint64_t v11 = v10[1];
      if (v11 == v5)
      {
        if (sub_216EFB7C0((uint64_t)(v10 + 2), a2)) {
          return v10;
        }
      }
      else
      {
        if (v7 > 1)
        {
          if (v11 >= *(void *)&v4) {
            v11 %= *(void *)&v4;
          }
        }
        else
        {
          v11 &= *(void *)&v4 - 1;
        }
        if (v11 != v8) {
          return 0;
        }
      }
      uint8x8_t v10 = (void *)*v10;
    }
    while (v10);
  }
  return v10;
}

uint64_t sub_216EFDD50(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v3 = *(void *)(a1 + 48);
  if ((v3 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v3 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 44));
  sub_21697C414((_DWORD *)(a1 + 40));
  int8x8_t v4 = *(atomic_ullong **)(a1 + 32);
  if (v4) {
    sub_216D16E0C(v4);
  }
  return a1;
}

uint64_t sub_216EFDDC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)(a1 - 11) = 1;
  *(void *)a1 = &unk_26C76C390;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)a2;
  *(void *)(a1 + 24) = *(void *)(a2 + 16);
  sub_216EFD990(a1 + 32, a2 + 24);
  *(void *)(a1 + 72) = *(void *)(a2 + 64);
  *(void *)(a1 + 8sub_2168EBBB8(&a9, 0) = *(void *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 80);
  *(void *)(a1 + 96) = a3;
  return a1;
}

uint64_t sub_216EFDE50(uint64_t a1)
{
  *(void *)a1 = &unk_26C76C390;
  uint64_t v2 = *(void *)(a1 + 64);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v3 = *(void *)(a1 + 56);
  if ((v3 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v3 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 52));
  sub_21697C414((_DWORD *)(a1 + 48));
  int8x8_t v4 = *(atomic_ullong **)(a1 + 40);
  if (v4) {
    sub_216D16E0C(v4);
  }
  return a1;
}

void sub_216EFDEE0(void *a1)
{
  *(void *)a1 = &unk_26C76C390;
  uint64_t v2 = *((void *)a1 + 8);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v3 = *((void *)a1 + 7);
  if ((v3 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v3 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)a1 + 13);
  sub_21697C414((_DWORD *)a1 + 12);
  int8x8_t v4 = (atomic_ullong *)*((void *)a1 + 5);
  if (v4) {
    sub_216D16E0C(v4);
  }

  operator delete(a1);
}

uint64_t sub_216EFDF80(uint64_t a1)
{
  pxrInternal__aapl__pxrReserved__::TfErrorMark::TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v6);
  sub_216EFD9FC(a1 + 8);
  unint64_t v2 = atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
  if (!v2) {
    pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_CreateInstance();
  }
  unint64_t v3 = v6;
  unint64_t v4 = atomic_load((unint64_t *)(v2 + 144));
  if (v3 < v4
    && !pxrInternal__aapl__pxrReserved__::TfErrorMark::_IsCleanImpl((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v6, (atomic_ullong *)v2))
  {
    pxrInternal__aapl__pxrReserved__::WorkDispatcher::_TransportErrors(&v6, *(void *)(a1 + 96));
  }
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v6);
  return 0;
}

void sub_216EFE010(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_216EFE024(uint64_t a1)
{
  sub_216EFE060(a1, *(void **)(a1 + 16));
  unint64_t v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void sub_216EFE060(uint64_t a1, void *a2)
{
  if (a2)
  {
    unint64_t v2 = a2;
    do
    {
      unint64_t v3 = (void *)*v2;
      sub_216EFD068((uint64_t)(v2 + 2));
      operator delete(v2);
      unint64_t v2 = v3;
    }
    while (v3);
  }
}

void *sub_216EFE0A4(void *a1)
{
  *a1 = &unk_26C74B518;
  __dmb(0xBu);
  a1[1] = 0;
  __dmb(0xBu);
  a1[2] = 0;
  *a1 = &unk_26C76C3D8;
  unint64_t v2 = (void *)tbb::internal::allocate_via_handler_v3((tbb::internal *)8);
  *unint64_t v2 = &unk_26C76C438;
  a1[3] = v2;
  for (uint64_t i = 9; i != 12; ++i)
    a1[i] = 0;
  a1[7] = 0;
  a1[6] = 0;
  a1[8] = a1 + 9;
  a1[5] = sub_216EFE304;
  return a1;
}

void sub_216EFE170(_Unwind_Exception *a1)
{
  *uint64_t v1 = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_216EFE178(uint64_t a1)
{
  uint64_t v2 = tbb::internal::concurrent_vector_base_v3::internal_grow_by((atomic_ullong *)(a1 + 40), 1uLL, (void *)0x80, (void (*)(void *, const void *, unint64_t))tbb::concurrent_vector<tbb::internal::padded<tbb::interface6::internal::ets_element<pxrInternal__aapl__pxrReserved__::UsdGeomXformCache>,128ul>,tbb::cache_aligned_allocator<tbb::internal::padded<tbb::interface6::internal::ets_element<pxrInternal__aapl__pxrReserved__::UsdGeomXformCache>,128ul>>>::initialize_array, 0);
  unint64_t v3 = sub_216851020((unint64_t)v2);
  uint64_t v4 = *(void *)(a1 + 64);
  __dmb(0xBu);
  uint64_t v5 = *(void *)(v4 + 8 * v3) + (((void)v2 - ((1 << v3) & 0x1FFFFFFFFFFFFFELL)) << 7);
  (*(void (**)(void, uint64_t))(**(void **)(a1 + 24) + 32))(*(void *)(a1 + 24), v5);
  *(unsigned char *)(v5 + 48) = 1;
  return v5;
}

uint64_t sub_216EFE220(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return tbb::internal::NFS_Allocate((unint64_t)(a2 + 7) >> 3, 8, 0, a4);
}

uint64_t sub_216EFE234(int a1, tbb::internal *this)
{
  return tbb::internal::NFS_Free(this, this);
}

void sub_216EFE23C(void *a1)
{
  uint64_t v1 = sub_216EFE5DC(a1);

  operator delete(v1);
}

void *sub_216EFE264()
{
  uint64_t result = (void *)tbb::internal::allocate_via_handler_v3((tbb::internal *)8);
  *uint64_t result = &unk_26C76C438;
  return result;
}

uint64_t sub_216EFE29C(uint64_t a1)
{
  (*(void (**)(uint64_t))(*(void *)a1 + 16))(a1);

  return tbb::internal::deallocate_via_handler_v3(a1, v2);
}

double sub_216EFE2FC(int a1, pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *this)
{
  return pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::UsdGeomXformCache(this);
}

uint64_t sub_216EFE304(int a1, tbb::internal *this, uint64_t a3, void *a4)
{
  return tbb::internal::NFS_Allocate((unint64_t)this, 128, 0, a4);
}

void tbb::concurrent_vector<tbb::internal::padded<tbb::interface6::internal::ets_element<pxrInternal__aapl__pxrReserved__::UsdGeomXformCache>,128ul>,tbb::cache_aligned_allocator<tbb::internal::padded<tbb::interface6::internal::ets_element<pxrInternal__aapl__pxrReserved__::UsdGeomXformCache>,128ul>>>::initialize_array(void *a1, uint64_t a2, uint64_t a3)
{
  if (a3) {
    bzero(a1, a3 << 7);
  }
}

uint64_t sub_216EFE324(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)(a1 - 11) = 1;
  *(void *)a1 = &unk_26C76C4D0;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = 0;
  sub_21697D878((_DWORD *)(a1 + 24), (_DWORD *)(a2 + 16));
  sub_21697D8B4((_DWORD *)(a1 + 28), (_DWORD *)(a2 + 20));
  *(void *)(a1 + 32) = *(void *)(a2 + 24);
  *(void *)(a2 + 24) = 0;
  *(void *)(a1 + 4sub_2168EBBB8(&a9, 0) = *(void *)(a2 + 32);
  *(void *)(a2 + 32) = 0;
  long long v6 = *(_OWORD *)(a2 + 56);
  long long v7 = *(_OWORD *)(a2 + 72);
  long long v8 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 112) = v8;
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 8sub_2168EBBB8(&a9, 0) = v7;
  long long v9 = *(_OWORD *)(a2 + 120);
  long long v10 = *(_OWORD *)(a2 + 136);
  long long v11 = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 16sub_2168EBBB8(&a9, 0) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 176) = v11;
  *(_OWORD *)(a1 + 128) = v9;
  *(_OWORD *)(a1 + 144) = v10;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 192) = a3;
  return a1;
}

uint64_t sub_216EFE3FC(uint64_t a1)
{
  *(void *)a1 = &unk_26C76C4D0;
  uint64_t v2 = *(void *)(a1 + 40);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v3 = *(void *)(a1 + 32);
  if ((v3 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v3 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_21697C414((_DWORD *)(a1 + 24));
  uint64_t v4 = *(atomic_ullong **)(a1 + 16);
  if (v4) {
    sub_216D16E0C(v4);
  }
  return a1;
}

void sub_216EFE48C(void *a1)
{
  *(void *)a1 = &unk_26C76C4D0;
  uint64_t v2 = *((void *)a1 + 5);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v3 = *((void *)a1 + 4);
  if ((v3 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v3 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)a1 + 7);
  sub_21697C414((_DWORD *)a1 + 6);
  uint64_t v4 = (atomic_ullong *)*((void *)a1 + 2);
  if (v4) {
    sub_216D16E0C(v4);
  }

  operator delete(a1);
}

uint64_t sub_216EFE52C(uint64_t a1)
{
  pxrInternal__aapl__pxrReserved__::TfErrorMark::TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v6);
  pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::_ResolvePrim(*(void *)(a1 + 176), a1 + 8, a1 + 8, (long long *)(a1 + 48));
  unint64_t v2 = atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
  if (!v2) {
    pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_CreateInstance();
  }
  unint64_t v3 = v6;
  unint64_t v4 = atomic_load((unint64_t *)(v2 + 144));
  if (v3 < v4
    && !pxrInternal__aapl__pxrReserved__::TfErrorMark::_IsCleanImpl((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v6, (atomic_ullong *)v2))
  {
    pxrInternal__aapl__pxrReserved__::WorkDispatcher::_TransportErrors(&v6, *(void *)(a1 + 192));
  }
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v6);
  return 0;
}

void sub_216EFE5C8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)va);
  _Unwind_Resume(a1);
}

void *sub_216EFE5DC(void *a1)
{
  *a1 = &unk_26C76C3D8;
  uint64_t v2 = a1[3];
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  sub_216850D6C((uint64_t)a1);
  sub_216EFE678(a1 + 4);
  *a1 = &unk_26C74B518;
  return a1;
}

unint64_t *sub_216EFE678(unint64_t *a1)
{
  uint64_t v2 = (tbb::internal::concurrent_vector_base_v3 *)(a1 + 1);
  unint64_t v3 = (void *)a1[4];
  unint64_t v4 = tbb::internal::concurrent_vector_base_v3::internal_clear((tbb::internal::concurrent_vector_base_v3 *)(a1 + 1), (void (*)(void *, unint64_t))tbb::concurrent_vector<tbb::internal::padded<tbb::interface6::internal::ets_element<pxrInternal__aapl__pxrReserved__::UsdGeomXformCache>,128ul>,tbb::cache_aligned_allocator<tbb::internal::padded<tbb::interface6::internal::ets_element<pxrInternal__aapl__pxrReserved__::UsdGeomXformCache>,128ul>>>::destroy_array);
  sub_216850F48((uint64_t)a1, v3, v4, a1[2]);
  tbb::internal::concurrent_vector_base_v3::~concurrent_vector_base_v3(v2, v5);
  return a1;
}

uint64_t tbb::concurrent_vector<tbb::internal::padded<tbb::interface6::internal::ets_element<pxrInternal__aapl__pxrReserved__::UsdGeomXformCache>,128ul>,tbb::cache_aligned_allocator<tbb::internal::padded<tbb::interface6::internal::ets_element<pxrInternal__aapl__pxrReserved__::UsdGeomXformCache>,128ul>>>::destroy_array(uint64_t result, uint64_t a2)
{
  if (a2)
  {
    uint64_t v2 = a2;
    uint64_t result = result + (a2 << 7) - 128;
    do
    {
      if (*(unsigned char *)(result + 48))
      {
        uint64_t result = sub_216EF9C4C(result);
        *(unsigned char *)(result + 48) = 0;
      }
      result -= 128;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_216EFE730(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = 0;
  uint64_t v5 = *(atomic_ullong **)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  if (v5) {
    sub_216D16E0C(v5);
  }
  sub_21697DE94((int *)(a1 + 16), (int *)(a2 + 16));
  sub_21697DEEC((int *)(a1 + 20), (int *)(a2 + 20));
  if (a2 != a1)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if ((v6 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v6 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a2 + 24) = 0;
  }
  sub_21697D0EC(a1 + 32, a2 + 32);
  sub_21697D0EC(a1 + 48, a2 + 48);
  long long v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 8sub_2168EBBB8(&a9, 0) = v7;
  sub_21697DE94((int *)(a1 + 96), (int *)(a2 + 96));
  sub_21697DEEC((int *)(a1 + 100), (int *)(a2 + 100));
  int v8 = *(_DWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 108) = *(unsigned char *)(a2 + 108);
  *(_DWORD *)(a1 + 104) = v8;
  long long v9 = *(void **)(a2 + 112);
  *(void *)(a2 + 112) = 0;
  sub_216817474((void **)(a1 + 112), v9);
  return a1;
}

uint64_t sub_216EFE814(uint64_t a1)
{
  *(void *)a1 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a1 + 8));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a1 + 12));
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 32) = 0;
  *(void *)(a1 + 4sub_2168EBBB8(&a9, 0) = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a1 + 48));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a1 + 52));
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(unsigned char *)(a1 + 72) = 0;
  return a1;
}

uint64_t sub_216EFE87C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)(a1 + 8) = v6;
  if (v6) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v6 + 48), 1uLL, memory_order_relaxed);
  }
  sub_216981010((_DWORD *)(a1 + 16), (_DWORD *)(a2 + 16));
  sub_21698105C((_DWORD *)(a1 + 20), (_DWORD *)(a2 + 20));
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 24) = v7;
  if ((v7 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v7 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    *(void *)(a1 + 24) &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v8 = *(void *)(a2 + 32);
  *(void *)(a1 + 32) = v8;
  if ((v8 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    *(void *)(a1 + 32) &= 0xFFFFFFFFFFFFFFF8;
  }
  *(_DWORD *)(a1 + 4sub_2168EBBB8(&a9, 0) = *(_DWORD *)a3;
  *(void *)(a1 + 48) = *(void *)(a3 + 8);
  *(void *)(a3 + 8) = 0;
  sub_21697D878((_DWORD *)(a1 + 56), (_DWORD *)(a3 + 16));
  sub_21697D8B4((_DWORD *)(a1 + 60), (_DWORD *)(a3 + 20));
  *(void *)(a1 + 64) = *(void *)(a3 + 24);
  *(void *)(a3 + 24) = 0;
  *(void *)(a1 + 72) = *(void *)(a3 + 32);
  *(void *)(a3 + 32) = 0;
  *(_OWORD *)(a1 + 8sub_2168EBBB8(&a9, 0) = *(_OWORD *)(a3 + 40);
  long long v9 = *(_OWORD *)(a3 + 56);
  long long v10 = *(_OWORD *)(a3 + 72);
  long long v11 = *(_OWORD *)(a3 + 104);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a3 + 88);
  *(_OWORD *)(a1 + 144) = v11;
  *(_OWORD *)(a1 + 96) = v9;
  *(_OWORD *)(a1 + 112) = v10;
  long long v12 = *(_OWORD *)(a3 + 120);
  long long v13 = *(_OWORD *)(a3 + 136);
  long long v14 = *(_OWORD *)(a3 + 168);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a3 + 152);
  *(_OWORD *)(a1 + 208) = v14;
  *(_OWORD *)(a1 + 16sub_2168EBBB8(&a9, 0) = v12;
  *(_OWORD *)(a1 + 176) = v13;
  return a1;
}

uint64_t sub_216EFE9BC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v3 = *(void *)(a1 + 64);
  if ((v3 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v3 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 60));
  sub_21697C414((_DWORD *)(a1 + 56));
  uint64_t v4 = *(atomic_ullong **)(a1 + 48);
  if (v4) {
    sub_216D16E0C(v4);
  }
  uint64_t v5 = *(void *)(a1 + 32);
  if ((v5 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v5 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v6 = *(void *)(a1 + 24);
  if ((v6 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v6 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 20));
  sub_21697C414((_DWORD *)(a1 + 16));
  uint64_t v7 = *(atomic_ullong **)(a1 + 8);
  if (v7) {
    sub_216D16E0C(v7);
  }
  return a1;
}

uint64_t sub_216EFEA80(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4, uint64_t a5)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v10 = *(void *)(a2 + 8);
  *(void *)(a1 + 8) = v10;
  if (v10) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v10 + 48), 1uLL, memory_order_relaxed);
  }
  sub_216981010((_DWORD *)(a1 + 16), (_DWORD *)(a2 + 16));
  sub_21698105C((_DWORD *)(a1 + 20), (_DWORD *)(a2 + 20));
  uint64_t v11 = *(void *)(a2 + 24);
  *(void *)(a1 + 24) = v11;
  if ((v11 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v11 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    *(void *)(a1 + 24) &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v12 = *(void *)(a2 + 32);
  *(void *)(a1 + 32) = v12;
  if ((v12 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    *(void *)(a1 + 32) &= 0xFFFFFFFFFFFFFFF8;
  }
  long long v13 = *a3;
  long long v14 = a3[1];
  long long v15 = a3[2];
  *(_OWORD *)(a1 + 88) = a3[3];
  *(_OWORD *)(a1 + 72) = v15;
  *(_OWORD *)(a1 + 56) = v14;
  *(_OWORD *)(a1 + 4sub_2168EBBB8(&a9, 0) = v13;
  long long v16 = a3[4];
  long long v17 = a3[5];
  long long v18 = a3[6];
  *(_OWORD *)(a1 + 152) = a3[7];
  *(_OWORD *)(a1 + 136) = v18;
  *(_OWORD *)(a1 + 12sub_2168EBBB8(&a9, 0) = v17;
  *(_OWORD *)(a1 + 104) = v16;
  *(void *)(a1 + 168) = a4;
  *(void *)(a1 + 176) = a5;
  return a1;
}

void sub_216EFEB8C(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  uint64_t v1 = *(uint64_t ***)(a1 + 8);
  pxrInternal__aapl__pxrReserved__::WorkDispatcher::WorkDispatcher((pxrInternal__aapl__pxrReserved__::WorkDispatcher *)v6);
  uint64_t v2 = *v1;
  uint64_t v3 = **v1;
  uint64_t v4 = v2[1];
  while (v3 != v4)
  {
    if (*(void *)(v3 + 208))
    {
      uint64_t v5 = sub_216EFEC74((uint64_t)v6, v3 + 40);
      (***(void (****)(void, uint64_t, uint64_t))(v5 - 40))(*(void *)(v5 - 40), v5, v5 - 8);
    }
    v3 += 224;
  }
  pxrInternal__aapl__pxrReserved__::WorkDispatcher::~WorkDispatcher((pxrInternal__aapl__pxrReserved__::WorkDispatcher *)v6);
}

void sub_216EFEC54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
}

uint64_t sub_216EFEC74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 256);
  v7[0] = 0;
  v7[1] = v4;
  uint64_t v5 = tbb::internal::allocate_additional_child_of_proxy::allocate((tbb::internal::allocate_additional_child_of_proxy *)v7, 0xC8uLL);
  sub_216EFECEC(v5, a2, a1 + 264);
  return v5;
}

void sub_216EFECD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  tbb::internal::allocate_additional_child_of_proxy::free((tbb::internal::allocate_additional_child_of_proxy *)&a9, v9);
  _Unwind_Resume(a1);
}

uint64_t sub_216EFECEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)(a1 - 11) = 1;
  *(void *)a1 = &unk_26C76C4D0;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  if (v6) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v6 + 48), 1uLL, memory_order_relaxed);
  }
  sub_216981010((_DWORD *)(a1 + 24), (_DWORD *)(a2 + 16));
  sub_21698105C((_DWORD *)(a1 + 28), (_DWORD *)(a2 + 20));
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  if ((v7 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v7 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    *(void *)(a1 + 32) &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v8 = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_2168EBBB8(&a9, 0) = v8;
  if ((v8 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    *(void *)(a1 + 40) &= 0xFFFFFFFFFFFFFFF8;
  }
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 40);
  long long v9 = *(_OWORD *)(a2 + 56);
  long long v10 = *(_OWORD *)(a2 + 72);
  long long v11 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 112) = v11;
  *(_OWORD *)(a1 + 64) = v9;
  *(_OWORD *)(a1 + 8sub_2168EBBB8(&a9, 0) = v10;
  long long v12 = *(_OWORD *)(a2 + 120);
  long long v13 = *(_OWORD *)(a2 + 136);
  long long v14 = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 16sub_2168EBBB8(&a9, 0) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 176) = v14;
  *(_OWORD *)(a1 + 128) = v12;
  *(_OWORD *)(a1 + 144) = v13;
  *(void *)(a1 + 192) = a3;
  return a1;
}

uint64_t sub_216EFEE10(uint64_t *a1, uint64_t a2)
{
  unint64_t v3 = 0xCCCCCCCCCCCCCCCDLL * ((a1[1] - *a1) >> 3);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0x666666666666666) {
    sub_21677CB10();
  }
  if (0x999999999999999ALL * ((a1[2] - *a1) >> 3) > v4) {
    unint64_t v4 = 0x999999999999999ALL * ((a1[2] - *a1) >> 3);
  }
  if (0xCCCCCCCCCCCCCCCDLL * ((a1[2] - *a1) >> 3) >= 0x333333333333333) {
    unint64_t v6 = 0x666666666666666;
  }
  else {
    unint64_t v6 = v4;
  }
  long long v14 = a1 + 2;
  if (v6) {
    uint64_t v7 = (char *)sub_2168720A4((uint64_t)(a1 + 2), v6);
  }
  else {
    uint64_t v7 = 0;
  }
  long long v10 = v7;
  long long v11 = &v7[40 * v3];
  long long v13 = &v7[40 * v6];
  sub_216EFCDB0((uint64_t)(a1 + 2), (uint64_t)v11, a2);
  long long v12 = v11 + 40;
  sub_216EFEF20(a1, &v10);
  uint64_t v8 = a1[1];
  sub_216EFF144(&v10);
  return v8;
}

void sub_216EFEF0C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216EFF144((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_216EFEF20(uint64_t *a1, void *a2)
{
  uint64_t result = sub_216EFEF98((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_216EFEF98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  void v13[2] = &v16;
  char v14 = 0;
  if (a3 == a5)
  {
    uint64_t v11 = a6;
  }
  else
  {
    uint64_t v9 = a3;
    do
    {
      v9 -= 40;
      sub_216EFF050(a1, v7 - 40, v9);
      uint64_t v7 = *((void *)&v16 + 1) - 40;
      *((void *)&v16 + 1) -= 40;
    }
    while (v9 != a5);
    uint64_t v11 = v16;
  }
  char v14 = 1;
  sub_216EFF0B8((uint64_t)v13);
  return v11;
}

_DWORD *sub_216EFF050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a2 = *(_DWORD *)a3;
  *(void *)(a2 + 8) = *(void *)(a3 + 8);
  *(void *)(a3 + 8) = 0;
  sub_21697D878((_DWORD *)(a2 + 16), (_DWORD *)(a3 + 16));
  uint64_t result = sub_21697D8B4((_DWORD *)(a2 + 20), (_DWORD *)(a3 + 20));
  *(void *)(a2 + 24) = *(void *)(a3 + 24);
  *(void *)(a3 + 24) = 0;
  *(void *)(a2 + 32) = *(void *)(a3 + 32);
  *(void *)(a3 + 32) = 0;
  return result;
}

uint64_t sub_216EFF0B8(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_216EFF0F0((uint64_t *)a1);
  }
  return a1;
}

void sub_216EFF0F0(uint64_t *a1)
{
  uint64_t v1 = *(void *)(a1[2] + 8);
  uint64_t v2 = *(void *)(a1[1] + 8);
  if (v1 != v2)
  {
    uint64_t v3 = *a1;
    do
    {
      sub_216EFCEF0(v3, v1);
      v1 += 40;
    }
    while (v1 != v2);
  }
}

void **sub_216EFF144(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void sub_216EFF178(void *a1)
{
  uint64_t v2 = a1[1];
  for (uint64_t i = a1[2]; i != v2; uint64_t i = a1[2])
  {
    uint64_t v4 = a1[4];
    a1[2] = i - 40;
    sub_216EFCEF0(v4, i - 40);
  }
}

uint64_t sub_216EFF1C0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  sub_21678A04C(a1, *(void *)(a2 + 8));
  for (uint64_t i = *(void **)(a2 + 16); i; uint64_t i = (void *)*i)
    sub_216EFF238(a1, (uint64_t)(i + 2), (uint64_t)(i + 2));
  return a1;
}

void sub_216EFF220(_Unwind_Exception *a1)
{
  sub_216EFF674(v1);
  _Unwind_Resume(a1);
}

void *sub_216EFF238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v23 = 0;
  char v24 = 0;
  sub_216EFB75C((uint64_t)&v23, a2);
  unint64_t v7 = bswap64(0x9E3779B97F4A7C55 * (void)v23);
  unint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    unint64_t v10 = v9.u32[0];
    if (v9.u32[0] > 1uLL)
    {
      unint64_t v3 = v7;
      if (v7 >= v8) {
        unint64_t v3 = v7 % v8;
      }
    }
    else
    {
      unint64_t v3 = (v8 - 1) & v7;
    }
    uint64_t v11 = *(void **)(*(void *)a1 + 8 * v3);
    if (v11)
    {
      long long v12 = (void *)*v11;
      if (*v11)
      {
        do
        {
          unint64_t v13 = v12[1];
          if (v13 == v7)
          {
            if (sub_216EFB7C0((uint64_t)(v12 + 2), a2)) {
              return v12;
            }
          }
          else
          {
            if (v10 > 1)
            {
              if (v13 >= v8) {
                v13 %= v8;
              }
            }
            else
            {
              v13 &= v8 - 1;
            }
            if (v13 != v3) {
              break;
            }
          }
          long long v12 = (void *)*v12;
        }
        while (v12);
      }
    }
  }
  sub_216EFF4C8(a1, v7, a3, (uint64_t)&v23);
  float v14 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v15 = *(float *)(a1 + 32);
  if (!v8 || (float)(v15 * (float)v8) < v14)
  {
    BOOL v16 = 1;
    if (v8 >= 3) {
      BOOL v16 = (v8 & (v8 - 1)) != 0;
    }
    unint64_t v17 = v16 | (2 * v8);
    unint64_t v18 = vcvtps_u32_f32(v14 / v15);
    if (v17 <= v18) {
      size_t v19 = v18;
    }
    else {
      size_t v19 = v17;
    }
    sub_21678A04C(a1, v19);
    unint64_t v8 = *(void *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v7 >= v8) {
        unint64_t v3 = v7 % v8;
      }
      else {
        unint64_t v3 = v7;
      }
    }
    else
    {
      unint64_t v3 = (v8 - 1) & v7;
    }
  }
  int v20 = *(void **)(*(void *)a1 + 8 * v3);
  if (v20)
  {
    void *v23 = *v20;
    void *v20 = v23;
  }
  else
  {
    void *v23 = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v23;
    *(void *)(*(void *)a1 + 8 * v3) = a1 + 16;
    if (*v23)
    {
      unint64_t v21 = *(void *)(*v23 + 8);
      if ((v8 & (v8 - 1)) != 0)
      {
        if (v21 >= v8) {
          v21 %= v8;
        }
      }
      else
      {
        v21 &= v8 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v21) = v23;
    }
  }
  long long v12 = v23;
  uint64_t v23 = 0;
  ++*(void *)(a1 + 24);
  sub_216EFB904((uint64_t)&v23, 0);
  return v12;
}

void sub_216EFF4B0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216EFB904((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_216EFF4C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 16;
  unint64_t v8 = operator new(0x78uLL);
  *(void *)a4 = v8;
  *(void *)(a4 + 8) = v7;
  *(unsigned char *)(a4 + 16) = 0;
  *unint64_t v8 = 0;
  v8[1] = a2;
  uint64_t result = sub_216EFF540((uint64_t)(v8 + 2), a3);
  *(unsigned char *)(a4 + 16) = 1;
  return result;
}

void sub_216EFF528(_Unwind_Exception *a1)
{
  sub_216EFB904(v1, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_216EFF540(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)(a1 + 8) = v4;
  if (v4) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 48), 1uLL, memory_order_relaxed);
  }
  sub_216981010((_DWORD *)(a1 + 16), (_DWORD *)(a2 + 16));
  sub_21698105C((_DWORD *)(a1 + 20), (_DWORD *)(a2 + 20));
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 24) = v5;
  if ((v5 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v5 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    *(void *)(a1 + 24) &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 32) = v6;
  if ((v6 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v6 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    *(void *)(a1 + 32) &= 0xFFFFFFFFFFFFFFF8;
  }
  sub_216F02764((uint64_t *)(a1 + 40), a2 + 40);
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  if (v7) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v7 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 8sub_2168EBBB8(&a9, 0) = v8;
  if ((v8 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    *(void *)(a1 + 80) &= 0xFFFFFFFFFFFFFFF8;
  }
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  __int16 v9 = *(_WORD *)(a2 + 96);
  *(unsigned char *)(a1 + 98) = *(unsigned char *)(a2 + 98);
  *(_WORD *)(a1 + 96) = v9;
  return a1;
}

void sub_216EFF660(_Unwind_Exception *a1)
{
  sub_216EF75B4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_216EFF674(uint64_t a1)
{
  sub_216EFF6B0(a1, *(void **)(a1 + 16));
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void sub_216EFF6B0(uint64_t a1, void *a2)
{
  if (a2)
  {
    uint64_t v2 = a2;
    do
    {
      unint64_t v3 = (void *)*v2;
      sub_216EFB95C((uint64_t)(v2 + 2));
      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
}

void sub_216EFF6F4(void *a1, void *a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v6 = a1[1];
  if (v6)
  {
    for (uint64_t i = 0; i != v6; ++i)
      *(void *)(*a1 + 8 * i) = 0;
    uint64_t v8 = (void *)a1[2];
    a1[2] = 0;
    a1[3] = 0;
    if (v8) {
      BOOL v9 = a2 == a3;
    }
    else {
      BOOL v9 = 1;
    }
    if (v9)
    {
      unint64_t v10 = v8;
    }
    else
    {
      do
      {
        v12[0] = v8 + 2;
        v12[1] = v8 + 7;
        sub_216EFF890((uint64_t)v12, (uint64_t)(v4 + 2));
        unint64_t v10 = (void *)*v8;
        sub_216EFF804(a1, v8);
        uint64_t v4 = (void *)*v4;
        if (v10) {
          BOOL v11 = v4 == a3;
        }
        else {
          BOOL v11 = 1;
        }
        uint64_t v8 = v10;
      }
      while (!v11);
    }
    sub_216EFF6B0((uint64_t)a1, v10);
  }
  while (v4 != a3)
  {
    sub_216EFFD94(a1, (uint64_t)(v4 + 2));
    uint64_t v4 = (void *)*v4;
  }
}

void sub_216EFF7D4(void *a1)
{
  __cxa_begin_catch(a1);
  sub_216EFF6B0(v1, v2);
  __cxa_rethrow();
}

void sub_216EFF7F0(_Unwind_Exception *a1)
{
}

void *sub_216EFF804(void *a1, void *a2)
{
  uint64_t v4 = (uint64_t)(a2 + 2);
  uint64_t v8 = 0;
  char v9 = 0;
  sub_216EFB75C((uint64_t)&v8, (uint64_t)(a2 + 2));
  unint64_t v5 = bswap64(0x9E3779B97F4A7C55 * v8);
  a2[1] = v5;
  uint64_t v6 = sub_216EFF988((uint64_t)a1, v5, v4);
  sub_216862FF0(a1, a2, v6);
  return a2;
}

uint64_t sub_216EFF890(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(_DWORD **)a1;
  **(_DWORD **)a1 = *(_DWORD *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 48), 1uLL, memory_order_relaxed);
  }
  uint64_t v6 = (atomic_ullong *)*((void *)v4 + 1);
  *((void *)v4 + 1) = v5;
  if (v6) {
    sub_216D16E0C(v6);
  }
  sub_2169C487C(v4 + 4, (_DWORD *)(a2 + 16));
  sub_2169C48D4(v4 + 5, (_DWORD *)(a2 + 20));
  sub_2168D2318((void *)v4 + 3, (void *)(a2 + 24));
  sub_2168D2318((void *)v4 + 4, (void *)(a2 + 32));
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7 != a2 + 40) {
    sub_216F01D34(*(uint64_t ***)(a1 + 8), *(void **)(a2 + 40), (void *)(a2 + 48));
  }
  uint64_t v9 = *(void *)(a2 + 64);
  uint64_t v8 = *(void *)(a2 + 72);
  if (v8) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v8 + 8), 1uLL, memory_order_relaxed);
  }
  unint64_t v10 = *(std::__shared_weak_count **)(v7 + 32);
  *(void *)(v7 + 24) = v9;
  *(void *)(v7 + 32) = v8;
  if (v10) {
    sub_216784EC4(v10);
  }
  sub_2168D2318((void *)(v7 + 40), (void *)(a2 + 80));
  *(unsigned char *)(v7 + 48) = *(unsigned char *)(a2 + 88);
  __int16 v11 = *(_WORD *)(a2 + 96);
  *(unsigned char *)(v7 + 58) = *(unsigned char *)(a2 + 98);
  *(_WORD *)(v7 + 56) = v11;
  return a1;
}

void *sub_216EFF988(uint64_t a1, unint64_t a2, uint64_t a3)
{
  unint64_t v6 = *(void *)(a1 + 8);
  float v7 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v8 = *(float *)(a1 + 32);
  if (!v6 || (float)(v8 * (float)v6) < v7)
  {
    BOOL v9 = 1;
    if (v6 >= 3) {
      BOOL v9 = (v6 & (v6 - 1)) != 0;
    }
    unint64_t v10 = v9 | (2 * v6);
    unint64_t v11 = vcvtps_u32_f32(v7 / v8);
    if (v10 <= v11) {
      size_t v12 = v11;
    }
    else {
      size_t v12 = v10;
    }
    sub_216EFFAEC(a1, v12);
    unint64_t v6 = *(void *)(a1 + 8);
  }
  uint8x8_t v13 = (uint8x8_t)vcnt_s8((int8x8_t)v6);
  v13.i16[0] = vaddlv_u8(v13);
  unint64_t v14 = v13.u32[0];
  if (v13.u32[0] > 1uLL)
  {
    unint64_t v15 = a2;
    if (v6 <= a2) {
      unint64_t v15 = a2 % v6;
    }
  }
  else
  {
    unint64_t v15 = (v6 - 1) & a2;
  }
  BOOL v16 = *(void **)(*(void *)a1 + 8 * v15);
  if (v16)
  {
    unint64_t v17 = (void *)*v16;
    if (*v16)
    {
      int v18 = 0;
      do
      {
        unint64_t v19 = v17[1];
        if (v14 > 1)
        {
          unint64_t v20 = v17[1];
          if (v19 >= v6) {
            unint64_t v20 = v19 % v6;
          }
        }
        else
        {
          unint64_t v20 = v19 & (v6 - 1);
        }
        if (v20 != v15) {
          break;
        }
        BOOL v21 = v19 == a2 && sub_216EFB7C0((uint64_t)(v17 + 2), a3);
        if (v18 & !v21) {
          break;
        }
        v18 |= v21;
        BOOL v16 = (void *)*v16;
        unint64_t v17 = (void *)*v16;
      }
      while (*v16);
    }
  }
  return v16;
}

void sub_216EFFAEC(uint64_t a1, size_t __n)
{
  if (__n == 1)
  {
    size_t prime = 2;
  }
  else
  {
    size_t prime = __n;
    if ((__n & (__n - 1)) != 0) {
      size_t prime = std::__next_prime(__n);
    }
  }
  int8x8_t v4 = *(int8x8_t *)(a1 + 8);
  if (prime > *(void *)&v4) {
    goto LABEL_16;
  }
  if (prime < *(void *)&v4)
  {
    unint64_t v5 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(void *)&v4 < 3uLL || (uint8x8_t v6 = (uint8x8_t)vcnt_s8(v4), v6.i16[0] = vaddlv_u8(v6), v6.u32[0] > 1uLL))
    {
      unint64_t v5 = std::__next_prime(v5);
    }
    else
    {
      uint64_t v7 = 1 << -(char)__clz(v5 - 1);
      if (v5 >= 2) {
        unint64_t v5 = v7;
      }
    }
    if (prime <= v5) {
      size_t prime = v5;
    }
    if (prime < *(void *)&v4)
    {
LABEL_16:
      sub_216EFFBDC(a1, prime);
    }
  }
}

void sub_216EFFBDC(uint64_t a1, unint64_t a2)
{
  if (a2)
  {
    if (a2 >> 61) {
      sub_21677CA1C();
    }
    int8x8_t v4 = operator new(8 * a2);
    unint64_t v5 = *(void **)a1;
    *(void *)a1 = v4;
    if (v5) {
      operator delete(v5);
    }
    uint64_t v6 = 0;
    *(void *)(a1 + 8) = a2;
    do
      *(void *)(*(void *)a1 + 8 * v6++) = 0;
    while (a2 != v6);
    uint64_t v7 = *(void **)(a1 + 16);
    if (v7)
    {
      unint64_t v8 = v7[1];
      uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)a2);
      v9.i16[0] = vaddlv_u8(v9);
      unint64_t v10 = v9.u32[0];
      if (v9.u32[0] > 1uLL)
      {
        if (v8 >= a2) {
          v8 %= a2;
        }
      }
      else
      {
        v8 &= a2 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v8) = a1 + 16;
      for (uint64_t i = (void *)*v7; *v7; uint64_t i = (void *)*v7)
      {
        unint64_t v13 = i[1];
        if (v10 > 1)
        {
          if (v13 >= a2) {
            v13 %= a2;
          }
        }
        else
        {
          v13 &= a2 - 1;
        }
        if (v13 == v8)
        {
          uint64_t v7 = i;
        }
        else if (*(void *)(*(void *)a1 + 8 * v13))
        {
          unint64_t v14 = (void *)*i;
          if (*i)
          {
            unint64_t v15 = i;
            while (1)
            {
              BOOL v16 = sub_216EFB7C0((uint64_t)(i + 2), (uint64_t)(v14 + 2));
              unint64_t v17 = (void *)*v15;
              if (!v16) {
                break;
              }
              unint64_t v14 = (void *)*v17;
              unint64_t v15 = (void *)*v15;
              if (!*v17) {
                goto LABEL_31;
              }
            }
            unint64_t v14 = (void *)*v15;
            unint64_t v17 = v15;
          }
          else
          {
            unint64_t v17 = i;
          }
LABEL_31:
          *uint64_t v7 = v14;
          void *v17 = **(void **)(*(void *)a1 + 8 * v13);
          **(void **)(*(void *)a1 + 8 * v13) = i;
        }
        else
        {
          *(void *)(*(void *)a1 + 8 * v13) = v7;
          uint64_t v7 = i;
          unint64_t v8 = v13;
        }
      }
    }
  }
  else
  {
    unint64_t v11 = *(void **)a1;
    *(void *)a1 = 0;
    if (v11) {
      operator delete(v11);
    }
    *(void *)(a1 + 8) = 0;
  }
}

void *sub_216EFFD94(void *a1, uint64_t a2)
{
  sub_216EFFE00((uint64_t)a1, a2, (uint64_t)v5);
  unint64_t v3 = sub_216EFF804(a1, v5[0]);
  v5[0] = 0;
  sub_216EFB904((uint64_t)v5, 0);
  return v3;
}

void sub_216EFFDE8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216EFB904((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_216EFFE00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 16;
  uint64_t v6 = operator new(0x78uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  void *v6 = 0;
  v6[1] = 0;
  sub_216EFF540((uint64_t)(v6 + 2), a2);
  *(unsigned char *)(a3 + 16) = 1;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t result = sub_216EFB75C((uint64_t)&v8, (uint64_t)(v6 + 2));
  v6[1] = bswap64(0x9E3779B97F4A7C55 * v8);
  return result;
}

void sub_216EFFE9C(_Unwind_Exception *a1)
{
  sub_216EFB904(v1, 0);
  _Unwind_Resume(a1);
}

char *sub_216EFFEB4(uint64_t a1, _DWORD *a2)
{
  sub_216981010(&v6, a2);
  sub_21698105C(&v7, a2 + 1);
  char v8 = 0;
  int8x8_t v4 = sub_216EFFF48(a1, &v6);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  return (char *)v4 + 8;
}

void sub_216EFFF34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
}

pxrInternal__aapl__pxrReserved__::SdfPath *sub_216EFFF48(uint64_t a1, unsigned int *a2)
{
  unsigned int v6 = a2;
  uint64_t result = (pxrInternal__aapl__pxrReserved__::SdfPath *)sub_216F000C0(a1, a2, (uint64_t *)&v6);
  v5[0] = result;
  v5[1] = v4;
  if ((_BYTE)v4)
  {
    sub_216EFFFD8(a1, v5);
    return v5[0];
  }
  return result;
}

_DWORD *sub_216EFFF98(_DWORD *a1)
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(a1 + 1);

  return sub_21697C414(a1);
}

_DWORD *sub_216EFFFD8(uint64_t a1, pxrInternal__aapl__pxrReserved__::SdfPath **a2)
{
  unint64_t v3 = *a2;
  pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath(*a2, &v11);
  if (pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator BOOL(&v11))
  {
    sub_216981010(&v8, &v11);
    sub_21698105C(&v9, &v12);
    char v10 = 0;
    uint64_t v4 = sub_216EFFF48(a1, &v8);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
    sub_21697C414(&v8);
    uint64_t v5 = *(void *)(v4 + 24);
    if (v5) {
      uint64_t v6 = v5 | 1;
    }
    else {
      uint64_t v6 = v4;
    }
    *((void *)v3 + 4) = v6;
    *(void *)(v4 + 24) = v3;
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v12);
  return sub_21697C414(&v11);
}

void sub_216F0009C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, int a13)
{
}

void *sub_216F000C0(uint64_t a1, unsigned int *a2, uint64_t *a3)
{
  uint64_t v6 = *(void *)(a1 + 32);
  if (!v6)
  {
    sub_216F00208((void **)a1);
    uint64_t v6 = *(void *)(a1 + 32);
  }
  int v7 = (void *)(*(void *)a1
                + 8
                * (bswap64(0x9E3779B97F4A7C55* (a2[1]+ ((a2[1] + (unint64_t)*a2 + (a2[1] + (unint64_t)*a2)* (a2[1] + (unint64_t)*a2)) >> 1))) & v6));
  int v8 = (void *)*v7;
  if (*v7)
  {
    int v9 = (void *)*v7;
    while (*v9 != *(void *)a2)
    {
      int v9 = (void *)v9[2];
      if (!v9) {
        goto LABEL_7;
      }
    }
  }
  else
  {
LABEL_7:
    if (*(void *)(a1 + 24) > (unint64_t)((uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 3))
    {
      sub_216F00208((void **)a1);
      int v7 = (void *)(*(void *)a1
                    + 8
                    * (bswap64(0x9E3779B97F4A7C55* (a2[1]+ ((a2[1]+ (unint64_t)*a2+ (a2[1] + (unint64_t)*a2) * (a2[1] + (unint64_t)*a2)) >> 1))) & *(void *)(a1 + 32)));
      int v8 = (void *)*v7;
    }
    int v9 = operator new(0x28uLL);
    uint64_t v10 = *a3;
    int v11 = sub_216981010(v9, (_DWORD *)v10);
    sub_21698105C(v11 + 1, (_DWORD *)(v10 + 4));
    *((unsigned char *)v9 + 8) = *(unsigned char *)(v10 + 8);
    void v9[3] = 0;
    void v9[4] = 0;
    void v9[2] = v8;
    *int v7 = v9;
    ++*(void *)(a1 + 24);
  }
  return v9;
}

void sub_216F00208(void **a1)
{
  sub_216851EE4((uint64_t)&v21, "Sdf", "SdfPathTable::_Grow");
  unsigned __int8 v3 = atomic_load(pxrInternal__aapl__pxrReserved__::TfMallocTag::_isInitialized);
  if (v3)
  {
    uint64_t v4 = pxrInternal__aapl__pxrReserved__::TfMallocTag::_Begin("void pxrInternal__aapl__pxrReserved__::SdfPathTable<BOOL>::_Grow() [MappedType = BOOL]", 0, v2);
    BOOL v5 = v4 != 0;
  }
  else
  {
    uint64_t v4 = 0;
    BOOL v5 = 0;
  }
  unint64_t v19 = v4;
  unsigned int v20 = v5;
  unint64_t v6 = (2 * (void)a1[4]) | 1;
  if (v6 <= 7) {
    unint64_t v6 = 7;
  }
  a1[4] = (void *)v6;
  sub_216F003C0(&v17, v6 + 1);
  int v7 = a1[1];
  if (v7 != *a1)
  {
    uint64_t v8 = 0;
    uint64_t v9 = (v7 - (unsigned char *)*a1) >> 3;
    do
    {
      uint64_t v10 = (unsigned int *)*((void *)*a1 + v8);
      if (v10)
      {
        unint64_t v11 = (unint64_t)a1[4];
        do
        {
          int v12 = (unsigned int *)*((void *)v10 + 2);
          unint64_t v13 = bswap64(0x9E3779B97F4A7C55* (v10[1]+ ((v10[1]+ (unint64_t)*v10+ (v10[1] + (unint64_t)*v10) * (v10[1] + (unint64_t)*v10)) >> 1))) & v11;
          uint64_t v14 = v17;
          *((void *)v10 + 2) = *(void *)(v17 + 8 * v13);
          *(void *)(v14 + 8 * v13) = v10;
          uint64_t v10 = v12;
        }
        while (v12);
      }
      ++v8;
    }
    while (v8 != v9);
    int v7 = *a1;
  }
  *(_OWORD *)a1 = v17;
  unint64_t v15 = a1[2];
  a1[2] = v18;
  *(void *)&long long v17 = v7;
  int v18 = v15;
  if (v7)
  {
    *((void *)&v17 + 1) = v7;
    operator delete(v7);
  }
  unsigned int v20 = v5 - 1;
  if (v5)
  {
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End((uint64_t)v4);
    unsigned int v20 = v5 | 0xFFFFFFFE;
  }
  while (v22--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v21);
}

void sub_216F00394(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  sub_21684E6B8((uint64_t)va);
  _Unwind_Resume(a1);
}

void *sub_216F003C0(void *a1, unint64_t a2)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_21677CACC(a1, a2);
    uint64_t v4 = (char *)a1[1];
    bzero(v4, 8 * a2);
    a1[1] = &v4[8 * a2];
  }
  return a1;
}

void sub_216F0041C(_Unwind_Exception *exception_object)
{
  unsigned __int8 v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_216F00438(uint64_t a1, uint64_t a2)
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a1 + 16));
  uint64_t v4 = (pxrInternal__aapl__pxrReserved__ *)pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a1 + 20));
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 4sub_2168EBBB8(&a9, 0) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (!v5) {
    goto LABEL_20;
  }
  uint64_t v6 = *(void *)(v5 + 40) & 7;
  unint64_t v7 = *(void *)(v5 + 40) & 0xFFFFFFFFFFFFFFF8;
  if (v7) {
    BOOL v8 = v6 == 0;
  }
  else {
    BOOL v8 = 0;
  }
  if (v8) {
    goto LABEL_21;
  }
  if (!v6 || v7 == 0)
  {
LABEL_20:
    unint64_t v7 = 0;
    goto LABEL_21;
  }
  while (1)
  {
    uint64_t v10 = *(void *)(v7 + 40);
    unint64_t v7 = v10 & 0xFFFFFFFFFFFFFFF8;
    if ((v10 & 7) == 0 && v7 != 0) {
      break;
    }
    if (v7) {
      BOOL v12 = (v10 & 7) == 0;
    }
    else {
      BOOL v12 = 1;
    }
    if (v12) {
      goto LABEL_20;
    }
  }
LABEL_21:
  UsdPrimDefaultPredicate = (void *)pxrInternal__aapl__pxrReserved__::GetUsdPrimDefaultPredicate(v4);
  sub_216D3B800(a1, v5, v7, (_DWORD *)(a2 + 16), UsdPrimDefaultPredicate);
  return a1;
}

void sub_216F00504(_Unwind_Exception *a1)
{
  sub_21697B754(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_216F00518(uint64_t *a1)
{
  sub_216F00550(a1);
  uint64_t v2 = (void *)*a1;
  if (*a1)
  {
    a1[1] = (uint64_t)v2;
    operator delete(v2);
  }
  return a1;
}

void sub_216F00550(uint64_t *a1)
{
  uint64_t v2 = a1[1] - *a1;
  if (v2)
  {
    uint64_t v3 = 0;
    uint64_t v4 = v2 >> 3;
    do
    {
      uint64_t v5 = *a1;
      uint64_t v6 = *(void *)(*a1 + 8 * v3);
      if (v6)
      {
        do
        {
          uint64_t v7 = *(void *)(v6 + 16);
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(v6 + 4));
          BOOL v8 = sub_21697C414((_DWORD *)v6);
          operator delete(v8);
          uint64_t v6 = v7;
        }
        while (v7);
        uint64_t v5 = *a1;
      }
      *(void *)(v5 + 8 * v3++) = 0;
    }
    while (v3 != v4);
  }
  a1[3] = 0;
}

void sub_216F005DC(uint64_t a1)
{
  if (*(void *)(a1 + 24))
  {
    sub_216EFF6B0(a1, *(void **)(a1 + 16));
    *(void *)(a1 + 16) = 0;
    uint64_t v2 = *(void *)(a1 + 8);
    if (v2)
    {
      for (uint64_t i = 0; i != v2; ++i)
        *(void *)(*(void *)a1 + 8 * i) = 0;
    }
    *(void *)(a1 + 24) = 0;
  }
}

pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *sub_216F00634(atomic_ullong *a1)
{
  uint64_t result = sub_216F0067C();
  uint64_t v3 = 0;
  atomic_compare_exchange_strong(a1, (unint64_t *)&v3, (unint64_t)result);
  if (v3)
  {
    if (result)
    {
      uint64_t v4 = (void *)sub_216F006C0((uint64_t)result);
      operator delete(v4);
    }
    return (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)a1);
  }
  return result;
}

pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *sub_216F0067C()
{
  uint64_t v0 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)operator new(0x660uLL);
  pxrInternal__aapl__pxrReserved__::UsdGeomTokensType::UsdGeomTokensType(v0);
  return v0;
}

void sub_216F006AC(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_216F006C0(uint64_t a1)
{
  uint64_t v203 = (void **)(a1 + 1608);
  sub_216889A04(&v203);
  uint64_t v2 = *(void *)(a1 + 1600);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v3 = *(void *)(a1 + 1592);
  if ((v3 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v3 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v4 = *(void *)(a1 + 1584);
  if ((v4 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v4 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v5 = *(void *)(a1 + 1576);
  if ((v5 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v5 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v6 = *(void *)(a1 + 1568);
  if ((v6 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v6 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v7 = *(void *)(a1 + 1560);
  if ((v7 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v7 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v8 = *(void *)(a1 + 1552);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v9 = *(void *)(a1 + 1544);
  if ((v9 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v9 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v10 = *(void *)(a1 + 1536);
  if ((v10 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v10 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v11 = *(void *)(a1 + 1528);
  if ((v11 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v11 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v12 = *(void *)(a1 + 1520);
  if ((v12 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v13 = *(void *)(a1 + 1512);
  if ((v13 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v13 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v14 = *(void *)(a1 + 1504);
  if ((v14 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v14 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v15 = *(void *)(a1 + 1496);
  if ((v15 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v15 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v16 = *(void *)(a1 + 1488);
  if ((v16 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v16 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v17 = *(void *)(a1 + 1480);
  if ((v17 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v17 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v18 = *(void *)(a1 + 1472);
  if ((v18 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v18 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v19 = *(void *)(a1 + 1464);
  if ((v19 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v19 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v20 = *(void *)(a1 + 1456);
  if ((v20 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v20 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v21 = *(void *)(a1 + 1448);
  if ((v21 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v21 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v22 = *(void *)(a1 + 1440);
  if ((v22 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v22 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v23 = *(void *)(a1 + 1432);
  if ((v23 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v23 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v24 = *(void *)(a1 + 1424);
  if ((v24 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v24 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v25 = *(void *)(a1 + 1416);
  if ((v25 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v25 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v26 = *(void *)(a1 + 1408);
  if ((v26 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v26 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v27 = *(void *)(a1 + 1400);
  if ((v27 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v27 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v28 = *(void *)(a1 + 1392);
  if ((v28 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v28 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v29 = *(void *)(a1 + 1384);
  if ((v29 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v29 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v30 = *(void *)(a1 + 1376);
  if ((v30 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v30 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v31 = *(void *)(a1 + 1368);
  if ((v31 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v31 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v32 = *(void *)(a1 + 1360);
  if ((v32 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v32 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v33 = *(void *)(a1 + 1352);
  if ((v33 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v33 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v34 = *(void *)(a1 + 1344);
  if ((v34 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v34 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v35 = *(void *)(a1 + 1336);
  if ((v35 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v35 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v36 = *(void *)(a1 + 1328);
  if ((v36 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v36 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v37 = *(void *)(a1 + 1320);
  if ((v37 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v37 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v38 = *(void *)(a1 + 1312);
  if ((v38 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v38 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v39 = *(void *)(a1 + 1304);
  if ((v39 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v39 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v40 = *(void *)(a1 + 1296);
  if ((v40 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v40 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v41 = *(void *)(a1 + 1288);
  if ((v41 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v41 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v42 = *(void *)(a1 + 1280);
  if ((v42 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v42 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v43 = *(void *)(a1 + 1272);
  if ((v43 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v43 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v44 = *(void *)(a1 + 1264);
  if ((v44 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v44 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v45 = *(void *)(a1 + 1256);
  if ((v45 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v45 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v46 = *(void *)(a1 + 1248);
  if ((v46 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v46 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v47 = *(void *)(a1 + 1240);
  if ((v47 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v47 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v48 = *(void *)(a1 + 1232);
  if ((v48 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v48 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v49 = *(void *)(a1 + 1224);
  if ((v49 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v49 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v50 = *(void *)(a1 + 1216);
  if ((v50 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v50 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v51 = *(void *)(a1 + 1208);
  if ((v51 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v51 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v52 = *(void *)(a1 + 1200);
  if ((v52 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v52 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v53 = *(void *)(a1 + 1192);
  if ((v53 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v53 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v54 = *(void *)(a1 + 1184);
  if ((v54 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v54 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v55 = *(void *)(a1 + 1176);
  if ((v55 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v55 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v56 = *(void *)(a1 + 1168);
  if ((v56 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v56 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v57 = *(void *)(a1 + 1160);
  if ((v57 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v57 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v58 = *(void *)(a1 + 1152);
  if ((v58 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v58 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v59 = *(void *)(a1 + 1144);
  if ((v59 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v59 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v60 = *(void *)(a1 + 1136);
  if ((v60 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v60 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v61 = *(void *)(a1 + 1128);
  if ((v61 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v61 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v62 = *(void *)(a1 + 1120);
  if ((v62 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v62 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v63 = *(void *)(a1 + 1112);
  if ((v63 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v63 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v64 = *(void *)(a1 + 1104);
  if ((v64 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v64 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v65 = *(void *)(a1 + 1096);
  if ((v65 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v65 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v66 = *(void *)(a1 + 1088);
  if ((v66 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v66 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v67 = *(void *)(a1 + 1080);
  if ((v67 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v67 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v68 = *(void *)(a1 + 1072);
  if ((v68 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v68 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v69 = *(void *)(a1 + 1064);
  if ((v69 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v69 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v70 = *(void *)(a1 + 1056);
  if ((v70 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v70 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v71 = *(void *)(a1 + 1048);
  if ((v71 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v71 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v72 = *(void *)(a1 + 1040);
  if ((v72 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v72 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v73 = *(void *)(a1 + 1032);
  if ((v73 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v73 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v74 = *(void *)(a1 + 1024);
  if ((v74 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v74 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v75 = *(void *)(a1 + 1016);
  if ((v75 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v75 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v76 = *(void *)(a1 + 1008);
  if ((v76 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v76 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v77 = *(void *)(a1 + 1000);
  if ((v77 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v77 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v78 = *(void *)(a1 + 992);
  if ((v78 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v78 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v79 = *(void *)(a1 + 984);
  if ((v79 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v79 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v80 = *(void *)(a1 + 976);
  if ((v80 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v80 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v81 = *(void *)(a1 + 968);
  if ((v81 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v81 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v82 = *(void *)(a1 + 960);
  if ((v82 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v82 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v83 = *(void *)(a1 + 952);
  if ((v83 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v83 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v84 = *(void *)(a1 + 944);
  if ((v84 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v84 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v85 = *(void *)(a1 + 936);
  if ((v85 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v85 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v86 = *(void *)(a1 + 928);
  if ((v86 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v86 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v87 = *(void *)(a1 + 920);
  if ((v87 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v87 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v88 = *(void *)(a1 + 912);
  if ((v88 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v88 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v89 = *(void *)(a1 + 904);
  if ((v89 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v89 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v90 = *(void *)(a1 + 896);
  if ((v90 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v90 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v91 = *(void *)(a1 + 888);
  if ((v91 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v91 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v92 = *(void *)(a1 + 880);
  if ((v92 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v92 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v93 = *(void *)(a1 + 872);
  if ((v93 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v93 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v94 = *(void *)(a1 + 864);
  if ((v94 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v94 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v95 = *(void *)(a1 + 856);
  if ((v95 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v95 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v96 = *(void *)(a1 + 848);
  if ((v96 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v96 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v97 = *(void *)(a1 + 840);
  if ((v97 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v97 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v98 = *(void *)(a1 + 832);
  if ((v98 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v98 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v99 = *(void *)(a1 + 824);
  if ((v99 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v99 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v100 = *(void *)(a1 + 816);
  if ((v100 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v100 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v101 = *(void *)(a1 + 808);
  if ((v101 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v101 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v102 = *(void *)(a1 + 800);
  if ((v102 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v102 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v103 = *(void *)(a1 + 792);
  if ((v103 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v103 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v104 = *(void *)(a1 + 784);
  if ((v104 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v104 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v105 = *(void *)(a1 + 776);
  if ((v105 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v105 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v106 = *(void *)(a1 + 768);
  if ((v106 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v106 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v107 = *(void *)(a1 + 760);
  if ((v107 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v107 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v108 = *(void *)(a1 + 752);
  if ((v108 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v108 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v109 = *(void *)(a1 + 744);
  if ((v109 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v109 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v110 = *(void *)(a1 + 736);
  if ((v110 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v110 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v111 = *(void *)(a1 + 728);
  if ((v111 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v111 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v112 = *(void *)(a1 + 720);
  if ((v112 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v112 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v113 = *(void *)(a1 + 712);
  if ((v113 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v113 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v114 = *(void *)(a1 + 704);
  if ((v114 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v114 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v115 = *(void *)(a1 + 696);
  if ((v115 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v115 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v116 = *(void *)(a1 + 688);
  if ((v116 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v116 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v117 = *(void *)(a1 + 680);
  if ((v117 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v117 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v118 = *(void *)(a1 + 672);
  if ((v118 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v118 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v119 = *(void *)(a1 + 664);
  if ((v119 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v119 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v120 = *(void *)(a1 + 656);
  if ((v120 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v120 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v121 = *(void *)(a1 + 648);
  if ((v121 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v121 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v122 = *(void *)(a1 + 640);
  if ((v122 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v122 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v123 = *(void *)(a1 + 632);
  if ((v123 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v123 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v124 = *(void *)(a1 + 624);
  if ((v124 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v124 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v125 = *(void *)(a1 + 616);
  if ((v125 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v125 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v126 = *(void *)(a1 + 608);
  if ((v126 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v126 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v127 = *(void *)(a1 + 600);
  if ((v127 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v127 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v128 = *(void *)(a1 + 592);
  if ((v128 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v128 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v129 = *(void *)(a1 + 584);
  if ((v129 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v129 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v130 = *(void *)(a1 + 576);
  if ((v130 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v130 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v131 = *(void *)(a1 + 568);
  if ((v131 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v131 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v132 = *(void *)(a1 + 560);
  if ((v132 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v132 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v133 = *(void *)(a1 + 552);
  if ((v133 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v133 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v134 = *(void *)(a1 + 544);
  if ((v134 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v134 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v135 = *(void *)(a1 + 536);
  if ((v135 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v135 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v136 = *(void *)(a1 + 528);
  if ((v136 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v136 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v137 = *(void *)(a1 + 520);
  if ((v137 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v137 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v138 = *(void *)(a1 + 512);
  if ((v138 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v138 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v139 = *(void *)(a1 + 504);
  if ((v139 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v139 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v140 = *(void *)(a1 + 496);
  if ((v140 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v140 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v141 = *(void *)(a1 + 488);
  if ((v141 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v141 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v142 = *(void *)(a1 + 480);
  if ((v142 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v142 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v143 = *(void *)(a1 + 472);
  if ((v143 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v143 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v144 = *(void *)(a1 + 464);
  if ((v144 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v144 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v145 = *(void *)(a1 + 456);
  if ((v145 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v145 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v146 = *(void *)(a1 + 448);
  if ((v146 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v146 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v147 = *(void *)(a1 + 440);
  if ((v147 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v147 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v148 = *(void *)(a1 + 432);
  if ((v148 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v148 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v149 = *(void *)(a1 + 424);
  if ((v149 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v149 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v150 = *(void *)(a1 + 416);
  if ((v150 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v150 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v151 = *(void *)(a1 + 408);
  if ((v151 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v151 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v152 = *(void *)(a1 + 400);
  if ((v152 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v152 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v153 = *(void *)(a1 + 392);
  if ((v153 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v153 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v154 = *(void *)(a1 + 384);
  if ((v154 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v154 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v155 = *(void *)(a1 + 376);
  if ((v155 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v155 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v156 = *(void *)(a1 + 368);
  if ((v156 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v156 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v157 = *(void *)(a1 + 360);
  if ((v157 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v157 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v158 = *(void *)(a1 + 352);
  if ((v158 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v158 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v159 = *(void *)(a1 + 344);
  if ((v159 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v159 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v160 = *(void *)(a1 + 336);
  if ((v160 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v160 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v161 = *(void *)(a1 + 328);
  if ((v161 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v161 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v162 = *(void *)(a1 + 320);
  if ((v162 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v162 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v163 = *(void *)(a1 + 312);
  if ((v163 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v163 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v164 = *(void *)(a1 + 304);
  if ((v164 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v164 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v165 = *(void *)(a1 + 296);
  if ((v165 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v165 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v166 = *(void *)(a1 + 288);
  if ((v166 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v166 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v167 = *(void *)(a1 + 280);
  if ((v167 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v167 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v168 = *(void *)(a1 + 272);
  if ((v168 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v168 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v169 = *(void *)(a1 + 264);
  if ((v169 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v169 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v170 = *(void *)(a1 + 256);
  if ((v170 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v170 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v171 = *(void *)(a1 + 248);
  if ((v171 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v171 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v172 = *(void *)(a1 + 240);
  if ((v172 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v172 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v173 = *(void *)(a1 + 232);
  if ((v173 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v173 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v174 = *(void *)(a1 + 224);
  if ((v174 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v174 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v175 = *(void *)(a1 + 216);
  if ((v175 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v175 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v176 = *(void *)(a1 + 208);
  if ((v176 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v176 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v177 = *(void *)(a1 + 200);
  if ((v177 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v177 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v178 = *(void *)(a1 + 192);
  if ((v178 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v178 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v179 = *(void *)(a1 + 184);
  if ((v179 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v179 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v180 = *(void *)(a1 + 176);
  if ((v180 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v180 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v181 = *(void *)(a1 + 168);
  if ((v181 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v181 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v182 = *(void *)(a1 + 160);
  if ((v182 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v182 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v183 = *(void *)(a1 + 152);
  if ((v183 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v183 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v184 = *(void *)(a1 + 144);
  if ((v184 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v184 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v185 = *(void *)(a1 + 136);
  if ((v185 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v185 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v186 = *(void *)(a1 + 128);
  if ((v186 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v186 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v187 = *(void *)(a1 + 120);
  if ((v187 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v187 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v188 = *(void *)(a1 + 112);
  if ((v188 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v188 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v189 = *(void *)(a1 + 104);
  if ((v189 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v189 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v190 = *(void *)(a1 + 96);
  if ((v190 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v190 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v191 = *(void *)(a1 + 88);
  if ((v191 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v191 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v192 = *(void *)(a1 + 80);
  if ((v192 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v192 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v193 = *(void *)(a1 + 72);
  if ((v193 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v193 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v194 = *(void *)(a1 + 64);
  if ((v194 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v194 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v195 = *(void *)(a1 + 56);
  if ((v195 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v195 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v196 = *(void *)(a1 + 48);
  if ((v196 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v196 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v197 = *(void *)(a1 + 40);
  if ((v197 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v197 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v198 = *(void *)(a1 + 32);
  if ((v198 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v198 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v199 = *(void *)(a1 + 24);
  if ((v199 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v199 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v200 = *(void *)(a1 + 16);
  if ((v200 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v200 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v201 = *(void *)(a1 + 8);
  if ((v201 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v201 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  if ((*(void *)a1 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(*(void *)a1 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  return a1;
}

void *sub_216F019D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v23 = 0;
  char v24 = 0;
  sub_216EFB75C((uint64_t)&v23, a2);
  unint64_t v7 = bswap64(0x9E3779B97F4A7C55 * (void)v23);
  unint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    unint64_t v10 = v9.u32[0];
    if (v9.u32[0] > 1uLL)
    {
      unint64_t v3 = v7;
      if (v7 >= v8) {
        unint64_t v3 = v7 % v8;
      }
    }
    else
    {
      unint64_t v3 = (v8 - 1) & v7;
    }
    uint64_t v11 = *(void **)(*(void *)a1 + 8 * v3);
    if (v11)
    {
      uint64_t v12 = (void *)*v11;
      if (*v11)
      {
        do
        {
          unint64_t v13 = v12[1];
          if (v13 == v7)
          {
            if (sub_216EFB7C0((uint64_t)(v12 + 2), a2)) {
              return v12;
            }
          }
          else
          {
            if (v10 > 1)
            {
              if (v13 >= v8) {
                v13 %= v8;
              }
            }
            else
            {
              v13 &= v8 - 1;
            }
            if (v13 != v3) {
              break;
            }
          }
          uint64_t v12 = (void *)*v12;
        }
        while (v12);
      }
    }
  }
  sub_216F01C64(a1, v7, a3, (uint64_t)&v23);
  float v14 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v15 = *(float *)(a1 + 32);
  if (!v8 || (float)(v15 * (float)v8) < v14)
  {
    BOOL v16 = 1;
    if (v8 >= 3) {
      BOOL v16 = (v8 & (v8 - 1)) != 0;
    }
    unint64_t v17 = v16 | (2 * v8);
    unint64_t v18 = vcvtps_u32_f32(v14 / v15);
    if (v17 <= v18) {
      size_t v19 = v18;
    }
    else {
      size_t v19 = v17;
    }
    sub_21678A04C(a1, v19);
    unint64_t v8 = *(void *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v7 >= v8) {
        unint64_t v3 = v7 % v8;
      }
      else {
        unint64_t v3 = v7;
      }
    }
    else
    {
      unint64_t v3 = (v8 - 1) & v7;
    }
  }
  uint64_t v20 = *(void **)(*(void *)a1 + 8 * v3);
  if (v20)
  {
    void *v23 = *v20;
    void *v20 = v23;
  }
  else
  {
    void *v23 = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v23;
    *(void *)(*(void *)a1 + 8 * v3) = a1 + 16;
    if (*v23)
    {
      unint64_t v21 = *(void *)(*v23 + 8);
      if ((v8 & (v8 - 1)) != 0)
      {
        if (v21 >= v8) {
          v21 %= v8;
        }
      }
      else
      {
        v21 &= v8 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v21) = v23;
    }
  }
  uint64_t v12 = v23;
  uint64_t v23 = 0;
  ++*(void *)(a1 + 24);
  sub_216F01CDC((uint64_t)&v23, 0);
  return v12;
}

void sub_216F01C4C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216F01CDC((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

_DWORD *sub_216F01C64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 16;
  unint64_t v8 = operator new(0x38uLL);
  *(void *)a4 = v8;
  *(void *)(a4 + 8) = v7;
  *(unsigned char *)(a4 + 16) = 0;
  *unint64_t v8 = 0;
  v8[1] = a2;
  uint64_t result = sub_216EFCDB0(v7, (uint64_t)(v8 + 2), a3);
  *(unsigned char *)(a4 + 16) = 1;
  return result;
}

void sub_216F01CC4(_Unwind_Exception *a1)
{
  sub_216F01CDC(v1, 0);
  _Unwind_Resume(a1);
}

void sub_216F01CDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_216EFBB5C((uint64_t)v2 + 16);
    }
    operator delete(v2);
  }
}

uint64_t **sub_216F01D34(uint64_t **result, void *a2, void *a3)
{
  uint64_t v5 = result;
  if (result[2])
  {
    uint64_t v6 = *result;
    uint64_t v7 = result[1];
    *uint64_t result = (uint64_t *)(result + 1);
    void v7[2] = 0;
    result[1] = 0;
    result[2] = 0;
    if (v6[1]) {
      unint64_t v8 = (uint64_t *)v6[1];
    }
    else {
      unint64_t v8 = v6;
    }
    float v14 = result;
    float v15 = v8;
    BOOL v16 = v8;
    if (v8)
    {
      float v15 = sub_216799E28((uint64_t)v8);
      if (a2 != a3)
      {
        uint8x8_t v9 = a2;
        do
        {
          sub_2168D2318(v8 + 4, v9 + 4);
          memcpy(v8 + 5, v9 + 5, 0x132uLL);
          sub_216F01EB0(v5, v8);
          unint64_t v8 = v15;
          BOOL v16 = v15;
          if (v15) {
            float v15 = sub_216799E28((uint64_t)v15);
          }
          unint64_t v10 = (void *)v9[1];
          if (v10)
          {
            do
            {
              a2 = v10;
              unint64_t v10 = (void *)*v10;
            }
            while (v10);
          }
          else
          {
            do
            {
              a2 = (void *)v9[2];
              BOOL v11 = *a2 == (void)v9;
              uint8x8_t v9 = a2;
            }
            while (!v11);
          }
          if (!v8) {
            break;
          }
          uint8x8_t v9 = a2;
        }
        while (a2 != a3);
      }
    }
    uint64_t result = (uint64_t **)sub_216F01F28((uint64_t)&v14);
  }
  if (a2 != a3)
  {
    do
    {
      uint64_t result = (uint64_t **)sub_216F01F80((uint64_t)v5, a2 + 4);
      uint64_t v12 = (void *)a2[1];
      if (v12)
      {
        do
        {
          unint64_t v13 = v12;
          uint64_t v12 = (void *)*v12;
        }
        while (v12);
      }
      else
      {
        do
        {
          unint64_t v13 = (void *)a2[2];
          BOOL v11 = *v13 == (void)a2;
          a2 = v13;
        }
        while (!v11);
      }
      a2 = v13;
    }
    while (v13 != a3);
  }
  return result;
}

void sub_216F01E9C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216F01F28((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_216F01EB0(uint64_t **a1, uint64_t *a2)
{
  unint64_t v3 = a1 + 1;
  uint64_t v4 = a1[1];
  if (v4)
  {
    do
    {
      while (1)
      {
        unint64_t v3 = (uint64_t **)v4;
        if ((a2[4] & 0xFFFFFFFFFFFFFFF8) >= (v4[4] & 0xFFFFFFFFFFFFFFF8)) {
          break;
        }
        uint64_t v4 = (uint64_t *)*v4;
        uint64_t v5 = v3;
        if (!*v3) {
          goto LABEL_8;
        }
      }
      uint64_t v4 = (uint64_t *)v4[1];
    }
    while (v4);
    uint64_t v5 = v3 + 1;
  }
  else
  {
    uint64_t v5 = a1 + 1;
  }
LABEL_8:
  sub_21677B358(a1, (uint64_t)v3, v5, a2);
  return a2;
}

uint64_t sub_216F01F28(uint64_t a1)
{
  sub_2168CB05C(*(void *)a1, *(void **)(a1 + 16));
  uint64_t v2 = *(void **)(a1 + 8);
  if (v2)
  {
    unint64_t v3 = (void *)v2[2];
    if (v3)
    {
      do
      {
        uint64_t v2 = v3;
        unint64_t v3 = (void *)v3[2];
      }
      while (v3);
      *(void *)(a1 + 8) = v2;
    }
    sub_2168CB05C(*(void *)a1, v2);
  }
  return a1;
}

uint64_t *sub_216F01F80(uint64_t a1, uint64_t *a2)
{
  sub_216F0200C(a1, a2, (uint64_t)&v7);
  unint64_t v3 = (uint64_t **)(a1 + 8);
  uint64_t v4 = *(uint64_t **)(a1 + 8);
  if (v4)
  {
    do
    {
      while (1)
      {
        unint64_t v3 = (uint64_t **)v4;
        if ((v7[4] & 0xFFFFFFFFFFFFFFF8) >= (v4[4] & 0xFFFFFFFFFFFFFFF8)) {
          break;
        }
        uint64_t v4 = (uint64_t *)*v4;
        uint64_t v5 = v3;
        if (!*v3) {
          goto LABEL_8;
        }
      }
      uint64_t v4 = (uint64_t *)v4[1];
    }
    while (v4);
    uint64_t v5 = v3 + 1;
  }
  else
  {
    uint64_t v5 = (uint64_t **)(a1 + 8);
  }
LABEL_8:
  sub_21677B358((uint64_t **)a1, (uint64_t)v3, v5, v7);
  return v7;
}

void *sub_216F0200C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = operator new(0x160uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  uint64_t v7 = *a2;
  v6[4] = *a2;
  if ((v7 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v7 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v6[4] &= 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t result = memcpy(v6 + 5, a2 + 1, 0x138uLL);
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_216F0208C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void **)a1;
  *(void *)a1 = a2;
  if (v3)
  {
    if (*(unsigned char *)(a1 + 16))
    {
      uint64_t v4 = v3[4];
      if ((v4 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v4 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
    }
    operator delete(v3);
  }
}

uint64_t *sub_216F020C4(uint64_t a1, void *a2, uint64_t a3, uint64_t **a4)
{
  uint64_t v6 = (uint64_t **)(a1 + 8);
  uint64_t v5 = *(uint64_t **)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = *a2 & 0xFFFFFFFFFFFFFFF8;
    while (1)
    {
      while (1)
      {
        unint64_t v8 = (uint64_t **)v5;
        unint64_t v9 = v5[4] & 0xFFFFFFFFFFFFFFF8;
        if (v7 >= v9) {
          break;
        }
        uint64_t v5 = *v8;
        uint64_t v6 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }
      if (v9 >= v7) {
        break;
      }
      uint64_t v5 = v8[1];
      if (!v5)
      {
        uint64_t v6 = v8 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    unint64_t v8 = (uint64_t **)(a1 + 8);
LABEL_10:
    sub_216F02188(a1, a4, (uint64_t)&v11);
    sub_21677B358((uint64_t **)a1, (uint64_t)v8, v6, v11);
    return v11;
  }
  return (uint64_t *)v8;
}

uint64_t *sub_216F02188@<X0>(uint64_t a1@<X0>, uint64_t **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = (uint64_t *)operator new(0x160uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t result = sub_216F021F4(v6 + 4, *a2);
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_216F021DC(_Unwind_Exception *a1)
{
  sub_216F0208C(v1, 0);
  _Unwind_Resume(a1);
}

uint64_t *sub_216F021F4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *a1 = *a2;
  if ((v3 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v3 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    *a1 &= 0xFFFFFFFFFFFFFFF8;
  }
  sub_216893518((uint64_t)(a1 + 1));
  return a1;
}

void *sub_216F02268(void *a1, uint64_t a2)
{
  *a1 = a2;
  uint64_t v4 = operator new(0x20uLL);
  void *v4 = &unk_26C76C558;
  v4[1] = 0;
  void v4[2] = 0;
  v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_216F022C0(_Unwind_Exception *exception_object)
{
  if (v1)
  {
    uint64_t v3 = (void *)sub_216D2FE74(v1);
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_216F022E0(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete(v1);
}

void sub_216F02308(uint64_t a1)
{
}

uint64_t sub_216F02310(uint64_t a1, uint64_t a2)
{
  if (sub_21677EC50(a2, (uint64_t)&unk_26C76C5A8)) {
    return a1 + 24;
  }
  else {
    return 0;
  }
}

void sub_216F02354(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v2 = (void *)(a2 - 16);
    uint64_t v3 = *(void *)(a2 - 8);
    if (v3)
    {
      uint64_t v4 = a2 - 120;
      uint64_t v5 = 120 * v3;
      do
      {
        sub_216D2FE74(v4 + v5);
        v5 -= 120;
      }
      while (v5);
    }
    operator delete[](v2);
  }
}

void sub_216F023BC(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    uint64_t v5 = v2;
    if ((void *)v4 != v2)
    {
      do
        uint64_t v4 = sub_216EFE9BC(v4 - 224);
      while ((void *)v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t sub_216F02440(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = 0;
  sub_21697D878((_DWORD *)(a1 + 16), (_DWORD *)(a2 + 16));
  sub_21697D8B4((_DWORD *)(a1 + 20), (_DWORD *)(a2 + 20));
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a2 + 24) = 0;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a2 + 32) = 0;
  *(_DWORD *)(a1 + 4sub_2168EBBB8(&a9, 0) = *(_DWORD *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a2 + 48) = 0;
  sub_21697D878((_DWORD *)(a1 + 56), (_DWORD *)(a2 + 56));
  sub_21697D8B4((_DWORD *)(a1 + 60), (_DWORD *)(a2 + 60));
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a2 + 64) = 0;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a2 + 72) = 0;
  *(_OWORD *)(a1 + 8sub_2168EBBB8(&a9, 0) = *(_OWORD *)(a2 + 80);
  long long v4 = *(_OWORD *)(a2 + 96);
  long long v5 = *(_OWORD *)(a2 + 112);
  long long v6 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v6;
  *(_OWORD *)(a1 + 96) = v4;
  *(_OWORD *)(a1 + 112) = v5;
  long long v7 = *(_OWORD *)(a2 + 160);
  long long v8 = *(_OWORD *)(a2 + 176);
  long long v9 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v9;
  *(_OWORD *)(a1 + 16sub_2168EBBB8(&a9, 0) = v7;
  *(_OWORD *)(a1 + 176) = v8;
  return a1;
}

uint64_t sub_216F02518(uint64_t *a1, void *a2)
{
  uint64_t v5 = *a1;
  uint64_t v4 = a1[1];
  uint64_t result = a2[1];
  while (v4 != v5)
  {
    v4 -= 224;
    uint64_t result = sub_216F02440(result - 224, v4);
  }
  a2[1] = result;
  uint64_t v7 = *a1;
  *a1 = result;
  a2[1] = v7;
  uint64_t v8 = a1[1];
  a1[1] = a2[2];
  a2[2] = v8;
  uint64_t v9 = a1[2];
  a1[2] = a2[3];
  a2[3] = v9;
  *a2 = a2[1];
  return result;
}

void *sub_216F025A0(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x124924924924925) {
    sub_21677CA1C();
  }
  return operator new(224 * a2);
}

uint64_t sub_216F025EC(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 224;
    sub_216EFE9BC(i - 224);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t sub_216F0263C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = 0x6DB6DB6DB6DB6DB7 * ((a1[1] - *a1) >> 5);
  unint64_t v6 = v5 + 1;
  if ((unint64_t)(v5 + 1) > 0x124924924924924) {
    sub_21677CB10();
  }
  uint64_t v9 = (uint64_t)(a1 + 2);
  unint64_t v10 = 0x6DB6DB6DB6DB6DB7 * ((a1[2] - v4) >> 5);
  if (2 * v10 > v6) {
    unint64_t v6 = 2 * v10;
  }
  if (v10 >= 0x92492492492492) {
    unint64_t v11 = 0x124924924924924;
  }
  else {
    unint64_t v11 = v6;
  }
  size_t v19 = a1 + 2;
  if (v11) {
    uint64_t v12 = (char *)sub_216F025A0(v9, v11);
  }
  else {
    uint64_t v12 = 0;
  }
  float v15 = v12;
  BOOL v16 = &v12[224 * v5];
  unint64_t v18 = &v12[224 * v11];
  sub_216EFE87C((uint64_t)v16, a2, a3);
  unint64_t v17 = v16 + 224;
  sub_216F02518(a1, &v15);
  uint64_t v13 = a1[1];
  sub_216F025EC((uint64_t)&v15);
  return v13;
}

void sub_216F02750(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216F025EC((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_216F02764(uint64_t *a1, uint64_t a2)
{
  a1[2] = 0;
  a1[1] = 0;
  *a1 = (uint64_t)(a1 + 1);
  sub_216F027BC(a1, *(void **)a2, (void *)(a2 + 8));
  return a1;
}

void sub_216F027A4(_Unwind_Exception *a1)
{
  sub_2168CB05C(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_216F027BC(uint64_t *result, void *a2, void *a3)
{
  if (a2 != a3)
  {
    uint64_t v4 = a2;
    uint64_t v5 = (uint64_t **)result;
    unint64_t v6 = result + 1;
    do
    {
      uint64_t result = sub_216F02848(v5, v6, v4 + 4, v4 + 4);
      uint64_t v7 = (void *)v4[1];
      if (v7)
      {
        do
        {
          uint64_t v8 = v7;
          uint64_t v7 = (void *)*v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          uint64_t v8 = (void *)v4[2];
          BOOL v9 = *v8 == (void)v4;
          uint64_t v4 = v8;
        }
        while (!v9);
      }
      uint64_t v4 = v8;
    }
    while (v8 != a3);
  }
  return result;
}

uint64_t *sub_216F02848(uint64_t **a1, void *a2, void *a3, uint64_t *a4)
{
  unint64_t v6 = (uint64_t **)sub_21697C1E0(a1, a2, &v10, &v9, a3);
  uint64_t result = *v6;
  if (!*v6)
  {
    sub_216F0200C((uint64_t)a1, a4, (uint64_t)&v8);
    sub_21677B358(a1, v10, v6, v8);
    return v8;
  }
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomConstraintTarget::UsdGeomConstraintTarget(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)(a1 + 8) = v4;
  if (v4) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 48), 1uLL, memory_order_relaxed);
  }
  sub_216981010((_DWORD *)(a1 + 16), (_DWORD *)(a2 + 16));
  sub_21698105C((_DWORD *)(a1 + 20), (_DWORD *)(a2 + 20));
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 24) = v5;
  if ((v5 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v5 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    *(void *)(a1 + 24) &= 0xFFFFFFFFFFFFFFF8;
  }
  return a1;
}

BOOL pxrInternal__aapl__pxrReserved__::UsdGeomConstraintTarget::IsValid(pxrInternal__aapl__pxrReserved__::UsdGeomConstraintTarget *this, const pxrInternal__aapl__pxrReserved__::UsdAttribute *a2)
{
  if (!pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined(this, a2)) {
    return 0;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92580, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92580))
  {
    qword_267B92578 = *(void *)pxrInternal__aapl__pxrReserved__::TfType::_FindByTypeid((pxrInternal__aapl__pxrReserved__::TfType *)&stru_26C74C5C0, v8, v9);
    __cxa_guard_release(&qword_267B92580);
  }
  sub_216D16CFC((uint64_t)v12, (uint64_t *)this + 1, (_DWORD *)this + 4);
  uint64_t v3 = pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)v17, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)v12);
  v17[3] = 0;
  v17[0] = &unk_26C768810;
  if (pxrInternal__aapl__pxrReserved__::UsdModelAPI::IsModel(v3))
  {
    pxrInternal__aapl__pxrReserved__::UsdProperty::SplitName(this, v11);
    uint64_t v4 = (unsigned __int8 *)v11[0];
    uint64_t v5 = (pxrInternal__aapl__pxrReserved__::TfToken *)sub_216F02B2C();
    if (pxrInternal__aapl__pxrReserved__::TfToken::operator==(v5, v4))
    {
      uint64_t TypeName = pxrInternal__aapl__pxrReserved__::UsdAttribute::GetTypeName(this);
      BOOL v6 = *(void *)pxrInternal__aapl__pxrReserved__::SdfValueTypeName::GetType((pxrInternal__aapl__pxrReserved__::SdfValueTypeName *)&TypeName) == qword_267B92578;
    }
    else
    {
      BOOL v6 = 0;
    }
    unint64_t v18 = (void **)v11;
    sub_216782F20(&v18);
  }
  else
  {
    BOOL v6 = 0;
  }
  pxrInternal__aapl__pxrReserved__::UsdModelAPI::~UsdModelAPI((pxrInternal__aapl__pxrReserved__::UsdModelAPI *)v17);
  if ((v16 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v16 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v15);
  sub_21697C414(&v14);
  if (v13) {
    sub_216D16E0C(v13);
  }
  return v6;
}

void sub_216F02AD0(_Unwind_Exception *a1)
{
}

unint64_t sub_216F02B2C()
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  uint64_t v0 = (char *)atomic_load((unint64_t *)&qword_267B92588);
  if (!v0)
  {
    uint64_t v0 = (char *)operator new(0x28uLL);
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken(v0, "constraintTargets", 0);
    uint64_t v2 = v0 + 8;
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken(v0 + 8, "constraintTargetIdentifier", 0);
    uint64_t v3 = *(atomic_uint **)v0;
    int v15 = v3;
    if ((v3 & 7) != 0)
    {
      uint64_t v4 = (atomic_uint *)((unint64_t)v3 & 0xFFFFFFFFFFFFFFF8);
      if ((atomic_fetch_add_explicit(v4, 2u, memory_order_relaxed) & 1) == 0) {
        int v15 = v4;
      }
    }
    uint64_t v5 = (atomic_uint *)*v2;
    uint64_t v16 = v5;
    if ((v5 & 7) != 0)
    {
      BOOL v6 = (atomic_uint *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
      if ((atomic_fetch_add_explicit(v6, 2u, memory_order_relaxed) & 1) == 0) {
        uint64_t v16 = v6;
      }
    }
    *((void *)v0 + 2) = 0;
    *((void *)v0 + 3) = 0;
    *((void *)v0 + 4) = 0;
    uint64_t v13 = (void **)(v0 + 16);
    char v14 = 0;
    uint64_t v7 = (char *)operator new(0x10uLL);
    uint64_t v8 = 0;
    *((void *)v0 + 2) = v7;
    *((void *)v0 + 3) = v7;
    *((void *)v0 + 4) = v7 + 16;
    do
    {
      uint64_t v9 = (&v15)[v8];
      *(void *)&v7[v8 * 8] = v9;
      if ((v9 & 7) != 0
        && (atomic_fetch_add_explicit((atomic_uint *volatile)((unint64_t)v9 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
      {
        *(void *)&v7[v8 * 8] &= 0xFFFFFFFFFFFFFFF8;
      }
      ++v8;
    }
    while (v8 != 2);
    *((void *)v0 + 3) = v7 + 16;
    for (uint64_t i = 1; i != -1; --i)
    {
      unint64_t v11 = (&v15)[i];
      if ((v11 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)((unint64_t)v11 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
    }
    uint64_t v12 = 0;
    atomic_compare_exchange_strong(&qword_267B92588, (unint64_t *)&v12, (unint64_t)v0);
    if (v12)
    {
      uint64_t v13 = (void **)(v0 + 16);
      sub_216889A04(&v13);
      if ((*v2 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*(void *)v0 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*(void *)v0 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      operator delete(v0);
      return atomic_load((unint64_t *)&qword_267B92588);
    }
  }
  return (unint64_t)v0;
}

void sub_216F02D0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10, uint64_t a11, char a12)
{
  sub_216889A04(&a10);
  uint64_t v15 = 8;
  while (1)
  {
    uint64_t v16 = *(void *)(&a12 + v15);
    if ((v16 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v16 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    v15 -= 8;
    if (v15 == -8)
    {
      if ((*v13 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*v13 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      if ((*v12 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      operator delete(v12);
      _Unwind_Resume(a1);
    }
  }
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomConstraintTarget::GetIdentifier@<X0>(pxrInternal__aapl__pxrReserved__::UsdGeomConstraintTarget *this@<X0>, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  uint64_t result = pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined(this, a2);
  if (result)
  {
    unint64_t v6 = sub_216F02B2C();
    uint64_t v7 = 0;
    uint64_t result = sub_216D1D1CC((uint64_t)this, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)(v6 + 8), (uint64_t)a3, &v7);
    if ((v7 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v7 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomConstraintTarget::SetIdentifier(pxrInternal__aapl__pxrReserved__::UsdGeomConstraintTarget *this, const pxrInternal__aapl__pxrReserved__::TfToken *a2)
{
  uint64_t result = pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined(this, a2);
  if (result)
  {
    unint64_t v4 = sub_216F02B2C();
    sub_216D1CF30((uint64_t)this, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)(v4 + 8));
  }
  return result;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomConstraintTarget::GetConstraintAttrName(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v4 = (pxrInternal__aapl__pxrReserved__::TfToken *)sub_216F02B2C();
  if ((*(void *)v4 & 0xFFFFFFFFFFFFFFF8) != 0) {
    EmptyString = (uint64_t *)((*(void *)v4 & 0xFFFFFFFFFFFFFFF8) + 16);
  }
  else {
    EmptyString = pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(v4);
  }
  if (*((char *)EmptyString + 23) >= 0) {
    size_t v6 = *((unsigned __int8 *)EmptyString + 23);
  }
  else {
    size_t v6 = EmptyString[1];
  }
  uint64_t v7 = &v14;
  sub_2167940B4((uint64_t)&v14, v6 + 1);
  if ((v14.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    uint64_t v7 = (std::string *)v14.__r_.__value_.__r.__words[0];
  }
  if (v6)
  {
    if (*((char *)EmptyString + 23) >= 0) {
      uint64_t v8 = EmptyString;
    }
    else {
      uint64_t v8 = (const void *)*EmptyString;
    }
    memmove(v7, v8, v6);
  }
  *(_WORD *)((char *)&v7->__r_.__value_.__l.__data_ + v6) = 58;
  int v9 = *(char *)(a1 + 23);
  if (v9 >= 0) {
    uint64_t v10 = (const std::string::value_type *)a1;
  }
  else {
    uint64_t v10 = *(const std::string::value_type **)a1;
  }
  if (v9 >= 0) {
    std::string::size_type v11 = *(unsigned __int8 *)(a1 + 23);
  }
  else {
    std::string::size_type v11 = *(void *)(a1 + 8);
  }
  uint64_t v12 = std::string::append(&v14, v10, v11);
  long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  std::string::size_type v16 = v12->__r_.__value_.__r.__words[2];
  *(_OWORD *)std::string __p = v13;
  v12->__r_.__value_.__l.__size_ = 0;
  v12->__r_.__value_.__r.__words[2] = 0;
  v12->__r_.__value_.__r.__words[0] = 0;
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(a2);
  if (SHIBYTE(v16) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v14.__r_.__value_.__l.__data_);
  }
}

void sub_216F02FE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomConstraintTarget::ComputeInWorldSpace@<X0>(uint64_t a1@<X0>, pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  if (pxrInternal__aapl__pxrReserved__::UsdGeomConstraintTarget::IsValid((pxrInternal__aapl__pxrReserved__::UsdGeomConstraintTarget *)a1, a2))
  {
    sub_216D16CFC((uint64_t)v30, (uint64_t *)(a1 + 8), (_DWORD *)(a1 + 16));
    pxrInternal__aapl__pxrReserved__::GfMatrix4d::SetDiagonal((uint64_t)&v22, 1.0);
    if (a2)
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::SetTime((uint64_t)a2, v8, v9, a4);
      pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::GetLocalToWorldTransform(a2, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)v30, (uint64_t)&v14);
      long long v26 = v18;
      long long v27 = v19;
      long long v28 = v20;
      long long v29 = v21;
      long long v22 = v14;
      long long v23 = v15;
      long long v24 = v16;
      long long v25 = v17;
    }
    else
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::UsdGeomXformCache((pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *)&v13);
      pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::SetTime((uint64_t)&v13, v11, v12, a4);
      pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::GetLocalToWorldTransform((pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *)&v13, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)v30, (uint64_t)&v14);
      long long v26 = v18;
      long long v27 = v19;
      long long v28 = v20;
      long long v29 = v21;
      long long v22 = v14;
      long long v23 = v15;
      long long v24 = v16;
      long long v25 = v17;
      sub_216EF9C4C((uint64_t)&v13);
    }
    pxrInternal__aapl__pxrReserved__::GfMatrix4d::SetDiagonal((uint64_t)&v14, 1.0);
    pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::GfMatrix4d>();
  }
  *(void *)&long long v22 = "usdGeom/constraintTarget.cpp";
  *((void *)&v22 + 1) = "ComputeInWorldSpace";
  *(void *)&long long v23 = 116;
  *((void *)&v23 + 1) = "GfMatrix4d pxrInternal__aapl__pxrReserved__::UsdGeomConstraintTarget::ComputeInWorldSpace(UsdT"
                          "imeCode, UsdGeomXformCache *) const";
  LOBYTE(v24) = 0;
  pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v22, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid constraint target.");
  return pxrInternal__aapl__pxrReserved__::GfMatrix4d::SetDiagonal(a3, 1.0);
}

void sub_216F032B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_216EF9C4C((uint64_t)va);
  sub_216D16AD8(v5 - 80);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::UsdGeomXformCache(uint64_t result, double a2)
{
  *(_OWORD *)uint64_t result = 0u;
  *(_OWORD *)(result + 16) = 0u;
  *(_DWORD *)(result + 32) = 1065353216;
  *(double *)(result + 4sub_2168EBBB8(&a9, 0) = a2;
  return result;
}

{
  *(_OWORD *)uint64_t result = 0u;
  *(_OWORD *)(result + 16) = 0u;
  *(_DWORD *)(result + 32) = 1065353216;
  *(double *)(result + 4sub_2168EBBB8(&a9, 0) = a2;
  return result;
}

double pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::UsdGeomXformCache(pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *this)
{
  double result = 0.0;
  *(_OWORD *)this = 0u;
  *((_OWORD *)this + 1) = 0u;
  *((_DWORD *)this + 8) = 1065353216;
  *((void *)this + 5) = 0x7FF8000000000000;
  return result;
}

{
  double result;

  double result = 0.0;
  *(_OWORD *)this = 0u;
  *((_OWORD *)this + 1) = 0u;
  *((_DWORD *)this + 8) = 1065353216;
  *((void *)this + 5) = 0x7FF8000000000000;
  return result;
}

__n128 pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::GetLocalToWorldTransform@<Q0>(pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *this@<X0>, const pxrInternal__aapl__pxrReserved__::UsdPrim *a2@<X1>, uint64_t a3@<X8>)
{
  Ctm = pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::_GetCtm(this, a2);
  long long v5 = *((_OWORD *)Ctm + 5);
  *(_OWORD *)(a3 + 64) = *((_OWORD *)Ctm + 4);
  *(_OWORD *)(a3 + 8sub_2168EBBB8(&a9, 0) = v5;
  long long v6 = *((_OWORD *)Ctm + 7);
  *(_OWORD *)(a3 + 96) = *((_OWORD *)Ctm + 6);
  *(_OWORD *)(a3 + 112) = v6;
  long long v7 = *((_OWORD *)Ctm + 1);
  *(_OWORD *)a3 = *(_OWORD *)Ctm;
  *(_OWORD *)(a3 + 16) = v7;
  __n128 result = *((__n128 *)Ctm + 2);
  long long v9 = *((_OWORD *)Ctm + 3);
  *(__n128 *)(a3 + 32) = result;
  *(_OWORD *)(a3 + 48) = v9;
  return result;
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::_GetCtm(pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *this, const pxrInternal__aapl__pxrReserved__::UsdPrim *a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92610, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92610))
  {
    pxrInternal__aapl__pxrReserved__::GfMatrix4d::SetDiagonal((uint64_t)&unk_267B92590, 1.0);
    __cxa_guard_release(&qword_267B92610);
  }
  if ((pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined(a2, a2) & 1) == 0) {
    return (uint64_t *)&unk_267B92590;
  }
  CacheEntryForPrim = pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::_GetCacheEntryForPrim(this, a2);
  long long v5 = CacheEntryForPrim;
  if (*((unsigned char *)CacheEntryForPrim + 160)) {
    return CacheEntryForPrim + 4;
  }
  pxrInternal__aapl__pxrReserved__::GfMatrix4d::SetDiagonal((uint64_t)&v27, 1.0);
  pxrInternal__aapl__pxrReserved__::UsdGeomXformable::XformQuery::GetLocalTransformation(v5, &v27, *((double *)this + 5));
  if (!*((unsigned char *)v5 + 24))
  {
    sub_216D6B1F8((uint64_t)a2, (uint64_t)&v14);
    Ctm = (double *)pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::_GetCtm(this, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v14);
    long long v23 = v31;
    long long v24 = v32;
    long long v25 = v33;
    long long v26 = v34;
    long long v19 = v27;
    long long v20 = v28;
    long long v21 = v29;
    long long v22 = v30;
    pxrInternal__aapl__pxrReserved__::GfMatrix4d::operator*=((double *)&v19, Ctm);
    long long v31 = v23;
    long long v32 = v24;
    long long v33 = v25;
    long long v34 = v26;
    long long v27 = v19;
    long long v28 = v20;
    long long v29 = v21;
    long long v30 = v22;
    if ((v18 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v18 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v17);
    sub_21697C414(&v16);
    if (v15) {
      sub_216D16E0C(v15);
    }
  }
  long long v9 = v29;
  long long v8 = v30;
  long long v10 = v28;
  *((_OWORD *)v5 + 2) = v27;
  long long v12 = v33;
  long long v11 = v34;
  long long v13 = v31;
  *((_OWORD *)v5 + 7) = v32;
  *((_OWORD *)v5 + 8) = v12;
  __n128 result = v5 + 4;
  *((_OWORD *)v5 + 9) = v11;
  *((_OWORD *)v5 + 3) = v10;
  *((_OWORD *)v5 + 4) = v9;
  *((_OWORD *)v5 + 5) = v8;
  *((_OWORD *)v5 + 6) = v13;
  *((unsigned char *)v5 + 16sub_2168EBBB8(&a9, 0) = 1;
  return result;
}

void sub_216F03568(_Unwind_Exception *a1)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::GetParentToWorldTransform(pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *this@<X0>, const pxrInternal__aapl__pxrReserved__::UsdPrim *a2@<X1>, _OWORD *a3@<X8>)
{
  sub_216D6B1F8((uint64_t)a2, (uint64_t)&v10);
  Ctm = pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::_GetCtm(this, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v10);
  long long v6 = *((_OWORD *)Ctm + 5);
  a3[4] = *((_OWORD *)Ctm + 4);
  a3[5] = v6;
  long long v7 = *((_OWORD *)Ctm + 7);
  a3[6] = *((_OWORD *)Ctm + 6);
  a3[7] = v7;
  long long v8 = *((_OWORD *)Ctm + 1);
  *a3 = *(_OWORD *)Ctm;
  a3[1] = v8;
  long long v9 = *((_OWORD *)Ctm + 3);
  a3[2] = *((_OWORD *)Ctm + 2);
  a3[3] = v9;
  if ((v14 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v14 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v13);
  sub_21697C414(&v12);
  if (v11) {
    sub_216D16E0C(v11);
  }
}

void sub_216F03634(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::TransformMightBeTimeVarying(pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *this, const pxrInternal__aapl__pxrReserved__::UsdPrim *a2)
{
  CacheEntryForPrim = pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::_GetCacheEntryForPrim(this, a2);
  if (CacheEntryForPrim) {
    return pxrInternal__aapl__pxrReserved__::UsdGeomXformable::XformQuery::TransformMightBeTimeVarying((pxrInternal__aapl__pxrReserved__::UsdGeomXformable::XformQuery *)CacheEntryForPrim);
  }
  v4[0] = "usdGeom/xformCache.cpp";
  v4[1] = "TransformMightBeTimeVarying";
  void v4[2] = 66;
  v4[3] = "BOOL pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::TransformMightBeTimeVarying(const UsdPrim &)";
  char v5 = 0;
  if (pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v4, "entry", 0)) {
    return pxrInternal__aapl__pxrReserved__::UsdGeomXformable::XformQuery::TransformMightBeTimeVarying((pxrInternal__aapl__pxrReserved__::UsdGeomXformable::XformQuery *)CacheEntryForPrim);
  }
  else {
    return 1;
  }
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::_GetCacheEntryForPrim(pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *this, const pxrInternal__aapl__pxrReserved__::UsdPrim *a2)
{
  uint64_t v9 = 0;
  memset(v8, 0, sizeof(v8));
  sub_216F03F9C((uint64_t)&v10, (uint64_t)a2, (uint64_t)v8);
  unint64_t v4 = sub_216EF9F0C((uint64_t)this, (uint64_t)&v10, (uint64_t)&v10);
  char v6 = v5;
  uint64_t v14 = (void **)&v13;
  sub_216EF9D3C(&v14);
  if ((v12 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  if (*((void *)&v10 + 1)) {
    sub_216D16E0C(*((atomic_ullong **)&v10 + 1));
  }
  uint64_t v14 = (void **)v8;
  sub_216EF9D3C(&v14);
  if (v6)
  {
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)v8, a2);
    *(void *)&v8[0] = &unk_26C76D390;
    if (*((void *)&v8[0] + 1)
      && (*(unsigned char *)(*((void *)&v8[0] + 1) + 57) & 8) == 0
      && off_26C76D3B0((pxrInternal__aapl__pxrReserved__::UsdTyped *)v8))
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomXformable::XformQuery::XformQuery((pxrInternal__aapl__pxrReserved__::UsdGeomXformable::XformQuery *)&v10, (const pxrInternal__aapl__pxrReserved__::UsdGeomXformable *)v8);
      sub_216EFAA10((void **)v4 + 6);
      *((_OWORD *)v4 + 3) = v10;
      v4[8] = v11;
      uint64_t v11 = 0;
      long long v10 = 0uLL;
      *((unsigned char *)v4 + 72) = v12;
      uint64_t v14 = (void **)&v10;
      sub_216EF9D3C(&v14);
    }
    pxrInternal__aapl__pxrReserved__::UsdGeomXformable::~UsdGeomXformable((pxrInternal__aapl__pxrReserved__::UsdGeomXformable *)v8);
    pxrInternal__aapl__pxrReserved__::GfMatrix4d::SetDiagonal((uint64_t)(v4 + 10), 1.0);
    *((unsigned char *)v4 + 208) = 0;
  }
  return v4 + 6;
}

void sub_216F03864(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

BOOL pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::GetResetXformStack(pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *this, const pxrInternal__aapl__pxrReserved__::UsdPrim *a2)
{
  CacheEntryForPrim = pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::_GetCacheEntryForPrim(this, a2);
  if (CacheEntryForPrim) {
    return *((unsigned char *)CacheEntryForPrim + 24) != 0;
  }
  v5[0] = "usdGeom/xformCache.cpp";
  v5[1] = "GetResetXformStack";
  double v5[2] = 80;
  uint64_t v5[3] = "BOOL pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::GetResetXformStack(const UsdPrim &)";
  char v6 = 0;
  char v4 = pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v5, "entry", 0);
  BOOL result = 0;
  if (v4) {
    return *((unsigned char *)CacheEntryForPrim + 24) != 0;
  }
  return result;
}

BOOL pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::IsAttributeIncludedInLocalTransform(pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *this, const pxrInternal__aapl__pxrReserved__::UsdPrim *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3)
{
  CacheEntryForPrim = pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::_GetCacheEntryForPrim(this, a2);
  if (CacheEntryForPrim) {
    return pxrInternal__aapl__pxrReserved__::UsdGeomXformable::XformQuery::IsAttributeIncludedInLocalTransform((pxrInternal__aapl__pxrReserved__::UsdGeomXformable::XformQuery *)CacheEntryForPrim, a3, v4);
  }
  v8[0] = "usdGeom/xformCache.cpp";
  v8[1] = "IsAttributeIncludedInLocalTransform";
  v8[2] = 93;
  _OWORD v8[3] = "BOOL pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::IsAttributeIncludedInLocalTransform(const UsdPrim &,"
          " const TfToken &)";
  char v9 = 0;
  char v7 = pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v8, "entry", 0);
  BOOL result = 0;
  if (v7) {
    return pxrInternal__aapl__pxrReserved__::UsdGeomXformable::XformQuery::IsAttributeIncludedInLocalTransform((pxrInternal__aapl__pxrReserved__::UsdGeomXformable::XformQuery *)CacheEntryForPrim, a3, v4);
  }
  return result;
}

uint64_t sub_216F039BC(uint64_t a1)
{
  char v5 = (void **)(a1 + 32);
  sub_216EF9D3C(&v5);
  uint64_t v2 = *(void *)(a1 + 24);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 20));
  sub_21697C414((_DWORD *)(a1 + 16));
  uint64_t v3 = *(atomic_ullong **)(a1 + 8);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::GetLocalTransformation@<X0>(pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *this@<X0>, const pxrInternal__aapl__pxrReserved__::UsdPrim *a2@<X1>, BOOL *a3@<X2>, _OWORD *a4@<X8>)
{
  if (a3)
  {
    CacheEntryForPrim = pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::_GetCacheEntryForPrim(this, a2);
    pxrInternal__aapl__pxrReserved__::GfMatrix4d::SetDiagonal((uint64_t)a4, 1.0);
    if (CacheEntryForPrim
      || (long long v10 = "usdGeom/xformCache.cpp",
          uint64_t v11 = "GetLocalTransformation",
          uint64_t v12 = 125,
          uint64_t v13 = "GfMatrix4d pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::GetLocalTransformation(const UsdPrim &, BOOL *)",
          char v14 = 0,
          uint64_t result = pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v10, "entry", 0),
          char v9 = 0,
          (result & 1) != 0))
    {
      uint64_t result = pxrInternal__aapl__pxrReserved__::UsdGeomXformable::XformQuery::GetLocalTransformation(CacheEntryForPrim, a4, *((double *)this + 5));
      char v9 = *((unsigned char *)CacheEntryForPrim + 24);
    }
    *a3 = v9;
  }
  else
  {
    long long v10 = "usdGeom/xformCache.cpp";
    uint64_t v11 = "GetLocalTransformation";
    uint64_t v12 = 119;
    uint64_t v13 = "GfMatrix4d pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::GetLocalTransformation(const UsdPrim &, BOOL *)";
    char v14 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v10, 1, (pxrInternal__aapl__pxrReserved__ *)"'resetsXformStack' pointer is null.");
    return pxrInternal__aapl__pxrReserved__::GfMatrix4d::SetDiagonal((uint64_t)a4, 1.0);
  }
  return result;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::ComputeRelativeTransform(pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *this@<X0>, const pxrInternal__aapl__pxrReserved__::UsdPrim *a2@<X1>, atomic_ullong **a3@<X2>, BOOL *a4@<X3>, double *a5@<X8>)
{
  pxrInternal__aapl__pxrReserved__::GfMatrix4d::SetDiagonal((uint64_t)a5, 1.0);
  if (a4)
  {
    int v19 = *(_DWORD *)a2;
    long long v10 = (atomic_ullong *)*((void *)a2 + 1);
    long long v20 = v10;
    if (v10) {
      atomic_fetch_add_explicit(v10 + 6, 1uLL, memory_order_relaxed);
    }
    sub_216981010(&v21, (_DWORD *)a2 + 4);
    sub_21698105C((_DWORD *)&v21 + 1, (_DWORD *)a2 + 5);
    uint64_t v12 = (const char *)*((void *)a2 + 3);
    unint64_t v22 = (unint64_t)v12;
    if ((v12 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)((unint64_t)v12 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v22 &= 0xFFFFFFFFFFFFFFF8;
    }
    while (pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)&v19, v11)&& (v19 != *(_DWORD *)a3|| v20 != a3[1]|| v21 != a3[2]|| (v22 & 0xFFFFFFFFFFFFFFF8) != ((unint64_t)a3[3] & 0xFFFFFFFFFFFFFFF8)))
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::GetLocalTransformation(this, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v19, a4, &v15);
      pxrInternal__aapl__pxrReserved__::GfMatrix4d::operator*=(a5, (double *)&v15);
      if (*a4) {
        break;
      }
      sub_216D6B1F8((uint64_t)&v19, (uint64_t)&v15);
      int v19 = v15;
      uint64_t v13 = (atomic_ullong *)*((void *)&v15 + 1);
      *((void *)&v15 + 1) = 0;
      char v14 = v20;
      long long v20 = v13;
      if (v14) {
        sub_216D16E0C(v14);
      }
      sub_21697DE94((int *)&v21, (int *)&v16);
      sub_21697DEEC((int *)&v21 + 1, (int *)&v16 + 1);
      if ((v22 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v22 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      unint64_t v22 = (unint64_t)v17;
      int v17 = 0;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v16 + 1);
      sub_21697C414(&v16);
      if (*((void *)&v15 + 1)) {
        sub_216D16E0C(*((atomic_ullong **)&v15 + 1));
      }
    }
    if ((v22 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v22 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v21 + 1);
    sub_21697C414(&v21);
    if (v20) {
      sub_216D16E0C(v20);
    }
  }
  else
  {
    *(void *)&long long v15 = "usdGeom/xformCache.cpp";
    *((void *)&v15 + 1) = "ComputeRelativeTransform";
    uint64_t v16 = 143;
    int v17 = "GfMatrix4d pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::ComputeRelativeTransform(const UsdPrim &, cons"
          "t UsdPrim &, BOOL *)";
    char v18 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v15, 1, (pxrInternal__aapl__pxrReserved__ *)"'resetXformStack' pointer is null.");
  }
}

void sub_216F03D94(_Unwind_Exception *a1)
{
  sub_216D16AD8(v1 - 112);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::SetTime(uint64_t result, uint64_t a2, char *a3, double a4)
{
  char v5 = (double *)(result + 40);
  if (a4 != *(double *)(result + 40))
  {
    uint64_t v6 = *(void *)(result + 16);
    uint64_t v7 = 0;
    if (v6)
    {
      do
      {
        *(unsigned char *)(*sub_216F03E64(&v6, a2, a3) + 208) = 0;
        uint64_t result = sub_216F03EE0((uint64_t)&v6);
      }
      while (v6 != v7);
    }
    *char v5 = a4;
  }
  return result;
}

void *sub_216F03E64(void *result, uint64_t a2, char *a3)
{
  if (*result == result[1])
  {
    v3[0] = "tf/iterator.h";
    v3[1] = "operator->";
    v3[2] = 287;
    v3[3] = "Iterator &pxrInternal__aapl__pxrReserved__::TfIterator<pxrInternal__aapl__pxrReserved__::TfHashMap<pxrIntern"
            "al__aapl__pxrReserved__::UsdPrim, pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::_Entry, pxrInternal__"
            "aapl__pxrReserved__::TfHash>>::operator->() [T = pxrInternal__aapl__pxrReserved__::TfHashMap<pxrInternal__aa"
            "pl__pxrReserved__::UsdPrim, pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::_Entry, pxrInternal__aapl__"
            "pxrReserved__::TfHash>, Reverse = false]";
    char v4 = 0;
    int v5 = 4;
    pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper::IssueFatalError((pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper *)v3, (pxrInternal__aapl__pxrReserved__ *)"iterator exhausted", a3);
  }
  return result;
}

uint64_t sub_216F03EE0(uint64_t a1)
{
  if (*(void *)a1 == *(void *)(a1 + 8))
  {
    v3[0] = "tf/iterator.h";
    v3[1] = "operator++";
    v3[2] = 250;
    v3[3] = "TfIterator<T, Reverse> &pxrInternal__aapl__pxrReserved__::TfIterator<pxrInternal__aapl__pxrReserved__::TfHas"
            "hMap<pxrInternal__aapl__pxrReserved__::UsdPrim, pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::_Entry,"
            " pxrInternal__aapl__pxrReserved__::TfHash>>::operator++() [T = pxrInternal__aapl__pxrReserved__::TfHashMap<p"
            "xrInternal__aapl__pxrReserved__::UsdPrim, pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::_Entry, pxrIn"
            "ternal__aapl__pxrReserved__::TfHash>, Reverse = false]";
    char v4 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v3, 1, (pxrInternal__aapl__pxrReserved__ *)"iterator exhausted");
  }
  else
  {
    *(void *)a1 = **(void **)a1;
  }
  return a1;
}

double pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::Swap(pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *this, pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *a2)
{
  sub_21698718C((uint64_t)this, (uint64_t)a2);
  double result = *((double *)this + 5);
  *((void *)this + 5) = *((void *)a2 + 5);
  *((double *)a2 + 5) = result;
  return result;
}

uint64_t sub_216F03F9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)(a1 + 8) = v6;
  if (v6) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v6 + 48), 1uLL, memory_order_relaxed);
  }
  sub_216981010((_DWORD *)(a1 + 16), (_DWORD *)(a2 + 16));
  sub_21698105C((_DWORD *)(a1 + 20), (_DWORD *)(a2 + 20));
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 24) = v7;
  if ((v7 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v7 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    *(void *)(a1 + 24) &= 0xFFFFFFFFFFFFFFF8;
  }
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 4sub_2168EBBB8(&a9, 0) = 0;
  *(void *)(a1 + 48) = 0;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)a3;
  *(void *)(a1 + 48) = *(void *)(a3 + 16);
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a3 + 24);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a3 + 32);
  long long v8 = *(_OWORD *)(a3 + 48);
  long long v9 = *(_OWORD *)(a3 + 64);
  long long v10 = *(_OWORD *)(a3 + 96);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a3 + 80);
  *(_OWORD *)(a1 + 128) = v10;
  *(_OWORD *)(a1 + 8sub_2168EBBB8(&a9, 0) = v8;
  *(_OWORD *)(a1 + 96) = v9;
  long long v11 = *(_OWORD *)(a3 + 112);
  long long v12 = *(_OWORD *)(a3 + 128);
  long long v13 = *(_OWORD *)(a3 + 144);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a3 + 160);
  *(_OWORD *)(a1 + 16sub_2168EBBB8(&a9, 0) = v12;
  *(_OWORD *)(a1 + 176) = v13;
  *(_OWORD *)(a1 + 144) = v11;
  return a1;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::Clear(pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *this)
{
  if (*((void *)this + 3))
  {
    sub_216EF9C88((uint64_t)this, *((void **)this + 2));
    *((void *)this + 2) = 0;
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      for (uint64_t i = 0; i != v2; ++i)
        *(void *)(*(void *)this + 8 * i) = 0;
    }
    *((void *)this + 3) = 0;
  }
}

void sub_216F040E4()
{
  sub_216F05DBC();
  sub_216779094(__p, "BasisCurves");
  sub_216F05EE8((char *)__p);
  if (v1 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216F04134(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves::~UsdGeomBasisCurves(pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves *this)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomCurves::~UsdGeomCurves(this);

  operator delete(v1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves::Get(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  uint64_t v6 = sub_216D24140(a1);
  if (v7 & 1 | (unint64_t)v6)
  {
    long long v8 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_216D01530(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(v8, a2, (uint64_t)&v9);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76C5D0;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  else
  {
    long long v9 = "usdGeom/basisCurves.cpp";
    long long v10 = (atomic_ullong *)"Get";
    uint64_t v11 = 57;
    unint64_t v12 = (unint64_t)"static UsdGeomBasisCurves pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves::Get(const Us"
                            "dStagePtr &, const SdfPath &)";
    char v13 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v9, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v9) = 1;
    long long v10 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v11);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v11 + 1);
    unint64_t v12 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76C5D0;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  if (v10) {
    sub_216D16E0C(v10);
  }
}

void sub_216F04300(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216D16AD8((uint64_t)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves::Define(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92620, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92620))
  {
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken((pxrInternal__aapl__pxrReserved__::TfToken *)&qword_267B92618, "BasisCurves");
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &qword_267B92618, &dword_216758000);
    __cxa_guard_release(&qword_267B92620);
  }
  uint64_t v6 = sub_216D24140(a1);
  if (v7 & 1 | (unint64_t)v6)
  {
    long long v8 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_216D01530(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::DefinePrim(v8, a2, &qword_267B92618, (uint64_t)&v9);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76C5D0;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  else
  {
    long long v9 = "usdGeom/basisCurves.cpp";
    long long v10 = (atomic_ullong *)"Define";
    uint64_t v11 = 70;
    unint64_t v12 = (unint64_t)"static UsdGeomBasisCurves pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves::Define(const"
                            " UsdStagePtr &, const SdfPath &)";
    char v13 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v9, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v9) = 1;
    long long v10 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v11);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v11 + 1);
    unint64_t v12 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76C5D0;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  if (v10) {
    sub_216D16E0C(v10);
  }
}

void sub_216F0450C(_Unwind_Exception *a1)
{
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves::_GetSchemaKind(pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves *this)
{
  return 3;
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves::_GetStaticTfType(pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92630, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92630))
  {
    __cxa_guard_release(&qword_267B92630);
  }
  return &qword_267B92628;
}

void sub_216F045B4(_Unwind_Exception *a1)
{
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves::_IsTypedSchema(pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92640, memory_order_acquire) & 1) == 0)
  {
    uint64_t v2 = (pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves *)__cxa_guard_acquire(&qword_267B92640);
    if (v2)
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves::_GetStaticTfType(v2);
      byte_267B92638 = sub_216D16508((char *)&qword_267B92628, v3, v4);
      __cxa_guard_release(&qword_267B92640);
    }
  }
  return byte_267B92638;
}

void sub_216F04634(_Unwind_Exception *a1)
{
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves::_GetTfType(pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves *this)
{
  return &qword_267B92628;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves::GetTypeAttr(pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  uint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    uint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 1128), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F0470C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves::CreateTypeAttr(pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  long long v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    long long v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 1128), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 88), 0, 1, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves::GetBasisAttr(pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  uint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    uint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 32), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F04874(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves::CreateBasisAttr(pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  long long v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    long long v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 32), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 88), 0, 1, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves::GetWrapAttr(pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  uint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    uint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 1320), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F049DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves::CreateWrapAttr(pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  long long v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    long long v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 1320), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 88), 0, 1, a2, a3, a4);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves::GetSchemaAttributeNames(pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves *this)
{
  int v1 = (int)this;
  uint64_t v15 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92660, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92660))
  {
    uint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v3) {
      uint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v4 = *((void *)v3 + 141);
    uint64_t v12 = v4;
    if ((v4 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v4 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v12 &= 0xFFFFFFFFFFFFFFF8;
    }
    int v5 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v5) {
      int v5 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v6 = *((void *)v5 + 4);
    uint64_t v13 = v6;
    if ((v6 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v6 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v13 &= 0xFFFFFFFFFFFFFFF8;
    }
    int v7 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v7) {
      int v7 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v8 = *((void *)v7 + 165);
    uint64_t v14 = v8;
    if ((v8 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v14 &= 0xFFFFFFFFFFFFFFF8;
    }
    sub_216D30CFC(&qword_267B92648, &v12, 3uLL);
    for (uint64_t i = 16; i != -8; i -= 8)
    {
      uint64_t v10 = *(uint64_t *)((char *)&v12 + i);
      if ((v10 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v10 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
    }
    __cxa_atexit((void (*)(void *))sub_216B554D0, &qword_267B92648, &dword_216758000);
    __cxa_guard_release(&qword_267B92660);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92680, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92680))
  {
    SchemaAttributeNames = pxrInternal__aapl__pxrReserved__::UsdGeomCurves::GetSchemaAttributeNames((pxrInternal__aapl__pxrReserved__::UsdGeomCurves *)1);
    sub_216F04D74((uint64_t **)SchemaAttributeNames);
    __cxa_atexit((void (*)(void *))sub_216B554D0, &qword_267B92668, &dword_216758000);
    __cxa_guard_release(&qword_267B92680);
  }
  if (v1) {
    return &qword_267B92668;
  }
  else {
    return &qword_267B92648;
  }
}

void sub_216F04CF0(_Unwind_Exception *a1)
{
}

void *sub_216F04D74(uint64_t **a1)
{
  qword_267B92670 = 0;
  unk_267B92678 = 0;
  qword_267B92668 = 0;
  sub_216973388((char **)&qword_267B92668, ((*(void *)algn_267B92650 - qword_267B92648) >> 3) + a1[1] - *a1);
  sub_216AE27E0(&qword_267B92668, (void *)qword_267B92670, *a1, a1[1], a1[1] - *a1);
  return sub_216AE27E0(&qword_267B92668, (void *)qword_267B92670, (uint64_t *)qword_267B92648, *(uint64_t **)algn_267B92650, (*(void *)algn_267B92650 - qword_267B92648) >> 3);
}

void sub_216F04E0C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216889A04((void ***)va);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves::ComputeInterpolationForSize@<X0>(pxrInternal__aapl__pxrReserved__::UsdGeomCurves *a1@<X0>, uint64_t a2@<X1>, char **a3@<X3>, atomic_uint **a4@<X8>)
{
  if (a3)
  {
    int v7 = *a3;
    uint64_t v8 = a3[1];
    if (v8 != *a3)
    {
      do
      {
        uint64_t v10 = *((void *)v8 - 2);
        v8 -= 16;
        uint64_t v9 = v10;
        if ((v10 & 7) != 0) {
          atomic_fetch_add_explicit((atomic_uint *volatile)(v9 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
        }
      }
      while (v8 != v7);
      a3[1] = v7;
    }
    if (a2 != 1)
    {
      uint64_t v11 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      if (!v11) {
        uint64_t v11 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      }
      uint64_t v12 = *((void *)v11 + 17);
      if ((v12 & 7) != 0
        && (atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
      {
        v12 &= 0xFFFFFFFFFFFFFFF8;
      }
      unint64_t v13 = (unint64_t)a3[2];
      uint64_t v14 = a3[1];
      if ((unint64_t)v14 >= v13)
      {
        uint64_t v19 = (v14 - *a3) >> 4;
        unint64_t v20 = v19 + 1;
        if ((unint64_t)(v19 + 1) >> 60) {
          sub_21677CB10();
        }
        uint64_t v21 = v13 - (void)*a3;
        if (v21 >> 3 > v20) {
          unint64_t v20 = v21 >> 3;
        }
        if ((unint64_t)v21 >= 0x7FFFFFFFFFFFFFF0) {
          unint64_t v22 = 0xFFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v22 = v20;
        }
        uint64_t v38 = a3 + 2;
        long long v23 = (char *)sub_216787EE0((uint64_t)(a3 + 2), v22);
        long long v25 = &v23[16 * v19];
        *(void *)long long v25 = v12;
        *((void *)v25 + 1) = 1;
        long long v27 = *a3;
        long long v26 = a3[1];
        if (v26 == *a3)
        {
          int64x2_t v30 = vdupq_n_s64((unint64_t)v26);
          long long v28 = &v23[16 * v19];
        }
        else
        {
          long long v28 = &v23[16 * v19];
          do
          {
            long long v29 = *((_OWORD *)v26 - 1);
            v26 -= 16;
            *((_OWORD *)v28 - 1) = v29;
            v28 -= 16;
            *(void *)long long v26 = 0;
          }
          while (v26 != v27);
          int64x2_t v30 = *(int64x2_t *)a3;
        }
        uint64_t v15 = v25 + 16;
        *a3 = v28;
        a3[1] = v25 + 16;
        int64x2_t v36 = v30;
        long long v31 = a3[2];
        a3[2] = &v23[16 * v24];
        uint64_t v37 = v31;
        uint64_t v35 = v30.i64[0];
        sub_2168C9CB8((uint64_t)&v35);
      }
      else
      {
        *(void *)uint64_t v14 = v12;
        *((void *)v14 + 1) = 1;
        uint64_t v15 = v14 + 16;
      }
      a3[1] = v15;
LABEL_34:
      uint64_t v34 = 0;
      long long v32 = 0u;
      long long v33 = 0u;
      pxrInternal__aapl__pxrReserved__::UsdGeomCurves::GetCurveVertexCountsAttr(a1, (uint64_t)&v35);
      pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::VtArray<int>>();
    }
  }
  else if (a2 != 1)
  {
    goto LABEL_34;
  }
  double result = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!result) {
    double result = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  int v17 = (atomic_uint *)*((void *)result + 17);
  *a4 = v17;
  if ((v17 & 7) != 0)
  {
    char v18 = (atomic_uint *)((unint64_t)v17 & 0xFFFFFFFFFFFFFFF8);
    if ((atomic_fetch_add_explicit(v18, 2u, memory_order_relaxed) & 1) == 0) {
      *a4 = v18;
    }
  }
  return result;
}

void sub_216F054D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_216F05578(pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves *a1)
{
  uint64_t v2 = 0;
  uint64_t v3 = 0;
  pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves::GetTypeAttr(a1, (uint64_t)&v1);
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::TfToken>();
}

void sub_216F05A48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  sub_2168F83DC((uint64_t)va);
  uint64_t v9 = *(void *)(v7 - 48);
  if ((v9 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v9 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v10 = *(void *)(v7 - 40);
  if ((v10 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v10 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves::ComputeUniformDataSize(pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves *this, const pxrInternal__aapl__pxrReserved__::UsdTimeCode *a2)
{
  uint64_t v3 = 0;
  memset(&v2[32], 0, 32);
  pxrInternal__aapl__pxrReserved__::UsdGeomCurves::GetCurveVertexCountsAttr(this, (uint64_t)v2);
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::VtArray<int>>();
}

void sub_216F05BC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves::ComputeVaryingDataSize(pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves *this, const pxrInternal__aapl__pxrReserved__::UsdTimeCode *a2)
{
  uint64_t v3 = 0;
  memset(&v2[32], 0, 32);
  pxrInternal__aapl__pxrReserved__::UsdGeomCurves::GetCurveVertexCountsAttr(this, (uint64_t)v2);
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::VtArray<int>>();
}

void sub_216F05CA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_2168F83DC((uint64_t)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves::ComputeVertexDataSize(pxrInternal__aapl__pxrReserved__::UsdGeomBasisCurves *this, const pxrInternal__aapl__pxrReserved__::UsdTimeCode *a2)
{
  uint64_t v3 = 0;
  memset(&v2[32], 0, 32);
  pxrInternal__aapl__pxrReserved__::UsdGeomCurves::GetCurveVertexCountsAttr(this, (uint64_t)v2);
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::VtArray<int>>();
}

void sub_216F05D94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
}

uint64_t *sub_216F05DBC()
{
  sub_216851EE4((uint64_t)&v6, "Tf", "TfType::Define");
  sub_216F05F9C((unint64_t **)v5);
  uint64_t v0 = pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p, (char **)v5, 0);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  if (v5[0])
  {
    v5[1] = v5[0];
    operator delete(v5[0]);
  }
  while (v7--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v6);
  return v0;
}

void sub_216F05E9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a15) {
    operator delete(a15);
  }
  sub_21684E6B8(v16 - 32);
  _Unwind_Resume(a1);
}

void sub_216F05EE8(char *a1)
{
  unint64_t v2 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  unint64_t v3 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  pxrInternal__aapl__pxrReserved__::TfType::AddAlias((uint64_t *)&v3, v2, a1);
}

void sub_216F05F7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216F05F9C(unint64_t **a1@<X8>)
{
  unint64_t v2 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p);
  a1[1] = 0;
  a1[2] = 0;
  *a1 = 0;
  unint64_t v3 = (unint64_t *)operator new(8uLL);
  *a1 = v3;
  *v3++ = v2;
  a1[1] = v3;
  a1[2] = v3;
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216F0600C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomBoundable::~UsdGeomBoundable(pxrInternal__aapl__pxrReserved__::UsdGeomBoundable *this)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomXformable::~UsdGeomXformable(this);

  operator delete(v1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomBoundable::Get(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  uint64_t v6 = sub_216D24140(a1);
  if (v7 & 1 | (unint64_t)v6)
  {
    uint64_t v8 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_216D01530(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(v8, a2, (uint64_t)&v9);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76C628;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  else
  {
    uint64_t v9 = "usdGeom/boundable.cpp";
    uint64_t v10 = (atomic_ullong *)"Get";
    uint64_t v11 = 51;
    unint64_t v12 = (unint64_t)"static UsdGeomBoundable pxrInternal__aapl__pxrReserved__::UsdGeomBoundable::Get(const UsdSta"
                            "gePtr &, const SdfPath &)";
    char v13 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v9, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v9) = 1;
    uint64_t v10 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v11);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v11 + 1);
    unint64_t v12 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76C628;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  if (v10) {
    sub_216D16E0C(v10);
  }
}

void sub_216F061E4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216D16AD8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomBoundable::_GetSchemaKind(pxrInternal__aapl__pxrReserved__::UsdGeomBoundable *this)
{
  return 2;
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomBoundable::_GetStaticTfType(pxrInternal__aapl__pxrReserved__::UsdGeomBoundable *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92690, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92690))
  {
    __cxa_guard_release(&qword_267B92690);
  }
  return &qword_267B92688;
}

void sub_216F06274(_Unwind_Exception *a1)
{
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomBoundable::_IsTypedSchema(pxrInternal__aapl__pxrReserved__::UsdGeomBoundable *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B926A0, memory_order_acquire) & 1) == 0)
  {
    unint64_t v2 = (pxrInternal__aapl__pxrReserved__::UsdGeomBoundable *)__cxa_guard_acquire(&qword_267B926A0);
    if (v2)
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomBoundable::_GetStaticTfType(v2);
      byte_267B92698 = sub_216D16508((char *)&qword_267B92688, v3, v4);
      __cxa_guard_release(&qword_267B926A0);
    }
  }
  return byte_267B92698;
}

void sub_216F062F4(_Unwind_Exception *a1)
{
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomBoundable::_GetTfType(pxrInternal__aapl__pxrReserved__::UsdGeomBoundable *this)
{
  return &qword_267B92688;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomBoundable::GetExtentAttr(pxrInternal__aapl__pxrReserved__::UsdGeomBoundable *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  unint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    unint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 296), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F063CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomBoundable::CreateExtentAttr(pxrInternal__aapl__pxrReserved__::UsdGeomBoundable *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  uint64_t v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    uint64_t v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 296), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 616), 0, 0, a2, a3, a4);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomBoundable::GetSchemaAttributeNames(pxrInternal__aapl__pxrReserved__::UsdGeomBoundable *this)
{
  int v1 = (int)this;
  v7[1] = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B926C0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B926C0))
  {
    unint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v3) {
      unint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v4 = *((void *)v3 + 37);
    v7[0] = v4;
    if ((v4 & 7) != 0)
    {
      char v5 = (atomic_uint *)(v4 & 0xFFFFFFFFFFFFFFF8);
      if ((atomic_fetch_add_explicit(v5, 2u, memory_order_relaxed) & 1) == 0) {
        v7[0] = (uint64_t)v5;
      }
    }
    sub_216D30CFC(&qword_267B926A8, v7, 1uLL);
    if ((v7[0] & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v7[0] & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    __cxa_atexit((void (*)(void *))sub_216B554D0, &qword_267B926A8, &dword_216758000);
    __cxa_guard_release(&qword_267B926C0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B926E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B926E0))
  {
    SchemaAttributeNames = pxrInternal__aapl__pxrReserved__::UsdGeomXformable::GetSchemaAttributeNames((pxrInternal__aapl__pxrReserved__::UsdGeomXformable *)1);
    sub_216F0666C((uint64_t **)SchemaAttributeNames);
    __cxa_atexit((void (*)(void *))sub_216B554D0, &qword_267B926C8, &dword_216758000);
    __cxa_guard_release(&qword_267B926E0);
  }
  if (v1) {
    return &qword_267B926C8;
  }
  else {
    return &qword_267B926A8;
  }
}

void sub_216F06624(_Unwind_Exception *a1)
{
}

void *sub_216F0666C(uint64_t **a1)
{
  qword_267B926D0 = 0;
  unk_267B926D8 = 0;
  qword_267B926C8 = 0;
  sub_216973388((char **)&qword_267B926C8, ((*(void *)algn_267B926B0 - qword_267B926A8) >> 3) + a1[1] - *a1);
  sub_216AE27E0(&qword_267B926C8, (void *)qword_267B926D0, *a1, a1[1], a1[1] - *a1);
  return sub_216AE27E0(&qword_267B926C8, (void *)qword_267B926D0, (uint64_t *)qword_267B926A8, *(uint64_t **)algn_267B926B0, (*(void *)algn_267B926B0 - qword_267B926A8) >> 3);
}

void sub_216F06704(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216889A04((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomBoundable::ComputeExtent(pxrInternal__aapl__pxrReserved__::UsdGeomBoundable *a1, uint64_t a2, uint64_t a3)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomBoundable::GetExtentAttr(a1, (uint64_t)&v16);
  pxrInternal__aapl__pxrReserved__::UsdAttributeQuery::UsdAttributeQuery((pxrInternal__aapl__pxrReserved__::UsdAttributeQuery *)v20, (const pxrInternal__aapl__pxrReserved__::UsdAttribute *)&v16);
  if ((v19 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v19 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v18 + 1);
  sub_21697C414(&v18);
  if (v17) {
    sub_216D16E0C(v17);
  }
  if (pxrInternal__aapl__pxrReserved__::UsdAttributeQuery::HasAuthoredValue((pxrInternal__aapl__pxrReserved__::UsdAttributeQuery *)v20)) {
    pxrInternal__aapl__pxrReserved__::UsdAttributeQuery::_Get<pxrInternal__aapl__pxrReserved__::VtArray<pxrInternal__aapl__pxrReserved__::GfVec3f>>();
  }
  if (sub_216EF5D20(0))
  {
    sub_216D1E2AC((uint64_t)a1, &v16);
    String = pxrInternal__aapl__pxrReserved__::SdfPath::GetString((pxrInternal__aapl__pxrReserved__::SdfPath *)&v16);
    if (*((char *)String + 23) >= 0) {
      uint64_t v9 = (uint64_t)String;
    }
    else {
      uint64_t v9 = *String;
    }
    pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"[Boundable Extent] WARNING: No valid extent authored for <%s>. Computing extent from source geometry data dynamically..\n", v7, v8, v9);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v16 + 1);
    sub_21697C414(&v16);
  }
  if (pxrInternal__aapl__pxrReserved__::UsdGeomBoundable::ComputeExtentFromPlugins((uint64_t)a1, a2, a3))
  {
    uint64_t v10 = 1;
  }
  else
  {
    if (sub_216EF5D20(0))
    {
      sub_216D1E2AC((uint64_t)a1, &v16);
      uint64_t v11 = pxrInternal__aapl__pxrReserved__::SdfPath::GetString((pxrInternal__aapl__pxrReserved__::SdfPath *)&v16);
      if (*((char *)v11 + 23) >= 0) {
        uint64_t v14 = (uint64_t)v11;
      }
      else {
        uint64_t v14 = *v11;
      }
      pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"[Boundable Extent] WARNING: Unable to compute extent for <%s>.\n", v12, v13, v14);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v16 + 1);
      sub_21697C414(&v16);
    }
    uint64_t v10 = 0;
  }
  sub_216D2FE74((uint64_t)v20);
  return v10;
}

void sub_216F06924(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  sub_216D2FE74((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_216F06980()
{
  sub_216851EE4((uint64_t)&v6, "Tf", "TfType::Define");
  sub_216F06AAC((unint64_t **)v5);
  uint64_t v0 = pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p, (char **)v5, 0);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  if (v5[0])
  {
    v5[1] = v5[0];
    operator delete(v5[0]);
  }
  while (v7--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v6);
  return v0;
}

void sub_216F06A60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a15) {
    operator delete(a15);
  }
  sub_21684E6B8(v16 - 32);
  _Unwind_Resume(a1);
}

void sub_216F06AAC(unint64_t **a1@<X8>)
{
  unint64_t v2 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p);
  a1[1] = 0;
  a1[2] = 0;
  *a1 = 0;
  unint64_t v3 = (unint64_t *)operator new(8uLL);
  *a1 = v3;
  *v3++ = v2;
  a1[1] = v3;
  a1[2] = v3;
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216F06B1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_216F06B44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (uint64_t *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5
    && (*(unsigned char *)(v5 + 57) & 8) == 0
    && ((*(uint64_t (**)(uint64_t))(*(void *)a1 + 32))(a1) & 1) != 0)
  {
    unint64_t v10 = sub_216F07524();
    uint64_t v48 = (_DWORD *)(a1 + 16);
    sub_216D16CFC((uint64_t)&v56, v6, (_DWORD *)(a1 + 16));
    while ((atomic_load_explicit((atomic_uchar *volatile)(v10 + 56), memory_order_acquire) & 1) == 0)
      sched_yield();
    uint64_t v16 = v57;
    if (!v57 || (*((unsigned char *)v57 + 57) & 8) != 0) {
      pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(v57, v11);
    }
    uint64_t v17 = *((void *)v16 + 3);
    pxrInternal__aapl__pxrReserved__::TfType::TfType((pxrInternal__aapl__pxrReserved__::TfType *)v62);
    unint64_t v20 = *(void **)(v17 + 40);
    uint64_t v19 = (pxrInternal__aapl__pxrReserved__::TfType *)(v17 + 40);
    if (v20 == v62[0])
    {
      v62[0] = "usdGeom/boundableComputeExtent.cpp";
      v62[1] = "GetComputeFunction";
      *(void *)&long long v63 = 102;
      *((void *)&v63 + 1) = "UsdGeomComputeExtentFunction pxrInternal__aapl__pxrReserved__::(anonymous namespace)::_Fun"
                              "ctionRegistry::GetComputeFunction(const UsdPrim &)";
      LOBYTE(v64) = 0;
      long long v23 = v57;
      if (!v57 || (*((unsigned char *)v57 + 57) & 8) != 0) {
        pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(v57, v18);
      }
      unint64_t v24 = **((void **)v23 + 3) & 0xFFFFFFFFFFFFFFF8;
      if (v24)
      {
        long long v25 = (const char *)(v24 + 16);
        if (*(char *)(v24 + 39) < 0) {
          long long v25 = *(const char **)v25;
        }
      }
      else
      {
        long long v25 = "";
      }
      pxrInternal__aapl__pxrReserved__::UsdDescribe((uint64_t *)&__p, (pxrInternal__aapl__pxrReserved__ *)&v56, v18);
      if (v51 >= 0) {
        p_p = (const char *)&__p;
      }
      else {
        p_p = (const char *)__p;
      }
      pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v62, 1, (pxrInternal__aapl__pxrReserved__ *)"Could not find prim type '%s' for prim %s", v25, p_p);
      if (SHIBYTE(v51) < 0) {
        operator delete(__p);
      }
      unint64_t v22 = 0;
    }
    else
    {
      uint64_t v61 = 0;
      if (sub_216F079B4(v10, v19, &v61))
      {
        unint64_t v22 = v61;
      }
      else
      {
        std::string __p = 0;
        uint64_t v50 = 0;
        uint64_t v51 = 0;
        pxrInternal__aapl__pxrReserved__::TfType::GetAllAncestorTypes(v19, &__p, v21);
        if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B926F8, memory_order_acquire) & 1) == 0
          && __cxa_guard_acquire(&qword_267B926F8))
        {
          __cxa_guard_release(&qword_267B926F8);
        }
        long long v27 = (char *)__p;
        long long v28 = v50;
        if (__p != v50)
        {
          while (pxrInternal__aapl__pxrReserved__::TfType::IsA(v27, qword_267B926F0, v26))
          {
            v27 += 8;
            if (v27 == (char *)v28)
            {
              long long v27 = (char *)v28;
              goto LABEL_48;
            }
          }
          if (v27 != (char *)v28)
          {
            for (uint64_t i = v27 + 8; i != (char *)v28; i += 8)
            {
              if (pxrInternal__aapl__pxrReserved__::TfType::IsA(i, qword_267B926F0, v26))
              {
                *(void *)long long v27 = *(void *)i;
                v27 += 8;
              }
            }
          }
        }
LABEL_48:
        long long v31 = (uint64_t *)__p;
        if (v27 != (char *)v50) {
          uint64_t v50 = (atomic_ullong *)v27;
        }
        while (v31 != (uint64_t *)v27)
        {
          BOOL v32 = sub_216F079B4(v10, v31, &v61);
          if (v32) {
            goto LABEL_71;
          }
          pxrInternal__aapl__pxrReserved__::PlugRegistry::GetInstance((pxrInternal__aapl__pxrReserved__::PlugRegistry *)v32);
          uint64_t v33 = *v31;
          sub_216779094(v62, "implementsComputeExtent");
          pxrInternal__aapl__pxrReserved__::PlugRegistry::GetDataFromPluginMetaData(v33, (const void **)v62, (pxrInternal__aapl__pxrReserved__::JsValue *)&v53);
          if (SBYTE7(v63) < 0) {
            operator delete(v62[0]);
          }
          if (pxrInternal__aapl__pxrReserved__::JsValue::IsBool((pxrInternal__aapl__pxrReserved__::JsValue *)&v53)
            && pxrInternal__aapl__pxrReserved__::JsValue::GetBool((pxrInternal__aapl__pxrReserved__::JsValue *)&v53))
          {
            pxrInternal__aapl__pxrReserved__::PlugRegistry::GetPluginForType(*v31, &v65);
            uint64_t v34 = sub_2168E79D8(&v65);
            if (v35 & 1 | (unint64_t)v34)
            {
              int64x2_t v36 = (pxrInternal__aapl__pxrReserved__::PlugPlugin *)sub_2168E5D78(&v65);
              int v37 = pxrInternal__aapl__pxrReserved__::PlugPlugin::Load(v36);
            }
            else
            {
              v62[0] = "usdGeom/boundableComputeExtent.cpp";
              v62[1] = "_LoadPluginForType";
              *(void *)&long long v63 = 186;
              *((void *)&v63 + 1) = "BOOL pxrInternal__aapl__pxrReserved__::(anonymous namespace)::_FunctionRegistry::_"
                                      "LoadPluginForType(const TfType &) const";
              LOBYTE(v64) = 0;
              uint64_t TypeName = pxrInternal__aapl__pxrReserved__::TfType::GetTypeName((pxrInternal__aapl__pxrReserved__::TfType *)v31);
              if (*(char *)(TypeName + 23) >= 0) {
                uint64_t v39 = (const char *)TypeName;
              }
              else {
                uint64_t v39 = *(const char **)TypeName;
              }
              pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v62, 1, (pxrInternal__aapl__pxrReserved__ *)"Could not find plugin for '%s'", v39);
              int v37 = 0;
            }
            uint64_t v40 = v66;
            if (v66
              && atomic_fetch_add_explicit((atomic_uint *volatile)(v66 + 8), 0xFFFFFFFF, memory_order_release) == 1)
            {
              (*(void (**)(uint64_t))(*(void *)v40 + 8))(v40);
            }
          }
          else
          {
            int v37 = 0;
          }
          if (v54) {
            sub_216784EC4(v54);
          }
          if (v37 && sub_216F079B4(v10, v31, &v61))
          {
LABEL_71:
            long long v27 = (char *)v31;
            break;
          }
          ++v31;
        }
        v62[0] = 0;
        *(_WORD *)((char *)&v63 + 9) = 0;
        tbb::queuing_rw_mutex::scoped_lock::acquire((unint64_t)v62, (atomic_ullong *)(v10 + 8), 1);
        uint64_t v41 = (char *)__p;
        if (__p != v27)
        {
          uint64_t v42 = v10 + 16;
          do
          {
            sub_216F07A44(v42, v41, v41, (uint64_t *)&v61);
            v41 += 8;
          }
          while (v41 != v27);
        }
        unint64_t v22 = v61;
        sub_216AB9BA0((tbb::queuing_rw_mutex::scoped_lock *)v62);
        if (__p)
        {
          uint64_t v50 = (atomic_ullong *)__p;
          operator delete(__p);
        }
      }
    }
    if ((v59 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v59 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v58 + 1);
    sub_21697C414(&v58);
    if (v57) {
      sub_216D16E0C((atomic_ullong *)v57);
    }
    uint64_t v64 = 0;
    *(_OWORD *)uint64_t v62 = 0u;
    long long v63 = 0u;
    if (v22 && v22(a1, a2, a3, v62))
    {
      uint64_t v43 = v62[0];
      if (v62[0] == (void *)2)
      {
        if (v62 != (void **)a4)
        {
          sub_2168F83DC(a4);
          long long v44 = v63;
          *(_OWORD *)a4 = *(_OWORD *)v62;
          *(_OWORD *)(a4 + 16) = v44;
          *(_OWORD *)uint64_t v62 = 0u;
          long long v63 = 0u;
          *(void *)(a4 + 32) = v64;
          uint64_t v64 = 0;
        }
        uint64_t v14 = 1;
        goto LABEL_97;
      }
      uint64_t v56 = "usdGeom/boundableComputeExtent.cpp";
      uint64_t v57 = (pxrInternal__aapl__pxrReserved__ *)"_ComputeExtentFromPlugins";
      uint64_t v58 = 262;
      unint64_t v59 = (unint64_t)"BOOL pxrInternal__aapl__pxrReserved__::_ComputeExtentFromPlugins(const UsdGeomBoundable &,"
                              " const UsdTimeCode &, const GfMatrix4d *, VtVec3fArray *)";
      char v60 = 0;
      sub_216D16CFC((uint64_t)&__p, v6, v48);
      pxrInternal__aapl__pxrReserved__::UsdDescribe((uint64_t *)&v53, (pxrInternal__aapl__pxrReserved__ *)&__p, v45);
      if (v55 >= 0) {
        uint64_t v46 = (const char *)&v53;
      }
      else {
        uint64_t v46 = (const char *)v53;
      }
      pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v56, 1, (pxrInternal__aapl__pxrReserved__ *)"Plugin compute extent function produced an extent with %zu elements instead of 2 for %s", (size_t)v43, v46);
      if (v55 < 0) {
        operator delete(v53);
      }
      if ((v52 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v52 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v51 + 1);
      sub_21697C414(&v51);
      if (v50) {
        sub_216D16E0C(v50);
      }
    }
    uint64_t v14 = 0;
LABEL_97:
    sub_2168F83DC((uint64_t)v62);
    return v14;
  }
  v62[0] = "usdGeom/boundableComputeExtent.cpp";
  v62[1] = "_ComputeExtentFromPlugins";
  *(void *)&long long v63 = 246;
  *((void *)&v63 + 1) = "BOOL pxrInternal__aapl__pxrReserved__::_ComputeExtentFromPlugins(const UsdGeomBoundable &, con"
                          "st UsdTimeCode &, const GfMatrix4d *, VtVec3fArray *)";
  LOBYTE(v64) = 0;
  sub_216D16CFC((uint64_t)&v56, v6, (_DWORD *)(a1 + 16));
  pxrInternal__aapl__pxrReserved__::UsdDescribe((uint64_t *)&__p, (pxrInternal__aapl__pxrReserved__ *)&v56, v12);
  if (v51 >= 0) {
    char v13 = (const char *)&__p;
  }
  else {
    char v13 = (const char *)__p;
  }
  pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v62, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid UsdGeomBoundable %s", v13);
  if (SHIBYTE(v51) < 0) {
    operator delete(__p);
  }
  if ((v59 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v59 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v58 + 1);
  sub_21697C414(&v58);
  if (v57) {
    sub_216D16E0C((atomic_ullong *)v57);
  }
  return 0;
}

void sub_216F07224(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,int a33,__int16 a34,char a35,char a36)
{
  if (__p) {
    operator delete(__p);
  }
  sub_216D16AD8((uint64_t)&a25);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomBoundable::ComputeExtentFromPlugins(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_216F06B44(a1, a2, 0, a3);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomRegisterComputeExtentFunction(pxrInternal__aapl__pxrReserved__::TfType *a1, std::type_info *a2, char *a3)
{
  if (pxrInternal__aapl__pxrReserved__::TfType::IsA((char *)a1, *v5, v6))
  {
    if (a2->__vftable)
    {
      unint64_t v7 = sub_216F07524();
      unint64_t v10 = 0;
      *(_WORD *)((char *)&v13 + 1) = 0;
      tbb::queuing_rw_mutex::scoped_lock::acquire((unint64_t)&v10, (atomic_ullong *)(v7 + 8), 1);
      sub_216F07A44(v7 + 16, a1, a1, (uint64_t *)a2);
      char v9 = v8;
      sub_216AB9BA0((tbb::queuing_rw_mutex::scoped_lock *)&v10);
      if ((v9 & 1) == 0)
      {
        unint64_t v10 = "usdGeom/boundableComputeExtent.cpp";
        uint64_t v11 = "RegisterComputeFunction";
        uint64_t v12 = 88;
        char v13 = "void pxrInternal__aapl__pxrReserved__::(anonymous namespace)::_FunctionRegistry::RegisterComputeFunction(c"
              "onst TfType &, const UsdGeomComputeExtentFunction &)";
        char v14 = 0;
        pxrInternal__aapl__pxrReserved__::TfType::GetTypeName(a1);
        pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v10, 1, (pxrInternal__aapl__pxrReserved__ *)"UsdGeomComputeExtentFunction already registered for prim type '%s'");
      }
    }
    else
    {
      unint64_t v10 = "usdGeom/boundableComputeExtent.cpp";
      uint64_t v11 = "UsdGeomRegisterComputeExtentFunction";
      uint64_t v12 = 302;
      char v13 = "void pxrInternal__aapl__pxrReserved__::UsdGeomRegisterComputeExtentFunction(const TfType &, const UsdGeomCom"
            "puteExtentFunction &)";
      char v14 = 0;
      pxrInternal__aapl__pxrReserved__::TfType::GetTypeName(a1);
      pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v10, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid function registered for prim type '%s'");
    }
  }
  else
  {
    unint64_t v10 = "usdGeom/boundableComputeExtent.cpp";
    uint64_t v11 = "UsdGeomRegisterComputeExtentFunction";
    uint64_t v12 = 295;
    char v13 = "void pxrInternal__aapl__pxrReserved__::UsdGeomRegisterComputeExtentFunction(const TfType &, const UsdGeomCompu"
          "teExtentFunction &)";
    char v14 = 0;
    pxrInternal__aapl__pxrReserved__::TfType::GetTypeName(a1);
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v10, 1, (pxrInternal__aapl__pxrReserved__ *)"Prim type '%s' must derive from UsdGeomBoundable");
  }
}

void sub_216F07510(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216AB9BA0((tbb::queuing_rw_mutex::scoped_lock *)va);
  _Unwind_Resume(a1);
}

unint64_t sub_216F07524()
{
  unint64_t v0 = atomic_load((unint64_t *)&qword_267B926E8);
  if (!v0)
  {
    pxrInternal__aapl__pxrReserved__::ArchGetDemangled((pxrInternal__aapl__pxrReserved__ *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_117_FunctionRegistryE" & 0x7FFFFFFFFFFFFFFFLL), (uint64_t)&v16);
    unint64_t v2 = std::string::insert(&v16, 0, "Create Singleton ");
    long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    uint64_t v23 = v2->__r_.__value_.__r.__words[2];
    *(_OWORD *)std::string __p = v3;
    v2->__r_.__value_.__l.__size_ = 0;
    v2->__r_.__value_.__r.__words[2] = 0;
    v2->__r_.__value_.__r.__words[0] = 0;
    sub_216851098((uint64_t)&v17, "Tf", "TfSingleton::_CreateInstance", (char *)__p);
    if (SHIBYTE(v23) < 0) {
      operator delete(__p[0]);
    }
    if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v16.__r_.__value_.__l.__data_);
    }
    if (atomic_exchange(byte_267B92700, 1u))
    {
      while (!atomic_load((unint64_t *)&qword_267B926E8))
        sched_yield();
    }
    else
    {
      if (!atomic_load((unint64_t *)&qword_267B926E8))
      {
        unint64_t v7 = operator new(0x40uLL);
        unint64_t v9 = (unint64_t)v7;
        *unint64_t v7 = 0;
        __dmb(0xBu);
        v7[1] = 0;
        *((_OWORD *)v7 + 1) = 0u;
        *((_OWORD *)v7 + 2) = 0u;
        *((_DWORD *)v7 + 12) = 1065353216;
        *((unsigned char *)v7 + 56) = 0;
        if (atomic_exchange(&qword_267B926E8, (unint64_t)v7))
        {
          __p[0] = "tf/instantiateSingleton.h";
          __p[1] = "SetInstanceConstructed";
          uint64_t v23 = 56;
          unint64_t v24 = "static void pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::(anonymous n"
                "amespace)::_FunctionRegistry>::SetInstanceConstructed(T &) [T = pxrInternal__aapl__pxrReserved__::(anony"
                "mous namespace)::_FunctionRegistry]";
          char v25 = 0;
          int v26 = 4;
          pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper::IssueFatalError((pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper *)__p, (pxrInternal__aapl__pxrReserved__ *)"this function may not be called after GetInstance() or another SetInstanceConstructed() has completed", v8);
        }
        Instance = (pxrInternal__aapl__pxrReserved__::TfRegistryManager *)pxrInternal__aapl__pxrReserved__::TfRegistryManager::GetInstance((pxrInternal__aapl__pxrReserved__::TfRegistryManager *)v7);
        atomic_store(1u, (unsigned __int8 *)(v9 + 56));
        unint64_t v19 = v9;
        sub_21685203C((unint64_t *)v9, __p);
        unint64_t v20 = (atomic_uint *)__p[0];
        v16.__r_.__value_.__r.__words[0] = (std::string::size_type)sub_216F07C88;
        v16.__r_.__value_.__l.__size_ = 0;
        uint64_t v11 = (pxrInternal__aapl__pxrReserved__::TfNotice *)operator new(0x68uLL);
        __p[0] = &unk_26C74B5E8;
        pxrInternal__aapl__pxrReserved__::TfType::TfType((pxrInternal__aapl__pxrReserved__::TfType *)v21);
        sub_216F07D10((uint64_t)v11, &v19, &v16, (uint64_t)__p);
        (*(void (**)(void **))__p[0])(__p);
        pxrInternal__aapl__pxrReserved__::TfNotice::_Register(v11, (char **)__p);
        char v13 = __p[1];
        if (__p[1]
          && atomic_fetch_add_explicit((atomic_uint *volatile)__p[1] + 2, 0xFFFFFFFF, memory_order_release) == 1)
        {
          (*(void (**)(void *))(*(void *)v13 + 8))(v13);
        }
        char v14 = v20;
        if (v20 && atomic_fetch_add_explicit(v20 + 2, 0xFFFFFFFF, memory_order_release) == 1) {
          (*(void (**)(atomic_uint *))(*(void *)v14 + 8))(v14);
        }
        unint64_t v15 = atomic_load((unint64_t *)&qword_267B926E8);
        if (v15)
        {
          if (v9 != v15)
          {
            __p[0] = "tf/instantiateSingleton.h";
            __p[1] = "_CreateInstance";
            uint64_t v23 = 84;
            unint64_t v24 = "static T *pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::(anonymous n"
                  "amespace)::_FunctionRegistry>::_CreateInstance(std::atomic<T *> &) [T = pxrInternal__aapl__pxrReserved"
                  "__::(anonymous namespace)::_FunctionRegistry]";
            char v25 = 0;
            int v26 = 4;
            pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper::IssueFatalError((pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper *)__p, (pxrInternal__aapl__pxrReserved__ *)"race detected setting singleton instance", v12);
          }
        }
        else if (atomic_exchange(&qword_267B926E8, v9))
        {
          __p[0] = "tf/instantiateSingleton.h";
          __p[1] = "_CreateInstance";
          uint64_t v23 = 88;
          unint64_t v24 = "static T *pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::(anonymous nam"
                "espace)::_FunctionRegistry>::_CreateInstance(std::atomic<T *> &) [T = pxrInternal__aapl__pxrReserved__::"
                "(anonymous namespace)::_FunctionRegistry]";
          char v25 = 0;
          int v26 = 4;
          pxrInternal__aapl__pxrReserved__::Tf_DiagnosticLiteHelper::IssueFatalError((pxrInternal__aapl__pxrReserved__::Tf_DiagnosticLiteHelper *)__p, (pxrInternal__aapl__pxrReserved__ *)"Failed axiom: ' %s '", v12, "instance.exchange(newInst) == nullptr");
        }
      }
      atomic_store(0, (unsigned __int8 *)byte_267B92700);
    }
    unint64_t v0 = atomic_load((unint64_t *)&qword_267B926E8);
    while (v18--)
      pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v17);
  }
  return v0;
}

void sub_216F078A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, int a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  while (a18--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(a17);
  _Unwind_Resume(exception_object);
}

BOOL sub_216F079B4(uint64_t a1, void *a2, void *a3)
{
  v9[0] = 0;
  __int16 v10 = 0;
  tbb::queuing_rw_mutex::scoped_lock::acquire((unint64_t)v9, (atomic_ullong *)(a1 + 8), 0);
  uint64_t v6 = sub_216877FD4((void *)(a1 + 16), a2);
  if (v6) {
    *a3 = v6[3];
  }
  BOOL v7 = v6 != 0;
  sub_216AB9BA0((tbb::queuing_rw_mutex::scoped_lock *)v9);
  return v7;
}

void sub_216F07A30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_216F07A44(uint64_t a1, void *a2, void *a3, uint64_t *a4)
{
  unint64_t v8 = bswap64(0x9E3779B97F4A7C55 * *a2);
  unint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    uint8x8_t v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      unint64_t v4 = v8;
      if (v8 >= v9) {
        unint64_t v4 = v8 % v9;
      }
    }
    else
    {
      unint64_t v4 = v8 & (v9 - 1);
    }
    uint64_t v11 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v11)
    {
      for (uint64_t i = *v11; i; uint64_t i = (void *)*i)
      {
        unint64_t v13 = i[1];
        if (v13 == v8)
        {
          if (i[2] == *a2) {
            return i;
          }
        }
        else
        {
          if (v10.u32[0] > 1uLL)
          {
            if (v13 >= v9) {
              v13 %= v9;
            }
          }
          else
          {
            v13 &= v9 - 1;
          }
          if (v13 != v4) {
            break;
          }
        }
      }
    }
  }
  uint64_t i = operator new(0x20uLL);
  *uint64_t i = 0;
  i[1] = v8;
  uint64_t v14 = *a4;
  i[2] = *a3;
  i[3] = v14;
  float v15 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v16 = *(float *)(a1 + 32);
  if (!v9 || (float)(v16 * (float)v9) < v15)
  {
    BOOL v17 = 1;
    if (v9 >= 3) {
      BOOL v17 = (v9 & (v9 - 1)) != 0;
    }
    unint64_t v18 = v17 | (2 * v9);
    unint64_t v19 = vcvtps_u32_f32(v15 / v16);
    if (v18 <= v19) {
      size_t v20 = v19;
    }
    else {
      size_t v20 = v18;
    }
    sub_21678A04C(a1, v20);
    unint64_t v9 = *(void *)(a1 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9) {
        unint64_t v4 = v8 % v9;
      }
      else {
        unint64_t v4 = v8;
      }
    }
    else
    {
      unint64_t v4 = (v9 - 1) & v8;
    }
  }
  uint64_t v21 = *(void *)a1;
  unint64_t v22 = *(void **)(*(void *)a1 + 8 * v4);
  if (v22)
  {
    *uint64_t i = *v22;
LABEL_38:
    void *v22 = i;
    goto LABEL_39;
  }
  *uint64_t i = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = i;
  *(void *)(v21 + 8 * v4) = a1 + 16;
  if (*i)
  {
    unint64_t v23 = *(void *)(*i + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v23 >= v9) {
        v23 %= v9;
      }
    }
    else
    {
      v23 &= v9 - 1;
    }
    unint64_t v22 = (void *)(*(void *)a1 + 8 * v23);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(a1 + 24);
  return i;
}

void sub_216F07C74(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

tbb::queuing_rw_mutex::scoped_lock *sub_216F07C88(uint64_t a1)
{
  v5[0] = 0;
  __int16 v6 = 0;
  tbb::queuing_rw_mutex::scoped_lock::acquire((unint64_t)v5, (atomic_ullong *)(a1 + 8), 1);
  unint64_t v2 = *(uint64_t **)(a1 + 32);
  if (v2)
  {
    long long v3 = (void *)(a1 + 16);
    do
    {
      if (v2[3]) {
        unint64_t v2 = (uint64_t *)*v2;
      }
      else {
        unint64_t v2 = (uint64_t *)sub_2168778E0(v3, v2);
      }
    }
    while (v2);
  }
  return sub_216AB9BA0((tbb::queuing_rw_mutex::scoped_lock *)v5);
}

void sub_216F07CFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_216F07D10(uint64_t a1, void *a2, _OWORD *a3, uint64_t a4)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_WORD *)(a1 + 32) = 1;
  *(void *)a1 = &unk_26C76C698;
  uint64_t v6 = a2[1];
  *(void *)(a1 + 4sub_2168EBBB8(&a9, 0) = *a2;
  *(void *)(a1 + 48) = v6;
  if (v6) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v6 + 8), 1u, memory_order_relaxed);
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)a4 + 16))(a4, a1 + 56);
  *(_OWORD *)(a1 + 88) = *a3;
  return a1;
}

void sub_216F07DAC(_Unwind_Exception *a1, const void *a2)
{
  unint64_t v4 = (atomic_uint *)*((void *)v2 + 6);
  if (v4) {
    sub_217324328(v4);
  }
  pxrInternal__aapl__pxrReserved__::TfNotice::_DelivererBase::~_DelivererBase(v2, a2);
  _Unwind_Resume(a1);
}

void sub_216F07DCC(uint64_t a1)
{
  *(void *)a1 = &unk_26C76C698;
  (**(void (***)(void))(a1 + 56))();
  long long v3 = *(atomic_uint **)(a1 + 48);
  if (v3 && atomic_fetch_add_explicit(v3 + 2, 0xFFFFFFFF, memory_order_release) == 1) {
    (*(void (**)(atomic_uint *))(*(void *)v3 + 8))(v3);
  }

  pxrInternal__aapl__pxrReserved__::TfNotice::_DelivererBase::~_DelivererBase((pxrInternal__aapl__pxrReserved__::TfNotice::_DelivererBase *)a1, v2);
}

void sub_216F07E80(uint64_t a1)
{
  *(void *)a1 = &unk_26C76C698;
  (**(void (***)(void))(a1 + 56))();
  long long v3 = *(atomic_uint **)(a1 + 48);
  if (v3 && atomic_fetch_add_explicit(v3 + 2, 0xFFFFFFFF, memory_order_release) == 1) {
    (*(void (**)(atomic_uint *))(*(void *)v3 + 8))(v3);
  }
  pxrInternal__aapl__pxrReserved__::TfNotice::_DelivererBase::~_DelivererBase((pxrInternal__aapl__pxrReserved__::TfNotice::_DelivererBase *)a1, v2);

  operator delete(v4);
}

uint64_t sub_216F07F38(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v9 = a1[6];
  unint64_t v8 = a1 + 6;
  if (!v9) {
    return 0;
  }
  unint64_t v13 = v8 - 1;
  uint64_t v14 = sub_216850B68(v8);
  uint64_t v15 = *v13;
  BOOL v16 = !*(unsigned char *)(v14 + 14) || v15 == 0;
  if (v16
    || (pxrInternal__aapl__pxrReserved__::TfAnyWeakPtr::IsInvalid((pxrInternal__aapl__pxrReserved__::TfAnyWeakPtr *)(a1 + 7)) & 1) != 0)
  {
    return 0;
  }
  if (*a7 != a7[1])
  {
    uint64_t v26 = v15;
    uint64_t v22 = (*(uint64_t (**)(uint64_t *))(*a1 + 40))(a1);
    uint64_t v23 = sub_216F08344(v13);
    if (v22) {
      uint64_t v24 = a6;
    }
    else {
      uint64_t v24 = MEMORY[0x263F8C288];
    }
    char v25 = (char *)v22;
    uint64_t v15 = v26;
    pxrInternal__aapl__pxrReserved__::TfNotice::_DelivererBase::_BeginDelivery((uint64_t)a1, a2, v25, v24, v23, (uint64_t)&unk_26C76C670, a7);
  }
  unint64_t v18 = (void (*)(void *, uint64_t))a1[11];
  uint64_t v19 = a1[12];
  size_t v20 = (void *)(v15 + (v19 >> 1));
  if (v19) {
    unint64_t v18 = *(void (**)(void *, uint64_t))(*v20 + v18);
  }
  v18(v20, a2);
  if (*a7 != a7[1]) {
    pxrInternal__aapl__pxrReserved__::TfNotice::_DelivererBase::_EndDelivery((uint64_t)a1, a7, v21);
  }
  return 1;
}

uint64_t sub_216F08078(uint64_t a1, const std::type_info *a2, char *a3)
{
  pxrInternal__aapl__pxrReserved__::TfType::TfType((pxrInternal__aapl__pxrReserved__::TfType *)v13);
  if (v13[0] == v3)
  {
    v13[0] = "tf/notice.h";
    v13[1] = "GetNoticeType";
    void v13[2] = 563;
    void v13[3] = "virtual TfType pxrInternal__aapl__pxrReserved__::TfNotice::_StandardDeliverer<pxrInternal__aapl__pxrReserve"
             "d__::TfNotice::_Deliverer<pxrInternal__aapl__pxrReserved__::TfWeakPtr<pxrInternal__aapl__pxrReserved__::(an"
             "onymous namespace)::_FunctionRegistry>, pxrInternal__aapl__pxrReserved__::TfAnyWeakPtr, void (pxrInternal__"
             "aapl__pxrReserved__::(anonymous namespace)::_FunctionRegistry::*)(const pxrInternal__aapl__pxrReserved__::P"
             "lugNotice::DidRegisterPlugins &), pxrInternal__aapl__pxrReserved__::PlugNotice::DidRegisterPlugins>>::GetNo"
             "ticeType() const [Derived = pxrInternal__aapl__pxrReserved__::TfNotice::_Deliverer<pxrInternal__aapl__pxrRe"
             "served__::TfWeakPtr<pxrInternal__aapl__pxrReserved__::(anonymous namespace)::_FunctionRegistry>, pxrInterna"
             "l__aapl__pxrReserved__::TfAnyWeakPtr, void (pxrInternal__aapl__pxrReserved__::(anonymous namespace)::_Funct"
             "ionRegistry::*)(const pxrInternal__aapl__pxrReserved__::PlugNotice::DidRegisterPlugins &), pxrInternal__aap"
             "l__pxrReserved__::PlugNotice::DidRegisterPlugins>]";
    char v14 = 0;
    int v15 = 4;
    pxrInternal__aapl__pxrReserved__::ArchGetDemangled((pxrInternal__aapl__pxrReserved__ *)((unint64_t)off_26C74DAF0 & 0x7FFFFFFFFFFFFFFFLL), (uint64_t)&v9);
    unint64_t v4 = std::string::insert(&v9, 0, "notice type ");
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    v10.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v10.__r_.__value_.__l.__data_ = v5;
    v4->__r_.__value_.__l.__size_ = 0;
    v4->__r_.__value_.__r.__words[2] = 0;
    v4->__r_.__value_.__r.__words[0] = 0;
    uint64_t v6 = std::string::append(&v10, " undefined in the TfType system");
    long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    std::string::size_type v12 = v6->__r_.__value_.__r.__words[2];
    *(_OWORD *)std::string __p = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper::IssueFatalError((uint64_t)v13, (uint64_t)__p);
    if (SHIBYTE(v12) < 0) {
      operator delete(__p[0]);
    }
    if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v10.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v9.__r_.__value_.__l.__data_);
    }
  }
  return v3;
}

void sub_216F08198(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a28 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_216F081E4(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 24))(a1);
  uint64_t result = pxrInternal__aapl__pxrReserved__::TfType::IsA(a2, v6, v7);
  if (result)
  {
    std::string v9 = (pxrInternal__aapl__pxrReserved__::TfAnyWeakPtr *)(a1 + 56);
    char IsInvalid = pxrInternal__aapl__pxrReserved__::TfAnyWeakPtr::IsInvalid(v9);
    uint64_t result = 0;
    if (a3)
    {
      if ((IsInvalid & 1) == 0) {
        return pxrInternal__aapl__pxrReserved__::TfAnyWeakPtr::GetWeakBase(v9) == a3;
      }
    }
  }
  return result;
}

uint64_t sub_216F08274(uint64_t a1)
{
  int v1 = (pxrInternal__aapl__pxrReserved__::TfAnyWeakPtr *)(a1 + 56);
  if (!pxrInternal__aapl__pxrReserved__::TfAnyWeakPtr::operator BOOL(a1 + 56)) {
    return 0;
  }

  return pxrInternal__aapl__pxrReserved__::TfAnyWeakPtr::GetWeakBase(v1);
}

void *sub_216F082C4(uint64_t a1)
{
  unint64_t v2 = operator new(0x68uLL);
  (*(void (**)(uint64_t))(*(void *)a1 + 24))(a1);
  sub_216F07D10((uint64_t)v2, (void *)(a1 + 40), (_OWORD *)(a1 + 88), a1 + 56);
  return v2;
}

void sub_216F08330(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_216F08344(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  unint64_t v2 = a1 + 1;
  if (!v3
    || ((int v4 = *(unsigned __int8 *)(sub_216850B68(v2) + 14), result = *a1, v4) ? (v6 = result == 0) : (v6 = 1), v6))
  {
    long long v7 = j__strrchr("/Library/Caches/com.apple.xbs/Sources/USDLib/USD/pxr/base/tf/weakPtrFacade.h", 47);
    v8[0] = sub_21684E5D4((unint64_t)"/Library/Caches/com.apple.xbs/Sources/USDLib/USD/pxr/base/tf/weakPtrFacade.h", (uint64_t)v7, 0x2Fu);
    v8[1] = "operator->";
    v8[2] = 216;
    _OWORD v8[3] = "DataType *pxrInternal__aapl__pxrReserved__::TfWeakPtrFacade<pxrInternal__aapl__pxrReserved__::TfWeakPtr, pxr"
            "Internal__aapl__pxrReserved__::(anonymous namespace)::_FunctionRegistry>::operator->() const [PtrTemplate = "
            "pxrInternal__aapl__pxrReserved__::TfWeakPtr, Type = pxrInternal__aapl__pxrReserved__::(anonymous namespace):"
            ":_FunctionRegistry]";
    char v9 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostNullSmartPtrDereferenceFatalError((uint64_t)v8, (pxrInternal__aapl__pxrReserved__ *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__9TfWeakPtrINS_12_GLOBAL__N_117_FunctionRegistryEEE" & 0x7FFFFFFFFFFFFFFFLL));
  }
  return result;
}

void sub_216F083E4()
{
  sub_216F0BBE0();
  sub_216779094(__p, "Camera");
  sub_216F0BD0C((char *)__p);
  if (v1 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216F08434(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::~UsdGeomCamera(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomXformable::~UsdGeomXformable(this);

  operator delete(v1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::Get(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  BOOL v6 = sub_216D24140(a1);
  if (v7 & 1 | (unint64_t)v6)
  {
    unint64_t v8 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_216D01530(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(v8, a2, (uint64_t)&v9);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76C710;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  else
  {
    char v9 = "usdGeom/camera.cpp";
    std::string v10 = (atomic_ullong *)"Get";
    uint64_t v11 = 57;
    unint64_t v12 = (unint64_t)"static UsdGeomCamera pxrInternal__aapl__pxrReserved__::UsdGeomCamera::Get(const UsdStagePtr "
                            "&, const SdfPath &)";
    char v13 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v9, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v9) = 1;
    std::string v10 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v11);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v11 + 1);
    unint64_t v12 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76C710;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  if (v10) {
    sub_216D16E0C(v10);
  }
}

void sub_216F08600(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216D16AD8((uint64_t)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::Define(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92710, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92710))
  {
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken((pxrInternal__aapl__pxrReserved__::TfToken *)&qword_267B92708, "Camera");
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &qword_267B92708, &dword_216758000);
    __cxa_guard_release(&qword_267B92710);
  }
  BOOL v6 = sub_216D24140(a1);
  if (v7 & 1 | (unint64_t)v6)
  {
    unint64_t v8 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_216D01530(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::DefinePrim(v8, a2, &qword_267B92708, (uint64_t)&v9);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76C710;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  else
  {
    char v9 = "usdGeom/camera.cpp";
    std::string v10 = (atomic_ullong *)"Define";
    uint64_t v11 = 70;
    unint64_t v12 = (unint64_t)"static UsdGeomCamera pxrInternal__aapl__pxrReserved__::UsdGeomCamera::Define(const UsdStageP"
                            "tr &, const SdfPath &)";
    char v13 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v9, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v9) = 1;
    std::string v10 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v11);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v11 + 1);
    unint64_t v12 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76C710;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  if (v10) {
    sub_216D16E0C(v10);
  }
}

void sub_216F0880C(_Unwind_Exception *a1)
{
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCamera::_GetSchemaKind(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this)
{
  return 3;
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomCamera::_GetStaticTfType(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92720, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92720))
  {
    __cxa_guard_release(&qword_267B92720);
  }
  return &qword_267B92718;
}

void sub_216F088B4(_Unwind_Exception *a1)
{
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCamera::_IsTypedSchema(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92730, memory_order_acquire) & 1) == 0)
  {
    unint64_t v2 = (pxrInternal__aapl__pxrReserved__::UsdGeomCamera *)__cxa_guard_acquire(&qword_267B92730);
    if (v2)
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomCamera::_GetStaticTfType(v2);
      byte_267B92728 = sub_216D16508((char *)&qword_267B92718, v3, v4);
      __cxa_guard_release(&qword_267B92730);
    }
  }
  return byte_267B92728;
}

void sub_216F08934(_Unwind_Exception *a1)
{
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomCamera::_GetTfType(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this)
{
  return &qword_267B92718;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::GetProjectionAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  uint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    uint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 864), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F08A0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::CreateProjectionAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  char v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    char v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 864), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 88), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::GetHorizontalApertureAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  uint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    uint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 432), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F08B74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::CreateHorizontalApertureAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  char v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    char v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 432), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 56), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::GetVerticalApertureAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  uint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    uint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 1232), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F08CDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::CreateVerticalApertureAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  char v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    char v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 1232), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 56), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::GetHorizontalApertureOffsetAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  uint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    uint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 440), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F08E44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::CreateHorizontalApertureOffsetAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  char v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    char v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 440), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 56), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::GetVerticalApertureOffsetAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  uint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    uint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 1240), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F08FAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::CreateVerticalApertureOffsetAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  char v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    char v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 1240), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 56), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::GetFocalLengthAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  uint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    uint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 360), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F09114(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::CreateFocalLengthAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  char v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    char v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 360), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 56), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::GetClippingRangeAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  uint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    uint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 120), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F0927C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::CreateClippingRangeAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  char v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    char v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 120), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 152), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::GetClippingPlanesAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  uint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    uint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 112), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F093E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::CreateClippingPlanesAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  char v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    char v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 112), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 624), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::GetFStopAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  uint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    uint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 384), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F0954C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::CreateFStopAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  char v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    char v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 384), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 56), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::GetFocusDistanceAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  uint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    uint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 368), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F096B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::CreateFocusDistanceAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  char v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    char v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 368), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 56), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::GetStereoRoleAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  uint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    uint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 1024), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F0981C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::CreateStereoRoleAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  char v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    char v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 1024), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 88), 0, 1, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::GetShutterOpenAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  uint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    uint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 1000), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F09984(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::CreateShutterOpenAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  char v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    char v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 1000), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 64), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::GetShutterCloseAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  uint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    uint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 992), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F09AEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::CreateShutterCloseAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  char v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    char v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 992), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 64), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::GetExposureAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  uint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    uint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 288), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F09C54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::CreateExposureAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  char v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    char v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 288), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 56), 0, 0, a2, a3, a4);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomCamera::GetSchemaAttributeNames(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this)
{
  int v1 = (int)this;
  uint64_t v48 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92750, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92750))
  {
    uint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v3) {
      uint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v4 = *((void *)v3 + 108);
    uint64_t v34 = v4;
    if ((v4 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v4 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v34 &= 0xFFFFFFFFFFFFFFF8;
    }
    long long v5 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v5) {
      long long v5 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v6 = *((void *)v5 + 54);
    uint64_t v35 = v6;
    if ((v6 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v6 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v35 &= 0xFFFFFFFFFFFFFFF8;
    }
    int v7 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v7) {
      int v7 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v8 = *((void *)v7 + 154);
    uint64_t v36 = v8;
    if ((v8 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v36 &= 0xFFFFFFFFFFFFFFF8;
    }
    char v9 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v9) {
      char v9 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v10 = *((void *)v9 + 55);
    uint64_t v37 = v10;
    if ((v10 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v10 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v37 &= 0xFFFFFFFFFFFFFFF8;
    }
    uint64_t v11 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v11) {
      uint64_t v11 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v12 = *((void *)v11 + 155);
    uint64_t v38 = v12;
    if ((v12 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v38 &= 0xFFFFFFFFFFFFFFF8;
    }
    char v13 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v13) {
      char v13 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v14 = *((void *)v13 + 45);
    uint64_t v39 = v14;
    if ((v14 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v14 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v39 &= 0xFFFFFFFFFFFFFFF8;
    }
    int v15 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v15) {
      int v15 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v16 = *((void *)v15 + 15);
    uint64_t v40 = v16;
    if ((v16 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v16 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v40 &= 0xFFFFFFFFFFFFFFF8;
    }
    BOOL v17 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v17) {
      BOOL v17 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v18 = *((void *)v17 + 14);
    uint64_t v41 = v18;
    if ((v18 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v18 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v41 &= 0xFFFFFFFFFFFFFFF8;
    }
    uint64_t v19 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v19) {
      uint64_t v19 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v20 = *((void *)v19 + 48);
    uint64_t v42 = v20;
    if ((v20 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v20 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v42 &= 0xFFFFFFFFFFFFFFF8;
    }
    uint64_t v21 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v21) {
      uint64_t v21 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v22 = *((void *)v21 + 46);
    uint64_t v43 = v22;
    if ((v22 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v22 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v43 &= 0xFFFFFFFFFFFFFFF8;
    }
    uint64_t v23 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v23) {
      uint64_t v23 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v24 = *((void *)v23 + 128);
    uint64_t v44 = v24;
    if ((v24 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v24 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v44 &= 0xFFFFFFFFFFFFFFF8;
    }
    char v25 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v25) {
      char v25 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v26 = *((void *)v25 + 125);
    uint64_t v45 = v26;
    if ((v26 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v26 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v45 &= 0xFFFFFFFFFFFFFFF8;
    }
    long long v27 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v27) {
      long long v27 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v28 = *((void *)v27 + 124);
    uint64_t v46 = v28;
    if ((v28 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v28 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v46 &= 0xFFFFFFFFFFFFFFF8;
    }
    long long v29 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v29) {
      long long v29 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v30 = *((void *)v29 + 36);
    uint64_t v47 = v30;
    if ((v30 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v30 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v47 &= 0xFFFFFFFFFFFFFFF8;
    }
    sub_216D30CFC(&qword_267B92738, &v34, 0xEuLL);
    for (uint64_t i = 104; i != -8; i -= 8)
    {
      uint64_t v32 = *(uint64_t *)((char *)&v34 + i);
      if ((v32 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v32 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
    }
    __cxa_atexit((void (*)(void *))sub_216B554D0, &qword_267B92738, &dword_216758000);
    __cxa_guard_release(&qword_267B92750);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92770, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92770))
  {
    SchemaAttributeNames = pxrInternal__aapl__pxrReserved__::UsdGeomXformable::GetSchemaAttributeNames((pxrInternal__aapl__pxrReserved__::UsdGeomXformable *)1);
    sub_216F0A330((uint64_t **)SchemaAttributeNames);
    __cxa_atexit((void (*)(void *))sub_216B554D0, &qword_267B92758, &dword_216758000);
    __cxa_guard_release(&qword_267B92770);
  }
  if (v1) {
    return &qword_267B92758;
  }
  else {
    return &qword_267B92738;
  }
}

void sub_216F0A2AC(_Unwind_Exception *a1)
{
}

void *sub_216F0A330(uint64_t **a1)
{
  qword_267B92760 = 0;
  unk_267B92768 = 0;
  qword_267B92758 = 0;
  sub_216973388((char **)&qword_267B92758, ((unk_267B92740 - qword_267B92738) >> 3) + a1[1] - *a1);
  sub_216AE27E0(&qword_267B92758, (void *)qword_267B92760, *a1, a1[1], a1[1] - *a1);
  return sub_216AE27E0(&qword_267B92758, (void *)qword_267B92760, (uint64_t *)qword_267B92738, unk_267B92740, (unk_267B92740 - qword_267B92738) >> 3);
}

void sub_216F0A3C8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216889A04((void ***)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCamera::GetCamera(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this@<X0>, const pxrInternal__aapl__pxrReserved__::UsdTimeCode *a2@<X1>, uint64_t a3@<X8>)
{
  pxrInternal__aapl__pxrReserved__::GfMatrix4d::SetDiagonal((uint64_t)&v48, 1.0);
  uint64_t v53 = 0x497424003F800000;
  long long v57 = 0uLL;
  *(void *)&long long v58 = 0;
  pxrInternal__aapl__pxrReserved__::GfCamera::GfCamera(a3, &v48, 0, &v53, (uint64_t)&v57, 20.955, 15.2908, 0.0, 0.0, 50.0, 0.0, 0.0);
  if ((void)v57)
  {
    *((void *)&v57 + 1) = v57;
    operator delete((void *)v57);
  }
  pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputeLocalToWorldTransform(this, a2, (uint64_t)&v48);
  pxrInternal__aapl__pxrReserved__::GfCamera::SetTransform(a3, &v48);
  uint64_t v6 = (uint64_t *)((char *)this + 8);
  int v7 = (_DWORD *)((char *)this + 16);
  sub_216D16CFC((uint64_t)&v53, v6, v7);
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  char v9 = (void *)((char *)v8 + 864);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v53, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 864), (uint64_t)&v57);
  if (pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)&v57, v10))
  {
    uint64_t v60 = 0;
    pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::TfToken>();
  }
  *(void *)&long long v48 = "usdGeom/camera.cpp";
  *((void *)&v48 + 1) = "_GetValue";
  uint64_t v49 = 410;
  uint64_t v50 = "std::optional<T> pxrInternal__aapl__pxrReserved__::_GetValue(const UsdPrim &, const TfToken &, const UsdTimeCode"
        " &) [T = pxrInternal__aapl__pxrReserved__::TfToken]";
  LOBYTE(v51) = 0;
  unint64_t v11 = *v9 & 0xFFFFFFFFFFFFFFF8;
  if (v11)
  {
    uint64_t v12 = (const char *)(v11 + 16);
    if (*(char *)(v11 + 39) < 0) {
      uint64_t v12 = *(const char **)v12;
    }
  }
  else
  {
    uint64_t v12 = "";
  }
  sub_216D0162C((uint64_t)&v53, (int *)&v60);
  Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v60);
  pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v48, (pxrInternal__aapl__pxrReserved__ *)"%s attribute on prim %s missing.", v14, v12, Text);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v60 + 1);
  sub_21697C414(&v60);
  if ((BYTE8(v58) & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(*((void *)&v58 + 1) & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v58 + 1);
  sub_21697C414(&v58);
  if (*((void *)&v57 + 1)) {
    sub_216D16E0C(*((atomic_ullong **)&v57 + 1));
  }
  if ((v56 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v56 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v55 + 1);
  sub_21697C414(&v55);
  if (v54) {
    sub_216D16E0C(v54);
  }
  sub_216D16CFC((uint64_t)&v48, v6, v7);
  int v15 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v15) {
    int v15 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  uint64_t v16 = sub_216F0B248((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v48, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v15 + 432));
  if ((v50 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)((unint64_t)v50 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v49 + 1);
  sub_21697C414(&v49);
  if (*((void *)&v48 + 1)) {
    sub_216D16E0C(*((atomic_ullong **)&v48 + 1));
  }
  if ((v16 & 0xFF00000000) != 0) {
    pxrInternal__aapl__pxrReserved__::GfCamera::SetHorizontalAperture(a3, *(float *)&v16);
  }
  sub_216D16CFC((uint64_t)&v48, v6, v7);
  BOOL v17 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v17) {
    BOOL v17 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  uint64_t v18 = sub_216F0B248((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v48, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v17 + 1232));
  if ((v50 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)((unint64_t)v50 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v49 + 1);
  sub_21697C414(&v49);
  if (*((void *)&v48 + 1)) {
    sub_216D16E0C(*((atomic_ullong **)&v48 + 1));
  }
  if ((v18 & 0xFF00000000) != 0) {
    pxrInternal__aapl__pxrReserved__::GfCamera::SetVerticalAperture(a3, *(float *)&v18);
  }
  sub_216D16CFC((uint64_t)&v48, v6, v7);
  uint64_t v19 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v19) {
    uint64_t v19 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  uint64_t v20 = sub_216F0B248((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v48, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v19 + 440));
  if ((v50 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)((unint64_t)v50 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v49 + 1);
  sub_21697C414(&v49);
  if (*((void *)&v48 + 1)) {
    sub_216D16E0C(*((atomic_ullong **)&v48 + 1));
  }
  if ((v20 & 0xFF00000000) != 0) {
    pxrInternal__aapl__pxrReserved__::GfCamera::SetHorizontalApertureOffset(a3, *(float *)&v20);
  }
  sub_216D16CFC((uint64_t)&v48, v6, v7);
  uint64_t v21 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v21) {
    uint64_t v21 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  uint64_t v22 = sub_216F0B248((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v48, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v21 + 1240));
  if ((v50 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)((unint64_t)v50 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v49 + 1);
  sub_21697C414(&v49);
  if (*((void *)&v48 + 1)) {
    sub_216D16E0C(*((atomic_ullong **)&v48 + 1));
  }
  if ((v22 & 0xFF00000000) != 0) {
    pxrInternal__aapl__pxrReserved__::GfCamera::SetVerticalApertureOffset(a3, *(float *)&v22);
  }
  sub_216D16CFC((uint64_t)&v48, v6, v7);
  uint64_t v23 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v23) {
    uint64_t v23 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  uint64_t v24 = sub_216F0B248((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v48, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v23 + 360));
  if ((v50 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)((unint64_t)v50 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v49 + 1);
  sub_21697C414(&v49);
  if (*((void *)&v48 + 1)) {
    sub_216D16E0C(*((atomic_ullong **)&v48 + 1));
  }
  if ((v24 & 0xFF00000000) != 0) {
    pxrInternal__aapl__pxrReserved__::GfCamera::SetFocalLength(a3, *(float *)&v24);
  }
  sub_216D16CFC((uint64_t)&v53, v6, v7);
  char v25 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v25) {
    char v25 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  uint64_t v26 = (void *)((char *)v25 + 120);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v53, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v25 + 120), (uint64_t)&v57);
  if (pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)&v57, v27))pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::GfVec2f>(); {
  *(void *)&long long v48 = "usdGeom/camera.cpp";
  }
  *((void *)&v48 + 1) = "_GetValue";
  uint64_t v49 = 410;
  uint64_t v50 = "std::optional<T> pxrInternal__aapl__pxrReserved__::_GetValue(const UsdPrim &, const TfToken &, const UsdTimeCode"
        " &) [T = pxrInternal__aapl__pxrReserved__::GfVec2f]";
  LOBYTE(v51) = 0;
  unint64_t v28 = *v26 & 0xFFFFFFFFFFFFFFF8;
  if (v28)
  {
    long long v29 = (const char *)(v28 + 16);
    if (*(char *)(v28 + 39) < 0) {
      long long v29 = *(const char **)v29;
    }
  }
  else
  {
    long long v29 = "";
  }
  sub_216D0162C((uint64_t)&v53, (int *)&v60);
  uint64_t v30 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v60);
  pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v48, (pxrInternal__aapl__pxrReserved__ *)"%s attribute on prim %s missing.", v31, v29, v30);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v60 + 1);
  sub_21697C414(&v60);
  if ((BYTE8(v58) & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(*((void *)&v58 + 1) & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v58 + 1);
  sub_21697C414(&v58);
  if (*((void *)&v57 + 1)) {
    sub_216D16E0C(*((atomic_ullong **)&v57 + 1));
  }
  if ((v56 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v56 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v55 + 1);
  sub_21697C414(&v55);
  if (v54) {
    sub_216D16E0C(v54);
  }
  sub_216D16CFC((uint64_t)v43, v6, v7);
  uint64_t v32 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v32) {
    uint64_t v32 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  uint64_t v33 = (void *)((char *)v32 + 112);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)v43, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v32 + 112), (uint64_t)&v60);
  if (pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)&v60, v34))
  {
    uint64_t v59 = 0;
    long long v57 = 0u;
    long long v58 = 0u;
    pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::VtArray<pxrInternal__aapl__pxrReserved__::GfVec4f>>();
  }
  *(void *)&long long v57 = "usdGeom/camera.cpp";
  *((void *)&v57 + 1) = "_GetValue";
  *(void *)&long long v58 = 410;
  *((void *)&v58 + 1) = "std::optional<T> pxrInternal__aapl__pxrReserved__::_GetValue(const UsdPrim &, const TfToken &,"
                          " const UsdTimeCode &) [T = pxrInternal__aapl__pxrReserved__::VtArray<pxrInternal__aapl__pxrRes"
                          "erved__::GfVec4f>]";
  LOBYTE(v59) = 0;
  unint64_t v35 = *v33 & 0xFFFFFFFFFFFFFFF8;
  if (v35)
  {
    uint64_t v36 = (const char *)(v35 + 16);
    if (*(char *)(v35 + 39) < 0) {
      uint64_t v36 = *(const char **)v36;
    }
  }
  else
  {
    uint64_t v36 = "";
  }
  sub_216D0162C((uint64_t)v43, (int *)&v53);
  uint64_t v37 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v53);
  pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v57, (pxrInternal__aapl__pxrReserved__ *)"%s attribute on prim %s missing.", v38, v36, v37);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v53 + 1);
  sub_21697C414(&v53);
  LOBYTE(v48) = 0;
  char v52 = 0;
  if ((v64 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v64 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v63);
  sub_21697C414(&v62);
  if (v61) {
    sub_216D16E0C(v61);
  }
  if ((v47 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v47 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v46);
  sub_21697C414(&v45);
  if (v44) {
    sub_216D16E0C(v44);
  }
  if (v52)
  {
    *(void *)&long long v58 = 0;
    long long v57 = 0uLL;
    sub_216F0BDC4(&v57, v51, (uint64_t)v51 + 16 * v48, v48);
    pxrInternal__aapl__pxrReserved__::GfCamera::SetClippingPlanes(a3, (uint64_t)&v57);
    if ((void)v57)
    {
      *((void *)&v57 + 1) = v57;
      operator delete((void *)v57);
    }
  }
  sub_216F0BE40((uint64_t)&v48);
  sub_216D16CFC((uint64_t)&v48, v6, v7);
  uint64_t v39 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v39) {
    uint64_t v39 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  uint64_t v40 = sub_216F0B248((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v48, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v39 + 384));
  if ((v50 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)((unint64_t)v50 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v49 + 1);
  sub_21697C414(&v49);
  if (*((void *)&v48 + 1)) {
    sub_216D16E0C(*((atomic_ullong **)&v48 + 1));
  }
  if ((v40 & 0xFF00000000) != 0) {
    pxrInternal__aapl__pxrReserved__::GfCamera::SetFStop(a3, *(float *)&v40);
  }
  sub_216D16CFC((uint64_t)&v48, v6, v7);
  uint64_t v41 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v41) {
    uint64_t v41 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  uint64_t v42 = sub_216F0B248((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v48, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v41 + 368));
  if ((v50 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)((unint64_t)v50 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v49 + 1);
  sub_21697C414(&v49);
  if (*((void *)&v48 + 1)) {
    sub_216D16E0C(*((atomic_ullong **)&v48 + 1));
  }
  if ((v42 & 0xFF00000000) != 0) {
    pxrInternal__aapl__pxrReserved__::GfCamera::SetFocusDistance(a3, *(float *)&v42);
  }
}

void sub_216F0B038(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_2168F83DC(v4 - 160);
  sub_216D2EDA0(v4 - 112);
  sub_216D16AD8((uint64_t)va);
  uint64_t v6 = *(void **)(v3 + 160);
  if (v6)
  {
    *(void *)(v3 + 168) = v6;
    operator delete(v6);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_216F0B248(pxrInternal__aapl__pxrReserved__::UsdPrim *a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2)
{
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute(a1, a2, (uint64_t)v14);
  if (pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)v14, v4))pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<float>(); {
  v12[0] = "usdGeom/camera.cpp";
  }
  v12[1] = "_GetValue";
  void v12[2] = 410;
  void v12[3] = "std::optional<T> pxrInternal__aapl__pxrReserved__::_GetValue(const UsdPrim &, const TfToken &, const UsdTimeC"
           "ode &) [T = float]";
  char v13 = 0;
  unint64_t v5 = *(void *)a2 & 0xFFFFFFFFFFFFFFF8;
  if (v5)
  {
    uint64_t v6 = (const char *)(v5 + 16);
    if (*(char *)(v5 + 39) < 0) {
      uint64_t v6 = *(const char **)v6;
    }
  }
  else
  {
    uint64_t v6 = "";
  }
  sub_216D0162C((uint64_t)a1, &v10);
  Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v10);
  pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)v12, (pxrInternal__aapl__pxrReserved__ *)"%s attribute on prim %s missing.", v8, v6, Text);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v11);
  sub_21697C414(&v10);
  if ((v18 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v18 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v17);
  sub_21697C414(&v16);
  if (v15) {
    sub_216D16E0C(v15);
  }
  return 0;
}

void sub_216F0B41C(_Unwind_Exception *a1)
{
  sub_216D2EDA0(v1 - 64);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCamera::SetFromCamera(pxrInternal__aapl__pxrReserved__::UsdGeomCamera *this, const pxrInternal__aapl__pxrReserved__::GfCamera *a2, const pxrInternal__aapl__pxrReserved__::UsdTimeCode *a3)
{
  memset(v16, 0, sizeof(v16));
  pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputeParentToWorldTransform(this, a3, v14);
  pxrInternal__aapl__pxrReserved__::GfMatrix4d::GetInverse((double *)v14, 0, 0.0, (uint64_t)v16);
  pxrInternal__aapl__pxrReserved__::GfCamera::GetTransform(a2, (uint64_t)v14);
  v15[4] = v14[4];
  v15[5] = v14[5];
  v15[6] = v14[6];
  v15[7] = v14[7];
  v15[0] = v14[0];
  v15[1] = v14[1];
  _OWORD v15[2] = v14[2];
  uint64_t v15[3] = v14[3];
  pxrInternal__aapl__pxrReserved__::GfMatrix4d::operator*=((double *)v15, (double *)v16);
  pxrInternal__aapl__pxrReserved__::UsdGeomXformable::MakeMatrixXform(this, (uint64_t)v14);
  unint64_t v5 = (pxrInternal__aapl__pxrReserved__::UsdGeomXformOp *)sub_216F0BE78((uint64_t)v14);
  if (pxrInternal__aapl__pxrReserved__::UsdGeomXformOp::IsXformOp(v5, v6))
  {
    sub_216F0BACC((pxrInternal__aapl__pxrReserved__::UsdGeomXformOp *)v14);
    pxrInternal__aapl__pxrReserved__::UsdGeomCamera::GetProjectionAttr(this, (uint64_t)&v13);
    uint64_t Projection = pxrInternal__aapl__pxrReserved__::GfCamera::GetProjection(a2);
    if (Projection == 1)
    {
      int v11 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      if (!v11) {
        int v11 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      }
      uint64_t v10 = *((void *)v11 + 95);
    }
    else
    {
      if (Projection)
      {
        v17[0] = "usdGeom/camera.cpp";
        v17[1] = "_ProjectionToToken";
        _OWORD v17[2] = 449;
        v17[3] = "TfToken pxrInternal__aapl__pxrReserved__::_ProjectionToToken(GfCamera::Projection)";
        LOBYTE(v18) = 0;
        pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)v17, (pxrInternal__aapl__pxrReserved__ *)"Unknown projection type %d", v8, Projection);
        goto LABEL_13;
      }
      char v9 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      if (!v9) {
        char v9 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      }
      uint64_t v10 = *((void *)v9 + 98);
    }
    if ((v10 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v10 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed);
    }
LABEL_13:
    pxrInternal__aapl__pxrReserved__::UsdAttribute::_Set<pxrInternal__aapl__pxrReserved__::TfToken>();
  }
  return sub_216EF9DC0((uint64_t)v14);
}

void sub_216F0B9E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  sub_216EF9DC0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_216F0BACC(pxrInternal__aapl__pxrReserved__::UsdGeomXformOp *a1)
{
  if (!*((unsigned char *)a1 + 132))
  {
    sub_216F0BE78((uint64_t)a1);
    pxrInternal__aapl__pxrReserved__::UsdAttribute::_Set<pxrInternal__aapl__pxrReserved__::GfMatrix4d>();
  }
  v5[0] = "usdGeom/xformOp.h";
  v5[1] = "Set";
  double v5[2] = 399;
  void v5[3] = "BOOL pxrInternal__aapl__pxrReserved__::UsdGeomXformOp::Set(const T &, UsdTimeCode) const [T = pxrInternal__aap"
          "l__pxrReserved__::GfMatrix4d]";
  char v6 = 0;
  pxrInternal__aapl__pxrReserved__::UsdGeomXformOp::GetOpName(a1, (atomic_uint **)&v4);
  unint64_t v1 = v4 & 0xFFFFFFFFFFFFFFF8;
  if ((v4 & 0xFFFFFFFFFFFFFFF8) != 0)
  {
    unint64_t v2 = (const char *)(v1 + 16);
    if (*(char *)(v1 + 39) < 0) {
      unint64_t v2 = *(const char **)v2;
    }
  }
  else
  {
    unint64_t v2 = "";
  }
  pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v5, 1, (pxrInternal__aapl__pxrReserved__ *)"Cannot set a value on the inverse xformOp '%s'. Please set value on the paired non-inverse xformOp instead.", v2);
  if ((v4 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v4 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  return 0;
}

uint64_t *sub_216F0BBE0()
{
  sub_216851EE4((uint64_t)&v6, "Tf", "TfType::Define");
  sub_216F06AAC((unint64_t **)v5);
  unint64_t v0 = pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p, (char **)v5, 0);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  if (v5[0])
  {
    v5[1] = v5[0];
    operator delete(v5[0]);
  }
  while (v7--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v6);
  return v0;
}

void sub_216F0BCC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a15) {
    operator delete(a15);
  }
  sub_21684E6B8(v16 - 32);
  _Unwind_Resume(a1);
}

void sub_216F0BD0C(char *a1)
{
  unint64_t v2 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  unint64_t v3 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  pxrInternal__aapl__pxrReserved__::TfType::AddAlias((uint64_t *)&v3, v2, a1);
}

void sub_216F0BDA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_216F0BDC4(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    uint64_t result = sub_21682BF78(result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      uint64_t result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_216F0BE24(_Unwind_Exception *exception_object)
{
  unint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_216F0BE40(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40)) {
    sub_2168F83DC(a1);
  }
  return a1;
}

uint64_t sub_216F0BE78(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 120);
  if (v1 == -1) {
    sub_2168BBB60();
  }
  char v4 = &v3;
  return ((uint64_t (*)(char **, uint64_t))*(&off_26C76C758 + v1))(&v4, a1);
}

uint64_t sub_216F0BEC4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_216F0BECC(int a1, pxrInternal__aapl__pxrReserved__::UsdAttributeQuery *this)
{
  return pxrInternal__aapl__pxrReserved__::UsdAttributeQuery::GetAttribute(this);
}

void sub_216F0BED4(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = a3;
  uint64_t v8 = a2;
  sub_2168F845C(a1);
  v6[0] = (long long **)&v8;
  v6[1] = (long long **)&v7;
  sub_216F0BF34(a1, (a3 - a2) >> 4, v6);
}

void sub_216F0BF34(unint64_t *a1, unint64_t a2, long long ***a3)
{
  unint64_t v3 = *a1;
  if (*a1 == a2) {
    return;
  }
  if (a2)
  {
    uint64_t v7 = (unint64_t *)a1[4];
    if (v7)
    {
      if (!a1[3])
      {
        unint64_t v8 = atomic_load(v7 - 2);
        if (v8 == 1)
        {
          if (v3 < a2)
          {
            unint64_t v9 = a1[4];
            if (*(void *)(v9 - 8) < a2)
            {
              uint64_t v10 = sub_2168FFC84((uint64_t)a1, a2);
              uint64_t v7 = v10;
              if (v3)
              {
                uint64_t v11 = 0;
                do
                {
                  *(_OWORD *)&v10[v11] = *(_OWORD *)(v9 + v11 * 8);
                  v11 += 2;
                }
                while (2 * v3 != v11);
              }
            }
            uint64_t v12 = **a3;
            int v13 = *a3[1];
            if (v12 != v13)
            {
              uint64_t v14 = 2 * v3;
              do
              {
                long long v15 = *v12++;
                *(_OWORD *)&v7[v14] = v15;
                v14 += 2;
              }
              while (v12 != v13);
            }
          }
          uint64_t v16 = v7;
LABEL_34:
          if (v16 != (unint64_t *)a1[4])
          {
            sub_2168F83DC((uint64_t)a1);
            a1[4] = (unint64_t)v16;
          }
          *a1 = a2;
          return;
        }
        uint64_t v7 = (unint64_t *)a1[4];
      }
      if (v3 >= a2) {
        unint64_t v21 = a2;
      }
      else {
        unint64_t v21 = *a1;
      }
      uint64_t v22 = sub_2168FFC84((uint64_t)a1, a2);
      uint64_t v16 = v22;
      if (v21)
      {
        uint64_t v23 = 16 * v21;
        uint64_t v24 = v22;
        do
        {
          long long v25 = *(_OWORD *)v7;
          v7 += 2;
          *(_OWORD *)uint64_t v24 = v25;
          v24 += 2;
          v23 -= 16;
        }
        while (v23);
      }
      if (v3 < a2)
      {
        uint64_t v26 = **a3;
        long long v27 = *a3[1];
        if (v26 != v27)
        {
          uint64_t v28 = 2 * v3;
          do
          {
            long long v29 = *v26++;
            *(_OWORD *)&v22[v28] = v29;
            v28 += 2;
          }
          while (v26 != v27);
        }
      }
      goto LABEL_34;
    }
    if (16 * a2 / a2 == 16)
    {
      int v17 = sub_2168FFC84((uint64_t)a1, a2);
      uint64_t v16 = v17;
      uint64_t v18 = **a3;
      uint64_t v19 = *a3[1];
      if (v18 != v19)
      {
        unint64_t v20 = 0;
        do
        {
          *(_OWORD *)&v17[v20 / 8] = v18[v20 / 0x10];
          v20 += 16;
        }
        while (&v18[v20 / 0x10] != v19);
      }
      goto LABEL_34;
    }
  }

  sub_2168F845C(a1);
}

void sub_216F0C128()
{
  sub_216F0D358();
  sub_216779094(__p, "Capsule");
  sub_216F0D484((char *)__p);
  if (v1 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216F0C178(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCapsule::~UsdGeomCapsule(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule *this)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomGprim::~UsdGeomGprim(this);

  operator delete(v1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCapsule::Get(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  uint64_t v6 = sub_216D24140(a1);
  if (v7 & 1 | (unint64_t)v6)
  {
    unint64_t v8 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_216D01530(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(v8, a2, (uint64_t)&v9);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76C778;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  else
  {
    unint64_t v9 = "usdGeom/capsule.cpp";
    uint64_t v10 = (atomic_ullong *)"Get";
    uint64_t v11 = 57;
    unint64_t v12 = (unint64_t)"static UsdGeomCapsule pxrInternal__aapl__pxrReserved__::UsdGeomCapsule::Get(const UsdStagePt"
                            "r &, const SdfPath &)";
    char v13 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v9, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v9) = 1;
    uint64_t v10 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v11);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v11 + 1);
    unint64_t v12 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76C778;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  if (v10) {
    sub_216D16E0C(v10);
  }
}

void sub_216F0C344(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216D16AD8((uint64_t)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCapsule::Define(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92780, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92780))
  {
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken((pxrInternal__aapl__pxrReserved__::TfToken *)&qword_267B92778, "Capsule");
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &qword_267B92778, &dword_216758000);
    __cxa_guard_release(&qword_267B92780);
  }
  uint64_t v6 = sub_216D24140(a1);
  if (v7 & 1 | (unint64_t)v6)
  {
    unint64_t v8 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_216D01530(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::DefinePrim(v8, a2, &qword_267B92778, (uint64_t)&v9);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76C778;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  else
  {
    unint64_t v9 = "usdGeom/capsule.cpp";
    uint64_t v10 = (atomic_ullong *)"Define";
    uint64_t v11 = 70;
    unint64_t v12 = (unint64_t)"static UsdGeomCapsule pxrInternal__aapl__pxrReserved__::UsdGeomCapsule::Define(const UsdStag"
                            "ePtr &, const SdfPath &)";
    char v13 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v9, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v9) = 1;
    uint64_t v10 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v11);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v11 + 1);
    unint64_t v12 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76C778;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  if (v10) {
    sub_216D16E0C(v10);
  }
}

void sub_216F0C550(_Unwind_Exception *a1)
{
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCapsule::_GetSchemaKind(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule *this)
{
  return 3;
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomCapsule::_GetStaticTfType(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92790, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92790))
  {
    __cxa_guard_release(&qword_267B92790);
  }
  return &qword_267B92788;
}

void sub_216F0C5F8(_Unwind_Exception *a1)
{
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCapsule::_IsTypedSchema(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B927A0, memory_order_acquire) & 1) == 0)
  {
    unint64_t v2 = (pxrInternal__aapl__pxrReserved__::UsdGeomCapsule *)__cxa_guard_acquire(&qword_267B927A0);
    if (v2)
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomCapsule::_GetStaticTfType(v2);
      byte_267B92798 = sub_216D16508((char *)&qword_267B92788, v3, v4);
      __cxa_guard_release(&qword_267B927A0);
    }
  }
  return byte_267B92798;
}

void sub_216F0C678(_Unwind_Exception *a1)
{
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomCapsule::_GetTfType(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule *this)
{
  return &qword_267B92788;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCapsule::GetHeightAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  unint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    unint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 408), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F0C750(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCapsule::CreateHeightAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  unint64_t v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    unint64_t v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 408), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 64), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCapsule::GetRadiusAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  unint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    unint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 920), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F0C8B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCapsule::CreateRadiusAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  unint64_t v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    unint64_t v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 920), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 64), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCapsule::GetAxisAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  unint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    unint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 24), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F0CA20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCapsule::CreateAxisAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  unint64_t v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    unint64_t v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 24), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 88), 0, 1, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCapsule::GetExtentAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  unint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    unint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 296), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F0CB88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCapsule::CreateExtentAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  unint64_t v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    unint64_t v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 296), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 616), 0, 0, a2, a3, a4);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomCapsule::GetSchemaAttributeNames(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule *this)
{
  int v1 = (int)this;
  uint64_t v18 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B927C0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B927C0))
  {
    unint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v3) {
      unint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v4 = *((void *)v3 + 51);
    uint64_t v14 = v4;
    if ((v4 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v4 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v14 &= 0xFFFFFFFFFFFFFFF8;
    }
    char v5 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v5) {
      char v5 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v6 = *((void *)v5 + 115);
    uint64_t v15 = v6;
    if ((v6 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v6 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v15 &= 0xFFFFFFFFFFFFFFF8;
    }
    int v7 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v7) {
      int v7 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v8 = *((void *)v7 + 3);
    uint64_t v16 = v8;
    if ((v8 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v16 &= 0xFFFFFFFFFFFFFFF8;
    }
    unint64_t v9 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v9) {
      unint64_t v9 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v10 = *((void *)v9 + 37);
    uint64_t v17 = v10;
    if ((v10 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v10 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v17 &= 0xFFFFFFFFFFFFFFF8;
    }
    sub_216D30CFC(&qword_267B927A8, &v14, 4uLL);
    for (uint64_t i = 24; i != -8; i -= 8)
    {
      uint64_t v12 = *(uint64_t *)((char *)&v14 + i);
      if ((v12 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
    }
    __cxa_atexit((void (*)(void *))sub_216B554D0, &qword_267B927A8, &dword_216758000);
    __cxa_guard_release(&qword_267B927C0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B927E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B927E0))
  {
    SchemaAttributeNames = pxrInternal__aapl__pxrReserved__::UsdGeomGprim::GetSchemaAttributeNames((pxrInternal__aapl__pxrReserved__::UsdGeomGprim *)1);
    sub_216F0CF6C((uint64_t **)SchemaAttributeNames);
    __cxa_atexit((void (*)(void *))sub_216B554D0, &qword_267B927C8, &dword_216758000);
    __cxa_guard_release(&qword_267B927E0);
  }
  if (v1) {
    return &qword_267B927C8;
  }
  else {
    return &qword_267B927A8;
  }
}

void sub_216F0CEE8(_Unwind_Exception *a1)
{
}

void *sub_216F0CF6C(uint64_t **a1)
{
  qword_267B927D0 = 0;
  unk_267B927D8 = 0;
  qword_267B927C8 = 0;
  sub_216973388((char **)&qword_267B927C8, ((*(void *)algn_267B927B0 - qword_267B927A8) >> 3) + a1[1] - *a1);
  sub_216AE27E0(&qword_267B927C8, (void *)qword_267B927D0, *a1, a1[1], a1[1] - *a1);
  return sub_216AE27E0(&qword_267B927C8, (void *)qword_267B927D0, (uint64_t *)qword_267B927A8, *(uint64_t **)algn_267B927B0, (*(void *)algn_267B927B0 - qword_267B927A8) >> 3);
}

void sub_216F0D004(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216889A04((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCapsule::ComputeExtent(void *a1, unint64_t *a2, double a3, double a4)
{
  float v18 = 0.0;
  float32x2_t v17 = 0;
  uint64_t v19 = &v17;
  sub_2168FD278(a2, 2uLL, (uint64_t **)&v19);
  uint64_t v10 = sub_216F0D0E0(a1, (float *)&v17, a3, a4);
  if (v10)
  {
    float32_t v11 = -v18;
    sub_2168FD54C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a2, v8, v9);
    uint64_t v12 = (float32x2_t *)a2[4];
    float32x2_t *v12 = vneg_f32(v17);
    v12[1].f32[0] = v11;
    sub_2168FD54C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a2, v13, v14);
    unint64_t v15 = a2[4];
    *(float32x2_t *)(v15 + 12) = v17;
    *(float *)(v15 + 2sub_2168EBBB8(&a9, 0) = v18;
  }
  return v10;
}

uint64_t sub_216F0D0E0(void *a1, float *a2, double a3, double a4)
{
  double v7 = a3 * 0.5 + a4;
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  float v9 = v7;
  if ((*a1 & 0xFFFFFFFFFFFFFFF8) == (*((void *)v8 + 166) & 0xFFFFFFFFFFFFFFF8))
  {
    float v13 = a4;
    float v14 = v9;
    float v9 = v13;
  }
  else
  {
    uint64_t v10 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v10) {
      uint64_t v10 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    if ((*a1 & 0xFFFFFFFFFFFFFFF8) == (*((void *)v10 + 168) & 0xFFFFFFFFFFFFFFF8))
    {
      float v14 = a4;
      float v13 = v9;
      float v9 = v14;
    }
    else
    {
      float32_t v11 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      if (!v11) {
        float32_t v11 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      }
      if ((*a1 & 0xFFFFFFFFFFFFFFF8) != (*((void *)v11 + 169) & 0xFFFFFFFFFFFFFFF8)) {
        return 0;
      }
      float v14 = a4;
      float v13 = v14;
    }
  }
  *a2 = v14;
  a2[1] = v13;
  uint64_t result = 1;
  a2[2] = v9;
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCapsule::ComputeExtent(void *a1, const pxrInternal__aapl__pxrReserved__::GfMatrix4d *a2, unint64_t *a3, double a4, double a5)
{
  DWORD2(v27[0]) = 0;
  *(void *)&v27[0] = 0;
  *(void *)&v23.f64[0] = v27;
  sub_2168FD278(a3, 2uLL, (uint64_t **)&v23);
  uint64_t v10 = sub_216F0D0E0(a1, (float *)v29, a4, a5);
  if (v10)
  {
    float32x2_t v11 = (float32x2_t)vrev64_s32(*(int32x2_t *)v29);
    v11.f32[0] = -*(float *)&v29[8];
    v27[0] = vcvtq_f64_f32(vneg_f32(*(float32x2_t *)v29));
    v27[1] = vcvtq_f64_f32(v11);
    v27[2] = vcvtq_f64_f32(*(float32x2_t *)&v29[4]);
    pxrInternal__aapl__pxrReserved__::GfBBox3d::_SetMatrices((pxrInternal__aapl__pxrReserved__::GfBBox3d *)v27, a2);
    char v28 = 0;
    pxrInternal__aapl__pxrReserved__::GfBBox3d::ComputeAlignedRange((pxrInternal__aapl__pxrReserved__::GfBBox3d *)v27, (uint64_t)&v23);
    float32_t v12 = v24;
    float32x2_t v13 = vcvt_f32_f64(v23);
    sub_2168FD54C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a3, v14, v15);
    uint64_t v16 = (float32x2_t *)a3[4];
    float32x2_t *v16 = v13;
    v16[1].f32[0] = v12;
    float v17 = v26;
    float32x2_t v18 = vcvt_f32_f64(v25);
    sub_2168FD54C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a3, v19, v20);
    unint64_t v21 = a3[4];
    *(float32x2_t *)(v21 + 12) = v18;
    *(float *)(v21 + 2sub_2168EBBB8(&a9, 0) = v17;
  }
  return v10;
}

void sub_216F0D318(uint64_t a1, const std::type_info *a2, char *a3)
{
  var8.__vftable = (std::type_info_vtbl *)sub_216F0D5CC;
  pxrInternal__aapl__pxrReserved__::UsdGeomRegisterComputeExtentFunction(v3, &var8, v4);
}

uint64_t *sub_216F0D358()
{
  sub_216851EE4((uint64_t)&v6, "Tf", "TfType::Define");
  sub_216F0D538((unint64_t **)v5);
  unint64_t v0 = pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p, (char **)v5, 0);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  if (v5[0])
  {
    v5[1] = v5[0];
    operator delete(v5[0]);
  }
  while (v7--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v6);
  return v0;
}

void sub_216F0D438(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a15) {
    operator delete(a15);
  }
  sub_21684E6B8(v16 - 32);
  _Unwind_Resume(a1);
}

void sub_216F0D484(char *a1)
{
  unint64_t v2 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  unint64_t v3 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  pxrInternal__aapl__pxrReserved__::TfType::AddAlias((uint64_t *)&v3, v2, a1);
}

void sub_216F0D518(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216F0D538(unint64_t **a1@<X8>)
{
  unint64_t v2 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p);
  a1[1] = 0;
  a1[2] = 0;
  *a1 = 0;
  unint64_t v3 = (unint64_t *)operator new(8uLL);
  *a1 = v3;
  *v3++ = v2;
  a1[1] = v3;
  a1[2] = v3;
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216F0D5A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_216F0D5CC(pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a1)
{
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)&v4, a1);
  char v4 = &unk_26C76C778;
  if (v5
    && (*(unsigned char *)(v5 + 57) & 8) == 0
    && (pxrInternal__aapl__pxrReserved__::UsdTyped::_IsCompatible((pxrInternal__aapl__pxrReserved__::UsdTyped *)&v4) & 1) != 0
    || (v2[0] = "usdGeom/capsule.cpp",
        v2[1] = "_ComputeExtentForCapsule",
        v2[2] = 290,
        v2[3] = "BOOL pxrInternal__aapl__pxrReserved__::_ComputeExtentForCapsule(const UsdGeomBoundable &, const UsdTimeC"
                "ode &, const GfMatrix4d *, VtVec3fArray *)",
        char v3 = 0,
        (pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v2, "capsuleSchema", 0) & 1) != 0))
  {
    pxrInternal__aapl__pxrReserved__::UsdGeomCapsule::GetHeightAttr((pxrInternal__aapl__pxrReserved__::UsdGeomCapsule *)&v4, (uint64_t)v2);
    pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<double>();
  }
  pxrInternal__aapl__pxrReserved__::UsdGeomGprim::~UsdGeomGprim((pxrInternal__aapl__pxrReserved__::UsdGeomGprim *)&v4);
  return 0;
}

void sub_216F0D814(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  pxrInternal__aapl__pxrReserved__::UsdGeomGprim::~UsdGeomGprim((pxrInternal__aapl__pxrReserved__::UsdGeomGprim *)va);
  _Unwind_Resume(a1);
}

void sub_216F0D888()
{
  sub_216F0EC90();
  sub_216779094(__p, "Capsule_1");
  sub_216F0EDBC((char *)__p);
  if (v1 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216F0D8D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::~UsdGeomCapsule_1(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1 *this)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomGprim::~UsdGeomGprim(this);

  operator delete(v1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::Get(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  uint64_t v6 = sub_216D24140(a1);
  if (v7 & 1 | (unint64_t)v6)
  {
    uint64_t v8 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_216D01530(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(v8, a2, (uint64_t)&v9);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76C7D0;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  else
  {
    float v9 = "usdGeom/capsule_1.cpp";
    uint64_t v10 = (atomic_ullong *)"Get";
    uint64_t v11 = 57;
    unint64_t v12 = (unint64_t)"static UsdGeomCapsule_1 pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::Get(const UsdSta"
                            "gePtr &, const SdfPath &)";
    char v13 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v9, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v9) = 1;
    uint64_t v10 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v11);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v11 + 1);
    unint64_t v12 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76C7D0;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  if (v10) {
    sub_216D16E0C(v10);
  }
}

void sub_216F0DAA4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216D16AD8((uint64_t)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::Define(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B927F0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B927F0))
  {
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken((pxrInternal__aapl__pxrReserved__::TfToken *)&qword_267B927E8, "Capsule_1");
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &qword_267B927E8, &dword_216758000);
    __cxa_guard_release(&qword_267B927F0);
  }
  uint64_t v6 = sub_216D24140(a1);
  if (v7 & 1 | (unint64_t)v6)
  {
    uint64_t v8 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_216D01530(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::DefinePrim(v8, a2, &qword_267B927E8, (uint64_t)&v9);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76C7D0;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  else
  {
    float v9 = "usdGeom/capsule_1.cpp";
    uint64_t v10 = (atomic_ullong *)"Define";
    uint64_t v11 = 70;
    unint64_t v12 = (unint64_t)"static UsdGeomCapsule_1 pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::Define(const Usd"
                            "StagePtr &, const SdfPath &)";
    char v13 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v9, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v9) = 1;
    uint64_t v10 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v11);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v11 + 1);
    unint64_t v12 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76C7D0;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  if (v10) {
    sub_216D16E0C(v10);
  }
}

void sub_216F0DCB0(_Unwind_Exception *a1)
{
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::_GetSchemaKind(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1 *this)
{
  return 3;
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::_GetStaticTfType(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1 *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92800, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92800))
  {
    __cxa_guard_release(&qword_267B92800);
  }
  return &qword_267B927F8;
}

void sub_216F0DD58(_Unwind_Exception *a1)
{
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::_IsTypedSchema(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1 *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92810, memory_order_acquire) & 1) == 0)
  {
    unint64_t v2 = (pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1 *)__cxa_guard_acquire(&qword_267B92810);
    if (v2)
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::_GetStaticTfType(v2);
      byte_267B92808 = sub_216D16508((char *)&qword_267B927F8, v3, v4);
      __cxa_guard_release(&qword_267B92810);
    }
  }
  return byte_267B92808;
}

void sub_216F0DDD8(_Unwind_Exception *a1)
{
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::_GetTfType(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1 *this)
{
  return &qword_267B927F8;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::GetHeightAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1 *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  char v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    char v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 408), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F0DEB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::CreateHeightAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1 *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  float v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    float v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 408), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 64), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::GetRadiusTopAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1 *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  char v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    char v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 936), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F0E018(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::CreateRadiusTopAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1 *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  float v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    float v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 936), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 64), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::GetRadiusBottomAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1 *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  char v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    char v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 928), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F0E180(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::CreateRadiusBottomAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1 *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  float v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    float v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 928), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 64), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::GetAxisAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1 *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  char v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    char v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 24), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F0E2E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::CreateAxisAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1 *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  float v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    float v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 24), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 88), 0, 1, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::GetExtentAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1 *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  char v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    char v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 296), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F0E450(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::CreateExtentAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1 *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  float v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    float v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 296), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 616), 0, 0, a2, a3, a4);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::GetSchemaAttributeNames(pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1 *this)
{
  int v1 = (int)this;
  uint64_t v21 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92830, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92830))
  {
    char v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v3) {
      char v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v4 = *((void *)v3 + 51);
    uint64_t v16 = v4;
    if ((v4 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v4 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v16 &= 0xFFFFFFFFFFFFFFF8;
    }
    uint64_t v5 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v5) {
      uint64_t v5 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v6 = *((void *)v5 + 117);
    uint64_t v17 = v6;
    if ((v6 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v6 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v17 &= 0xFFFFFFFFFFFFFFF8;
    }
    int v7 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v7) {
      int v7 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v8 = *((void *)v7 + 116);
    uint64_t v18 = v8;
    if ((v8 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v18 &= 0xFFFFFFFFFFFFFFF8;
    }
    float v9 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v9) {
      float v9 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v10 = *((void *)v9 + 3);
    uint64_t v19 = v10;
    if ((v10 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v10 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v19 &= 0xFFFFFFFFFFFFFFF8;
    }
    uint64_t v11 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v11) {
      uint64_t v11 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v12 = *((void *)v11 + 37);
    uint64_t v20 = v12;
    if ((v12 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v20 &= 0xFFFFFFFFFFFFFFF8;
    }
    sub_216D30CFC(&qword_267B92818, &v16, 5uLL);
    for (uint64_t i = 32; i != -8; i -= 8)
    {
      uint64_t v14 = *(uint64_t *)((char *)&v16 + i);
      if ((v14 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v14 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
    }
    __cxa_atexit((void (*)(void *))sub_216B554D0, &qword_267B92818, &dword_216758000);
    __cxa_guard_release(&qword_267B92830);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92850, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92850))
  {
    SchemaAttributeNames = pxrInternal__aapl__pxrReserved__::UsdGeomGprim::GetSchemaAttributeNames((pxrInternal__aapl__pxrReserved__::UsdGeomGprim *)1);
    sub_216F0E880((uint64_t **)SchemaAttributeNames);
    __cxa_atexit((void (*)(void *))sub_216B554D0, &qword_267B92838, &dword_216758000);
    __cxa_guard_release(&qword_267B92850);
  }
  if (v1) {
    return &qword_267B92838;
  }
  else {
    return &qword_267B92818;
  }
}

void sub_216F0E7FC(_Unwind_Exception *a1)
{
}

void *sub_216F0E880(uint64_t **a1)
{
  qword_267B92840 = 0;
  unk_267B92848 = 0;
  qword_267B92838 = 0;
  sub_216973388((char **)&qword_267B92838, ((unk_267B92820 - qword_267B92818) >> 3) + a1[1] - *a1);
  sub_216AE27E0(&qword_267B92838, (void *)qword_267B92840, *a1, a1[1], a1[1] - *a1);
  return sub_216AE27E0(&qword_267B92838, (void *)qword_267B92840, (uint64_t *)qword_267B92818, unk_267B92820, (unk_267B92820 - qword_267B92818) >> 3);
}

void sub_216F0E918(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216889A04((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::ComputeExtent(void *a1, unint64_t *a2, double a3, double a4, double a5)
{
  float v20 = 0.0;
  float32x2_t v19 = 0;
  uint64_t v21 = &v19;
  sub_2168FD278(a2, 2uLL, (uint64_t **)&v21);
  uint64_t v12 = sub_216F0EA04(a1, (float *)&v19, a3, a4, a5);
  if (v12)
  {
    float32_t v13 = -v20;
    sub_2168FD54C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a2, v10, v11);
    uint64_t v14 = (float32x2_t *)a2[4];
    *uint64_t v14 = vneg_f32(v19);
    v14[1].f32[0] = v13;
    sub_2168FD54C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a2, v15, v16);
    unint64_t v17 = a2[4];
    *(float32x2_t *)(v17 + 12) = v19;
    *(float *)(v17 + 2sub_2168EBBB8(&a9, 0) = v20;
  }
  return v12;
}

uint64_t sub_216F0EA04(void *a1, float *a2, double a3, double a4, double a5)
{
  if (a4 >= a5) {
    double v7 = a4;
  }
  else {
    double v7 = a5;
  }
  double v8 = a3 * 0.5 + v7;
  float v9 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v9) {
    float v9 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  float v10 = v8;
  if ((*a1 & 0xFFFFFFFFFFFFFFF8) == (*((void *)v9 + 166) & 0xFFFFFFFFFFFFFFF8))
  {
    float v14 = v7;
    float v15 = v10;
    float v10 = v14;
  }
  else
  {
    uint64_t v11 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v11) {
      uint64_t v11 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    if ((*a1 & 0xFFFFFFFFFFFFFFF8) == (*((void *)v11 + 168) & 0xFFFFFFFFFFFFFFF8))
    {
      float v15 = v7;
      float v14 = v10;
      float v10 = v15;
    }
    else
    {
      uint64_t v12 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      if (!v12) {
        uint64_t v12 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      }
      if ((*a1 & 0xFFFFFFFFFFFFFFF8) != (*((void *)v12 + 169) & 0xFFFFFFFFFFFFFFF8)) {
        return 0;
      }
      float v15 = v7;
      float v14 = v15;
    }
  }
  *a2 = v15;
  a2[1] = v14;
  uint64_t result = 1;
  a2[2] = v10;
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::ComputeExtent(void *a1, const pxrInternal__aapl__pxrReserved__::GfMatrix4d *a2, unint64_t *a3, double a4, double a5, double a6)
{
  DWORD2(v29[0]) = 0;
  *(void *)&v29[0] = 0;
  *(void *)&v25.f64[0] = v29;
  sub_2168FD278(a3, 2uLL, (uint64_t **)&v25);
  uint64_t v12 = sub_216F0EA04(a1, (float *)v31, a4, a5, a6);
  if (v12)
  {
    float32x2_t v13 = (float32x2_t)vrev64_s32(*(int32x2_t *)v31);
    v13.f32[0] = -*(float *)&v31[8];
    v29[0] = vcvtq_f64_f32(vneg_f32(*(float32x2_t *)v31));
    v29[1] = vcvtq_f64_f32(v13);
    v29[2] = vcvtq_f64_f32(*(float32x2_t *)&v31[4]);
    pxrInternal__aapl__pxrReserved__::GfBBox3d::_SetMatrices((pxrInternal__aapl__pxrReserved__::GfBBox3d *)v29, a2);
    char v30 = 0;
    pxrInternal__aapl__pxrReserved__::GfBBox3d::ComputeAlignedRange((pxrInternal__aapl__pxrReserved__::GfBBox3d *)v29, (uint64_t)&v25);
    float32_t v14 = v26;
    float32x2_t v15 = vcvt_f32_f64(v25);
    sub_2168FD54C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a3, v16, v17);
    uint64_t v18 = (float32x2_t *)a3[4];
    *uint64_t v18 = v15;
    v18[1].f32[0] = v14;
    float v19 = v28;
    float32x2_t v20 = vcvt_f32_f64(v27);
    sub_2168FD54C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a3, v21, v22);
    unint64_t v23 = a3[4];
    *(float32x2_t *)(v23 + 12) = v20;
    *(float *)(v23 + 2sub_2168EBBB8(&a9, 0) = v19;
  }
  return v12;
}

void sub_216F0EC50(uint64_t a1, const std::type_info *a2, char *a3)
{
  var8.__vftable = (std::type_info_vtbl *)sub_216F0EE74;
  pxrInternal__aapl__pxrReserved__::UsdGeomRegisterComputeExtentFunction(v3, &var8, v4);
}

uint64_t *sub_216F0EC90()
{
  sub_216851EE4((uint64_t)&v6, "Tf", "TfType::Define");
  sub_216F0D538((unint64_t **)v5);
  unint64_t v0 = pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p, (char **)v5, 0);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  if (v5[0])
  {
    v5[1] = v5[0];
    operator delete(v5[0]);
  }
  while (v7--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v6);
  return v0;
}

void sub_216F0ED70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a15) {
    operator delete(a15);
  }
  sub_21684E6B8(v16 - 32);
  _Unwind_Resume(a1);
}

void sub_216F0EDBC(char *a1)
{
  unint64_t v2 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  unint64_t v3 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  pxrInternal__aapl__pxrReserved__::TfType::AddAlias((uint64_t *)&v3, v2, a1);
}

void sub_216F0EE50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_216F0EE74(pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a1)
{
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)&v4, a1);
  char v4 = &unk_26C76C7D0;
  if (v5
    && (*(unsigned char *)(v5 + 57) & 8) == 0
    && (pxrInternal__aapl__pxrReserved__::UsdTyped::_IsCompatible((pxrInternal__aapl__pxrReserved__::UsdTyped *)&v4) & 1) != 0
    || (v2[0] = "usdGeom/capsule_1.cpp",
        v2[1] = "_ComputeExtentForCapsule",
        v2[2] = 311,
        v2[3] = "BOOL pxrInternal__aapl__pxrReserved__::_ComputeExtentForCapsule(const UsdGeomBoundable &, const UsdTimeC"
                "ode &, const GfMatrix4d *, VtVec3fArray *)",
        char v3 = 0,
        (pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v2, "capsuleSchema", 0) & 1) != 0))
  {
    pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1::GetHeightAttr((pxrInternal__aapl__pxrReserved__::UsdGeomCapsule_1 *)&v4, (uint64_t)v2);
    pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<double>();
  }
  pxrInternal__aapl__pxrReserved__::UsdGeomGprim::~UsdGeomGprim((pxrInternal__aapl__pxrReserved__::UsdGeomGprim *)&v4);
  return 0;
}

void sub_216F0F120(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  pxrInternal__aapl__pxrReserved__::UsdGeomGprim::~UsdGeomGprim((pxrInternal__aapl__pxrReserved__::UsdGeomGprim *)va);
  _Unwind_Resume(a1);
}

void sub_216F0F1A0()
{
  sub_216F103E0();
  sub_216779094(__p, "Cone");
  sub_216F1050C((char *)__p);
  if (v1 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216F0F1F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCone::~UsdGeomCone(pxrInternal__aapl__pxrReserved__::UsdGeomCone *this)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomGprim::~UsdGeomGprim(this);

  operator delete(v1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCone::Get(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  uint64_t v6 = sub_216D24140(a1);
  if (v7 & 1 | (unint64_t)v6)
  {
    double v8 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_216D01530(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(v8, a2, (uint64_t)&v9);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76C828;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  else
  {
    float v9 = "usdGeom/cone.cpp";
    float v10 = (atomic_ullong *)"Get";
    uint64_t v11 = 57;
    unint64_t v12 = (unint64_t)"static UsdGeomCone pxrInternal__aapl__pxrReserved__::UsdGeomCone::Get(const UsdStagePtr &, const SdfPath &)";
    char v13 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v9, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v9) = 1;
    float v10 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v11);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v11 + 1);
    unint64_t v12 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76C828;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  if (v10) {
    sub_216D16E0C(v10);
  }
}

void sub_216F0F3BC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216D16AD8((uint64_t)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCone::Define(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92860, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92860))
  {
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken((pxrInternal__aapl__pxrReserved__::TfToken *)&qword_267B92858, "Cone");
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &qword_267B92858, &dword_216758000);
    __cxa_guard_release(&qword_267B92860);
  }
  uint64_t v6 = sub_216D24140(a1);
  if (v7 & 1 | (unint64_t)v6)
  {
    double v8 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_216D01530(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::DefinePrim(v8, a2, &qword_267B92858, (uint64_t)&v9);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76C828;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  else
  {
    float v9 = "usdGeom/cone.cpp";
    float v10 = (atomic_ullong *)"Define";
    uint64_t v11 = 70;
    unint64_t v12 = (unint64_t)"static UsdGeomCone pxrInternal__aapl__pxrReserved__::UsdGeomCone::Define(const UsdStagePtr &"
                            ", const SdfPath &)";
    char v13 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v9, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v9) = 1;
    float v10 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v11);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v11 + 1);
    unint64_t v12 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76C828;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  if (v10) {
    sub_216D16E0C(v10);
  }
}

void sub_216F0F5C8(_Unwind_Exception *a1)
{
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCone::_GetSchemaKind(pxrInternal__aapl__pxrReserved__::UsdGeomCone *this)
{
  return 3;
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomCone::_GetStaticTfType(pxrInternal__aapl__pxrReserved__::UsdGeomCone *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92870, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92870))
  {
    __cxa_guard_release(&qword_267B92870);
  }
  return &qword_267B92868;
}

void sub_216F0F670(_Unwind_Exception *a1)
{
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCone::_IsTypedSchema(pxrInternal__aapl__pxrReserved__::UsdGeomCone *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92880, memory_order_acquire) & 1) == 0)
  {
    unint64_t v2 = (pxrInternal__aapl__pxrReserved__::UsdGeomCone *)__cxa_guard_acquire(&qword_267B92880);
    if (v2)
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomCone::_GetStaticTfType(v2);
      byte_267B92878 = sub_216D16508((char *)&qword_267B92868, v3, v4);
      __cxa_guard_release(&qword_267B92880);
    }
  }
  return byte_267B92878;
}

void sub_216F0F6F0(_Unwind_Exception *a1)
{
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomCone::_GetTfType(pxrInternal__aapl__pxrReserved__::UsdGeomCone *this)
{
  return &qword_267B92868;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCone::GetHeightAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCone *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  char v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    char v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 408), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F0F7C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCone::CreateHeightAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCone *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  float v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    float v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 408), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 64), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCone::GetRadiusAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCone *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  char v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    char v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 920), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F0F930(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCone::CreateRadiusAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCone *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  float v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    float v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 920), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 64), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCone::GetAxisAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCone *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  char v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    char v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 24), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F0FA98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCone::CreateAxisAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCone *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  float v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    float v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 24), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 88), 0, 1, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCone::GetExtentAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCone *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  char v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    char v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 296), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F0FC00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCone::CreateExtentAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCone *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  float v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    float v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 296), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 616), 0, 0, a2, a3, a4);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomCone::GetSchemaAttributeNames(pxrInternal__aapl__pxrReserved__::UsdGeomCone *this)
{
  int v1 = (int)this;
  uint64_t v18 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B928A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B928A0))
  {
    char v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v3) {
      char v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v4 = *((void *)v3 + 51);
    uint64_t v14 = v4;
    if ((v4 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v4 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v14 &= 0xFFFFFFFFFFFFFFF8;
    }
    uint64_t v5 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v5) {
      uint64_t v5 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v6 = *((void *)v5 + 115);
    uint64_t v15 = v6;
    if ((v6 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v6 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v15 &= 0xFFFFFFFFFFFFFFF8;
    }
    int v7 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v7) {
      int v7 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v8 = *((void *)v7 + 3);
    uint64_t v16 = v8;
    if ((v8 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v16 &= 0xFFFFFFFFFFFFFFF8;
    }
    float v9 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v9) {
      float v9 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v10 = *((void *)v9 + 37);
    uint64_t v17 = v10;
    if ((v10 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v10 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v17 &= 0xFFFFFFFFFFFFFFF8;
    }
    sub_216D30CFC(&qword_267B92888, &v14, 4uLL);
    for (uint64_t i = 24; i != -8; i -= 8)
    {
      uint64_t v12 = *(uint64_t *)((char *)&v14 + i);
      if ((v12 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
    }
    __cxa_atexit((void (*)(void *))sub_216B554D0, &qword_267B92888, &dword_216758000);
    __cxa_guard_release(&qword_267B928A0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B928C0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B928C0))
  {
    SchemaAttributeNames = pxrInternal__aapl__pxrReserved__::UsdGeomGprim::GetSchemaAttributeNames((pxrInternal__aapl__pxrReserved__::UsdGeomGprim *)1);
    sub_216F0FFE4((uint64_t **)SchemaAttributeNames);
    __cxa_atexit((void (*)(void *))sub_216B554D0, &qword_267B928A8, &dword_216758000);
    __cxa_guard_release(&qword_267B928C0);
  }
  if (v1) {
    return &qword_267B928A8;
  }
  else {
    return &qword_267B92888;
  }
}

void sub_216F0FF60(_Unwind_Exception *a1)
{
}

void *sub_216F0FFE4(uint64_t **a1)
{
  qword_267B928B0 = 0;
  unk_267B928B8 = 0;
  qword_267B928A8 = 0;
  sub_216973388((char **)&qword_267B928A8, ((*(void *)algn_267B92890 - qword_267B92888) >> 3) + a1[1] - *a1);
  sub_216AE27E0(&qword_267B928A8, (void *)qword_267B928B0, *a1, a1[1], a1[1] - *a1);
  return sub_216AE27E0(&qword_267B928A8, (void *)qword_267B928B0, (uint64_t *)qword_267B92888, *(uint64_t **)algn_267B92890, (*(void *)algn_267B92890 - qword_267B92888) >> 3);
}

void sub_216F1007C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216889A04((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCone::ComputeExtent(void *a1, unint64_t *a2, double a3, double a4)
{
  float v18 = 0.0;
  float32x2_t v17 = 0;
  float v19 = &v17;
  sub_2168FD278(a2, 2uLL, (uint64_t **)&v19);
  uint64_t v10 = sub_216F10158(a1, (float *)&v17, a3, a4);
  if (v10)
  {
    float32_t v11 = -v18;
    sub_2168FD54C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a2, v8, v9);
    uint64_t v12 = (float32x2_t *)a2[4];
    float32x2_t *v12 = vneg_f32(v17);
    v12[1].f32[0] = v11;
    sub_2168FD54C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a2, v13, v14);
    unint64_t v15 = a2[4];
    *(float32x2_t *)(v15 + 12) = v17;
    *(float *)(v15 + 2sub_2168EBBB8(&a9, 0) = v18;
  }
  return v10;
}

uint64_t sub_216F10158(void *a1, float *a2, double a3, double a4)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  if ((*a1 & 0xFFFFFFFFFFFFFFF8) == (*((void *)v8 + 166) & 0xFFFFFFFFFFFFFFF8))
  {
    float v12 = a3 * 0.5;
    float v13 = a4;
    float v14 = v13;
  }
  else
  {
    float v9 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v9) {
      float v9 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    if ((*a1 & 0xFFFFFFFFFFFFFFF8) == (*((void *)v9 + 168) & 0xFFFFFFFFFFFFFFF8))
    {
      float v12 = a4;
      float v13 = a3 * 0.5;
      float v14 = v12;
    }
    else
    {
      uint64_t v10 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      if (!v10) {
        uint64_t v10 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      }
      if ((*a1 & 0xFFFFFFFFFFFFFFF8) != (*((void *)v10 + 169) & 0xFFFFFFFFFFFFFFF8)) {
        return 0;
      }
      float v12 = a4;
      float v14 = a3 * 0.5;
      float v13 = v12;
    }
  }
  *a2 = v12;
  a2[1] = v13;
  uint64_t result = 1;
  a2[2] = v14;
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCone::ComputeExtent(void *a1, const pxrInternal__aapl__pxrReserved__::GfMatrix4d *a2, unint64_t *a3, double a4, double a5)
{
  DWORD2(v27[0]) = 0;
  *(void *)&v27[0] = 0;
  *(void *)&v23.f64[0] = v27;
  sub_2168FD278(a3, 2uLL, (uint64_t **)&v23);
  uint64_t v10 = sub_216F10158(a1, (float *)v29, a4, a5);
  if (v10)
  {
    float32x2_t v11 = (float32x2_t)vrev64_s32(*(int32x2_t *)v29);
    v11.f32[0] = -*(float *)&v29[8];
    v27[0] = vcvtq_f64_f32(vneg_f32(*(float32x2_t *)v29));
    v27[1] = vcvtq_f64_f32(v11);
    v27[2] = vcvtq_f64_f32(*(float32x2_t *)&v29[4]);
    pxrInternal__aapl__pxrReserved__::GfBBox3d::_SetMatrices((pxrInternal__aapl__pxrReserved__::GfBBox3d *)v27, a2);
    char v28 = 0;
    pxrInternal__aapl__pxrReserved__::GfBBox3d::ComputeAlignedRange((pxrInternal__aapl__pxrReserved__::GfBBox3d *)v27, (uint64_t)&v23);
    float32_t v12 = v24;
    float32x2_t v13 = vcvt_f32_f64(v23);
    sub_2168FD54C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a3, v14, v15);
    uint64_t v16 = (float32x2_t *)a3[4];
    float32x2_t *v16 = v13;
    v16[1].f32[0] = v12;
    float v17 = v26;
    float32x2_t v18 = vcvt_f32_f64(v25);
    sub_2168FD54C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a3, v19, v20);
    unint64_t v21 = a3[4];
    *(float32x2_t *)(v21 + 12) = v18;
    *(float *)(v21 + 2sub_2168EBBB8(&a9, 0) = v17;
  }
  return v10;
}

void sub_216F103A0(uint64_t a1, const std::type_info *a2, char *a3)
{
  var8.__vftable = (std::type_info_vtbl *)sub_216F105C4;
  pxrInternal__aapl__pxrReserved__::UsdGeomRegisterComputeExtentFunction(v3, &var8, v4);
}

uint64_t *sub_216F103E0()
{
  sub_216851EE4((uint64_t)&v6, "Tf", "TfType::Define");
  sub_216F0D538((unint64_t **)v5);
  unint64_t v0 = pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p, (char **)v5, 0);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  if (v5[0])
  {
    v5[1] = v5[0];
    operator delete(v5[0]);
  }
  while (v7--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v6);
  return v0;
}

void sub_216F104C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a15) {
    operator delete(a15);
  }
  sub_21684E6B8(v16 - 32);
  _Unwind_Resume(a1);
}

void sub_216F1050C(char *a1)
{
  unint64_t v2 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  unint64_t v3 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  pxrInternal__aapl__pxrReserved__::TfType::AddAlias((uint64_t *)&v3, v2, a1);
}

void sub_216F105A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_216F105C4(pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a1)
{
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)&v4, a1);
  char v4 = &unk_26C76C828;
  if (v5
    && (*(unsigned char *)(v5 + 57) & 8) == 0
    && (pxrInternal__aapl__pxrReserved__::UsdTyped::_IsCompatible((pxrInternal__aapl__pxrReserved__::UsdTyped *)&v4) & 1) != 0
    || (v2[0] = "usdGeom/cone.cpp",
        v2[1] = "_ComputeExtentForCone",
        v2[2] = 286,
        v2[3] = "BOOL pxrInternal__aapl__pxrReserved__::_ComputeExtentForCone(const UsdGeomBoundable &, const UsdTimeCode"
                " &, const GfMatrix4d *, VtVec3fArray *)",
        char v3 = 0,
        (pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v2, "coneSchema", 0) & 1) != 0))
  {
    pxrInternal__aapl__pxrReserved__::UsdGeomCone::GetHeightAttr((pxrInternal__aapl__pxrReserved__::UsdGeomCone *)&v4, (uint64_t)v2);
    pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<double>();
  }
  pxrInternal__aapl__pxrReserved__::UsdGeomGprim::~UsdGeomGprim((pxrInternal__aapl__pxrReserved__::UsdGeomGprim *)&v4);
  return 0;
}

void sub_216F1080C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  pxrInternal__aapl__pxrReserved__::UsdGeomGprim::~UsdGeomGprim((pxrInternal__aapl__pxrReserved__::UsdGeomGprim *)va);
  _Unwind_Resume(a1);
}

void sub_216F10880()
{
  sub_216F115A0();
  sub_216779094(__p, "Cube");
  sub_216F116CC((char *)__p);
  if (v1 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216F108D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCube::~UsdGeomCube(pxrInternal__aapl__pxrReserved__::UsdGeomCube *this)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomGprim::~UsdGeomGprim(this);

  operator delete(v1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCube::Get(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  uint64_t v6 = sub_216D24140(a1);
  if (v7 & 1 | (unint64_t)v6)
  {
    uint64_t v8 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_216D01530(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(v8, a2, (uint64_t)&v9);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76C880;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  else
  {
    float v9 = "usdGeom/cube.cpp";
    uint64_t v10 = (atomic_ullong *)"Get";
    uint64_t v11 = 57;
    unint64_t v12 = (unint64_t)"static UsdGeomCube pxrInternal__aapl__pxrReserved__::UsdGeomCube::Get(const UsdStagePtr &, const SdfPath &)";
    char v13 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v9, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v9) = 1;
    uint64_t v10 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v11);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v11 + 1);
    unint64_t v12 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76C880;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  if (v10) {
    sub_216D16E0C(v10);
  }
}

void sub_216F10A9C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216D16AD8((uint64_t)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCube::Define(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B928D0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B928D0))
  {
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken((pxrInternal__aapl__pxrReserved__::TfToken *)&qword_267B928C8, "Cube");
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &qword_267B928C8, &dword_216758000);
    __cxa_guard_release(&qword_267B928D0);
  }
  uint64_t v6 = sub_216D24140(a1);
  if (v7 & 1 | (unint64_t)v6)
  {
    uint64_t v8 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_216D01530(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::DefinePrim(v8, a2, &qword_267B928C8, (uint64_t)&v9);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76C880;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  else
  {
    float v9 = "usdGeom/cube.cpp";
    uint64_t v10 = (atomic_ullong *)"Define";
    uint64_t v11 = 70;
    unint64_t v12 = (unint64_t)"static UsdGeomCube pxrInternal__aapl__pxrReserved__::UsdGeomCube::Define(const UsdStagePtr &"
                            ", const SdfPath &)";
    char v13 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v9, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v9) = 1;
    uint64_t v10 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v11);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v11 + 1);
    unint64_t v12 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76C880;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  if (v10) {
    sub_216D16E0C(v10);
  }
}

void sub_216F10CA8(_Unwind_Exception *a1)
{
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCube::_GetSchemaKind(pxrInternal__aapl__pxrReserved__::UsdGeomCube *this)
{
  return 3;
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomCube::_GetStaticTfType(pxrInternal__aapl__pxrReserved__::UsdGeomCube *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B928E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B928E0))
  {
    __cxa_guard_release(&qword_267B928E0);
  }
  return &qword_267B928D8;
}

void sub_216F10D50(_Unwind_Exception *a1)
{
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCube::_IsTypedSchema(pxrInternal__aapl__pxrReserved__::UsdGeomCube *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B928F0, memory_order_acquire) & 1) == 0)
  {
    unint64_t v2 = (pxrInternal__aapl__pxrReserved__::UsdGeomCube *)__cxa_guard_acquire(&qword_267B928F0);
    if (v2)
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomCube::_GetStaticTfType(v2);
      byte_267B928E8 = sub_216D16508((char *)&qword_267B928D8, v3, v4);
      __cxa_guard_release(&qword_267B928F0);
    }
  }
  return byte_267B928E8;
}

void sub_216F10DD0(_Unwind_Exception *a1)
{
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomCube::_GetTfType(pxrInternal__aapl__pxrReserved__::UsdGeomCube *this)
{
  return &qword_267B928D8;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCube::GetSizeAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCube *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  char v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    char v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 1008), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F10EA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCube::CreateSizeAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCube *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  float v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    float v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 1008), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 64), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCube::GetExtentAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCube *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  char v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    char v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 296), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F11010(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCube::CreateExtentAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCube *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  float v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    float v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 296), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 616), 0, 0, a2, a3, a4);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomCube::GetSchemaAttributeNames(pxrInternal__aapl__pxrReserved__::UsdGeomCube *this)
{
  int v1 = (int)this;
  uint64_t v14 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92910, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92910))
  {
    char v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v3) {
      char v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v4 = *((void *)v3 + 126);
    uint64_t v12 = v4;
    if ((v4 & 7) != 0)
    {
      uint64_t v5 = (atomic_uint *)(v4 & 0xFFFFFFFFFFFFFFF8);
      if ((atomic_fetch_add_explicit(v5, 2u, memory_order_relaxed) & 1) == 0) {
        uint64_t v12 = (uint64_t)v5;
      }
    }
    int v6 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v6) {
      int v6 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    int v7 = (atomic_uint *)*((void *)v6 + 37);
    char v13 = v7;
    if ((v7 & 7) != 0)
    {
      uint64_t v8 = (atomic_uint *)((unint64_t)v7 & 0xFFFFFFFFFFFFFFF8);
      if ((atomic_fetch_add_explicit(v8, 2u, memory_order_relaxed) & 1) == 0) {
        char v13 = v8;
      }
    }
    sub_216D30CFC(&qword_267B928F8, &v12, 2uLL);
    for (uint64_t i = 8; i != -8; i -= 8)
    {
      uint64_t v10 = *(uint64_t *)((char *)&v12 + i);
      if ((v10 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v10 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
    }
    __cxa_atexit((void (*)(void *))sub_216B554D0, &qword_267B928F8, &dword_216758000);
    __cxa_guard_release(&qword_267B92910);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92930, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92930))
  {
    SchemaAttributeNames = pxrInternal__aapl__pxrReserved__::UsdGeomGprim::GetSchemaAttributeNames((pxrInternal__aapl__pxrReserved__::UsdGeomGprim *)1);
    sub_216F11330((uint64_t **)SchemaAttributeNames);
    __cxa_atexit((void (*)(void *))sub_216B554D0, &qword_267B92918, &dword_216758000);
    __cxa_guard_release(&qword_267B92930);
  }
  if (v1) {
    return &qword_267B92918;
  }
  else {
    return &qword_267B928F8;
  }
}

void sub_216F112B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if ((a10 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(a10 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  __cxa_guard_abort(&qword_267B92910);
  _Unwind_Resume(a1);
}

void *sub_216F11330(uint64_t **a1)
{
  qword_267B92920 = 0;
  unk_267B92928 = 0;
  qword_267B92918 = 0;
  sub_216973388((char **)&qword_267B92918, ((unk_267B92900 - qword_267B928F8) >> 3) + a1[1] - *a1);
  sub_216AE27E0(&qword_267B92918, (void *)qword_267B92920, *a1, a1[1], a1[1] - *a1);
  return sub_216AE27E0(&qword_267B92918, (void *)qword_267B92920, (uint64_t *)qword_267B928F8, unk_267B92900, (unk_267B92900 - qword_267B928F8) >> 3);
}

void sub_216F113C8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216889A04((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCube::ComputeExtent(unint64_t *a1, double a2)
{
  int v13 = 0;
  uint64_t v12 = 0;
  uint64_t v14 = &v12;
  sub_2168FD278(a1, 2uLL, &v14);
  float v4 = a2 * -0.5;
  sub_2168FD54C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a1, v5, v6);
  int v7 = (float *)a1[4];
  *int v7 = v4;
  v7[1] = v4;
  uint64_t v7[2] = v4;
  *(float *)&a2 = a2 * 0.5;
  sub_2168FD54C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a1, v8, v9);
  uint64_t v10 = (_DWORD *)a1[4];
  void v10[3] = LODWORD(a2);
  void v10[4] = LODWORD(a2);
  v10[5] = LODWORD(a2);
  return 1;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCube::ComputeExtent(const pxrInternal__aapl__pxrReserved__::GfMatrix4d *a1, unint64_t *a2, double a3)
{
  LODWORD(v2sub_2168EBBB8(&a9, 0) = 0;
  double v19 = 0.0;
  *(void *)&v15.f64[0] = &v19;
  sub_2168FD278(a2, 2uLL, (uint64_t **)&v15);
  double v19 = a3 * -0.5;
  double v20 = a3 * -0.5;
  double v21 = a3 * -0.5;
  double v22 = a3 * 0.5;
  double v23 = a3 * 0.5;
  double v24 = a3 * 0.5;
  pxrInternal__aapl__pxrReserved__::GfBBox3d::_SetMatrices((pxrInternal__aapl__pxrReserved__::GfBBox3d *)&v19, a1);
  char v25 = 0;
  pxrInternal__aapl__pxrReserved__::GfBBox3d::ComputeAlignedRange((pxrInternal__aapl__pxrReserved__::GfBBox3d *)&v19, (uint64_t)&v15);
  *(float *)&a3 = v16;
  float32x2_t v6 = vcvt_f32_f64(v15);
  sub_2168FD54C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a2, v7, v8);
  float v9 = (float32x2_t *)a2[4];
  *float v9 = v6;
  v9[1].i32[0] = LODWORD(a3);
  *(float *)&a3 = v18;
  float32x2_t v10 = vcvt_f32_f64(v17);
  sub_2168FD54C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a2, v11, v12);
  unint64_t v13 = a2[4];
  *(float32x2_t *)(v13 + 12) = v10;
  *(_DWORD *)(v13 + 2sub_2168EBBB8(&a9, 0) = LODWORD(a3);
  return 1;
}

void sub_216F11560(uint64_t a1, const std::type_info *a2, char *a3)
{
  var8.__vftable = (std::type_info_vtbl *)sub_216F11784;
  pxrInternal__aapl__pxrReserved__::UsdGeomRegisterComputeExtentFunction(v3, &var8, v4);
}

uint64_t *sub_216F115A0()
{
  sub_216851EE4((uint64_t)&v6, "Tf", "TfType::Define");
  sub_216F0D538((unint64_t **)v5);
  unint64_t v0 = pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p, (char **)v5, 0);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  if (v5[0])
  {
    v5[1] = v5[0];
    operator delete(v5[0]);
  }
  while (v7--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v6);
  return v0;
}

void sub_216F11680(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a15) {
    operator delete(a15);
  }
  sub_21684E6B8(v16 - 32);
  _Unwind_Resume(a1);
}

void sub_216F116CC(char *a1)
{
  unint64_t v2 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  unint64_t v3 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  pxrInternal__aapl__pxrReserved__::TfType::AddAlias((uint64_t *)&v3, v2, a1);
}

void sub_216F11760(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_216F11784(pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a1)
{
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)&v4, a1);
  char v4 = &unk_26C76C880;
  if (v5
    && (*(unsigned char *)(v5 + 57) & 8) == 0
    && (pxrInternal__aapl__pxrReserved__::UsdTyped::_IsCompatible((pxrInternal__aapl__pxrReserved__::UsdTyped *)&v4) & 1) != 0
    || (v2[0] = "usdGeom/cube.cpp",
        v2[1] = "_ComputeExtentForCube",
        v2[2] = 223,
        v2[3] = "BOOL pxrInternal__aapl__pxrReserved__::_ComputeExtentForCube(const UsdGeomBoundable &, const UsdTimeCode"
                " &, const GfMatrix4d *, VtVec3fArray *)",
        char v3 = 0,
        (pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v2, "cubeSchema", 0) & 1) != 0))
  {
    pxrInternal__aapl__pxrReserved__::UsdGeomCube::GetSizeAttr((pxrInternal__aapl__pxrReserved__::UsdGeomCube *)&v4, (uint64_t)v2);
    pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<double>();
  }
  pxrInternal__aapl__pxrReserved__::UsdGeomGprim::~UsdGeomGprim((pxrInternal__aapl__pxrReserved__::UsdGeomGprim *)&v4);
  return 0;
}

void sub_216F118D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  pxrInternal__aapl__pxrReserved__::UsdGeomGprim::~UsdGeomGprim((pxrInternal__aapl__pxrReserved__::UsdGeomGprim *)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCurves::~UsdGeomCurves(pxrInternal__aapl__pxrReserved__::UsdGeomCurves *this)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::~UsdGeomPointBased(this);

  operator delete(v1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCurves::Get(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  uint64_t v6 = sub_216D24140(a1);
  if (v7 & 1 | (unint64_t)v6)
  {
    uint64_t v8 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_216D01530(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(v8, a2, (uint64_t)&v9);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76C8D8;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  else
  {
    float v9 = "usdGeom/curves.cpp";
    float32x2_t v10 = (atomic_ullong *)"Get";
    uint64_t v11 = 51;
    unint64_t v12 = (unint64_t)"static UsdGeomCurves pxrInternal__aapl__pxrReserved__::UsdGeomCurves::Get(const UsdStagePtr "
                            "&, const SdfPath &)";
    char v13 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v9, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v9) = 1;
    float32x2_t v10 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v11);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v11 + 1);
    unint64_t v12 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76C8D8;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  if (v10) {
    sub_216D16E0C(v10);
  }
}

void sub_216F11AC0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216D16AD8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCurves::_GetSchemaKind(pxrInternal__aapl__pxrReserved__::UsdGeomCurves *this)
{
  return 2;
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomCurves::_GetStaticTfType(pxrInternal__aapl__pxrReserved__::UsdGeomCurves *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92940, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92940))
  {
    __cxa_guard_release(&qword_267B92940);
  }
  return &qword_267B92938;
}

void sub_216F11B50(_Unwind_Exception *a1)
{
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCurves::_IsTypedSchema(pxrInternal__aapl__pxrReserved__::UsdGeomCurves *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92950, memory_order_acquire) & 1) == 0)
  {
    unint64_t v2 = (pxrInternal__aapl__pxrReserved__::UsdGeomCurves *)__cxa_guard_acquire(&qword_267B92950);
    if (v2)
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomCurves::_GetStaticTfType(v2);
      byte_267B92948 = sub_216D16508((char *)&qword_267B92938, v3, v4);
      __cxa_guard_release(&qword_267B92950);
    }
  }
  return byte_267B92948;
}

void sub_216F11BD0(_Unwind_Exception *a1)
{
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomCurves::_GetTfType(pxrInternal__aapl__pxrReserved__::UsdGeomCurves *this)
{
  return &qword_267B92938;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCurves::GetCurveVertexCountsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCurves *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  char v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    char v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 224), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F11CA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCurves::CreateCurveVertexCountsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCurves *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  float v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    float v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 224), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 464), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCurves::GetWidthsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCurves *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  char v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    char v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 1312), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F11E10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCurves::CreateWidthsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCurves *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  float v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    float v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 1312), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 512), 0, 0, a2, a3, a4);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomCurves::GetSchemaAttributeNames(pxrInternal__aapl__pxrReserved__::UsdGeomCurves *this)
{
  int v1 = (int)this;
  uint64_t v14 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92970, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92970))
  {
    char v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v3) {
      char v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v4 = *((void *)v3 + 28);
    uint64_t v12 = v4;
    if ((v4 & 7) != 0)
    {
      uint64_t v5 = (atomic_uint *)(v4 & 0xFFFFFFFFFFFFFFF8);
      if ((atomic_fetch_add_explicit(v5, 2u, memory_order_relaxed) & 1) == 0) {
        uint64_t v12 = (uint64_t)v5;
      }
    }
    int v6 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v6) {
      int v6 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    int v7 = (atomic_uint *)*((void *)v6 + 164);
    char v13 = v7;
    if ((v7 & 7) != 0)
    {
      uint64_t v8 = (atomic_uint *)((unint64_t)v7 & 0xFFFFFFFFFFFFFFF8);
      if ((atomic_fetch_add_explicit(v8, 2u, memory_order_relaxed) & 1) == 0) {
        char v13 = v8;
      }
    }
    sub_216D30CFC(&qword_267B92958, &v12, 2uLL);
    for (uint64_t i = 8; i != -8; i -= 8)
    {
      uint64_t v10 = *(uint64_t *)((char *)&v12 + i);
      if ((v10 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v10 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
    }
    __cxa_atexit((void (*)(void *))sub_216B554D0, &qword_267B92958, &dword_216758000);
    __cxa_guard_release(&qword_267B92970);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92990, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92990))
  {
    SchemaAttributeNames = pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::GetSchemaAttributeNames((pxrInternal__aapl__pxrReserved__::UsdGeomPointBased *)1);
    sub_216F12130((uint64_t **)SchemaAttributeNames);
    __cxa_atexit((void (*)(void *))sub_216B554D0, &qword_267B92978, &dword_216758000);
    __cxa_guard_release(&qword_267B92990);
  }
  if (v1) {
    return &qword_267B92978;
  }
  else {
    return &qword_267B92958;
  }
}

void sub_216F120B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if ((a10 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(a10 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  __cxa_guard_abort(&qword_267B92970);
  _Unwind_Resume(a1);
}

void *sub_216F12130(uint64_t **a1)
{
  qword_267B92980 = 0;
  unk_267B92988 = 0;
  qword_267B92978 = 0;
  sub_216973388((char **)&qword_267B92978, ((unk_267B92960 - qword_267B92958) >> 3) + a1[1] - *a1);
  sub_216AE27E0(&qword_267B92978, (void *)qword_267B92980, *a1, a1[1], a1[1] - *a1);
  return sub_216AE27E0(&qword_267B92978, (void *)qword_267B92980, (uint64_t *)qword_267B92958, unk_267B92960, (unk_267B92960 - qword_267B92958) >> 3);
}

void sub_216F121C8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216889A04((void ***)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCurves::GetWidthsInterpolation(pxrInternal__aapl__pxrReserved__::UsdGeomCurves *this@<X0>, atomic_uint **a2@<X8>)
{
  char v13 = 0;
  pxrInternal__aapl__pxrReserved__::UsdGeomCurves::GetWidthsAttr(this, (uint64_t)&v8);
  char v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    char v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  uint64_t v14 = 0;
  BOOL v4 = sub_216D1D1CC((uint64_t)&v8, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 488), (uint64_t)&v13, &v14);
  if ((v14 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v14 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  if ((v12 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v11);
  sub_21697C414(&v10);
  if (v9) {
    sub_216D16E0C(v9);
  }
  if (v4)
  {
    *a2 = v13;
    char v13 = 0;
  }
  else
  {
    uint64_t v5 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v5) {
      uint64_t v5 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    int v6 = (atomic_uint *)*((void *)v5 + 153);
    *a2 = v6;
    if ((v6 & 7) != 0)
    {
      int v7 = (atomic_uint *)((unint64_t)v6 & 0xFFFFFFFFFFFFFFF8);
      if ((atomic_fetch_add_explicit(v7, 2u, memory_order_relaxed) & 1) == 0) {
        *a2 = v7;
      }
    }
  }
  if ((v13 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)((unint64_t)v13 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
}

void sub_216F12318(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if ((a13 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(a13 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCurves::SetWidthsInterpolation(pxrInternal__aapl__pxrReserved__::UsdGeomCurves *this, const pxrInternal__aapl__pxrReserved__::TfToken *a2)
{
  if (pxrInternal__aapl__pxrReserved__::UsdGeomPrimvar::IsValidInterpolation(a2, a2))
  {
    pxrInternal__aapl__pxrReserved__::UsdGeomCurves::GetWidthsAttr(this, (uint64_t)v17);
    BOOL v4 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v4) {
      BOOL v4 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v10 = 0;
    sub_216D1CF30((uint64_t)v17, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v4 + 488));
  }
  v17[0] = "usdGeom/curves.cpp";
  v17[1] = "SetWidthsInterpolation";
  _OWORD v17[2] = 194;
  v17[3] = "BOOL pxrInternal__aapl__pxrReserved__::UsdGeomCurves::SetWidthsInterpolation(const TfToken &)";
  char v18 = 0;
  unint64_t v5 = *(void *)a2 & 0xFFFFFFFFFFFFFFF8;
  if (v5)
  {
    int v6 = (const char *)(v5 + 16);
    if (*(char *)(v5 + 39) < 0) {
      int v6 = *(const char **)v6;
    }
  }
  else
  {
    int v6 = "";
  }
  sub_216D16CFC((uint64_t)&v10, (uint64_t *)this + 1, (_DWORD *)this + 4);
  sub_216D0162C((uint64_t)&v10, &v15);
  String = pxrInternal__aapl__pxrReserved__::SdfPath::GetString((pxrInternal__aapl__pxrReserved__::SdfPath *)&v15);
  if (*((char *)String + 23) >= 0) {
    uint64_t v8 = (const char *)String;
  }
  else {
    uint64_t v8 = (const char *)*String;
  }
  pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v17, 1, (pxrInternal__aapl__pxrReserved__ *)"Attempt to set invalid interpolation \"%s\" for widths attr on prim %s", v6, v8);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v16);
  sub_21697C414(&v15);
  if ((v14 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v14 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v13);
  sub_21697C414(&v12);
  if (v11) {
    sub_216D16E0C(v11);
  }
  return 0;
}

void sub_216F12538(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  sub_216D2EDA0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCurves::ComputeExtent(void *a1, uint64_t *a2, unint64_t *a3, int32x2_t a4)
{
  uint64_t v5 = *a2;
  if (*a2)
  {
    int v6 = (float *)a2[4];
    if (v5 != 1)
    {
      int v7 = v6 + 1;
      float v8 = *v6;
      uint64_t v9 = 4 * v5 - 4;
      uint64_t v10 = v6 + 1;
      do
      {
        float v11 = *v10++;
        float v12 = v11;
        if (v8 < v11)
        {
          float v8 = v12;
          int v6 = v7;
        }
        int v7 = v10;
        v9 -= 4;
      }
      while (v9);
    }
    *(float *)a4.i32 = *v6 * 0.5;
  }
  else
  {
    *(double *)&a4 = 0.0;
  }
  int32x2_t v22 = a4;
  uint64_t v15 = pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::ComputeExtent(a1, a3);
  if (v15)
  {
    sub_2168FD54C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a3, v13, v14);
    int v16 = (float32x2_t *)a3[4];
    float32x2_t v17 = (float32x2_t)vdup_lane_s32(v22, 0);
    float32x2_t *v16 = vsub_f32(*v16, v17);
    v16[1].f32[0] = v16[1].f32[0] - *(float *)v22.i32;
    sub_2168FD54C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a3, v18, v19);
    unint64_t v20 = a3[4];
    *(float32x2_t *)(v20 + 12) = vadd_f32(v17, *(float32x2_t *)(v20 + 12));
    *(float *)(v20 + 2sub_2168EBBB8(&a9, 0) = *(float *)v22.i32 + *(float *)(v20 + 20);
  }
  return v15;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCurves::ComputeExtent(uint64_t *a1, uint64_t *a2, uint64_t a3, unint64_t *a4)
{
  uint64_t v6 = *a2;
  if (*a2)
  {
    int v7 = (float *)a2[4];
    if (v6 != 1)
    {
      float v8 = v7 + 1;
      float v9 = *v7;
      uint64_t v10 = 4 * v6 - 4;
      float v11 = v7 + 1;
      do
      {
        float v12 = *v11++;
        float v13 = v12;
        if (v9 < v12)
        {
          float v9 = v13;
          int v7 = v8;
        }
        float v8 = v11;
        v10 -= 4;
      }
      while (v10);
    }
    double v14 = *v7 * 0.5;
  }
  else
  {
    double v14 = 0.0;
  }
  if (!pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::ComputeExtent(a1, (float64x2_t *)a3, a4)) {
    return 0;
  }
  uint64_t v38 = 0;
  long long v15 = *(_OWORD *)(a3 + 80);
  v36[4] = *(_OWORD *)(a3 + 64);
  v36[5] = v15;
  long long v16 = *(_OWORD *)(a3 + 112);
  v36[6] = *(_OWORD *)(a3 + 96);
  memset(v37, 0, sizeof(v37));
  v36[7] = v16;
  long long v17 = *(_OWORD *)(a3 + 16);
  v36[0] = *(_OWORD *)a3;
  v36[1] = v17;
  long long v18 = *(_OWORD *)(a3 + 48);
  v36[2] = *(_OWORD *)(a3 + 32);
  v36[3] = v18;
  memset(v35, 0, sizeof(v35));
  pxrInternal__aapl__pxrReserved__::GfMatrix4d::SetTranslateOnly((uint64_t)v36, (uint64_t)v35);
  uint64_t v21 = pxrInternal__aapl__pxrReserved__::UsdGeomSphere::ComputeExtent((const pxrInternal__aapl__pxrReserved__::GfMatrix4d *)v36, v37, v14);
  if (v21)
  {
    sub_2168FD54C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)v37, v19, v20);
    int32x2_t v22 = v38;
    sub_2168FD54C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a4, v23, v24);
    char v25 = (float *)a4[4];
    float v26 = v25[1];
    *char v25 = *v22 + *v25;
    v25[1] = v22[1] + v26;
    void v25[2] = v22[2] + v25[2];
    sub_2168FD54C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)v37, v27, v28);
    long long v29 = v38;
    sub_2168FD54C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a4, v30, v31);
    uint64_t v32 = (float *)a4[4];
    float v33 = v32[4];
    v32[3] = v29[3] + v32[3];
    v32[4] = v29[4] + v33;
    v32[5] = v29[5] + v32[5];
  }
  sub_2168F83DC((uint64_t)v37);
  return v21;
}

void sub_216F12838(_Unwind_Exception *a1)
{
  sub_2168F83DC(v1 - 96);
  _Unwind_Resume(a1);
}

void sub_216F12854(uint64_t a1, const std::type_info *a2, char *a3)
{
  var8.__vftable = (std::type_info_vtbl *)sub_216F12B18;
  pxrInternal__aapl__pxrReserved__::UsdGeomRegisterComputeExtentFunction(v3, &var8, v4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCurves::GetCurveCount(pxrInternal__aapl__pxrReserved__::UsdGeomCurves *a1)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomCurves::GetCurveVertexCountsAttr(a1, (uint64_t)v4);
  uint64_t v3 = 0;
  long long v1 = 0u;
  long long v2 = 0u;
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::VtArray<int>>();
}

void sub_216F12938(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
}

uint64_t *sub_216F12958()
{
  sub_216851EE4((uint64_t)&v6, "Tf", "TfType::Define");
  sub_216F12A84((unint64_t **)v5);
  unint64_t v0 = pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p, (char **)v5, 0);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  if (v5[0])
  {
    v5[1] = v5[0];
    operator delete(v5[0]);
  }
  while (v7--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v6);
  return v0;
}

void sub_216F12A38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a15) {
    operator delete(a15);
  }
  sub_21684E6B8(v16 - 32);
  _Unwind_Resume(a1);
}

void sub_216F12A84(unint64_t **a1@<X8>)
{
  unint64_t v2 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p);
  a1[1] = 0;
  a1[2] = 0;
  *a1 = 0;
  uint64_t v3 = (unint64_t *)operator new(8uLL);
  *a1 = v3;
  *v3++ = v2;
  a1[1] = v3;
  a1[2] = v3;
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216F12AF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_216F12B18(pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a1)
{
  long long v1 = pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)&v7, a1);
  int v7 = &unk_26C76C8D8;
  if (v8 && (*(unsigned char *)(v8 + 57) & 8) == 0 && (pxrInternal__aapl__pxrReserved__::UsdTyped::_IsCompatible(v1) & 1) != 0
    || (*(void *)&long long v4 = "usdGeom/curves.cpp",
        *((void *)&v4 + 1) = "_ComputeExtentForCurves",
        *(void *)&long long v5 = 278,
        *((void *)&v5 + 1) = "BOOL pxrInternal__aapl__pxrReserved__::_ComputeExtentForCurves(const UsdGeomBoundable &, "
                               "const UsdTimeCode &, const GfMatrix4d *, VtVec3fArray *)",
        LOBYTE(v6) = 0,
        (pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v4, "curves", 0) & 1) != 0))
  {
    uint64_t v6 = 0;
    long long v4 = 0u;
    long long v5 = 0u;
    pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::GetPointsAttr((pxrInternal__aapl__pxrReserved__::UsdGeomPointBased *)&v7, (uint64_t)&v3);
    pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::VtArray<pxrInternal__aapl__pxrReserved__::GfVec3f>>();
  }
  pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::~UsdGeomPointBased((pxrInternal__aapl__pxrReserved__::UsdGeomPointBased *)&v7);
  return 0;
}

void sub_216F12D00(_Unwind_Exception *a1)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::~UsdGeomPointBased((pxrInternal__aapl__pxrReserved__::UsdGeomPointBased *)(v1 - 72));
  _Unwind_Resume(a1);
}

void sub_216F12D74()
{
  sub_216F13E88();
  sub_216779094(__p, "Cylinder");
  sub_216F13FB4((char *)__p);
  if (v1 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216F12DC4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCylinder::~UsdGeomCylinder(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder *this)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomGprim::~UsdGeomGprim(this);

  operator delete(v1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCylinder::Get(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  uint64_t v6 = sub_216D24140(a1);
  if (v7 & 1 | (unint64_t)v6)
  {
    uint64_t v8 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_216D01530(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(v8, a2, (uint64_t)&v9);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76C930;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  else
  {
    float v9 = "usdGeom/cylinder.cpp";
    uint64_t v10 = (atomic_ullong *)"Get";
    uint64_t v11 = 57;
    unint64_t v12 = (unint64_t)"static UsdGeomCylinder pxrInternal__aapl__pxrReserved__::UsdGeomCylinder::Get(const UsdStage"
                            "Ptr &, const SdfPath &)";
    char v13 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v9, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v9) = 1;
    uint64_t v10 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v11);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v11 + 1);
    unint64_t v12 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76C930;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  if (v10) {
    sub_216D16E0C(v10);
  }
}

void sub_216F12F90(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216D16AD8((uint64_t)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCylinder::Define(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B929A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B929A0))
  {
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken((pxrInternal__aapl__pxrReserved__::TfToken *)&qword_267B92998, "Cylinder");
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &qword_267B92998, &dword_216758000);
    __cxa_guard_release(&qword_267B929A0);
  }
  uint64_t v6 = sub_216D24140(a1);
  if (v7 & 1 | (unint64_t)v6)
  {
    uint64_t v8 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_216D01530(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::DefinePrim(v8, a2, &qword_267B92998, (uint64_t)&v9);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76C930;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  else
  {
    float v9 = "usdGeom/cylinder.cpp";
    uint64_t v10 = (atomic_ullong *)"Define";
    uint64_t v11 = 70;
    unint64_t v12 = (unint64_t)"static UsdGeomCylinder pxrInternal__aapl__pxrReserved__::UsdGeomCylinder::Define(const UsdSt"
                            "agePtr &, const SdfPath &)";
    char v13 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v9, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v9) = 1;
    uint64_t v10 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v11);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v11 + 1);
    unint64_t v12 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76C930;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  if (v10) {
    sub_216D16E0C(v10);
  }
}

void sub_216F1319C(_Unwind_Exception *a1)
{
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCylinder::_GetSchemaKind(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder *this)
{
  return 3;
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomCylinder::_GetStaticTfType(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B929B0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B929B0))
  {
    __cxa_guard_release(&qword_267B929B0);
  }
  return &qword_267B929A8;
}

void sub_216F13244(_Unwind_Exception *a1)
{
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCylinder::_IsTypedSchema(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B929C0, memory_order_acquire) & 1) == 0)
  {
    unint64_t v2 = (pxrInternal__aapl__pxrReserved__::UsdGeomCylinder *)__cxa_guard_acquire(&qword_267B929C0);
    if (v2)
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomCylinder::_GetStaticTfType(v2);
      byte_267B929B8 = sub_216D16508((char *)&qword_267B929A8, v3, v4);
      __cxa_guard_release(&qword_267B929C0);
    }
  }
  return byte_267B929B8;
}

void sub_216F132C4(_Unwind_Exception *a1)
{
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomCylinder::_GetTfType(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder *this)
{
  return &qword_267B929A8;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCylinder::GetHeightAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  long long v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    long long v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 408), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F1339C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCylinder::CreateHeightAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  float v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    float v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 408), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 64), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCylinder::GetRadiusAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  long long v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    long long v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 920), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F13504(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCylinder::CreateRadiusAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  float v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    float v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 920), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 64), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCylinder::GetAxisAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  long long v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    long long v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 24), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F1366C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCylinder::CreateAxisAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  float v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    float v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 24), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 88), 0, 1, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCylinder::GetExtentAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  long long v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    long long v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 296), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F137D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCylinder::CreateExtentAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  float v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    float v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 296), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 616), 0, 0, a2, a3, a4);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomCylinder::GetSchemaAttributeNames(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder *this)
{
  int v1 = (int)this;
  uint64_t v18 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B929E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B929E0))
  {
    long long v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v3) {
      long long v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v4 = *((void *)v3 + 51);
    uint64_t v14 = v4;
    if ((v4 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v4 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v14 &= 0xFFFFFFFFFFFFFFF8;
    }
    long long v5 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v5) {
      long long v5 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v6 = *((void *)v5 + 115);
    uint64_t v15 = v6;
    if ((v6 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v6 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v15 &= 0xFFFFFFFFFFFFFFF8;
    }
    int v7 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v7) {
      int v7 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v8 = *((void *)v7 + 3);
    uint64_t v16 = v8;
    if ((v8 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v16 &= 0xFFFFFFFFFFFFFFF8;
    }
    float v9 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v9) {
      float v9 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v10 = *((void *)v9 + 37);
    uint64_t v17 = v10;
    if ((v10 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v10 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v17 &= 0xFFFFFFFFFFFFFFF8;
    }
    sub_216D30CFC(&qword_267B929C8, &v14, 4uLL);
    for (uint64_t i = 24; i != -8; i -= 8)
    {
      uint64_t v12 = *(uint64_t *)((char *)&v14 + i);
      if ((v12 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
    }
    __cxa_atexit((void (*)(void *))sub_216B554D0, &qword_267B929C8, &dword_216758000);
    __cxa_guard_release(&qword_267B929E0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92A00, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92A00))
  {
    SchemaAttributeNames = pxrInternal__aapl__pxrReserved__::UsdGeomGprim::GetSchemaAttributeNames((pxrInternal__aapl__pxrReserved__::UsdGeomGprim *)1);
    sub_216F13BB8((uint64_t **)SchemaAttributeNames);
    __cxa_atexit((void (*)(void *))sub_216B554D0, &qword_267B929E8, &dword_216758000);
    __cxa_guard_release(&qword_267B92A00);
  }
  if (v1) {
    return &qword_267B929E8;
  }
  else {
    return &qword_267B929C8;
  }
}

void sub_216F13B34(_Unwind_Exception *a1)
{
}

void *sub_216F13BB8(uint64_t **a1)
{
  qword_267B929F0 = 0;
  unk_267B929F8 = 0;
  qword_267B929E8 = 0;
  sub_216973388((char **)&qword_267B929E8, ((*(void *)algn_267B929D0 - qword_267B929C8) >> 3) + a1[1] - *a1);
  sub_216AE27E0(&qword_267B929E8, (void *)qword_267B929F0, *a1, a1[1], a1[1] - *a1);
  return sub_216AE27E0(&qword_267B929E8, (void *)qword_267B929F0, (uint64_t *)qword_267B929C8, *(uint64_t **)algn_267B929D0, (*(void *)algn_267B929D0 - qword_267B929C8) >> 3);
}

void sub_216F13C50(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216889A04((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCylinder::ComputeExtent(void *a1, unint64_t *a2, double a3, double a4)
{
  float v18 = 0.0;
  float32x2_t v17 = 0;
  uint64_t v19 = &v17;
  sub_2168FD278(a2, 2uLL, (uint64_t **)&v19);
  uint64_t v10 = sub_216F10158(a1, (float *)&v17, a3, a4);
  if (v10)
  {
    float32_t v11 = -v18;
    sub_2168FD54C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a2, v8, v9);
    uint64_t v12 = (float32x2_t *)a2[4];
    float32x2_t *v12 = vneg_f32(v17);
    v12[1].f32[0] = v11;
    sub_2168FD54C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a2, v13, v14);
    unint64_t v15 = a2[4];
    *(float32x2_t *)(v15 + 12) = v17;
    *(float *)(v15 + 2sub_2168EBBB8(&a9, 0) = v18;
  }
  return v10;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCylinder::ComputeExtent(void *a1, const pxrInternal__aapl__pxrReserved__::GfMatrix4d *a2, unint64_t *a3, double a4, double a5)
{
  DWORD2(v27[0]) = 0;
  *(void *)&v27[0] = 0;
  *(void *)&v23.f64[0] = v27;
  sub_2168FD278(a3, 2uLL, (uint64_t **)&v23);
  uint64_t v10 = sub_216F10158(a1, (float *)v29, a4, a5);
  if (v10)
  {
    float32x2_t v11 = (float32x2_t)vrev64_s32(*(int32x2_t *)v29);
    v11.f32[0] = -*(float *)&v29[8];
    v27[0] = vcvtq_f64_f32(vneg_f32(*(float32x2_t *)v29));
    v27[1] = vcvtq_f64_f32(v11);
    v27[2] = vcvtq_f64_f32(*(float32x2_t *)&v29[4]);
    pxrInternal__aapl__pxrReserved__::GfBBox3d::_SetMatrices((pxrInternal__aapl__pxrReserved__::GfBBox3d *)v27, a2);
    char v28 = 0;
    pxrInternal__aapl__pxrReserved__::GfBBox3d::ComputeAlignedRange((pxrInternal__aapl__pxrReserved__::GfBBox3d *)v27, (uint64_t)&v23);
    float32_t v12 = v24;
    float32x2_t v13 = vcvt_f32_f64(v23);
    sub_2168FD54C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a3, v14, v15);
    uint64_t v16 = (float32x2_t *)a3[4];
    float32x2_t *v16 = v13;
    v16[1].f32[0] = v12;
    float v17 = v26;
    float32x2_t v18 = vcvt_f32_f64(v25);
    sub_2168FD54C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a3, v19, v20);
    unint64_t v21 = a3[4];
    *(float32x2_t *)(v21 + 12) = v18;
    *(float *)(v21 + 2sub_2168EBBB8(&a9, 0) = v17;
  }
  return v10;
}

void sub_216F13E48(uint64_t a1, const std::type_info *a2, char *a3)
{
  var8.__vftable = (std::type_info_vtbl *)sub_216F1406C;
  pxrInternal__aapl__pxrReserved__::UsdGeomRegisterComputeExtentFunction(v3, &var8, v4);
}

uint64_t *sub_216F13E88()
{
  sub_216851EE4((uint64_t)&v6, "Tf", "TfType::Define");
  sub_216F0D538((unint64_t **)v5);
  unint64_t v0 = pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p, (char **)v5, 0);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  if (v5[0])
  {
    v5[1] = v5[0];
    operator delete(v5[0]);
  }
  while (v7--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v6);
  return v0;
}

void sub_216F13F68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a15) {
    operator delete(a15);
  }
  sub_21684E6B8(v16 - 32);
  _Unwind_Resume(a1);
}

void sub_216F13FB4(char *a1)
{
  unint64_t v2 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  unint64_t v3 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  pxrInternal__aapl__pxrReserved__::TfType::AddAlias((uint64_t *)&v3, v2, a1);
}

void sub_216F14048(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_216F1406C(pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a1)
{
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)&v4, a1);
  char v4 = &unk_26C76C930;
  if (v5
    && (*(unsigned char *)(v5 + 57) & 8) == 0
    && (pxrInternal__aapl__pxrReserved__::UsdTyped::_IsCompatible((pxrInternal__aapl__pxrReserved__::UsdTyped *)&v4) & 1) != 0
    || (v2[0] = "usdGeom/cylinder.cpp",
        v2[1] = "_ComputeExtentForCylinder",
        v2[2] = 286,
        v2[3] = "BOOL pxrInternal__aapl__pxrReserved__::_ComputeExtentForCylinder(const UsdGeomBoundable &, const UsdTime"
                "Code &, const GfMatrix4d *, VtVec3fArray *)",
        char v3 = 0,
        (pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v2, "cylinderSchema", 0) & 1) != 0))
  {
    pxrInternal__aapl__pxrReserved__::UsdGeomCylinder::GetHeightAttr((pxrInternal__aapl__pxrReserved__::UsdGeomCylinder *)&v4, (uint64_t)v2);
    pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<double>();
  }
  pxrInternal__aapl__pxrReserved__::UsdGeomGprim::~UsdGeomGprim((pxrInternal__aapl__pxrReserved__::UsdGeomGprim *)&v4);
  return 0;
}

void sub_216F142B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  pxrInternal__aapl__pxrReserved__::UsdGeomGprim::~UsdGeomGprim((pxrInternal__aapl__pxrReserved__::UsdGeomGprim *)va);
  _Unwind_Resume(a1);
}

void sub_216F14328()
{
  sub_216F15740();
  sub_216779094(__p, "Cylinder_1");
  sub_216F1586C((char *)__p);
  if (v1 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216F14378(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::~UsdGeomCylinder_1(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1 *this)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomGprim::~UsdGeomGprim(this);

  operator delete(v1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::Get(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  uint64_t v6 = sub_216D24140(a1);
  if (v7 & 1 | (unint64_t)v6)
  {
    uint64_t v8 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_216D01530(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(v8, a2, (uint64_t)&v9);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76C988;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  else
  {
    float v9 = "usdGeom/cylinder_1.cpp";
    uint64_t v10 = (atomic_ullong *)"Get";
    uint64_t v11 = 57;
    unint64_t v12 = (unint64_t)"static UsdGeomCylinder_1 pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::Get(const UsdS"
                            "tagePtr &, const SdfPath &)";
    char v13 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v9, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v9) = 1;
    uint64_t v10 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v11);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v11 + 1);
    unint64_t v12 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76C988;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  if (v10) {
    sub_216D16E0C(v10);
  }
}

void sub_216F14544(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216D16AD8((uint64_t)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::Define(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92A10, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92A10))
  {
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken((pxrInternal__aapl__pxrReserved__::TfToken *)&qword_267B92A08, "Cylinder_1");
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &qword_267B92A08, &dword_216758000);
    __cxa_guard_release(&qword_267B92A10);
  }
  uint64_t v6 = sub_216D24140(a1);
  if (v7 & 1 | (unint64_t)v6)
  {
    uint64_t v8 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_216D01530(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::DefinePrim(v8, a2, &qword_267B92A08, (uint64_t)&v9);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76C988;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  else
  {
    float v9 = "usdGeom/cylinder_1.cpp";
    uint64_t v10 = (atomic_ullong *)"Define";
    uint64_t v11 = 70;
    unint64_t v12 = (unint64_t)"static UsdGeomCylinder_1 pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::Define(const U"
                            "sdStagePtr &, const SdfPath &)";
    char v13 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v9, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v9) = 1;
    uint64_t v10 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v11);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v11 + 1);
    unint64_t v12 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76C988;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  if (v10) {
    sub_216D16E0C(v10);
  }
}

void sub_216F14750(_Unwind_Exception *a1)
{
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::_GetSchemaKind(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1 *this)
{
  return 3;
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::_GetStaticTfType(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1 *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92A20, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92A20))
  {
    __cxa_guard_release(&qword_267B92A20);
  }
  return &qword_267B92A18;
}

void sub_216F147F8(_Unwind_Exception *a1)
{
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::_IsTypedSchema(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1 *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92A30, memory_order_acquire) & 1) == 0)
  {
    unint64_t v2 = (pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1 *)__cxa_guard_acquire(&qword_267B92A30);
    if (v2)
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::_GetStaticTfType(v2);
      byte_267B92A28 = sub_216D16508((char *)&qword_267B92A18, v3, v4);
      __cxa_guard_release(&qword_267B92A30);
    }
  }
  return byte_267B92A28;
}

void sub_216F14878(_Unwind_Exception *a1)
{
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::_GetTfType(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1 *this)
{
  return &qword_267B92A18;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::GetHeightAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1 *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  char v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    char v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 408), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F14950(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::CreateHeightAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1 *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  float v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    float v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 408), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 64), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::GetRadiusTopAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1 *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  char v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    char v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 936), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F14AB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::CreateRadiusTopAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1 *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  float v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    float v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 936), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 64), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::GetRadiusBottomAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1 *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  char v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    char v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 928), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F14C20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::CreateRadiusBottomAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1 *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  float v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    float v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 928), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 64), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::GetAxisAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1 *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  char v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    char v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 24), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F14D88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::CreateAxisAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1 *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  float v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    float v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 24), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 88), 0, 1, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::GetExtentAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1 *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  char v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    char v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 296), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F14EF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::CreateExtentAttr(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1 *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  float v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    float v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 296), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 616), 0, 0, a2, a3, a4);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::GetSchemaAttributeNames(pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1 *this)
{
  int v1 = (int)this;
  uint64_t v21 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92A50, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92A50))
  {
    char v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v3) {
      char v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v4 = *((void *)v3 + 51);
    uint64_t v16 = v4;
    if ((v4 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v4 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v16 &= 0xFFFFFFFFFFFFFFF8;
    }
    uint64_t v5 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v5) {
      uint64_t v5 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v6 = *((void *)v5 + 117);
    uint64_t v17 = v6;
    if ((v6 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v6 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v17 &= 0xFFFFFFFFFFFFFFF8;
    }
    int v7 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v7) {
      int v7 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v8 = *((void *)v7 + 116);
    uint64_t v18 = v8;
    if ((v8 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v18 &= 0xFFFFFFFFFFFFFFF8;
    }
    float v9 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v9) {
      float v9 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v10 = *((void *)v9 + 3);
    uint64_t v19 = v10;
    if ((v10 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v10 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v19 &= 0xFFFFFFFFFFFFFFF8;
    }
    uint64_t v11 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v11) {
      uint64_t v11 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v12 = *((void *)v11 + 37);
    uint64_t v20 = v12;
    if ((v12 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v20 &= 0xFFFFFFFFFFFFFFF8;
    }
    sub_216D30CFC(&qword_267B92A38, &v16, 5uLL);
    for (uint64_t i = 32; i != -8; i -= 8)
    {
      uint64_t v14 = *(uint64_t *)((char *)&v16 + i);
      if ((v14 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v14 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
    }
    __cxa_atexit((void (*)(void *))sub_216B554D0, &qword_267B92A38, &dword_216758000);
    __cxa_guard_release(&qword_267B92A50);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92A70, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92A70))
  {
    SchemaAttributeNames = pxrInternal__aapl__pxrReserved__::UsdGeomGprim::GetSchemaAttributeNames((pxrInternal__aapl__pxrReserved__::UsdGeomGprim *)1);
    sub_216F15320((uint64_t **)SchemaAttributeNames);
    __cxa_atexit((void (*)(void *))sub_216B554D0, &qword_267B92A58, &dword_216758000);
    __cxa_guard_release(&qword_267B92A70);
  }
  if (v1) {
    return &qword_267B92A58;
  }
  else {
    return &qword_267B92A38;
  }
}

void sub_216F1529C(_Unwind_Exception *a1)
{
}

void *sub_216F15320(uint64_t **a1)
{
  qword_267B92A60 = 0;
  unk_267B92A68 = 0;
  qword_267B92A58 = 0;
  sub_216973388((char **)&qword_267B92A58, ((unk_267B92A40 - qword_267B92A38) >> 3) + a1[1] - *a1);
  sub_216AE27E0(&qword_267B92A58, (void *)qword_267B92A60, *a1, a1[1], a1[1] - *a1);
  return sub_216AE27E0(&qword_267B92A58, (void *)qword_267B92A60, (uint64_t *)qword_267B92A38, unk_267B92A40, (unk_267B92A40 - qword_267B92A38) >> 3);
}

void sub_216F153B8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216889A04((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::ComputeExtent(void *a1, unint64_t *a2, double a3, double a4, double a5)
{
  float v20 = 0.0;
  float32x2_t v19 = 0;
  uint64_t v21 = &v19;
  sub_2168FD278(a2, 2uLL, (uint64_t **)&v21);
  uint64_t v12 = sub_216F154A4(a1, (float *)&v19, a3, a4, a5);
  if (v12)
  {
    float32_t v13 = -v20;
    sub_2168FD54C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a2, v10, v11);
    uint64_t v14 = (float32x2_t *)a2[4];
    *uint64_t v14 = vneg_f32(v19);
    v14[1].f32[0] = v13;
    sub_2168FD54C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a2, v15, v16);
    unint64_t v17 = a2[4];
    *(float32x2_t *)(v17 + 12) = v19;
    *(float *)(v17 + 2sub_2168EBBB8(&a9, 0) = v20;
  }
  return v12;
}

uint64_t sub_216F154A4(void *a1, float *a2, double a3, double a4, double a5)
{
  if (a4 >= a5) {
    double v8 = a4;
  }
  else {
    double v8 = a5;
  }
  float v9 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v9) {
    float v9 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  if ((*a1 & 0xFFFFFFFFFFFFFFF8) == (*((void *)v9 + 166) & 0xFFFFFFFFFFFFFFF8))
  {
    float v13 = a3 * 0.5;
    float v14 = v8;
    float v15 = v14;
  }
  else
  {
    uint64_t v10 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v10) {
      uint64_t v10 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    if ((*a1 & 0xFFFFFFFFFFFFFFF8) == (*((void *)v10 + 168) & 0xFFFFFFFFFFFFFFF8))
    {
      float v13 = v8;
      float v14 = a3 * 0.5;
      float v15 = v13;
    }
    else
    {
      uint64_t v11 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      if (!v11) {
        uint64_t v11 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      }
      if ((*a1 & 0xFFFFFFFFFFFFFFF8) != (*((void *)v11 + 169) & 0xFFFFFFFFFFFFFFF8)) {
        return 0;
      }
      float v13 = v8;
      float v15 = a3 * 0.5;
      float v14 = v13;
    }
  }
  *a2 = v13;
  a2[1] = v14;
  uint64_t result = 1;
  a2[2] = v15;
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::ComputeExtent(void *a1, const pxrInternal__aapl__pxrReserved__::GfMatrix4d *a2, unint64_t *a3, double a4, double a5, double a6)
{
  DWORD2(v29[0]) = 0;
  *(void *)&v29[0] = 0;
  *(void *)&v25.f64[0] = v29;
  sub_2168FD278(a3, 2uLL, (uint64_t **)&v25);
  uint64_t v12 = sub_216F154A4(a1, (float *)v31, a4, a5, a6);
  if (v12)
  {
    float32x2_t v13 = (float32x2_t)vrev64_s32(*(int32x2_t *)v31);
    v13.f32[0] = -*(float *)&v31[8];
    v29[0] = vcvtq_f64_f32(vneg_f32(*(float32x2_t *)v31));
    v29[1] = vcvtq_f64_f32(v13);
    v29[2] = vcvtq_f64_f32(*(float32x2_t *)&v31[4]);
    pxrInternal__aapl__pxrReserved__::GfBBox3d::_SetMatrices((pxrInternal__aapl__pxrReserved__::GfBBox3d *)v29, a2);
    char v30 = 0;
    pxrInternal__aapl__pxrReserved__::GfBBox3d::ComputeAlignedRange((pxrInternal__aapl__pxrReserved__::GfBBox3d *)v29, (uint64_t)&v25);
    float32_t v14 = v26;
    float32x2_t v15 = vcvt_f32_f64(v25);
    sub_2168FD54C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a3, v16, v17);
    uint64_t v18 = (float32x2_t *)a3[4];
    *uint64_t v18 = v15;
    v18[1].f32[0] = v14;
    float v19 = v28;
    float32x2_t v20 = vcvt_f32_f64(v27);
    sub_2168FD54C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a3, v21, v22);
    unint64_t v23 = a3[4];
    *(float32x2_t *)(v23 + 12) = v20;
    *(float *)(v23 + 2sub_2168EBBB8(&a9, 0) = v19;
  }
  return v12;
}

void sub_216F15700(uint64_t a1, const std::type_info *a2, char *a3)
{
  var8.__vftable = (std::type_info_vtbl *)sub_216F15924;
  pxrInternal__aapl__pxrReserved__::UsdGeomRegisterComputeExtentFunction(v3, &var8, v4);
}

uint64_t *sub_216F15740()
{
  sub_216851EE4((uint64_t)&v6, "Tf", "TfType::Define");
  sub_216F0D538((unint64_t **)v5);
  unint64_t v0 = pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p, (char **)v5, 0);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  if (v5[0])
  {
    v5[1] = v5[0];
    operator delete(v5[0]);
  }
  while (v7--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v6);
  return v0;
}

void sub_216F15820(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a15) {
    operator delete(a15);
  }
  sub_21684E6B8(v16 - 32);
  _Unwind_Resume(a1);
}

void sub_216F1586C(char *a1)
{
  unint64_t v2 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  unint64_t v3 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  pxrInternal__aapl__pxrReserved__::TfType::AddAlias((uint64_t *)&v3, v2, a1);
}

void sub_216F15900(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_216F15924(pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a1)
{
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)&v4, a1);
  char v4 = &unk_26C76C988;
  if (v5
    && (*(unsigned char *)(v5 + 57) & 8) == 0
    && (pxrInternal__aapl__pxrReserved__::UsdTyped::_IsCompatible((pxrInternal__aapl__pxrReserved__::UsdTyped *)&v4) & 1) != 0
    || (v2[0] = "usdGeom/cylinder_1.cpp",
        v2[1] = "_ComputeExtentForCylinder",
        v2[2] = 306,
        v2[3] = "BOOL pxrInternal__aapl__pxrReserved__::_ComputeExtentForCylinder(const UsdGeomBoundable &, const UsdTime"
                "Code &, const GfMatrix4d *, VtVec3fArray *)",
        char v3 = 0,
        (pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v2, "cylinderSchema", 0) & 1) != 0))
  {
    pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1::GetHeightAttr((pxrInternal__aapl__pxrReserved__::UsdGeomCylinder_1 *)&v4, (uint64_t)v2);
    pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<double>();
  }
  pxrInternal__aapl__pxrReserved__::UsdGeomGprim::~UsdGeomGprim((pxrInternal__aapl__pxrReserved__::UsdGeomGprim *)&v4);
  return 0;
}

void sub_216F15BD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  pxrInternal__aapl__pxrReserved__::UsdGeomGprim::~UsdGeomGprim((pxrInternal__aapl__pxrReserved__::UsdGeomGprim *)va);
  _Unwind_Resume(a1);
}

void sub_216F15C50()
{
  sub_216F169A8();
  sub_216779094(__p, "HermiteCurves");
  sub_216F16AD4((char *)__p);
  if (v1 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216F15CA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves::~UsdGeomHermiteCurves(pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves *this)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomCurves::~UsdGeomCurves(this);

  operator delete(v1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves::Get(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  uint64_t v6 = sub_216D24140(a1);
  if (v7 & 1 | (unint64_t)v6)
  {
    double v8 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_216D01530(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(v8, a2, (uint64_t)&v9);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76C9E0;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  else
  {
    float v9 = "usdGeom/hermiteCurves.cpp";
    uint64_t v10 = (atomic_ullong *)"Get";
    uint64_t v11 = 57;
    unint64_t v12 = (unint64_t)"static UsdGeomHermiteCurves pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves::Get(cons"
                            "t UsdStagePtr &, const SdfPath &)";
    char v13 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v9, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v9) = 1;
    uint64_t v10 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v11);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v11 + 1);
    unint64_t v12 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76C9E0;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  if (v10) {
    sub_216D16E0C(v10);
  }
}

void sub_216F15E6C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216D16AD8((uint64_t)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves::Define(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92A80, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92A80))
  {
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken((pxrInternal__aapl__pxrReserved__::TfToken *)&qword_267B92A78, "HermiteCurves");
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &qword_267B92A78, &dword_216758000);
    __cxa_guard_release(&qword_267B92A80);
  }
  uint64_t v6 = sub_216D24140(a1);
  if (v7 & 1 | (unint64_t)v6)
  {
    double v8 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_216D01530(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::DefinePrim(v8, a2, &qword_267B92A78, (uint64_t)&v9);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76C9E0;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  else
  {
    float v9 = "usdGeom/hermiteCurves.cpp";
    uint64_t v10 = (atomic_ullong *)"Define";
    uint64_t v11 = 70;
    unint64_t v12 = (unint64_t)"static UsdGeomHermiteCurves pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves::Define(c"
                            "onst UsdStagePtr &, const SdfPath &)";
    char v13 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v9, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v9) = 1;
    uint64_t v10 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v11);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v11 + 1);
    unint64_t v12 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76C9E0;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  if (v10) {
    sub_216D16E0C(v10);
  }
}

void sub_216F16078(_Unwind_Exception *a1)
{
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves::_GetSchemaKind(pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves *this)
{
  return 3;
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves::_GetStaticTfType(pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92A90, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92A90))
  {
    __cxa_guard_release(&qword_267B92A90);
  }
  return &qword_267B92A88;
}

void sub_216F16120(_Unwind_Exception *a1)
{
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves::_IsTypedSchema(pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92AA0, memory_order_acquire) & 1) == 0)
  {
    unint64_t v2 = (pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves *)__cxa_guard_acquire(&qword_267B92AA0);
    if (v2)
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves::_GetStaticTfType(v2);
      byte_267B92A98 = sub_216D16508((char *)&qword_267B92A88, v3, v4);
      __cxa_guard_release(&qword_267B92AA0);
    }
  }
  return byte_267B92A98;
}

void sub_216F161A0(_Unwind_Exception *a1)
{
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves::_GetTfType(pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves *this)
{
  return &qword_267B92A88;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves::GetTangentsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  char v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    char v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 1048), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F16278(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves::CreateTangentsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  float v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    float v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 1048), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 688), 0, 0, a2, a3, a4);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves::GetSchemaAttributeNames(pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves *this)
{
  int v1 = (int)this;
  v7[1] = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92AC0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92AC0))
  {
    char v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v3) {
      char v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v4 = *((void *)v3 + 131);
    v7[0] = v4;
    if ((v4 & 7) != 0)
    {
      uint64_t v5 = (atomic_uint *)(v4 & 0xFFFFFFFFFFFFFFF8);
      if ((atomic_fetch_add_explicit(v5, 2u, memory_order_relaxed) & 1) == 0) {
        v7[0] = (uint64_t)v5;
      }
    }
    sub_216D30CFC(&qword_267B92AA8, v7, 1uLL);
    if ((v7[0] & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v7[0] & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    __cxa_atexit((void (*)(void *))sub_216B554D0, &qword_267B92AA8, &dword_216758000);
    __cxa_guard_release(&qword_267B92AC0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92AE0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92AE0))
  {
    SchemaAttributeNames = pxrInternal__aapl__pxrReserved__::UsdGeomCurves::GetSchemaAttributeNames((pxrInternal__aapl__pxrReserved__::UsdGeomCurves *)1);
    sub_216F16518((uint64_t **)SchemaAttributeNames);
    __cxa_atexit((void (*)(void *))sub_216B554D0, &qword_267B92AC8, &dword_216758000);
    __cxa_guard_release(&qword_267B92AE0);
  }
  if (v1) {
    return &qword_267B92AC8;
  }
  else {
    return &qword_267B92AA8;
  }
}

void sub_216F164D0(_Unwind_Exception *a1)
{
}

void *sub_216F16518(uint64_t **a1)
{
  qword_267B92AD0 = 0;
  unk_267B92AD8 = 0;
  qword_267B92AC8 = 0;
  sub_216973388((char **)&qword_267B92AC8, ((*(void *)algn_267B92AB0 - qword_267B92AA8) >> 3) + a1[1] - *a1);
  sub_216AE27E0(&qword_267B92AC8, (void *)qword_267B92AD0, *a1, a1[1], a1[1] - *a1);
  return sub_216AE27E0(&qword_267B92AC8, (void *)qword_267B92AD0, (uint64_t *)qword_267B92AA8, *(uint64_t **)algn_267B92AB0, (*(void *)algn_267B92AB0 - qword_267B92AA8) >> 3);
}

void sub_216F165B0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216889A04((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves::PointAndTangentArrays::PointAndTangentArrays(uint64_t a1, unint64_t *a2)
{
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  unint64_t v3 = *a2;
  if (*a2)
  {
    if (v3)
    {
      float32x2_t v20 = "usdGeom/hermiteCurves.cpp";
      uint64_t v21 = "PointAndTangentArrays";
      uint64_t v22 = 175;
      unint64_t v23 = "pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves::PointAndTangentArrays::PointAndTangentArrays(const V"
            "tArray<GfVec3f> &)";
      char v24 = 0;
      pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v20, 1, (pxrInternal__aapl__pxrReserved__ *)"Cannot separate odd-shaped interleaved points and tangents data.");
    }
    else
    {
      LODWORD(v21) = 0;
      float32x2_t v20 = 0;
      float64x2_t v25 = &v20;
      sub_2168FD278((unint64_t *)a1, v3 >> 1, (uint64_t **)&v25);
      unint64_t v5 = *a2 >> 1;
      LODWORD(v21) = 0;
      float32x2_t v20 = 0;
      float64x2_t v25 = &v20;
      sub_2168FD278((unint64_t *)(a1 + 40), v5, (uint64_t **)&v25);
      int v6 = (uint64_t *)a2[4];
      sub_2168FD54C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a1, v7, v8);
      uint64_t v9 = *(void *)(a1 + 32);
      sub_2168FD54C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)(a1 + 40), v10, v11);
      for (uint64_t i = *(void *)(a1 + 72); v6 != (uint64_t *)(a2[4] + 12 * *a2); v6 += 3)
      {
        uint64_t v15 = *v6;
        *(_DWORD *)(v9 + 8) = *((_DWORD *)v6 + 2);
        *(void *)uint64_t v9 = v15;
        v9 += 12;
        uint64_t v16 = *(uint64_t *)((char *)v6 + 12);
        *(_DWORD *)(i + 8) = *((_DWORD *)v6 + 5);
        *(void *)uint64_t i = v16;
        i += 12;
      }
      sub_2168FD54C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a1, v12, v13);
      if (v9 != *(void *)(a1 + 32) + 12 * *(void *)a1)
      {
        float32x2_t v20 = "usdGeom/hermiteCurves.cpp";
        uint64_t v21 = "PointAndTangentArrays";
        uint64_t v22 = 191;
        unint64_t v23 = "pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves::PointAndTangentArrays::PointAndTangentArrays(const"
              " VtArray<GfVec3f> &)";
        char v24 = 0;
        pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v20, "pointsIt == _points.end()", 0);
      }
      sub_2168FD54C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)(a1 + 40), v17, v18);
      if (i != *(void *)(a1 + 72) + 12 * *(void *)(a1 + 40))
      {
        float32x2_t v20 = "usdGeom/hermiteCurves.cpp";
        uint64_t v21 = "PointAndTangentArrays";
        uint64_t v22 = 192;
        unint64_t v23 = "pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves::PointAndTangentArrays::PointAndTangentArrays(const"
              " VtArray<GfVec3f> &)";
        char v24 = 0;
        pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v20, "tangentsIt == _tangents.end()", 0);
      }
    }
  }
  return a1;
}

void sub_216F167DC(_Unwind_Exception *a1)
{
  sub_2168F83DC(v2);
  sub_2168F83DC(v1);
  _Unwind_Resume(a1);
}

double pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves::PointAndTangentArrays::Interleave@<D0>(pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves::PointAndTangentArrays *this@<X0>, uint64_t a2@<X8>)
{
  if (*(void *)this)
  {
    uint64_t v4 = (pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)sub_2168FD0E8(a2, 2 * *(void *)this);
    sub_2168FD54C(v4, v5, v6);
    uint64_t v9 = *(void *)(a2 + 32);
    uint64_t v10 = (uint64_t *)*((void *)this + 4);
    for (uint64_t i = (uint64_t *)*((void *)this + 9); ; uint64_t i = (uint64_t *)((char *)i + 12))
    {
      sub_2168FD54C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a2, v7, v8);
      if (v9 == *(void *)(a2 + 32) + 12 * *(void *)a2) {
        break;
      }
      uint64_t v13 = *v10;
      *(_DWORD *)(v9 + 8) = *((_DWORD *)v10 + 2);
      *(void *)uint64_t v9 = v13;
      uint64_t v10 = (uint64_t *)((char *)v10 + 12);
      uint64_t v14 = *i;
      *(_DWORD *)(v9 + 2sub_2168EBBB8(&a9, 0) = *((_DWORD *)i + 2);
      *(void *)(v9 + 12) = v14;
      v9 += 24;
    }
    if (v10 != (uint64_t *)(*((void *)this + 4) + 12 * *(void *)this))
    {
      uint64_t v15 = "usdGeom/hermiteCurves.cpp";
      uint64_t v16 = "Interleave";
      uint64_t v17 = 212;
      uint64_t v18 = "VtVec3fArray pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves::PointAndTangentArrays::Interleave() const";
      char v19 = 0;
      pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v15, "pointsIt == GetPoints().cend()", 0);
    }
    if (i != (uint64_t *)(*((void *)this + 9) + 12 * *((void *)this + 5)))
    {
      uint64_t v15 = "usdGeom/hermiteCurves.cpp";
      uint64_t v16 = "Interleave";
      uint64_t v17 = 213;
      uint64_t v18 = "VtVec3fArray pxrInternal__aapl__pxrReserved__::UsdGeomHermiteCurves::PointAndTangentArrays::Interleave() const";
      char v19 = 0;
      pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v15, "tangentsIt == GetTangents().cend()", 0);
    }
  }
  else
  {
    *(void *)(a2 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

void sub_216F16984(_Unwind_Exception *a1)
{
  sub_2168F83DC(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_216F169A8()
{
  sub_216851EE4((uint64_t)&v6, "Tf", "TfType::Define");
  sub_216F05F9C((unint64_t **)v5);
  unint64_t v0 = pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p, (char **)v5, 0);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  if (v5[0])
  {
    v5[1] = v5[0];
    operator delete(v5[0]);
  }
  while (v7--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v6);
  return v0;
}

void sub_216F16A88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a15) {
    operator delete(a15);
  }
  sub_21684E6B8(v16 - 32);
  _Unwind_Resume(a1);
}

void sub_216F16AD4(char *a1)
{
  unint64_t v2 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  unint64_t v3 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  pxrInternal__aapl__pxrReserved__::TfType::AddAlias((uint64_t *)&v3, v2, a1);
}

void sub_216F16B68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomImageable::~UsdGeomImageable(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this)
{
  pxrInternal__aapl__pxrReserved__::UsdTyped::~UsdTyped(this);

  operator delete(v1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomImageable::Get(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  uint64_t v6 = sub_216D24140(a1);
  if (v7 & 1 | (unint64_t)v6)
  {
    uint64_t v8 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_216D01530(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(v8, a2, (uint64_t)&v9);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76CA38;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  else
  {
    uint64_t v9 = "usdGeom/imageable.cpp";
    uint64_t v10 = (atomic_ullong *)"Get";
    uint64_t v11 = 51;
    unint64_t v12 = (unint64_t)"static UsdGeomImageable pxrInternal__aapl__pxrReserved__::UsdGeomImageable::Get(const UsdSta"
                            "gePtr &, const SdfPath &)";
    char v13 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v9, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v9) = 1;
    uint64_t v10 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v11);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v11 + 1);
    unint64_t v12 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76CA38;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  if (v10) {
    sub_216D16E0C(v10);
  }
}

void sub_216F16D40(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216D16AD8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomImageable::_GetSchemaKind(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this)
{
  return 2;
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomImageable::_GetStaticTfType(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92AF0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92AF0))
  {
    __cxa_guard_release(&qword_267B92AF0);
  }
  return &qword_267B92AE8;
}

void sub_216F16DD0(_Unwind_Exception *a1)
{
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomImageable::_IsTypedSchema(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92B00, memory_order_acquire) & 1) == 0)
  {
    unint64_t v2 = (pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)__cxa_guard_acquire(&qword_267B92B00);
    if (v2)
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomImageable::_GetStaticTfType(v2);
      byte_267B92AF8 = sub_216D16508((char *)&qword_267B92AE8, v3, v4);
      __cxa_guard_release(&qword_267B92B00);
    }
  }
  return byte_267B92AF8;
}

void sub_216F16E50(_Unwind_Exception *a1)
{
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomImageable::_GetTfType(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this)
{
  return &qword_267B92AE8;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomImageable::GetVisibilityAttr(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  unint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    unint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 1256), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F16F28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomImageable::CreateVisibilityAttr(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  uint64_t v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    uint64_t v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 1256), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 88), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomImageable::GetPurposeAttr(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  unint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    unint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 912), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F17090(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomImageable::CreatePurposeAttr(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  uint64_t v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    uint64_t v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 912), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 88), 0, 1, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomImageable::GetProxyPrimRel(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  unint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    unint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetRelationship((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 896), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F171F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomImageable::CreateProxyPrimRel(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this@<X0>, pxrInternal__aapl__pxrReserved__::UsdRelationship *a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  unint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    unint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::CreateRelationship((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 896), 0, a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F172B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomImageable::GetSchemaAttributeNames(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this)
{
  int v1 = (int)this;
  uint64_t v14 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92B20, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92B20))
  {
    unint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v3) {
      unint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v4 = *((void *)v3 + 157);
    uint64_t v12 = v4;
    if ((v4 & 7) != 0)
    {
      char v5 = (atomic_uint *)(v4 & 0xFFFFFFFFFFFFFFF8);
      if ((atomic_fetch_add_explicit(v5, 2u, memory_order_relaxed) & 1) == 0) {
        uint64_t v12 = (uint64_t)v5;
      }
    }
    int v6 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v6) {
      int v6 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    int v7 = (atomic_uint *)*((void *)v6 + 114);
    char v13 = v7;
    if ((v7 & 7) != 0)
    {
      uint64_t v8 = (atomic_uint *)((unint64_t)v7 & 0xFFFFFFFFFFFFFFF8);
      if ((atomic_fetch_add_explicit(v8, 2u, memory_order_relaxed) & 1) == 0) {
        char v13 = v8;
      }
    }
    sub_216D30CFC(&qword_267B92B08, &v12, 2uLL);
    for (uint64_t i = 8; i != -8; i -= 8)
    {
      uint64_t v10 = *(uint64_t *)((char *)&v12 + i);
      if ((v10 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v10 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
    }
    __cxa_atexit((void (*)(void *))sub_216B554D0, &qword_267B92B08, &dword_216758000);
    __cxa_guard_release(&qword_267B92B20);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92B40, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92B40))
  {
    SchemaAttributeNames = pxrInternal__aapl__pxrReserved__::UsdTyped::GetSchemaAttributeNames((pxrInternal__aapl__pxrReserved__::UsdTyped *)1);
    sub_216F17524((uint64_t **)SchemaAttributeNames);
    __cxa_atexit((void (*)(void *))sub_216B554D0, &qword_267B92B28, &dword_216758000);
    __cxa_guard_release(&qword_267B92B40);
  }
  if (v1) {
    return &qword_267B92B28;
  }
  else {
    return &qword_267B92B08;
  }
}

void sub_216F174AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if ((a10 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(a10 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  __cxa_guard_abort(&qword_267B92B20);
  _Unwind_Resume(a1);
}

void *sub_216F17524(uint64_t **a1)
{
  qword_267B92B30 = 0;
  unk_267B92B38 = 0;
  qword_267B92B28 = 0;
  sub_216973388((char **)&qword_267B92B28, ((*(void *)algn_267B92B10 - qword_267B92B08) >> 3) + a1[1] - *a1);
  sub_216AE27E0(&qword_267B92B28, (void *)qword_267B92B30, *a1, a1[1], a1[1] - *a1);
  return sub_216AE27E0(&qword_267B92B28, (void *)qword_267B92B30, (uint64_t *)qword_267B92B08, *(uint64_t **)algn_267B92B10, (*(void *)algn_267B92B10 - qword_267B92B08) >> 3);
}

void sub_216F175BC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216889A04((void ***)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomImageable::CreatePrimvar(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this@<X0>, const pxrInternal__aapl__pxrReserved__::TfToken *a2@<X1>, const pxrInternal__aapl__pxrReserved__::SdfValueTypeName *a3@<X2>, const pxrInternal__aapl__pxrReserved__::TfToken *a4@<X3>, int a5@<W4>, pxrInternal__aapl__pxrReserved__::UsdGeomPrimvar *a6@<X8>)
{
  sub_216D16CFC((uint64_t)&v11, (uint64_t *)this + 1, (_DWORD *)this + 4);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)v16, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v11);
  v16[3] = 0;
  v16[0] = &unk_26C76D128;
  pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI::CreatePrimvar((pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI *)v16, a2, a3, a4, a5, a6);
  pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI::~UsdGeomPrimvarsAPI((pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI *)v16);
  if ((v15 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v15 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v14);
  sub_21697C414(&v13);
  if (v12) {
    sub_216D16E0C(v12);
  }
}

void sub_216F176C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomImageable::GetPrimvar(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this@<X0>, const pxrInternal__aapl__pxrReserved__::TfToken *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdGeomPrimvar *a3@<X8>)
{
  sub_216D16CFC((uint64_t)&v5, (uint64_t *)this + 1, (_DWORD *)this + 4);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)v10, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v5);
  void v10[3] = 0;
  v10[0] = &unk_26C76D128;
  pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI::GetPrimvar((pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI *)v10, a2, a3);
  pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI::~UsdGeomPrimvarsAPI((pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI *)v10);
  if ((v9 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v9 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v8);
  sub_21697C414(&v7);
  if (v6) {
    sub_216D16E0C(v6);
  }
}

void sub_216F177B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomImageable::GetPrimvars(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this@<X0>, uint64_t *a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v3, (uint64_t *)this + 1, (_DWORD *)this + 4);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)v8, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v3);
  _OWORD v8[3] = 0;
  v8[0] = &unk_26C76D128;
  pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI::GetPrimvars((pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI *)v8, a2);
  pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI::~UsdGeomPrimvarsAPI((pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI *)v8);
  if ((v7 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v7 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v6);
  sub_21697C414(&v5);
  if (v4) {
    sub_216D16E0C(v4);
  }
}

void sub_216F1788C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomImageable::GetAuthoredPrimvars(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this@<X0>, uint64_t *a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v3, (uint64_t *)this + 1, (_DWORD *)this + 4);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)v8, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v3);
  _OWORD v8[3] = 0;
  v8[0] = &unk_26C76D128;
  pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI::GetAuthoredPrimvars((pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI *)v8, a2);
  pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI::~UsdGeomPrimvarsAPI((pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI *)v8);
  if ((v7 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v7 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v6);
  sub_21697C414(&v5);
  if (v4) {
    sub_216D16E0C(v4);
  }
}

void sub_216F17968(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomImageable::HasPrimvar(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this, const pxrInternal__aapl__pxrReserved__::TfToken *a2)
{
  sub_216D16CFC((uint64_t)&v5, (uint64_t *)this + 1, (_DWORD *)this + 4);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)v10, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v5);
  void v10[3] = 0;
  v10[0] = &unk_26C76D128;
  uint64_t HasPrimvar = pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI::HasPrimvar((pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI *)v10, a2);
  pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI::~UsdGeomPrimvarsAPI((pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI *)v10);
  if ((v9 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v9 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v8);
  sub_21697C414(&v7);
  if (v6) {
    sub_216D16E0C(v6);
  }
  return HasPrimvar;
}

void sub_216F17A4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
}

void *pxrInternal__aapl__pxrReserved__::UsdGeomImageable::GetOrderedPurposeTokens(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92B60, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92B60))
  {
    unint64_t v2 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v2) {
      unint64_t v2 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v3 = *((void *)v2 + 29);
    uint64_t v12 = v3;
    if ((v3 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v3 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v12 &= 0xFFFFFFFFFFFFFFF8;
    }
    uint64_t v4 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v4) {
      uint64_t v4 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v5 = *((void *)v4 + 119);
    uint64_t v13 = v5;
    if ((v5 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v5 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v13 &= 0xFFFFFFFFFFFFFFF8;
    }
    int v6 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v6) {
      int v6 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v7 = *((void *)v6 + 111);
    uint64_t v14 = v7;
    if ((v7 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v7 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v14 &= 0xFFFFFFFFFFFFFFF8;
    }
    int v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v8) {
      int v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v9 = *((void *)v8 + 49);
    uint64_t v15 = v9;
    if ((v9 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v9 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v15 &= 0xFFFFFFFFFFFFFFF8;
    }
    sub_216D30CFC(qword_267B92B48, &v12, 4uLL);
    for (uint64_t i = 24; i != -8; i -= 8)
    {
      uint64_t v11 = *(uint64_t *)((char *)&v12 + i);
      if ((v11 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v11 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
    }
    __cxa_atexit((void (*)(void *))sub_216B554D0, qword_267B92B48, &dword_216758000);
    __cxa_guard_release(&qword_267B92B60);
  }
  return qword_267B92B48;
}

void sub_216F17C8C(_Unwind_Exception *a1)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputeVisibility(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this@<X0>, const pxrInternal__aapl__pxrReserved__::UsdTimeCode *a2@<X1>, atomic_uint **a3@<X8>)
{
  sub_216D16CFC((uint64_t)&v5, (uint64_t *)this + 1, (_DWORD *)this + 4);
  sub_216F17D9C((const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v5, (uint64_t)a2, a3);
  if ((v9 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v9 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v8);
  sub_21697C414(&v7);
  if (v6) {
    sub_216D16E0C(v6);
  }
}

void sub_216F17D88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_216F17D9C(const pxrInternal__aapl__pxrReserved__::UsdPrim *a1@<X0>, uint64_t a2@<X1>, atomic_uint **a3@<X8>)
{
  uint64_t v17 = 0;
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)&v15, a1);
  uint64_t v15 = &unk_26C76CA38;
  if (v16
    && (*(unsigned char *)(v16 + 57) & 8) == 0
    && pxrInternal__aapl__pxrReserved__::UsdTyped::_IsCompatible((pxrInternal__aapl__pxrReserved__::UsdTyped *)&v15))
  {
    pxrInternal__aapl__pxrReserved__::UsdGeomImageable::GetVisibilityAttr((pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)&v15, (uint64_t)&v10);
    pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::TfToken>();
  }
  pxrInternal__aapl__pxrReserved__::UsdTyped::~UsdTyped((pxrInternal__aapl__pxrReserved__::UsdTyped *)&v15);
  sub_216D6B1F8((uint64_t)a1, (uint64_t)&v10);
  if (pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)&v10, v6))
  {
    sub_216F17D9C(&v10, a2);
    if ((v14 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v14 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v13);
    sub_21697C414(&v12);
    if (v11) {
      sub_216D16E0C(v11);
    }
  }
  else
  {
    if ((v14 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v14 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v13);
    sub_21697C414(&v12);
    if (v11) {
      sub_216D16E0C(v11);
    }
    int v7 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v7) {
      int v7 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    int v8 = (atomic_uint *)*((void *)v7 + 59);
    *a3 = v8;
    if ((v8 & 7) != 0)
    {
      uint64_t v9 = (atomic_uint *)((unint64_t)v8 & 0xFFFFFFFFFFFFFFF8);
      if ((atomic_fetch_add_explicit(v9, 2u, memory_order_relaxed) & 1) == 0) {
        *a3 = v9;
      }
    }
  }
  if ((v17 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v17 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
}

void sub_216F17FF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  uint64_t v14 = *(void *)(v13 - 40);
  if ((v14 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v14 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomImageable::GetPurposeVisibilityAttr(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this@<X0>, const pxrInternal__aapl__pxrReserved__::TfToken *a2@<X1>, uint64_t a3@<X8>)
{
  int v6 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v6) {
    int v6 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  if ((*(void *)a2 & 0xFFFFFFFFFFFFFFF8) == (*((void *)v6 + 29) & 0xFFFFFFFFFFFFFFF8))
  {
    pxrInternal__aapl__pxrReserved__::UsdGeomImageable::GetVisibilityAttr(this, a3);
  }
  else
  {
    sub_216D16CFC((uint64_t)&v7, (uint64_t *)this + 1, (_DWORD *)this + 4);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)&v12, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v7);
    uint64_t v14 = 0;
    int v12 = (unsigned int (**)(void **))&unk_26C76D2E0;
    if ((v11 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v11 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v10);
    sub_21697C414(&v9);
    if (v8) {
      sub_216D16E0C(v8);
    }
    if (v13 && (*(unsigned char *)(v13 + 57) & 8) == 0 && v12[4]((void **)&v12))
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomVisibilityAPI::GetPurposeVisibilityAttr((pxrInternal__aapl__pxrReserved__::UsdGeomVisibilityAPI *)&v12, a2, a3);
      pxrInternal__aapl__pxrReserved__::UsdGeomVisibilityAPI::~UsdGeomVisibilityAPI((pxrInternal__aapl__pxrReserved__::UsdGeomVisibilityAPI *)&v12);
    }
    else
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomVisibilityAPI::~UsdGeomVisibilityAPI((pxrInternal__aapl__pxrReserved__::UsdGeomVisibilityAPI *)&v12);
      *(_DWORD *)a3 = 3;
      *(void *)(a3 + 8) = 0;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a3 + 16));
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a3 + 20));
      *(void *)(a3 + 24) = 0;
    }
  }
}

void sub_216F18200(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  pxrInternal__aapl__pxrReserved__::UsdGeomVisibilityAPI::~UsdGeomVisibilityAPI((pxrInternal__aapl__pxrReserved__::UsdGeomVisibilityAPI *)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputeEffectiveVisibility(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this@<X0>, const pxrInternal__aapl__pxrReserved__::TfToken *a2@<X1>, const pxrInternal__aapl__pxrReserved__::UsdTimeCode *a3@<X2>, atomic_uint **a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputeVisibility(this, a3, (atomic_uint **)&v15);
  int v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    int v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  int v9 = (atomic_uint *)(v15 & 0xFFFFFFFFFFFFFFF8);
  unint64_t v10 = *((void *)v8 + 62) & 0xFFFFFFFFFFFFFFF8;
  if ((v15 & 7) != 0) {
    atomic_fetch_add_explicit(v9, 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v11 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (v9 == (atomic_uint *)v10)
  {
    if (!v11) {
      uint64_t v11 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    int v12 = (atomic_uint *)*((void *)v11 + 62);
  }
  else
  {
    if (!v11) {
      uint64_t v11 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    if ((*(void *)a2 & 0xFFFFFFFFFFFFFFF8) != (*((void *)v11 + 29) & 0xFFFFFFFFFFFFFFF8))
    {
      sub_216D16CFC((uint64_t)&v15, (uint64_t *)this + 1, (_DWORD *)this + 4);
      sub_216F183E0((const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v15, a2, (uint64_t)a3, a4);
      if ((v19 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v19 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v18);
      sub_21697C414(&v17);
      if (v16) {
        sub_216D16E0C(v16);
      }
      return;
    }
    uint64_t v13 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v13) {
      uint64_t v13 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    int v12 = (atomic_uint *)*((void *)v13 + 158);
  }
  *a4 = v12;
  if ((v12 & 7) != 0)
  {
    uint64_t v14 = (atomic_uint *)((unint64_t)v12 & 0xFFFFFFFFFFFFFFF8);
    if ((atomic_fetch_add_explicit(v14, 2u, memory_order_relaxed) & 1) == 0) {
      *a4 = v14;
    }
  }
}

void sub_216F183A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  if ((a9 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(a9 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  _Unwind_Resume(exception_object);
}

void sub_216F183E0(const pxrInternal__aapl__pxrReserved__::UsdPrim *a1@<X0>, const pxrInternal__aapl__pxrReserved__::TfToken *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)&v27, a1);
  float64x2_t v27 = &unk_26C76CA38;
  if (v28
    && (*(unsigned char *)(v28 + 57) & 8) == 0
    && pxrInternal__aapl__pxrReserved__::UsdTyped::_IsCompatible((pxrInternal__aapl__pxrReserved__::UsdTyped *)&v27))
  {
    *a4 = 0;
    pxrInternal__aapl__pxrReserved__::UsdGeomImageable::GetPurposeVisibilityAttr((pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)&v27, a2, (uint64_t)&v22);
    if (pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)&v22, v8)&& pxrInternal__aapl__pxrReserved__::UsdAttribute::HasAuthoredValue((pxrInternal__aapl__pxrReserved__::UsdAttribute *)&v22))
    {
      pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::TfToken>();
    }
    if ((v25 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v25 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v24 + 1);
    sub_21697C414(&v24);
    if (v23) {
      sub_216D16E0C(v23);
    }
    if ((*a4 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(*a4 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  pxrInternal__aapl__pxrReserved__::UsdTyped::~UsdTyped((pxrInternal__aapl__pxrReserved__::UsdTyped *)&v27);
  sub_216D6B1F8((uint64_t)a1, (uint64_t)&v22);
  int IsDefined = pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)&v22, v9);
  char v11 = IsDefined;
  if (IsDefined) {
    sub_216F183E0(&v22, a2, a3);
  }
  if ((v25 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v25 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v24 + 1);
  sub_21697C414(&v24);
  if (v23) {
    sub_216D16E0C(v23);
  }
  if ((v11 & 1) == 0)
  {
    int v12 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v12) {
      int v12 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    unint64_t v13 = *(void *)a2 & 0xFFFFFFFFFFFFFFF8;
    unint64_t v14 = *((void *)v12 + 49) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v15 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (v13 != v14)
    {
      if (!v15) {
        unint64_t v15 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      }
      if ((*(void *)a2 & 0xFFFFFFFFFFFFFFF8) == (*((void *)v15 + 111) & 0xFFFFFFFFFFFFFFF8)) {
        goto LABEL_32;
      }
      uint64_t v16 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      if (!v16) {
        uint64_t v16 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      }
      unint64_t v17 = *(void *)a2 & 0xFFFFFFFFFFFFFFF8;
      if (v17 == (*((void *)v16 + 119) & 0xFFFFFFFFFFFFFFF8))
      {
LABEL_32:
        uint64_t v19 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
        if (!v19) {
          uint64_t v19 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
        }
        uint64_t v20 = *((void *)v19 + 59);
        goto LABEL_40;
      }
      uint64_t v22 = "usdGeom/imageable.cpp";
      unint64_t v23 = (atomic_ullong *)"_ComputePurposeVisibility";
      uint64_t v24 = 315;
      unint64_t v25 = (unint64_t)"TfToken pxrInternal__aapl__pxrReserved__::_ComputePurposeVisibility(const UsdPrim &, const"
                              " TfToken &, const UsdTimeCode &)";
      char v26 = 0;
      if (v17)
      {
        int v18 = (const char *)(v17 + 16);
        if (*(char *)(v17 + 39) < 0) {
          int v18 = *(const char **)v18;
        }
      }
      else
      {
        int v18 = "";
      }
      sub_216D0162C((uint64_t)a1, (int *)&v27);
      Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v27);
      pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v22, 1, (pxrInternal__aapl__pxrReserved__ *)"Unexpected purpose '%s' computing purpose visibility for <%s>.", v18, Text);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v27 + 1);
      sub_21697C414(&v27);
      unint64_t v15 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    if (!v15) {
      unint64_t v15 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v20 = *((void *)v15 + 62);
LABEL_40:
    *a4 = v20;
    if ((v20 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v20 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      *a4 &= 0xFFFFFFFFFFFFFFF8;
    }
  }
}

void sub_216F1872C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  if ((*v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(*v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::UsdTyped::~UsdTyped((pxrInternal__aapl__pxrReserved__::UsdTyped *)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomImageable::MakeVisible(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this, const pxrInternal__aapl__pxrReserved__::UsdTimeCode *a2)
{
  char v2 = 0;
  sub_216F18838(this);
}

void sub_216F18824(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216D16AD8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_216F18838(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *a1)
{
  uint64_t v2 = 0;
  pxrInternal__aapl__pxrReserved__::UsdGeomImageable::GetVisibilityAttr(a1, (uint64_t)v1);
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::TfToken>();
}

void sub_216F1894C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if ((a14 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(a14 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  _Unwind_Resume(exception_object);
}

void sub_216F18988(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_216D6B1F8(a1, (uint64_t)v9);
  if (pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)v9, v5))
  {
    sub_216F18988(v9, a2, a3);
    int v6 = pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)&v7, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)v9);
    uint64_t v7 = &unk_26C76CA38;
    if (v8
      && (*(unsigned char *)(v8 + 57) & 8) == 0
      && pxrInternal__aapl__pxrReserved__::UsdTyped::_IsCompatible(v6))
    {
      sub_216F18838((pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)&v7);
    }
    pxrInternal__aapl__pxrReserved__::UsdTyped::~UsdTyped((pxrInternal__aapl__pxrReserved__::UsdTyped *)&v7);
  }
  if ((v13 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v13 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v12);
  sub_21697C414(&v11);
  if (v10) {
    sub_216D16E0C(v10);
  }
}

void sub_216F18D1C(_Unwind_Exception *a1)
{
  pxrInternal__aapl__pxrReserved__::UsdTyped::~UsdTyped((pxrInternal__aapl__pxrReserved__::UsdTyped *)(v1 - 144));
  sub_216D16AD8(v1 - 120);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomImageable::MakeInvisible(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this, const pxrInternal__aapl__pxrReserved__::UsdTimeCode *a2)
{
  uint64_t v4 = *MEMORY[0x263EF8340];
  v3.__type_name = 0;
  pxrInternal__aapl__pxrReserved__::UsdGeomImageable::CreateVisibilityAttr(this, &v3, 0, (uint64_t)v2);
  sub_2168EE084((uint64_t)&v3);
  v3.__vftable = 0;
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::TfToken>();
}

void sub_216F18ECC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if (a2) {
    sub_21675DB74(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputePurpose(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this@<X0>, void *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputePurposeInfo(this, (uint64_t)&v3);
  *a2 = v3;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputePurposeInfo(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this@<X0>, uint64_t a2@<X8>)
{
  sub_216F1911C(this, &v16);
  uint64_t v4 = v16;
  if (v16)
  {
    *(void *)a2 = v16;
    if ((v4 & 7) != 0)
    {
      uint64_t v5 = (atomic_uint *)(v4 & 0xFFFFFFFFFFFFFFF8);
      if ((atomic_fetch_add_explicit(v5, 2u, memory_order_relaxed) & 1) == 0) {
        *(void *)a2 = v5;
      }
    }
    *(unsigned char *)(a2 + 8) = 1;
  }
  else
  {
    sub_216D16CFC((uint64_t)&v10, (uint64_t *)this + 1, (_DWORD *)this + 4);
    sub_216F19234((uint64_t)&v10, &v15);
    if ((v14 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v14 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v13);
    sub_21697C414(&v12);
    if (v11) {
      sub_216D16E0C(v11);
    }
    uint64_t v6 = v15;
    if (v15)
    {
      *(void *)a2 = v15;
      if ((v6 & 7) != 0)
      {
        uint64_t v7 = (atomic_uint *)(v6 & 0xFFFFFFFFFFFFFFF8);
        if ((atomic_fetch_add_explicit(v7, 2u, memory_order_relaxed) & 1) == 0) {
          *(void *)a2 = v7;
        }
      }
      *(unsigned char *)(a2 + 8) = 1;
    }
    else
    {
      sub_216F19408(this, &v10);
      unint64_t v8 = v10;
      *(void *)a2 = v10;
      if ((v8 & 7) != 0)
      {
        int v9 = (atomic_uint *)(v8 & 0xFFFFFFFFFFFFFFF8);
        if ((atomic_fetch_add_explicit(v9, 2u, memory_order_relaxed) & 1) == 0) {
          *(void *)a2 = v9;
        }
      }
      *(unsigned char *)(a2 + 8) = 0;
      if ((v10 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v10 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
    }
    if ((v15 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v15 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  if ((v16 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v16 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
}

void sub_216F190C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if ((a13 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(a13 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  if ((a14 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(a14 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  _Unwind_Resume(exception_object);
}

void sub_216F1911C(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *((void *)a1 + 1);
  if (!v3
    || (*(unsigned char *)(v3 + 57) & 8) != 0
    || !(*(unsigned int (**)(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *))(*(void *)a1 + 32))(a1))
  {
    goto LABEL_11;
  }
  pxrInternal__aapl__pxrReserved__::UsdGeomImageable::GetPurposeAttr(a1, (uint64_t)&v7);
  BOOL HasAuthoredValue = pxrInternal__aapl__pxrReserved__::UsdAttribute::HasAuthoredValue((pxrInternal__aapl__pxrReserved__::UsdAttribute *)&v7);
  BOOL v6 = HasAuthoredValue;
  if (HasAuthoredValue)
  {
    *a2 = 0;
    pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::TfToken>();
  }
  if ((v11 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v11 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v10);
  sub_21697C414(&v9);
  if (v8) {
    sub_216D16E0C(v8);
  }
  if (!v6) {
LABEL_11:
  }
    *a2 = 0;
}

void sub_216F191FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if ((*v9 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(*v9 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  sub_216D2EDA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_216F19234(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_216D6B1F8(a1, (uint64_t)&v11);
  while (pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)&v11, v3))
  {
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)&v6, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v11);
    BOOL v6 = &unk_26C76CA38;
    sub_216F1911C((pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)&v6, a2);
    pxrInternal__aapl__pxrReserved__::UsdTyped::~UsdTyped((pxrInternal__aapl__pxrReserved__::UsdTyped *)&v6);
    if (*a2) {
      goto LABEL_13;
    }
    sub_216D6B1F8((uint64_t)&v11, (uint64_t)&v6);
    int v11 = (int)v6;
    uint64_t v4 = v7;
    uint64_t v7 = 0;
    uint64_t v5 = v12;
    int v12 = v4;
    if (v5) {
      sub_216D16E0C(v5);
    }
    sub_21697DE94(&v13, &v8);
    sub_21697DEEC(&v14, &v9);
    if ((v15 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v15 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    uint64_t v15 = v10;
    uint64_t v10 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
    sub_21697C414(&v8);
    if (v7) {
      sub_216D16E0C(v7);
    }
    if ((*a2 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(*a2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  *a2 = 0;
LABEL_13:
  if ((v15 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v15 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v14);
  sub_21697C414(&v13);
  if (v12) {
    sub_216D16E0C(v12);
  }
}

void sub_216F193C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  if ((*v5 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(*v5 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  sub_216D16AD8((uint64_t)va);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *sub_216F19408@<X0>(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *a1@<X0>, unint64_t *a2@<X8>)
{
  double result = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!result) {
    double result = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  unint64_t v5 = *((void *)result + 29);
  *a2 = v5;
  if ((v5 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v5 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    *a2 = v5 & 0xFFFFFFFFFFFFFFF8;
  }
  uint64_t v6 = *((void *)a1 + 1);
  if (v6 && (*(unsigned char *)(v6 + 57) & 8) == 0)
  {
    double result = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *))(*(void *)a1 + 32))(a1);
    if (result)
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomImageable::GetPurposeAttr(a1, (uint64_t)&v7);
      pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::TfToken>();
    }
  }
  return result;
}

void sub_216F1951C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_216D2EDA0((uint64_t)&a9);
  if ((*v9 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(*v9 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputePurposeInfo(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  sub_216F1911C(a1, &v14);
  uint64_t v6 = v14;
  if (v14)
  {
    *(void *)a3 = v14;
    if ((v6 & 7) != 0)
    {
      uint64_t v7 = (atomic_uint *)(v6 & 0xFFFFFFFFFFFFFFF8);
      if ((atomic_fetch_add_explicit(v7, 2u, memory_order_relaxed) & 1) == 0) {
        *(void *)a3 = v7;
      }
    }
    char v8 = 1;
LABEL_11:
    *(unsigned char *)(a3 + 8) = v8;
    goto LABEL_12;
  }
  if (*((unsigned char *)a2 + 8))
  {
    uint64_t v9 = *a2;
    *(void *)a3 = *a2;
    if ((v9 & 7) != 0)
    {
      uint64_t v10 = (atomic_uint *)(v9 & 0xFFFFFFFFFFFFFFF8);
      if ((atomic_fetch_add_explicit(v10, 2u, memory_order_relaxed) & 1) == 0) {
        *(void *)a3 = v10;
      }
    }
    char v8 = *((unsigned char *)a2 + 8);
    goto LABEL_11;
  }
  sub_216F19408(a1, &v13);
  unint64_t v11 = v13;
  *(void *)a3 = v13;
  if ((v11 & 7) != 0)
  {
    int v12 = (atomic_uint *)(v11 & 0xFFFFFFFFFFFFFFF8);
    if ((atomic_fetch_add_explicit(v12, 2u, memory_order_relaxed) & 1) == 0) {
      *(void *)a3 = v12;
    }
  }
  *(unsigned char *)(a3 + 8) = 0;
  if ((v13 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v13 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
LABEL_12:
  if ((v14 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v14 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
}

void pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputeProxyPrim(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this@<X0>, pxrInternal__aapl__pxrReserved__::UsdPrim *a2@<X1>, uint64_t a3@<X8>)
{
  int v61 = 1;
  int v62 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v63);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v64);
  uint64_t v65 = 0;
  sub_216D16CFC((uint64_t)v56, (uint64_t *)this + 1, (_DWORD *)this + 4);
  pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputePurposeInfo(this, (uint64_t)&v31);
  uint64_t v28 = v31;
  sub_216D16CFC((uint64_t)&v51, (uint64_t *)this + 1, (_DWORD *)this + 4);
  while (1)
  {
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)&v31, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v51);
    long long v31 = (pxrInternal__aapl__pxrReserved__::SdfPath **)&unk_26C76CA38;
    pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputePurposeInfo((pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)&v31, (uint64_t)&v43);
    uint64_t v4 = v43;
    unint64_t v5 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v5) {
      unint64_t v5 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v6 = (atomic_uint *)(v4 & 0xFFFFFFFFFFFFFFF8);
    uint64_t v7 = *((void *)v5 + 119);
    if ((v4 & 7) != 0) {
      atomic_fetch_add_explicit(v6, 0xFFFFFFFE, memory_order_release);
    }
    unint64_t v8 = v7 & 0xFFFFFFFFFFFFFFF8;
    pxrInternal__aapl__pxrReserved__::UsdTyped::~UsdTyped((pxrInternal__aapl__pxrReserved__::UsdTyped *)&v31);
    if (v6 != (atomic_uint *)v8) {
      break;
    }
    int v61 = v51;
    uint64_t v10 = v52;
    if (v52) {
      atomic_fetch_add_explicit(v52 + 6, 1uLL, memory_order_relaxed);
    }
    unint64_t v11 = v62;
    int v62 = v10;
    if (v11) {
      sub_216D16E0C(v11);
    }
    sub_2169C487C(&v63, &v53);
    sub_2169C48D4(&v64, &v54);
    sub_2168D2318(&v65, &v55);
    sub_216D6B1F8((uint64_t)&v51, (uint64_t)&v31);
    int v51 = (int)v31;
    int v12 = v32;
    uint64_t v32 = 0;
    unint64_t v13 = v52;
    char v52 = v12;
    if (v13) {
      sub_216D16E0C(v13);
    }
    sub_21697DE94(&v53, (int *)&v33);
    sub_21697DEEC(&v54, (int *)&v33 + 1);
    if ((v55 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)((unint64_t)v55 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    uint64_t v55 = v34;
    uint64_t v34 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v33 + 1);
    sub_21697C414(&v33);
    if (v32) {
      sub_216D16E0C(v32);
    }
  }
  if (!pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)&v61, v9))goto LABEL_39; {
  long long v48 = 0;
  }
  uint64_t v49 = 0;
  uint64_t v50 = 0;
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)&v31, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v61);
  long long v31 = (pxrInternal__aapl__pxrReserved__::SdfPath **)&unk_26C76CA38;
  pxrInternal__aapl__pxrReserved__::UsdGeomImageable::GetProxyPrimRel((pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)&v31, (uint64_t)&v43);
  pxrInternal__aapl__pxrReserved__::UsdTyped::~UsdTyped((pxrInternal__aapl__pxrReserved__::UsdTyped *)&v31);
  if (!pxrInternal__aapl__pxrReserved__::UsdRelationship::GetForwardedTargets((pxrInternal__aapl__pxrReserved__::UsdObject *)&v43, (uint64_t *)&v48))
  {
LABEL_34:
    if ((v47 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v47 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v46);
    sub_21697C414(&v45);
    if (v44) {
      sub_216D16E0C(v44);
    }
    long long v31 = &v48;
    sub_216981168((void ***)&v31);
LABEL_39:
    *(_DWORD *)a3 = 1;
    *(void *)(a3 + 8) = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a3 + 16));
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a3 + 20));
    *(void *)(a3 + 24) = 0;
    goto LABEL_40;
  }
  if (v49 - (void)v48 != 8)
  {
    if ((unint64_t)(v49 - (void)v48) >= 9)
    {
      long long v31 = (pxrInternal__aapl__pxrReserved__::SdfPath **)"usdGeom/imageable.cpp";
      uint64_t v32 = (atomic_ullong *)"ComputeProxyPrim";
      uint64_t v33 = 561;
      uint64_t v34 = "UsdPrim pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputeProxyPrim(UsdPrim *) const";
      char v35 = 0;
      sub_216D0162C((uint64_t)&v61, &v37);
      Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v37);
      pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v31, (pxrInternal__aapl__pxrReserved__ *)"Found multiple targets for proxyPrim rel on prim <%s>", v19, Text);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v38);
      sub_21697C414(&v37);
    }
    goto LABEL_34;
  }
  pxrInternal__aapl__pxrReserved__::UsdObject::GetStage((pxrInternal__aapl__pxrReserved__::UsdObject *)v56, v14, &v31);
  uint64_t v15 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_216D01530((uint64_t *)&v31);
  pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(v15, v48, (uint64_t)&v37);
  unint64_t v17 = v32;
  if (v32 && atomic_fetch_add_explicit((atomic_uint *volatile)v32 + 2, 0xFFFFFFFF, memory_order_release) == 1) {
    (*(void (**)(atomic_ullong *))(*v17 + 8))(v17);
  }
  if (!pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)&v37, v16))
  {
    if ((v42 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v42 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v41);
    sub_21697C414(&v40);
    if (v39) {
      sub_216D16E0C(v39);
    }
    goto LABEL_34;
  }
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)&v31, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v37);
  long long v31 = (pxrInternal__aapl__pxrReserved__::SdfPath **)&unk_26C76CA38;
  if (v32
    && (*((unsigned char *)v32 + 57) & 8) == 0
    && pxrInternal__aapl__pxrReserved__::UsdTyped::_IsCompatible((pxrInternal__aapl__pxrReserved__::UsdTyped *)&v31))
  {
    pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputePurposeInfo((pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)&v31, (uint64_t)v66);
    uint64_t v36 = *(void *)v66;
  }
  else
  {
    sub_216F19234((uint64_t)&v37, &v36);
  }
  pxrInternal__aapl__pxrReserved__::UsdTyped::~UsdTyped((pxrInternal__aapl__pxrReserved__::UsdTyped *)&v31);
  uint64_t v20 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v20) {
    uint64_t v20 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  if ((v36 & 0xFFFFFFFFFFFFFFF8) == (*((void *)v20 + 111) & 0xFFFFFFFFFFFFFFF8))
  {
    if (a2) {
      sub_216F19FA4((uint64_t)a2, (uint64_t)&v61);
    }
    *(_DWORD *)a3 = v37;
    *(void *)(a3 + 8) = v39;
    uint64_t v39 = 0;
    sub_21697D878((_DWORD *)(a3 + 16), &v40);
    sub_21697D8B4((_DWORD *)(a3 + 20), &v41);
    *(void *)(a3 + 24) = v42;
    uint64_t v42 = 0;
  }
  else
  {
    long long v31 = (pxrInternal__aapl__pxrReserved__::SdfPath **)"usdGeom/imageable.cpp";
    uint64_t v32 = (atomic_ullong *)"ComputeProxyPrim";
    uint64_t v33 = 550;
    uint64_t v34 = "UsdPrim pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputeProxyPrim(UsdPrim *) const";
    char v35 = 0;
    sub_216D0162C((uint64_t)&v37, v66);
    uint64_t v21 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)v66);
    sub_216D0162C((uint64_t)&v61, &v29);
    uint64_t v22 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v29);
    unint64_t v24 = v36 & 0xFFFFFFFFFFFFFFF8;
    if ((v36 & 0xFFFFFFFFFFFFFFF8) != 0)
    {
      unint64_t v25 = (const char *)(v24 + 16);
      if (*(char *)(v24 + 39) < 0) {
        unint64_t v25 = *(const char **)v25;
      }
    }
    else
    {
      unint64_t v25 = "";
    }
    pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v31, (pxrInternal__aapl__pxrReserved__ *)"Prim <%s>, targeted as proxyPrim of prim <%s> should have purpose 'proxy' but has '%s' instead.", v23, v21, v22, v25);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v30);
    sub_21697C414(&v29);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v66[1]);
    sub_21697C414(v66);
    *(_DWORD *)a3 = 1;
    *(void *)(a3 + 8) = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a3 + 16));
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a3 + 20));
    *(void *)(a3 + 24) = 0;
  }
  if ((v36 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v36 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  if ((v42 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v42 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v41);
  sub_21697C414(&v40);
  if (v39) {
    sub_216D16E0C(v39);
  }
  if ((v47 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v47 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v46);
  sub_21697C414(&v45);
  if (v44) {
    sub_216D16E0C(v44);
  }
  long long v31 = &v48;
  sub_216981168((void ***)&v31);
LABEL_40:
  if ((v55 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)((unint64_t)v55 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v54);
  sub_21697C414(&v53);
  if (v52) {
    sub_216D16E0C(v52);
  }
  if ((v28 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)((unint64_t)v28 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  if ((v60 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v60 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v59);
  sub_21697C414(&v58);
  if (v57) {
    sub_216D16E0C(v57);
  }
  if ((v65 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v65 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v64);
  sub_21697C414(&v63);
  if (v62) {
    sub_216D16E0C(v62);
  }
}

void sub_216F19DEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,void **a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  if ((a24 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(a24 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  sub_216D16AD8((uint64_t)&a25);
  sub_216D33F64((uint64_t)&a29);
  a29 = (void **)&a33;
  sub_216981168(&a29);
  sub_216D16AD8(v33 - 200);
  if ((a15 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(a15 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  sub_216D16AD8(v33 - 168);
  sub_216D16AD8(v33 - 136);
  _Unwind_Resume(a1);
}

uint64_t sub_216F19FA4(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 48), 1uLL, memory_order_relaxed);
  }
  unint64_t v5 = *(atomic_ullong **)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  if (v5) {
    sub_216D16E0C(v5);
  }
  sub_2169C487C((int *)(a1 + 16), (_DWORD *)(a2 + 16));
  sub_2169C48D4((int *)(a1 + 20), (_DWORD *)(a2 + 20));
  sub_2168D2318((void *)(a1 + 24), (void *)(a2 + 24));
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomImageable::SetProxyPrim(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this, const pxrInternal__aapl__pxrReserved__::UsdPrim *a2)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  if (!pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined(a2, a2)) {
    return 0;
  }
  sub_216D0162C((uint64_t)a2, &v14);
  unint64_t v11 = 0;
  int v12 = 0;
  unint64_t v13 = 0;
  uint64_t v6 = &v11;
  LOBYTE(v7) = 0;
  unint64_t v11 = (pxrInternal__aapl__pxrReserved__::SdfPath *)operator new(8uLL);
  int v12 = v11;
  unint64_t v13 = (char *)v11 + 8;
  int v12 = (pxrInternal__aapl__pxrReserved__::SdfPath *)sub_216980F74((uint64_t)&v13, &v14, &v16, v11);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v15);
  sub_21697C414(&v14);
  pxrInternal__aapl__pxrReserved__::UsdGeomImageable::CreateProxyPrimRel(this, (pxrInternal__aapl__pxrReserved__::UsdRelationship *)&v6);
  uint64_t v4 = pxrInternal__aapl__pxrReserved__::UsdRelationship::SetTargets((pxrInternal__aapl__pxrReserved__::UsdRelationship *)&v6, &v11);
  if ((v10 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v10 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_21697C414(&v8);
  if (v7) {
    sub_216D16E0C(v7);
  }
  uint64_t v6 = &v11;
  sub_216981168((void ***)&v6);
  return v4;
}

void sub_216F1A15C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15)
{
  if (a2) {
    sub_21675DB74(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomImageable::SetProxyPrim(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this, const pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a2)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v3 = (uint64_t *)((char *)a2 + 8);
  uint64_t v2 = *((void *)a2 + 1);
  if (!v2
    || (*(unsigned char *)(v2 + 57) & 8) != 0
    || !(*(unsigned int (**)(const pxrInternal__aapl__pxrReserved__::UsdSchemaBase *))(*(void *)a2 + 32))(a2))
  {
    return 0;
  }
  sub_216D16CFC((uint64_t)&v8, v3, (_DWORD *)a2 + 4);
  sub_216D0162C((uint64_t)&v8, &v17);
  unint64_t v13 = 0;
  int v14 = 0;
  v15[0] = 0;
  v15[1] = &v13;
  char v16 = 0;
  unint64_t v13 = (pxrInternal__aapl__pxrReserved__::SdfPath *)operator new(8uLL);
  int v14 = v13;
  v15[0] = (char *)v13 + 8;
  int v14 = (pxrInternal__aapl__pxrReserved__::SdfPath *)sub_216980F74((uint64_t)v15, &v17, &v19, v13);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v18);
  sub_21697C414(&v17);
  if ((v12 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v11);
  sub_21697C414(&v10);
  if (v9) {
    sub_216D16E0C(v9);
  }
  pxrInternal__aapl__pxrReserved__::UsdGeomImageable::CreateProxyPrimRel(this, (pxrInternal__aapl__pxrReserved__::UsdRelationship *)&v8);
  uint64_t v6 = pxrInternal__aapl__pxrReserved__::UsdRelationship::SetTargets((pxrInternal__aapl__pxrReserved__::UsdRelationship *)&v8, &v13);
  if ((v12 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v11);
  sub_21697C414(&v10);
  if (v9) {
    sub_216D16E0C(v9);
  }
  int v8 = &v13;
  sub_216981168((void ***)&v8);
  return v6;
}

void sub_216F1A380(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, char a17)
{
  if (a2) {
    sub_21675DB74(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputeWorldBound(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this@<X0>, const pxrInternal__aapl__pxrReserved__::UsdTimeCode *a2@<X1>, const pxrInternal__aapl__pxrReserved__::TfToken *a3@<X2>, const pxrInternal__aapl__pxrReserved__::TfToken *a4@<X3>, const pxrInternal__aapl__pxrReserved__::TfToken *a5@<X4>, const pxrInternal__aapl__pxrReserved__::TfToken *a6@<X5>, _OWORD *a7@<X8>)
{
  v26[6] = *MEMORY[0x263EF8340];
  sub_216F1A6C0((uint64_t *)a3, (uint64_t *)a4, (uint64_t *)a5, (uint64_t *)a6, (uint64_t)&v20);
  if (v20 == v21)
  {
    v22[0] = (void **)"usdGeom/imageable.cpp";
    v22[1] = (void **)"ComputeWorldBound";
    void v22[2] = (void **)621;
    v22[3] = (void **)"GfBBox3d pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputeWorldBound(const UsdTimeCode &"
                      ", const TfToken &, const TfToken &, const TfToken &, const TfToken &) const";
    char v23 = 0;
    sub_216D16CFC((uint64_t)&v13, (uint64_t *)this + 1, (_DWORD *)this + 4);
    sub_216D0162C((uint64_t)&v13, &v18);
    Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v18);
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v22, 1, (pxrInternal__aapl__pxrReserved__ *)"Must include at least one purpose when computing bounds for prim at path <%s>.  See UsdGeomImageable::GetPurposeAttr().", Text);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v19);
    sub_21697C414(&v18);
    if ((v17 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v17 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v16);
    sub_21697C414(&v15);
    if (v14) {
      sub_216D16E0C(v14);
    }
    sub_216893518((uint64_t)a7);
  }
  else
  {
    double v10 = *(double *)a2;
    memset(v12, 0, sizeof(v12));
    sub_21698FA28(v12, v20, v21, v21 - v20);
    pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::UsdGeomBBoxCache(v22, v12, 0, 0, v10);
    sub_216D16CFC((uint64_t)&v13, (uint64_t *)this + 1, (_DWORD *)this + 4);
    pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::ComputeWorldBound((pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *)v22, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v13, a7);
    if ((v17 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v17 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v16);
    sub_21697C414(&v15);
    if (v14) {
      sub_216D16E0C(v14);
    }
    sub_216EFF674((uint64_t)v26);
    sub_216EF9C4C((uint64_t)&v25);
    unint64_t v13 = (void **)&v24;
    sub_216889A04(&v13);
    pxrInternal__aapl__pxrReserved__::WorkDispatcher::~WorkDispatcher((pxrInternal__aapl__pxrReserved__::WorkDispatcher *)v22);
    unint64_t v13 = (void **)v12;
    sub_216889A04(&v13);
  }
  v22[0] = (void **)&v20;
  sub_216889A04(v22);
}

void sub_216F1A624(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,void **a22)
{
  a22 = (void **)&a19;
  sub_216889A04(&a22);
  _Unwind_Resume(a1);
}

void sub_216F1A6B8()
{
}

char *sub_216F1A6C0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  *(void *)a5 = 0;
  *(void *)(a5 + 8) = 0;
  *(void *)(a5 + 16) = 0;
  if (*a1)
  {
    double result = sub_216973984((char **)a5, a1);
    *(void *)(a5 + 8) = result;
  }
  else
  {
    double result = 0;
  }
  uint64_t v10 = *a2;
  if (*a2)
  {
    if ((unint64_t)result >= *(void *)(a5 + 16))
    {
      double result = sub_216973984((char **)a5, a2);
    }
    else
    {
      *(void *)double result = v10;
      if ((v10 & 7) != 0
        && (atomic_fetch_add_explicit((atomic_uint *volatile)(v10 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
      {
        *(void *)result &= 0xFFFFFFFFFFFFFFF8;
      }
      result += 8;
    }
    *(void *)(a5 + 8) = result;
  }
  uint64_t v11 = *a3;
  if (*a3)
  {
    if ((unint64_t)result >= *(void *)(a5 + 16))
    {
      double result = sub_216973984((char **)a5, a3);
    }
    else
    {
      *(void *)double result = v11;
      if ((v11 & 7) != 0
        && (atomic_fetch_add_explicit((atomic_uint *volatile)(v11 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
      {
        *(void *)result &= 0xFFFFFFFFFFFFFFF8;
      }
      result += 8;
    }
    *(void *)(a5 + 8) = result;
  }
  uint64_t v12 = *a4;
  if (*a4)
  {
    if ((unint64_t)result >= *(void *)(a5 + 16))
    {
      double result = sub_216973984((char **)a5, a4);
    }
    else
    {
      *(void *)double result = v12;
      if ((v12 & 7) != 0
        && (atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
      {
        *(void *)result &= 0xFFFFFFFFFFFFFFF8;
      }
      result += 8;
    }
    *(void *)(a5 + 8) = result;
  }
  return result;
}

void sub_216F1A820(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216889A04((void ***)va);
  _Unwind_Resume(a1);
}

void sub_216F1A838(void **a1)
{
  sub_216EFF674((uint64_t)(a1 + 54));
  sub_216EF9C4C((uint64_t)(a1 + 48));
  uint64_t v2 = a1 + 45;
  sub_216889A04(&v2);
  pxrInternal__aapl__pxrReserved__::WorkDispatcher::~WorkDispatcher((pxrInternal__aapl__pxrReserved__::WorkDispatcher *)a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputeLocalBound(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this@<X0>, const pxrInternal__aapl__pxrReserved__::UsdTimeCode *a2@<X1>, const pxrInternal__aapl__pxrReserved__::TfToken *a3@<X2>, const pxrInternal__aapl__pxrReserved__::TfToken *a4@<X3>, const pxrInternal__aapl__pxrReserved__::TfToken *a5@<X4>, const pxrInternal__aapl__pxrReserved__::TfToken *a6@<X5>, _OWORD *a7@<X8>)
{
  v26[6] = *MEMORY[0x263EF8340];
  sub_216F1A6C0((uint64_t *)a3, (uint64_t *)a4, (uint64_t *)a5, (uint64_t *)a6, (uint64_t)&v20);
  if (v20 == v21)
  {
    v22[0] = (void **)"usdGeom/imageable.cpp";
    v22[1] = (void **)"ComputeLocalBound";
    void v22[2] = (void **)641;
    v22[3] = (void **)"GfBBox3d pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputeLocalBound(const UsdTimeCode &"
                      ", const TfToken &, const TfToken &, const TfToken &, const TfToken &) const";
    char v23 = 0;
    sub_216D16CFC((uint64_t)&v13, (uint64_t *)this + 1, (_DWORD *)this + 4);
    sub_216D0162C((uint64_t)&v13, &v18);
    Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v18);
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v22, 1, (pxrInternal__aapl__pxrReserved__ *)"Must include at least one purpose when computing bounds for prim at path <%s>.  See UsdGeomImageable::GetPurposeAttr().", Text);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v19);
    sub_21697C414(&v18);
    if ((v17 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v17 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v16);
    sub_21697C414(&v15);
    if (v14) {
      sub_216D16E0C(v14);
    }
    sub_216893518((uint64_t)a7);
  }
  else
  {
    double v10 = *(double *)a2;
    memset(v12, 0, sizeof(v12));
    sub_21698FA28(v12, v20, v21, v21 - v20);
    pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::UsdGeomBBoxCache(v22, v12, 0, 0, v10);
    sub_216D16CFC((uint64_t)&v13, (uint64_t *)this + 1, (_DWORD *)this + 4);
    pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::ComputeLocalBound((pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *)v22, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v13, a7);
    if ((v17 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v17 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v16);
    sub_21697C414(&v15);
    if (v14) {
      sub_216D16E0C(v14);
    }
    sub_216EFF674((uint64_t)v26);
    sub_216EF9C4C((uint64_t)&v25);
    unint64_t v13 = (void **)&v24;
    sub_216889A04(&v13);
    pxrInternal__aapl__pxrReserved__::WorkDispatcher::~WorkDispatcher((pxrInternal__aapl__pxrReserved__::WorkDispatcher *)v22);
    unint64_t v13 = (void **)v12;
    sub_216889A04(&v13);
  }
  v22[0] = (void **)&v20;
  sub_216889A04(v22);
}

void sub_216F1AAAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,void **a22)
{
  a22 = (void **)&a19;
  sub_216889A04(&a22);
  _Unwind_Resume(a1);
}

void sub_216F1AB40()
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputeUntransformedBound(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this@<X0>, const pxrInternal__aapl__pxrReserved__::UsdTimeCode *a2@<X1>, const pxrInternal__aapl__pxrReserved__::TfToken *a3@<X2>, const pxrInternal__aapl__pxrReserved__::TfToken *a4@<X3>, const pxrInternal__aapl__pxrReserved__::TfToken *a5@<X4>, const pxrInternal__aapl__pxrReserved__::TfToken *a6@<X5>, pxrInternal__aapl__pxrReserved__::GfBBox3d *a7@<X8>)
{
  v26[6] = *MEMORY[0x263EF8340];
  sub_216F1A6C0((uint64_t *)a3, (uint64_t *)a4, (uint64_t *)a5, (uint64_t *)a6, (uint64_t)&v20);
  if (v20 == v21)
  {
    v22[0] = (void **)"usdGeom/imageable.cpp";
    v22[1] = (void **)"ComputeUntransformedBound";
    void v22[2] = (void **)661;
    v22[3] = (void **)"GfBBox3d pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputeUntransformedBound(const UsdTi"
                      "meCode &, const TfToken &, const TfToken &, const TfToken &, const TfToken &) const";
    char v23 = 0;
    sub_216D16CFC((uint64_t)&v13, (uint64_t *)this + 1, (_DWORD *)this + 4);
    sub_216D0162C((uint64_t)&v13, &v18);
    Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v18);
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v22, 1, (pxrInternal__aapl__pxrReserved__ *)"Must include at least one purpose when computing bounds for prim at path <%s>.  See UsdGeomImageable::GetPurposeAttr().", Text);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v19);
    sub_21697C414(&v18);
    if ((v17 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v17 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v16);
    sub_21697C414(&v15);
    if (v14) {
      sub_216D16E0C(v14);
    }
    sub_216893518((uint64_t)a7);
  }
  else
  {
    double v10 = *(double *)a2;
    memset(v12, 0, sizeof(v12));
    sub_21698FA28(v12, v20, v21, v21 - v20);
    pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::UsdGeomBBoxCache(v22, v12, 0, 0, v10);
    sub_216D16CFC((uint64_t)&v13, (uint64_t *)this + 1, (_DWORD *)this + 4);
    pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::ComputeUntransformedBound((pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *)v22, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v13, a7);
    if ((v17 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v17 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v16);
    sub_21697C414(&v15);
    if (v14) {
      sub_216D16E0C(v14);
    }
    sub_216EFF674((uint64_t)v26);
    sub_216EF9C4C((uint64_t)&v25);
    unint64_t v13 = (void **)&v24;
    sub_216889A04(&v13);
    pxrInternal__aapl__pxrReserved__::WorkDispatcher::~WorkDispatcher((pxrInternal__aapl__pxrReserved__::WorkDispatcher *)v22);
    unint64_t v13 = (void **)v12;
    sub_216889A04(&v13);
  }
  v22[0] = (void **)&v20;
  sub_216889A04(v22);
}

void sub_216F1AD6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,void **a22)
{
  a22 = (void **)&a19;
  sub_216889A04(&a22);
  _Unwind_Resume(a1);
}

void sub_216F1AE00()
{
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputeLocalToWorldTransform@<X0>(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this@<X0>, const pxrInternal__aapl__pxrReserved__::UsdTimeCode *a2@<X1>, uint64_t a3@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::UsdGeomXformCache((uint64_t)v11, *(double *)a2);
  sub_216D16CFC((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::GetLocalToWorldTransform((pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *)v11, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, a3);
  if ((v10 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v10 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_21697C414(&v8);
  if (v7) {
    sub_216D16E0C(v7);
  }
  return sub_216EF9C4C((uint64_t)v11);
}

void sub_216F1AEA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomImageable::ComputeParentToWorldTransform@<X0>(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *this@<X0>, const pxrInternal__aapl__pxrReserved__::UsdTimeCode *a2@<X1>, _OWORD *a3@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::UsdGeomXformCache((uint64_t)v11, *(double *)a2);
  sub_216D16CFC((uint64_t)&v6, (uint64_t *)this + 1, (_DWORD *)this + 4);
  pxrInternal__aapl__pxrReserved__::UsdGeomXformCache::GetParentToWorldTransform((pxrInternal__aapl__pxrReserved__::UsdGeomXformCache *)v11, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v6, a3);
  if ((v10 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v10 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_21697C414(&v8);
  if (v7) {
    sub_216D16E0C(v7);
  }
  return sub_216EF9C4C((uint64_t)v11);
}

void sub_216F1AF64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
}

uint64_t *sub_216F1AF88()
{
  sub_216851EE4((uint64_t)&v6, "Tf", "TfType::Define");
  sub_216F1B0B4((unint64_t **)v5);
  unint64_t v0 = pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p, (char **)v5, 0);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  if (v5[0])
  {
    v5[1] = v5[0];
    operator delete(v5[0]);
  }
  while (v7--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v6);
  return v0;
}

void sub_216F1B068(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a15) {
    operator delete(a15);
  }
  sub_21684E6B8(v16 - 32);
  _Unwind_Resume(a1);
}

void sub_216F1B0B4(unint64_t **a1@<X8>)
{
  unint64_t v2 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p);
  a1[1] = 0;
  a1[2] = 0;
  *a1 = 0;
  uint64_t v3 = (unint64_t *)operator new(8uLL);
  *a1 = v3;
  *v3++ = v2;
  a1[1] = v3;
  a1[2] = v3;
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216F1B124(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216F1B148(pxrInternal__aapl__pxrReserved__::UsdGeomImageable *a1)
{
  uint64_t v3 = *MEMORY[0x263EF8340];
  v2.__type_name = 0;
  pxrInternal__aapl__pxrReserved__::UsdGeomImageable::CreateVisibilityAttr(a1, &v2, 0, (uint64_t)v1);
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Set<pxrInternal__aapl__pxrReserved__::TfToken>();
}

void sub_216F1B204(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
  if (a2) {
    sub_21675DB74(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomGprim::~UsdGeomGprim(pxrInternal__aapl__pxrReserved__::UsdGeomGprim *this)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomBoundable::~UsdGeomBoundable(this);

  operator delete(v1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomGprim::Get(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  uint64_t v6 = sub_216D24140(a1);
  if (v7 & 1 | (unint64_t)v6)
  {
    int v8 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_216D01530(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(v8, a2, (uint64_t)&v9);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76CA90;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  else
  {
    int v9 = "usdGeom/gprim.cpp";
    uint64_t v10 = (atomic_ullong *)"Get";
    uint64_t v11 = 51;
    unint64_t v12 = (unint64_t)"static UsdGeomGprim pxrInternal__aapl__pxrReserved__::UsdGeomGprim::Get(const UsdStagePtr &,"
                            " const SdfPath &)";
    char v13 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v9, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v9) = 1;
    uint64_t v10 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v11);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v11 + 1);
    unint64_t v12 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76CA90;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  if (v10) {
    sub_216D16E0C(v10);
  }
}

void sub_216F1B3EC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216D16AD8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomGprim::_GetSchemaKind(pxrInternal__aapl__pxrReserved__::UsdGeomGprim *this)
{
  return 2;
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomGprim::_GetStaticTfType(pxrInternal__aapl__pxrReserved__::UsdGeomGprim *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92B70, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92B70))
  {
    __cxa_guard_release(&qword_267B92B70);
  }
  return &qword_267B92B68;
}

void sub_216F1B47C(_Unwind_Exception *a1)
{
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomGprim::_IsTypedSchema(pxrInternal__aapl__pxrReserved__::UsdGeomGprim *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92B80, memory_order_acquire) & 1) == 0)
  {
    std::type_info v2 = (pxrInternal__aapl__pxrReserved__::UsdGeomGprim *)__cxa_guard_acquire(&qword_267B92B80);
    if (v2)
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomGprim::_GetStaticTfType(v2);
      byte_267B92B78 = sub_216D16508((char *)&qword_267B92B68, v3, v4);
      __cxa_guard_release(&qword_267B92B80);
    }
  }
  return byte_267B92B78;
}

void sub_216F1B4FC(_Unwind_Exception *a1)
{
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomGprim::_GetTfType(pxrInternal__aapl__pxrReserved__::UsdGeomGprim *this)
{
  return &qword_267B92B68;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomGprim::GetDisplayColorAttr(pxrInternal__aapl__pxrReserved__::UsdGeomGprim *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  uint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    uint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 848), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F1B5D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomGprim::CreateDisplayColorAttr(pxrInternal__aapl__pxrReserved__::UsdGeomGprim *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  int v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    int v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 848), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 736), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomGprim::GetDisplayOpacityAttr(pxrInternal__aapl__pxrReserved__::UsdGeomGprim *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  uint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    uint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 856), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F1B73C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomGprim::CreateDisplayOpacityAttr(pxrInternal__aapl__pxrReserved__::UsdGeomGprim *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  int v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    int v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 856), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 512), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomGprim::GetDoubleSidedAttr(pxrInternal__aapl__pxrReserved__::UsdGeomGprim *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  uint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    uint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 240), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F1B8A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomGprim::CreateDoubleSidedAttr(pxrInternal__aapl__pxrReserved__::UsdGeomGprim *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  int v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    int v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 240), v9, 0, 1, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomGprim::GetOrientationAttr(pxrInternal__aapl__pxrReserved__::UsdGeomGprim *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  uint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    uint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 728), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F1BA0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomGprim::CreateOrientationAttr(pxrInternal__aapl__pxrReserved__::UsdGeomGprim *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  int v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    int v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 728), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 88), 0, 1, a2, a3, a4);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomGprim::GetSchemaAttributeNames(pxrInternal__aapl__pxrReserved__::UsdGeomGprim *this)
{
  int v1 = (int)this;
  uint64_t v18 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92BA0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92BA0))
  {
    uint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v3) {
      uint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v4 = *((void *)v3 + 106);
    uint64_t v14 = v4;
    if ((v4 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v4 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v14 &= 0xFFFFFFFFFFFFFFF8;
    }
    char v5 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v5) {
      char v5 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v6 = *((void *)v5 + 107);
    uint64_t v15 = v6;
    if ((v6 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v6 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v15 &= 0xFFFFFFFFFFFFFFF8;
    }
    int v7 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v7) {
      int v7 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v8 = *((void *)v7 + 30);
    uint64_t v16 = v8;
    if ((v8 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v16 &= 0xFFFFFFFFFFFFFFF8;
    }
    int v9 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v9) {
      int v9 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v10 = *((void *)v9 + 91);
    uint64_t v17 = v10;
    if ((v10 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v10 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v17 &= 0xFFFFFFFFFFFFFFF8;
    }
    sub_216D30CFC(&qword_267B92B88, &v14, 4uLL);
    for (uint64_t i = 24; i != -8; i -= 8)
    {
      uint64_t v12 = *(uint64_t *)((char *)&v14 + i);
      if ((v12 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
    }
    __cxa_atexit((void (*)(void *))sub_216B554D0, &qword_267B92B88, &dword_216758000);
    __cxa_guard_release(&qword_267B92BA0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92BC0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92BC0))
  {
    SchemaAttributeNames = pxrInternal__aapl__pxrReserved__::UsdGeomBoundable::GetSchemaAttributeNames((pxrInternal__aapl__pxrReserved__::UsdGeomBoundable *)1);
    sub_216F1BDF0((uint64_t **)SchemaAttributeNames);
    __cxa_atexit((void (*)(void *))sub_216B554D0, &qword_267B92BA8, &dword_216758000);
    __cxa_guard_release(&qword_267B92BC0);
  }
  if (v1) {
    return &qword_267B92BA8;
  }
  else {
    return &qword_267B92B88;
  }
}

void sub_216F1BD6C(_Unwind_Exception *a1)
{
}

void *sub_216F1BDF0(uint64_t **a1)
{
  qword_267B92BB0 = 0;
  unk_267B92BB8 = 0;
  qword_267B92BA8 = 0;
  sub_216973388((char **)&qword_267B92BA8, ((*(void *)algn_267B92B90 - qword_267B92B88) >> 3) + a1[1] - *a1);
  sub_216AE27E0(&qword_267B92BA8, (void *)qword_267B92BB0, *a1, a1[1], a1[1] - *a1);
  return sub_216AE27E0(&qword_267B92BA8, (void *)qword_267B92BB0, (uint64_t *)qword_267B92B88, *(uint64_t **)algn_267B92B90, (*(void *)algn_267B92B90 - qword_267B92B88) >> 3);
}

void sub_216F1BE88(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216889A04((void ***)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomGprim::GetDisplayColorPrimvar(pxrInternal__aapl__pxrReserved__::UsdGeomGprim *this@<X0>, pxrInternal__aapl__pxrReserved__::UsdGeomPrimvar *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomGprim::GetDisplayColorAttr(this, (uint64_t)&v3);
  pxrInternal__aapl__pxrReserved__::UsdGeomPrimvar::UsdGeomPrimvar(a2, (const pxrInternal__aapl__pxrReserved__::UsdAttribute *)&v3);
  if ((v7 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v7 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v6);
  sub_21697C414(&v5);
  if (v4) {
    sub_216D16E0C(v4);
  }
}

void sub_216F1BF20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomGprim::CreateDisplayColorPrimvar(pxrInternal__aapl__pxrReserved__::UsdGeomGprim *this@<X0>, const pxrInternal__aapl__pxrReserved__::TfToken *a2@<X1>, int a3@<W2>, pxrInternal__aapl__pxrReserved__::UsdGeomPrimvar *a4@<X8>)
{
  sub_216D16CFC((uint64_t)&v9, (uint64_t *)this + 1, (_DWORD *)this + 4);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)v14, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
  v14[3] = 0;
  v14[0] = &unk_26C76D128;
  uint64_t v7 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v7) {
    uint64_t v7 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v8) {
    uint64_t v8 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }
  pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI::CreatePrimvar((pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI *)v14, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v7 + 848), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v8 + 736), a2, a3, a4);
  pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI::~UsdGeomPrimvarsAPI((pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI *)v14);
  if ((v13 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v13 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v12);
  sub_21697C414(&v11);
  if (v10) {
    sub_216D16E0C(v10);
  }
}

void sub_216F1C050(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomGprim::GetDisplayOpacityPrimvar(pxrInternal__aapl__pxrReserved__::UsdGeomGprim *this@<X0>, pxrInternal__aapl__pxrReserved__::UsdGeomPrimvar *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomGprim::GetDisplayOpacityAttr(this, (uint64_t)&v3);
  pxrInternal__aapl__pxrReserved__::UsdGeomPrimvar::UsdGeomPrimvar(a2, (const pxrInternal__aapl__pxrReserved__::UsdAttribute *)&v3);
  if ((v7 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v7 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v6);
  sub_21697C414(&v5);
  if (v4) {
    sub_216D16E0C(v4);
  }
}

void sub_216F1C0EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomGprim::CreateDisplayOpacityPrimvar(pxrInternal__aapl__pxrReserved__::UsdGeomGprim *this@<X0>, const pxrInternal__aapl__pxrReserved__::TfToken *a2@<X1>, int a3@<W2>, pxrInternal__aapl__pxrReserved__::UsdGeomPrimvar *a4@<X8>)
{
  sub_216D16CFC((uint64_t)&v9, (uint64_t *)this + 1, (_DWORD *)this + 4);
  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)v14, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
  v14[3] = 0;
  v14[0] = &unk_26C76D128;
  uint64_t v7 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v7) {
    uint64_t v7 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v8) {
    uint64_t v8 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }
  pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI::CreatePrimvar((pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI *)v14, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v7 + 856), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v8 + 512), a2, a3, a4);
  pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI::~UsdGeomPrimvarsAPI((pxrInternal__aapl__pxrReserved__::UsdGeomPrimvarsAPI *)v14);
  if ((v13 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v13 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v12);
  sub_21697C414(&v11);
  if (v10) {
    sub_216D16E0C(v10);
  }
}

void sub_216F1C21C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
}

uint64_t *sub_216F1C240()
{
  sub_216851EE4((uint64_t)&v6, "Tf", "TfType::Define");
  sub_216F1C36C((unint64_t **)v5);
  unint64_t v0 = pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p, (char **)v5, 0);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  if (v5[0])
  {
    v5[1] = v5[0];
    operator delete(v5[0]);
  }
  while (v7--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v6);
  return v0;
}

void sub_216F1C320(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a15) {
    operator delete(a15);
  }
  sub_21684E6B8(v16 - 32);
  _Unwind_Resume(a1);
}

void sub_216F1C36C(unint64_t **a1@<X8>)
{
  unint64_t v2 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p);
  a1[1] = 0;
  a1[2] = 0;
  *a1 = 0;
  uint64_t v3 = (unint64_t *)operator new(8uLL);
  *a1 = v3;
  *v3++ = v2;
  a1[1] = v3;
  a1[2] = v3;
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216F1C3DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_216F1C400()
{
  sub_216F1E264();
  sub_216779094(__p, "Mesh");
  sub_216F1E390((char *)__p);
  if (v1 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216F1C450(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::~UsdGeomMesh(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::~UsdGeomPointBased(this);

  operator delete(v1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::Get(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  uint64_t v6 = sub_216D24140(a1);
  if (v7 & 1 | (unint64_t)v6)
  {
    uint64_t v8 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_216D01530(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(v8, a2, (uint64_t)&v9);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76CAE8;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  else
  {
    uint64_t v9 = "usdGeom/mesh.cpp";
    uint64_t v10 = (atomic_ullong *)"Get";
    uint64_t v11 = 57;
    unint64_t v12 = (unint64_t)"static UsdGeomMesh pxrInternal__aapl__pxrReserved__::UsdGeomMesh::Get(const UsdStagePtr &, const SdfPath &)";
    char v13 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v9, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v9) = 1;
    uint64_t v10 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v11);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v11 + 1);
    unint64_t v12 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76CAE8;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  if (v10) {
    sub_216D16E0C(v10);
  }
}

void sub_216F1C61C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216D16AD8((uint64_t)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::Define(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92BD0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92BD0))
  {
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken((pxrInternal__aapl__pxrReserved__::TfToken *)&qword_267B92BC8, "Mesh");
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &qword_267B92BC8, &dword_216758000);
    __cxa_guard_release(&qword_267B92BD0);
  }
  uint64_t v6 = sub_216D24140(a1);
  if (v7 & 1 | (unint64_t)v6)
  {
    uint64_t v8 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_216D01530(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::DefinePrim(v8, a2, &qword_267B92BC8, (uint64_t)&v9);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76CAE8;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  else
  {
    uint64_t v9 = "usdGeom/mesh.cpp";
    uint64_t v10 = (atomic_ullong *)"Define";
    uint64_t v11 = 70;
    unint64_t v12 = (unint64_t)"static UsdGeomMesh pxrInternal__aapl__pxrReserved__::UsdGeomMesh::Define(const UsdStagePtr &"
                            ", const SdfPath &)";
    char v13 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v9, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v9) = 1;
    uint64_t v10 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v11);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v11 + 1);
    unint64_t v12 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76CAE8;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  if (v10) {
    sub_216D16E0C(v10);
  }
}

void sub_216F1C828(_Unwind_Exception *a1)
{
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomMesh::_GetSchemaKind(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this)
{
  return 3;
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomMesh::_GetStaticTfType(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92BE0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92BE0))
  {
    __cxa_guard_release(&qword_267B92BE0);
  }
  return &qword_267B92BD8;
}

void sub_216F1C8D0(_Unwind_Exception *a1)
{
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomMesh::_IsTypedSchema(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92BF0, memory_order_acquire) & 1) == 0)
  {
    unint64_t v2 = (pxrInternal__aapl__pxrReserved__::UsdGeomMesh *)__cxa_guard_acquire(&qword_267B92BF0);
    if (v2)
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomMesh::_GetStaticTfType(v2);
      byte_267B92BE8 = sub_216D16508((char *)&qword_267B92BD8, v3, v4);
      __cxa_guard_release(&qword_267B92BF0);
    }
  }
  return byte_267B92BE8;
}

void sub_216F1C950(_Unwind_Exception *a1)
{
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomMesh::_GetTfType(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this)
{
  return &qword_267B92BD8;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::GetFaceVertexIndicesAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  uint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    uint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 344), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F1CA28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::CreateFaceVertexIndicesAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  uint64_t v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    uint64_t v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 344), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 464), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::GetFaceVertexCountsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  uint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    uint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 336), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F1CB90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::CreateFaceVertexCountsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  uint64_t v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    uint64_t v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 336), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 464), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::GetSubdivisionSchemeAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  uint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    uint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 1032), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F1CCF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::CreateSubdivisionSchemeAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  uint64_t v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    uint64_t v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 1032), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 88), 0, 1, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::GetInterpolateBoundaryAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  uint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    uint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 480), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F1CE60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::CreateInterpolateBoundaryAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  uint64_t v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    uint64_t v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 480), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 88), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::GetFaceVaryingLinearInterpolationAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  uint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    uint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 328), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F1CFC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::CreateFaceVaryingLinearInterpolationAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  uint64_t v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    uint64_t v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 328), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 88), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::GetTriangleSubdivisionRuleAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  uint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    uint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 1072), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F1D130(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::CreateTriangleSubdivisionRuleAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  uint64_t v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    uint64_t v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 1072), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 88), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::GetHoleIndicesAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  uint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    uint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 424), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F1D298(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::CreateHoleIndicesAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  uint64_t v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    uint64_t v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 424), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 464), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::GetCornerIndicesAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  uint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    uint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 144), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F1D400(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::CreateCornerIndicesAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  uint64_t v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    uint64_t v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 144), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 464), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::GetCornerSharpnessesAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  uint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    uint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 152), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F1D568(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::CreateCornerSharpnessesAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  uint64_t v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    uint64_t v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 152), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 512), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::GetCreaseIndicesAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  uint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    uint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 184), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F1D6D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::CreateCreaseIndicesAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  uint64_t v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    uint64_t v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 184), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 464), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::GetCreaseLengthsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  uint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    uint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 192), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F1D838(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::CreateCreaseLengthsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  uint64_t v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    uint64_t v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 192), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 464), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::GetCreaseSharpnessesAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  uint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    uint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 200), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F1D9A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::CreateCreaseSharpnessesAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  uint64_t v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    uint64_t v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 200), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 512), 0, 0, a2, a3, a4);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomMesh::GetSchemaAttributeNames(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this)
{
  int v1 = (int)this;
  uint64_t v42 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92C10, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92C10))
  {
    uint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v3) {
      uint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v4 = *((void *)v3 + 43);
    uint64_t v30 = v4;
    if ((v4 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v4 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v30 &= 0xFFFFFFFFFFFFFFF8;
    }
    char v5 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v5) {
      char v5 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v6 = *((void *)v5 + 42);
    uint64_t v31 = v6;
    if ((v6 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v6 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v31 &= 0xFFFFFFFFFFFFFFF8;
    }
    int v7 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v7) {
      int v7 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v8 = *((void *)v7 + 129);
    uint64_t v32 = v8;
    if ((v8 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v32 &= 0xFFFFFFFFFFFFFFF8;
    }
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v9) {
      uint64_t v9 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v10 = *((void *)v9 + 60);
    uint64_t v33 = v10;
    if ((v10 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v10 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v33 &= 0xFFFFFFFFFFFFFFF8;
    }
    uint64_t v11 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v11) {
      uint64_t v11 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v12 = *((void *)v11 + 41);
    uint64_t v34 = v12;
    if ((v12 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v34 &= 0xFFFFFFFFFFFFFFF8;
    }
    char v13 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v13) {
      char v13 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v14 = *((void *)v13 + 134);
    uint64_t v35 = v14;
    if ((v14 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v14 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v35 &= 0xFFFFFFFFFFFFFFF8;
    }
    uint64_t v15 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v15) {
      uint64_t v15 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v16 = *((void *)v15 + 53);
    uint64_t v36 = v16;
    if ((v16 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v16 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v36 &= 0xFFFFFFFFFFFFFFF8;
    }
    uint64_t v17 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v17) {
      uint64_t v17 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v18 = *((void *)v17 + 18);
    uint64_t v37 = v18;
    if ((v18 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v18 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v37 &= 0xFFFFFFFFFFFFFFF8;
    }
    int v19 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v19) {
      int v19 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v20 = *((void *)v19 + 19);
    uint64_t v38 = v20;
    if ((v20 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v20 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v38 &= 0xFFFFFFFFFFFFFFF8;
    }
    uint64_t v21 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v21) {
      uint64_t v21 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v22 = *((void *)v21 + 23);
    uint64_t v39 = v22;
    if ((v22 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v22 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v39 &= 0xFFFFFFFFFFFFFFF8;
    }
    char v23 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v23) {
      char v23 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v24 = *((void *)v23 + 24);
    uint64_t v40 = v24;
    if ((v24 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v24 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v40 &= 0xFFFFFFFFFFFFFFF8;
    }
    uint64_t v25 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v25) {
      uint64_t v25 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v26 = *((void *)v25 + 25);
    uint64_t v41 = v26;
    if ((v26 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v26 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v41 &= 0xFFFFFFFFFFFFFFF8;
    }
    sub_216D30CFC(&qword_267B92BF8, &v30, 0xCuLL);
    for (uint64_t i = 88; i != -8; i -= 8)
    {
      uint64_t v28 = *(uint64_t *)((char *)&v30 + i);
      if ((v28 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v28 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
    }
    __cxa_atexit((void (*)(void *))sub_216B554D0, &qword_267B92BF8, &dword_216758000);
    __cxa_guard_release(&qword_267B92C10);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92C30, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92C30))
  {
    SchemaAttributeNames = pxrInternal__aapl__pxrReserved__::UsdGeomPointBased::GetSchemaAttributeNames((pxrInternal__aapl__pxrReserved__::UsdGeomPointBased *)1);
    sub_216F1DFE4((uint64_t **)SchemaAttributeNames);
    __cxa_atexit((void (*)(void *))sub_216B554D0, &qword_267B92C18, &dword_216758000);
    __cxa_guard_release(&qword_267B92C30);
  }
  if (v1) {
    return &qword_267B92C18;
  }
  else {
    return &qword_267B92BF8;
  }
}

void sub_216F1DF60(_Unwind_Exception *a1)
{
}

void *sub_216F1DFE4(uint64_t **a1)
{
  qword_267B92C20 = 0;
  unk_267B92C28 = 0;
  qword_267B92C18 = 0;
  sub_216973388((char **)&qword_267B92C18, ((unk_267B92C00 - qword_267B92BF8) >> 3) + a1[1] - *a1);
  sub_216AE27E0(&qword_267B92C18, (void *)qword_267B92C20, *a1, a1[1], a1[1] - *a1);
  return sub_216AE27E0(&qword_267B92C18, (void *)qword_267B92C20, (uint64_t *)qword_267B92BF8, unk_267B92C00, (unk_267B92C00 - qword_267B92BF8) >> 3);
}

void sub_216F1E07C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216889A04((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomMesh::ValidateTopology(uint64_t *a1, uint64_t a2, char *a3, uint64_t a4)
{
  if (*(void *)a2)
  {
    LODWORD(v5) = 0;
    uint64_t v6 = *(int **)(a2 + 32);
    uint64_t v7 = 4 * *(void *)a2;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v5 = v8 + (int)v5;
      v7 -= 4;
    }
    while (v7);
    uint64_t v9 = *a1;
    if (*a1 == v5)
    {
      if (v5)
      {
        uint64_t v10 = (unsigned int *)a1[4];
        uint64_t v11 = 4 * v5;
        while ((*v10 & 0x80000000) == 0 && (int)*v10 < (unint64_t)a3)
        {
          ++v10;
          v11 -= 4;
          if (!v11) {
            return 1;
          }
        }
        if (a4)
        {
          pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Out of range face vertex index %d: Vertex must be in the range [0,%zu).", (const char *)a2, a3, *v10, a3);
          goto LABEL_15;
        }
        return 0;
      }
      return 1;
    }
  }
  else
  {
    uint64_t v9 = *a1;
    if (!*a1) {
      return 1;
    }
    uint64_t v5 = 0;
  }
  if (!a4) {
    return 0;
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Sum of faceVertexCounts [%zu] != size of faceVertexIndices [%zu].", (const char *)a2, a3, v5, v9);
LABEL_15:
  if (*(char *)(a4 + 23) < 0) {
    operator delete(*(void **)a4);
  }
  uint64_t result = 0;
  *(_OWORD *)a4 = v13;
  *(void *)(a4 + 16) = v14;
  return result;
}

BOOL pxrInternal__aapl__pxrReserved__::UsdGeomMesh::IsSharpnessInfinite(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *this, float a2)
{
  return a2 >= 10.0;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMesh::GetFaceCount(pxrInternal__aapl__pxrReserved__::UsdGeomMesh *a1)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomMesh::GetFaceVertexCountsAttr(a1, (uint64_t)v4);
  uint64_t v3 = 0;
  long long v1 = 0u;
  long long v2 = 0u;
  pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::VtArray<int>>();
}

void sub_216F1E244(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
}

uint64_t *sub_216F1E264()
{
  sub_216851EE4((uint64_t)&v6, "Tf", "TfType::Define");
  sub_216F12A84((unint64_t **)v5);
  unint64_t v0 = pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p, (char **)v5, 0);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  if (v5[0])
  {
    v5[1] = v5[0];
    operator delete(v5[0]);
  }
  while (v7--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v6);
  return v0;
}

void sub_216F1E344(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a15) {
    operator delete(a15);
  }
  sub_21684E6B8(v16 - 32);
  _Unwind_Resume(a1);
}

void sub_216F1E390(char *a1)
{
  unint64_t v2 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  unint64_t v3 = *pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  pxrInternal__aapl__pxrReserved__::TfType::AddAlias((uint64_t *)&v3, v2, a1);
}

void sub_216F1E424(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomGetStageUpAxis(uint64_t *a1@<X0>, atomic_uint **a2@<X8>)
{
  char v4 = sub_216D24140(a1);
  if (v5 & 1 | (unint64_t)v4)
  {
    uint64_t v6 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_216D01530(a1);
    int v7 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v7) {
      int v7 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    if (pxrInternal__aapl__pxrReserved__::UsdStage::HasAuthoredMetadata(v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v7 + 1184)))
    {
      *a2 = 0;
      uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_216D01530(a1);
      uint64_t v9 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      if (!v9) {
        uint64_t v9 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      }
      sub_216E0A780(v8, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v9 + 1184), a2);
    }
    else
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomGetFallbackUpAxis(a2);
    }
  }
  else
  {
    v10[0] = "usdGeom/metrics.cpp";
    v10[1] = "UsdGeomGetStageUpAxis";
    uint64_t v10[2] = 54;
    void v10[3] = "TfToken pxrInternal__aapl__pxrReserved__::UsdGeomGetStageUpAxis(const UsdStageWeakPtr &)";
    char v11 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v10, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid UsdStage");
    *a2 = 0;
  }
}

void pxrInternal__aapl__pxrReserved__::UsdGeomGetFallbackUpAxis(atomic_uint **a1@<X8>)
{
  unint64_t v3 = (uint64_t *)atomic_load((unint64_t *)&qword_267B92C38);
  if (v3) {
    goto LABEL_2;
  }
  unint64_t v3 = (uint64_t *)operator new(8uLL);
  *unint64_t v3 = 0;
  v78[0] = 0;
  memset(&v77, 0, sizeof(v77));
  uint64_t v6 = (pxrInternal__aapl__pxrReserved__::SdfSchemaBase *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_instance);
  if (!v6) {
    pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_CreateInstance();
  }
  int v7 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v7) {
    int v7 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  Fallback = (pxrInternal__aapl__pxrReserved__::VtValue *)pxrInternal__aapl__pxrReserved__::SdfSchemaBase::GetFallback(v6, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v7 + 1184));
  uint64_t v9 = (pxrInternal__aapl__pxrReserved__::PlugRegistry *)sub_21695C470(Fallback);
  uint64_t v76 = *(void *)v9;
  if ((v76 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v76 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v76 &= 0xFFFFFFFFFFFFFFF8;
  }
  Instance = (pxrInternal__aapl__pxrReserved__::PlugRegistry *)pxrInternal__aapl__pxrReserved__::PlugRegistry::GetInstance(v9);
  pxrInternal__aapl__pxrReserved__::PlugRegistry::GetAllPlugins((uint64_t *)&v75, Instance);
  for (long long i = v75; (void)i != *((void *)&i + 1); sub_216F1F520(&i))
  {
    long long v13 = (uint64_t *)sub_216F1F32C((uint64_t *)&i, v11, v12);
    uint64_t v14 = v13[1];
    uint64_t v72 = *v13;
    uint64_t v73 = v14;
    if (v14) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v14 + 8), 1u, memory_order_relaxed);
    }
    uint64_t v15 = (const void ***)sub_2168E5D78(&v72);
    pxrInternal__aapl__pxrReserved__::PlugPlugin::GetMetadata(v15, v71);
    pxrInternal__aapl__pxrReserved__::JsValue::JsValue((pxrInternal__aapl__pxrReserved__::JsValue *)&v69);
    uint64_t v16 = (void *)sub_216F1F3AC();
    if (!sub_216F1F5A0((pxrInternal__aapl__pxrReserved__::TfToken *)v71, v16, &v69))
    {
LABEL_103:
      int v25 = 0;
      goto LABEL_104;
    }
    if (!pxrInternal__aapl__pxrReserved__::JsValue::IsObject((pxrInternal__aapl__pxrReserved__::JsValue *)&v69))
    {
      int v64 = (void **)"usdGeom/metrics.cpp";
      uint64_t v65 = "_fallbackUpAxis_Tf_StaticDataFactoryImpl";
      uint64_t v66 = 107;
      uint64_t v67 = "void pxrInternal__aapl__pxrReserved__::_fallbackUpAxis_Tf_StaticDataFactoryImpl(std::remove_const_t<TfToken> *)";
      char v68 = 0;
      uint64_t v21 = sub_2168E5D78(&v72);
      uint64_t v22 = (const char *)(v21 + 8);
      if (*(char *)(v21 + 31) < 0) {
        uint64_t v22 = *(const char **)v22;
      }
      unint64_t v23 = *(void *)sub_216F1F3AC() & 0xFFFFFFFFFFFFFFF8;
      if (v23)
      {
        uint64_t v24 = (const char *)(v23 + 16);
        if (*(char *)(v23 + 39) < 0) {
          uint64_t v24 = *(const char **)v24;
        }
      }
      else
      {
        uint64_t v24 = "";
      }
      pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v64, 1, (pxrInternal__aapl__pxrReserved__ *)"%s[%s] was not a dictionary in plugInfo.json file.", v22, v24);
      int v25 = 4;
      goto LABEL_104;
    }
    JsObject = (const void ***)pxrInternal__aapl__pxrReserved__::JsValue::GetJsObject(&v69);
    sub_2168BB7AC(v63, JsObject);
    pxrInternal__aapl__pxrReserved__::JsValue::JsValue((pxrInternal__aapl__pxrReserved__::JsValue *)&v61);
    uint64_t v18 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v18) {
      uint64_t v18 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    if (!sub_216F1F5A0((pxrInternal__aapl__pxrReserved__::TfToken *)v63, (void *)v18 + 148, &v61))
    {
LABEL_99:
      int v25 = 0;
      goto LABEL_100;
    }
    if (!pxrInternal__aapl__pxrReserved__::JsValue::IsString((pxrInternal__aapl__pxrReserved__::JsValue *)&v61))
    {
      int v64 = (void **)"usdGeom/metrics.cpp";
      uint64_t v65 = "_fallbackUpAxis_Tf_StaticDataFactoryImpl";
      uint64_t v66 = 122;
      uint64_t v67 = "void pxrInternal__aapl__pxrReserved__::_fallbackUpAxis_Tf_StaticDataFactoryImpl(std::remove_const_t<TfToken> *)";
      char v68 = 0;
      uint64_t v26 = sub_2168E5D78(&v72);
      float64x2_t v27 = (const char *)(v26 + 8);
      if (*(char *)(v26 + 31) < 0) {
        float64x2_t v27 = *(const char **)v27;
      }
      unint64_t v28 = *(void *)sub_216F1F3AC() & 0xFFFFFFFFFFFFFFF8;
      if (v28)
      {
        int v29 = (const char *)(v28 + 16);
        if (*(char *)(v28 + 39) < 0) {
          int v29 = *(const char **)v29;
        }
      }
      else
      {
        int v29 = "";
      }
      uint64_t v33 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      if (!v33) {
        uint64_t v33 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      }
      unint64_t v34 = *((void *)v33 + 148) & 0xFFFFFFFFFFFFFFF8;
      if (v34)
      {
        uint64_t v35 = (const char *)(v34 + 16);
        if (*(char *)(v34 + 39) < 0) {
          uint64_t v35 = *(const char **)v35;
        }
      }
      else
      {
        uint64_t v35 = "";
      }
      pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v64, 1, (pxrInternal__aapl__pxrReserved__ *)"%s[%s][%s] was not a string.", v27, v29, v35);
      int v25 = 4;
      goto LABEL_100;
    }
    unint64_t String = pxrInternal__aapl__pxrReserved__::JsValue::GetString((pxrInternal__aapl__pxrReserved__::JsValue *)&v61);
    if (*(char *)(String + 23) < 0)
    {
      sub_216778F24(__p, *(void **)String, *(void *)(String + 8));
    }
    else
    {
      long long v20 = *(_OWORD *)String;
      uint64_t v60 = *(void *)(String + 16);
      *(_OWORD *)std::string __p = v20;
    }
    uint64_t v58 = 0;
    if (SHIBYTE(v60) < 0)
    {
      if (__p[1] != (void *)1) {
        goto LABEL_71;
      }
      int v30 = *(unsigned __int8 *)__p[0];
    }
    else
    {
      if (SHIBYTE(v60) != 1) {
        goto LABEL_71;
      }
      int v30 = LOBYTE(__p[0]);
    }
    if (v30 == 89)
    {
      uint64_t v31 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      if (!v31) {
        uint64_t v31 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      }
      uint64_t v32 = (void *)((char *)v31 + 1344);
    }
    else
    {
      if (v30 != 90)
      {
LABEL_71:
        int v64 = (void **)"usdGeom/metrics.cpp";
        uint64_t v65 = "_fallbackUpAxis_Tf_StaticDataFactoryImpl";
        uint64_t v66 = 139;
        uint64_t v67 = "void pxrInternal__aapl__pxrReserved__::_fallbackUpAxis_Tf_StaticDataFactoryImpl(std::remove_const_t<TfToken> *)";
        char v68 = 0;
        uint64_t v43 = sub_2168E5D78(&v72);
        uint64_t v44 = (const char *)(v43 + 8);
        if (*(char *)(v43 + 31) < 0) {
          uint64_t v44 = *(const char **)v44;
        }
        unint64_t v45 = *(void *)sub_216F1F3AC() & 0xFFFFFFFFFFFFFFF8;
        if (v45)
        {
          int v46 = (const char *)(v45 + 16);
          if (*(char *)(v45 + 39) < 0) {
            int v46 = *(const char **)v46;
          }
        }
        else
        {
          int v46 = "";
        }
        uint64_t v47 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
        if (!v47) {
          uint64_t v47 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
        }
        unint64_t v48 = *((void *)v47 + 148) & 0xFFFFFFFFFFFFFFF8;
        if (v48)
        {
          uint64_t v49 = (const char *)(v48 + 16);
          if (*(char *)(v48 + 39) < 0) {
            uint64_t v49 = *(const char **)v49;
          }
        }
        else
        {
          uint64_t v49 = "";
        }
        uint64_t v50 = __p;
        if (v60 < 0) {
          uint64_t v50 = (void **)__p[0];
        }
        pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v64, 1, (pxrInternal__aapl__pxrReserved__ *)"%s[%s][%s] had value \"%s\", but only \"Y\" and \"Z\" are allowed.", v44, v46, v49, (const char *)v50);
        char v51 = 0;
        int v25 = 4;
        goto LABEL_94;
      }
      uint64_t v36 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      if (!v36) {
        uint64_t v36 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
      }
      uint64_t v32 = (void *)((char *)v36 + 1352);
    }
    sub_2168D2318(&v58, v32);
    if (!v78[0])
    {
      uint64_t v52 = sub_2168E5D78(&v72);
      std::string::operator=(&v77, (const std::string *)(v52 + 8));
      sub_2168D2318(v78, &v58);
LABEL_87:
      int v25 = 0;
      char v51 = 1;
      goto LABEL_94;
    }
    if ((v78[0] & 0xFFFFFFFFFFFFFFF8) == (v58 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_87;
    }
    int v64 = (void **)"usdGeom/metrics.cpp";
    uint64_t v65 = "_fallbackUpAxis_Tf_StaticDataFactoryImpl";
    uint64_t v66 = 151;
    uint64_t v67 = "void pxrInternal__aapl__pxrReserved__::_fallbackUpAxis_Tf_StaticDataFactoryImpl(std::remove_const_t<TfToken> *)";
    char v68 = 0;
    if ((v77.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v37 = &v77;
    }
    else {
      uint64_t v37 = (std::string *)v77.__r_.__value_.__r.__words[0];
    }
    uint64_t v38 = sub_2168E5D78(&v72);
    uint64_t v39 = (const char *)(v38 + 8);
    if (*(char *)(v38 + 31) < 0) {
      uint64_t v39 = *(const char **)v39;
    }
    uint64_t v40 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v40) {
      uint64_t v40 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    unint64_t v41 = *((void *)v40 + 148) & 0xFFFFFFFFFFFFFFF8;
    if (v41)
    {
      uint64_t v42 = (const char *)(v41 + 16);
      if (*(char *)(v41 + 39) < 0) {
        uint64_t v42 = *(const char **)v42;
      }
    }
    else
    {
      uint64_t v42 = "";
    }
    unint64_t v53 = v76 & 0xFFFFFFFFFFFFFFF8;
    if ((v76 & 0xFFFFFFFFFFFFFFF8) != 0)
    {
      int v54 = (const char *)(v53 + 16);
      if (*(char *)(v53 + 39) < 0) {
        int v54 = *(const char **)v54;
      }
    }
    else
    {
      int v54 = "";
    }
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v64, 1, (pxrInternal__aapl__pxrReserved__ *)"Plugins %s and %s provided different fallback values for %s.  Ignoring all plugins and using schema fallback of \"%s\"", (const char *)v37, v39, v42, v54);
    sub_2168D2318(v3, &v76);
    char v51 = 0;
    int v25 = 1;
LABEL_94:
    if ((v58 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v58 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    if (SHIBYTE(v60) < 0) {
      operator delete(__p[0]);
    }
    if (v51) {
      goto LABEL_99;
    }
LABEL_100:
    if (v62) {
      sub_216784EC4(v62);
    }
    sub_216812ED4((uint64_t)v63, (void *)v63[1]);
    if (!v25) {
      goto LABEL_103;
    }
LABEL_104:
    if (v70) {
      sub_216784EC4(v70);
    }
    sub_216812ED4((uint64_t)v71, (void *)v71[1]);
    uint64_t v55 = v73;
    if (v73 && atomic_fetch_add_explicit((atomic_uint *volatile)(v73 + 8), 0xFFFFFFFF, memory_order_release) == 1) {
      (*(void (**)(uint64_t))(*(void *)v55 + 8))(v55);
    }
    if ((v25 | 4) != 4) {
      goto LABEL_115;
    }
  }
  if (v78[0]) {
    uint64_t v56 = v78;
  }
  else {
    uint64_t v56 = &v76;
  }
  sub_2168D2318(v3, v56);
LABEL_115:
  int v64 = (void **)&v75;
  sub_216850BF4(&v64);
  if ((v76 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v76 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  if (SHIBYTE(v77.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v77.__r_.__value_.__l.__data_);
  }
  if ((v78[0] & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v78[0] & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  uint64_t v57 = 0;
  atomic_compare_exchange_strong(&qword_267B92C38, (unint64_t *)&v57, (unint64_t)v3);
  if (v57)
  {
    if ((*v3 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(*v3 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    operator delete(v3);
    unint64_t v3 = (uint64_t *)atomic_load((unint64_t *)&qword_267B92C38);
  }
LABEL_2:
  uint64_t v4 = *v3;
  *a1 = (atomic_uint *)*v3;
  if ((v4 & 7) != 0)
  {
    char v5 = (atomic_uint *)(v4 & 0xFFFFFFFFFFFFFFF8);
    if ((atomic_fetch_add_explicit(v5, 2u, memory_order_relaxed) & 1) == 0) {
      *a1 = v5;
    }
  }
}

void sub_216F1ECB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,std::__shared_weak_count *a22,char a23,void *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,std::__shared_weak_count *a32,char a33,void *a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  if ((a14 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(a14 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a22) {
    sub_216784EC4(a22);
  }
  sub_216812ED4((uint64_t)&a23, a24);
  if (a32) {
    sub_216784EC4(a32);
  }
  sub_216812ED4((uint64_t)&a33, a34);
  uint64_t v39 = a37;
  if (a37 && atomic_fetch_add_explicit((atomic_uint *volatile)(a37 + 8), 0xFFFFFFFF, memory_order_release) == 1) {
    (*(void (**)(uint64_t))(*(void *)v39 + 8))(v39);
  }
  a26 = v37 - 160;
  sub_216850BF4((void ***)&a26);
  uint64_t v40 = *(void *)(v37 - 136);
  if ((v40 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v40 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  if (*(char *)(v37 - 105) < 0) {
    operator delete(*(void **)(v37 - 128));
  }
  uint64_t v41 = *(void *)(v37 - 104);
  if ((v41 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v41 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomSetStageUpAxis(uint64_t *a1, void *a2)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_216D24140(a1);
  if (!(v5 & 1 | (unint64_t)v4))
  {
    unint64_t v23 = "usdGeom/metrics.cpp";
    uint64_t v24 = "UsdGeomSetStageUpAxis";
    uint64_t v25 = 74;
    uint64_t v26 = "BOOL pxrInternal__aapl__pxrReserved__::UsdGeomSetStageUpAxis(const UsdStageWeakPtr &, const TfToken &)";
    char v27 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v23, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid UsdStage");
    return 0;
  }
  uint64_t v6 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v6) {
    uint64_t v6 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  if ((*a2 & 0xFFFFFFFFFFFFFFF8) != (*((void *)v6 + 168) & 0xFFFFFFFFFFFFFFF8))
  {
    int v7 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v7) {
      int v7 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    unint64_t v8 = *a2 & 0xFFFFFFFFFFFFFFF8;
    if (v8 != (*((void *)v7 + 169) & 0xFFFFFFFFFFFFFFF8))
    {
      unint64_t v23 = "usdGeom/metrics.cpp";
      uint64_t v24 = "UsdGeomSetStageUpAxis";
      uint64_t v25 = 82;
      uint64_t v26 = "BOOL pxrInternal__aapl__pxrReserved__::UsdGeomSetStageUpAxis(const UsdStageWeakPtr &, const TfToken &)";
      char v27 = 0;
      if (v8)
      {
        uint64_t v9 = (const char *)(v8 + 16);
        if (*(char *)(v8 + 39) < 0) {
          uint64_t v9 = *(const char **)v9;
        }
      }
      else
      {
        uint64_t v9 = "";
      }
      uint64_t v15 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_216D01530(a1);
      pxrInternal__aapl__pxrReserved__::UsdStage::GetRootLayer(v15, &v21);
      uint64_t v16 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_2169791E0(&v21);
      uint64_t Identifier = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v16);
      if (*(char *)(Identifier + 23) >= 0) {
        uint64_t v18 = (const char *)Identifier;
      }
      else {
        uint64_t v18 = *(const char **)Identifier;
      }
      pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v23, 1, (pxrInternal__aapl__pxrReserved__ *)"UsdStage upAxis can only be set to \"Y\" or \"Z\", not attempted \"%s\" on stage %s.", v9, v18);
      uint64_t v19 = v22;
      if (v22 && atomic_fetch_add_explicit((atomic_uint *volatile)(v22 + 8), 0xFFFFFFFF, memory_order_release) == 1) {
        (*(void (**)(uint64_t))(*(void *)v19 + 8))(v19);
      }
      return 0;
    }
  }
  uint64_t v10 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_216D01530(a1);
  uint64_t v11 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v11) {
    uint64_t v11 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  uint64_t v12 = (char *)*a2;
  unint64_t v23 = v12;
  uint64_t v24 = (char *)&off_26C750C70 + 1;
  if ((v12 & 7) != 0)
  {
    long long v13 = (atomic_uint *)((unint64_t)v12 & 0xFFFFFFFFFFFFFFF8);
    if ((atomic_fetch_add_explicit(v13, 2u, memory_order_relaxed) & 1) == 0) {
      unint64_t v23 = (char *)v13;
    }
  }
  uint64_t v14 = pxrInternal__aapl__pxrReserved__::UsdStage::SetMetadata(v10, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v11 + 1184), (const pxrInternal__aapl__pxrReserved__::VtValue *)&v23);
  sub_2168EE084((uint64_t)&v23);
  return v14;
}

void sub_216F1F064(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_2168EE084((uint64_t)va);
  _Unwind_Resume(a1);
}

double pxrInternal__aapl__pxrReserved__::UsdGeomGetStageMetersPerUnit(uint64_t *a1)
{
  double v9 = 0.01;
  unint64_t v2 = sub_216D24140(a1);
  if (v3 & 1 | (unint64_t)v2)
  {
    uint64_t v4 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_216D01530(a1);
    char v5 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v5) {
      char v5 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    sub_216E099A8(v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v5 + 560), &v9);
    return v9;
  }
  else
  {
    v7[0] = "usdGeom/metrics.cpp";
    v7[1] = "UsdGeomGetStageMetersPerUnit";
    uint64_t v7[2] = 190;
    v7[3] = "double pxrInternal__aapl__pxrReserved__::UsdGeomGetStageMetersPerUnit(const UsdStageWeakPtr &)";
    char v8 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v7, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid UsdStage");
    return 0.01;
  }
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomStageHasAuthoredMetersPerUnit(uint64_t *a1)
{
  unint64_t v2 = sub_216D24140(a1);
  if (v3 & 1 | (unint64_t)v2)
  {
    uint64_t v4 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_216D01530(a1);
    char v5 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v5) {
      char v5 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    return pxrInternal__aapl__pxrReserved__::UsdStage::HasAuthoredMetadata(v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v5 + 560));
  }
  else
  {
    v7[0] = "usdGeom/metrics.cpp";
    v7[1] = "UsdGeomStageHasAuthoredMetersPerUnit";
    uint64_t v7[2] = 202;
    v7[3] = "BOOL pxrInternal__aapl__pxrReserved__::UsdGeomStageHasAuthoredMetersPerUnit(const UsdStageWeakPtr &)";
    char v8 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v7, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid UsdStage");
    return 0;
  }
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomSetStageMetersPerUnit(uint64_t *a1, double a2)
{
  double v10 = a2;
  char v3 = sub_216D24140(a1);
  if (v4 & 1 | (unint64_t)v3)
  {
    char v5 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_216D01530(a1);
    uint64_t v6 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v6) {
      uint64_t v6 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    return sub_216E08DBC(v5, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v6 + 560), &v10);
  }
  else
  {
    v8[0] = "usdGeom/metrics.cpp";
    v8[1] = "UsdGeomSetStageMetersPerUnit";
    v8[2] = 213;
    _OWORD v8[3] = "BOOL pxrInternal__aapl__pxrReserved__::UsdGeomSetStageMetersPerUnit(const UsdStageWeakPtr &, double)";
    char v9 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v8, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid UsdStage");
    return 0;
  }
}

BOOL pxrInternal__aapl__pxrReserved__::UsdGeomLinearUnitsAre(pxrInternal__aapl__pxrReserved__ *this, double a2, double a3, double a4)
{
  BOOL result = 0;
  if (a2 > 0.0 && a3 > 0.0)
  {
    double v5 = vabdd_f64(a2, a3);
    return v5 / a2 < a4 && v5 / a3 < a4;
  }
  return result;
}

uint64_t sub_216F1F32C(uint64_t *a1, uint64_t a2, char *a3)
{
  uint64_t result = *a1;
  if (result == a1[1])
  {
    v5[0] = "tf/iterator.h";
    v5[1] = "operator*";
    double v5[2] = 271;
    void v5[3] = "Reference pxrInternal__aapl__pxrReserved__::TfIterator<std::vector<pxrInternal__aapl__pxrReserved__::TfWeakP"
            "tr<pxrInternal__aapl__pxrReserved__::PlugPlugin>>>::operator*() [T = std::vector<pxrInternal__aapl__pxrReser"
            "ved__::TfWeakPtr<pxrInternal__aapl__pxrReserved__::PlugPlugin>>, Reverse = false]";
    char v6 = 0;
    int v7 = 4;
    pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper::IssueFatalError((pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper *)v5, (pxrInternal__aapl__pxrReserved__ *)"iterator exhausted", a3);
  }
  return result;
}

void sub_216F1F3A4()
{
}

unint64_t sub_216F1F3AC()
{
  unint64_t v0 = (char *)atomic_load((unint64_t *)&qword_267B92C40);
  if (!v0)
  {
    unint64_t v0 = (char *)operator new(0x20uLL);
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken(v0, "UsdGeomMetrics", 0);
    uint64_t v2 = *(void *)v0;
    if ((*(void *)v0 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v2 &= 0xFFFFFFFFFFFFFFF8;
    }
    *((void *)v0 + 1) = 0;
    *((void *)v0 + 2) = 0;
    *((void *)v0 + 3) = 0;
    char v6 = (void **)(v0 + 8);
    char v7 = 0;
    char v3 = operator new(8uLL);
    *((void *)v0 + 1) = v3;
    *((void *)v0 + 2) = v3;
    *char v3 = v2;
    char v4 = v3 + 1;
    *((void *)v0 + 3) = v3 + 1;
    if ((v2 & 7) != 0)
    {
      if ((atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0) {
        *v3 &= 0xFFFFFFFFFFFFFFF8;
      }
      *((void *)v0 + 2) = v4;
      atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    else
    {
      *((void *)v0 + 2) = v4;
    }
    uint64_t v5 = 0;
    atomic_compare_exchange_strong(&qword_267B92C40, (unint64_t *)&v5, (unint64_t)v0);
    if (v5)
    {
      char v6 = (void **)(v0 + 8);
      sub_216889A04(&v6);
      if ((*(void *)v0 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(*(void *)v0 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      operator delete(v0);
      return atomic_load((unint64_t *)&qword_267B92C40);
    }
  }
  return (unint64_t)v0;
}

void sub_216F1F4D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  sub_216889A04(&a9);
  if ((v10 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v10 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  if ((*v9 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(*v9 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  operator delete(v9);
  _Unwind_Resume(a1);
}

void *sub_216F1F520(void *a1)
{
  if (*a1 == a1[1])
  {
    v3[0] = "tf/iterator.h";
    v3[1] = "operator++";
    v3[2] = 250;
    v3[3] = "TfIterator<T, Reverse> &pxrInternal__aapl__pxrReserved__::TfIterator<std::vector<pxrInternal__aapl__pxrReser"
            "ved__::TfWeakPtr<pxrInternal__aapl__pxrReserved__::PlugPlugin>>>::operator++() [T = std::vector<pxrInternal_"
            "_aapl__pxrReserved__::TfWeakPtr<pxrInternal__aapl__pxrReserved__::PlugPlugin>>, Reverse = false]";
    char v4 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v3, 1, (pxrInternal__aapl__pxrReserved__ *)"iterator exhausted");
  }
  else
  {
    *a1 += 16;
  }
  return a1;
}

BOOL sub_216F1F5A0(pxrInternal__aapl__pxrReserved__::TfToken *a1, void *a2, void *a3)
{
  if ((*a2 & 0xFFFFFFFFFFFFFFF8) != 0) {
    Emptyunint64_t String = (uint64_t *)((*a2 & 0xFFFFFFFFFFFFFFF8) + 16);
  }
  else {
    Emptyunint64_t String = pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(a1);
  }
  uint64_t v6 = sub_21678C2D8((uint64_t)a1, (const void **)EmptyString);
  uint64_t v7 = v6;
  char v8 = (char *)a1 + 8;
  if (v8 != (char *)v6)
  {
    uint64_t v10 = *(void *)(v6 + 56);
    uint64_t v9 = *(void *)(v6 + 64);
    if (v9) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v9 + 8), 1uLL, memory_order_relaxed);
    }
    uint64_t v11 = (std::__shared_weak_count *)a3[1];
    *a3 = v10;
    a3[1] = v9;
    if (v11) {
      sub_216784EC4(v11);
    }
  }
  return v8 != (char *)v7;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::~UsdGeomModelAPI(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this)
{
  pxrInternal__aapl__pxrReserved__::UsdAPISchemaBase::~UsdAPISchemaBase(this);

  operator delete(v1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::Get(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  uint64_t v6 = sub_216D24140(a1);
  if (v7 & 1 | (unint64_t)v6)
  {
    char v8 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_216D01530(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(v8, a2, (uint64_t)&v9);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *((void *)a3 + 3) = 0;
    *(void *)a3 = &unk_26C76CB40;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  else
  {
    uint64_t v9 = "usdGeom/modelAPI.cpp";
    uint64_t v10 = (atomic_ullong *)"Get";
    uint64_t v11 = 51;
    unint64_t v12 = (unint64_t)"static UsdGeomModelAPI pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::Get(const UsdStage"
                            "Ptr &, const SdfPath &)";
    char v13 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v9, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v9) = 1;
    uint64_t v10 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v11);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v11 + 1);
    unint64_t v12 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *((void *)a3 + 3) = 0;
    *(void *)a3 = &unk_26C76CB40;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  if (v10) {
    sub_216D16E0C(v10);
  }
}

void sub_216F1F7E8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216D16AD8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::_GetSchemaKind(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this)
{
  return 5;
}

uint64_t sub_216F1F810(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *a1, uint64_t a2)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::_GetStaticTfType(a1);
  SchemaInfo = (pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry *)pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry::FindSchemaInfo((pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry *)&qword_267B92C48, v4);
  if (SchemaInfo)
  {
    return pxrInternal__aapl__pxrReserved__::UsdPrim::_CanApplySingleApplyAPI(a1, SchemaInfo, a2);
  }
  else
  {
    v12[0] = "usd/prim.h";
    v12[1] = "CanApplyAPI";
    void v12[2] = 1024;
    void v12[3] = "BOOL pxrInternal__aapl__pxrReserved__::UsdPrim::CanApplyAPI(std::string *) const [SchemaType = pxrInternal_"
             "_aapl__pxrReserved__::UsdGeomModelAPI]";
    char v13 = 0;
    uint64_t TypeName = pxrInternal__aapl__pxrReserved__::TfType::GetTypeName(v9);
    if (*(char *)(TypeName + 23) >= 0) {
      uint64_t v11 = (const char *)TypeName;
    }
    else {
      uint64_t v11 = *(const char **)TypeName;
    }
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v12, 1, (pxrInternal__aapl__pxrReserved__ *)"Class '%s' is not correctly registered with the UsdSchemaRegistry as a schema type. The schema may need to be regenerated.", v11);
    return 0;
  }
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::Apply(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this@<X0>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a2@<X8>)
{
  if (sub_216F1F9F8(this))
  {
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a2, this);
    *((void *)a2 + 3) = 0;
    *(void *)a2 = &unk_26C76CB40;
  }
  else
  {
    int v5 = 1;
    uint64_t v6 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
    uint64_t v9 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a2, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v5);
    *((void *)a2 + 3) = 0;
    *(void *)a2 = &unk_26C76CB40;
    if ((v9 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v9 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v8);
    sub_21697C414(&v7);
    if (v6) {
      sub_216D16E0C(v6);
    }
  }
}

void sub_216F1F9E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_216F1F9F8(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *a1)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::_GetStaticTfType(a1);
  SchemaInfo = (const pxrInternal__aapl__pxrReserved__::TfToken *)pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry::FindSchemaInfo((pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry *)&qword_267B92C48, v2);
  if (SchemaInfo)
  {
    return pxrInternal__aapl__pxrReserved__::UsdPrim::_ApplySingleApplyAPI(a1, SchemaInfo);
  }
  else
  {
    v10[0] = "usd/prim.h";
    v10[1] = "ApplyAPI";
    uint64_t v10[2] = 1147;
    void v10[3] = "BOOL pxrInternal__aapl__pxrReserved__::UsdPrim::ApplyAPI() const [SchemaType = pxrInternal__aapl__pxrReserv"
             "ed__::UsdGeomModelAPI]";
    char v11 = 0;
    uint64_t TypeName = pxrInternal__aapl__pxrReserved__::TfType::GetTypeName(v7);
    if (*(char *)(TypeName + 23) >= 0) {
      uint64_t v9 = (const char *)TypeName;
    }
    else {
      uint64_t v9 = *(const char **)TypeName;
    }
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v10, 1, (pxrInternal__aapl__pxrReserved__ *)"Class '%s' is not correctly registered with the UsdSchemaRegistry as a schema type. The schema may need to be regenerated.", v9);
    return 0;
  }
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::_GetStaticTfType(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92C50, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92C50))
  {
    __cxa_guard_release(&qword_267B92C50);
  }
  return &qword_267B92C48;
}

void sub_216F1FB2C(_Unwind_Exception *a1)
{
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::_IsTypedSchema(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92C60, memory_order_acquire) & 1) == 0)
  {
    uint64_t v2 = (pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *)__cxa_guard_acquire(&qword_267B92C60);
    if (v2)
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::_GetStaticTfType(v2);
      byte_267B92C58 = sub_216D16508((char *)&qword_267B92C48, v3, v4);
      __cxa_guard_release(&qword_267B92C60);
    }
  }
  return byte_267B92C58;
}

void sub_216F1FBAC(_Unwind_Exception *a1)
{
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::_GetTfType(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this)
{
  return &qword_267B92C48;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::GetModelDrawModeAttr(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  char v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    char v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 632), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F1FC84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::CreateModelDrawModeAttr(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  uint64_t v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    uint64_t v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 632), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 88), 0, 1, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::GetModelApplyDrawModeAttr(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  char v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    char v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 568), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F1FDEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::CreateModelApplyDrawModeAttr(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  uint64_t v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    uint64_t v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 568), v9, 0, 1, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::GetModelDrawModeColorAttr(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  char v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    char v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 640), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F1FF54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::CreateModelDrawModeColorAttr(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  uint64_t v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    uint64_t v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 640), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 160), 0, 1, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::GetModelCardGeometryAttr(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  char v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    char v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 576), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F200BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::CreateModelCardGeometryAttr(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  uint64_t v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    uint64_t v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 576), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 88), 0, 1, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::GetModelCardTextureXPosAttr(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  char v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    char v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 592), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F20224(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::CreateModelCardTextureXPosAttr(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  uint64_t v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    uint64_t v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 592), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 96), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::GetModelCardTextureYPosAttr(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  char v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    char v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 608), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F2038C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::CreateModelCardTextureYPosAttr(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  uint64_t v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    uint64_t v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 608), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 96), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::GetModelCardTextureZPosAttr(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  char v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    char v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 624), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F204F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::CreateModelCardTextureZPosAttr(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  uint64_t v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    uint64_t v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 624), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 96), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::GetModelCardTextureXNegAttr(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  char v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    char v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 584), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F2065C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::CreateModelCardTextureXNegAttr(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  uint64_t v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    uint64_t v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 584), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 96), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::GetModelCardTextureYNegAttr(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  char v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    char v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 600), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F207C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::CreateModelCardTextureYNegAttr(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  uint64_t v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    uint64_t v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 600), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 96), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::GetModelCardTextureZNegAttr(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  char v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    char v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 616), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F2092C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::CreateModelCardTextureZNegAttr(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  uint64_t v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    uint64_t v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 616), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 96), 0, 0, a2, a3, a4);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::GetSchemaAttributeNames(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this)
{
  int v1 = (int)this;
  uint64_t v36 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92C80, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92C80))
  {
    char v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v3) {
      char v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v4 = *((void *)v3 + 79);
    uint64_t v26 = v4;
    if ((v4 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v4 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v26 &= 0xFFFFFFFFFFFFFFF8;
    }
    int v5 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v5) {
      int v5 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v6 = *((void *)v5 + 71);
    uint64_t v27 = v6;
    if ((v6 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v6 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v27 &= 0xFFFFFFFFFFFFFFF8;
    }
    int v7 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v7) {
      int v7 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v8 = *((void *)v7 + 80);
    uint64_t v28 = v8;
    if ((v8 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v28 &= 0xFFFFFFFFFFFFFFF8;
    }
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v9) {
      uint64_t v9 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v10 = *((void *)v9 + 72);
    uint64_t v29 = v10;
    if ((v10 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v10 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v29 &= 0xFFFFFFFFFFFFFFF8;
    }
    char v11 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v11) {
      char v11 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v12 = *((void *)v11 + 74);
    uint64_t v30 = v12;
    if ((v12 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v30 &= 0xFFFFFFFFFFFFFFF8;
    }
    char v13 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v13) {
      char v13 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v14 = *((void *)v13 + 76);
    uint64_t v31 = v14;
    if ((v14 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v14 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v31 &= 0xFFFFFFFFFFFFFFF8;
    }
    uint64_t v15 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v15) {
      uint64_t v15 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v16 = *((void *)v15 + 78);
    uint64_t v32 = v16;
    if ((v16 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v16 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v32 &= 0xFFFFFFFFFFFFFFF8;
    }
    uint64_t v17 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v17) {
      uint64_t v17 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v18 = *((void *)v17 + 73);
    uint64_t v33 = v18;
    if ((v18 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v18 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v33 &= 0xFFFFFFFFFFFFFFF8;
    }
    uint64_t v19 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v19) {
      uint64_t v19 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v20 = *((void *)v19 + 75);
    uint64_t v34 = v20;
    if ((v20 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v20 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v34 &= 0xFFFFFFFFFFFFFFF8;
    }
    uint64_t v21 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v21) {
      uint64_t v21 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v22 = *((void *)v21 + 77);
    uint64_t v35 = v22;
    if ((v22 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v22 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v35 &= 0xFFFFFFFFFFFFFFF8;
    }
    sub_216D30CFC(&qword_267B92C68, &v26, 0xAuLL);
    for (uint64_t i = 72; i != -8; i -= 8)
    {
      uint64_t v24 = *(uint64_t *)((char *)&v26 + i);
      if ((v24 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v24 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
    }
    __cxa_atexit((void (*)(void *))sub_216B554D0, &qword_267B92C68, &dword_216758000);
    __cxa_guard_release(&qword_267B92C80);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92CA0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92CA0))
  {
    SchemaAttributeNames = pxrInternal__aapl__pxrReserved__::UsdAPISchemaBase::GetSchemaAttributeNames((pxrInternal__aapl__pxrReserved__::UsdAPISchemaBase *)1);
    sub_216F20ED8((uint64_t **)SchemaAttributeNames);
    __cxa_atexit((void (*)(void *))sub_216B554D0, &qword_267B92C88, &dword_216758000);
    __cxa_guard_release(&qword_267B92CA0);
  }
  if (v1) {
    return &qword_267B92C88;
  }
  else {
    return &qword_267B92C68;
  }
}

void sub_216F20E54(_Unwind_Exception *a1)
{
}

void *sub_216F20ED8(uint64_t **a1)
{
  qword_267B92C90 = 0;
  unk_267B92C98 = 0;
  qword_267B92C88 = 0;
  sub_216973388((char **)&qword_267B92C88, ((*(void *)algn_267B92C70 - qword_267B92C68) >> 3) + a1[1] - *a1);
  sub_216AE27E0(&qword_267B92C88, (void *)qword_267B92C90, *a1, a1[1], a1[1] - *a1);
  return sub_216AE27E0(&qword_267B92C88, (void *)qword_267B92C90, (uint64_t *)qword_267B92C68, *(uint64_t **)algn_267B92C70, (*(void *)algn_267B92C70 - qword_267B92C68) >> 3);
}

void sub_216F20F70(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216889A04((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::GetExtentsHint(uint64_t a1)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)(a1 + 8), (_DWORD *)(a1 + 16));
  int v1 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v1) {
    int v1 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v1 + 304), (uint64_t)v9);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
  if (pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)v9, v2))pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::VtArray<pxrInternal__aapl__pxrReserved__::GfVec3f>>(); {
  if ((v13 & 7) != 0)
  }
    atomic_fetch_add_explicit((atomic_uint *volatile)(v13 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v12);
  sub_21697C414(&v11);
  if (v10) {
    sub_216D16E0C(v10);
  }
  return 0;
}

void sub_216F210A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::SetExtentsHint(uint64_t a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  OrderedPurposeTokens = pxrInternal__aapl__pxrReserved__::UsdGeomImageable::GetOrderedPurposeTokens((pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)a1);
  BOOL v5 = v3 >= 2 && (v3 & 1) == 0;
  if (v5 && v3 <= (uint64_t)(OrderedPurposeTokens[1] - *OrderedPurposeTokens) >> 2)
  {
    sub_216D16CFC((uint64_t)v10, (uint64_t *)(a1 + 8), (_DWORD *)(a1 + 16));
    int v7 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v7) {
      int v7 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v8 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
    if (!v8) {
      uint64_t v8 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
    }
    pxrInternal__aapl__pxrReserved__::UsdPrim::CreateAttribute((uint64_t)v10, (uint64_t *)v7 + 38, (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v8 + 616), 0, 0, (uint64_t)&v15);
    if ((v14 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v14 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v13);
    sub_21697C414(&v12);
    if (v11) {
      sub_216D16E0C(v11);
    }
    if (pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)&v15, v9))pxrInternal__aapl__pxrReserved__::UsdAttribute::_Set<pxrInternal__aapl__pxrReserved__::VtArray<pxrInternal__aapl__pxrReserved__::GfVec3f>>(); {
    if ((v18 & 7) != 0)
    }
      atomic_fetch_add_explicit((atomic_uint *volatile)(v18 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v17 + 1);
    sub_21697C414(&v17);
    if (v16) {
      sub_216D16E0C(v16);
    }
  }
  else
  {
    uint64_t v15 = "usdGeom/modelAPI.cpp";
    uint64_t v16 = (atomic_ullong *)"SetExtentsHint";
    uint64_t v17 = 354;
    unint64_t v18 = (unint64_t)"BOOL pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::SetExtentsHint(const VtVec3fArray &,"
                            " const UsdTimeCode &) const";
    char v19 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v15, 1, (pxrInternal__aapl__pxrReserved__ *)"invalid extents size (%zu) - must be an even number >= 2 and <= 2 * UsdGeomImageable::GetOrderedPurposeTokens().size() (%zu)", v3, (uint64_t)(OrderedPurposeTokens[1] - *OrderedPurposeTokens) >> 2);
  }
  return 0;
}

void sub_216F2128C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_216D16AD8((uint64_t)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::GetExtentsHintAttr(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  unint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    unint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 304), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F21358(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::ComputeExtentsHint(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this@<X0>, pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache *a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92CB0, memory_order_acquire) & 1) == 0)
  {
    uint64_t v47 = (pxrInternal__aapl__pxrReserved__::UsdGeomImageable *)__cxa_guard_acquire(&qword_267B92CB0);
    if (v47)
    {
      qword_267B92CA8 = (uint64_t)pxrInternal__aapl__pxrReserved__::UsdGeomImageable::GetOrderedPurposeTokens(v47);
      __cxa_guard_release(&qword_267B92CB0);
    }
  }
  if (*(void *)qword_267B92CA8 != *(void *)(qword_267B92CA8 + 8)
    || (uint64_t v58 = (void **)"usdGeom/modelAPI.cpp",
        int v59 = (atomic_ullong *)"ComputeExtentsHint",
        uint64_t v60 = 378,
        unint64_t v61 = (unint64_t)"VtVec3fArray pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::ComputeExtentsHint(UsdGe"
                                "omBBoxCache &) const",
        char v62 = 0,
        int v46 = pxrInternal__aapl__pxrReserved__::Tf_VerifyStringFormat((pxrInternal__aapl__pxrReserved__ *)"we have no purpose!", (const char *)a2, a3), (pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v58, "!purposeTokens.empty()", v46) & 1) != 0))
  {
    *(void *)(a4 + 32) = 0;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
    unint64_t v48 = (_DWORD *)((char *)this + 16);
    uint64_t v49 = (uint64_t *)((char *)this + 8);
    sub_216D16CFC((uint64_t)&v58, (uint64_t *)this + 1, (_DWORD *)this + 4);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)&v68, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v58);
    char v68 = (unsigned int (**)(void **))&unk_26C76C628;
    if ((v61 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v61 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v60 + 1);
    sub_21697C414(&v60);
    if (v59) {
      sub_216D16E0C(v59);
    }
    if (v69 && (*(unsigned char *)(v69 + 57) & 8) == 0 && v68[4]((void **)&v68))
    {
      uint64_t v58 = (void **)*((void *)a2 + 42);
      if (pxrInternal__aapl__pxrReserved__::UsdGeomBoundable::ComputeExtentFromPlugins((uint64_t)&v68, (uint64_t)&v58, a4)&& *(void *)a4)
      {
        unint64_t v6 = (uint64_t)(*(void *)(qword_267B92CA8 + 8) - *(void *)qword_267B92CA8) >> 2;
        LODWORD(v59) = 0;
        uint64_t v58 = 0;
        *(void *)&v63.f64[0] = &v58;
        sub_2168FD278((unint64_t *)a4, v6, (uint64_t **)&v63);
        if (*(void *)(qword_267B92CA8 + 8) - *(void *)qword_267B92CA8 != 8)
        {
          uint64_t v9 = 0;
          uint64_t v10 = 1;
          do
          {
            sub_2168FD54C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a4, v7, v8);
            int v11 = *(uint64_t **)(a4 + 32);
            sub_2168FD54C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a4, v12, v13);
            uint64_t v14 = *(void *)(a4 + 32) + v9;
            uint64_t v15 = *v11;
            *(_DWORD *)(v14 + 32) = *((_DWORD *)v11 + 2);
            *(void *)(v14 + 24) = v15;
            sub_2168FD54C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a4, v16, v17);
            uint64_t v18 = *(void *)(a4 + 32);
            sub_2168FD54C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a4, v19, v20);
            uint64_t v21 = *(void *)(a4 + 32) + v9;
            int v22 = *(_DWORD *)(v18 + 20);
            *(void *)(v21 + 36) = *(void *)(v18 + 12);
            *(_DWORD *)(v21 + 44) = v22;
            ++v10;
            v9 += 24;
          }
          while (v10 != (uint64_t)(*(void *)(qword_267B92CA8 + 8) - *(void *)qword_267B92CA8) >> 3);
        }
      }
      else
      {
        LODWORD(v59) = 0;
        uint64_t v58 = 0;
        *(void *)&v63.f64[0] = &v58;
        sub_2168FD278((unint64_t *)a4, 2uLL, (uint64_t **)&v63);
        sub_2168FD54C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a4, v40, v41);
        uint64_t v42 = *(int32x2_t **)(a4 + 32);
        *uint64_t v42 = vdup_n_s32(0x7F7FFFFFu);
        v42[1].i32[0] = 2139095039;
        sub_2168FD54C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a4, v43, v44);
        uint64_t v45 = *(void *)(a4 + 32);
        *(void *)(v45 + 12) = 0x80000000800000;
        *(_DWORD *)(v45 + 2sub_2168EBBB8(&a9, 0) = -8388609;
      }
    }
    else
    {
      unint64_t v23 = (uint64_t)(*(void *)(qword_267B92CA8 + 8) - *(void *)qword_267B92CA8) >> 2;
      LODWORD(v59) = 0;
      uint64_t v58 = 0;
      *(void *)&v63.f64[0] = &v58;
      sub_2168FD278((unint64_t *)a4, v23, (uint64_t **)&v63);
      sub_216AFE5A8(v67, 1uLL);
      uint64_t v24 = *(void *)(qword_267B92CA8 + 8) - *(void *)qword_267B92CA8;
      if (v24)
      {
        uint64_t v25 = 0;
        uint64_t v26 = 0;
        uint64_t v27 = 0;
        uint64_t v28 = 0;
        uint64_t v29 = v24 >> 3;
        do
        {
          sub_2168D2318(v67[0], (void *)(*(void *)qword_267B92CA8 + v25));
          pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::SetIncludedPurposes((uint64_t)a2, v67);
          sub_216D16CFC((uint64_t)&v53, v49, v48);
          pxrInternal__aapl__pxrReserved__::UsdGeomBBoxCache::ComputeUntransformedBound(a2, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v53, (pxrInternal__aapl__pxrReserved__::GfBBox3d *)&v58);
          pxrInternal__aapl__pxrReserved__::GfBBox3d::ComputeAlignedRange((pxrInternal__aapl__pxrReserved__::GfBBox3d *)&v58, (uint64_t)&v63);
          if ((v57 & 7) != 0) {
            atomic_fetch_add_explicit((atomic_uint *volatile)(v57 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
          }
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v56);
          sub_21697C414(&v55);
          if (v54) {
            sub_216D16E0C(v54);
          }
          float64x2_t v50 = v63;
          double v32 = v64;
          sub_2168FD54C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a4, v30, v31);
          float32_t v33 = v32;
          uint64_t v34 = (float32x2_t *)(*(void *)(a4 + 32) + v26);
          float32x2_t *v34 = vcvt_f32_f64(v50);
          v34[1].f32[0] = v33;
          float64x2_t v51 = v65;
          double v35 = v66;
          sub_2168FD54C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a4, v36, v37);
          float v38 = v35;
          uint64_t v39 = *(void *)(a4 + 32) + v26;
          *(float32x2_t *)(v39 + 12) = vcvt_f32_f64(v51);
          *(float *)(v39 + 2sub_2168EBBB8(&a9, 0) = v38;
          if (v63.f64[0] > v65.f64[0] || v63.f64[1] > v65.f64[1] || (uint64_t v24 = v27, v64 > v66)) {
            uint64_t v24 = v28;
          }
          ++v27;
          v26 += 24;
          v25 += 8;
          uint64_t v28 = v24;
        }
        while (v29 != v27);
      }
      LODWORD(v59) = 0;
      uint64_t v58 = 0;
      unint64_t v53 = &v58;
      sub_2168FD278((unint64_t *)a4, 2 * v24 + 2, (uint64_t **)&v53);
      uint64_t v58 = (void **)v67;
      sub_216889A04(&v58);
    }
    pxrInternal__aapl__pxrReserved__::UsdGeomBoundable::~UsdGeomBoundable((pxrInternal__aapl__pxrReserved__::UsdGeomBoundable *)&v68);
  }
  else
  {
    *(void *)(a4 + 32) = 0;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
  }
}

void sub_216F21850(_Unwind_Exception *a1)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::GetConstraintTarget(uint64_t a1@<X0>, uint64_t a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdGeomConstraintTarget *a3@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomConstraintTarget::GetConstraintAttrName(a2, (uint64_t)&v15);
  sub_216D16CFC((uint64_t)v5, (uint64_t *)(a1 + 8), (_DWORD *)(a1 + 16));
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)v5, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v15, (uint64_t)v10);
  pxrInternal__aapl__pxrReserved__::UsdGeomConstraintTarget::UsdGeomConstraintTarget(a3, (const pxrInternal__aapl__pxrReserved__::UsdAttribute *)v10);
  if ((v14 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v14 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v13);
  sub_21697C414(&v12);
  if (v11) {
    sub_216D16E0C(v11);
  }
  if ((v9 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v9 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v8);
  sub_21697C414(&v7);
  if (v6) {
    sub_216D16E0C(v6);
  }
  if ((v15 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v15 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
}

void sub_216F219E4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  sub_216D2EDA0((uint64_t)va1);
  sub_216D16AD8((uint64_t)va);
  uint64_t v4 = *(void *)(v2 - 24);
  if ((v4 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v4 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::CreateConstraintTarget(uint64_t a1@<X0>, uint64_t a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdGeomConstraintTarget *a3@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomConstraintTarget::GetConstraintAttrName(a2, (uint64_t)&v26);
  uint64_t v5 = (uint64_t *)(a1 + 8);
  unint64_t v6 = (_DWORD *)(a1 + 16);
  sub_216D16CFC((uint64_t)&v16, v5, v6);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v16, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v26, (uint64_t)&v21);
  if ((v20 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v20 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v19);
  sub_21697C414(&v18);
  if (v17) {
    sub_216D16E0C(v17);
  }
  if ((pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)&v21, v7) & 1) == 0)
  {
    sub_216D16CFC((uint64_t)v11, v5, v6);
    uint64_t v8 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
    if (!v8) {
      uint64_t v8 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
    }
    pxrInternal__aapl__pxrReserved__::UsdPrim::CreateAttribute((uint64_t)v11, &v26, (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v8 + 360), 0, 0, (uint64_t)&v16);
    int v21 = v16;
    uint64_t v9 = v17;
    uint64_t v17 = 0;
    uint64_t v10 = v22;
    int v22 = v9;
    if (v10) {
      sub_216D16E0C(v10);
    }
    sub_21697DE94(&v23, &v18);
    sub_21697DEEC(&v24, &v19);
    if ((v25 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v25 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    uint64_t v25 = v20;
    uint64_t v20 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v19);
    sub_21697C414(&v18);
    if (v17) {
      sub_216D16E0C(v17);
    }
    if ((v15 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v15 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v14);
    sub_21697C414(&v13);
    if (v12) {
      sub_216D16E0C(v12);
    }
  }
  pxrInternal__aapl__pxrReserved__::UsdGeomConstraintTarget::UsdGeomConstraintTarget(a3, (const pxrInternal__aapl__pxrReserved__::UsdAttribute *)&v21);
  if ((v25 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v25 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v24);
  sub_21697C414(&v23);
  if (v22) {
    sub_216D16E0C(v22);
  }
  if ((v26 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v26 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
}

void sub_216F21C3C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  sub_216D16AD8((uint64_t)va);
  sub_216D2EDA0((uint64_t)va1);
  uint64_t v4 = *(void *)(v2 - 40);
  if ((v4 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v4 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::GetConstraintTargets(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this@<X0>, uint64_t *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  sub_216D16CFC((uint64_t)&v10, (uint64_t *)this + 1, (_DWORD *)this + 4);
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttributes((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v10, v15);
  if ((v14 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v14 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v13);
  sub_21697C414(&v12);
  if (v11) {
    sub_216D16E0C(v11);
  }
  for (long long i = *(_OWORD *)v15; (void)i != *((void *)&i + 1); sub_216F21F48(&i))
  {
    uint64_t v5 = (const pxrInternal__aapl__pxrReserved__::UsdAttribute *)sub_216F21E6C((uint64_t *)&i, v3, v4);
    pxrInternal__aapl__pxrReserved__::UsdGeomConstraintTarget::UsdGeomConstraintTarget((pxrInternal__aapl__pxrReserved__::UsdGeomConstraintTarget *)&v10, v5);
    if (pxrInternal__aapl__pxrReserved__::UsdGeomConstraintTarget::IsValid((pxrInternal__aapl__pxrReserved__::UsdGeomConstraintTarget *)&v10, v6))
    {
      unint64_t v7 = a2[1];
      if (v7 >= a2[2])
      {
        uint64_t v8 = sub_216F2275C(a2, (uint64_t)&v10);
      }
      else
      {
        sub_216D3B3EC((uint64_t)(a2 + 2), a2[1], (uint64_t)&v10);
        uint64_t v8 = v7 + 32;
        a2[1] = v7 + 32;
      }
      a2[1] = v8;
    }
    if ((v14 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v14 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v13);
    sub_21697C414(&v12);
    if (v11) {
      sub_216D16E0C(v11);
    }
  }
  uint64_t v10 = (void **)v15;
  sub_216D6CFF8(&v10);
}

void sub_216F21E08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_216D16AD8((uint64_t)va);
  sub_216F22654((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t sub_216F21E6C(uint64_t *a1, uint64_t a2, char *a3)
{
  uint64_t result = *a1;
  if (result == a1[1])
  {
    v5[0] = "tf/iterator.h";
    v5[1] = "operator*";
    double v5[2] = 271;
    void v5[3] = "Reference pxrInternal__aapl__pxrReserved__::TfIterator<const std::vector<pxrInternal__aapl__pxrReserved__::U"
            "sdAttribute>>::operator*() [T = const std::vector<pxrInternal__aapl__pxrReserved__::UsdAttribute>, Reverse = false]";
    char v6 = 0;
    int v7 = 4;
    pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper::IssueFatalError((pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper *)v5, (pxrInternal__aapl__pxrReserved__ *)"iterator exhausted", a3);
  }
  return result;
}

void sub_216F21EE4()
{
}

uint64_t sub_216F21EEC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  if ((v2 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 20));
  sub_21697C414((_DWORD *)(a1 + 16));
  uint64_t v3 = *(atomic_ullong **)(a1 + 8);
  if (v3) {
    sub_216D16E0C(v3);
  }
  return a1;
}

void *sub_216F21F48(void *a1)
{
  if (*a1 == a1[1])
  {
    v3[0] = "tf/iterator.h";
    v3[1] = "operator++";
    v3[2] = 250;
    v3[3] = "TfIterator<T, Reverse> &pxrInternal__aapl__pxrReserved__::TfIterator<const std::vector<pxrInternal__aapl__px"
            "rReserved__::UsdAttribute>>::operator++() [T = const std::vector<pxrInternal__aapl__pxrReserved__::UsdAttrib"
            "ute>, Reverse = false]";
    char v4 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v3, 1, (pxrInternal__aapl__pxrReserved__ *)"iterator exhausted");
  }
  else
  {
    *a1 += 32;
  }
  return a1;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::ComputeModelDrawMode(pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *this@<X0>, atomic_uint **a2@<X1>, atomic_uint **a3@<X8>)
{
  char v6 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v6) {
    char v6 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  int v7 = (atomic_uint *)*((void *)v6 + 59);
  float32_t v33 = v7;
  if ((v7 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)((unint64_t)v7 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    float32_t v33 = (atomic_uint *)((unint64_t)v33 & 0xFFFFFFFFFFFFFFF8);
  }
  uint64_t v8 = (uint64_t *)((char *)this + 8);
  uint64_t v9 = (_DWORD *)((char *)this + 16);
  sub_216D16CFC((uint64_t)&v28, v8, v9);
  if (sub_216F223A4((const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v28, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v33))
  {
    uint64_t v10 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v10) {
      uint64_t v10 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v11 = v33;
    uint64_t v12 = *((void *)v10 + 59);
    if ((v32 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v32 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v31);
    unint64_t v13 = (unint64_t)v11 & 0xFFFFFFFFFFFFFFF8;
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFF8;
    sub_21697C414(&v30);
    if (v29) {
      sub_216D16E0C(v29);
    }
    if (v13 != v14)
    {
      *a3 = v33;
      float32_t v33 = 0;
      goto LABEL_49;
    }
  }
  else
  {
    if ((v32 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v32 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v31);
    sub_21697C414(&v30);
    if (v29) {
      sub_216D16E0C(v29);
    }
  }
  uint64_t v15 = *a2;
  if (!*a2)
  {
    sub_216D16CFC((uint64_t)&v23, v8, v9);
    sub_216D6B1F8((uint64_t)&v23, (uint64_t)&v28);
    if ((v27 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v27 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v26);
    sub_21697C414(&v25);
    uint64_t v17 = v24;
    if (v24) {
LABEL_23:
    }
      sub_216D16E0C(v17);
    while ((pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)&v28, v16) & 1) != 0)
    {
      if (sub_216F223A4((const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v28, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v33))
      {
        int v18 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
        if (!v18) {
          int v18 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
        }
        if (((unint64_t)v33 & 0xFFFFFFFFFFFFFFF8) != (*((void *)v18 + 59) & 0xFFFFFFFFFFFFFFF8))
        {
          *a3 = v33;
          float32_t v33 = 0;
          if ((v32 & 7) != 0) {
            atomic_fetch_add_explicit((atomic_uint *volatile)(v32 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
          }
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v31);
          sub_21697C414(&v30);
          if (v29) {
            sub_216D16E0C(v29);
          }
          goto LABEL_49;
        }
      }
      sub_216D6B1F8((uint64_t)&v28, (uint64_t)&v23);
      int v28 = v23;
      int v19 = v24;
      int v24 = 0;
      uint64_t v20 = v29;
      uint64_t v29 = v19;
      if (v20) {
        sub_216D16E0C(v20);
      }
      sub_21697DE94(&v30, &v25);
      sub_21697DEEC(&v31, &v26);
      if ((v32 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v32 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      uint64_t v32 = v27;
      uint64_t v27 = 0;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v26);
      sub_21697C414(&v25);
      uint64_t v17 = v24;
      if (v24) {
        goto LABEL_23;
      }
    }
    if ((v32 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v32 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v31);
    sub_21697C414(&v30);
    if (v29) {
      sub_216D16E0C(v29);
    }
    int v21 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v21) {
      int v21 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v15 = (atomic_uint *)*((void *)v21 + 29);
  }
  *a3 = v15;
  if ((v15 & 7) != 0)
  {
    int v22 = (atomic_uint *)((unint64_t)v15 & 0xFFFFFFFFFFFFFFF8);
    if ((atomic_fetch_add_explicit(v22, 2u, memory_order_relaxed) & 1) == 0) {
      *a3 = v22;
    }
  }
LABEL_49:
  if ((v33 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)((unint64_t)v33 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
}

void sub_216F2233C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  if ((a18 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(a18 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_216F223A4(const pxrInternal__aapl__pxrReserved__::UsdPrim *a1, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2)
{
  if (sub_216EFB408((uint64_t)a1, a2))
  {
    sub_216D6B1F8((uint64_t)a1, (uint64_t)&v12);
    char IsDefined = pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)&v12, v3);
    if ((v16 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v16 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v15);
    sub_21697C414(&v14);
    if (v13) {
      sub_216D16E0C(v13);
    }
    if (IsDefined)
    {
      pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase((pxrInternal__aapl__pxrReserved__::UsdSchemaBase *)&v12, a1);
      uint64_t v16 = 0;
      uint64_t v12 = &unk_26C76CB40;
      pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI::GetModelDrawModeAttr((pxrInternal__aapl__pxrReserved__::UsdGeomModelAPI *)&v12, (uint64_t)&v7);
      if (pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)&v7, v5))pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<pxrInternal__aapl__pxrReserved__::TfToken>(); {
      if ((v11 & 7) != 0)
      }
        atomic_fetch_add_explicit((atomic_uint *volatile)(v11 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v10);
      sub_21697C414(&v9);
      if (v8) {
        sub_216D16E0C(v8);
      }
      pxrInternal__aapl__pxrReserved__::UsdAPISchemaBase::~UsdAPISchemaBase((pxrInternal__aapl__pxrReserved__::UsdAPISchemaBase *)&v12);
    }
  }
  return 0;
}

void sub_216F224EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  pxrInternal__aapl__pxrReserved__::UsdAPISchemaBase::~UsdAPISchemaBase((pxrInternal__aapl__pxrReserved__::UsdAPISchemaBase *)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_216F22524()
{
  sub_216851EE4((uint64_t)&v6, "Tf", "TfType::Define");
  sub_216D24064((unint64_t **)v5);
  unint64_t v0 = pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p, (char **)v5, 0);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  if (v5[0])
  {
    v5[1] = v5[0];
    operator delete(v5[0]);
  }
  while (v7--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v6);
  return v0;
}

void sub_216F22604(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a15) {
    operator delete(a15);
  }
  sub_21684E6B8(v16 - 32);
  _Unwind_Resume(a1);
}

void sub_216F22654(void ***a1)
{
  int v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    uint64_t v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 32;
        sub_216F226EC((uint64_t)(v1 + 2), v4);
      }
      while ((void *)v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_216F226EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if ((v3 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v3 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a2 + 20));
  sub_21697C414((_DWORD *)(a2 + 16));
  uint64_t v4 = *(atomic_ullong **)(a2 + 8);
  if (v4)
  {
    sub_216D16E0C(v4);
  }
}

uint64_t sub_216F2275C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = (a1[1] - *a1) >> 5;
  unint64_t v4 = v3 + 1;
  if ((unint64_t)(v3 + 1) >> 59) {
    sub_21677CB10();
  }
  uint64_t v6 = a1[2] - *a1;
  if (v6 >> 4 > v4) {
    unint64_t v4 = v6 >> 4;
  }
  if ((unint64_t)v6 >= 0x7FFFFFFFFFFFFFE0) {
    unint64_t v7 = 0x7FFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v7 = v4;
  }
  int v15 = a1 + 2;
  if (v7) {
    uint64_t v8 = (char *)sub_2168707F4((uint64_t)(a1 + 2), v7);
  }
  else {
    uint64_t v8 = 0;
  }
  uint64_t v11 = v8;
  uint64_t v12 = &v8[32 * v3];
  int v14 = &v8[32 * v7];
  sub_216D3B3EC((uint64_t)(a1 + 2), (uint64_t)v12, a2);
  unint64_t v13 = v12 + 32;
  sub_216F2284C(a1, &v11);
  uint64_t v9 = a1[1];
  sub_216F22A08(&v11);
  return v9;
}

void sub_216F22838(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216F22A08((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_216F2284C(uint64_t *a1, void *a2)
{
  uint64_t result = sub_216F228C4((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_216F228C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  void v13[2] = &v16;
  char v14 = 0;
  if (a3 == a5)
  {
    uint64_t v11 = a6;
  }
  else
  {
    uint64_t v9 = a3;
    do
    {
      v9 -= 32;
      sub_216D6C860(a1, v7 - 32, v9);
      uint64_t v7 = *((void *)&v16 + 1) - 32;
      *((void *)&v16 + 1) -= 32;
    }
    while (v9 != a5);
    uint64_t v11 = v16;
  }
  char v14 = 1;
  sub_216F2297C((uint64_t)v13);
  return v11;
}

uint64_t sub_216F2297C(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_216F229B4((uint64_t *)a1);
  }
  return a1;
}

void sub_216F229B4(uint64_t *a1)
{
  uint64_t v1 = *(void *)(a1[2] + 8);
  uint64_t v2 = *(void *)(a1[1] + 8);
  if (v1 != v2)
  {
    uint64_t v3 = *a1;
    do
    {
      sub_216F226EC(v3, v1);
      v1 += 32;
    }
    while (v1 != v2);
  }
}

void **sub_216F22A08(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void sub_216F22A3C(void *a1)
{
  uint64_t v2 = a1[1];
  for (uint64_t i = a1[2]; i != v2; uint64_t i = a1[2])
  {
    uint64_t v4 = a1[4];
    a1[2] = i - 32;
    sub_216F226EC(v4, i - 32);
  }
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI::~UsdGeomMotionAPI(pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI *this)
{
  pxrInternal__aapl__pxrReserved__::UsdAPISchemaBase::~UsdAPISchemaBase(this);

  operator delete(v1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI::Get(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  uint64_t v6 = sub_216D24140(a1);
  if (v7 & 1 | (unint64_t)v6)
  {
    uint64_t v8 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_216D01530(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(v8, a2, (uint64_t)&v9);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *((void *)a3 + 3) = 0;
    *(void *)a3 = &unk_26C76CB98;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  else
  {
    uint64_t v9 = "usdGeom/motionAPI.cpp";
    int v10 = (atomic_ullong *)"Get";
    uint64_t v11 = 51;
    unint64_t v12 = (unint64_t)"static UsdGeomMotionAPI pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI::Get(const UsdSta"
                            "gePtr &, const SdfPath &)";
    char v13 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v9, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v9) = 1;
    int v10 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v11);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v11 + 1);
    unint64_t v12 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *((void *)a3 + 3) = 0;
    *(void *)a3 = &unk_26C76CB98;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  if (v10) {
    sub_216D16E0C(v10);
  }
}

void sub_216F22C40(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216D16AD8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI::_GetSchemaKind(pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI *this)
{
  return 5;
}

uint64_t sub_216F22C68(pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI *a1, uint64_t a2)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI::_GetStaticTfType(a1);
  SchemaInfo = (pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry *)pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry::FindSchemaInfo((pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry *)&qword_267B92CB8, v4);
  if (SchemaInfo)
  {
    return pxrInternal__aapl__pxrReserved__::UsdPrim::_CanApplySingleApplyAPI(a1, SchemaInfo, a2);
  }
  else
  {
    v12[0] = "usd/prim.h";
    v12[1] = "CanApplyAPI";
    void v12[2] = 1024;
    void v12[3] = "BOOL pxrInternal__aapl__pxrReserved__::UsdPrim::CanApplyAPI(std::string *) const [SchemaType = pxrInternal_"
             "_aapl__pxrReserved__::UsdGeomMotionAPI]";
    char v13 = 0;
    uint64_t TypeName = pxrInternal__aapl__pxrReserved__::TfType::GetTypeName(v9);
    if (*(char *)(TypeName + 23) >= 0) {
      uint64_t v11 = (const char *)TypeName;
    }
    else {
      uint64_t v11 = *(const char **)TypeName;
    }
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v12, 1, (pxrInternal__aapl__pxrReserved__ *)"Class '%s' is not correctly registered with the UsdSchemaRegistry as a schema type. The schema may need to be regenerated.", v11);
    return 0;
  }
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI::Apply(pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI *this@<X0>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a2@<X8>)
{
  if (sub_216F22E50(this))
  {
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a2, this);
    *((void *)a2 + 3) = 0;
    *(void *)a2 = &unk_26C76CB98;
  }
  else
  {
    int v5 = 1;
    uint64_t v6 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v7);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v8);
    uint64_t v9 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a2, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v5);
    *((void *)a2 + 3) = 0;
    *(void *)a2 = &unk_26C76CB98;
    if ((v9 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v9 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v8);
    sub_21697C414(&v7);
    if (v6) {
      sub_216D16E0C(v6);
    }
  }
}

void sub_216F22E3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_216F22E50(pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI *a1)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI::_GetStaticTfType(a1);
  SchemaInfo = (const pxrInternal__aapl__pxrReserved__::TfToken *)pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry::FindSchemaInfo((pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry *)&qword_267B92CB8, v2);
  if (SchemaInfo)
  {
    return pxrInternal__aapl__pxrReserved__::UsdPrim::_ApplySingleApplyAPI(a1, SchemaInfo);
  }
  else
  {
    v10[0] = "usd/prim.h";
    v10[1] = "ApplyAPI";
    uint64_t v10[2] = 1147;
    void v10[3] = "BOOL pxrInternal__aapl__pxrReserved__::UsdPrim::ApplyAPI() const [SchemaType = pxrInternal__aapl__pxrReserv"
             "ed__::UsdGeomMotionAPI]";
    char v11 = 0;
    uint64_t TypeName = pxrInternal__aapl__pxrReserved__::TfType::GetTypeName(v7);
    if (*(char *)(TypeName + 23) >= 0) {
      uint64_t v9 = (const char *)TypeName;
    }
    else {
      uint64_t v9 = *(const char **)TypeName;
    }
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v10, 1, (pxrInternal__aapl__pxrReserved__ *)"Class '%s' is not correctly registered with the UsdSchemaRegistry as a schema type. The schema may need to be regenerated.", v9);
    return 0;
  }
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI::_GetStaticTfType(pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92CC0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92CC0))
  {
    __cxa_guard_release(&qword_267B92CC0);
  }
  return &qword_267B92CB8;
}

void sub_216F22F84(_Unwind_Exception *a1)
{
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI::_IsTypedSchema(pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92CD0, memory_order_acquire) & 1) == 0)
  {
    uint64_t v2 = (pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI *)__cxa_guard_acquire(&qword_267B92CD0);
    if (v2)
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI::_GetStaticTfType(v2);
      byte_267B92CC8 = sub_216D16508((char *)&qword_267B92CB8, v3, v4);
      __cxa_guard_release(&qword_267B92CD0);
    }
  }
  return byte_267B92CC8;
}

void sub_216F23004(_Unwind_Exception *a1)
{
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI::_GetTfType(pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI *this)
{
  return &qword_267B92CB8;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI::GetMotionBlurScaleAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  uint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    uint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 656), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F230DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI::CreateMotionBlurScaleAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  uint64_t v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    uint64_t v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 656), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 56), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI::GetVelocityScaleAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  uint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    uint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 672), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F23244(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI::CreateVelocityScaleAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  uint64_t v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    uint64_t v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 672), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 56), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI::GetNonlinearSampleCountAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  uint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    uint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 664), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F233AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI::CreateNonlinearSampleCountAttr(pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  uint64_t v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    uint64_t v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 664), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 16), 0, 0, a2, a3, a4);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI::GetSchemaAttributeNames(pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI *this)
{
  int v1 = (int)this;
  uint64_t v15 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92CF0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92CF0))
  {
    uint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v3) {
      uint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v4 = *((void *)v3 + 82);
    uint64_t v12 = v4;
    if ((v4 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v4 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v12 &= 0xFFFFFFFFFFFFFFF8;
    }
    int v5 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v5) {
      int v5 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v6 = *((void *)v5 + 84);
    uint64_t v13 = v6;
    if ((v6 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v6 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v13 &= 0xFFFFFFFFFFFFFFF8;
    }
    int v7 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v7) {
      int v7 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v8 = *((void *)v7 + 83);
    uint64_t v14 = v8;
    if ((v8 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v14 &= 0xFFFFFFFFFFFFFFF8;
    }
    sub_216D30CFC(&qword_267B92CD8, &v12, 3uLL);
    for (uint64_t i = 16; i != -8; i -= 8)
    {
      uint64_t v10 = *(uint64_t *)((char *)&v12 + i);
      if ((v10 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v10 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
    }
    __cxa_atexit((void (*)(void *))sub_216B554D0, &qword_267B92CD8, &dword_216758000);
    __cxa_guard_release(&qword_267B92CF0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92D10, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92D10))
  {
    SchemaAttributeNames = pxrInternal__aapl__pxrReserved__::UsdAPISchemaBase::GetSchemaAttributeNames((pxrInternal__aapl__pxrReserved__::UsdAPISchemaBase *)1);
    sub_216F23744((uint64_t **)SchemaAttributeNames);
    __cxa_atexit((void (*)(void *))sub_216B554D0, &qword_267B92CF8, &dword_216758000);
    __cxa_guard_release(&qword_267B92D10);
  }
  if (v1) {
    return &qword_267B92CF8;
  }
  else {
    return &qword_267B92CD8;
  }
}

void sub_216F236C0(_Unwind_Exception *a1)
{
}

void *sub_216F23744(uint64_t **a1)
{
  qword_267B92D00 = 0;
  unk_267B92D08 = 0;
  qword_267B92CF8 = 0;
  sub_216973388((char **)&qword_267B92CF8, ((unk_267B92CE0 - qword_267B92CD8) >> 3) + a1[1] - *a1);
  sub_216AE27E0(&qword_267B92CF8, (void *)qword_267B92D00, *a1, a1[1], a1[1] - *a1);
  return sub_216AE27E0(&qword_267B92CF8, (void *)qword_267B92D00, (uint64_t *)qword_267B92CD8, unk_267B92CE0, (unk_267B92CE0 - qword_267B92CD8) >> 3);
}

void sub_216F237DC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216889A04((void ***)va);
  _Unwind_Resume(a1);
}

float pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI::ComputeVelocityScale(uint64_t a1)
{
  sub_216D16CFC((uint64_t)&v5, (uint64_t *)(a1 + 8), (_DWORD *)(a1 + 16));
  int v1 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v1) {
    int v1 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  int v4 = 1065353216;
  float v2 = sub_216F238D4(&v5, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v1 + 672), (float *)&v4);
  if ((v9 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v9 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v8);
  sub_21697C414(&v7);
  if (v6) {
    sub_216D16E0C(v6);
  }
  return v2;
}

void sub_216F238B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_216D16AD8((uint64_t)va);
  _Unwind_Resume(a1);
}

float sub_216F238D4(int *a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, float *a3)
{
  int v27 = *a1;
  uint64_t v6 = (atomic_ullong *)*((void *)a1 + 1);
  int v28 = v6;
  if (v6) {
    atomic_fetch_add_explicit(v6 + 6, 1uLL, memory_order_relaxed);
  }
  sub_216981010(&v29, a1 + 4);
  sub_21698105C((_DWORD *)&v29 + 1, a1 + 5);
  uint64_t v8 = *((void *)a1 + 3);
  uint64_t v30 = v8;
  if ((v8 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v30 &= 0xFFFFFFFFFFFFFFF8;
  }
  pxrInternal__aapl__pxrReserved__::UsdObject::GetStage((pxrInternal__aapl__pxrReserved__::UsdObject *)&v27, v7, &v17);
  uint64_t v9 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_216D01530(&v17);
  pxrInternal__aapl__pxrReserved__::UsdStage::GetPseudoRoot(v9, (uint64_t)&v23);
  uint64_t v10 = (pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI *)v18;
  if (v18 && atomic_fetch_add_explicit(v18 + 2, 0xFFFFFFFF, memory_order_release) == 1) {
    uint64_t v10 = (pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI *))(*(void *)v10 + 8))(v10);
  }
  float v22 = *a3;
  while (v27 != v23 || v28 != v24 || v29 != v25 || (v30 & 0xFFFFFFFFFFFFFFF8) != (v26 & 0xFFFFFFFFFFFFFFF8))
  {
    pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI::_GetStaticTfType(v10);
    SchemaInfo = (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry::FindSchemaInfo((pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry *)&qword_267B92CB8, v11);
    if (pxrInternal__aapl__pxrReserved__::UsdPrim::_HasAPI((uint64_t)&v27, SchemaInfo))
    {
      pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v27, a2, (uint64_t)&v17);
      if (pxrInternal__aapl__pxrReserved__::UsdAttribute::HasAuthoredValue((pxrInternal__aapl__pxrReserved__::UsdAttribute *)&v17)) {
        pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<float>();
      }
      if ((v21 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v21 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_21697C414(&v19);
      if (v18) {
        sub_216D16E0C((atomic_ullong *)v18);
      }
    }
    sub_216D6B1F8((uint64_t)&v27, (uint64_t)&v17);
    int v27 = v17;
    uint64_t v13 = (atomic_ullong *)v18;
    int v18 = 0;
    uint64_t v14 = v28;
    int v28 = v13;
    if (v14) {
      sub_216D16E0C(v14);
    }
    sub_21697DE94((int *)&v29, &v19);
    sub_21697DEEC((int *)&v29 + 1, &v20);
    if ((v30 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v30 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    uint64_t v30 = v21;
    uint64_t v21 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
    sub_21697C414(&v19);
    uint64_t v10 = (pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI *)v18;
    if (v18) {
      sub_216D16E0C((atomic_ullong *)v18);
    }
  }
  float v16 = v22;
  if ((v26 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v26 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v25 + 1);
  sub_21697C414(&v25);
  if (v24) {
    sub_216D16E0C(v24);
  }
  if ((v30 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v30 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v29 + 1);
  sub_21697C414(&v29);
  if (v28) {
    sub_216D16E0C(v28);
  }
  return v16;
}

void sub_216F23C04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  sub_216D16AD8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI::ComputeNonlinearSampleCount(uint64_t a1)
{
  sub_216D16CFC((uint64_t)&v11, (uint64_t *)(a1 + 8), (_DWORD *)(a1 + 16));
  int v1 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v1) {
    int v1 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  int v26 = v11;
  int v27 = v12;
  if (v12) {
    atomic_fetch_add_explicit(v12 + 6, 1uLL, memory_order_relaxed);
  }
  sub_216981010(&v28, &v13);
  sub_21698105C((_DWORD *)&v28 + 1, &v14);
  uint64_t v29 = v15;
  if ((v15 & 7) != 0
    && (atomic_fetch_add_explicit((atomic_uint *volatile)(v15 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
  {
    v29 &= 0xFFFFFFFFFFFFFFF8;
  }
  pxrInternal__aapl__pxrReserved__::UsdObject::GetStage((pxrInternal__aapl__pxrReserved__::UsdObject *)&v26, v2, &v16);
  uint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_216D01530(&v16);
  pxrInternal__aapl__pxrReserved__::UsdStage::GetPseudoRoot(v3, (uint64_t)&v22);
  int v4 = (pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI *)v17;
  if (v17 && atomic_fetch_add_explicit(v17 + 2, 0xFFFFFFFF, memory_order_release) == 1) {
    int v4 = (pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI *))(*(void *)v4 + 8))(v4);
  }
  unsigned int v21 = 3;
  while (v26 != v22 || v27 != v23 || v28 != v24 || (v29 & 0xFFFFFFFFFFFFFFF8) != (v25 & 0xFFFFFFFFFFFFFFF8))
  {
    pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI::_GetStaticTfType(v4);
    SchemaInfo = (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry::FindSchemaInfo((pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry *)&qword_267B92CB8, v5);
    if (pxrInternal__aapl__pxrReserved__::UsdPrim::_HasAPI((uint64_t)&v26, SchemaInfo))
    {
      pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v26, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v1 + 664), (uint64_t)&v16);
      if (pxrInternal__aapl__pxrReserved__::UsdAttribute::HasAuthoredValue((pxrInternal__aapl__pxrReserved__::UsdAttribute *)&v16)) {
        pxrInternal__aapl__pxrReserved__::UsdAttribute::_Get<int>();
      }
      if ((v20 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v20 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v19);
      sub_21697C414(&v18);
      if (v17) {
        sub_216D16E0C((atomic_ullong *)v17);
      }
    }
    sub_216D6B1F8((uint64_t)&v26, (uint64_t)&v16);
    int v26 = v16;
    int v7 = (atomic_ullong *)v17;
    uint64_t v17 = 0;
    uint64_t v8 = v27;
    int v27 = v7;
    if (v8) {
      sub_216D16E0C(v8);
    }
    sub_21697DE94((int *)&v28, &v18);
    sub_21697DEEC((int *)&v28 + 1, &v19);
    if ((v29 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v29 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
    uint64_t v29 = v20;
    uint64_t v20 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v19);
    sub_21697C414(&v18);
    int v4 = (pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI *)v17;
    if (v17) {
      sub_216D16E0C((atomic_ullong *)v17);
    }
  }
  uint64_t v10 = v21;
  if ((v25 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v25 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v24 + 1);
  sub_21697C414(&v24);
  if (v23) {
    sub_216D16E0C(v23);
  }
  if ((v29 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v29 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v28 + 1);
  sub_21697C414(&v28);
  if (v27) {
    sub_216D16E0C(v27);
  }
  if ((v15 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v15 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v14);
  sub_21697C414(&v13);
  if (v12) {
    sub_216D16E0C(v12);
  }
  return v10;
}

void sub_216F24028(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_216D16AD8((uint64_t)va);
  _Unwind_Resume(a1);
}

float pxrInternal__aapl__pxrReserved__::UsdGeomMotionAPI::ComputeMotionBlurScale(uint64_t a1)
{
  sub_216D16CFC((uint64_t)&v5, (uint64_t *)(a1 + 8), (_DWORD *)(a1 + 16));
  int v1 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v1) {
    int v1 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  int v4 = 1065353216;
  float v2 = sub_216F238D4(&v5, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v1 + 656), (float *)&v4);
  if ((v9 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v9 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v8);
  sub_21697C414(&v7);
  if (v6) {
    sub_216D16E0C(v6);
  }
  return v2;
}

void sub_216F2418C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_216D16AD8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_216F241A8()
{
  sub_216851EE4((uint64_t)&v6, "Tf", "TfType::Define");
  sub_216D24064((unint64_t **)v5);
  unint64_t v0 = pxrInternal__aapl__pxrReserved__::TfType::Declare((long long *)__p, (char **)v5, 0);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  if (v5[0])
  {
    v5[1] = v5[0];
    operator delete(v5[0]);
  }
  while (v7--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v6);
  return v0;
}

void sub_216F24288(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a15) {
    operator delete(a15);
  }
  sub_21684E6B8(v16 - 32);
  _Unwind_Resume(a1);
}

void sub_216F242D8()
{
  sub_216F251D4();
  sub_216779094(__p, "NurbsCurves");
  sub_216F25300((char *)__p);
  if (v1 < 0) {
    operator delete(__p[0]);
  }
}

void sub_216F24328(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves::~UsdGeomNurbsCurves(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves *this)
{
  pxrInternal__aapl__pxrReserved__::UsdGeomCurves::~UsdGeomCurves(this);

  operator delete(v1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves::Get(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  uint64_t v6 = sub_216D24140(a1);
  if (v7 & 1 | (unint64_t)v6)
  {
    int v8 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_216D01530(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(v8, a2, (uint64_t)&v9);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76CBF0;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  else
  {
    uint64_t v9 = "usdGeom/nurbsCurves.cpp";
    uint64_t v10 = (atomic_ullong *)"Get";
    uint64_t v11 = 57;
    unint64_t v12 = (unint64_t)"static UsdGeomNurbsCurves pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves::Get(const Us"
                            "dStagePtr &, const SdfPath &)";
    char v13 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v9, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v9) = 1;
    uint64_t v10 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v11);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v11 + 1);
    unint64_t v12 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76CBF0;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  if (v10) {
    sub_216D16E0C(v10);
  }
}

void sub_216F244F4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_216D16AD8((uint64_t)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves::Define(uint64_t *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdSchemaBase *a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92D20, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92D20))
  {
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken((pxrInternal__aapl__pxrReserved__::TfToken *)&qword_267B92D18, "NurbsCurves");
    __cxa_atexit((void (*)(void *))sub_216BC90EC, &qword_267B92D18, &dword_216758000);
    __cxa_guard_release(&qword_267B92D20);
  }
  uint64_t v6 = sub_216D24140(a1);
  if (v7 & 1 | (unint64_t)v6)
  {
    int v8 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_216D01530(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::DefinePrim(v8, a2, &qword_267B92D18, (uint64_t)&v9);
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76CBF0;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  else
  {
    uint64_t v9 = "usdGeom/nurbsCurves.cpp";
    uint64_t v10 = (atomic_ullong *)"Define";
    uint64_t v11 = 70;
    unint64_t v12 = (unint64_t)"static UsdGeomNurbsCurves pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves::Define(const"
                            " UsdStagePtr &, const SdfPath &)";
    char v13 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v9, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid stage");
    LODWORD(v9) = 1;
    uint64_t v10 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v11);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v11 + 1);
    unint64_t v12 = 0;
    pxrInternal__aapl__pxrReserved__::UsdSchemaBase::UsdSchemaBase(a3, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v9);
    *(void *)a3 = &unk_26C76CBF0;
    if ((v12 & 7) != 0) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_21697C414(&v11);
  if (v10) {
    sub_216D16E0C(v10);
  }
}

void sub_216F24700(_Unwind_Exception *a1)
{
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves::_GetSchemaKind(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves *this)
{
  return 3;
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves::_GetStaticTfType(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92D30, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92D30))
  {
    __cxa_guard_release(&qword_267B92D30);
  }
  return &qword_267B92D28;
}

void sub_216F247A8(_Unwind_Exception *a1)
{
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves::_IsTypedSchema(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92D40, memory_order_acquire) & 1) == 0)
  {
    float v2 = (pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves *)__cxa_guard_acquire(&qword_267B92D40);
    if (v2)
    {
      pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves::_GetStaticTfType(v2);
      byte_267B92D38 = sub_216D16508((char *)&qword_267B92D28, v3, v4);
      __cxa_guard_release(&qword_267B92D40);
    }
  }
  return byte_267B92D38;
}

void sub_216F24828(_Unwind_Exception *a1)
{
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves::_GetTfType(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves *this)
{
  return &qword_267B92D28;
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves::GetOrderAttr(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  uint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    uint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 720), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F24900(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves::CreateOrderAttr(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  uint64_t v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    uint64_t v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 720), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 464), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves::GetKnotsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  uint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    uint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 512), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F24A68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves::CreateKnotsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  uint64_t v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    uint64_t v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 512), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 520), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves::GetRangesAttr(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  uint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    uint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 944), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F24BD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves::CreateRangesAttr(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  uint64_t v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    uint64_t v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 944), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 632), 0, 0, a2, a3, a4);
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves::GetPointWeightsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves *this@<X0>, uint64_t a2@<X8>)
{
  sub_216D16CFC((uint64_t)&v4, (uint64_t *)this + 1, (_DWORD *)this + 4);
  uint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v3) {
    uint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetAttribute((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v4, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v3 + 824), a2);
  if ((v8 & 7) != 0) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  sub_21697C414(&v6);
  if (v5) {
    sub_216D16E0C(v5);
  }
}

void sub_216F24D38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves::CreatePointWeightsAttr(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves *this@<X0>, std::type_info *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  if (!v8) {
    uint64_t v8 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
  }
  uint64_t v9 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  if (!v9) {
    uint64_t v9 = sub_2169914D8((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType::_Init *)&pxrInternal__aapl__pxrReserved__::SdfValueTypeNames);
  }

  pxrInternal__aapl__pxrReserved__::UsdSchemaBase::_CreateAttr((uint64_t)this, (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)((char *)v8 + 824), (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeNamesType *)((char *)v9 + 520), 0, 0, a2, a3, a4);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves::GetSchemaAttributeNames(pxrInternal__aapl__pxrReserved__::UsdGeomNurbsCurves *this)
{
  int v1 = (int)this;
  uint64_t v18 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92D60, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92D60))
  {
    uint64_t v3 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v3) {
      uint64_t v3 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v4 = *((void *)v3 + 90);
    uint64_t v14 = v4;
    if ((v4 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v4 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v14 &= 0xFFFFFFFFFFFFFFF8;
    }
    int v5 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v5) {
      int v5 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v6 = *((void *)v5 + 64);
    uint64_t v15 = v6;
    if ((v6 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v6 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v15 &= 0xFFFFFFFFFFFFFFF8;
    }
    int v7 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v7) {
      int v7 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v8 = *((void *)v7 + 118);
    uint64_t v16 = v8;
    if ((v8 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v8 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v16 &= 0xFFFFFFFFFFFFFFF8;
    }
    uint64_t v9 = (pxrInternal__aapl__pxrReserved__::UsdGeomTokensType *)atomic_load((unint64_t *)&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    if (!v9) {
      uint64_t v9 = sub_216F00634(&pxrInternal__aapl__pxrReserved__::UsdGeomTokens);
    }
    uint64_t v10 = *((void *)v9 + 103);
    uint64_t v17 = v10;
    if ((v10 & 7) != 0
      && (atomic_fetch_add_explicit((atomic_uint *volatile)(v10 & 0xFFFFFFFFFFFFFFF8), 2u, memory_order_relaxed) & 1) == 0)
    {
      v17 &= 0xFFFFFFFFFFFFFFF8;
    }
    sub_216D30CFC(&qword_267B92D48, &v14, 4uLL);
    for (uint64_t i = 24; i != -8; i -= 8)
    {
      uint64_t v12 = *(uint64_t *)((char *)&v14 + i);
      if ((v12 & 7) != 0) {
        atomic_fetch_add_explicit((atomic_uint *volatile)(v12 & 0xFFFFFFFFFFFFFFF8), 0xFFFFFFFE, memory_order_release);
      }
    }
    __cxa_atexit((void (*)(void *))sub_216B554D0, &qword_267B92D48, &dword_216758000);
    __cxa_guard_release(&qword_267B92D60);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267B92D80, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267B92D80))
  {
    SchemaAttributeNames = pxrInternal__aapl__pxrReserved__::UsdGeomCurves::GetSchemaAttributeNames((pxrInternal__aapl__pxrReserved__::UsdGeomCurves *)1);
    sub_216F2511C((uint64_t **)SchemaAttributeNames);
    __cxa_atexit((void (*)(void *))sub_216B554D0, &qword_267B92D68, &dword_216758000);
    __cxa_guard_release(&qword_267B92D80);
  }
  if (v1) {
    return &qword_267B92D68;
  }
  else {
    return &qword_267B92D48;
  }
}